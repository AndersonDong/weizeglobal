(function(global) {

global.__DEV__ = true;

global.__BUNDLE_START_TIME__ = Date.now();
})(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this);
(function(global) {

'use strict';

global.require = _require;
global.__d = define;

var modules = Object.create(null);
if (__DEV__) {
  var verboseNamesToModuleIds = Object.create(null);
}

function define(factory, moduleId, dependencyMap) {
  if (moduleId in modules) {
    return;
  }
  modules[moduleId] = {
    dependencyMap: dependencyMap,
    exports: undefined,
    factory: factory,
    hasError: false,
    isInitialized: false
  };
  if (__DEV__) {
    modules[moduleId].hot = createHotReloadingObject();

    var _verboseName = arguments[3];
    if (_verboseName) {
      modules[moduleId].verboseName = _verboseName;
      verboseNamesToModuleIds[_verboseName] = moduleId;
    }
  }
}

function _require(moduleId) {
  if (__DEV__ && typeof moduleId === 'string') {
    var _verboseName2 = moduleId;
    moduleId = verboseNamesToModuleIds[moduleId];
    if (moduleId == null) {
      throw new Error('Unknown named module: \'' + _verboseName2 + '\'');
    } else {
      console.warn('Requiring module \'' + _verboseName2 + '\' by name is only supported for ' + 'debugging purposes and will BREAK IN PRODUCTION!');
    }
  }

  var moduleIdReallyIsNumber = moduleId;
  var module = modules[moduleIdReallyIsNumber];
  return module && module.isInitialized ? module.exports : guardedLoadModule(moduleIdReallyIsNumber, module);
}

var inGuard = false;
function guardedLoadModule(moduleId, module) {
  if (!inGuard && global.ErrorUtils) {
    inGuard = true;
    var returnValue = void 0;
    try {
      returnValue = loadModuleImplementation(moduleId, module);
    } catch (e) {
      global.ErrorUtils.reportFatalError(e);
    }
    inGuard = false;
    return returnValue;
  } else {
    return loadModuleImplementation(moduleId, module);
  }
}

function loadModuleImplementation(moduleId, module) {
  var nativeRequire = global.nativeRequire;
  if (!module && nativeRequire) {
    nativeRequire(moduleId);
    module = modules[moduleId];
  }

  if (!module) {
    throw unknownModuleError(moduleId);
  }

  if (module.hasError) {
    throw moduleThrewError(moduleId);
  }

  if (__DEV__) {
    var Systrace = _require.Systrace;
  }

  module.isInitialized = true;
  var exports = module.exports = {};
  var _module = module,
      factory = _module.factory,
      dependencyMap = _module.dependencyMap;

  try {
    if (__DEV__) {
      Systrace.beginEvent('JS_require_' + (module.verboseName || moduleId));
    }

    var _moduleObject = { exports: exports };
    if (__DEV__ && module.hot) {
      _moduleObject.hot = module.hot;
    }

    factory(global, _require, _moduleObject, exports, dependencyMap);

    if (!__DEV__) {
      module.factory = undefined;
    }

    if (__DEV__) {
      Systrace.endEvent();
    }
    return module.exports = _moduleObject.exports;
  } catch (e) {
    module.hasError = true;
    module.isInitialized = false;
    module.exports = undefined;
    throw e;
  }
}

function unknownModuleError(id) {
  var message = 'Requiring unknown module "' + id + '".';
  if (__DEV__) {
    message += 'If you are sure the module is there, try restarting the packager or running "npm install".';
  }
  return Error(message);
}

function moduleThrewError(id) {
  return Error('Requiring module "' + id + '", which threw an exception.');
}

if (__DEV__) {
  _require.Systrace = { beginEvent: function beginEvent() {}, endEvent: function endEvent() {} };

  var createHotReloadingObject = function createHotReloadingObject() {
    var hot = {
      acceptCallback: null,
      accept: function accept(callback) {
        hot.acceptCallback = callback;
      }
    };
    return hot;
  };

  var acceptAll = function acceptAll(dependentModules, inverseDependencies) {
    if (!dependentModules || dependentModules.length === 0) {
      return true;
    }

    var notAccepted = dependentModules.filter(function (module) {
      return !_accept(module, undefined, inverseDependencies);
    });

    var parents = [];
    for (var i = 0; i < notAccepted.length; i++) {
      if (inverseDependencies[notAccepted[i]].length === 0) {
        return false;
      }

      parents.push.apply(parents, babelHelpers.toConsumableArray(inverseDependencies[notAccepted[i]]));
    }

    return acceptAll(parents, inverseDependencies);
  };

  var _accept = function _accept(id, factory, inverseDependencies) {
    var mod = modules[id];

    if (!mod && factory) {
      define(factory, id);
      return true;
    }

    var hot = mod.hot;

    if (!hot) {
      console.warn('Cannot accept module because Hot Module Replacement ' + 'API was not installed.');
      return false;
    }

    if (factory) {
      mod.factory = factory;
    }
    mod.hasError = false;
    mod.isInitialized = false;
    _require(id);

    if (hot.acceptCallback) {
      hot.acceptCallback();
      return true;
    } else {
      if (!inverseDependencies) {
        throw new Error('Undefined `inverseDependencies`');
      }

      return acceptAll(inverseDependencies[id], inverseDependencies);
    }
  };

  global.__accept = _accept;
}
})(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this);
(function(global) {

Object.assign = function (target, sources) {
  if (__DEV__) {
    if (target == null) {
      throw new TypeError('Object.assign target cannot be null or undefined');
    }
    if (typeof target !== 'object' && typeof target !== 'function') {
      throw new TypeError('In this environment the target of assign MUST be an object.' + 'This error is a performance optimization and not spec compliant.');
    }
  }

  for (var nextIndex = 1; nextIndex < arguments.length; nextIndex++) {
    var nextSource = arguments[nextIndex];
    if (nextSource == null) {
      continue;
    }

    if (__DEV__) {
      if (typeof nextSource !== 'object' && typeof nextSource !== 'function') {
        throw new TypeError('In this environment the sources for assign MUST be an object.' + 'This error is a performance optimization and not spec compliant.');
      }
    }

    for (var key in nextSource) {
      if (__DEV__) {
        var hasOwnProperty = Object.prototype.hasOwnProperty;
        if (!hasOwnProperty.call(nextSource, key)) {
          throw new TypeError('One of the sources for assign has an enumerable key on the ' + 'prototype chain. Are you trying to assign a prototype property? ' + 'We don\'t allow it, as this is an edge case that we do not support. ' + 'This error is a performance optimization and not spec compliant.');
        }
      }
      target[key] = nextSource[key];
    }
  }

  return target;
};
})(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this);
(function(global) {
var inspect = function () {

  function inspect(obj, opts) {
    var ctx = {
      seen: [],
      stylize: stylizeNoColor
    };
    return formatValue(ctx, obj, opts.depth);
  }

  function stylizeNoColor(str, styleType) {
    return str;
  }

  function arrayToHash(array) {
    var hash = {};

    array.forEach(function (val, idx) {
      hash[val] = true;
    });

    return hash;
  }

  function formatValue(ctx, value, recurseTimes) {
    var primitive = formatPrimitive(ctx, value);
    if (primitive) {
      return primitive;
    }

    var keys = Object.keys(value);
    var visibleKeys = arrayToHash(keys);

    if (isError(value) && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
      return formatError(value);
    }

    if (keys.length === 0) {
      if (isFunction(value)) {
        var name = value.name ? ': ' + value.name : '';
        return ctx.stylize('[Function' + name + ']', 'special');
      }
      if (isRegExp(value)) {
        return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
      }
      if (isDate(value)) {
        return ctx.stylize(Date.prototype.toString.call(value), 'date');
      }
      if (isError(value)) {
        return formatError(value);
      }
    }

    var base = '',
        array = false,
        braces = ['{', '}'];

    if (isArray(value)) {
      array = true;
      braces = ['[', ']'];
    }

    if (isFunction(value)) {
      var n = value.name ? ': ' + value.name : '';
      base = ' [Function' + n + ']';
    }

    if (isRegExp(value)) {
      base = ' ' + RegExp.prototype.toString.call(value);
    }

    if (isDate(value)) {
      base = ' ' + Date.prototype.toUTCString.call(value);
    }

    if (isError(value)) {
      base = ' ' + formatError(value);
    }

    if (keys.length === 0 && (!array || value.length == 0)) {
      return braces[0] + base + braces[1];
    }

    if (recurseTimes < 0) {
      if (isRegExp(value)) {
        return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
      } else {
        return ctx.stylize('[Object]', 'special');
      }
    }

    ctx.seen.push(value);

    var output;
    if (array) {
      output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
    } else {
      output = keys.map(function (key) {
        return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
      });
    }

    ctx.seen.pop();

    return reduceToSingleString(output, base, braces);
  }

  function formatPrimitive(ctx, value) {
    if (isUndefined(value)) return ctx.stylize('undefined', 'undefined');
    if (isString(value)) {
      var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '').replace(/'/g, "\\'").replace(/\\"/g, '"') + '\'';
      return ctx.stylize(simple, 'string');
    }
    if (isNumber(value)) return ctx.stylize('' + value, 'number');
    if (isBoolean(value)) return ctx.stylize('' + value, 'boolean');

    if (isNull(value)) return ctx.stylize('null', 'null');
  }

  function formatError(value) {
    return '[' + Error.prototype.toString.call(value) + ']';
  }

  function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
    var output = [];
    for (var i = 0, l = value.length; i < l; ++i) {
      if (hasOwnProperty(value, String(i))) {
        output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, String(i), true));
      } else {
        output.push('');
      }
    }
    keys.forEach(function (key) {
      if (!key.match(/^\d+$/)) {
        output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, key, true));
      }
    });
    return output;
  }

  function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
    var name, str, desc;
    desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };
    if (desc.get) {
      if (desc.set) {
        str = ctx.stylize('[Getter/Setter]', 'special');
      } else {
        str = ctx.stylize('[Getter]', 'special');
      }
    } else {
      if (desc.set) {
        str = ctx.stylize('[Setter]', 'special');
      }
    }
    if (!hasOwnProperty(visibleKeys, key)) {
      name = '[' + key + ']';
    }
    if (!str) {
      if (ctx.seen.indexOf(desc.value) < 0) {
        if (isNull(recurseTimes)) {
          str = formatValue(ctx, desc.value, null);
        } else {
          str = formatValue(ctx, desc.value, recurseTimes - 1);
        }
        if (str.indexOf('\n') > -1) {
          if (array) {
            str = str.split('\n').map(function (line) {
              return '  ' + line;
            }).join('\n').substr(2);
          } else {
            str = '\n' + str.split('\n').map(function (line) {
              return '   ' + line;
            }).join('\n');
          }
        }
      } else {
        str = ctx.stylize('[Circular]', 'special');
      }
    }
    if (isUndefined(name)) {
      if (array && key.match(/^\d+$/)) {
        return str;
      }
      name = JSON.stringify('' + key);
      if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
        name = name.substr(1, name.length - 2);
        name = ctx.stylize(name, 'name');
      } else {
        name = name.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'");
        name = ctx.stylize(name, 'string');
      }
    }

    return name + ': ' + str;
  }

  function reduceToSingleString(output, base, braces) {
    var numLinesEst = 0;
    var length = output.reduce(function (prev, cur) {
      numLinesEst++;
      if (cur.indexOf('\n') >= 0) numLinesEst++;
      return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
    }, 0);

    if (length > 60) {
      return braces[0] + (base === '' ? '' : base + '\n ') + ' ' + output.join(',\n  ') + ' ' + braces[1];
    }

    return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
  }

  function isArray(ar) {
    return Array.isArray(ar);
  }

  function isBoolean(arg) {
    return typeof arg === 'boolean';
  }

  function isNull(arg) {
    return arg === null;
  }

  function isNullOrUndefined(arg) {
    return arg == null;
  }

  function isNumber(arg) {
    return typeof arg === 'number';
  }

  function isString(arg) {
    return typeof arg === 'string';
  }

  function isSymbol(arg) {
    return typeof arg === 'symbol';
  }

  function isUndefined(arg) {
    return arg === void 0;
  }

  function isRegExp(re) {
    return isObject(re) && objectToString(re) === '[object RegExp]';
  }

  function isObject(arg) {
    return typeof arg === 'object' && arg !== null;
  }

  function isDate(d) {
    return isObject(d) && objectToString(d) === '[object Date]';
  }

  function isError(e) {
    return isObject(e) && (objectToString(e) === '[object Error]' || e instanceof Error);
  }

  function isFunction(arg) {
    return typeof arg === 'function';
  }

  function isPrimitive(arg) {
    return arg === null || typeof arg === 'boolean' || typeof arg === 'number' || typeof arg === 'string' || typeof arg === 'symbol' || typeof arg === 'undefined';
  }

  function objectToString(o) {
    return Object.prototype.toString.call(o);
  }

  function hasOwnProperty(obj, prop) {
    return Object.prototype.hasOwnProperty.call(obj, prop);
  }

  return inspect;
}();

var OBJECT_COLUMN_NAME = '(index)';
var LOG_LEVELS = {
  trace: 0,
  info: 1,
  warn: 2,
  error: 3
};
var INSPECTOR_LEVELS = [];
INSPECTOR_LEVELS[LOG_LEVELS.trace] = 'debug';
INSPECTOR_LEVELS[LOG_LEVELS.info] = 'log';
INSPECTOR_LEVELS[LOG_LEVELS.warn] = 'warning';
INSPECTOR_LEVELS[LOG_LEVELS.error] = 'error';

var INSPECTOR_FRAMES_TO_SKIP = __DEV__ ? 2 : 1;

function setupConsole(global) {
  if (!global.nativeLoggingHook) {
    return;
  }

  function getNativeLogFunction(level) {
    return function () {
      var str = void 0;
      if (arguments.length === 1 && typeof arguments[0] === 'string') {
        str = arguments[0];
      } else {
        str = Array.prototype.map.call(arguments, function (arg) {
          return inspect(arg, { depth: 10 });
        }).join(', ');
      }

      var logLevel = level;
      if (str.slice(0, 9) === 'Warning: ' && logLevel >= LOG_LEVELS.error) {
        logLevel = LOG_LEVELS.warn;
      }
      if (global.__inspectorLog) {
        global.__inspectorLog(INSPECTOR_LEVELS[logLevel], str, [].slice.call(arguments), INSPECTOR_FRAMES_TO_SKIP);
      }
      global.nativeLoggingHook(str, logLevel);
    };
  }

  function repeat(element, n) {
    return Array.apply(null, Array(n)).map(function () {
      return element;
    });
  };

  function consoleTablePolyfill(rows) {
    if (!Array.isArray(rows)) {
      var data = rows;
      rows = [];
      for (var key in data) {
        if (data.hasOwnProperty(key)) {
          var row = data[key];
          row[OBJECT_COLUMN_NAME] = key;
          rows.push(row);
        }
      }
    }
    if (rows.length === 0) {
      global.nativeLoggingHook('', LOG_LEVELS.info);
      return;
    }

    var columns = Object.keys(rows[0]).sort();
    var stringRows = [];
    var columnWidths = [];

    columns.forEach(function (k, i) {
      columnWidths[i] = k.length;
      for (var j = 0; j < rows.length; j++) {
        var cellStr = (rows[j][k] || '?').toString();
        stringRows[j] = stringRows[j] || [];
        stringRows[j][i] = cellStr;
        columnWidths[i] = Math.max(columnWidths[i], cellStr.length);
      }
    });

    function joinRow(row, space) {
      var cells = row.map(function (cell, i) {
        var extraSpaces = repeat(' ', columnWidths[i] - cell.length).join('');
        return cell + extraSpaces;
      });
      space = space || ' ';
      return cells.join(space + '|' + space);
    };

    var separators = columnWidths.map(function (columnWidth) {
      return repeat('-', columnWidth).join('');
    });
    var separatorRow = joinRow(separators, '-');
    var header = joinRow(columns);
    var table = [header, separatorRow];

    for (var i = 0; i < rows.length; i++) {
      table.push(joinRow(stringRows[i]));
    }

    global.nativeLoggingHook('\n' + table.join('\n'), LOG_LEVELS.info);
  }

  var originalConsole = global.console;
  var descriptor = Object.getOwnPropertyDescriptor(global, 'console');
  if (descriptor) {
    Object.defineProperty(global, 'originalConsole', descriptor);
  }

  global.console = {
    error: getNativeLogFunction(LOG_LEVELS.error),
    info: getNativeLogFunction(LOG_LEVELS.info),
    log: getNativeLogFunction(LOG_LEVELS.info),
    warn: getNativeLogFunction(LOG_LEVELS.warn),
    trace: getNativeLogFunction(LOG_LEVELS.trace),
    debug: getNativeLogFunction(LOG_LEVELS.trace),
    table: consoleTablePolyfill
  };

  if (__DEV__ && originalConsole) {
    Object.keys(console).forEach(function (methodName) {
      var reactNativeMethod = console[methodName];
      if (originalConsole[methodName]) {
        console[methodName] = function () {
          originalConsole[methodName].apply(originalConsole, arguments);
          reactNativeMethod.apply(console, arguments);
        };
      }
    });
  }
}

if (typeof module !== 'undefined') {
  module.exports = setupConsole;
} else {
  setupConsole(global);
}
})(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this);
(function(global) {

var _inGuard = 0;

var _globalHandler = function onError(e) {
  throw e;
};

var ErrorUtils = {
  setGlobalHandler: function setGlobalHandler(fun) {
    _globalHandler = fun;
  },
  getGlobalHandler: function getGlobalHandler() {
    return _globalHandler;
  },
  reportError: function reportError(error) {
    _globalHandler && _globalHandler(error);
  },
  reportFatalError: function reportFatalError(error) {
    _globalHandler && _globalHandler(error, true);
  },
  applyWithGuard: function applyWithGuard(fun, context, args) {
    try {
      _inGuard++;
      return fun.apply(context, args);
    } catch (e) {
      ErrorUtils.reportError(e);
    } finally {
      _inGuard--;
    }
  },
  applyWithGuardIfNeeded: function applyWithGuardIfNeeded(fun, context, args) {
    if (ErrorUtils.inGuard()) {
      return fun.apply(context, args);
    } else {
      ErrorUtils.applyWithGuard(fun, context, args);
    }
  },
  inGuard: function inGuard() {
    return _inGuard;
  },
  guard: function guard(fun, name, context) {
    if (typeof fun !== 'function') {
      console.warn('A function must be passed to ErrorUtils.guard, got ', fun);
      return null;
    }
    name = name || fun.name || '<generated guard>';
    function guarded() {
      return ErrorUtils.applyWithGuard(fun, context || this, arguments, null, name);
    }

    return guarded;
  }
};

global.ErrorUtils = ErrorUtils;
})(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this);
(function(global) {

if (Number.EPSILON === undefined) {
  Object.defineProperty(Number, 'EPSILON', {
    value: Math.pow(2, -52)
  });
}
if (Number.MAX_SAFE_INTEGER === undefined) {
  Object.defineProperty(Number, 'MAX_SAFE_INTEGER', {
    value: Math.pow(2, 53) - 1
  });
}
if (Number.MIN_SAFE_INTEGER === undefined) {
  Object.defineProperty(Number, 'MIN_SAFE_INTEGER', {
    value: -(Math.pow(2, 53) - 1)
  });
}
if (!Number.isNaN) {
  var globalIsNaN = global.isNaN;
  Object.defineProperty(Number, 'isNaN', {
    configurable: true,
    enumerable: false,
    value: function isNaN(value) {
      return typeof value === 'number' && globalIsNaN(value);
    },
    writable: true
  });
}
})(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this);
(function(global) {

if (!String.prototype.startsWith) {
  String.prototype.startsWith = function (search) {
    'use strict';

    if (this == null) {
      throw TypeError();
    }
    var string = String(this);
    var pos = arguments.length > 1 ? Number(arguments[1]) || 0 : 0;
    var start = Math.min(Math.max(pos, 0), string.length);
    return string.indexOf(String(search), pos) === start;
  };
}

if (!String.prototype.endsWith) {
  String.prototype.endsWith = function (search) {
    'use strict';

    if (this == null) {
      throw TypeError();
    }
    var string = String(this);
    var stringLength = string.length;
    var searchString = String(search);
    var pos = arguments.length > 1 ? Number(arguments[1]) || 0 : stringLength;
    var end = Math.min(Math.max(pos, 0), stringLength);
    var start = end - searchString.length;
    if (start < 0) {
      return false;
    }
    return string.lastIndexOf(searchString, start) === start;
  };
}

if (!String.prototype.repeat) {
  String.prototype.repeat = function (count) {
    'use strict';

    if (this == null) {
      throw TypeError();
    }
    var string = String(this);
    count = Number(count) || 0;
    if (count < 0 || count === Infinity) {
      throw RangeError();
    }
    if (count === 1) {
      return string;
    }
    var result = '';
    while (count) {
      if (count & 1) {
        result += string;
      }
      if (count >>= 1) {
        string += string;
      }
    }
    return result;
  };
}

if (!String.prototype.includes) {
  String.prototype.includes = function (search, start) {
    'use strict';

    if (typeof start !== 'number') {
      start = 0;
    }

    if (start + search.length > this.length) {
      return false;
    } else {
      return this.indexOf(search, start) !== -1;
    }
  };
}
})(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this);
(function(global) {
function findIndex(predicate, context) {
  if (this == null) {
    throw new TypeError('Array.prototype.findIndex called on null or undefined');
  }
  if (typeof predicate !== 'function') {
    throw new TypeError('predicate must be a function');
  }
  var list = Object(this);
  var length = list.length >>> 0;
  for (var i = 0; i < length; i++) {
    if (predicate.call(context, list[i], i, list)) {
      return i;
    }
  }
  return -1;
}

if (!Array.prototype.findIndex) {
  Object.defineProperty(Array.prototype, 'findIndex', {
    enumerable: false,
    writable: true,
    configurable: true,
    value: findIndex
  });
}

if (!Array.prototype.find) {
  Object.defineProperty(Array.prototype, 'find', {
    enumerable: false,
    writable: true,
    configurable: true,
    value: function value(predicate, context) {
      if (this == null) {
        throw new TypeError('Array.prototype.find called on null or undefined');
      }
      var index = findIndex.call(this, predicate, context);
      return index === -1 ? undefined : this[index];
    }
  });
}

if (!Array.prototype.includes) {
  Object.defineProperty(Array.prototype, 'includes', {
    enumerable: false,
    writable: true,
    configurable: true,
    value: function value(searchElement) {
      var O = Object(this);
      var len = parseInt(O.length) || 0;
      if (len === 0) {
        return false;
      }
      var n = parseInt(arguments[1]) || 0;
      var k;
      if (n >= 0) {
        k = n;
      } else {
        k = len + n;
        if (k < 0) {
          k = 0;
        }
      }
      var currentElement;
      while (k < len) {
        currentElement = O[k];
        if (searchElement === currentElement || searchElement !== searchElement && currentElement !== currentElement) {
          return true;
        }
        k++;
      }
      return false;
    }
  });
}
})(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this);
(function(global) {
if (!Array.from) {
  Array.from = function (arrayLike) {
    if (arrayLike == null) {
      throw new TypeError('Object is null or undefined');
    }

    var mapFn = arguments[1];
    var thisArg = arguments[2];

    var C = this;
    var items = Object(arrayLike);
    var symbolIterator = typeof Symbol === 'function' ? typeof Symbol === 'function' ? Symbol.iterator : '@@iterator' : '@@iterator';
    var mapping = typeof mapFn === 'function';
    var usingIterator = typeof items[symbolIterator] === 'function';
    var key = 0;
    var ret;
    var value;

    if (usingIterator) {
      ret = typeof C === 'function' ? new C() : [];
      var it = items[symbolIterator]();
      var next;

      while (!(next = it.next()).done) {
        value = next.value;

        if (mapping) {
          value = mapFn.call(thisArg, value, key);
        }

        ret[key] = value;
        key += 1;
      }

      ret.length = key;
      return ret;
    }

    var len = items.length;
    if (isNaN(len) || len < 0) {
      len = 0;
    }

    ret = typeof C === 'function' ? new C(len) : new Array(len);

    while (key < len) {
      value = items[key];

      if (mapping) {
        value = mapFn.call(thisArg, value, key);
      }

      ret[key] = value;

      key += 1;
    }

    ret.length = key;
    return ret;
  };
}
})(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this);
(function(global) {

(function () {
  'use strict';

  var hasOwnProperty = Object.prototype.hasOwnProperty;

  if (typeof Object.entries !== 'function') {
    Object.entries = function (object) {
      if (object == null) {
        throw new TypeError('Object.entries called on non-object');
      }

      var entries = [];
      for (var key in object) {
        if (hasOwnProperty.call(object, key)) {
          entries.push([key, object[key]]);
        }
      }
      return entries;
    };
  }

  if (typeof Object.values !== 'function') {
    Object.values = function (object) {
      if (object == null) {
        throw new TypeError('Object.values called on non-object');
      }

      var values = [];
      for (var key in object) {
        if (hasOwnProperty.call(object, key)) {
          values.push(object[key]);
        }
      }
      return values;
    };
  }
})();
})(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this);
(function(global) {

var babelHelpers = global.babelHelpers = {};

babelHelpers.typeof = typeof Symbol === "function" && typeof (typeof Symbol === "function" ? Symbol.iterator : "@@iterator") === "symbol" ? function (obj) {
  return typeof obj;
} : function (obj) {
  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== (typeof Symbol === "function" ? Symbol.prototype : "@@prototype") ? "symbol" : typeof obj;
};

babelHelpers.createRawReactElement = function () {
  var REACT_ELEMENT_TYPE = typeof Symbol === "function" && (typeof Symbol === "function" ? Symbol.for : "@@for") && (typeof Symbol === "function" ? Symbol.for : "@@for")("react.element") || 0xeac7;
  return function createRawReactElement(type, key, props) {
    return {
      $$typeof: REACT_ELEMENT_TYPE,
      type: type,
      key: key,
      ref: null,
      props: props,
      _owner: null
    };
  };
}();

babelHelpers.classCallCheck = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

babelHelpers.createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();

babelHelpers.defineProperty = function (obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
};

babelHelpers._extends = babelHelpers.extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

babelHelpers.get = function get(object, property, receiver) {
  if (object === null) object = Function.prototype;
  var desc = Object.getOwnPropertyDescriptor(object, property);

  if (desc === undefined) {
    var parent = Object.getPrototypeOf(object);

    if (parent === null) {
      return undefined;
    } else {
      return get(parent, property, receiver);
    }
  } else if ("value" in desc) {
    return desc.value;
  } else {
    var getter = desc.get;

    if (getter === undefined) {
      return undefined;
    }

    return getter.call(receiver);
  }
};

babelHelpers.inherits = function (subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
};

babelHelpers.interopRequireDefault = function (obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
};

babelHelpers.interopRequireWildcard = function (obj) {
  if (obj && obj.__esModule) {
    return obj;
  } else {
    var newObj = {};

    if (obj != null) {
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
      }
    }

    newObj.default = obj;
    return newObj;
  }
};

babelHelpers.objectWithoutProperties = function (obj, keys) {
  var target = {};

  for (var i in obj) {
    if (keys.indexOf(i) >= 0) continue;
    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
    target[i] = obj[i];
  }

  return target;
};

babelHelpers.possibleConstructorReturn = function (self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && (typeof call === "object" || typeof call === "function") ? call : self;
};

babelHelpers.slicedToArray = function () {
  function sliceIterator(arr, i) {
    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = undefined;

    try {
      for (var _i = arr[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"](), _s; !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);

        if (i && _arr.length === i) break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"]) _i["return"]();
      } finally {
        if (_d) throw _e;
      }
    }

    return _arr;
  }

  return function (arr, i) {
    if (Array.isArray(arr)) {
      return arr;
    } else if ((typeof Symbol === "function" ? Symbol.iterator : "@@iterator") in Object(arr)) {
      return sliceIterator(arr, i);
    } else {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    }
  };
}();

babelHelpers.taggedTemplateLiteral = function (strings, raw) {
  return Object.freeze(Object.defineProperties(strings, {
    raw: {
      value: Object.freeze(raw)
    }
  }));
};

babelHelpers.toArray = function (arr) {
  return Array.isArray(arr) ? arr : Array.from(arr);
};

babelHelpers.toConsumableArray = function (arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }return arr2;
  } else {
    return Array.from(arr);
  }
};
})(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this);
__d(/* UI/index.android.js */function(global, require, module, exports) {require(12                             ); // 12 = ./App/Config/ReactotronConfig

var _reactNative = require(334           ); // 334 = react-native

var _App = require(1810                  ); // 1810 = ./App/Containers/App

var _App2 = babelHelpers.interopRequireDefault(_App);

_reactNative.AppRegistry.registerComponent('UI', function () {
  return _App2.default;
});
}, 0, null, "UI/index.android.js");
__d(/* UI/App/Config/ReactotronConfig.js */function(global, require, module, exports) {var _DebugConfig = require(13                     ); // 13 = ../Config/DebugConfig

var _DebugConfig2 = babelHelpers.interopRequireDefault(_DebugConfig);

var _seamlessImmutable = require(14                  ); // 14 = seamless-immutable

var _seamlessImmutable2 = babelHelpers.interopRequireDefault(_seamlessImmutable);

var _reactotronReactNative = require(15                       ); // 15 = reactotron-react-native

var _reactotronReactNative2 = babelHelpers.interopRequireDefault(_reactotronReactNative);

var _reactotronRedux = require(1141              ); // 1141 = reactotron-redux

var _reactotronReduxSaga = require(1479                   ); // 1479 = reactotron-redux-saga

var _reactotronReduxSaga2 = babelHelpers.interopRequireDefault(_reactotronReduxSaga);

if (_DebugConfig2.default.useReactotron) {
  _reactotronReactNative2.default.configure({ name: 'Ignite App' }).useReactNative().use((0, _reactotronRedux.reactotronRedux)({ onRestore: _seamlessImmutable2.default })).use((0, _reactotronReduxSaga2.default)()).connect();

  _reactotronReactNative2.default.clear();

  console.tron = _reactotronReactNative2.default;
}
}, 12, null, "UI/App/Config/ReactotronConfig.js");
__d(/* UI/App/Config/DebugConfig.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  showDevScreens: __DEV__,
  useFixtures: false,
  ezLogin: false,
  yellowBox: __DEV__,
  reduxLogging: __DEV__,
  includeExamples: __DEV__,
  useReactotron: __DEV__
};
}, 13, null, "UI/App/Config/DebugConfig.js");
__d(/* seamless-immutable/src/seamless-immutable.js */function(global, require, module, exports) {(function () {
  "use strict";

  function immutableInit(config) {
    var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && (typeof Symbol === 'function' ? Symbol.for : '@@for') && (typeof Symbol === 'function' ? Symbol.for : '@@for')('react.element');
    var REACT_ELEMENT_TYPE_FALLBACK = 0xeac7;

    var globalConfig = {
      use_static: false
    };
    if (isObject(config)) {
      if (config.use_static !== undefined) {
        globalConfig.use_static = Boolean(config.use_static);
      }
    }

    function isObject(data) {
      return typeof data === 'object' && !Array.isArray(data) && data !== null;
    }

    function instantiateEmptyObject(obj) {
      var prototype = Object.getPrototypeOf(obj);
      if (!prototype) {
        return {};
      } else {
        return Object.create(prototype);
      }
    }

    function addPropertyTo(target, methodName, value) {
      Object.defineProperty(target, methodName, {
        enumerable: false,
        configurable: false,
        writable: false,
        value: value
      });
    }

    function banProperty(target, methodName) {
      addPropertyTo(target, methodName, function () {
        throw new ImmutableError("The " + methodName + " method cannot be invoked on an Immutable data structure.");
      });
    }

    var immutabilityTag = "__immutable_invariants_hold";

    function addImmutabilityTag(target) {
      addPropertyTo(target, immutabilityTag, true);
    }

    function isImmutable(target) {
      if (typeof target === "object") {
        return target === null || Boolean(Object.getOwnPropertyDescriptor(target, immutabilityTag));
      } else {
        return true;
      }
    }

    function isEqual(a, b) {
      return a === b || a !== a && b !== b;
    }

    function isMergableObject(target) {
      return target !== null && typeof target === "object" && !Array.isArray(target) && !(target instanceof Date);
    }

    var mutatingObjectMethods = ["setPrototypeOf"];

    var nonMutatingObjectMethods = ["keys"];

    var mutatingArrayMethods = mutatingObjectMethods.concat(["push", "pop", "sort", "splice", "shift", "unshift", "reverse"]);

    var nonMutatingArrayMethods = nonMutatingObjectMethods.concat(["map", "filter", "slice", "concat", "reduce", "reduceRight"]);

    var mutatingDateMethods = mutatingObjectMethods.concat(["setDate", "setFullYear", "setHours", "setMilliseconds", "setMinutes", "setMonth", "setSeconds", "setTime", "setUTCDate", "setUTCFullYear", "setUTCHours", "setUTCMilliseconds", "setUTCMinutes", "setUTCMonth", "setUTCSeconds", "setYear"]);

    function ImmutableError(message) {
      this.name = 'MyError';
      this.message = message;
      this.stack = new Error().stack;
    }
    ImmutableError.prototype = new Error();
    ImmutableError.prototype.constructor = Error;

    function makeImmutable(obj, bannedMethods) {
      addImmutabilityTag(obj);

      if (process.env.NODE_ENV !== "production") {
        for (var index in bannedMethods) {
          if (bannedMethods.hasOwnProperty(index)) {
            banProperty(obj, bannedMethods[index]);
          }
        }

        Object.freeze(obj);
      }

      return obj;
    }

    function makeMethodReturnImmutable(obj, methodName) {
      var currentMethod = obj[methodName];

      addPropertyTo(obj, methodName, function () {
        return Immutable(currentMethod.apply(obj, arguments));
      });
    }

    function arraySet(idx, value, config) {
      var deep = config && config.deep;

      if (idx in this) {
        if (deep && this[idx] !== value && isMergableObject(value) && isMergableObject(this[idx])) {
          value = Immutable.merge(this[idx], value, { deep: true, mode: 'replace' });
        }
        if (isEqual(this[idx], value)) {
          return this;
        }
      }

      var mutable = asMutableArray.call(this);
      mutable[idx] = Immutable(value);
      return makeImmutableArray(mutable);
    }

    var immutableEmptyArray = Immutable([]);

    function arraySetIn(pth, value, config) {
      var head = pth[0];

      if (pth.length === 1) {
        return arraySet.call(this, head, value, config);
      } else {
        var tail = pth.slice(1);
        var thisHead = this[head];
        var newValue;

        if (typeof thisHead === "object" && thisHead !== null) {
          newValue = Immutable.setIn(thisHead, tail, value);
        } else {
          var nextHead = tail[0];

          if (nextHead !== '' && isFinite(nextHead)) {
            newValue = arraySetIn.call(immutableEmptyArray, tail, value);
          } else {
            newValue = objectSetIn.call(immutableEmptyObject, tail, value);
          }
        }

        if (head in this && thisHead === newValue) {
          return this;
        }

        var mutable = asMutableArray.call(this);
        mutable[head] = newValue;
        return makeImmutableArray(mutable);
      }
    }

    function makeImmutableArray(array) {
      for (var index in nonMutatingArrayMethods) {
        if (nonMutatingArrayMethods.hasOwnProperty(index)) {
          var methodName = nonMutatingArrayMethods[index];
          makeMethodReturnImmutable(array, methodName);
        }
      }

      if (!globalConfig.use_static) {
        addPropertyTo(array, "flatMap", flatMap);
        addPropertyTo(array, "asObject", asObject);
        addPropertyTo(array, "asMutable", asMutableArray);
        addPropertyTo(array, "set", arraySet);
        addPropertyTo(array, "setIn", arraySetIn);
        addPropertyTo(array, "update", update);
        addPropertyTo(array, "updateIn", updateIn);
        addPropertyTo(array, "getIn", getIn);
      }

      for (var i = 0, length = array.length; i < length; i++) {
        array[i] = Immutable(array[i]);
      }

      return makeImmutable(array, mutatingArrayMethods);
    }

    function makeImmutableDate(date) {
      if (!globalConfig.use_static) {
        addPropertyTo(date, "asMutable", asMutableDate);
      }

      return makeImmutable(date, mutatingDateMethods);
    }

    function asMutableDate() {
      return new Date(this.getTime());
    }

    function flatMap(iterator) {
      if (arguments.length === 0) {
        return this;
      }

      var result = [],
          length = this.length,
          index;

      for (index = 0; index < length; index++) {
        var iteratorResult = iterator(this[index], index, this);

        if (Array.isArray(iteratorResult)) {
          result.push.apply(result, iteratorResult);
        } else {
          result.push(iteratorResult);
        }
      }

      return makeImmutableArray(result);
    }

    function without(remove) {
      if (typeof remove === "undefined" && arguments.length === 0) {
        return this;
      }

      if (typeof remove !== "function") {
        var keysToRemoveArray = Array.isArray(remove) ? remove.slice() : Array.prototype.slice.call(arguments);

        keysToRemoveArray.forEach(function (el, idx, arr) {
          if (typeof el === "number") {
            arr[idx] = el.toString();
          }
        });

        remove = function remove(val, key) {
          return keysToRemoveArray.indexOf(key) !== -1;
        };
      }

      var result = instantiateEmptyObject(this);

      for (var key in this) {
        if (this.hasOwnProperty(key) && remove(this[key], key) === false) {
          result[key] = this[key];
        }
      }

      return makeImmutableObject(result);
    }

    function asMutableArray(opts) {
      var result = [],
          i,
          length;

      if (opts && opts.deep) {
        for (i = 0, length = this.length; i < length; i++) {
          result.push(asDeepMutable(this[i]));
        }
      } else {
        for (i = 0, length = this.length; i < length; i++) {
          result.push(this[i]);
        }
      }

      return result;
    }

    function asObject(iterator) {
      if (typeof iterator !== "function") {
        iterator = function iterator(value) {
          return value;
        };
      }

      var result = {},
          length = this.length,
          index;

      for (index = 0; index < length; index++) {
        var pair = iterator(this[index], index, this),
            key = pair[0],
            value = pair[1];

        result[key] = value;
      }

      return makeImmutableObject(result);
    }

    function asDeepMutable(obj) {
      if (!obj || typeof obj !== 'object' || !Object.getOwnPropertyDescriptor(obj, immutabilityTag) || obj instanceof Date) {
        return obj;
      }
      return Immutable.asMutable(obj, { deep: true });
    }

    function quickCopy(src, dest) {
      for (var key in src) {
        if (Object.getOwnPropertyDescriptor(src, key)) {
          dest[key] = src[key];
        }
      }

      return dest;
    }

    function merge(other, config) {
      if (arguments.length === 0) {
        return this;
      }

      if (other === null || typeof other !== "object") {
        throw new TypeError("Immutable#merge can only be invoked with objects or arrays, not " + JSON.stringify(other));
      }

      var receivedArray = Array.isArray(other),
          deep = config && config.deep,
          mode = config && config.mode || 'merge',
          merger = config && config.merger,
          result;

      function addToResult(currentObj, otherObj, key) {
        var immutableValue = Immutable(otherObj[key]);
        var mergerResult = merger && merger(currentObj[key], immutableValue, config);
        var currentValue = currentObj[key];

        if (result !== undefined || mergerResult !== undefined || !currentObj.hasOwnProperty(key) || !isEqual(immutableValue, currentValue)) {

          var newValue;

          if (mergerResult) {
            newValue = mergerResult;
          } else if (deep && isMergableObject(currentValue) && isMergableObject(immutableValue)) {
            newValue = Immutable.merge(currentValue, immutableValue, config);
          } else {
            newValue = immutableValue;
          }

          if (!isEqual(currentValue, newValue) || !currentObj.hasOwnProperty(key)) {
            if (result === undefined) {
              result = quickCopy(currentObj, instantiateEmptyObject(currentObj));
            }

            result[key] = newValue;
          }
        }
      }

      function clearDroppedKeys(currentObj, otherObj) {
        for (var key in currentObj) {
          if (!otherObj.hasOwnProperty(key)) {
            if (result === undefined) {
              result = quickCopy(currentObj, instantiateEmptyObject(currentObj));
            }
            delete result[key];
          }
        }
      }

      var key;

      if (!receivedArray) {
        for (key in other) {
          if (Object.getOwnPropertyDescriptor(other, key)) {
            addToResult(this, other, key);
          }
        }
        if (mode === 'replace') {
          clearDroppedKeys(this, other);
        }
      } else {
        for (var index = 0, length = other.length; index < length; index++) {
          var otherFromArray = other[index];

          for (key in otherFromArray) {
            if (otherFromArray.hasOwnProperty(key)) {
              addToResult(result !== undefined ? result : this, otherFromArray, key);
            }
          }
        }
      }

      if (result === undefined) {
        return this;
      } else {
        return makeImmutableObject(result);
      }
    }

    function objectReplace(value, config) {
      var deep = config && config.deep;

      if (arguments.length === 0) {
        return this;
      }

      if (value === null || typeof value !== "object") {
        throw new TypeError("Immutable#replace can only be invoked with objects or arrays, not " + JSON.stringify(value));
      }

      return Immutable.merge(this, value, { deep: deep, mode: 'replace' });
    }

    var immutableEmptyObject = Immutable({});

    function objectSetIn(path, value, config) {
      if (!Array.isArray(path) || path.length === 0) {
        throw new TypeError("The first argument to Immutable#setIn must be an array containing at least one \"key\" string.");
      }

      var head = path[0];
      if (path.length === 1) {
        return objectSet.call(this, head, value, config);
      }

      var tail = path.slice(1);
      var newValue;
      var thisHead = this[head];

      if (this.hasOwnProperty(head) && typeof thisHead === "object" && thisHead !== null) {
        newValue = Immutable.setIn(thisHead, tail, value);
      } else {
        newValue = objectSetIn.call(immutableEmptyObject, tail, value);
      }

      if (this.hasOwnProperty(head) && thisHead === newValue) {
        return this;
      }

      var mutable = quickCopy(this, instantiateEmptyObject(this));
      mutable[head] = newValue;
      return makeImmutableObject(mutable);
    }

    function objectSet(property, value, config) {
      var deep = config && config.deep;

      if (this.hasOwnProperty(property)) {
        if (deep && this[property] !== value && isMergableObject(value) && isMergableObject(this[property])) {
          value = Immutable.merge(this[property], value, { deep: true, mode: 'replace' });
        }
        if (isEqual(this[property], value)) {
          return this;
        }
      }

      var mutable = quickCopy(this, instantiateEmptyObject(this));
      mutable[property] = Immutable(value);
      return makeImmutableObject(mutable);
    }

    function update(property, updater) {
      var restArgs = Array.prototype.slice.call(arguments, 2);
      var initialVal = this[property];
      return Immutable.set(this, property, updater.apply(initialVal, [initialVal].concat(restArgs)));
    }

    function getInPath(obj, path) {
      for (var i = 0, l = path.length; obj != null && i < l; i++) {
        obj = obj[path[i]];
      }

      return i && i == l ? obj : undefined;
    }

    function updateIn(path, updater) {
      var restArgs = Array.prototype.slice.call(arguments, 2);
      var initialVal = getInPath(this, path);

      return Immutable.setIn(this, path, updater.apply(initialVal, [initialVal].concat(restArgs)));
    }

    function getIn(path, defaultValue) {
      var value = getInPath(this, path);
      return value === undefined ? defaultValue : value;
    }

    function asMutableObject(opts) {
      var result = instantiateEmptyObject(this),
          key;

      if (opts && opts.deep) {
        for (key in this) {
          if (this.hasOwnProperty(key)) {
            result[key] = asDeepMutable(this[key]);
          }
        }
      } else {
        for (key in this) {
          if (this.hasOwnProperty(key)) {
            result[key] = this[key];
          }
        }
      }

      return result;
    }

    function instantiatePlainObject() {
      return {};
    }

    function makeImmutableObject(obj) {
      if (!globalConfig.use_static) {
        addPropertyTo(obj, "merge", merge);
        addPropertyTo(obj, "replace", objectReplace);
        addPropertyTo(obj, "without", without);
        addPropertyTo(obj, "asMutable", asMutableObject);
        addPropertyTo(obj, "set", objectSet);
        addPropertyTo(obj, "setIn", objectSetIn);
        addPropertyTo(obj, "update", update);
        addPropertyTo(obj, "updateIn", updateIn);
        addPropertyTo(obj, "getIn", getIn);
      }

      return makeImmutable(obj, mutatingObjectMethods);
    }

    function isReactElement(obj) {
      return typeof obj === 'object' && obj !== null && (obj.$$typeof === REACT_ELEMENT_TYPE_FALLBACK || obj.$$typeof === REACT_ELEMENT_TYPE);
    }

    function isFileObject(obj) {
      return typeof File !== 'undefined' && obj instanceof File;
    }

    function isBlobObject(obj) {
      return typeof Blob !== 'undefined' && obj instanceof Blob;
    }

    function isPromise(obj) {
      return typeof obj === 'object' && typeof obj.then === 'function';
    }

    function isError(obj) {
      return obj instanceof Error;
    }

    function Immutable(obj, options, stackRemaining) {
      if (isImmutable(obj) || isReactElement(obj) || isFileObject(obj) || isBlobObject(obj) || isError(obj)) {
        return obj;
      } else if (isPromise(obj)) {
        return obj.then(Immutable);
      } else if (Array.isArray(obj)) {
        return makeImmutableArray(obj.slice());
      } else if (obj instanceof Date) {
        return makeImmutableDate(new Date(obj.getTime()));
      } else {
        var prototype = options && options.prototype;
        var instantiateEmptyObject = !prototype || prototype === Object.prototype ? instantiatePlainObject : function () {
          return Object.create(prototype);
        };
        var clone = instantiateEmptyObject();

        if (process.env.NODE_ENV !== "production") {
          if (stackRemaining == null) {
            stackRemaining = 64;
          }
          if (stackRemaining <= 0) {
            throw new ImmutableError("Attempt to construct Immutable from a deeply nested object was detected." + " Have you tried to wrap an object with circular references (e.g. React element)?" + " See https://github.com/rtfeldman/seamless-immutable/wiki/Deeply-nested-object-was-detected for details.");
          }
          stackRemaining -= 1;
        }

        for (var key in obj) {
          if (Object.getOwnPropertyDescriptor(obj, key)) {
            clone[key] = Immutable(obj[key], undefined, stackRemaining);
          }
        }

        return makeImmutableObject(clone);
      }
    }

    function toStatic(fn) {
      function staticWrapper() {
        var args = [].slice.call(arguments);
        var self = args.shift();
        return fn.apply(self, args);
      }

      return staticWrapper;
    }

    function toStaticObjectOrArray(fnObject, fnArray) {
      function staticWrapper() {
        var args = [].slice.call(arguments);
        var self = args.shift();
        if (Array.isArray(self)) {
          return fnArray.apply(self, args);
        } else {
          return fnObject.apply(self, args);
        }
      }

      return staticWrapper;
    }

    function toStaticObjectOrDateOrArray(fnObject, fnArray, fnDate) {
      function staticWrapper() {
        var args = [].slice.call(arguments);
        var self = args.shift();
        if (Array.isArray(self)) {
          return fnArray.apply(self, args);
        } else if (self instanceof Date) {
          return fnDate.apply(self, args);
        } else {
          return fnObject.apply(self, args);
        }
      }

      return staticWrapper;
    }

    Immutable.from = Immutable;
    Immutable.isImmutable = isImmutable;
    Immutable.ImmutableError = ImmutableError;
    Immutable.merge = toStatic(merge);
    Immutable.replace = toStatic(objectReplace);
    Immutable.without = toStatic(without);
    Immutable.asMutable = toStaticObjectOrDateOrArray(asMutableObject, asMutableArray, asMutableDate);
    Immutable.set = toStaticObjectOrArray(objectSet, arraySet);
    Immutable.setIn = toStaticObjectOrArray(objectSetIn, arraySetIn);
    Immutable.update = toStatic(update);
    Immutable.updateIn = toStatic(updateIn);
    Immutable.getIn = toStatic(getIn);
    Immutable.flatMap = toStatic(flatMap);
    Immutable.asObject = toStatic(asObject);
    if (!globalConfig.use_static) {
      Immutable.static = immutableInit({
        use_static: true
      });
    }

    Object.freeze(Immutable);

    return Immutable;
  }

  var Immutable = immutableInit();

  if (typeof define === 'function' && define.amd) {
    define(function () {
      return Immutable;
    });
  } else if (typeof module === "object") {
    module.exports = Immutable;
  } else if (typeof exports === "object") {
    exports.Immutable = Immutable;
  } else if (typeof window === "object") {
    window.Immutable = Immutable;
  } else if (typeof global === "object") {
    global.Immutable = Immutable;
  }
})();
}, 14, null, "seamless-immutable/src/seamless-immutable.js");
__d(/* reactotron-react-native/dist/index.js */function(global, require, module, exports) {'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault(ex) {
  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;
}

var ramda = require(16     ); // 16 = ramda
var reactNative = require(334           ); // 334 = react-native
var React = require(604    ); // 604 = react
var React__default = _interopDefault(React);
var PropTypes = _interopDefault(require(723         )); // 723 = prop-types
var mitt = _interopDefault(require(728   )); // 728 = mitt
var XHRInterceptor = _interopDefault(require(625                                            )); // 625 = react-native/Libraries/Network/XHRInterceptor
var reactotronCoreClient = require(729                     ); // 729 = reactotron-core-client
var getHost = _interopDefault(require(1139            )); // 1139 = rn-host-detect

var parseErrorStack = void 0;
var symbolicateStackTrace = void 0;

var PLUGIN_DEFAULTS = {
  veto: null };

var trackGlobalErrors = function trackGlobalErrors(options) {
  return function (reactotron) {
    var config = ramda.merge(PLUGIN_DEFAULTS, options || {});

    var swizzled = null;
    var isSwizzled = false;

    function reactotronExceptionHijacker(message, prettyStack, currentExceptionID) {
      swizzled(message, prettyStack, currentExceptionID);

      try {
        var stack = ramda.map(function (frame) {
          return {
            functionName: frame.methodName === '<unknown>' ? null : frame.methodName,
            lineNumber: frame.lineNumber,
            columnNumber: frame.column,
            fileName: frame.file
          };
        }, prettyStack);

        if (config.veto) {
          stack = ramda.reject(config.veto, stack);
        }

        reactotron.error(message, stack);
      } catch (e) {}
    }

    function trackGlobalErrors() {
      if (isSwizzled) return;
      if (!reactNative.NativeModules.ExceptionsManager) return;
      swizzled = reactNative.NativeModules.ExceptionsManager.updateExceptionMessage;
      reactNative.NativeModules.ExceptionsManager.updateExceptionMessage = reactotronExceptionHijacker;
      isSwizzled = true;
    }

    function untrackGlobalErrors() {
      if (!swizzled) return;
      if (!reactNative.NativeModules.ExceptionsManager) return;
      reactNative.NativeModules.ExceptionsManager.updateExceptionMessage = swizzled;
      isSwizzled = false;
    }

    trackGlobalErrors();

    function reportError(error) {
      try {
        parseErrorStack = parseErrorStack || require(365                                                   ); // 365 = react-native/Libraries/Core/Devtools/parseErrorStack
        symbolicateStackTrace = symbolicateStackTrace || require(517                                                         ); // 517 = react-native/Libraries/Core/Devtools/symbolicateStackTrace
        if (parseErrorStack && symbolicateStackTrace) {
          var parsedStacktrace = parseErrorStack(error);

          symbolicateStackTrace(parsedStacktrace).then(function (goodStack) {
            var stack = goodStack.map(function (stackFrame) {
              return {
                fileName: stackFrame.file,
                functionName: stackFrame.methodName,
                lineNumber: stackFrame.lineNumber
              };
            });

            if (config.veto) {
              stack = ramda.reject(config.veto, stack);
            }

            reactotron.error(error.message, stack);
          });
        }
      } catch (e) {}
    }

    return {
      features: {
        reportError: reportError,
        trackGlobalErrors: trackGlobalErrors,
        untrackGlobalErrors: untrackGlobalErrors
      }
    };
  };
};

var DEFAULTS$1 = {
  url: 'http://localhost:8081'
};

var openInEditor = function openInEditor() {
  var pluginConfig = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return function (reactotron) {
    var options = ramda.merge(DEFAULTS$1, pluginConfig);

    return {
      onCommand: function onCommand(command) {
        if (command.type !== 'editor.open') return;
        var payload = command.payload;
        var file = payload.file,
            lineNumber = payload.lineNumber;

        var url = options.url + '/open-stack-frame';
        var body = { file: file, lineNumber: lineNumber || 1 };
        var method = 'POST';

        fetch(url, { method: method, body: JSON.stringify(body) });
      }
    };
  };
};

var _typeof = typeof Symbol === "function" && typeof (typeof Symbol === 'function' ? Symbol.iterator : '@@iterator') === "symbol" ? function (obj) {
  return typeof obj;
} : function (obj) {
  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== (typeof Symbol === 'function' ? Symbol.prototype : '@@prototype') ? "symbol" : typeof obj;
};

var classCallCheck = function classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

var createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

var inherits = function inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
};

var possibleConstructorReturn = function possibleConstructorReturn(self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && (typeof call === "object" || typeof call === "function") ? call : self;
};

var toConsumableArray = function toConsumableArray(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }return arr2;
  } else {
    return Array.from(arr);
  }
};

var Styles = {
  container: {
    position: 'absolute',
    left: 0,
    top: 0,
    right: 0,
    bottom: 0,
    zIndex: 1000,
    opacity: 0.25
  }
};

var FullScreenOverlay = function (_Component) {
  inherits(FullScreenOverlay, _Component);

  function FullScreenOverlay(props) {
    classCallCheck(this, FullScreenOverlay);

    var _this = possibleConstructorReturn(this, (FullScreenOverlay.__proto__ || Object.getPrototypeOf(FullScreenOverlay)).call(this, props));

    _this.state = {
      opacity: Styles.container.opacity,
      uri: null,
      justifyContent: 'center',
      alignItems: 'center'
    };

    props.emitter.on('overlay', function (payload) {
      _this.setState(_extends({}, _this.state, payload));
    });
    return _this;
  }

  createClass(FullScreenOverlay, [{
    key: 'createContainerStyle',
    value: function createContainerStyle() {
      var _state = this.state,
          opacity = _state.opacity,
          justifyContent = _state.justifyContent,
          alignItems = _state.alignItems;

      var _Dimensions$get = reactNative.Dimensions.get('window'),
          width = _Dimensions$get.width,
          height = _Dimensions$get.height;

      var containerStyle = _extends({}, Styles.container, {
        opacity: opacity,
        width: width,
        height: height,
        justifyContent: justifyContent,
        alignItems: alignItems
      });

      return containerStyle;
    }

  }, {
    key: 'render',
    value: function render() {
      var _state2 = this.state,
          uri = _state2.uri,
          width = _state2.width,
          height = _state2.height,
          growToWindow = _state2.growToWindow,
          resizeMode = _state2.resizeMode,
          _state2$marginLeft = _state2.marginLeft,
          marginLeft = _state2$marginLeft === undefined ? 0 : _state2$marginLeft,
          _state2$marginRight = _state2.marginRight,
          marginRight = _state2$marginRight === undefined ? 0 : _state2$marginRight,
          _state2$marginTop = _state2.marginTop,
          marginTop = _state2$marginTop === undefined ? 0 : _state2$marginTop,
          _state2$marginBottom = _state2.marginBottom,
          marginBottom = _state2$marginBottom === undefined ? 0 : _state2$marginBottom;

      var imageStyle = { width: width, height: height, marginTop: marginTop, marginRight: marginRight, marginBottom: marginBottom, marginLeft: marginLeft };
      if (growToWindow) {
        var windowSize = reactNative.Dimensions.get('window');
        imageStyle.width = windowSize.width;
        imageStyle.height = windowSize.height;
      }
      var image = uri ? React__default.createElement(reactNative.Image, { source: { uri: uri }, style: imageStyle, resizeMode: growToWindow ? resizeMode : null }) : React__default.createElement(reactNative.View, null);

      return React__default.createElement(reactNative.View, { style: this.createContainerStyle(), pointerEvents: 'none' }, image);
    }
  }]);
  return FullScreenOverlay;
}(React.Component);

FullScreenOverlay.propTypes = {
  emitter: PropTypes.object.isRequired
};

var overlay = function overlay() {
  return function (reactotron) {
    var emitter = mitt();

    return {
      onCommand: function onCommand(command) {
        if (command.type !== 'overlay') return;

        emitter.emit('overlay', command.payload);
      },

      features: {
        overlay: function overlay(WrappedComponent) {
          return function (props) {
            return React__default.createElement(reactNative.View, { style: { flex: 1 } }, React__default.createElement(WrappedComponent, props), React__default.createElement(FullScreenOverlay, { emitter: emitter }));
          };
        }
      }
    };
  };
};

var PLUGIN_DEFAULTS$1 = {
  ignore: []
};

var asyncStorage = function asyncStorage(options) {
  return function (reactotron) {
    var config = ramda.merge(PLUGIN_DEFAULTS$1, options || {});
    var ignore = config['ignore'] || [];

    var swizzSetItem = null;
    var swizzRemoveItem = null;
    var swizzMergeItem = null;
    var swizzClear = null;
    var swizzMultiSet = null;
    var swizzMultiRemove = null;
    var swizzMultiMerge = null;
    var isSwizzled = false;

    var reactotronShipStorageValues = function reactotronShipStorageValues(methodName, args) {
      reactNative.AsyncStorage.getAllKeys(function (_, keys) {
        return reactNative.AsyncStorage.multiGet(keys, function (_) {
          var values = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

          var valuesToSend = ramda.reject(function (item) {
            return ramda.contains(item[0], ignore);
          }, values);

          var previewArgs = '';
          if (args && args.length > 1) {
            previewArgs = Array.isArray(args[0]) ? 'Array: ' + args[0].length : args[0];
          }
          var preview = methodName ? methodName + '(' + previewArgs + ')' : '';
          reactotron.send('asyncStorage.values.change', { preview: preview, value: valuesToSend });
        });
      });
    };

    var reactotronStorageHijacker = function reactotronStorageHijacker(originalMethod, methodName) {
      return function () {
        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        var oldCallback = args.length > 0 ? args[args.length - 1] : null;

        if (typeof oldCallback !== 'function') {
          oldCallback = function oldCallback() {};
          args.push(oldCallback);
        }

        var newArgs = [].concat(toConsumableArray(args.slice(0, args.length - 1)), [function () {
          reactotronShipStorageValues(methodName, args);
          oldCallback.apply(undefined, arguments);
        }]);

        return originalMethod.apply(undefined, toConsumableArray(newArgs));
      };
    };

    var trackAsyncStorage = function trackAsyncStorage() {
      if (isSwizzled) return;

      swizzSetItem = reactNative.AsyncStorage.setItem;
      reactNative.AsyncStorage.setItem = reactotronStorageHijacker(swizzSetItem, 'setItem');

      swizzRemoveItem = reactNative.AsyncStorage.removeItem;
      reactNative.AsyncStorage.removeItem = reactotronStorageHijacker(swizzRemoveItem, 'removeItem');

      swizzMergeItem = reactNative.AsyncStorage.mergeItem;
      reactNative.AsyncStorage.mergeItem = reactotronStorageHijacker(swizzMergeItem, 'mergeItem');

      swizzClear = reactNative.AsyncStorage.clear;
      reactNative.AsyncStorage.clear = reactotronStorageHijacker(swizzClear, 'clear');

      swizzMultiSet = reactNative.AsyncStorage.multiSet;
      reactNative.AsyncStorage.multiSet = reactotronStorageHijacker(swizzMultiSet, 'multiSet');

      swizzMultiRemove = reactNative.AsyncStorage.multiRemove;
      reactNative.AsyncStorage.multiRemove = reactotronStorageHijacker(swizzMultiRemove, 'multiRemove');

      swizzMultiMerge = reactNative.AsyncStorage.multiMerge;
      reactNative.AsyncStorage.multiMerge = reactotronStorageHijacker(swizzMultiMerge, 'multiMerge');

      isSwizzled = true;
    };

    var untrackAsyncStorage = function untrackAsyncStorage() {
      if (!isSwizzled) return;

      reactNative.AsyncStorage.setItem = swizzSetItem;
      reactNative.AsyncStorage.removeItem = swizzRemoveItem;
      reactNative.AsyncStorage.mergeItem = swizzMergeItem;
      reactNative.AsyncStorage.clear = swizzClear;
      reactNative.AsyncStorage.multiSet = swizzMultiSet;
      reactNative.AsyncStorage.multiRemove = swizzMultiRemove;
      reactNative.AsyncStorage.multiMerge = swizzMultiMerge;

      isSwizzled = false;
    };

    reactotronShipStorageValues();
    trackAsyncStorage();

    return {
      features: {
        trackAsyncStorage: trackAsyncStorage,
        untrackAsyncStorage: untrackAsyncStorage
      }
    };
  };
};

var DEFAULT_CONTENT_TYPES_RX = /^(image)\/.*$/i;

var DEFAULTS$2 = {};

var networking = function networking() {
  var pluginConfig = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return function (reactotron) {
    var options = ramda.merge(DEFAULTS$2, pluginConfig);

    var ignoreContentTypes = options.ignoreContentTypes || DEFAULT_CONTENT_TYPES_RX;

    var reactotronCounter = 1000;

    var requestCache = {};

    function onSend(data, xhr) {
      if (options.ignoreUrls && ramda.test(options.ignoreUrls, xhr._url)) {
        xhr._skipReactotron = true;
        return;
      }

      reactotronCounter++;

      xhr._trackingName = reactotronCounter;

      requestCache[reactotronCounter] = {
        data: data,
        xhr: xhr,
        stopTimer: reactotron.startTimer()
      };
    }

    function onResponse(status, timeout, response, url, type, xhr) {
      if (xhr._skipReactotron) {
        return;
      }

      var rid = xhr._trackingName;
      var cachedRequest = requestCache[rid] || {};
      requestCache[rid] = null;

      var data = cachedRequest.data,
          stopTimer = cachedRequest.stopTimer;

      var tronRequest = {
        url: url || cachedRequest.xhr._url,
        method: xhr._method || null,
        data: data,
        headers: xhr._headers || null
      };

      var body = null;

      var contentType = xhr.responseHeaders && xhr.responseHeaders['content-type'] || xhr.responseHeaders && xhr.responseHeaders['Content-Type'] || '';

      var useRealResponse = (typeof response === 'string' || (typeof response === 'undefined' ? 'undefined' : _typeof(response)) === 'object') && !ramda.test(ignoreContentTypes, contentType || '');

      if (useRealResponse) {
        try {
          body = JSON.parse(response);
        } catch (boom) {
          body = response;
        }
      } else {
        body = '~~~ skipped ~~~';
      }

      var tronResponse = {
        body: body,
        status: status,
        headers: xhr.responseHeaders || null
      };

      reactotron.apiResponse(tronRequest, tronResponse, stopTimer());
    }

    XHRInterceptor.setSendCallback(onSend);
    XHRInterceptor.setResponseCallback(onResponse);
    XHRInterceptor.enableInterception();

    return {};
  };
};

var io = require(1140                             ); // 1140 = socket.io-client/dist/socket.io

var DEFAULTS = {
  io: io,
  host: getHost('localhost'),
  port: 9090,
  name: 'React Native App',
  userAgent: 'reactotron-react-native',
  reactotronVersion: 'BETA',
  environment: __DEV__ ? 'development' : 'production' };

var reactotron = reactotronCoreClient.createClient(DEFAULTS);

reactotron.useReactNative = function () {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  if (options.errors !== false) {
    reactotron.use(trackGlobalErrors(options.errors));
  }

  if (options.editor !== false) {
    reactotron.use(openInEditor(options.editor));
  }

  if (options.overlay !== false) {
    reactotron.use(overlay());
  }

  if (options.asyncStorage !== false) {
    reactotron.use(asyncStorage(options.asyncStorage));
  }

  if (options.networking !== false) {
    reactotron.use(networking(options.networking));
  }

  return reactotron;
};

exports.trackGlobalErrors = trackGlobalErrors;
exports.openInEditor = openInEditor;
exports.overlay = overlay;
exports.asyncStorage = asyncStorage;
exports.networking = networking;
exports['default'] = reactotron;
}, 15, null, "reactotron-react-native/dist/index.js");
__d(/* ramda/index.js */function(global, require, module, exports) {module.exports = {
  F: require(17       ), // 17 = ./src/F
  T: require(21       ), // 21 = ./src/T
  __: require(22        ), // 22 = ./src/__
  add: require(23         ), // 23 = ./src/add
  addIndex: require(25              ), // 25 = ./src/addIndex
  adjust: require(30            ), // 30 = ./src/adjust
  all: require(32         ), // 32 = ./src/all
  allPass: require(39             ), // 39 = ./src/allPass
  always: require(18            ), // 18 = ./src/always
  and: require(55         ), // 55 = ./src/and
  any: require(56         ), // 56 = ./src/any
  anyPass: require(58             ), // 58 = ./src/anyPass
  ap: require(59        ), // 59 = ./src/ap
  aperture: require(60              ), // 60 = ./src/aperture
  append: require(63            ), // 63 = ./src/append
  apply: require(64           ), // 64 = ./src/apply
  applySpec: require(65               ), // 65 = ./src/applySpec
  ascend: require(67            ), // 67 = ./src/ascend
  assoc: require(68           ), // 68 = ./src/assoc
  assocPath: require(69               ), // 69 = ./src/assocPath
  binary: require(72            ), // 72 = ./src/binary
  bind: require(48          ), // 48 = ./src/bind
  both: require(74          ), // 74 = ./src/both
  call: require(78          ), // 78 = ./src/call
  chain: require(80           ), // 80 = ./src/chain
  clamp: require(85           ), // 85 = ./src/clamp
  clone: require(86           ), // 86 = ./src/clone
  comparator: require(90                ), // 90 = ./src/comparator
  complement: require(91                ), // 91 = ./src/complement
  compose: require(93             ), // 93 = ./src/compose
  composeK: require(100             ), // 100 = ./src/composeK
  composeP: require(101             ), // 101 = ./src/composeP
  concat: require(104           ), // 104 = ./src/concat
  cond: require(122         ), // 122 = ./src/cond
  construct: require(123              ), // 123 = ./src/construct
  constructN: require(124               ), // 124 = ./src/constructN
  contains: require(125             ), // 125 = ./src/contains
  converge: require(126             ), // 126 = ./src/converge
  countBy: require(127            ), // 127 = ./src/countBy
  curry: require(79           ), // 79 = ./src/curry
  curryN: require(27            ), // 27 = ./src/curryN
  dec: require(130        ), // 130 = ./src/dec
  defaultTo: require(131              ), // 131 = ./src/defaultTo
  descend: require(132            ), // 132 = ./src/descend
  difference: require(133               ), // 133 = ./src/difference
  differenceWith: require(134                   ), // 134 = ./src/differenceWith
  dissoc: require(136           ), // 136 = ./src/dissoc
  dissocPath: require(137               ), // 137 = ./src/dissocPath
  divide: require(140           ), // 140 = ./src/divide
  drop: require(141         ), // 141 = ./src/drop
  dropLast: require(143             ), // 143 = ./src/dropLast
  dropLastWhile: require(148                  ), // 148 = ./src/dropLastWhile
  dropRepeats: require(151                ), // 151 = ./src/dropRepeats
  dropRepeatsWith: require(153                    ), // 153 = ./src/dropRepeatsWith
  dropWhile: require(156              ), // 156 = ./src/dropWhile
  either: require(158           ), // 158 = ./src/either
  empty: require(160          ), // 160 = ./src/empty
  endsWith: require(161             ), // 161 = ./src/endsWith
  eqBy: require(163         ), // 163 = ./src/eqBy
  eqProps: require(164            ), // 164 = ./src/eqProps
  equals: require(109           ), // 109 = ./src/equals
  evolve: require(165           ), // 165 = ./src/evolve
  filter: require(118           ), // 118 = ./src/filter
  find: require(166         ), // 166 = ./src/find
  findIndex: require(168              ), // 168 = ./src/findIndex
  findLast: require(170             ), // 170 = ./src/findLast
  findLastIndex: require(172                  ), // 172 = ./src/findLastIndex
  flatten: require(174            ), // 174 = ./src/flatten
  flip: require(175         ), // 175 = ./src/flip
  forEach: require(176            ), // 176 = ./src/forEach
  forEachObjIndexed: require(177                      ), // 177 = ./src/forEachObjIndexed
  fromPairs: require(178              ), // 178 = ./src/fromPairs
  groupBy: require(179            ), // 179 = ./src/groupBy
  groupWith: require(180              ), // 180 = ./src/groupWith
  gt: require(181       ), // 181 = ./src/gt
  gte: require(182        ), // 182 = ./src/gte
  has: require(183        ), // 183 = ./src/has
  hasIn: require(184          ), // 184 = ./src/hasIn
  head: require(185         ), // 185 = ./src/head
  identical: require(113              ), // 113 = ./src/identical
  identity: require(186             ), // 186 = ./src/identity
  ifElse: require(188           ), // 188 = ./src/ifElse
  inc: require(189        ), // 189 = ./src/inc
  indexBy: require(190            ), // 190 = ./src/indexBy
  indexOf: require(191            ), // 191 = ./src/indexOf
  init: require(192         ), // 192 = ./src/init
  innerJoin: require(193              ), // 193 = ./src/innerJoin
  insert: require(194           ), // 194 = ./src/insert
  insertAll: require(195              ), // 195 = ./src/insertAll
  intersection: require(196                 ), // 196 = ./src/intersection
  intersectionWith: require(200                     ), // 200 = ./src/intersectionWith
  intersperse: require(202                ), // 202 = ./src/intersperse
  into: require(203         ), // 203 = ./src/into
  invert: require(208           ), // 208 = ./src/invert
  invertObj: require(209              ), // 209 = ./src/invertObj
  invoker: require(210            ), // 210 = ./src/invoker
  is: require(211       ), // 211 = ./src/is
  isEmpty: require(212            ), // 212 = ./src/isEmpty
  isNil: require(71           ), // 71 = ./src/isNil
  join: require(213         ), // 213 = ./src/join
  juxt: require(214         ), // 214 = ./src/juxt
  keys: require(50          ), // 50 = ./src/keys
  keysIn: require(215           ), // 215 = ./src/keysIn
  last: require(154         ), // 154 = ./src/last
  lastIndexOf: require(216                ), // 216 = ./src/lastIndexOf
  length: require(217           ), // 217 = ./src/length
  lens: require(219         ), // 219 = ./src/lens
  lensIndex: require(220              ), // 220 = ./src/lensIndex
  lensPath: require(221             ), // 221 = ./src/lensPath
  lensProp: require(223             ), // 223 = ./src/lensProp
  lift: require(76          ), // 76 = ./src/lift
  liftN: require(77           ), // 77 = ./src/liftN
  lt: require(224       ), // 224 = ./src/lt
  lte: require(225        ), // 225 = ./src/lte
  map: require(42         ), // 42 = ./src/map
  mapAccum: require(226             ), // 226 = ./src/mapAccum
  mapAccumRight: require(227                  ), // 227 = ./src/mapAccumRight
  mapObjIndexed: require(228                  ), // 228 = ./src/mapObjIndexed
  match: require(229          ), // 229 = ./src/match
  mathMod: require(230            ), // 230 = ./src/mathMod
  max: require(40         ), // 40 = ./src/max
  maxBy: require(231          ), // 231 = ./src/maxBy
  mean: require(232         ), // 232 = ./src/mean
  median: require(234           ), // 234 = ./src/median
  memoize: require(235            ), // 235 = ./src/memoize
  memoizeWith: require(236                ), // 236 = ./src/memoizeWith
  merge: require(237          ), // 237 = ./src/merge
  mergeAll: require(238             ), // 238 = ./src/mergeAll
  mergeDeepLeft: require(239                  ), // 239 = ./src/mergeDeepLeft
  mergeDeepRight: require(242                   ), // 242 = ./src/mergeDeepRight
  mergeDeepWith: require(243                  ), // 243 = ./src/mergeDeepWith
  mergeDeepWithKey: require(240                     ), // 240 = ./src/mergeDeepWithKey
  mergeWith: require(244              ), // 244 = ./src/mergeWith
  mergeWithKey: require(241                 ), // 241 = ./src/mergeWithKey
  min: require(245        ), // 245 = ./src/min
  minBy: require(246          ), // 246 = ./src/minBy
  modulo: require(247           ), // 247 = ./src/modulo
  multiply: require(248             ), // 248 = ./src/multiply
  nAry: require(73          ), // 73 = ./src/nAry
  negate: require(249           ), // 249 = ./src/negate
  none: require(250         ), // 250 = ./src/none
  not: require(92         ), // 92 = ./src/not
  nth: require(155        ), // 155 = ./src/nth
  nthArg: require(251           ), // 251 = ./src/nthArg
  o: require(252      ), // 252 = ./src/o
  objOf: require(207          ), // 207 = ./src/objOf
  of: require(253       ), // 253 = ./src/of
  omit: require(255         ), // 255 = ./src/omit
  once: require(256         ), // 256 = ./src/once
  or: require(159       ), // 159 = ./src/or
  over: require(257         ), // 257 = ./src/over
  pair: require(258         ), // 258 = ./src/pair
  partial: require(259            ), // 259 = ./src/partial
  partialRight: require(261                 ), // 261 = ./src/partialRight
  partition: require(262              ), // 262 = ./src/partition
  path: require(222         ), // 222 = ./src/path
  pathEq: require(263           ), // 263 = ./src/pathEq
  pathOr: require(264           ), // 264 = ./src/pathOr
  pathSatisfies: require(265                  ), // 265 = ./src/pathSatisfies
  pick: require(266         ), // 266 = ./src/pick
  pickAll: require(267            ), // 267 = ./src/pickAll
  pickBy: require(268           ), // 268 = ./src/pickBy
  pipe: require(94          ), // 94 = ./src/pipe
  pipeK: require(269          ), // 269 = ./src/pipeK
  pipeP: require(102          ), // 102 = ./src/pipeP
  pluck: require(41           ), // 41 = ./src/pluck
  prepend: require(270            ), // 270 = ./src/prepend
  product: require(271            ), // 271 = ./src/product
  project: require(272            ), // 272 = ./src/project
  prop: require(53          ), // 53 = ./src/prop
  propEq: require(274           ), // 274 = ./src/propEq
  propIs: require(275           ), // 275 = ./src/propIs
  propOr: require(276           ), // 276 = ./src/propOr
  propSatisfies: require(277                  ), // 277 = ./src/propSatisfies
  props: require(278          ), // 278 = ./src/props
  range: require(279          ), // 279 = ./src/range
  reduce: require(54            ), // 54 = ./src/reduce
  reduceBy: require(128             ), // 128 = ./src/reduceBy
  reduceRight: require(280                ), // 280 = ./src/reduceRight
  reduceWhile: require(281                ), // 281 = ./src/reduceWhile
  reduced: require(282            ), // 282 = ./src/reduced
  reject: require(116           ), // 116 = ./src/reject
  remove: require(138           ), // 138 = ./src/remove
  repeat: require(283           ), // 283 = ./src/repeat
  replace: require(285            ), // 285 = ./src/replace
  reverse: require(99             ), // 99 = ./src/reverse
  scan: require(286         ), // 286 = ./src/scan
  sequence: require(287             ), // 287 = ./src/sequence
  set: require(288        ), // 288 = ./src/set
  slice: require(98           ), // 98 = ./src/slice
  sort: require(289         ), // 289 = ./src/sort
  sortBy: require(290           ), // 290 = ./src/sortBy
  sortWith: require(291             ), // 291 = ./src/sortWith
  split: require(292          ), // 292 = ./src/split
  splitAt: require(293            ), // 293 = ./src/splitAt
  splitEvery: require(294               ), // 294 = ./src/splitEvery
  splitWhen: require(295              ), // 295 = ./src/splitWhen
  startsWith: require(296               ), // 296 = ./src/startsWith
  subtract: require(297             ), // 297 = ./src/subtract
  sum: require(233        ), // 233 = ./src/sum
  symmetricDifference: require(298                        ), // 298 = ./src/symmetricDifference
  symmetricDifferenceWith: require(299                            ), // 299 = ./src/symmetricDifferenceWith
  tail: require(96          ), // 96 = ./src/tail
  take: require(145         ), // 145 = ./src/take
  takeLast: require(162             ), // 162 = ./src/takeLast
  takeLastWhile: require(300                  ), // 300 = ./src/takeLastWhile
  takeWhile: require(301              ), // 301 = ./src/takeWhile
  tap: require(303        ), // 303 = ./src/tap
  test: require(304         ), // 304 = ./src/test
  times: require(284          ), // 284 = ./src/times
  toLower: require(306            ), // 306 = ./src/toLower
  toPairs: require(307            ), // 307 = ./src/toPairs
  toPairsIn: require(308              ), // 308 = ./src/toPairsIn
  toString: require(105             ), // 105 = ./src/toString
  toUpper: require(309            ), // 309 = ./src/toUpper
  transduce: require(310              ), // 310 = ./src/transduce
  transpose: require(311              ), // 311 = ./src/transpose
  traverse: require(312             ), // 312 = ./src/traverse
  trim: require(313         ), // 313 = ./src/trim
  tryCatch: require(314             ), // 314 = ./src/tryCatch
  type: require(89          ), // 89 = ./src/type
  unapply: require(315            ), // 315 = ./src/unapply
  unary: require(316          ), // 316 = ./src/unary
  uncurryN: require(317             ), // 317 = ./src/uncurryN
  unfold: require(318           ), // 318 = ./src/unfold
  union: require(319          ), // 319 = ./src/union
  unionWith: require(320              ), // 320 = ./src/unionWith
  uniq: require(197         ), // 197 = ./src/uniq
  uniqBy: require(198           ), // 198 = ./src/uniqBy
  uniqWith: require(201             ), // 201 = ./src/uniqWith
  unless: require(321           ), // 321 = ./src/unless
  unnest: require(322           ), // 322 = ./src/unnest
  until: require(323          ), // 323 = ./src/until
  update: require(139           ), // 139 = ./src/update
  useWith: require(273            ), // 273 = ./src/useWith
  values: require(66            ), // 66 = ./src/values
  valuesIn: require(324             ), // 324 = ./src/valuesIn
  view: require(325         ), // 325 = ./src/view
  when: require(326         ), // 326 = ./src/when
  where: require(327          ), // 327 = ./src/where
  whereEq: require(328            ), // 328 = ./src/whereEq
  without: require(329            ), // 329 = ./src/without
  xprod: require(330          ), // 330 = ./src/xprod
  zip: require(331        ), // 331 = ./src/zip
  zipObj: require(332           ), // 332 = ./src/zipObj
  zipWith: require(333            ) // 333 = ./src/zipWith
};
}, 16, null, "ramda/index.js");
__d(/* ramda/src/F.js */function(global, require, module, exports) {var always = require(18        ); // 18 = ./always

module.exports = always(false);
}, 17, null, "ramda/src/F.js");
__d(/* ramda/src/always.js */function(global, require, module, exports) {var _curry1 = require(19                  ); // 19 = ./internal/_curry1

module.exports = _curry1(function always(val) {
  return function () {
    return val;
  };
});
}, 18, null, "ramda/src/always.js");
__d(/* ramda/src/internal/_curry1.js */function(global, require, module, exports) {var _isPlaceholder = require(20                ); // 20 = ./_isPlaceholder

module.exports = function _curry1(fn) {
  return function f1(a) {
    if (arguments.length === 0 || _isPlaceholder(a)) {
      return f1;
    } else {
      return fn.apply(this, arguments);
    }
  };
};
}, 19, null, "ramda/src/internal/_curry1.js");
__d(/* ramda/src/internal/_isPlaceholder.js */function(global, require, module, exports) {module.exports = function _isPlaceholder(a) {
       return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;
};
}, 20, null, "ramda/src/internal/_isPlaceholder.js");
__d(/* ramda/src/T.js */function(global, require, module, exports) {var always = require(18        ); // 18 = ./always

module.exports = always(true);
}, 21, null, "ramda/src/T.js");
__d(/* ramda/src/__.js */function(global, require, module, exports) {
module.exports = { '@@functional/placeholder': true };
}, 22, null, "ramda/src/__.js");
__d(/* ramda/src/add.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2

module.exports = _curry2(function add(a, b) {
  return Number(a) + Number(b);
});
}, 23, null, "ramda/src/add.js");
__d(/* ramda/src/internal/_curry2.js */function(global, require, module, exports) {var _curry1 = require(19         ); // 19 = ./_curry1
var _isPlaceholder = require(20                ); // 20 = ./_isPlaceholder

module.exports = function _curry2(fn) {
  return function f2(a, b) {
    switch (arguments.length) {
      case 0:
        return f2;
      case 1:
        return _isPlaceholder(a) ? f2 : _curry1(function (_b) {
          return fn(a, _b);
        });
      default:
        return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {
          return fn(_a, b);
        }) : _isPlaceholder(b) ? _curry1(function (_b) {
          return fn(a, _b);
        }) : fn(a, b);
    }
  };
};
}, 24, null, "ramda/src/internal/_curry2.js");
__d(/* ramda/src/addIndex.js */function(global, require, module, exports) {var _concat = require(26                  ); // 26 = ./internal/_concat
var _curry1 = require(19                  ); // 19 = ./internal/_curry1
var curryN = require(27        ); // 27 = ./curryN

module.exports = _curry1(function addIndex(fn) {
  return curryN(fn.length, function () {
    var idx = 0;
    var origFn = arguments[0];
    var list = arguments[arguments.length - 1];
    var args = Array.prototype.slice.call(arguments, 0);
    args[0] = function () {
      var result = origFn.apply(this, _concat(arguments, [idx, list]));
      idx += 1;
      return result;
    };
    return fn.apply(this, args);
  });
});
}, 25, null, "ramda/src/addIndex.js");
__d(/* ramda/src/internal/_concat.js */function(global, require, module, exports) {
module.exports = function _concat(set1, set2) {
  set1 = set1 || [];
  set2 = set2 || [];
  var idx;
  var len1 = set1.length;
  var len2 = set2.length;
  var result = [];

  idx = 0;
  while (idx < len1) {
    result[result.length] = set1[idx];
    idx += 1;
  }
  idx = 0;
  while (idx < len2) {
    result[result.length] = set2[idx];
    idx += 1;
  }
  return result;
};
}, 26, null, "ramda/src/internal/_concat.js");
__d(/* ramda/src/curryN.js */function(global, require, module, exports) {var _arity = require(28                 ); // 28 = ./internal/_arity
var _curry1 = require(19                  ); // 19 = ./internal/_curry1
var _curry2 = require(24                  ); // 24 = ./internal/_curry2
var _curryN = require(29                  ); // 29 = ./internal/_curryN

module.exports = _curry2(function curryN(length, fn) {
  if (length === 1) {
    return _curry1(fn);
  }
  return _arity(length, _curryN(length, [], fn));
});
}, 27, null, "ramda/src/curryN.js");
__d(/* ramda/src/internal/_arity.js */function(global, require, module, exports) {module.exports = function _arity(n, fn) {
  switch (n) {
    case 0:
      return function () {
        return fn.apply(this, arguments);
      };
    case 1:
      return function (a0) {
        return fn.apply(this, arguments);
      };
    case 2:
      return function (a0, a1) {
        return fn.apply(this, arguments);
      };
    case 3:
      return function (a0, a1, a2) {
        return fn.apply(this, arguments);
      };
    case 4:
      return function (a0, a1, a2, a3) {
        return fn.apply(this, arguments);
      };
    case 5:
      return function (a0, a1, a2, a3, a4) {
        return fn.apply(this, arguments);
      };
    case 6:
      return function (a0, a1, a2, a3, a4, a5) {
        return fn.apply(this, arguments);
      };
    case 7:
      return function (a0, a1, a2, a3, a4, a5, a6) {
        return fn.apply(this, arguments);
      };
    case 8:
      return function (a0, a1, a2, a3, a4, a5, a6, a7) {
        return fn.apply(this, arguments);
      };
    case 9:
      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {
        return fn.apply(this, arguments);
      };
    case 10:
      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {
        return fn.apply(this, arguments);
      };
    default:
      throw new Error('First argument to _arity must be a non-negative integer no greater than ten');
  }
};
}, 28, null, "ramda/src/internal/_arity.js");
__d(/* ramda/src/internal/_curryN.js */function(global, require, module, exports) {var _arity = require(28        ); // 28 = ./_arity
var _isPlaceholder = require(20                ); // 20 = ./_isPlaceholder

module.exports = function _curryN(length, received, fn) {
  return function () {
    var combined = [];
    var argsIdx = 0;
    var left = length;
    var combinedIdx = 0;
    while (combinedIdx < received.length || argsIdx < arguments.length) {
      var result;
      if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {
        result = received[combinedIdx];
      } else {
        result = arguments[argsIdx];
        argsIdx += 1;
      }
      combined[combinedIdx] = result;
      if (!_isPlaceholder(result)) {
        left -= 1;
      }
      combinedIdx += 1;
    }
    return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));
  };
};
}, 29, null, "ramda/src/internal/_curryN.js");
__d(/* ramda/src/adjust.js */function(global, require, module, exports) {var _concat = require(26                  ); // 26 = ./internal/_concat
var _curry3 = require(31                  ); // 31 = ./internal/_curry3

module.exports = _curry3(function adjust(fn, idx, list) {
  if (idx >= list.length || idx < -list.length) {
    return list;
  }
  var start = idx < 0 ? list.length : 0;
  var _idx = start + idx;
  var _list = _concat(list);
  _list[_idx] = fn(list[_idx]);
  return _list;
});
}, 30, null, "ramda/src/adjust.js");
__d(/* ramda/src/internal/_curry3.js */function(global, require, module, exports) {var _curry1 = require(19         ); // 19 = ./_curry1
var _curry2 = require(24         ); // 24 = ./_curry2
var _isPlaceholder = require(20                ); // 20 = ./_isPlaceholder

module.exports = function _curry3(fn) {
  return function f3(a, b, c) {
    switch (arguments.length) {
      case 0:
        return f3;
      case 1:
        return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {
          return fn(a, _b, _c);
        });
      case 2:
        return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {
          return fn(_a, b, _c);
        }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {
          return fn(a, _b, _c);
        }) : _curry1(function (_c) {
          return fn(a, b, _c);
        });
      default:
        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {
          return fn(_a, _b, c);
        }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {
          return fn(_a, b, _c);
        }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {
          return fn(a, _b, _c);
        }) : _isPlaceholder(a) ? _curry1(function (_a) {
          return fn(_a, b, c);
        }) : _isPlaceholder(b) ? _curry1(function (_b) {
          return fn(a, _b, c);
        }) : _isPlaceholder(c) ? _curry1(function (_c) {
          return fn(a, b, _c);
        }) : fn(a, b, c);
    }
  };
};
}, 31, null, "ramda/src/internal/_curry3.js");
__d(/* ramda/src/all.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2
var _dispatchable = require(33                        ); // 33 = ./internal/_dispatchable
var _xall = require(36                ); // 36 = ./internal/_xall

module.exports = _curry2(_dispatchable(['all'], _xall, function all(fn, list) {
  var idx = 0;
  while (idx < list.length) {
    if (!fn(list[idx])) {
      return false;
    }
    idx += 1;
  }
  return true;
}));
}, 32, null, "ramda/src/all.js");
__d(/* ramda/src/internal/_dispatchable.js */function(global, require, module, exports) {var _isArray = require(34          ); // 34 = ./_isArray
var _isTransformer = require(35                ); // 35 = ./_isTransformer

module.exports = function _dispatchable(methodNames, xf, fn) {
  return function () {
    if (arguments.length === 0) {
      return fn();
    }
    var args = Array.prototype.slice.call(arguments, 0);
    var obj = args.pop();
    if (!_isArray(obj)) {
      var idx = 0;
      while (idx < methodNames.length) {
        if (typeof obj[methodNames[idx]] === 'function') {
          return obj[methodNames[idx]].apply(obj, args);
        }
        idx += 1;
      }
      if (_isTransformer(obj)) {
        var transducer = xf.apply(null, args);
        return transducer(obj);
      }
    }
    return fn.apply(this, arguments);
  };
};
}, 33, null, "ramda/src/internal/_dispatchable.js");
__d(/* ramda/src/internal/_isArray.js */function(global, require, module, exports) {
module.exports = Array.isArray || function _isArray(val) {
  return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';
};
}, 34, null, "ramda/src/internal/_isArray.js");
__d(/* ramda/src/internal/_isTransformer.js */function(global, require, module, exports) {module.exports = function _isTransformer(obj) {
  return typeof obj['@@transducer/step'] === 'function';
};
}, 35, null, "ramda/src/internal/_isTransformer.js");
__d(/* ramda/src/internal/_xall.js */function(global, require, module, exports) {var _curry2 = require(24         ); // 24 = ./_curry2
var _reduced = require(37          ); // 37 = ./_reduced
var _xfBase = require(38         ); // 38 = ./_xfBase

module.exports = function () {
  function XAll(f, xf) {
    this.xf = xf;
    this.f = f;
    this.all = true;
  }
  XAll.prototype['@@transducer/init'] = _xfBase.init;
  XAll.prototype['@@transducer/result'] = function (result) {
    if (this.all) {
      result = this.xf['@@transducer/step'](result, true);
    }
    return this.xf['@@transducer/result'](result);
  };
  XAll.prototype['@@transducer/step'] = function (result, input) {
    if (!this.f(input)) {
      this.all = false;
      result = _reduced(this.xf['@@transducer/step'](result, false));
    }
    return result;
  };

  return _curry2(function _xall(f, xf) {
    return new XAll(f, xf);
  });
}();
}, 36, null, "ramda/src/internal/_xall.js");
__d(/* ramda/src/internal/_reduced.js */function(global, require, module, exports) {module.exports = function _reduced(x) {
  return x && x['@@transducer/reduced'] ? x : {
    '@@transducer/value': x,
    '@@transducer/reduced': true
  };
};
}, 37, null, "ramda/src/internal/_reduced.js");
__d(/* ramda/src/internal/_xfBase.js */function(global, require, module, exports) {module.exports = {
  init: function init() {
    return this.xf['@@transducer/init']();
  },
  result: function result(_result) {
    return this.xf['@@transducer/result'](_result);
  }
};
}, 38, null, "ramda/src/internal/_xfBase.js");
__d(/* ramda/src/allPass.js */function(global, require, module, exports) {var _curry1 = require(19                  ); // 19 = ./internal/_curry1
var curryN = require(27        ); // 27 = ./curryN
var max = require(40     ); // 40 = ./max
var pluck = require(41       ); // 41 = ./pluck
var reduce = require(54        ); // 54 = ./reduce

module.exports = _curry1(function allPass(preds) {
  return curryN(reduce(max, 0, pluck('length', preds)), function () {
    var idx = 0;
    var len = preds.length;
    while (idx < len) {
      if (!preds[idx].apply(this, arguments)) {
        return false;
      }
      idx += 1;
    }
    return true;
  });
});
}, 39, null, "ramda/src/allPass.js");
__d(/* ramda/src/max.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2

module.exports = _curry2(function max(a, b) {
  return b > a ? b : a;
});
}, 40, null, "ramda/src/max.js");
__d(/* ramda/src/pluck.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2
var map = require(42     ); // 42 = ./map
var prop = require(53      ); // 53 = ./prop

module.exports = _curry2(function pluck(p, list) {
  return map(prop(p), list);
});
}, 41, null, "ramda/src/pluck.js");
__d(/* ramda/src/map.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2
var _dispatchable = require(33                        ); // 33 = ./internal/_dispatchable
var _map = require(43               ); // 43 = ./internal/_map
var _reduce = require(44                  ); // 44 = ./internal/_reduce
var _xmap = require(49                ); // 49 = ./internal/_xmap
var curryN = require(27        ); // 27 = ./curryN
var keys = require(50      ); // 50 = ./keys

module.exports = _curry2(_dispatchable(['fantasy-land/map', 'map'], _xmap, function map(fn, functor) {
  switch (Object.prototype.toString.call(functor)) {
    case '[object Function]':
      return curryN(functor.length, function () {
        return fn.call(this, functor.apply(this, arguments));
      });
    case '[object Object]':
      return _reduce(function (acc, key) {
        acc[key] = fn(functor[key]);
        return acc;
      }, {}, keys(functor));
    default:
      return _map(fn, functor);
  }
}));
}, 42, null, "ramda/src/map.js");
__d(/* ramda/src/internal/_map.js */function(global, require, module, exports) {module.exports = function _map(fn, functor) {
  var idx = 0;
  var len = functor.length;
  var result = Array(len);
  while (idx < len) {
    result[idx] = fn(functor[idx]);
    idx += 1;
  }
  return result;
};
}, 43, null, "ramda/src/internal/_map.js");
__d(/* ramda/src/internal/_reduce.js */function(global, require, module, exports) {var _isArrayLike = require(45              ); // 45 = ./_isArrayLike
var _xwrap = require(47        ); // 47 = ./_xwrap
var bind = require(48       ); // 48 = ../bind

module.exports = function () {
  function _arrayReduce(xf, acc, list) {
    var idx = 0;
    var len = list.length;
    while (idx < len) {
      acc = xf['@@transducer/step'](acc, list[idx]);
      if (acc && acc['@@transducer/reduced']) {
        acc = acc['@@transducer/value'];
        break;
      }
      idx += 1;
    }
    return xf['@@transducer/result'](acc);
  }

  function _iterableReduce(xf, acc, iter) {
    var step = iter.next();
    while (!step.done) {
      acc = xf['@@transducer/step'](acc, step.value);
      if (acc && acc['@@transducer/reduced']) {
        acc = acc['@@transducer/value'];
        break;
      }
      step = iter.next();
    }
    return xf['@@transducer/result'](acc);
  }

  function _methodReduce(xf, acc, obj, methodName) {
    return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));
  }

  var symIterator = typeof Symbol !== 'undefined' ? typeof Symbol === 'function' ? Symbol.iterator : '@@iterator' : '@@iterator';
  return function _reduce(fn, acc, list) {
    if (typeof fn === 'function') {
      fn = _xwrap(fn);
    }
    if (_isArrayLike(list)) {
      return _arrayReduce(fn, acc, list);
    }
    if (typeof list['fantasy-land/reduce'] === 'function') {
      return _methodReduce(fn, acc, list, 'fantasy-land/reduce');
    }
    if (list[symIterator] != null) {
      return _iterableReduce(fn, acc, list[symIterator]());
    }
    if (typeof list.next === 'function') {
      return _iterableReduce(fn, acc, list);
    }
    if (typeof list.reduce === 'function') {
      return _methodReduce(fn, acc, list, 'reduce');
    }

    throw new TypeError('reduce: list must be array or iterable');
  };
}();
}, 44, null, "ramda/src/internal/_reduce.js");
__d(/* ramda/src/internal/_isArrayLike.js */function(global, require, module, exports) {var _curry1 = require(19         ); // 19 = ./_curry1
var _isArray = require(34          ); // 34 = ./_isArray
var _isString = require(46           ); // 46 = ./_isString

module.exports = _curry1(function isArrayLike(x) {
  if (_isArray(x)) {
    return true;
  }
  if (!x) {
    return false;
  }
  if (typeof x !== 'object') {
    return false;
  }
  if (_isString(x)) {
    return false;
  }
  if (x.nodeType === 1) {
    return !!x.length;
  }
  if (x.length === 0) {
    return true;
  }
  if (x.length > 0) {
    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);
  }
  return false;
});
}, 45, null, "ramda/src/internal/_isArrayLike.js");
__d(/* ramda/src/internal/_isString.js */function(global, require, module, exports) {module.exports = function _isString(x) {
  return Object.prototype.toString.call(x) === '[object String]';
};
}, 46, null, "ramda/src/internal/_isString.js");
__d(/* ramda/src/internal/_xwrap.js */function(global, require, module, exports) {module.exports = function () {
  function XWrap(fn) {
    this.f = fn;
  }
  XWrap.prototype['@@transducer/init'] = function () {
    throw new Error('init not implemented on XWrap');
  };
  XWrap.prototype['@@transducer/result'] = function (acc) {
    return acc;
  };
  XWrap.prototype['@@transducer/step'] = function (acc, x) {
    return this.f(acc, x);
  };

  return function _xwrap(fn) {
    return new XWrap(fn);
  };
}();
}, 47, null, "ramda/src/internal/_xwrap.js");
__d(/* ramda/src/bind.js */function(global, require, module, exports) {var _arity = require(28                 ); // 28 = ./internal/_arity
var _curry2 = require(24                  ); // 24 = ./internal/_curry2

module.exports = _curry2(function bind(fn, thisObj) {
  return _arity(fn.length, function () {
    return fn.apply(thisObj, arguments);
  });
});
}, 48, null, "ramda/src/bind.js");
__d(/* ramda/src/internal/_xmap.js */function(global, require, module, exports) {var _curry2 = require(24         ); // 24 = ./_curry2
var _xfBase = require(38         ); // 38 = ./_xfBase

module.exports = function () {
  function XMap(f, xf) {
    this.xf = xf;
    this.f = f;
  }
  XMap.prototype['@@transducer/init'] = _xfBase.init;
  XMap.prototype['@@transducer/result'] = _xfBase.result;
  XMap.prototype['@@transducer/step'] = function (result, input) {
    return this.xf['@@transducer/step'](result, this.f(input));
  };

  return _curry2(function _xmap(f, xf) {
    return new XMap(f, xf);
  });
}();
}, 49, null, "ramda/src/internal/_xmap.js");
__d(/* ramda/src/keys.js */function(global, require, module, exports) {var _curry1 = require(19                  ); // 19 = ./internal/_curry1
var _has = require(51               ); // 51 = ./internal/_has
var _isArguments = require(52                       ); // 52 = ./internal/_isArguments

module.exports = function () {
  var hasEnumBug = !{ toString: null }.propertyIsEnumerable('toString');
  var nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];

  var hasArgsEnumBug = function () {
    'use strict';

    return arguments.propertyIsEnumerable('length');
  }();

  var contains = function contains(list, item) {
    var idx = 0;
    while (idx < list.length) {
      if (list[idx] === item) {
        return true;
      }
      idx += 1;
    }
    return false;
  };

  return typeof Object.keys === 'function' && !hasArgsEnumBug ? _curry1(function keys(obj) {
    return Object(obj) !== obj ? [] : Object.keys(obj);
  }) : _curry1(function keys(obj) {
    if (Object(obj) !== obj) {
      return [];
    }
    var prop, nIdx;
    var ks = [];
    var checkArgsLength = hasArgsEnumBug && _isArguments(obj);
    for (prop in obj) {
      if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {
        ks[ks.length] = prop;
      }
    }
    if (hasEnumBug) {
      nIdx = nonEnumerableProps.length - 1;
      while (nIdx >= 0) {
        prop = nonEnumerableProps[nIdx];
        if (_has(prop, obj) && !contains(ks, prop)) {
          ks[ks.length] = prop;
        }
        nIdx -= 1;
      }
    }
    return ks;
  });
}();
}, 50, null, "ramda/src/keys.js");
__d(/* ramda/src/internal/_has.js */function(global, require, module, exports) {module.exports = function _has(prop, obj) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
};
}, 51, null, "ramda/src/internal/_has.js");
__d(/* ramda/src/internal/_isArguments.js */function(global, require, module, exports) {var _has = require(51      ); // 51 = ./_has

module.exports = function () {
  var toString = Object.prototype.toString;
  return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {
    return toString.call(x) === '[object Arguments]';
  } : function _isArguments(x) {
    return _has('callee', x);
  };
}();
}, 52, null, "ramda/src/internal/_isArguments.js");
__d(/* ramda/src/prop.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2

module.exports = _curry2(function prop(p, obj) {
  return obj[p];
});
}, 53, null, "ramda/src/prop.js");
__d(/* ramda/src/reduce.js */function(global, require, module, exports) {var _curry3 = require(31                  ); // 31 = ./internal/_curry3
var _reduce = require(44                  ); // 44 = ./internal/_reduce

module.exports = _curry3(_reduce);
}, 54, null, "ramda/src/reduce.js");
__d(/* ramda/src/and.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2

module.exports = _curry2(function and(a, b) {
  return a && b;
});
}, 55, null, "ramda/src/and.js");
__d(/* ramda/src/any.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2
var _dispatchable = require(33                        ); // 33 = ./internal/_dispatchable
var _xany = require(57                ); // 57 = ./internal/_xany

module.exports = _curry2(_dispatchable(['any'], _xany, function any(fn, list) {
  var idx = 0;
  while (idx < list.length) {
    if (fn(list[idx])) {
      return true;
    }
    idx += 1;
  }
  return false;
}));
}, 56, null, "ramda/src/any.js");
__d(/* ramda/src/internal/_xany.js */function(global, require, module, exports) {var _curry2 = require(24         ); // 24 = ./_curry2
var _reduced = require(37          ); // 37 = ./_reduced
var _xfBase = require(38         ); // 38 = ./_xfBase

module.exports = function () {
  function XAny(f, xf) {
    this.xf = xf;
    this.f = f;
    this.any = false;
  }
  XAny.prototype['@@transducer/init'] = _xfBase.init;
  XAny.prototype['@@transducer/result'] = function (result) {
    if (!this.any) {
      result = this.xf['@@transducer/step'](result, false);
    }
    return this.xf['@@transducer/result'](result);
  };
  XAny.prototype['@@transducer/step'] = function (result, input) {
    if (this.f(input)) {
      this.any = true;
      result = _reduced(this.xf['@@transducer/step'](result, true));
    }
    return result;
  };

  return _curry2(function _xany(f, xf) {
    return new XAny(f, xf);
  });
}();
}, 57, null, "ramda/src/internal/_xany.js");
__d(/* ramda/src/anyPass.js */function(global, require, module, exports) {var _curry1 = require(19                  ); // 19 = ./internal/_curry1
var curryN = require(27        ); // 27 = ./curryN
var max = require(40     ); // 40 = ./max
var pluck = require(41       ); // 41 = ./pluck
var reduce = require(54        ); // 54 = ./reduce

module.exports = _curry1(function anyPass(preds) {
  return curryN(reduce(max, 0, pluck('length', preds)), function () {
    var idx = 0;
    var len = preds.length;
    while (idx < len) {
      if (preds[idx].apply(this, arguments)) {
        return true;
      }
      idx += 1;
    }
    return false;
  });
});
}, 58, null, "ramda/src/anyPass.js");
__d(/* ramda/src/ap.js */function(global, require, module, exports) {var _concat = require(26                  ); // 26 = ./internal/_concat
var _curry2 = require(24                  ); // 24 = ./internal/_curry2
var _reduce = require(44                  ); // 44 = ./internal/_reduce
var map = require(42     ); // 42 = ./map

module.exports = _curry2(function ap(applyF, applyX) {
  return typeof applyX['fantasy-land/ap'] === 'function' ? applyX['fantasy-land/ap'](applyF) : typeof applyF.ap === 'function' ? applyF.ap(applyX) : typeof applyF === 'function' ? function (x) {
    return applyF(x)(applyX(x));
  } : _reduce(function (acc, f) {
    return _concat(acc, map(f, applyX));
  }, [], applyF);
});
}, 59, null, "ramda/src/ap.js");
__d(/* ramda/src/aperture.js */function(global, require, module, exports) {var _aperture = require(61                    ); // 61 = ./internal/_aperture
var _curry2 = require(24                  ); // 24 = ./internal/_curry2
var _dispatchable = require(33                        ); // 33 = ./internal/_dispatchable
var _xaperture = require(62                     ); // 62 = ./internal/_xaperture

module.exports = _curry2(_dispatchable([], _xaperture, _aperture));
}, 60, null, "ramda/src/aperture.js");
__d(/* ramda/src/internal/_aperture.js */function(global, require, module, exports) {module.exports = function _aperture(n, list) {
  var idx = 0;
  var limit = list.length - (n - 1);
  var acc = new Array(limit >= 0 ? limit : 0);
  while (idx < limit) {
    acc[idx] = Array.prototype.slice.call(list, idx, idx + n);
    idx += 1;
  }
  return acc;
};
}, 61, null, "ramda/src/internal/_aperture.js");
__d(/* ramda/src/internal/_xaperture.js */function(global, require, module, exports) {var _concat = require(26         ); // 26 = ./_concat
var _curry2 = require(24         ); // 24 = ./_curry2
var _xfBase = require(38         ); // 38 = ./_xfBase

module.exports = function () {
  function XAperture(n, xf) {
    this.xf = xf;
    this.pos = 0;
    this.full = false;
    this.acc = new Array(n);
  }
  XAperture.prototype['@@transducer/init'] = _xfBase.init;
  XAperture.prototype['@@transducer/result'] = function (result) {
    this.acc = null;
    return this.xf['@@transducer/result'](result);
  };
  XAperture.prototype['@@transducer/step'] = function (result, input) {
    this.store(input);
    return this.full ? this.xf['@@transducer/step'](result, this.getCopy()) : result;
  };
  XAperture.prototype.store = function (input) {
    this.acc[this.pos] = input;
    this.pos += 1;
    if (this.pos === this.acc.length) {
      this.pos = 0;
      this.full = true;
    }
  };
  XAperture.prototype.getCopy = function () {
    return _concat(Array.prototype.slice.call(this.acc, this.pos), Array.prototype.slice.call(this.acc, 0, this.pos));
  };

  return _curry2(function _xaperture(n, xf) {
    return new XAperture(n, xf);
  });
}();
}, 62, null, "ramda/src/internal/_xaperture.js");
__d(/* ramda/src/append.js */function(global, require, module, exports) {var _concat = require(26                  ); // 26 = ./internal/_concat
var _curry2 = require(24                  ); // 24 = ./internal/_curry2

module.exports = _curry2(function append(el, list) {
  return _concat(list, [el]);
});
}, 63, null, "ramda/src/append.js");
__d(/* ramda/src/apply.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2

module.exports = _curry2(function apply(fn, args) {
  return fn.apply(this, args);
});
}, 64, null, "ramda/src/apply.js");
__d(/* ramda/src/applySpec.js */function(global, require, module, exports) {var _curry1 = require(19                  ); // 19 = ./internal/_curry1
var apply = require(64       ); // 64 = ./apply
var curryN = require(27        ); // 27 = ./curryN
var map = require(42     ); // 42 = ./map
var max = require(40     ); // 40 = ./max
var pluck = require(41       ); // 41 = ./pluck
var reduce = require(54        ); // 54 = ./reduce
var values = require(66        ); // 66 = ./values

module.exports = _curry1(function applySpec(spec) {
  spec = map(function (v) {
    return typeof v == 'function' ? v : applySpec(v);
  }, spec);
  return curryN(reduce(max, 0, pluck('length', values(spec))), function () {
    var args = arguments;
    return map(function (f) {
      return apply(f, args);
    }, spec);
  });
});
}, 65, null, "ramda/src/applySpec.js");
__d(/* ramda/src/values.js */function(global, require, module, exports) {var _curry1 = require(19                  ); // 19 = ./internal/_curry1
var keys = require(50      ); // 50 = ./keys

module.exports = _curry1(function values(obj) {
  var props = keys(obj);
  var len = props.length;
  var vals = [];
  var idx = 0;
  while (idx < len) {
    vals[idx] = obj[props[idx]];
    idx += 1;
  }
  return vals;
});
}, 66, null, "ramda/src/values.js");
__d(/* ramda/src/ascend.js */function(global, require, module, exports) {var _curry3 = require(31                  ); // 31 = ./internal/_curry3

module.exports = _curry3(function ascend(fn, a, b) {
  var aa = fn(a);
  var bb = fn(b);
  return aa < bb ? -1 : aa > bb ? 1 : 0;
});
}, 67, null, "ramda/src/ascend.js");
__d(/* ramda/src/assoc.js */function(global, require, module, exports) {var _curry3 = require(31                  ); // 31 = ./internal/_curry3

module.exports = _curry3(function assoc(prop, val, obj) {
  var result = {};
  for (var p in obj) {
    result[p] = obj[p];
  }
  result[prop] = val;
  return result;
});
}, 68, null, "ramda/src/assoc.js");
__d(/* ramda/src/assocPath.js */function(global, require, module, exports) {var _curry3 = require(31                  ); // 31 = ./internal/_curry3
var _has = require(51               ); // 51 = ./internal/_has
var _isArray = require(34                   ); // 34 = ./internal/_isArray
var _isInteger = require(70                     ); // 70 = ./internal/_isInteger
var assoc = require(68       ); // 68 = ./assoc
var isNil = require(71       ); // 71 = ./isNil

module.exports = _curry3(function assocPath(path, val, obj) {
  if (path.length === 0) {
    return val;
  }
  var idx = path[0];
  if (path.length > 1) {
    var nextObj = !isNil(obj) && _has(idx, obj) ? obj[idx] : _isInteger(path[1]) ? [] : {};
    val = assocPath(Array.prototype.slice.call(path, 1), val, nextObj);
  }
  if (_isInteger(idx) && _isArray(obj)) {
    var arr = [].concat(obj);
    arr[idx] = val;
    return arr;
  } else {
    return assoc(idx, val, obj);
  }
});
}, 69, null, "ramda/src/assocPath.js");
__d(/* ramda/src/internal/_isInteger.js */function(global, require, module, exports) {
module.exports = Number.isInteger || function _isInteger(n) {
  return n << 0 === n;
};
}, 70, null, "ramda/src/internal/_isInteger.js");
__d(/* ramda/src/isNil.js */function(global, require, module, exports) {var _curry1 = require(19                  ); // 19 = ./internal/_curry1

module.exports = _curry1(function isNil(x) {
  return x == null;
});
}, 71, null, "ramda/src/isNil.js");
__d(/* ramda/src/binary.js */function(global, require, module, exports) {var _curry1 = require(19                  ); // 19 = ./internal/_curry1
var nAry = require(73      ); // 73 = ./nAry

module.exports = _curry1(function binary(fn) {
  return nAry(2, fn);
});
}, 72, null, "ramda/src/binary.js");
__d(/* ramda/src/nAry.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2

module.exports = _curry2(function nAry(n, fn) {
  switch (n) {
    case 0:
      return function () {
        return fn.call(this);
      };
    case 1:
      return function (a0) {
        return fn.call(this, a0);
      };
    case 2:
      return function (a0, a1) {
        return fn.call(this, a0, a1);
      };
    case 3:
      return function (a0, a1, a2) {
        return fn.call(this, a0, a1, a2);
      };
    case 4:
      return function (a0, a1, a2, a3) {
        return fn.call(this, a0, a1, a2, a3);
      };
    case 5:
      return function (a0, a1, a2, a3, a4) {
        return fn.call(this, a0, a1, a2, a3, a4);
      };
    case 6:
      return function (a0, a1, a2, a3, a4, a5) {
        return fn.call(this, a0, a1, a2, a3, a4, a5);
      };
    case 7:
      return function (a0, a1, a2, a3, a4, a5, a6) {
        return fn.call(this, a0, a1, a2, a3, a4, a5, a6);
      };
    case 8:
      return function (a0, a1, a2, a3, a4, a5, a6, a7) {
        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7);
      };
    case 9:
      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {
        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8);
      };
    case 10:
      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {
        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);
      };
    default:
      throw new Error('First argument to nAry must be a non-negative integer no greater than ten');
  }
});
}, 73, null, "ramda/src/nAry.js");
__d(/* ramda/src/both.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2
var _isFunction = require(75                      ); // 75 = ./internal/_isFunction
var and = require(55     ); // 55 = ./and
var lift = require(76      ); // 76 = ./lift

module.exports = _curry2(function both(f, g) {
  return _isFunction(f) ? function _both() {
    return f.apply(this, arguments) && g.apply(this, arguments);
  } : lift(and)(f, g);
});
}, 74, null, "ramda/src/both.js");
__d(/* ramda/src/internal/_isFunction.js */function(global, require, module, exports) {module.exports = function _isFunction(x) {
  return Object.prototype.toString.call(x) === '[object Function]';
};
}, 75, null, "ramda/src/internal/_isFunction.js");
__d(/* ramda/src/lift.js */function(global, require, module, exports) {var _curry1 = require(19                  ); // 19 = ./internal/_curry1
var liftN = require(77       ); // 77 = ./liftN

module.exports = _curry1(function lift(fn) {
  return liftN(fn.length, fn);
});
}, 76, null, "ramda/src/lift.js");
__d(/* ramda/src/liftN.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2
var _reduce = require(44                  ); // 44 = ./internal/_reduce
var ap = require(59    ); // 59 = ./ap
var curryN = require(27        ); // 27 = ./curryN
var map = require(42     ); // 42 = ./map

module.exports = _curry2(function liftN(arity, fn) {
  var lifted = curryN(arity, fn);
  return curryN(arity, function () {
    return _reduce(ap, map(lifted, arguments[0]), Array.prototype.slice.call(arguments, 1));
  });
});
}, 77, null, "ramda/src/liftN.js");
__d(/* ramda/src/call.js */function(global, require, module, exports) {var curry = require(79       ); // 79 = ./curry

module.exports = curry(function call(fn) {
  return fn.apply(this, Array.prototype.slice.call(arguments, 1));
});
}, 78, null, "ramda/src/call.js");
__d(/* ramda/src/curry.js */function(global, require, module, exports) {var _curry1 = require(19                  ); // 19 = ./internal/_curry1
var curryN = require(27        ); // 27 = ./curryN

module.exports = _curry1(function curry(fn) {
  return curryN(fn.length, fn);
});
}, 79, null, "ramda/src/curry.js");
__d(/* ramda/src/chain.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2
var _dispatchable = require(33                        ); // 33 = ./internal/_dispatchable
var _makeFlat = require(81                    ); // 81 = ./internal/_makeFlat
var _xchain = require(82                  ); // 82 = ./internal/_xchain
var map = require(42     ); // 42 = ./map

module.exports = _curry2(_dispatchable(['fantasy-land/chain', 'chain'], _xchain, function chain(fn, monad) {
  if (typeof monad === 'function') {
    return function (x) {
      return fn(monad(x))(x);
    };
  }
  return _makeFlat(false)(map(fn, monad));
}));
}, 80, null, "ramda/src/chain.js");
__d(/* ramda/src/internal/_makeFlat.js */function(global, require, module, exports) {var _isArrayLike = require(45              ); // 45 = ./_isArrayLike

module.exports = function _makeFlat(recursive) {
  return function flatt(list) {
    var value, jlen, j;
    var result = [];
    var idx = 0;
    var ilen = list.length;

    while (idx < ilen) {
      if (_isArrayLike(list[idx])) {
        value = recursive ? flatt(list[idx]) : list[idx];
        j = 0;
        jlen = value.length;
        while (j < jlen) {
          result[result.length] = value[j];
          j += 1;
        }
      } else {
        result[result.length] = list[idx];
      }
      idx += 1;
    }
    return result;
  };
};
}, 81, null, "ramda/src/internal/_makeFlat.js");
__d(/* ramda/src/internal/_xchain.js */function(global, require, module, exports) {var _curry2 = require(24         ); // 24 = ./_curry2
var _flatCat = require(83          ); // 83 = ./_flatCat
var map = require(42      ); // 42 = ../map

module.exports = _curry2(function _xchain(f, xf) {
  return map(f, _flatCat(xf));
});
}, 82, null, "ramda/src/internal/_xchain.js");
__d(/* ramda/src/internal/_flatCat.js */function(global, require, module, exports) {var _forceReduced = require(84               ); // 84 = ./_forceReduced
var _isArrayLike = require(45              ); // 45 = ./_isArrayLike
var _reduce = require(44         ); // 44 = ./_reduce
var _xfBase = require(38         ); // 38 = ./_xfBase

module.exports = function () {
  var preservingReduced = function preservingReduced(xf) {
    return {
      '@@transducer/init': _xfBase.init,
      '@@transducer/result': function transducerResult(result) {
        return xf['@@transducer/result'](result);
      },
      '@@transducer/step': function transducerStep(result, input) {
        var ret = xf['@@transducer/step'](result, input);
        return ret['@@transducer/reduced'] ? _forceReduced(ret) : ret;
      }
    };
  };

  return function _xcat(xf) {
    var rxf = preservingReduced(xf);
    return {
      '@@transducer/init': _xfBase.init,
      '@@transducer/result': function transducerResult(result) {
        return rxf['@@transducer/result'](result);
      },
      '@@transducer/step': function transducerStep(result, input) {
        return !_isArrayLike(input) ? _reduce(rxf, result, [input]) : _reduce(rxf, result, input);
      }
    };
  };
}();
}, 83, null, "ramda/src/internal/_flatCat.js");
__d(/* ramda/src/internal/_forceReduced.js */function(global, require, module, exports) {module.exports = function _forceReduced(x) {
  return {
    '@@transducer/value': x,
    '@@transducer/reduced': true
  };
};
}, 84, null, "ramda/src/internal/_forceReduced.js");
__d(/* ramda/src/clamp.js */function(global, require, module, exports) {var _curry3 = require(31                  ); // 31 = ./internal/_curry3

module.exports = _curry3(function clamp(min, max, value) {
  if (min > max) {
    throw new Error('min must not be greater than max in clamp(min, max, value)');
  }
  return value < min ? min : value > max ? max : value;
});
}, 85, null, "ramda/src/clamp.js");
__d(/* ramda/src/clone.js */function(global, require, module, exports) {var _clone = require(87                 ); // 87 = ./internal/_clone
var _curry1 = require(19                  ); // 19 = ./internal/_curry1

module.exports = _curry1(function clone(value) {
  return value != null && typeof value.clone === 'function' ? value.clone() : _clone(value, [], [], true);
});
}, 86, null, "ramda/src/clone.js");
__d(/* ramda/src/internal/_clone.js */function(global, require, module, exports) {var _cloneRegExp = require(88              ); // 88 = ./_cloneRegExp
var type = require(89       ); // 89 = ../type

module.exports = function _clone(value, refFrom, refTo, deep) {
  var copy = function copy(copiedValue) {
    var len = refFrom.length;
    var idx = 0;
    while (idx < len) {
      if (value === refFrom[idx]) {
        return refTo[idx];
      }
      idx += 1;
    }
    refFrom[idx + 1] = value;
    refTo[idx + 1] = copiedValue;
    for (var key in value) {
      copiedValue[key] = deep ? _clone(value[key], refFrom, refTo, true) : value[key];
    }
    return copiedValue;
  };
  switch (type(value)) {
    case 'Object':
      return copy({});
    case 'Array':
      return copy([]);
    case 'Date':
      return new Date(value.valueOf());
    case 'RegExp':
      return _cloneRegExp(value);
    default:
      return value;
  }
};
}, 87, null, "ramda/src/internal/_clone.js");
__d(/* ramda/src/internal/_cloneRegExp.js */function(global, require, module, exports) {module.exports = function _cloneRegExp(pattern) {
                                  return new RegExp(pattern.source, (pattern.global ? 'g' : '') + (pattern.ignoreCase ? 'i' : '') + (pattern.multiline ? 'm' : '') + (pattern.sticky ? 'y' : '') + (pattern.unicode ? 'u' : ''));
};
}, 88, null, "ramda/src/internal/_cloneRegExp.js");
__d(/* ramda/src/type.js */function(global, require, module, exports) {var _curry1 = require(19                  ); // 19 = ./internal/_curry1

module.exports = _curry1(function type(val) {
  return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);
});
}, 89, null, "ramda/src/type.js");
__d(/* ramda/src/comparator.js */function(global, require, module, exports) {var _curry1 = require(19                  ); // 19 = ./internal/_curry1

module.exports = _curry1(function comparator(pred) {
  return function (a, b) {
    return pred(a, b) ? -1 : pred(b, a) ? 1 : 0;
  };
});
}, 90, null, "ramda/src/comparator.js");
__d(/* ramda/src/complement.js */function(global, require, module, exports) {var lift = require(76      ); // 76 = ./lift
var not = require(92     ); // 92 = ./not

module.exports = lift(not);
}, 91, null, "ramda/src/complement.js");
__d(/* ramda/src/not.js */function(global, require, module, exports) {var _curry1 = require(19                  ); // 19 = ./internal/_curry1

module.exports = _curry1(function not(a) {
  return !a;
});
}, 92, null, "ramda/src/not.js");
__d(/* ramda/src/compose.js */function(global, require, module, exports) {var pipe = require(94      ); // 94 = ./pipe
var reverse = require(99         ); // 99 = ./reverse

module.exports = function compose() {
  if (arguments.length === 0) {
    throw new Error('compose requires at least one argument');
  }
  return pipe.apply(this, reverse(arguments));
};
}, 93, null, "ramda/src/compose.js");
__d(/* ramda/src/pipe.js */function(global, require, module, exports) {var _arity = require(28                 ); // 28 = ./internal/_arity
var _pipe = require(95                ); // 95 = ./internal/_pipe
var reduce = require(54        ); // 54 = ./reduce
var tail = require(96      ); // 96 = ./tail

module.exports = function pipe() {
  if (arguments.length === 0) {
    throw new Error('pipe requires at least one argument');
  }
  return _arity(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));
};
}, 94, null, "ramda/src/pipe.js");
__d(/* ramda/src/internal/_pipe.js */function(global, require, module, exports) {module.exports = function _pipe(f, g) {
  return function () {
    return g.call(this, f.apply(this, arguments));
  };
};
}, 95, null, "ramda/src/internal/_pipe.js");
__d(/* ramda/src/tail.js */function(global, require, module, exports) {var _checkForMethod = require(97                          ); // 97 = ./internal/_checkForMethod
var _curry1 = require(19                  ); // 19 = ./internal/_curry1
var slice = require(98       ); // 98 = ./slice

module.exports = _curry1(_checkForMethod('tail', slice(1, Infinity)));
}, 96, null, "ramda/src/tail.js");
__d(/* ramda/src/internal/_checkForMethod.js */function(global, require, module, exports) {var _isArray = require(34          ); // 34 = ./_isArray

module.exports = function _checkForMethod(methodname, fn) {
  return function () {
    var length = arguments.length;
    if (length === 0) {
      return fn();
    }
    var obj = arguments[length - 1];
    return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));
  };
};
}, 97, null, "ramda/src/internal/_checkForMethod.js");
__d(/* ramda/src/slice.js */function(global, require, module, exports) {var _checkForMethod = require(97                          ); // 97 = ./internal/_checkForMethod
var _curry3 = require(31                  ); // 31 = ./internal/_curry3

module.exports = _curry3(_checkForMethod('slice', function slice(fromIndex, toIndex, list) {
  return Array.prototype.slice.call(list, fromIndex, toIndex);
}));
}, 98, null, "ramda/src/slice.js");
__d(/* ramda/src/reverse.js */function(global, require, module, exports) {var _curry1 = require(19                  ); // 19 = ./internal/_curry1
var _isString = require(46                    ); // 46 = ./internal/_isString

module.exports = _curry1(function reverse(list) {
  return _isString(list) ? list.split('').reverse().join('') : Array.prototype.slice.call(list, 0).reverse();
});
}, 99, null, "ramda/src/reverse.js");
__d(/* ramda/src/composeK.js */function(global, require, module, exports) {var chain = require(80       ); // 80 = ./chain
var compose = require(93         ); // 93 = ./compose
var map = require(42     ); // 42 = ./map

module.exports = function composeK() {
  if (arguments.length === 0) {
    throw new Error('composeK requires at least one argument');
  }
  var init = Array.prototype.slice.call(arguments);
  var last = init.pop();
  return compose(compose.apply(this, map(chain, init)), last);
};
}, 100, null, "ramda/src/composeK.js");
__d(/* ramda/src/composeP.js */function(global, require, module, exports) {var pipeP = require(102      ); // 102 = ./pipeP
var reverse = require(99         ); // 99 = ./reverse

module.exports = function composeP() {
  if (arguments.length === 0) {
    throw new Error('composeP requires at least one argument');
  }
  return pipeP.apply(this, reverse(arguments));
};
}, 101, null, "ramda/src/composeP.js");
__d(/* ramda/src/pipeP.js */function(global, require, module, exports) {var _arity = require(28                 ); // 28 = ./internal/_arity
var _pipeP = require(103                ); // 103 = ./internal/_pipeP
var reduce = require(54        ); // 54 = ./reduce
var tail = require(96      ); // 96 = ./tail

module.exports = function pipeP() {
  if (arguments.length === 0) {
    throw new Error('pipeP requires at least one argument');
  }
  return _arity(arguments[0].length, reduce(_pipeP, arguments[0], tail(arguments)));
};
}, 102, null, "ramda/src/pipeP.js");
__d(/* ramda/src/internal/_pipeP.js */function(global, require, module, exports) {module.exports = function _pipeP(f, g) {
  return function () {
    var ctx = this;
    return f.apply(ctx, arguments).then(function (x) {
      return g.call(ctx, x);
    });
  };
};
}, 103, null, "ramda/src/internal/_pipeP.js");
__d(/* ramda/src/concat.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2
var _isArray = require(34                   ); // 34 = ./internal/_isArray
var _isFunction = require(75                      ); // 75 = ./internal/_isFunction
var _isString = require(46                    ); // 46 = ./internal/_isString
var toString = require(105         ); // 105 = ./toString

module.exports = _curry2(function concat(a, b) {
  if (_isArray(a)) {
    if (_isArray(b)) {
      return a.concat(b);
    }
    throw new TypeError(toString(b) + ' is not an array');
  }
  if (_isString(a)) {
    if (_isString(b)) {
      return a + b;
    }
    throw new TypeError(toString(b) + ' is not a string');
  }
  if (a != null && _isFunction(a['fantasy-land/concat'])) {
    return a['fantasy-land/concat'](b);
  }
  if (a != null && _isFunction(a.concat)) {
    return a.concat(b);
  }
  throw new TypeError(toString(a) + ' does not have a method named "concat" or "fantasy-land/concat"');
});
}, 104, null, "ramda/src/concat.js");
__d(/* ramda/src/toString.js */function(global, require, module, exports) {var _curry1 = require(19                  ); // 19 = ./internal/_curry1
var _toString = require(106                   ); // 106 = ./internal/_toString

module.exports = _curry1(function toString(val) {
  return _toString(val, []);
});
}, 105, null, "ramda/src/toString.js");
__d(/* ramda/src/internal/_toString.js */function(global, require, module, exports) {var _contains = require(107          ); // 107 = ./_contains
var _map = require(43      ); // 43 = ./_map
var _quote = require(114       ); // 114 = ./_quote
var _toISOString = require(115             ); // 115 = ./_toISOString
var keys = require(50       ); // 50 = ../keys
var reject = require(116        ); // 116 = ../reject

module.exports = function _toString(x, seen) {
  var recur = function recur(y) {
    var xs = seen.concat([x]);
    return _contains(y, xs) ? '<Circular>' : _toString(y, xs);
  };

  var mapPairs = function mapPairs(obj, keys) {
    return _map(function (k) {
      return _quote(k) + ': ' + recur(obj[k]);
    }, keys.slice().sort());
  };

  switch (Object.prototype.toString.call(x)) {
    case '[object Arguments]':
      return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';
    case '[object Array]':
      return '[' + _map(recur, x).concat(mapPairs(x, reject(function (k) {
        return (/^\d+$/.test(k)
        );
      }, keys(x)))).join(', ') + ']';
    case '[object Boolean]':
      return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();
    case '[object Date]':
      return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';
    case '[object Null]':
      return 'null';
    case '[object Number]':
      return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);
    case '[object String]':
      return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);
    case '[object Undefined]':
      return 'undefined';
    default:
      if (typeof x.toString === 'function') {
        var repr = x.toString();
        if (repr !== '[object Object]') {
          return repr;
        }
      }
      return '{' + mapPairs(x, keys(x)).join(', ') + '}';
  }
};
}, 106, null, "ramda/src/internal/_toString.js");
__d(/* ramda/src/internal/_contains.js */function(global, require, module, exports) {var _indexOf = require(108         ); // 108 = ./_indexOf

module.exports = function _contains(a, list) {
  return _indexOf(list, a, 0) >= 0;
};
}, 107, null, "ramda/src/internal/_contains.js");
__d(/* ramda/src/internal/_indexOf.js */function(global, require, module, exports) {var equals = require(109        ); // 109 = ../equals

module.exports = function _indexOf(list, a, idx) {
  var inf, item;

  if (typeof list.indexOf === 'function') {
    switch (typeof a) {
      case 'number':
        if (a === 0) {
          inf = 1 / a;
          while (idx < list.length) {
            item = list[idx];
            if (item === 0 && 1 / item === inf) {
              return idx;
            }
            idx += 1;
          }
          return -1;
        } else if (a !== a) {
          while (idx < list.length) {
            item = list[idx];
            if (typeof item === 'number' && item !== item) {
              return idx;
            }
            idx += 1;
          }
          return -1;
        }

        return list.indexOf(a, idx);

      case 'string':
      case 'boolean':
      case 'function':
      case 'undefined':
        return list.indexOf(a, idx);

      case 'object':
        if (a === null) {
          return list.indexOf(a, idx);
        }
    }
  }

  while (idx < list.length) {
    if (equals(list[idx], a)) {
      return idx;
    }
    idx += 1;
  }
  return -1;
};
}, 108, null, "ramda/src/internal/_indexOf.js");
__d(/* ramda/src/equals.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2
var _equals = require(110                 ); // 110 = ./internal/_equals

module.exports = _curry2(function equals(a, b) {
  return _equals(a, b, [], []);
});
}, 109, null, "ramda/src/equals.js");
__d(/* ramda/src/internal/_equals.js */function(global, require, module, exports) {var _arrayFromIterator = require(111                   ); // 111 = ./_arrayFromIterator
var _functionName = require(112              ); // 112 = ./_functionName
var _has = require(51      ); // 51 = ./_has
var identical = require(113           ); // 113 = ../identical
var keys = require(50       ); // 50 = ../keys
var type = require(89       ); // 89 = ../type

module.exports = function _equals(a, b, stackA, stackB) {
  if (identical(a, b)) {
    return true;
  }

  if (type(a) !== type(b)) {
    return false;
  }

  if (a == null || b == null) {
    return false;
  }

  if (typeof a['fantasy-land/equals'] === 'function' || typeof b['fantasy-land/equals'] === 'function') {
    return typeof a['fantasy-land/equals'] === 'function' && a['fantasy-land/equals'](b) && typeof b['fantasy-land/equals'] === 'function' && b['fantasy-land/equals'](a);
  }

  if (typeof a.equals === 'function' || typeof b.equals === 'function') {
    return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);
  }

  switch (type(a)) {
    case 'Arguments':
    case 'Array':
    case 'Object':
      if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {
        return a === b;
      }
      break;
    case 'Boolean':
    case 'Number':
    case 'String':
      if (!(typeof a === typeof b && identical(a.valueOf(), b.valueOf()))) {
        return false;
      }
      break;
    case 'Date':
      if (!identical(a.valueOf(), b.valueOf())) {
        return false;
      }
      break;
    case 'Error':
      return a.name === b.name && a.message === b.message;
    case 'RegExp':
      if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {
        return false;
      }
      break;
    case 'Map':
    case 'Set':
      if (!_equals(_arrayFromIterator(a.entries()), _arrayFromIterator(b.entries()), stackA, stackB)) {
        return false;
      }
      break;
    case 'Int8Array':
    case 'Uint8Array':
    case 'Uint8ClampedArray':
    case 'Int16Array':
    case 'Uint16Array':
    case 'Int32Array':
    case 'Uint32Array':
    case 'Float32Array':
    case 'Float64Array':
      break;
    case 'ArrayBuffer':
      break;
    default:
      return false;
  }

  var keysA = keys(a);
  if (keysA.length !== keys(b).length) {
    return false;
  }

  var idx = stackA.length - 1;
  while (idx >= 0) {
    if (stackA[idx] === a) {
      return stackB[idx] === b;
    }
    idx -= 1;
  }

  stackA.push(a);
  stackB.push(b);
  idx = keysA.length - 1;
  while (idx >= 0) {
    var key = keysA[idx];
    if (!(_has(key, b) && _equals(b[key], a[key], stackA, stackB))) {
      return false;
    }
    idx -= 1;
  }
  stackA.pop();
  stackB.pop();
  return true;
};
}, 110, null, "ramda/src/internal/_equals.js");
__d(/* ramda/src/internal/_arrayFromIterator.js */function(global, require, module, exports) {module.exports = function _arrayFromIterator(iter) {
  var list = [];
  var next;
  while (!(next = iter.next()).done) {
    list.push(next.value);
  }
  return list;
};
}, 111, null, "ramda/src/internal/_arrayFromIterator.js");
__d(/* ramda/src/internal/_functionName.js */function(global, require, module, exports) {module.exports = function _functionName(f) {
  var match = String(f).match(/^function (\w*)/);
  return match == null ? '' : match[1];
};
}, 112, null, "ramda/src/internal/_functionName.js");
__d(/* ramda/src/identical.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2

module.exports = _curry2(function identical(a, b) {
  if (a === b) {
    return a !== 0 || 1 / a === 1 / b;
  } else {
    return a !== a && b !== b;
  }
});
}, 113, null, "ramda/src/identical.js");
__d(/* ramda/src/internal/_quote.js */function(global, require, module, exports) {module.exports = function _quote(s) {
  var escaped = s.replace(/\\/g, '\\\\').replace(/[\b]/g, '\\b').replace(/\f/g, '\\f').replace(/\n/g, '\\n').replace(/\r/g, '\\r').replace(/\t/g, '\\t').replace(/\v/g, '\\v').replace(/\0/g, '\\0');

  return '"' + escaped.replace(/"/g, '\\"') + '"';
};
}, 114, null, "ramda/src/internal/_quote.js");
__d(/* ramda/src/internal/_toISOString.js */function(global, require, module, exports) {
module.exports = function () {
  var pad = function pad(n) {
    return (n < 10 ? '0' : '') + n;
  };

  return typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {
    return d.toISOString();
  } : function _toISOString(d) {
    return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';
  };
}();
}, 115, null, "ramda/src/internal/_toISOString.js");
__d(/* ramda/src/reject.js */function(global, require, module, exports) {var _complement = require(117                     ); // 117 = ./internal/_complement
var _curry2 = require(24                  ); // 24 = ./internal/_curry2
var filter = require(118       ); // 118 = ./filter

module.exports = _curry2(function reject(pred, filterable) {
  return filter(_complement(pred), filterable);
});
}, 116, null, "ramda/src/reject.js");
__d(/* ramda/src/internal/_complement.js */function(global, require, module, exports) {module.exports = function _complement(f) {
  return function () {
    return !f.apply(this, arguments);
  };
};
}, 117, null, "ramda/src/internal/_complement.js");
__d(/* ramda/src/filter.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2
var _dispatchable = require(33                        ); // 33 = ./internal/_dispatchable
var _filter = require(119                 ); // 119 = ./internal/_filter
var _isObject = require(120                   ); // 120 = ./internal/_isObject
var _reduce = require(44                  ); // 44 = ./internal/_reduce
var _xfilter = require(121                  ); // 121 = ./internal/_xfilter
var keys = require(50      ); // 50 = ./keys

module.exports = _curry2(_dispatchable(['filter'], _xfilter, function (pred, filterable) {
  return _isObject(filterable) ? _reduce(function (acc, key) {
    if (pred(filterable[key])) {
      acc[key] = filterable[key];
    }
    return acc;
  }, {}, keys(filterable)) : _filter(pred, filterable);
}));
}, 118, null, "ramda/src/filter.js");
__d(/* ramda/src/internal/_filter.js */function(global, require, module, exports) {module.exports = function _filter(fn, list) {
  var idx = 0;
  var len = list.length;
  var result = [];

  while (idx < len) {
    if (fn(list[idx])) {
      result[result.length] = list[idx];
    }
    idx += 1;
  }
  return result;
};
}, 119, null, "ramda/src/internal/_filter.js");
__d(/* ramda/src/internal/_isObject.js */function(global, require, module, exports) {module.exports = function _isObject(x) {
  return Object.prototype.toString.call(x) === '[object Object]';
};
}, 120, null, "ramda/src/internal/_isObject.js");
__d(/* ramda/src/internal/_xfilter.js */function(global, require, module, exports) {var _curry2 = require(24         ); // 24 = ./_curry2
var _xfBase = require(38         ); // 38 = ./_xfBase

module.exports = function () {
  function XFilter(f, xf) {
    this.xf = xf;
    this.f = f;
  }
  XFilter.prototype['@@transducer/init'] = _xfBase.init;
  XFilter.prototype['@@transducer/result'] = _xfBase.result;
  XFilter.prototype['@@transducer/step'] = function (result, input) {
    return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;
  };

  return _curry2(function _xfilter(f, xf) {
    return new XFilter(f, xf);
  });
}();
}, 121, null, "ramda/src/internal/_xfilter.js");
__d(/* ramda/src/cond.js */function(global, require, module, exports) {var _arity = require(28                 ); // 28 = ./internal/_arity
var _curry1 = require(19                  ); // 19 = ./internal/_curry1
var map = require(42     ); // 42 = ./map
var max = require(40     ); // 40 = ./max
var reduce = require(54        ); // 54 = ./reduce

module.exports = _curry1(function cond(pairs) {
  var arity = reduce(max, 0, map(function (pair) {
    return pair[0].length;
  }, pairs));
  return _arity(arity, function () {
    var idx = 0;
    while (idx < pairs.length) {
      if (pairs[idx][0].apply(this, arguments)) {
        return pairs[idx][1].apply(this, arguments);
      }
      idx += 1;
    }
  });
});
}, 122, null, "ramda/src/cond.js");
__d(/* ramda/src/construct.js */function(global, require, module, exports) {var _curry1 = require(19                  ); // 19 = ./internal/_curry1
var constructN = require(124           ); // 124 = ./constructN

module.exports = _curry1(function construct(Fn) {
  return constructN(Fn.length, Fn);
});
}, 123, null, "ramda/src/construct.js");
__d(/* ramda/src/constructN.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2
var curry = require(79       ); // 79 = ./curry
var nAry = require(73      ); // 73 = ./nAry

module.exports = _curry2(function constructN(n, Fn) {
  if (n > 10) {
    throw new Error('Constructor with greater than ten arguments');
  }
  if (n === 0) {
    return function () {
      return new Fn();
    };
  }
  return curry(nAry(n, function ($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {
    switch (arguments.length) {
      case 1:
        return new Fn($0);
      case 2:
        return new Fn($0, $1);
      case 3:
        return new Fn($0, $1, $2);
      case 4:
        return new Fn($0, $1, $2, $3);
      case 5:
        return new Fn($0, $1, $2, $3, $4);
      case 6:
        return new Fn($0, $1, $2, $3, $4, $5);
      case 7:
        return new Fn($0, $1, $2, $3, $4, $5, $6);
      case 8:
        return new Fn($0, $1, $2, $3, $4, $5, $6, $7);
      case 9:
        return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8);
      case 10:
        return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8, $9);
    }
  }));
});
}, 124, null, "ramda/src/constructN.js");
__d(/* ramda/src/contains.js */function(global, require, module, exports) {var _contains = require(107                   ); // 107 = ./internal/_contains
var _curry2 = require(24                  ); // 24 = ./internal/_curry2

module.exports = _curry2(_contains);
}, 125, null, "ramda/src/contains.js");
__d(/* ramda/src/converge.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2
var _map = require(43               ); // 43 = ./internal/_map
var curryN = require(27        ); // 27 = ./curryN
var max = require(40     ); // 40 = ./max
var pluck = require(41       ); // 41 = ./pluck
var reduce = require(54        ); // 54 = ./reduce

module.exports = _curry2(function converge(after, fns) {
  return curryN(reduce(max, 0, pluck('length', fns)), function () {
    var args = arguments;
    var context = this;
    return after.apply(context, _map(function (fn) {
      return fn.apply(context, args);
    }, fns));
  });
});
}, 126, null, "ramda/src/converge.js");
__d(/* ramda/src/countBy.js */function(global, require, module, exports) {var reduceBy = require(128         ); // 128 = ./reduceBy

module.exports = reduceBy(function (acc, elem) {
  return acc + 1;
}, 0);
}, 127, null, "ramda/src/countBy.js");
__d(/* ramda/src/reduceBy.js */function(global, require, module, exports) {var _curryN = require(29                  ); // 29 = ./internal/_curryN
var _dispatchable = require(33                        ); // 33 = ./internal/_dispatchable
var _has = require(51               ); // 51 = ./internal/_has
var _reduce = require(44                  ); // 44 = ./internal/_reduce
var _xreduceBy = require(129                    ); // 129 = ./internal/_xreduceBy

module.exports = _curryN(4, [], _dispatchable([], _xreduceBy, function reduceBy(valueFn, valueAcc, keyFn, list) {
  return _reduce(function (acc, elt) {
    var key = keyFn(elt);
    acc[key] = valueFn(_has(key, acc) ? acc[key] : valueAcc, elt);
    return acc;
  }, {}, list);
}));
}, 128, null, "ramda/src/reduceBy.js");
__d(/* ramda/src/internal/_xreduceBy.js */function(global, require, module, exports) {var _curryN = require(29         ); // 29 = ./_curryN
var _has = require(51      ); // 51 = ./_has
var _xfBase = require(38         ); // 38 = ./_xfBase

module.exports = function () {
  function XReduceBy(valueFn, valueAcc, keyFn, xf) {
    this.valueFn = valueFn;
    this.valueAcc = valueAcc;
    this.keyFn = keyFn;
    this.xf = xf;
    this.inputs = {};
  }
  XReduceBy.prototype['@@transducer/init'] = _xfBase.init;
  XReduceBy.prototype['@@transducer/result'] = function (result) {
    var key;
    for (key in this.inputs) {
      if (_has(key, this.inputs)) {
        result = this.xf['@@transducer/step'](result, this.inputs[key]);
        if (result['@@transducer/reduced']) {
          result = result['@@transducer/value'];
          break;
        }
      }
    }
    this.inputs = null;
    return this.xf['@@transducer/result'](result);
  };
  XReduceBy.prototype['@@transducer/step'] = function (result, input) {
    var key = this.keyFn(input);
    this.inputs[key] = this.inputs[key] || [key, this.valueAcc];
    this.inputs[key][1] = this.valueFn(this.inputs[key][1], input);
    return result;
  };

  return _curryN(4, [], function _xreduceBy(valueFn, valueAcc, keyFn, xf) {
    return new XReduceBy(valueFn, valueAcc, keyFn, xf);
  });
}();
}, 129, null, "ramda/src/internal/_xreduceBy.js");
__d(/* ramda/src/dec.js */function(global, require, module, exports) {var add = require(23     ); // 23 = ./add

module.exports = add(-1);
}, 130, null, "ramda/src/dec.js");
__d(/* ramda/src/defaultTo.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2

module.exports = _curry2(function defaultTo(d, v) {
  return v == null || v !== v ? d : v;
});
}, 131, null, "ramda/src/defaultTo.js");
__d(/* ramda/src/descend.js */function(global, require, module, exports) {var _curry3 = require(31                  ); // 31 = ./internal/_curry3

module.exports = _curry3(function descend(fn, a, b) {
  var aa = fn(a);
  var bb = fn(b);
  return aa > bb ? -1 : aa < bb ? 1 : 0;
});
}, 132, null, "ramda/src/descend.js");
__d(/* ramda/src/difference.js */function(global, require, module, exports) {var _contains = require(107                   ); // 107 = ./internal/_contains
var _curry2 = require(24                  ); // 24 = ./internal/_curry2

module.exports = _curry2(function difference(first, second) {
  var out = [];
  var idx = 0;
  var firstLen = first.length;
  while (idx < firstLen) {
    if (!_contains(first[idx], second) && !_contains(first[idx], out)) {
      out[out.length] = first[idx];
    }
    idx += 1;
  }
  return out;
});
}, 133, null, "ramda/src/difference.js");
__d(/* ramda/src/differenceWith.js */function(global, require, module, exports) {var _containsWith = require(135                       ); // 135 = ./internal/_containsWith
var _curry3 = require(31                  ); // 31 = ./internal/_curry3

module.exports = _curry3(function differenceWith(pred, first, second) {
  var out = [];
  var idx = 0;
  var firstLen = first.length;
  while (idx < firstLen) {
    if (!_containsWith(pred, first[idx], second) && !_containsWith(pred, first[idx], out)) {
      out.push(first[idx]);
    }
    idx += 1;
  }
  return out;
});
}, 134, null, "ramda/src/differenceWith.js");
__d(/* ramda/src/internal/_containsWith.js */function(global, require, module, exports) {module.exports = function _containsWith(pred, x, list) {
  var idx = 0;
  var len = list.length;

  while (idx < len) {
    if (pred(x, list[idx])) {
      return true;
    }
    idx += 1;
  }
  return false;
};
}, 135, null, "ramda/src/internal/_containsWith.js");
__d(/* ramda/src/dissoc.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2

module.exports = _curry2(function dissoc(prop, obj) {
  var result = {};
  for (var p in obj) {
    result[p] = obj[p];
  }
  delete result[prop];
  return result;
});
}, 136, null, "ramda/src/dissoc.js");
__d(/* ramda/src/dissocPath.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2
var _isInteger = require(70                     ); // 70 = ./internal/_isInteger
var assoc = require(68       ); // 68 = ./assoc
var dissoc = require(136       ); // 136 = ./dissoc
var remove = require(138       ); // 138 = ./remove
var update = require(139       ); // 139 = ./update

module.exports = _curry2(function dissocPath(path, obj) {
  switch (path.length) {
    case 0:
      return obj;
    case 1:
      return _isInteger(path[0]) ? remove(path[0], 1, obj) : dissoc(path[0], obj);
    default:
      var head = path[0];
      var tail = Array.prototype.slice.call(path, 1);
      if (obj[head] == null) {
        return obj;
      } else if (_isInteger(path[0])) {
        return update(head, dissocPath(tail, obj[head]), obj);
      } else {
        return assoc(head, dissocPath(tail, obj[head]), obj);
      }
  }
});
}, 137, null, "ramda/src/dissocPath.js");
__d(/* ramda/src/remove.js */function(global, require, module, exports) {var _curry3 = require(31                  ); // 31 = ./internal/_curry3

module.exports = _curry3(function remove(start, count, list) {
  var result = Array.prototype.slice.call(list, 0);
  result.splice(start, count);
  return result;
});
}, 138, null, "ramda/src/remove.js");
__d(/* ramda/src/update.js */function(global, require, module, exports) {var _curry3 = require(31                  ); // 31 = ./internal/_curry3
var adjust = require(30        ); // 30 = ./adjust
var always = require(18        ); // 18 = ./always

module.exports = _curry3(function update(idx, x, list) {
  return adjust(always(x), idx, list);
});
}, 139, null, "ramda/src/update.js");
__d(/* ramda/src/divide.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2

module.exports = _curry2(function divide(a, b) {
  return a / b;
});
}, 140, null, "ramda/src/divide.js");
__d(/* ramda/src/drop.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2
var _dispatchable = require(33                        ); // 33 = ./internal/_dispatchable
var _xdrop = require(142                ); // 142 = ./internal/_xdrop
var slice = require(98       ); // 98 = ./slice

module.exports = _curry2(_dispatchable(['drop'], _xdrop, function drop(n, xs) {
  return slice(Math.max(0, n), Infinity, xs);
}));
}, 141, null, "ramda/src/drop.js");
__d(/* ramda/src/internal/_xdrop.js */function(global, require, module, exports) {var _curry2 = require(24         ); // 24 = ./_curry2
var _xfBase = require(38         ); // 38 = ./_xfBase

module.exports = function () {
  function XDrop(n, xf) {
    this.xf = xf;
    this.n = n;
  }
  XDrop.prototype['@@transducer/init'] = _xfBase.init;
  XDrop.prototype['@@transducer/result'] = _xfBase.result;
  XDrop.prototype['@@transducer/step'] = function (result, input) {
    if (this.n > 0) {
      this.n -= 1;
      return result;
    }
    return this.xf['@@transducer/step'](result, input);
  };

  return _curry2(function _xdrop(n, xf) {
    return new XDrop(n, xf);
  });
}();
}, 142, null, "ramda/src/internal/_xdrop.js");
__d(/* ramda/src/dropLast.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2
var _dispatchable = require(33                        ); // 33 = ./internal/_dispatchable
var _dropLast = require(144                   ); // 144 = ./internal/_dropLast
var _xdropLast = require(147                    ); // 147 = ./internal/_xdropLast

module.exports = _curry2(_dispatchable([], _xdropLast, _dropLast));
}, 143, null, "ramda/src/dropLast.js");
__d(/* ramda/src/internal/_dropLast.js */function(global, require, module, exports) {var take = require(145      ); // 145 = ../take

module.exports = function dropLast(n, xs) {
  return take(n < xs.length ? xs.length - n : 0, xs);
};
}, 144, null, "ramda/src/internal/_dropLast.js");
__d(/* ramda/src/take.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2
var _dispatchable = require(33                        ); // 33 = ./internal/_dispatchable
var _xtake = require(146                ); // 146 = ./internal/_xtake
var slice = require(98       ); // 98 = ./slice

module.exports = _curry2(_dispatchable(['take'], _xtake, function take(n, xs) {
  return slice(0, n < 0 ? Infinity : n, xs);
}));
}, 145, null, "ramda/src/take.js");
__d(/* ramda/src/internal/_xtake.js */function(global, require, module, exports) {var _curry2 = require(24         ); // 24 = ./_curry2
var _reduced = require(37          ); // 37 = ./_reduced
var _xfBase = require(38         ); // 38 = ./_xfBase

module.exports = function () {
  function XTake(n, xf) {
    this.xf = xf;
    this.n = n;
    this.i = 0;
  }
  XTake.prototype['@@transducer/init'] = _xfBase.init;
  XTake.prototype['@@transducer/result'] = _xfBase.result;
  XTake.prototype['@@transducer/step'] = function (result, input) {
    this.i += 1;
    var ret = this.n === 0 ? result : this.xf['@@transducer/step'](result, input);
    return this.n >= 0 && this.i >= this.n ? _reduced(ret) : ret;
  };

  return _curry2(function _xtake(n, xf) {
    return new XTake(n, xf);
  });
}();
}, 146, null, "ramda/src/internal/_xtake.js");
__d(/* ramda/src/internal/_xdropLast.js */function(global, require, module, exports) {var _curry2 = require(24         ); // 24 = ./_curry2
var _xfBase = require(38         ); // 38 = ./_xfBase

module.exports = function () {
  function XDropLast(n, xf) {
    this.xf = xf;
    this.pos = 0;
    this.full = false;
    this.acc = new Array(n);
  }
  XDropLast.prototype['@@transducer/init'] = _xfBase.init;
  XDropLast.prototype['@@transducer/result'] = function (result) {
    this.acc = null;
    return this.xf['@@transducer/result'](result);
  };
  XDropLast.prototype['@@transducer/step'] = function (result, input) {
    if (this.full) {
      result = this.xf['@@transducer/step'](result, this.acc[this.pos]);
    }
    this.store(input);
    return result;
  };
  XDropLast.prototype.store = function (input) {
    this.acc[this.pos] = input;
    this.pos += 1;
    if (this.pos === this.acc.length) {
      this.pos = 0;
      this.full = true;
    }
  };

  return _curry2(function _xdropLast(n, xf) {
    return new XDropLast(n, xf);
  });
}();
}, 147, null, "ramda/src/internal/_xdropLast.js");
__d(/* ramda/src/dropLastWhile.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2
var _dispatchable = require(33                        ); // 33 = ./internal/_dispatchable
var _dropLastWhile = require(149                        ); // 149 = ./internal/_dropLastWhile
var _xdropLastWhile = require(150                         ); // 150 = ./internal/_xdropLastWhile

module.exports = _curry2(_dispatchable([], _xdropLastWhile, _dropLastWhile));
}, 148, null, "ramda/src/dropLastWhile.js");
__d(/* ramda/src/internal/_dropLastWhile.js */function(global, require, module, exports) {module.exports = function dropLastWhile(pred, list) {
  var idx = list.length - 1;
  while (idx >= 0 && pred(list[idx])) {
    idx -= 1;
  }
  return Array.prototype.slice.call(list, 0, idx + 1);
};
}, 149, null, "ramda/src/internal/_dropLastWhile.js");
__d(/* ramda/src/internal/_xdropLastWhile.js */function(global, require, module, exports) {var _curry2 = require(24         ); // 24 = ./_curry2
var _reduce = require(44         ); // 44 = ./_reduce
var _xfBase = require(38         ); // 38 = ./_xfBase

module.exports = function () {
  function XDropLastWhile(fn, xf) {
    this.f = fn;
    this.retained = [];
    this.xf = xf;
  }
  XDropLastWhile.prototype['@@transducer/init'] = _xfBase.init;
  XDropLastWhile.prototype['@@transducer/result'] = function (result) {
    this.retained = null;
    return this.xf['@@transducer/result'](result);
  };
  XDropLastWhile.prototype['@@transducer/step'] = function (result, input) {
    return this.f(input) ? this.retain(result, input) : this.flush(result, input);
  };
  XDropLastWhile.prototype.flush = function (result, input) {
    result = _reduce(this.xf['@@transducer/step'], result, this.retained);
    this.retained = [];
    return this.xf['@@transducer/step'](result, input);
  };
  XDropLastWhile.prototype.retain = function (result, input) {
    this.retained.push(input);
    return result;
  };

  return _curry2(function _xdropLastWhile(fn, xf) {
    return new XDropLastWhile(fn, xf);
  });
}();
}, 150, null, "ramda/src/internal/_xdropLastWhile.js");
__d(/* ramda/src/dropRepeats.js */function(global, require, module, exports) {var _curry1 = require(19                  ); // 19 = ./internal/_curry1
var _dispatchable = require(33                        ); // 33 = ./internal/_dispatchable
var _xdropRepeatsWith = require(152                           ); // 152 = ./internal/_xdropRepeatsWith
var dropRepeatsWith = require(153                ); // 153 = ./dropRepeatsWith
var equals = require(109       ); // 109 = ./equals

module.exports = _curry1(_dispatchable([], _xdropRepeatsWith(equals), dropRepeatsWith(equals)));
}, 151, null, "ramda/src/dropRepeats.js");
__d(/* ramda/src/internal/_xdropRepeatsWith.js */function(global, require, module, exports) {var _curry2 = require(24         ); // 24 = ./_curry2
var _xfBase = require(38         ); // 38 = ./_xfBase

module.exports = function () {
  function XDropRepeatsWith(pred, xf) {
    this.xf = xf;
    this.pred = pred;
    this.lastValue = undefined;
    this.seenFirstValue = false;
  }

  XDropRepeatsWith.prototype['@@transducer/init'] = _xfBase.init;
  XDropRepeatsWith.prototype['@@transducer/result'] = _xfBase.result;
  XDropRepeatsWith.prototype['@@transducer/step'] = function (result, input) {
    var sameAsLast = false;
    if (!this.seenFirstValue) {
      this.seenFirstValue = true;
    } else if (this.pred(this.lastValue, input)) {
      sameAsLast = true;
    }
    this.lastValue = input;
    return sameAsLast ? result : this.xf['@@transducer/step'](result, input);
  };

  return _curry2(function _xdropRepeatsWith(pred, xf) {
    return new XDropRepeatsWith(pred, xf);
  });
}();
}, 152, null, "ramda/src/internal/_xdropRepeatsWith.js");
__d(/* ramda/src/dropRepeatsWith.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2
var _dispatchable = require(33                        ); // 33 = ./internal/_dispatchable
var _xdropRepeatsWith = require(152                           ); // 152 = ./internal/_xdropRepeatsWith
var last = require(154     ); // 154 = ./last

module.exports = _curry2(_dispatchable([], _xdropRepeatsWith, function dropRepeatsWith(pred, list) {
  var result = [];
  var idx = 1;
  var len = list.length;
  if (len !== 0) {
    result[0] = list[0];
    while (idx < len) {
      if (!pred(last(result), list[idx])) {
        result[result.length] = list[idx];
      }
      idx += 1;
    }
  }
  return result;
}));
}, 153, null, "ramda/src/dropRepeatsWith.js");
__d(/* ramda/src/last.js */function(global, require, module, exports) {var nth = require(155    ); // 155 = ./nth

module.exports = nth(-1);
}, 154, null, "ramda/src/last.js");
__d(/* ramda/src/nth.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2
var _isString = require(46                    ); // 46 = ./internal/_isString

module.exports = _curry2(function nth(offset, list) {
  var idx = offset < 0 ? list.length + offset : offset;
  return _isString(list) ? list.charAt(idx) : list[idx];
});
}, 155, null, "ramda/src/nth.js");
__d(/* ramda/src/dropWhile.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2
var _dispatchable = require(33                        ); // 33 = ./internal/_dispatchable
var _xdropWhile = require(157                     ); // 157 = ./internal/_xdropWhile

module.exports = _curry2(_dispatchable(['dropWhile'], _xdropWhile, function dropWhile(pred, list) {
  var idx = 0;
  var len = list.length;
  while (idx < len && pred(list[idx])) {
    idx += 1;
  }
  return Array.prototype.slice.call(list, idx);
}));
}, 156, null, "ramda/src/dropWhile.js");
__d(/* ramda/src/internal/_xdropWhile.js */function(global, require, module, exports) {var _curry2 = require(24         ); // 24 = ./_curry2
var _xfBase = require(38         ); // 38 = ./_xfBase

module.exports = function () {
  function XDropWhile(f, xf) {
    this.xf = xf;
    this.f = f;
  }
  XDropWhile.prototype['@@transducer/init'] = _xfBase.init;
  XDropWhile.prototype['@@transducer/result'] = _xfBase.result;
  XDropWhile.prototype['@@transducer/step'] = function (result, input) {
    if (this.f) {
      if (this.f(input)) {
        return result;
      }
      this.f = null;
    }
    return this.xf['@@transducer/step'](result, input);
  };

  return _curry2(function _xdropWhile(f, xf) {
    return new XDropWhile(f, xf);
  });
}();
}, 157, null, "ramda/src/internal/_xdropWhile.js");
__d(/* ramda/src/either.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2
var _isFunction = require(75                      ); // 75 = ./internal/_isFunction
var lift = require(76      ); // 76 = ./lift
var or = require(159   ); // 159 = ./or

module.exports = _curry2(function either(f, g) {
  return _isFunction(f) ? function _either() {
    return f.apply(this, arguments) || g.apply(this, arguments);
  } : lift(or)(f, g);
});
}, 158, null, "ramda/src/either.js");
__d(/* ramda/src/or.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2

module.exports = _curry2(function or(a, b) {
  return a || b;
});
}, 159, null, "ramda/src/or.js");
__d(/* ramda/src/empty.js */function(global, require, module, exports) {var _curry1 = require(19                  ); // 19 = ./internal/_curry1
var _isArguments = require(52                       ); // 52 = ./internal/_isArguments
var _isArray = require(34                   ); // 34 = ./internal/_isArray
var _isObject = require(120                   ); // 120 = ./internal/_isObject
var _isString = require(46                    ); // 46 = ./internal/_isString

module.exports = _curry1(function empty(x) {
  return x != null && typeof x['fantasy-land/empty'] === 'function' ? x['fantasy-land/empty']() : x != null && x.constructor != null && typeof x.constructor['fantasy-land/empty'] === 'function' ? x.constructor['fantasy-land/empty']() : x != null && typeof x.empty === 'function' ? x.empty() : x != null && x.constructor != null && typeof x.constructor.empty === 'function' ? x.constructor.empty() : _isArray(x) ? [] : _isString(x) ? '' : _isObject(x) ? {} : _isArguments(x) ? function () {
    return arguments;
  }() : void 0;
});
}, 160, null, "ramda/src/empty.js");
__d(/* ramda/src/endsWith.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2
var equals = require(109       ); // 109 = ./equals
var takeLast = require(162         ); // 162 = ./takeLast

module.exports = _curry2(function (suffix, list) {
  return equals(takeLast(suffix.length, list), suffix);
});
}, 161, null, "ramda/src/endsWith.js");
__d(/* ramda/src/takeLast.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2
var drop = require(141     ); // 141 = ./drop

module.exports = _curry2(function takeLast(n, xs) {
  return drop(n >= 0 ? xs.length - n : 0, xs);
});
}, 162, null, "ramda/src/takeLast.js");
__d(/* ramda/src/eqBy.js */function(global, require, module, exports) {var _curry3 = require(31                  ); // 31 = ./internal/_curry3
var equals = require(109       ); // 109 = ./equals

module.exports = _curry3(function eqBy(f, x, y) {
  return equals(f(x), f(y));
});
}, 163, null, "ramda/src/eqBy.js");
__d(/* ramda/src/eqProps.js */function(global, require, module, exports) {var _curry3 = require(31                  ); // 31 = ./internal/_curry3
var equals = require(109       ); // 109 = ./equals

module.exports = _curry3(function eqProps(prop, obj1, obj2) {
  return equals(obj1[prop], obj2[prop]);
});
}, 164, null, "ramda/src/eqProps.js");
__d(/* ramda/src/evolve.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2

module.exports = _curry2(function evolve(transformations, object) {
  var result = {};
  var transformation, key, type;
  for (key in object) {
    transformation = transformations[key];
    type = typeof transformation;
    result[key] = type === 'function' ? transformation(object[key]) : transformation && type === 'object' ? evolve(transformation, object[key]) : object[key];
  }
  return result;
});
}, 165, null, "ramda/src/evolve.js");
__d(/* ramda/src/find.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2
var _dispatchable = require(33                        ); // 33 = ./internal/_dispatchable
var _xfind = require(167                ); // 167 = ./internal/_xfind

module.exports = _curry2(_dispatchable(['find'], _xfind, function find(fn, list) {
  var idx = 0;
  var len = list.length;
  while (idx < len) {
    if (fn(list[idx])) {
      return list[idx];
    }
    idx += 1;
  }
}));
}, 166, null, "ramda/src/find.js");
__d(/* ramda/src/internal/_xfind.js */function(global, require, module, exports) {var _curry2 = require(24         ); // 24 = ./_curry2
var _reduced = require(37          ); // 37 = ./_reduced
var _xfBase = require(38         ); // 38 = ./_xfBase

module.exports = function () {
  function XFind(f, xf) {
    this.xf = xf;
    this.f = f;
    this.found = false;
  }
  XFind.prototype['@@transducer/init'] = _xfBase.init;
  XFind.prototype['@@transducer/result'] = function (result) {
    if (!this.found) {
      result = this.xf['@@transducer/step'](result, void 0);
    }
    return this.xf['@@transducer/result'](result);
  };
  XFind.prototype['@@transducer/step'] = function (result, input) {
    if (this.f(input)) {
      this.found = true;
      result = _reduced(this.xf['@@transducer/step'](result, input));
    }
    return result;
  };

  return _curry2(function _xfind(f, xf) {
    return new XFind(f, xf);
  });
}();
}, 167, null, "ramda/src/internal/_xfind.js");
__d(/* ramda/src/findIndex.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2
var _dispatchable = require(33                        ); // 33 = ./internal/_dispatchable
var _xfindIndex = require(169                     ); // 169 = ./internal/_xfindIndex

module.exports = _curry2(_dispatchable([], _xfindIndex, function findIndex(fn, list) {
  var idx = 0;
  var len = list.length;
  while (idx < len) {
    if (fn(list[idx])) {
      return idx;
    }
    idx += 1;
  }
  return -1;
}));
}, 168, null, "ramda/src/findIndex.js");
__d(/* ramda/src/internal/_xfindIndex.js */function(global, require, module, exports) {var _curry2 = require(24         ); // 24 = ./_curry2
var _reduced = require(37          ); // 37 = ./_reduced
var _xfBase = require(38         ); // 38 = ./_xfBase

module.exports = function () {
  function XFindIndex(f, xf) {
    this.xf = xf;
    this.f = f;
    this.idx = -1;
    this.found = false;
  }
  XFindIndex.prototype['@@transducer/init'] = _xfBase.init;
  XFindIndex.prototype['@@transducer/result'] = function (result) {
    if (!this.found) {
      result = this.xf['@@transducer/step'](result, -1);
    }
    return this.xf['@@transducer/result'](result);
  };
  XFindIndex.prototype['@@transducer/step'] = function (result, input) {
    this.idx += 1;
    if (this.f(input)) {
      this.found = true;
      result = _reduced(this.xf['@@transducer/step'](result, this.idx));
    }
    return result;
  };

  return _curry2(function _xfindIndex(f, xf) {
    return new XFindIndex(f, xf);
  });
}();
}, 169, null, "ramda/src/internal/_xfindIndex.js");
__d(/* ramda/src/findLast.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2
var _dispatchable = require(33                        ); // 33 = ./internal/_dispatchable
var _xfindLast = require(171                    ); // 171 = ./internal/_xfindLast

module.exports = _curry2(_dispatchable([], _xfindLast, function findLast(fn, list) {
  var idx = list.length - 1;
  while (idx >= 0) {
    if (fn(list[idx])) {
      return list[idx];
    }
    idx -= 1;
  }
}));
}, 170, null, "ramda/src/findLast.js");
__d(/* ramda/src/internal/_xfindLast.js */function(global, require, module, exports) {var _curry2 = require(24         ); // 24 = ./_curry2
var _xfBase = require(38         ); // 38 = ./_xfBase

module.exports = function () {
  function XFindLast(f, xf) {
    this.xf = xf;
    this.f = f;
  }
  XFindLast.prototype['@@transducer/init'] = _xfBase.init;
  XFindLast.prototype['@@transducer/result'] = function (result) {
    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.last));
  };
  XFindLast.prototype['@@transducer/step'] = function (result, input) {
    if (this.f(input)) {
      this.last = input;
    }
    return result;
  };

  return _curry2(function _xfindLast(f, xf) {
    return new XFindLast(f, xf);
  });
}();
}, 171, null, "ramda/src/internal/_xfindLast.js");
__d(/* ramda/src/findLastIndex.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2
var _dispatchable = require(33                        ); // 33 = ./internal/_dispatchable
var _xfindLastIndex = require(173                         ); // 173 = ./internal/_xfindLastIndex

module.exports = _curry2(_dispatchable([], _xfindLastIndex, function findLastIndex(fn, list) {
  var idx = list.length - 1;
  while (idx >= 0) {
    if (fn(list[idx])) {
      return idx;
    }
    idx -= 1;
  }
  return -1;
}));
}, 172, null, "ramda/src/findLastIndex.js");
__d(/* ramda/src/internal/_xfindLastIndex.js */function(global, require, module, exports) {var _curry2 = require(24         ); // 24 = ./_curry2
var _xfBase = require(38         ); // 38 = ./_xfBase

module.exports = function () {
  function XFindLastIndex(f, xf) {
    this.xf = xf;
    this.f = f;
    this.idx = -1;
    this.lastIdx = -1;
  }
  XFindLastIndex.prototype['@@transducer/init'] = _xfBase.init;
  XFindLastIndex.prototype['@@transducer/result'] = function (result) {
    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.lastIdx));
  };
  XFindLastIndex.prototype['@@transducer/step'] = function (result, input) {
    this.idx += 1;
    if (this.f(input)) {
      this.lastIdx = this.idx;
    }
    return result;
  };

  return _curry2(function _xfindLastIndex(f, xf) {
    return new XFindLastIndex(f, xf);
  });
}();
}, 173, null, "ramda/src/internal/_xfindLastIndex.js");
__d(/* ramda/src/flatten.js */function(global, require, module, exports) {var _curry1 = require(19                  ); // 19 = ./internal/_curry1
var _makeFlat = require(81                    ); // 81 = ./internal/_makeFlat

module.exports = _curry1(_makeFlat(true));
}, 174, null, "ramda/src/flatten.js");
__d(/* ramda/src/flip.js */function(global, require, module, exports) {var _curry1 = require(19                  ); // 19 = ./internal/_curry1
var curry = require(79       ); // 79 = ./curry

module.exports = _curry1(function flip(fn) {
  return curry(function (a, b) {
    var args = Array.prototype.slice.call(arguments, 0);
    args[0] = b;
    args[1] = a;
    return fn.apply(this, args);
  });
});
}, 175, null, "ramda/src/flip.js");
__d(/* ramda/src/forEach.js */function(global, require, module, exports) {var _checkForMethod = require(97                          ); // 97 = ./internal/_checkForMethod
var _curry2 = require(24                  ); // 24 = ./internal/_curry2

module.exports = _curry2(_checkForMethod('forEach', function forEach(fn, list) {
  var len = list.length;
  var idx = 0;
  while (idx < len) {
    fn(list[idx]);
    idx += 1;
  }
  return list;
}));
}, 176, null, "ramda/src/forEach.js");
__d(/* ramda/src/forEachObjIndexed.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2
var keys = require(50      ); // 50 = ./keys

module.exports = _curry2(function forEachObjIndexed(fn, obj) {
  var keyList = keys(obj);
  var idx = 0;
  while (idx < keyList.length) {
    var key = keyList[idx];
    fn(obj[key], key, obj);
    idx += 1;
  }
  return obj;
});
}, 177, null, "ramda/src/forEachObjIndexed.js");
__d(/* ramda/src/fromPairs.js */function(global, require, module, exports) {var _curry1 = require(19                  ); // 19 = ./internal/_curry1

module.exports = _curry1(function fromPairs(pairs) {
  var result = {};
  var idx = 0;
  while (idx < pairs.length) {
    result[pairs[idx][0]] = pairs[idx][1];
    idx += 1;
  }
  return result;
});
}, 178, null, "ramda/src/fromPairs.js");
__d(/* ramda/src/groupBy.js */function(global, require, module, exports) {var _checkForMethod = require(97                          ); // 97 = ./internal/_checkForMethod
var _curry2 = require(24                  ); // 24 = ./internal/_curry2
var reduceBy = require(128         ); // 128 = ./reduceBy

module.exports = _curry2(_checkForMethod('groupBy', reduceBy(function (acc, item) {
  if (acc == null) {
    acc = [];
  }
  acc.push(item);
  return acc;
}, null)));
}, 179, null, "ramda/src/groupBy.js");
__d(/* ramda/src/groupWith.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2

module.exports = _curry2(function (fn, list) {
  var res = [];
  var idx = 0;
  var len = list.length;
  while (idx < len) {
    var nextidx = idx + 1;
    while (nextidx < len && fn(list[nextidx - 1], list[nextidx])) {
      nextidx += 1;
    }
    res.push(list.slice(idx, nextidx));
    idx = nextidx;
  }
  return res;
});
}, 180, null, "ramda/src/groupWith.js");
__d(/* ramda/src/gt.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2

module.exports = _curry2(function gt(a, b) {
  return a > b;
});
}, 181, null, "ramda/src/gt.js");
__d(/* ramda/src/gte.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2

module.exports = _curry2(function gte(a, b) {
  return a >= b;
});
}, 182, null, "ramda/src/gte.js");
__d(/* ramda/src/has.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2
var _has = require(51               ); // 51 = ./internal/_has

module.exports = _curry2(_has);
}, 183, null, "ramda/src/has.js");
__d(/* ramda/src/hasIn.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2

module.exports = _curry2(function hasIn(prop, obj) {
  return prop in obj;
});
}, 184, null, "ramda/src/hasIn.js");
__d(/* ramda/src/head.js */function(global, require, module, exports) {var nth = require(155    ); // 155 = ./nth

module.exports = nth(0);
}, 185, null, "ramda/src/head.js");
__d(/* ramda/src/identity.js */function(global, require, module, exports) {var _curry1 = require(19                  ); // 19 = ./internal/_curry1
var _identity = require(187                   ); // 187 = ./internal/_identity

module.exports = _curry1(_identity);
}, 186, null, "ramda/src/identity.js");
__d(/* ramda/src/internal/_identity.js */function(global, require, module, exports) {module.exports = function _identity(x) {
  return x;
};
}, 187, null, "ramda/src/internal/_identity.js");
__d(/* ramda/src/ifElse.js */function(global, require, module, exports) {var _curry3 = require(31                  ); // 31 = ./internal/_curry3
var curryN = require(27        ); // 27 = ./curryN

module.exports = _curry3(function ifElse(condition, onTrue, onFalse) {
  return curryN(Math.max(condition.length, onTrue.length, onFalse.length), function _ifElse() {
    return condition.apply(this, arguments) ? onTrue.apply(this, arguments) : onFalse.apply(this, arguments);
  });
});
}, 188, null, "ramda/src/ifElse.js");
__d(/* ramda/src/inc.js */function(global, require, module, exports) {var add = require(23     ); // 23 = ./add

module.exports = add(1);
}, 189, null, "ramda/src/inc.js");
__d(/* ramda/src/indexBy.js */function(global, require, module, exports) {var reduceBy = require(128         ); // 128 = ./reduceBy

module.exports = reduceBy(function (acc, elem) {
  return elem;
}, null);
}, 190, null, "ramda/src/indexBy.js");
__d(/* ramda/src/indexOf.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2
var _indexOf = require(108                  ); // 108 = ./internal/_indexOf
var _isArray = require(34                   ); // 34 = ./internal/_isArray

module.exports = _curry2(function indexOf(target, xs) {
  return typeof xs.indexOf === 'function' && !_isArray(xs) ? xs.indexOf(target) : _indexOf(xs, target, 0);
});
}, 191, null, "ramda/src/indexOf.js");
__d(/* ramda/src/init.js */function(global, require, module, exports) {var slice = require(98       ); // 98 = ./slice

module.exports = slice(0, -1);
}, 192, null, "ramda/src/init.js");
__d(/* ramda/src/innerJoin.js */function(global, require, module, exports) {var _containsWith = require(135                       ); // 135 = ./internal/_containsWith
var _curry3 = require(31                  ); // 31 = ./internal/_curry3
var _filter = require(119                 ); // 119 = ./internal/_filter

module.exports = _curry3(function innerJoin(pred, xs, ys) {
  return _filter(function (x) {
    return _containsWith(pred, x, ys);
  }, xs);
});
}, 193, null, "ramda/src/innerJoin.js");
__d(/* ramda/src/insert.js */function(global, require, module, exports) {var _curry3 = require(31                  ); // 31 = ./internal/_curry3

module.exports = _curry3(function insert(idx, elt, list) {
  idx = idx < list.length && idx >= 0 ? idx : list.length;
  var result = Array.prototype.slice.call(list, 0);
  result.splice(idx, 0, elt);
  return result;
});
}, 194, null, "ramda/src/insert.js");
__d(/* ramda/src/insertAll.js */function(global, require, module, exports) {var _curry3 = require(31                  ); // 31 = ./internal/_curry3

module.exports = _curry3(function insertAll(idx, elts, list) {
  idx = idx < list.length && idx >= 0 ? idx : list.length;
  return [].concat(Array.prototype.slice.call(list, 0, idx), elts, Array.prototype.slice.call(list, idx));
});
}, 195, null, "ramda/src/insertAll.js");
__d(/* ramda/src/intersection.js */function(global, require, module, exports) {var _contains = require(107                   ); // 107 = ./internal/_contains
var _curry2 = require(24                  ); // 24 = ./internal/_curry2
var _filter = require(119                 ); // 119 = ./internal/_filter
var flip = require(175     ); // 175 = ./flip
var uniq = require(197     ); // 197 = ./uniq

module.exports = _curry2(function intersection(list1, list2) {
  var lookupList, filteredList;
  if (list1.length > list2.length) {
    lookupList = list1;
    filteredList = list2;
  } else {
    lookupList = list2;
    filteredList = list1;
  }
  return uniq(_filter(flip(_contains)(lookupList), filteredList));
});
}, 196, null, "ramda/src/intersection.js");
__d(/* ramda/src/uniq.js */function(global, require, module, exports) {var identity = require(186         ); // 186 = ./identity
var uniqBy = require(198       ); // 198 = ./uniqBy

module.exports = uniqBy(identity);
}, 197, null, "ramda/src/uniq.js");
__d(/* ramda/src/uniqBy.js */function(global, require, module, exports) {var _Set = require(199              ); // 199 = ./internal/_Set
var _curry2 = require(24                  ); // 24 = ./internal/_curry2

module.exports = _curry2(function uniqBy(fn, list) {
  var set = new _Set();
  var result = [];
  var idx = 0;
  var appliedItem, item;

  while (idx < list.length) {
    item = list[idx];
    appliedItem = fn(item);
    if (set.add(appliedItem)) {
      result.push(item);
    }
    idx += 1;
  }
  return result;
});
}, 198, null, "ramda/src/uniqBy.js");
__d(/* ramda/src/internal/_Set.js */function(global, require, module, exports) {var _contains = require(107          ); // 107 = ./_contains

module.exports = function () {
  function _Set() {
    this._nativeSet = typeof Set === 'function' ? new Set() : null;
    this._items = {};
  }

  _Set.prototype.add = function (item) {
    return !hasOrAdd(item, true, this);
  };

  _Set.prototype.has = function (item) {
    return hasOrAdd(item, false, this);
  };

  function hasOrAdd(item, shouldAdd, set) {
    var type = typeof item;
    var prevSize, newSize;
    switch (type) {
      case 'string':
      case 'number':
        if (item === 0 && 1 / item === -Infinity) {
          if (set._items['-0']) {
            return true;
          } else {
            if (shouldAdd) {
              set._items['-0'] = true;
            }
            return false;
          }
        }

        if (set._nativeSet !== null) {
          if (shouldAdd) {
            prevSize = set._nativeSet.size;
            set._nativeSet.add(item);
            newSize = set._nativeSet.size;
            return newSize === prevSize;
          } else {
            return set._nativeSet.has(item);
          }
        } else {
          if (!(type in set._items)) {
            if (shouldAdd) {
              set._items[type] = {};
              set._items[type][item] = true;
            }
            return false;
          } else if (item in set._items[type]) {
            return true;
          } else {
            if (shouldAdd) {
              set._items[type][item] = true;
            }
            return false;
          }
        }

      case 'boolean':
        if (type in set._items) {
          var bIdx = item ? 1 : 0;
          if (set._items[type][bIdx]) {
            return true;
          } else {
            if (shouldAdd) {
              set._items[type][bIdx] = true;
            }
            return false;
          }
        } else {
          if (shouldAdd) {
            set._items[type] = item ? [false, true] : [true, false];
          }
          return false;
        }

      case 'function':
        if (set._nativeSet !== null) {
          if (shouldAdd) {
            prevSize = set._nativeSet.size;
            set._nativeSet.add(item);
            newSize = set._nativeSet.size;
            return newSize === prevSize;
          } else {
            return set._nativeSet.has(item);
          }
        } else {
          if (!(type in set._items)) {
            if (shouldAdd) {
              set._items[type] = [item];
            }
            return false;
          }
          if (!_contains(item, set._items[type])) {
            if (shouldAdd) {
              set._items[type].push(item);
            }
            return false;
          }
          return true;
        }

      case 'undefined':
        if (set._items[type]) {
          return true;
        } else {
          if (shouldAdd) {
            set._items[type] = true;
          }
          return false;
        }

      case 'object':
        if (item === null) {
          if (!set._items['null']) {
            if (shouldAdd) {
              set._items['null'] = true;
            }
            return false;
          }
          return true;
        }

      default:
        type = Object.prototype.toString.call(item);
        if (!(type in set._items)) {
          if (shouldAdd) {
            set._items[type] = [item];
          }
          return false;
        }

        if (!_contains(item, set._items[type])) {
          if (shouldAdd) {
            set._items[type].push(item);
          }
          return false;
        }
        return true;
    }
  }
  return _Set;
}();
}, 199, null, "ramda/src/internal/_Set.js");
__d(/* ramda/src/intersectionWith.js */function(global, require, module, exports) {var _containsWith = require(135                       ); // 135 = ./internal/_containsWith
var _curry3 = require(31                  ); // 31 = ./internal/_curry3
var uniqWith = require(201         ); // 201 = ./uniqWith

module.exports = _curry3(function intersectionWith(pred, list1, list2) {
  var lookupList, filteredList;
  if (list1.length > list2.length) {
    lookupList = list1;
    filteredList = list2;
  } else {
    lookupList = list2;
    filteredList = list1;
  }
  var results = [];
  var idx = 0;
  while (idx < filteredList.length) {
    if (_containsWith(pred, filteredList[idx], lookupList)) {
      results[results.length] = filteredList[idx];
    }
    idx += 1;
  }
  return uniqWith(pred, results);
});
}, 200, null, "ramda/src/intersectionWith.js");
__d(/* ramda/src/uniqWith.js */function(global, require, module, exports) {var _containsWith = require(135                       ); // 135 = ./internal/_containsWith
var _curry2 = require(24                  ); // 24 = ./internal/_curry2

module.exports = _curry2(function uniqWith(pred, list) {
  var idx = 0;
  var len = list.length;
  var result = [];
  var item;
  while (idx < len) {
    item = list[idx];
    if (!_containsWith(pred, item, result)) {
      result[result.length] = item;
    }
    idx += 1;
  }
  return result;
});
}, 201, null, "ramda/src/uniqWith.js");
__d(/* ramda/src/intersperse.js */function(global, require, module, exports) {var _checkForMethod = require(97                          ); // 97 = ./internal/_checkForMethod
var _curry2 = require(24                  ); // 24 = ./internal/_curry2

module.exports = _curry2(_checkForMethod('intersperse', function intersperse(separator, list) {
  var out = [];
  var idx = 0;
  var length = list.length;
  while (idx < length) {
    if (idx === length - 1) {
      out.push(list[idx]);
    } else {
      out.push(list[idx], separator);
    }
    idx += 1;
  }
  return out;
}));
}, 202, null, "ramda/src/intersperse.js");
__d(/* ramda/src/into.js */function(global, require, module, exports) {var _clone = require(87                 ); // 87 = ./internal/_clone
var _curry3 = require(31                  ); // 31 = ./internal/_curry3
var _isTransformer = require(35                         ); // 35 = ./internal/_isTransformer
var _reduce = require(44                  ); // 44 = ./internal/_reduce
var _stepCat = require(204                  ); // 204 = ./internal/_stepCat

module.exports = _curry3(function into(acc, xf, list) {
  return _isTransformer(acc) ? _reduce(xf(acc), acc['@@transducer/init'](), list) : _reduce(xf(_stepCat(acc)), _clone(acc, [], [], false), list);
});
}, 203, null, "ramda/src/into.js");
__d(/* ramda/src/internal/_stepCat.js */function(global, require, module, exports) {var _assign = require(205        ); // 205 = ./_assign
var _identity = require(187          ); // 187 = ./_identity
var _isArrayLike = require(45              ); // 45 = ./_isArrayLike
var _isTransformer = require(35                ); // 35 = ./_isTransformer
var objOf = require(207       ); // 207 = ../objOf

module.exports = function () {
  var _stepCatArray = {
    '@@transducer/init': Array,
    '@@transducer/step': function transducerStep(xs, x) {
      xs.push(x);
      return xs;
    },
    '@@transducer/result': _identity
  };
  var _stepCatString = {
    '@@transducer/init': String,
    '@@transducer/step': function transducerStep(a, b) {
      return a + b;
    },
    '@@transducer/result': _identity
  };
  var _stepCatObject = {
    '@@transducer/init': Object,
    '@@transducer/step': function transducerStep(result, input) {
      return _assign(result, _isArrayLike(input) ? objOf(input[0], input[1]) : input);
    },
    '@@transducer/result': _identity
  };

  return function _stepCat(obj) {
    if (_isTransformer(obj)) {
      return obj;
    }
    if (_isArrayLike(obj)) {
      return _stepCatArray;
    }
    if (typeof obj === 'string') {
      return _stepCatString;
    }
    if (typeof obj === 'object') {
      return _stepCatObject;
    }
    throw new Error('Cannot create transformer for ' + obj);
  };
}();
}, 204, null, "ramda/src/internal/_stepCat.js");
__d(/* ramda/src/internal/_assign.js */function(global, require, module, exports) {var _objectAssign = require(206              ); // 206 = ./_objectAssign

module.exports = typeof Object.assign === 'function' ? Object.assign : _objectAssign;
}, 205, null, "ramda/src/internal/_assign.js");
__d(/* ramda/src/internal/_objectAssign.js */function(global, require, module, exports) {var _has = require(51      ); // 51 = ./_has

module.exports = function _objectAssign(target) {
  if (target == null) {
    throw new TypeError('Cannot convert undefined or null to object');
  }

  var output = Object(target);
  var idx = 1;
  var length = arguments.length;
  while (idx < length) {
    var source = arguments[idx];
    if (source != null) {
      for (var nextKey in source) {
        if (_has(nextKey, source)) {
          output[nextKey] = source[nextKey];
        }
      }
    }
    idx += 1;
  }
  return output;
};
}, 206, null, "ramda/src/internal/_objectAssign.js");
__d(/* ramda/src/objOf.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2

module.exports = _curry2(function objOf(key, val) {
  var obj = {};
  obj[key] = val;
  return obj;
});
}, 207, null, "ramda/src/objOf.js");
__d(/* ramda/src/invert.js */function(global, require, module, exports) {var _curry1 = require(19                  ); // 19 = ./internal/_curry1
var _has = require(51               ); // 51 = ./internal/_has
var keys = require(50      ); // 50 = ./keys

module.exports = _curry1(function invert(obj) {
  var props = keys(obj);
  var len = props.length;
  var idx = 0;
  var out = {};

  while (idx < len) {
    var key = props[idx];
    var val = obj[key];
    var list = _has(val, out) ? out[val] : out[val] = [];
    list[list.length] = key;
    idx += 1;
  }
  return out;
});
}, 208, null, "ramda/src/invert.js");
__d(/* ramda/src/invertObj.js */function(global, require, module, exports) {var _curry1 = require(19                  ); // 19 = ./internal/_curry1
var keys = require(50      ); // 50 = ./keys

module.exports = _curry1(function invertObj(obj) {
  var props = keys(obj);
  var len = props.length;
  var idx = 0;
  var out = {};

  while (idx < len) {
    var key = props[idx];
    out[obj[key]] = key;
    idx += 1;
  }
  return out;
});
}, 209, null, "ramda/src/invertObj.js");
__d(/* ramda/src/invoker.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2
var _isFunction = require(75                      ); // 75 = ./internal/_isFunction
var curryN = require(27        ); // 27 = ./curryN
var toString = require(105         ); // 105 = ./toString

module.exports = _curry2(function invoker(arity, method) {
  return curryN(arity + 1, function () {
    var target = arguments[arity];
    if (target != null && _isFunction(target[method])) {
      return target[method].apply(target, Array.prototype.slice.call(arguments, 0, arity));
    }
    throw new TypeError(toString(target) + ' does not have a method named "' + method + '"');
  });
});
}, 210, null, "ramda/src/invoker.js");
__d(/* ramda/src/is.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2

module.exports = _curry2(function is(Ctor, val) {
  return val != null && val.constructor === Ctor || val instanceof Ctor;
});
}, 211, null, "ramda/src/is.js");
__d(/* ramda/src/isEmpty.js */function(global, require, module, exports) {var _curry1 = require(19                  ); // 19 = ./internal/_curry1
var empty = require(160      ); // 160 = ./empty
var equals = require(109       ); // 109 = ./equals

module.exports = _curry1(function isEmpty(x) {
  return x != null && equals(x, empty(x));
});
}, 212, null, "ramda/src/isEmpty.js");
__d(/* ramda/src/join.js */function(global, require, module, exports) {var invoker = require(210        ); // 210 = ./invoker

module.exports = invoker(1, 'join');
}, 213, null, "ramda/src/join.js");
__d(/* ramda/src/juxt.js */function(global, require, module, exports) {var _curry1 = require(19                  ); // 19 = ./internal/_curry1
var converge = require(126         ); // 126 = ./converge

module.exports = _curry1(function juxt(fns) {
  return converge(function () {
    return Array.prototype.slice.call(arguments, 0);
  }, fns);
});
}, 214, null, "ramda/src/juxt.js");
__d(/* ramda/src/keysIn.js */function(global, require, module, exports) {var _curry1 = require(19                  ); // 19 = ./internal/_curry1

module.exports = _curry1(function keysIn(obj) {
  var prop;
  var ks = [];
  for (prop in obj) {
    ks[ks.length] = prop;
  }
  return ks;
});
}, 215, null, "ramda/src/keysIn.js");
__d(/* ramda/src/lastIndexOf.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2
var _isArray = require(34                   ); // 34 = ./internal/_isArray
var equals = require(109       ); // 109 = ./equals

module.exports = _curry2(function lastIndexOf(target, xs) {
  if (typeof xs.lastIndexOf === 'function' && !_isArray(xs)) {
    return xs.lastIndexOf(target);
  } else {
    var idx = xs.length - 1;
    while (idx >= 0) {
      if (equals(xs[idx], target)) {
        return idx;
      }
      idx -= 1;
    }
    return -1;
  }
});
}, 216, null, "ramda/src/lastIndexOf.js");
__d(/* ramda/src/length.js */function(global, require, module, exports) {var _curry1 = require(19                  ); // 19 = ./internal/_curry1
var _isNumber = require(218                   ); // 218 = ./internal/_isNumber

module.exports = _curry1(function length(list) {
  return list != null && _isNumber(list.length) ? list.length : NaN;
});
}, 217, null, "ramda/src/length.js");
__d(/* ramda/src/internal/_isNumber.js */function(global, require, module, exports) {module.exports = function _isNumber(x) {
  return Object.prototype.toString.call(x) === '[object Number]';
};
}, 218, null, "ramda/src/internal/_isNumber.js");
__d(/* ramda/src/lens.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2
var map = require(42     ); // 42 = ./map

module.exports = _curry2(function lens(getter, setter) {
  return function (toFunctorFn) {
    return function (target) {
      return map(function (focus) {
        return setter(focus, target);
      }, toFunctorFn(getter(target)));
    };
  };
});
}, 219, null, "ramda/src/lens.js");
__d(/* ramda/src/lensIndex.js */function(global, require, module, exports) {var _curry1 = require(19                  ); // 19 = ./internal/_curry1
var lens = require(219     ); // 219 = ./lens
var nth = require(155    ); // 155 = ./nth
var update = require(139       ); // 139 = ./update

module.exports = _curry1(function lensIndex(n) {
  return lens(nth(n), update(n));
});
}, 220, null, "ramda/src/lensIndex.js");
__d(/* ramda/src/lensPath.js */function(global, require, module, exports) {var _curry1 = require(19                  ); // 19 = ./internal/_curry1
var assocPath = require(69           ); // 69 = ./assocPath
var lens = require(219     ); // 219 = ./lens
var path = require(222     ); // 222 = ./path

module.exports = _curry1(function lensPath(p) {
  return lens(path(p), assocPath(p));
});
}, 221, null, "ramda/src/lensPath.js");
__d(/* ramda/src/path.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2

module.exports = _curry2(function path(paths, obj) {
  var val = obj;
  var idx = 0;
  while (idx < paths.length) {
    if (val == null) {
      return;
    }
    val = val[paths[idx]];
    idx += 1;
  }
  return val;
});
}, 222, null, "ramda/src/path.js");
__d(/* ramda/src/lensProp.js */function(global, require, module, exports) {var _curry1 = require(19                  ); // 19 = ./internal/_curry1
var assoc = require(68       ); // 68 = ./assoc
var lens = require(219     ); // 219 = ./lens
var prop = require(53      ); // 53 = ./prop

module.exports = _curry1(function lensProp(k) {
  return lens(prop(k), assoc(k));
});
}, 223, null, "ramda/src/lensProp.js");
__d(/* ramda/src/lt.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2

module.exports = _curry2(function lt(a, b) {
  return a < b;
});
}, 224, null, "ramda/src/lt.js");
__d(/* ramda/src/lte.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2

module.exports = _curry2(function lte(a, b) {
  return a <= b;
});
}, 225, null, "ramda/src/lte.js");
__d(/* ramda/src/mapAccum.js */function(global, require, module, exports) {var _curry3 = require(31                  ); // 31 = ./internal/_curry3

module.exports = _curry3(function mapAccum(fn, acc, list) {
  var idx = 0;
  var len = list.length;
  var result = [];
  var tuple = [acc];
  while (idx < len) {
    tuple = fn(tuple[0], list[idx]);
    result[idx] = tuple[1];
    idx += 1;
  }
  return [tuple[0], result];
});
}, 226, null, "ramda/src/mapAccum.js");
__d(/* ramda/src/mapAccumRight.js */function(global, require, module, exports) {var _curry3 = require(31                  ); // 31 = ./internal/_curry3

module.exports = _curry3(function mapAccumRight(fn, acc, list) {
  var idx = list.length - 1;
  var result = [];
  var tuple = [acc];
  while (idx >= 0) {
    tuple = fn(list[idx], tuple[0]);
    result[idx] = tuple[1];
    idx -= 1;
  }
  return [result, tuple[0]];
});
}, 227, null, "ramda/src/mapAccumRight.js");
__d(/* ramda/src/mapObjIndexed.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2
var _reduce = require(44                  ); // 44 = ./internal/_reduce
var keys = require(50      ); // 50 = ./keys

module.exports = _curry2(function mapObjIndexed(fn, obj) {
  return _reduce(function (acc, key) {
    acc[key] = fn(obj[key], key, obj);
    return acc;
  }, {}, keys(obj));
});
}, 228, null, "ramda/src/mapObjIndexed.js");
__d(/* ramda/src/match.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2

module.exports = _curry2(function match(rx, str) {
  return str.match(rx) || [];
});
}, 229, null, "ramda/src/match.js");
__d(/* ramda/src/mathMod.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2
var _isInteger = require(70                     ); // 70 = ./internal/_isInteger

module.exports = _curry2(function mathMod(m, p) {
  if (!_isInteger(m)) {
    return NaN;
  }
  if (!_isInteger(p) || p < 1) {
    return NaN;
  }
  return (m % p + p) % p;
});
}, 230, null, "ramda/src/mathMod.js");
__d(/* ramda/src/maxBy.js */function(global, require, module, exports) {var _curry3 = require(31                  ); // 31 = ./internal/_curry3

module.exports = _curry3(function maxBy(f, a, b) {
  return f(b) > f(a) ? b : a;
});
}, 231, null, "ramda/src/maxBy.js");
__d(/* ramda/src/mean.js */function(global, require, module, exports) {var _curry1 = require(19                  ); // 19 = ./internal/_curry1
var sum = require(233    ); // 233 = ./sum

module.exports = _curry1(function mean(list) {
  return sum(list) / list.length;
});
}, 232, null, "ramda/src/mean.js");
__d(/* ramda/src/sum.js */function(global, require, module, exports) {var add = require(23     ); // 23 = ./add
var reduce = require(54        ); // 54 = ./reduce

module.exports = reduce(add, 0);
}, 233, null, "ramda/src/sum.js");
__d(/* ramda/src/median.js */function(global, require, module, exports) {var _curry1 = require(19                  ); // 19 = ./internal/_curry1
var mean = require(232     ); // 232 = ./mean

module.exports = _curry1(function median(list) {
  var len = list.length;
  if (len === 0) {
    return NaN;
  }
  var width = 2 - len % 2;
  var idx = (len - width) / 2;
  return mean(Array.prototype.slice.call(list, 0).sort(function (a, b) {
    return a < b ? -1 : a > b ? 1 : 0;
  }).slice(idx, idx + width));
});
}, 234, null, "ramda/src/median.js");
__d(/* ramda/src/memoize.js */function(global, require, module, exports) {var memoizeWith = require(236            ); // 236 = ./memoizeWith
var toString = require(105         ); // 105 = ./toString

module.exports = memoizeWith(function () {
  return toString(arguments);
});
}, 235, null, "ramda/src/memoize.js");
__d(/* ramda/src/memoizeWith.js */function(global, require, module, exports) {var _arity = require(28                 ); // 28 = ./internal/_arity
var _curry2 = require(24                  ); // 24 = ./internal/_curry2
var _has = require(51               ); // 51 = ./internal/_has

module.exports = _curry2(function memoizeWith(mFn, fn) {
  var cache = {};
  return _arity(fn.length, function () {
    var key = mFn.apply(this, arguments);
    if (!_has(key, cache)) {
      cache[key] = fn.apply(this, arguments);
    }
    return cache[key];
  });
});
}, 236, null, "ramda/src/memoizeWith.js");
__d(/* ramda/src/merge.js */function(global, require, module, exports) {var _assign = require(205                 ); // 205 = ./internal/_assign
var _curry2 = require(24                  ); // 24 = ./internal/_curry2

module.exports = _curry2(function merge(l, r) {
  return _assign({}, l, r);
});
}, 237, null, "ramda/src/merge.js");
__d(/* ramda/src/mergeAll.js */function(global, require, module, exports) {var _assign = require(205                 ); // 205 = ./internal/_assign
var _curry1 = require(19                  ); // 19 = ./internal/_curry1

module.exports = _curry1(function mergeAll(list) {
  return _assign.apply(null, [{}].concat(list));
});
}, 238, null, "ramda/src/mergeAll.js");
__d(/* ramda/src/mergeDeepLeft.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2
var mergeDeepWithKey = require(240                 ); // 240 = ./mergeDeepWithKey

module.exports = _curry2(function mergeDeepLeft(lObj, rObj) {
  return mergeDeepWithKey(function (k, lVal, rVal) {
    return lVal;
  }, lObj, rObj);
});
}, 239, null, "ramda/src/mergeDeepLeft.js");
__d(/* ramda/src/mergeDeepWithKey.js */function(global, require, module, exports) {var _curry3 = require(31                  ); // 31 = ./internal/_curry3
var _isObject = require(120                   ); // 120 = ./internal/_isObject
var mergeWithKey = require(241             ); // 241 = ./mergeWithKey

module.exports = _curry3(function mergeDeepWithKey(fn, lObj, rObj) {
  return mergeWithKey(function (k, lVal, rVal) {
    if (_isObject(lVal) && _isObject(rVal)) {
      return mergeDeepWithKey(fn, lVal, rVal);
    } else {
      return fn(k, lVal, rVal);
    }
  }, lObj, rObj);
});
}, 240, null, "ramda/src/mergeDeepWithKey.js");
__d(/* ramda/src/mergeWithKey.js */function(global, require, module, exports) {var _curry3 = require(31                  ); // 31 = ./internal/_curry3
var _has = require(51               ); // 51 = ./internal/_has

module.exports = _curry3(function mergeWithKey(fn, l, r) {
  var result = {};
  var k;

  for (k in l) {
    if (_has(k, l)) {
      result[k] = _has(k, r) ? fn(k, l[k], r[k]) : l[k];
    }
  }

  for (k in r) {
    if (_has(k, r) && !_has(k, result)) {
      result[k] = r[k];
    }
  }

  return result;
});
}, 241, null, "ramda/src/mergeWithKey.js");
__d(/* ramda/src/mergeDeepRight.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2
var mergeDeepWithKey = require(240                 ); // 240 = ./mergeDeepWithKey

module.exports = _curry2(function mergeDeepRight(lObj, rObj) {
  return mergeDeepWithKey(function (k, lVal, rVal) {
    return rVal;
  }, lObj, rObj);
});
}, 242, null, "ramda/src/mergeDeepRight.js");
__d(/* ramda/src/mergeDeepWith.js */function(global, require, module, exports) {var _curry3 = require(31                  ); // 31 = ./internal/_curry3
var mergeDeepWithKey = require(240                 ); // 240 = ./mergeDeepWithKey

module.exports = _curry3(function mergeDeepWith(fn, lObj, rObj) {
  return mergeDeepWithKey(function (k, lVal, rVal) {
    return fn(lVal, rVal);
  }, lObj, rObj);
});
}, 243, null, "ramda/src/mergeDeepWith.js");
__d(/* ramda/src/mergeWith.js */function(global, require, module, exports) {var _curry3 = require(31                  ); // 31 = ./internal/_curry3
var mergeWithKey = require(241             ); // 241 = ./mergeWithKey

module.exports = _curry3(function mergeWith(fn, l, r) {
  return mergeWithKey(function (_, _l, _r) {
    return fn(_l, _r);
  }, l, r);
});
}, 244, null, "ramda/src/mergeWith.js");
__d(/* ramda/src/min.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2

module.exports = _curry2(function min(a, b) {
  return b < a ? b : a;
});
}, 245, null, "ramda/src/min.js");
__d(/* ramda/src/minBy.js */function(global, require, module, exports) {var _curry3 = require(31                  ); // 31 = ./internal/_curry3

module.exports = _curry3(function minBy(f, a, b) {
  return f(b) < f(a) ? b : a;
});
}, 246, null, "ramda/src/minBy.js");
__d(/* ramda/src/modulo.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2

module.exports = _curry2(function modulo(a, b) {
  return a % b;
});
}, 247, null, "ramda/src/modulo.js");
__d(/* ramda/src/multiply.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2

module.exports = _curry2(function multiply(a, b) {
  return a * b;
});
}, 248, null, "ramda/src/multiply.js");
__d(/* ramda/src/negate.js */function(global, require, module, exports) {var _curry1 = require(19                  ); // 19 = ./internal/_curry1

module.exports = _curry1(function negate(n) {
  return -n;
});
}, 249, null, "ramda/src/negate.js");
__d(/* ramda/src/none.js */function(global, require, module, exports) {var _complement = require(117                     ); // 117 = ./internal/_complement
var _curry2 = require(24                  ); // 24 = ./internal/_curry2
var _dispatchable = require(33                        ); // 33 = ./internal/_dispatchable
var _xany = require(57                ); // 57 = ./internal/_xany
var any = require(56     ); // 56 = ./any

module.exports = _curry2(_complement(_dispatchable(['any'], _xany, any)));
}, 250, null, "ramda/src/none.js");
__d(/* ramda/src/nthArg.js */function(global, require, module, exports) {var _curry1 = require(19                  ); // 19 = ./internal/_curry1
var curryN = require(27        ); // 27 = ./curryN
var nth = require(155    ); // 155 = ./nth

module.exports = _curry1(function nthArg(n) {
  var arity = n < 0 ? 1 : n + 1;
  return curryN(arity, function () {
    return nth(n, arguments);
  });
});
}, 251, null, "ramda/src/nthArg.js");
__d(/* ramda/src/o.js */function(global, require, module, exports) {var _curry3 = require(31                  ); // 31 = ./internal/_curry3

module.exports = _curry3(function o(f, g, x) {
  return f(g(x));
});
}, 252, null, "ramda/src/o.js");
__d(/* ramda/src/of.js */function(global, require, module, exports) {var _curry1 = require(19                  ); // 19 = ./internal/_curry1
var _of = require(254             ); // 254 = ./internal/_of

module.exports = _curry1(_of);
}, 253, null, "ramda/src/of.js");
__d(/* ramda/src/internal/_of.js */function(global, require, module, exports) {module.exports = function _of(x) {
  return [x];
};
}, 254, null, "ramda/src/internal/_of.js");
__d(/* ramda/src/omit.js */function(global, require, module, exports) {var _contains = require(107                   ); // 107 = ./internal/_contains
var _curry2 = require(24                  ); // 24 = ./internal/_curry2

module.exports = _curry2(function omit(names, obj) {
  var result = {};
  for (var prop in obj) {
    if (!_contains(prop, names)) {
      result[prop] = obj[prop];
    }
  }
  return result;
});
}, 255, null, "ramda/src/omit.js");
__d(/* ramda/src/once.js */function(global, require, module, exports) {var _arity = require(28                 ); // 28 = ./internal/_arity
var _curry1 = require(19                  ); // 19 = ./internal/_curry1

module.exports = _curry1(function once(fn) {
  var called = false;
  var result;
  return _arity(fn.length, function () {
    if (called) {
      return result;
    }
    called = true;
    result = fn.apply(this, arguments);
    return result;
  });
});
}, 256, null, "ramda/src/once.js");
__d(/* ramda/src/over.js */function(global, require, module, exports) {var _curry3 = require(31                  ); // 31 = ./internal/_curry3

module.exports = function () {
  var Identity = function Identity(x) {
    return { value: x, map: function map(f) {
        return Identity(f(x));
      } };
  };

  return _curry3(function over(lens, f, x) {
    return lens(function (y) {
      return Identity(f(y));
    })(x).value;
  });
}();
}, 257, null, "ramda/src/over.js");
__d(/* ramda/src/pair.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2

module.exports = _curry2(function pair(fst, snd) {
  return [fst, snd];
});
}, 258, null, "ramda/src/pair.js");
__d(/* ramda/src/partial.js */function(global, require, module, exports) {var _concat = require(26                  ); // 26 = ./internal/_concat
var _createPartialApplicator = require(260                                  ); // 260 = ./internal/_createPartialApplicator

module.exports = _createPartialApplicator(_concat);
}, 259, null, "ramda/src/partial.js");
__d(/* ramda/src/internal/_createPartialApplicator.js */function(global, require, module, exports) {var _arity = require(28        ); // 28 = ./_arity
var _curry2 = require(24         ); // 24 = ./_curry2

module.exports = function _createPartialApplicator(concat) {
  return _curry2(function (fn, args) {
    return _arity(Math.max(0, fn.length - args.length), function () {
      return fn.apply(this, concat(args, arguments));
    });
  });
};
}, 260, null, "ramda/src/internal/_createPartialApplicator.js");
__d(/* ramda/src/partialRight.js */function(global, require, module, exports) {var _concat = require(26                  ); // 26 = ./internal/_concat
var _createPartialApplicator = require(260                                  ); // 260 = ./internal/_createPartialApplicator
var flip = require(175     ); // 175 = ./flip

module.exports = _createPartialApplicator(flip(_concat));
}, 261, null, "ramda/src/partialRight.js");
__d(/* ramda/src/partition.js */function(global, require, module, exports) {var filter = require(118       ); // 118 = ./filter
var juxt = require(214     ); // 214 = ./juxt
var reject = require(116       ); // 116 = ./reject

module.exports = juxt([filter, reject]);
}, 262, null, "ramda/src/partition.js");
__d(/* ramda/src/pathEq.js */function(global, require, module, exports) {var _curry3 = require(31                  ); // 31 = ./internal/_curry3
var equals = require(109       ); // 109 = ./equals
var path = require(222     ); // 222 = ./path

module.exports = _curry3(function pathEq(_path, val, obj) {
  return equals(path(_path, obj), val);
});
}, 263, null, "ramda/src/pathEq.js");
__d(/* ramda/src/pathOr.js */function(global, require, module, exports) {var _curry3 = require(31                  ); // 31 = ./internal/_curry3
var defaultTo = require(131          ); // 131 = ./defaultTo
var path = require(222     ); // 222 = ./path

module.exports = _curry3(function pathOr(d, p, obj) {
  return defaultTo(d, path(p, obj));
});
}, 264, null, "ramda/src/pathOr.js");
__d(/* ramda/src/pathSatisfies.js */function(global, require, module, exports) {var _curry3 = require(31                  ); // 31 = ./internal/_curry3
var path = require(222     ); // 222 = ./path

module.exports = _curry3(function pathSatisfies(pred, propPath, obj) {
  return propPath.length > 0 && pred(path(propPath, obj));
});
}, 265, null, "ramda/src/pathSatisfies.js");
__d(/* ramda/src/pick.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2

module.exports = _curry2(function pick(names, obj) {
  var result = {};
  var idx = 0;
  while (idx < names.length) {
    if (names[idx] in obj) {
      result[names[idx]] = obj[names[idx]];
    }
    idx += 1;
  }
  return result;
});
}, 266, null, "ramda/src/pick.js");
__d(/* ramda/src/pickAll.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2

module.exports = _curry2(function pickAll(names, obj) {
  var result = {};
  var idx = 0;
  var len = names.length;
  while (idx < len) {
    var name = names[idx];
    result[name] = obj[name];
    idx += 1;
  }
  return result;
});
}, 267, null, "ramda/src/pickAll.js");
__d(/* ramda/src/pickBy.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2

module.exports = _curry2(function pickBy(test, obj) {
  var result = {};
  for (var prop in obj) {
    if (test(obj[prop], prop, obj)) {
      result[prop] = obj[prop];
    }
  }
  return result;
});
}, 268, null, "ramda/src/pickBy.js");
__d(/* ramda/src/pipeK.js */function(global, require, module, exports) {var composeK = require(100         ); // 100 = ./composeK
var reverse = require(99         ); // 99 = ./reverse

module.exports = function pipeK() {
  if (arguments.length === 0) {
    throw new Error('pipeK requires at least one argument');
  }
  return composeK.apply(this, reverse(arguments));
};
}, 269, null, "ramda/src/pipeK.js");
__d(/* ramda/src/prepend.js */function(global, require, module, exports) {var _concat = require(26                  ); // 26 = ./internal/_concat
var _curry2 = require(24                  ); // 24 = ./internal/_curry2

module.exports = _curry2(function prepend(el, list) {
  return _concat([el], list);
});
}, 270, null, "ramda/src/prepend.js");
__d(/* ramda/src/product.js */function(global, require, module, exports) {var multiply = require(248         ); // 248 = ./multiply
var reduce = require(54        ); // 54 = ./reduce

module.exports = reduce(multiply, 1);
}, 271, null, "ramda/src/product.js");
__d(/* ramda/src/project.js */function(global, require, module, exports) {var _map = require(43               ); // 43 = ./internal/_map
var identity = require(186         ); // 186 = ./identity
var pickAll = require(267        ); // 267 = ./pickAll
var useWith = require(273        ); // 273 = ./useWith

module.exports = useWith(_map, [pickAll, identity]);
}, 272, null, "ramda/src/project.js");
__d(/* ramda/src/useWith.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2
var curryN = require(27        ); // 27 = ./curryN

module.exports = _curry2(function useWith(fn, transformers) {
  return curryN(transformers.length, function () {
    var args = [];
    var idx = 0;
    while (idx < transformers.length) {
      args.push(transformers[idx].call(this, arguments[idx]));
      idx += 1;
    }
    return fn.apply(this, args.concat(Array.prototype.slice.call(arguments, transformers.length)));
  });
});
}, 273, null, "ramda/src/useWith.js");
__d(/* ramda/src/propEq.js */function(global, require, module, exports) {var _curry3 = require(31                  ); // 31 = ./internal/_curry3
var equals = require(109       ); // 109 = ./equals

module.exports = _curry3(function propEq(name, val, obj) {
  return equals(val, obj[name]);
});
}, 274, null, "ramda/src/propEq.js");
__d(/* ramda/src/propIs.js */function(global, require, module, exports) {var _curry3 = require(31                  ); // 31 = ./internal/_curry3
var is = require(211   ); // 211 = ./is

module.exports = _curry3(function propIs(type, name, obj) {
  return is(type, obj[name]);
});
}, 275, null, "ramda/src/propIs.js");
__d(/* ramda/src/propOr.js */function(global, require, module, exports) {var _curry3 = require(31                  ); // 31 = ./internal/_curry3
var _has = require(51               ); // 51 = ./internal/_has

module.exports = _curry3(function propOr(val, p, obj) {
  return obj != null && _has(p, obj) ? obj[p] : val;
});
}, 276, null, "ramda/src/propOr.js");
__d(/* ramda/src/propSatisfies.js */function(global, require, module, exports) {var _curry3 = require(31                  ); // 31 = ./internal/_curry3

module.exports = _curry3(function propSatisfies(pred, name, obj) {
  return pred(obj[name]);
});
}, 277, null, "ramda/src/propSatisfies.js");
__d(/* ramda/src/props.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2

module.exports = _curry2(function props(ps, obj) {
  var len = ps.length;
  var out = [];
  var idx = 0;

  while (idx < len) {
    out[idx] = obj[ps[idx]];
    idx += 1;
  }

  return out;
});
}, 278, null, "ramda/src/props.js");
__d(/* ramda/src/range.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2
var _isNumber = require(218                   ); // 218 = ./internal/_isNumber

module.exports = _curry2(function range(from, to) {
  if (!(_isNumber(from) && _isNumber(to))) {
    throw new TypeError('Both arguments to range must be numbers');
  }
  var result = [];
  var n = from;
  while (n < to) {
    result.push(n);
    n += 1;
  }
  return result;
});
}, 279, null, "ramda/src/range.js");
__d(/* ramda/src/reduceRight.js */function(global, require, module, exports) {var _curry3 = require(31                  ); // 31 = ./internal/_curry3

module.exports = _curry3(function reduceRight(fn, acc, list) {
  var idx = list.length - 1;
  while (idx >= 0) {
    acc = fn(list[idx], acc);
    idx -= 1;
  }
  return acc;
});
}, 280, null, "ramda/src/reduceRight.js");
__d(/* ramda/src/reduceWhile.js */function(global, require, module, exports) {var _curryN = require(29                  ); // 29 = ./internal/_curryN
var _reduce = require(44                  ); // 44 = ./internal/_reduce
var _reduced = require(37                   ); // 37 = ./internal/_reduced

module.exports = _curryN(4, [], function _reduceWhile(pred, fn, a, list) {
  return _reduce(function (acc, x) {
    return pred(acc, x) ? fn(acc, x) : _reduced(acc);
  }, a, list);
});
}, 281, null, "ramda/src/reduceWhile.js");
__d(/* ramda/src/reduced.js */function(global, require, module, exports) {var _curry1 = require(19                  ); // 19 = ./internal/_curry1
var _reduced = require(37                   ); // 37 = ./internal/_reduced

module.exports = _curry1(_reduced);
}, 282, null, "ramda/src/reduced.js");
__d(/* ramda/src/repeat.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2
var always = require(18        ); // 18 = ./always
var times = require(284      ); // 284 = ./times

module.exports = _curry2(function repeat(value, n) {
  return times(always(value), n);
});
}, 283, null, "ramda/src/repeat.js");
__d(/* ramda/src/times.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2

module.exports = _curry2(function times(fn, n) {
  var len = Number(n);
  var idx = 0;
  var list;

  if (len < 0 || isNaN(len)) {
    throw new RangeError('n must be a non-negative number');
  }
  list = new Array(len);
  while (idx < len) {
    list[idx] = fn(idx);
    idx += 1;
  }
  return list;
});
}, 284, null, "ramda/src/times.js");
__d(/* ramda/src/replace.js */function(global, require, module, exports) {var _curry3 = require(31                  ); // 31 = ./internal/_curry3

module.exports = _curry3(function replace(regex, replacement, str) {
  return str.replace(regex, replacement);
});
}, 285, null, "ramda/src/replace.js");
__d(/* ramda/src/scan.js */function(global, require, module, exports) {var _curry3 = require(31                  ); // 31 = ./internal/_curry3

module.exports = _curry3(function scan(fn, acc, list) {
  var idx = 0;
  var len = list.length;
  var result = [acc];
  while (idx < len) {
    acc = fn(acc, list[idx]);
    result[idx + 1] = acc;
    idx += 1;
  }
  return result;
});
}, 286, null, "ramda/src/scan.js");
__d(/* ramda/src/sequence.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2
var ap = require(59    ); // 59 = ./ap
var map = require(42     ); // 42 = ./map
var prepend = require(270        ); // 270 = ./prepend
var reduceRight = require(280            ); // 280 = ./reduceRight

module.exports = _curry2(function sequence(of, traversable) {
  return typeof traversable.sequence === 'function' ? traversable.sequence(of) : reduceRight(function (x, acc) {
    return ap(map(prepend, x), acc);
  }, of([]), traversable);
});
}, 287, null, "ramda/src/sequence.js");
__d(/* ramda/src/set.js */function(global, require, module, exports) {var _curry3 = require(31                  ); // 31 = ./internal/_curry3
var always = require(18        ); // 18 = ./always
var over = require(257     ); // 257 = ./over

module.exports = _curry3(function set(lens, v, x) {
  return over(lens, always(v), x);
});
}, 288, null, "ramda/src/set.js");
__d(/* ramda/src/sort.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2

module.exports = _curry2(function sort(comparator, list) {
  return Array.prototype.slice.call(list, 0).sort(comparator);
});
}, 289, null, "ramda/src/sort.js");
__d(/* ramda/src/sortBy.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2

module.exports = _curry2(function sortBy(fn, list) {
  return Array.prototype.slice.call(list, 0).sort(function (a, b) {
    var aa = fn(a);
    var bb = fn(b);
    return aa < bb ? -1 : aa > bb ? 1 : 0;
  });
});
}, 290, null, "ramda/src/sortBy.js");
__d(/* ramda/src/sortWith.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2

module.exports = _curry2(function sortWith(fns, list) {
  return Array.prototype.slice.call(list, 0).sort(function (a, b) {
    var result = 0;
    var i = 0;
    while (result === 0 && i < fns.length) {
      result = fns[i](a, b);
      i += 1;
    }
    return result;
  });
});
}, 291, null, "ramda/src/sortWith.js");
__d(/* ramda/src/split.js */function(global, require, module, exports) {var invoker = require(210        ); // 210 = ./invoker

module.exports = invoker(1, 'split');
}, 292, null, "ramda/src/split.js");
__d(/* ramda/src/splitAt.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2
var length = require(217       ); // 217 = ./length
var slice = require(98       ); // 98 = ./slice

module.exports = _curry2(function splitAt(index, array) {
  return [slice(0, index, array), slice(index, length(array), array)];
});
}, 293, null, "ramda/src/splitAt.js");
__d(/* ramda/src/splitEvery.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2
var slice = require(98       ); // 98 = ./slice

module.exports = _curry2(function splitEvery(n, list) {
  if (n <= 0) {
    throw new Error('First argument to splitEvery must be a positive integer');
  }
  var result = [];
  var idx = 0;
  while (idx < list.length) {
    result.push(slice(idx, idx += n, list));
  }
  return result;
});
}, 294, null, "ramda/src/splitEvery.js");
__d(/* ramda/src/splitWhen.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2

module.exports = _curry2(function splitWhen(pred, list) {
  var idx = 0;
  var len = list.length;
  var prefix = [];

  while (idx < len && !pred(list[idx])) {
    prefix.push(list[idx]);
    idx += 1;
  }

  return [prefix, Array.prototype.slice.call(list, idx)];
});
}, 295, null, "ramda/src/splitWhen.js");
__d(/* ramda/src/startsWith.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2
var equals = require(109       ); // 109 = ./equals
var take = require(145     ); // 145 = ./take

module.exports = _curry2(function (prefix, list) {
  return equals(take(prefix.length, list), prefix);
});
}, 296, null, "ramda/src/startsWith.js");
__d(/* ramda/src/subtract.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2

module.exports = _curry2(function subtract(a, b) {
  return Number(a) - Number(b);
});
}, 297, null, "ramda/src/subtract.js");
__d(/* ramda/src/symmetricDifference.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2
var concat = require(104       ); // 104 = ./concat
var difference = require(133           ); // 133 = ./difference

module.exports = _curry2(function symmetricDifference(list1, list2) {
  return concat(difference(list1, list2), difference(list2, list1));
});
}, 298, null, "ramda/src/symmetricDifference.js");
__d(/* ramda/src/symmetricDifferenceWith.js */function(global, require, module, exports) {var _curry3 = require(31                  ); // 31 = ./internal/_curry3
var concat = require(104       ); // 104 = ./concat
var differenceWith = require(134               ); // 134 = ./differenceWith

module.exports = _curry3(function symmetricDifferenceWith(pred, list1, list2) {
  return concat(differenceWith(pred, list1, list2), differenceWith(pred, list2, list1));
});
}, 299, null, "ramda/src/symmetricDifferenceWith.js");
__d(/* ramda/src/takeLastWhile.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2

module.exports = _curry2(function takeLastWhile(fn, list) {
  var idx = list.length - 1;
  while (idx >= 0 && fn(list[idx])) {
    idx -= 1;
  }
  return Array.prototype.slice.call(list, idx + 1);
});
}, 300, null, "ramda/src/takeLastWhile.js");
__d(/* ramda/src/takeWhile.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2
var _dispatchable = require(33                        ); // 33 = ./internal/_dispatchable
var _xtakeWhile = require(302                     ); // 302 = ./internal/_xtakeWhile

module.exports = _curry2(_dispatchable(['takeWhile'], _xtakeWhile, function takeWhile(fn, list) {
  var idx = 0;
  var len = list.length;
  while (idx < len && fn(list[idx])) {
    idx += 1;
  }
  return Array.prototype.slice.call(list, 0, idx);
}));
}, 301, null, "ramda/src/takeWhile.js");
__d(/* ramda/src/internal/_xtakeWhile.js */function(global, require, module, exports) {var _curry2 = require(24         ); // 24 = ./_curry2
var _reduced = require(37          ); // 37 = ./_reduced
var _xfBase = require(38         ); // 38 = ./_xfBase

module.exports = function () {
  function XTakeWhile(f, xf) {
    this.xf = xf;
    this.f = f;
  }
  XTakeWhile.prototype['@@transducer/init'] = _xfBase.init;
  XTakeWhile.prototype['@@transducer/result'] = _xfBase.result;
  XTakeWhile.prototype['@@transducer/step'] = function (result, input) {
    return this.f(input) ? this.xf['@@transducer/step'](result, input) : _reduced(result);
  };

  return _curry2(function _xtakeWhile(f, xf) {
    return new XTakeWhile(f, xf);
  });
}();
}, 302, null, "ramda/src/internal/_xtakeWhile.js");
__d(/* ramda/src/tap.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2

module.exports = _curry2(function tap(fn, x) {
  fn(x);
  return x;
});
}, 303, null, "ramda/src/tap.js");
__d(/* ramda/src/test.js */function(global, require, module, exports) {var _cloneRegExp = require(88                       ); // 88 = ./internal/_cloneRegExp
var _curry2 = require(24                  ); // 24 = ./internal/_curry2
var _isRegExp = require(305                   ); // 305 = ./internal/_isRegExp
var toString = require(105         ); // 105 = ./toString

module.exports = _curry2(function test(pattern, str) {
  if (!_isRegExp(pattern)) {
    throw new TypeError('‘test’ requires a value of type RegExp as its first argument; received ' + toString(pattern));
  }
  return _cloneRegExp(pattern).test(str);
});
}, 304, null, "ramda/src/test.js");
__d(/* ramda/src/internal/_isRegExp.js */function(global, require, module, exports) {module.exports = function _isRegExp(x) {
  return Object.prototype.toString.call(x) === '[object RegExp]';
};
}, 305, null, "ramda/src/internal/_isRegExp.js");
__d(/* ramda/src/toLower.js */function(global, require, module, exports) {var invoker = require(210        ); // 210 = ./invoker

module.exports = invoker(0, 'toLowerCase');
}, 306, null, "ramda/src/toLower.js");
__d(/* ramda/src/toPairs.js */function(global, require, module, exports) {var _curry1 = require(19                  ); // 19 = ./internal/_curry1
var _has = require(51               ); // 51 = ./internal/_has

module.exports = _curry1(function toPairs(obj) {
  var pairs = [];
  for (var prop in obj) {
    if (_has(prop, obj)) {
      pairs[pairs.length] = [prop, obj[prop]];
    }
  }
  return pairs;
});
}, 307, null, "ramda/src/toPairs.js");
__d(/* ramda/src/toPairsIn.js */function(global, require, module, exports) {var _curry1 = require(19                  ); // 19 = ./internal/_curry1

module.exports = _curry1(function toPairsIn(obj) {
  var pairs = [];
  for (var prop in obj) {
    pairs[pairs.length] = [prop, obj[prop]];
  }
  return pairs;
});
}, 308, null, "ramda/src/toPairsIn.js");
__d(/* ramda/src/toUpper.js */function(global, require, module, exports) {var invoker = require(210        ); // 210 = ./invoker

module.exports = invoker(0, 'toUpperCase');
}, 309, null, "ramda/src/toUpper.js");
__d(/* ramda/src/transduce.js */function(global, require, module, exports) {var _reduce = require(44                  ); // 44 = ./internal/_reduce
var _xwrap = require(47                 ); // 47 = ./internal/_xwrap
var curryN = require(27        ); // 27 = ./curryN

module.exports = curryN(4, function transduce(xf, fn, acc, list) {
  return _reduce(xf(typeof fn === 'function' ? _xwrap(fn) : fn), acc, list);
});
}, 310, null, "ramda/src/transduce.js");
__d(/* ramda/src/transpose.js */function(global, require, module, exports) {var _curry1 = require(19                  ); // 19 = ./internal/_curry1

module.exports = _curry1(function transpose(outerlist) {
  var i = 0;
  var result = [];
  while (i < outerlist.length) {
    var innerlist = outerlist[i];
    var j = 0;
    while (j < innerlist.length) {
      if (typeof result[j] === 'undefined') {
        result[j] = [];
      }
      result[j].push(innerlist[j]);
      j += 1;
    }
    i += 1;
  }
  return result;
});
}, 311, null, "ramda/src/transpose.js");
__d(/* ramda/src/traverse.js */function(global, require, module, exports) {var _curry3 = require(31                  ); // 31 = ./internal/_curry3
var map = require(42     ); // 42 = ./map
var sequence = require(287         ); // 287 = ./sequence

module.exports = _curry3(function traverse(of, f, traversable) {
  return typeof traversable['fantasy-land/traverse'] === 'function' ? traversable['fantasy-land/traverse'](f, of) : sequence(of, map(f, traversable));
});
}, 312, null, "ramda/src/traverse.js");
__d(/* ramda/src/trim.js */function(global, require, module, exports) {var _curry1 = require(19                  ); // 19 = ./internal/_curry1

module.exports = function () {
  var ws = '\t\n\x0B\f\r \xA0\u1680\u180E\u2000\u2001\u2002\u2003' + '\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028' + '\u2029\uFEFF';
  var zeroWidth = '\u200B';
  var hasProtoTrim = typeof String.prototype.trim === 'function';
  if (!hasProtoTrim || ws.trim() || !zeroWidth.trim()) {
    return _curry1(function trim(str) {
      var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');
      var endRx = new RegExp('[' + ws + '][' + ws + ']*$');
      return str.replace(beginRx, '').replace(endRx, '');
    });
  } else {
    return _curry1(function trim(str) {
      return str.trim();
    });
  }
}();
}, 313, null, "ramda/src/trim.js");
__d(/* ramda/src/tryCatch.js */function(global, require, module, exports) {var _arity = require(28                 ); // 28 = ./internal/_arity
var _concat = require(26                  ); // 26 = ./internal/_concat
var _curry2 = require(24                  ); // 24 = ./internal/_curry2

module.exports = _curry2(function _tryCatch(tryer, catcher) {
  return _arity(tryer.length, function () {
    try {
      return tryer.apply(this, arguments);
    } catch (e) {
      return catcher.apply(this, _concat([e], arguments));
    }
  });
});
}, 314, null, "ramda/src/tryCatch.js");
__d(/* ramda/src/unapply.js */function(global, require, module, exports) {var _curry1 = require(19                  ); // 19 = ./internal/_curry1

module.exports = _curry1(function unapply(fn) {
  return function () {
    return fn(Array.prototype.slice.call(arguments, 0));
  };
});
}, 315, null, "ramda/src/unapply.js");
__d(/* ramda/src/unary.js */function(global, require, module, exports) {var _curry1 = require(19                  ); // 19 = ./internal/_curry1
var nAry = require(73      ); // 73 = ./nAry

module.exports = _curry1(function unary(fn) {
  return nAry(1, fn);
});
}, 316, null, "ramda/src/unary.js");
__d(/* ramda/src/uncurryN.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2
var curryN = require(27        ); // 27 = ./curryN

module.exports = _curry2(function uncurryN(depth, fn) {
  return curryN(depth, function () {
    var currentDepth = 1;
    var value = fn;
    var idx = 0;
    var endIdx;
    while (currentDepth <= depth && typeof value === 'function') {
      endIdx = currentDepth === depth ? arguments.length : idx + value.length;
      value = value.apply(this, Array.prototype.slice.call(arguments, idx, endIdx));
      currentDepth += 1;
      idx = endIdx;
    }
    return value;
  });
});
}, 317, null, "ramda/src/uncurryN.js");
__d(/* ramda/src/unfold.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2

module.exports = _curry2(function unfold(fn, seed) {
  var pair = fn(seed);
  var result = [];
  while (pair && pair.length) {
    result[result.length] = pair[0];
    pair = fn(pair[1]);
  }
  return result;
});
}, 318, null, "ramda/src/unfold.js");
__d(/* ramda/src/union.js */function(global, require, module, exports) {var _concat = require(26                  ); // 26 = ./internal/_concat
var _curry2 = require(24                  ); // 24 = ./internal/_curry2
var compose = require(93         ); // 93 = ./compose
var uniq = require(197     ); // 197 = ./uniq

module.exports = _curry2(compose(uniq, _concat));
}, 319, null, "ramda/src/union.js");
__d(/* ramda/src/unionWith.js */function(global, require, module, exports) {var _concat = require(26                  ); // 26 = ./internal/_concat
var _curry3 = require(31                  ); // 31 = ./internal/_curry3
var uniqWith = require(201         ); // 201 = ./uniqWith

module.exports = _curry3(function unionWith(pred, list1, list2) {
  return uniqWith(pred, _concat(list1, list2));
});
}, 320, null, "ramda/src/unionWith.js");
__d(/* ramda/src/unless.js */function(global, require, module, exports) {var _curry3 = require(31                  ); // 31 = ./internal/_curry3

module.exports = _curry3(function unless(pred, whenFalseFn, x) {
  return pred(x) ? x : whenFalseFn(x);
});
}, 321, null, "ramda/src/unless.js");
__d(/* ramda/src/unnest.js */function(global, require, module, exports) {var _identity = require(187                   ); // 187 = ./internal/_identity
var chain = require(80       ); // 80 = ./chain

module.exports = chain(_identity);
}, 322, null, "ramda/src/unnest.js");
__d(/* ramda/src/until.js */function(global, require, module, exports) {var _curry3 = require(31                  ); // 31 = ./internal/_curry3

module.exports = _curry3(function until(pred, fn, init) {
  var val = init;
  while (!pred(val)) {
    val = fn(val);
  }
  return val;
});
}, 323, null, "ramda/src/until.js");
__d(/* ramda/src/valuesIn.js */function(global, require, module, exports) {var _curry1 = require(19                  ); // 19 = ./internal/_curry1

module.exports = _curry1(function valuesIn(obj) {
  var prop;
  var vs = [];
  for (prop in obj) {
    vs[vs.length] = obj[prop];
  }
  return vs;
});
}, 324, null, "ramda/src/valuesIn.js");
__d(/* ramda/src/view.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2

module.exports = function () {
  var Const = function Const(x) {
    return { value: x, 'fantasy-land/map': function fantasyLandMap() {
        return this;
      } };
  };

  return _curry2(function view(lens, x) {
    return lens(Const)(x).value;
  });
}();
}, 325, null, "ramda/src/view.js");
__d(/* ramda/src/when.js */function(global, require, module, exports) {var _curry3 = require(31                  ); // 31 = ./internal/_curry3

module.exports = _curry3(function when(pred, whenTrueFn, x) {
  return pred(x) ? whenTrueFn(x) : x;
});
}, 326, null, "ramda/src/when.js");
__d(/* ramda/src/where.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2
var _has = require(51               ); // 51 = ./internal/_has

module.exports = _curry2(function where(spec, testObj) {
  for (var prop in spec) {
    if (_has(prop, spec) && !spec[prop](testObj[prop])) {
      return false;
    }
  }
  return true;
});
}, 327, null, "ramda/src/where.js");
__d(/* ramda/src/whereEq.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2
var equals = require(109       ); // 109 = ./equals
var map = require(42     ); // 42 = ./map
var where = require(327      ); // 327 = ./where

module.exports = _curry2(function whereEq(spec, testObj) {
  return where(map(equals, spec), testObj);
});
}, 328, null, "ramda/src/whereEq.js");
__d(/* ramda/src/without.js */function(global, require, module, exports) {var _contains = require(107                   ); // 107 = ./internal/_contains
var _curry2 = require(24                  ); // 24 = ./internal/_curry2
var flip = require(175     ); // 175 = ./flip
var reject = require(116       ); // 116 = ./reject

module.exports = _curry2(function (xs, list) {
  return reject(flip(_contains)(xs), list);
});
}, 329, null, "ramda/src/without.js");
__d(/* ramda/src/xprod.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2

module.exports = _curry2(function xprod(a, b) {
  var idx = 0;
  var ilen = a.length;
  var j;
  var jlen = b.length;
  var result = [];
  while (idx < ilen) {
    j = 0;
    while (j < jlen) {
      result[result.length] = [a[idx], b[j]];
      j += 1;
    }
    idx += 1;
  }
  return result;
});
}, 330, null, "ramda/src/xprod.js");
__d(/* ramda/src/zip.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2

module.exports = _curry2(function zip(a, b) {
  var rv = [];
  var idx = 0;
  var len = Math.min(a.length, b.length);
  while (idx < len) {
    rv[idx] = [a[idx], b[idx]];
    idx += 1;
  }
  return rv;
});
}, 331, null, "ramda/src/zip.js");
__d(/* ramda/src/zipObj.js */function(global, require, module, exports) {var _curry2 = require(24                  ); // 24 = ./internal/_curry2

module.exports = _curry2(function zipObj(keys, values) {
  var idx = 0;
  var len = Math.min(keys.length, values.length);
  var out = {};
  while (idx < len) {
    out[keys[idx]] = values[idx];
    idx += 1;
  }
  return out;
});
}, 332, null, "ramda/src/zipObj.js");
__d(/* ramda/src/zipWith.js */function(global, require, module, exports) {var _curry3 = require(31                  ); // 31 = ./internal/_curry3

module.exports = _curry3(function zipWith(fn, a, b) {
  var rv = [];
  var idx = 0;
  var len = Math.min(a.length, b.length);
  while (idx < len) {
    rv[idx] = fn(a[idx], b[idx]);
    idx += 1;
  }
  return rv;
});
}, 333, null, "ramda/src/zipWith.js");
__d(/* react-native/Libraries/react-native/react-native.js */function(global, require, module, exports) {
'use strict';

var warning = require(335               ); // 335 = fbjs/lib/warning

if (__DEV__) {
  var warningDedupe = {};
  var addonWarn = function addonWarn(prevName, newPackageName) {
    warning(warningDedupe[prevName], 'React.addons.' + prevName + ' is deprecated. Please import the "' + newPackageName + '" package instead.');
    warningDedupe[prevName] = true;
  };
}

var ReactNative = {
  get ActivityIndicator() {
    return require(337                ); // 337 = ActivityIndicator
  },
  get ART() {
    return require(498             ); // 498 = ReactNativeART
  },
  get Button() {
    return require(504     ); // 504 = Button
  },
  get DatePickerIOS() {
    return require(592            ); // 592 = DatePickerIOS
  },
  get DrawerLayoutAndroid() {
    return require(593                  ); // 593 = DrawerLayoutAndroid
  },
  get Image() {
    return require(585    ); // 585 = Image
  },
  get ImageEditor() {
    return require(595          ); // 595 = ImageEditor
  },
  get ImageStore() {
    return require(596         ); // 596 = ImageStore
  },
  get KeyboardAvoidingView() {
    return require(597                   ); // 597 = KeyboardAvoidingView
  },
  get ListView() {
    return require(599       ); // 599 = ListView
  },
  get MapView() {
    return require(605      ); // 605 = MapView
  },
  get Modal() {
    return require(606    ); // 606 = Modal
  },
  get Navigator() {
    return require(629        ); // 629 = Navigator
  },
  get NavigatorIOS() {
    return require(647           ); // 647 = NavigatorIOS
  },
  get Picker() {
    return require(648     ); // 648 = Picker
  },
  get PickerIOS() {
    return require(649        ); // 649 = PickerIOS
  },
  get ProgressBarAndroid() {
    return require(651                 ); // 651 = ProgressBarAndroid
  },
  get ProgressViewIOS() {
    return require(652              ); // 652 = ProgressViewIOS
  },
  get ScrollView() {
    return require(587         ); // 587 = ScrollView
  },
  get SegmentedControlIOS() {
    return require(653                  ); // 653 = SegmentedControlIOS
  },
  get Slider() {
    return require(654     ); // 654 = Slider
  },
  get SnapshotViewIOS() {
    return require(655              ); // 655 = SnapshotViewIOS
  },
  get Switch() {
    return require(656     ); // 656 = Switch
  },
  get RefreshControl() {
    return require(657             ); // 657 = RefreshControl
  },
  get StatusBar() {
    return require(594        ); // 594 = StatusBar
  },
  get SwipeableListView() {
    return require(658                ); // 658 = SwipeableListView
  },
  get TabBarIOS() {
    return require(661        ); // 661 = TabBarIOS
  },
  get Text() {
    return require(505   ); // 505 = Text
  },
  get TextInput() {
    return require(662        ); // 662 = TextInput
  },
  get ToastAndroid() {
    return require(393           ); // 393 = ToastAndroid
  },
  get ToolbarAndroid() {
    return require(669             ); // 669 = ToolbarAndroid
  },
  get Touchable() {
    return require(506        ); // 506 = Touchable
  },
  get TouchableHighlight() {
    return require(618                 ); // 618 = TouchableHighlight
  },
  get TouchableNativeFeedback() {
    return require(512                      ); // 512 = TouchableNativeFeedback
  },
  get TouchableOpacity() {
    return require(572               ); // 572 = TouchableOpacity
  },
  get TouchableWithoutFeedback() {
    return require(569                       ); // 569 = TouchableWithoutFeedback
  },
  get View() {
    return require(441   ); // 441 = View
  },
  get ViewPagerAndroid() {
    return require(670               ); // 670 = ViewPagerAndroid
  },
  get WebView() {
    return require(671      ); // 671 = WebView
  },

  get ActionSheetIOS() {
    return require(672             ); // 672 = ActionSheetIOS
  },
  get AdSupportIOS() {
    return require(673           ); // 673 = AdSupportIOS
  },
  get Alert() {
    return require(522    ); // 522 = Alert
  },
  get AlertIOS() {
    return require(523       ); // 523 = AlertIOS
  },
  get Animated() {
    return require(573       ); // 573 = Animated
  },
  get AppRegistry() {
    return require(674          ); // 674 = AppRegistry
  },
  get AppState() {
    return require(383       ); // 383 = AppState
  },
  get AsyncStorage() {
    return require(682           ); // 682 = AsyncStorage
  },
  get BackAndroid() {
    return require(679          ); // 679 = BackAndroid
  },
  get CameraRoll() {
    return require(683         ); // 683 = CameraRoll
  },
  get Clipboard() {
    return require(684        ); // 684 = Clipboard
  },
  get DatePickerAndroid() {
    return require(685                ); // 685 = DatePickerAndroid
  },
  get Dimensions() {
    return require(423         ); // 423 = Dimensions
  },
  get Easing() {
    return require(583     ); // 583 = Easing
  },
  get I18nManager() {
    return require(628          ); // 628 = I18nManager
  },
  get ImagePickerIOS() {
    return require(686             ); // 686 = ImagePickerIOS
  },
  get InteractionManager() {
    return require(575                 ); // 575 = InteractionManager
  },
  get Keyboard() {
    return require(381       ); // 381 = Keyboard
  },
  get LayoutAnimation() {
    return require(598              ); // 598 = LayoutAnimation
  },
  get Linking() {
    return require(687      ); // 687 = Linking
  },
  get NativeEventEmitter() {
    return require(374                 ); // 374 = NativeEventEmitter
  },
  get NavigationExperimental() {
    return require(688                     ); // 688 = NavigationExperimental
  },
  get NetInfo() {
    return require(709      ); // 709 = NetInfo
  },
  get PanResponder() {
    return require(643           ); // 643 = PanResponder
  },
  get PermissionsAndroid() {
    return require(710                 ); // 710 = PermissionsAndroid
  },
  get PixelRatio() {
    return require(422         ); // 422 = PixelRatio
  },
  get PushNotificationIOS() {
    return require(711                  ); // 711 = PushNotificationIOS
  },
  get Settings() {
    return require(712       ); // 712 = Settings
  },
  get Share() {
    return require(713    ); // 713 = Share
  },
  get StatusBarIOS() {
    return require(380           ); // 380 = StatusBarIOS
  },
  get StyleSheet() {
    return require(421         ); // 421 = StyleSheet
  },
  get Systrace() {
    return require(354       ); // 354 = Systrace
  },
  get TimePickerAndroid() {
    return require(714                ); // 714 = TimePickerAndroid
  },
  get UIManager() {
    return require(395        ); // 395 = UIManager
  },
  get Vibration() {
    return require(715        ); // 715 = Vibration
  },
  get VibrationIOS() {
    return require(716           ); // 716 = VibrationIOS
  },

  get DeviceEventEmitter() {
    return require(379                    ); // 379 = RCTDeviceEventEmitter
  },
  get NativeAppEventEmitter() {
    return require(550                       ); // 550 = RCTNativeAppEventEmitter
  },
  get NativeModules() {
    return require(349            ); // 349 = NativeModules
  },
  get Platform() {
    return require(348       ); // 348 = Platform
  },
  get processColor() {
    return require(436           ); // 436 = processColor
  },
  get requireNativeComponent() {
    return require(450                     ); // 450 = requireNativeComponent
  },

  get ColorPropType() {
    return require(338            ); // 338 = ColorPropType
  },
  get EdgeInsetsPropType() {
    return require(442                 ); // 442 = EdgeInsetsPropType
  },
  get PointPropType() {
    return require(588            ); // 588 = PointPropType
  },

  addons: {
    get LinkedStateMixin() {
      if (__DEV__) {
        addonWarn('LinkedStateMixin', 'react-addons-linked-state-mixin');
      }
      return require(717                         ); // 717 = react/lib/LinkedStateMixin
    },
    get PureRenderMixin() {
      if (__DEV__) {
        addonWarn('PureRenderMixin', 'react-addons-pure-render-mixin');
      }
      return require(706                                          ); // 706 = react/lib/ReactComponentWithPureRenderMixin
    },
    get TestModule() {
      if (__DEV__) {
        warning(warningDedupe.TestModule, 'React.addons.TestModule is deprecated. ' + 'Use ReactNative.NativeModules.TestModule instead.');
        warningDedupe.TestModule = true;
      }
      return require(349            ).TestModule; // 349 = NativeModules
    },
    get batchedUpdates() {
      if (__DEV__) {
        warning(warningDedupe.batchedUpdates, 'React.addons.batchedUpdates is deprecated. ' + 'Use ReactNative.unstable_batchedUpdates instead.');
        warningDedupe.batchedUpdates = true;
      }
      return require(464           ).batchedUpdates; // 464 = ReactUpdates
    },
    get createFragment() {
      if (__DEV__) {
        addonWarn('createFragment', 'react-addons-create-fragment');
      }
      return require(720                      ).create; // 720 = react/lib/ReactFragment
    },
    get update() {
      if (__DEV__) {
        addonWarn('update', 'react-addons-update');
      }
      return require(721               ); // 721 = react/lib/update
    }
  }
};

if (__DEV__) {
  (function () {
    var throwOnWrongReactAPI = require(722                   ); // 722 = throwOnWrongReactAPI
    var reactAPIs = ['createClass', 'Component'];

    var _loop = function _loop(key) {
      Object.defineProperty(ReactNative, key, {
        get: function get() {
          throwOnWrongReactAPI(key);
        },

        enumerable: false,
        configurable: false
      });
    };

    for (var _iterator = reactAPIs, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === 'function' ? Symbol.iterator : '@@iterator']();;) {
      var _ref;

      if (_isArray) {
        if (_i >= _iterator.length) break;
        _ref = _iterator[_i++];
      } else {
        _i = _iterator.next();
        if (_i.done) break;
        _ref = _i.value;
      }

      var key = _ref;

      _loop(key);
    }
  })();
}

var ReactNativeInternal = require(513          ); // 513 = ReactNative
function applyForwarding(key) {
  if (__DEV__) {
    Object.defineProperty(ReactNative, key, Object.getOwnPropertyDescriptor(ReactNativeInternal, key));
    return;
  }
  ReactNative[key] = ReactNativeInternal[key];
}
for (var key in ReactNativeInternal) {
  applyForwarding(key);
}
module.exports = ReactNative;
}, 334, null, "react-native/Libraries/react-native/react-native.js");
__d(/* fbjs/lib/warning.js */function(global, require, module, exports) {

'use strict';

var emptyFunction = require(336              ); // 336 = ./emptyFunction

var warning = emptyFunction;

if (process.env.NODE_ENV !== 'production') {
  var printWarning = function printWarning(format) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var argIndex = 0;
    var message = 'Warning: ' + format.replace(/%s/g, function () {
      return args[argIndex++];
    });
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      throw new Error(message);
    } catch (x) {}
  };

  warning = function warning(condition, format) {
    if (format === undefined) {
      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
    }

    if (format.indexOf('Failed Composite propType: ') === 0) {
      return;
    }

    if (!condition) {
      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        args[_key2 - 2] = arguments[_key2];
      }

      printWarning.apply(undefined, [format].concat(args));
    }
  };
}

module.exports = warning;
}, 335, null, "fbjs/lib/warning.js");
__d(/* fbjs/lib/emptyFunction.js */function(global, require, module, exports) {"use strict";

function makeEmptyFunction(arg) {
  return function () {
    return arg;
  };
}

var emptyFunction = function emptyFunction() {};

emptyFunction.thatReturns = makeEmptyFunction;
emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
emptyFunction.thatReturnsNull = makeEmptyFunction(null);
emptyFunction.thatReturnsThis = function () {
  return this;
};
emptyFunction.thatReturnsArgument = function (arg) {
  return arg;
};

module.exports = emptyFunction;
}, 336, null, "fbjs/lib/emptyFunction.js");
__d(/* ActivityIndicator */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native/Libraries/Components/ActivityIndicator/ActivityIndicator.js';
var ColorPropType = require(338            ); // 338 = ColorPropType
var NativeMethodsMixin = require(341                 ); // 341 = NativeMethodsMixin
var Platform = require(348       ); // 348 = Platform
var React = require(398    ); // 398 = React
var StyleSheet = require(421         ); // 421 = StyleSheet
var View = require(441   ); // 441 = View

var requireNativeComponent = require(450                     ); // 450 = requireNativeComponent

var PropTypes = React.PropTypes;

var GRAY = '#999999';

var ActivityIndicator = React.createClass({
  displayName: 'ActivityIndicator',

  mixins: [NativeMethodsMixin],

  propTypes: babelHelpers.extends({}, View.propTypes, {
    animating: PropTypes.bool,

    color: ColorPropType,

    size: PropTypes.oneOfType([PropTypes.oneOf(['small', 'large']), PropTypes.number]),

    hidesWhenStopped: PropTypes.bool
  }),

  getDefaultProps: function getDefaultProps() {
    return {
      animating: true,
      color: Platform.OS === 'ios' ? GRAY : undefined,
      hidesWhenStopped: true,
      size: 'small'
    };
  },
  render: function render() {
    var _props = this.props,
        onLayout = _props.onLayout,
        style = _props.style,
        props = babelHelpers.objectWithoutProperties(_props, ['onLayout', 'style']);

    var sizeStyle = void 0;

    switch (props.size) {
      case 'small':
        sizeStyle = styles.sizeSmall;
        break;
      case 'large':
        sizeStyle = styles.sizeLarge;
        break;
      default:
        sizeStyle = { height: props.size, width: props.size };
        break;
    }

    return React.createElement(
      View,
      {
        onLayout: onLayout,
        style: [styles.container, style], __source: {
          fileName: _jsxFileName,
          lineNumber: 94
        }
      },
      React.createElement(RCTActivityIndicator, babelHelpers.extends({}, props, {
        style: sizeStyle,
        styleAttr: 'Normal',
        indeterminate: true,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 97
        }
      }))
    );
  }
});

var styles = StyleSheet.create({
  container: {
    alignItems: 'center',
    justifyContent: 'center'
  },
  sizeSmall: {
    width: 20,
    height: 20
  },
  sizeLarge: {
    width: 36,
    height: 36
  }
});

if (Platform.OS === 'ios') {
  var RCTActivityIndicator = requireNativeComponent('RCTActivityIndicatorView', ActivityIndicator, { nativeOnly: { activityIndicatorViewStyle: true } });
} else if (Platform.OS === 'android') {
  var RCTActivityIndicator = requireNativeComponent('AndroidProgressBar', ActivityIndicator, { nativeOnly: {
      indeterminate: true,
      progress: true,
      styleAttr: true
    } });
}

module.exports = ActivityIndicator;
}, 337, null, "ActivityIndicator");
__d(/* ColorPropType */function(global, require, module, exports) {
'use strict';

var ReactPropTypeLocationNames = require(339                                   ); // 339 = react/lib/ReactPropTypeLocationNames

var normalizeColor = require(340             ); // 340 = normalizeColor

var colorPropType = function colorPropType(isRequired, props, propName, componentName, location, propFullName) {
  var color = props[propName];
  if (color === undefined || color === null) {
    if (isRequired) {
      var locationName = ReactPropTypeLocationNames[location];
      return new Error('Required ' + locationName + ' `' + (propFullName || propName) + '` was not specified in `' + componentName + '`.');
    }
    return;
  }

  if (typeof color === 'number') {
    return;
  }

  if (normalizeColor(color) === null) {
    var locationName = ReactPropTypeLocationNames[location];
    return new Error('Invalid ' + locationName + ' `' + (propFullName || propName) + '` supplied to `' + componentName + '`: ' + color + '\n' + 'Valid color formats are\n  - \'#f0f\' (#rgb)\n  - \'#f0fc\' (#rgba)\n  - \'#ff00ff\' (#rrggbb)\n  - \'#ff00ff00\' (#rrggbbaa)\n  - \'rgb(255, 255, 255)\'\n  - \'rgba(255, 255, 255, 1.0)\'\n  - \'hsl(360, 100%, 100%)\'\n  - \'hsla(360, 100%, 100%, 1.0)\'\n  - \'transparent\'\n  - \'red\'\n  - 0xff00ff00 (0xrrggbbaa)\n');
  }
};

var ColorPropType = colorPropType.bind(null, false);
ColorPropType.isRequired = colorPropType.bind(null, true);

module.exports = ColorPropType;
}, 338, null, "ColorPropType");
__d(/* react/lib/ReactPropTypeLocationNames.js */function(global, require, module, exports) {

'use strict';

var ReactPropTypeLocationNames = {};

if (process.env.NODE_ENV !== 'production') {
  ReactPropTypeLocationNames = {
    prop: 'prop',
    context: 'context',
    childContext: 'child context'
  };
}

module.exports = ReactPropTypeLocationNames;
}, 339, null, "react/lib/ReactPropTypeLocationNames.js");
__d(/* normalizeColor */function(global, require, module, exports) {
'use strict';

function normalizeColor(color) {
  var match;

  if (typeof color === 'number') {
    if (color >>> 0 === color && color >= 0 && color <= 0xffffffff) {
      return color;
    }
    return null;
  }

  if (match = matchers.hex6.exec(color)) {
    return parseInt(match[1] + 'ff', 16) >>> 0;
  }

  if (names.hasOwnProperty(color)) {
    return names[color];
  }

  if (match = matchers.rgb.exec(color)) {
    return (parse255(match[1]) << 24 | parse255(match[2]) << 16 | parse255(match[3]) << 8 | 0x000000ff) >>> 0;
  }

  if (match = matchers.rgba.exec(color)) {
    return (parse255(match[1]) << 24 | parse255(match[2]) << 16 | parse255(match[3]) << 8 | parse1(match[4])) >>> 0;
  }

  if (match = matchers.hex3.exec(color)) {
    return parseInt(match[1] + match[1] + match[2] + match[2] + match[3] + match[3] + 'ff', 16) >>> 0;
  }

  if (match = matchers.hex8.exec(color)) {
    return parseInt(match[1], 16) >>> 0;
  }

  if (match = matchers.hex4.exec(color)) {
    return parseInt(match[1] + match[1] + match[2] + match[2] + match[3] + match[3] + match[4] + match[4], 16) >>> 0;
  }

  if (match = matchers.hsl.exec(color)) {
    return (hslToRgb(parse360(match[1]), parsePercentage(match[2]), parsePercentage(match[3])) | 0x000000ff) >>> 0;
  }

  if (match = matchers.hsla.exec(color)) {
    return (hslToRgb(parse360(match[1]), parsePercentage(match[2]), parsePercentage(match[3])) | parse1(match[4])) >>> 0;
  }

  return null;
}

function hue2rgb(p, q, t) {
  if (t < 0) {
    t += 1;
  }
  if (t > 1) {
    t -= 1;
  }
  if (t < 1 / 6) {
    return p + (q - p) * 6 * t;
  }
  if (t < 1 / 2) {
    return q;
  }
  if (t < 2 / 3) {
    return p + (q - p) * (2 / 3 - t) * 6;
  }
  return p;
}

function hslToRgb(h, s, l) {
  var q = l < 0.5 ? l * (1 + s) : l + s - l * s;
  var p = 2 * l - q;
  var r = hue2rgb(p, q, h + 1 / 3);
  var g = hue2rgb(p, q, h);
  var b = hue2rgb(p, q, h - 1 / 3);

  return Math.round(r * 255) << 24 | Math.round(g * 255) << 16 | Math.round(b * 255) << 8;
}

var NUMBER = '[-+]?\\d*\\.?\\d+';
var PERCENTAGE = NUMBER + '%';

function call() {
  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  return '\\(\\s*(' + args.join(')\\s*,\\s*(') + ')\\s*\\)';
}

var matchers = {
  rgb: new RegExp('rgb' + call(NUMBER, NUMBER, NUMBER)),
  rgba: new RegExp('rgba' + call(NUMBER, NUMBER, NUMBER, NUMBER)),
  hsl: new RegExp('hsl' + call(NUMBER, PERCENTAGE, PERCENTAGE)),
  hsla: new RegExp('hsla' + call(NUMBER, PERCENTAGE, PERCENTAGE, NUMBER)),
  hex3: /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
  hex4: /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
  hex6: /^#([0-9a-fA-F]{6})$/,
  hex8: /^#([0-9a-fA-F]{8})$/
};

function parse255(str) {
  var int = parseInt(str, 10);
  if (int < 0) {
    return 0;
  }
  if (int > 255) {
    return 255;
  }
  return int;
}

function parse360(str) {
  var int = parseFloat(str);
  return (int % 360 + 360) % 360 / 360;
}

function parse1(str) {
  var num = parseFloat(str);
  if (num < 0) {
    return 0;
  }
  if (num > 1) {
    return 255;
  }
  return Math.round(num * 255);
}

function parsePercentage(str) {
  var int = parseFloat(str, 10);
  if (int < 0) {
    return 0;
  }
  if (int > 100) {
    return 1;
  }
  return int / 100;
}

var names = {
  transparent: 0x00000000,

  aliceblue: 0xf0f8ffff,
  antiquewhite: 0xfaebd7ff,
  aqua: 0x00ffffff,
  aquamarine: 0x7fffd4ff,
  azure: 0xf0ffffff,
  beige: 0xf5f5dcff,
  bisque: 0xffe4c4ff,
  black: 0x000000ff,
  blanchedalmond: 0xffebcdff,
  blue: 0x0000ffff,
  blueviolet: 0x8a2be2ff,
  brown: 0xa52a2aff,
  burlywood: 0xdeb887ff,
  burntsienna: 0xea7e5dff,
  cadetblue: 0x5f9ea0ff,
  chartreuse: 0x7fff00ff,
  chocolate: 0xd2691eff,
  coral: 0xff7f50ff,
  cornflowerblue: 0x6495edff,
  cornsilk: 0xfff8dcff,
  crimson: 0xdc143cff,
  cyan: 0x00ffffff,
  darkblue: 0x00008bff,
  darkcyan: 0x008b8bff,
  darkgoldenrod: 0xb8860bff,
  darkgray: 0xa9a9a9ff,
  darkgreen: 0x006400ff,
  darkgrey: 0xa9a9a9ff,
  darkkhaki: 0xbdb76bff,
  darkmagenta: 0x8b008bff,
  darkolivegreen: 0x556b2fff,
  darkorange: 0xff8c00ff,
  darkorchid: 0x9932ccff,
  darkred: 0x8b0000ff,
  darksalmon: 0xe9967aff,
  darkseagreen: 0x8fbc8fff,
  darkslateblue: 0x483d8bff,
  darkslategray: 0x2f4f4fff,
  darkslategrey: 0x2f4f4fff,
  darkturquoise: 0x00ced1ff,
  darkviolet: 0x9400d3ff,
  deeppink: 0xff1493ff,
  deepskyblue: 0x00bfffff,
  dimgray: 0x696969ff,
  dimgrey: 0x696969ff,
  dodgerblue: 0x1e90ffff,
  firebrick: 0xb22222ff,
  floralwhite: 0xfffaf0ff,
  forestgreen: 0x228b22ff,
  fuchsia: 0xff00ffff,
  gainsboro: 0xdcdcdcff,
  ghostwhite: 0xf8f8ffff,
  gold: 0xffd700ff,
  goldenrod: 0xdaa520ff,
  gray: 0x808080ff,
  green: 0x008000ff,
  greenyellow: 0xadff2fff,
  grey: 0x808080ff,
  honeydew: 0xf0fff0ff,
  hotpink: 0xff69b4ff,
  indianred: 0xcd5c5cff,
  indigo: 0x4b0082ff,
  ivory: 0xfffff0ff,
  khaki: 0xf0e68cff,
  lavender: 0xe6e6faff,
  lavenderblush: 0xfff0f5ff,
  lawngreen: 0x7cfc00ff,
  lemonchiffon: 0xfffacdff,
  lightblue: 0xadd8e6ff,
  lightcoral: 0xf08080ff,
  lightcyan: 0xe0ffffff,
  lightgoldenrodyellow: 0xfafad2ff,
  lightgray: 0xd3d3d3ff,
  lightgreen: 0x90ee90ff,
  lightgrey: 0xd3d3d3ff,
  lightpink: 0xffb6c1ff,
  lightsalmon: 0xffa07aff,
  lightseagreen: 0x20b2aaff,
  lightskyblue: 0x87cefaff,
  lightslategray: 0x778899ff,
  lightslategrey: 0x778899ff,
  lightsteelblue: 0xb0c4deff,
  lightyellow: 0xffffe0ff,
  lime: 0x00ff00ff,
  limegreen: 0x32cd32ff,
  linen: 0xfaf0e6ff,
  magenta: 0xff00ffff,
  maroon: 0x800000ff,
  mediumaquamarine: 0x66cdaaff,
  mediumblue: 0x0000cdff,
  mediumorchid: 0xba55d3ff,
  mediumpurple: 0x9370dbff,
  mediumseagreen: 0x3cb371ff,
  mediumslateblue: 0x7b68eeff,
  mediumspringgreen: 0x00fa9aff,
  mediumturquoise: 0x48d1ccff,
  mediumvioletred: 0xc71585ff,
  midnightblue: 0x191970ff,
  mintcream: 0xf5fffaff,
  mistyrose: 0xffe4e1ff,
  moccasin: 0xffe4b5ff,
  navajowhite: 0xffdeadff,
  navy: 0x000080ff,
  oldlace: 0xfdf5e6ff,
  olive: 0x808000ff,
  olivedrab: 0x6b8e23ff,
  orange: 0xffa500ff,
  orangered: 0xff4500ff,
  orchid: 0xda70d6ff,
  palegoldenrod: 0xeee8aaff,
  palegreen: 0x98fb98ff,
  paleturquoise: 0xafeeeeff,
  palevioletred: 0xdb7093ff,
  papayawhip: 0xffefd5ff,
  peachpuff: 0xffdab9ff,
  peru: 0xcd853fff,
  pink: 0xffc0cbff,
  plum: 0xdda0ddff,
  powderblue: 0xb0e0e6ff,
  purple: 0x800080ff,
  rebeccapurple: 0x663399ff,
  red: 0xff0000ff,
  rosybrown: 0xbc8f8fff,
  royalblue: 0x4169e1ff,
  saddlebrown: 0x8b4513ff,
  salmon: 0xfa8072ff,
  sandybrown: 0xf4a460ff,
  seagreen: 0x2e8b57ff,
  seashell: 0xfff5eeff,
  sienna: 0xa0522dff,
  silver: 0xc0c0c0ff,
  skyblue: 0x87ceebff,
  slateblue: 0x6a5acdff,
  slategray: 0x708090ff,
  slategrey: 0x708090ff,
  snow: 0xfffafaff,
  springgreen: 0x00ff7fff,
  steelblue: 0x4682b4ff,
  tan: 0xd2b48cff,
  teal: 0x008080ff,
  thistle: 0xd8bfd8ff,
  tomato: 0xff6347ff,
  turquoise: 0x40e0d0ff,
  violet: 0xee82eeff,
  wheat: 0xf5deb3ff,
  white: 0xffffffff,
  whitesmoke: 0xf5f5f5ff,
  yellow: 0xffff00ff,
  yellowgreen: 0x9acd32ff
};

module.exports = normalizeColor;
}, 340, null, "normalizeColor");
__d(/* NativeMethodsMixin */function(global, require, module, exports) {
'use strict';

var ReactNativeAttributePayload = require(342                          ); // 342 = ReactNativeAttributePayload
var TextInputState = require(347             ); // 347 = TextInputState
var UIManager = require(395        ); // 395 = UIManager

var findNodeHandle = require(396             ); // 396 = findNodeHandle
var invariant = require(346                 ); // 346 = fbjs/lib/invariant

function warnForStyleProps(props, validAttributes) {
  for (var key in validAttributes.style) {
    if (!(validAttributes[key] || props[key] === undefined)) {
      console.error('You are setting the style `{ ' + key + ': ... }` as a prop. You ' + 'should nest it in a style object. ' + 'E.g. `{ style: { ' + key + ': ... } }`');
    }
  }
}

var NativeMethodsMixin = {
  measure: function measure(callback) {
    UIManager.measure(findNodeHandle(this), mountSafeCallback(this, callback));
  },

  measureInWindow: function measureInWindow(callback) {
    UIManager.measureInWindow(findNodeHandle(this), mountSafeCallback(this, callback));
  },

  measureLayout: function measureLayout(relativeToNativeNode, onSuccess, onFail) {
    UIManager.measureLayout(findNodeHandle(this), relativeToNativeNode, mountSafeCallback(this, onFail), mountSafeCallback(this, onSuccess));
  },

  setNativeProps: function setNativeProps(nativeProps) {
    if (!this.viewConfig) {
      var ctor = this.constructor;
      var componentName = ctor.displayName || ctor.name || '<Unknown Component>';
      invariant(false, componentName + ' "viewConfig" is not defined.');
    }

    if (__DEV__) {
      warnForStyleProps(nativeProps, this.viewConfig.validAttributes);
    }

    var updatePayload = ReactNativeAttributePayload.create(nativeProps, this.viewConfig.validAttributes);

    UIManager.updateView(findNodeHandle(this), this.viewConfig.uiViewClassName, updatePayload);
  },

  focus: function focus() {
    TextInputState.focusTextInput(findNodeHandle(this));
  },

  blur: function blur() {
    TextInputState.blurTextInput(findNodeHandle(this));
  }
};

function throwOnStylesProp(component, props) {
  if (props.styles !== undefined) {
    var owner = component._owner || null;
    var name = component.constructor.displayName;
    var msg = '`styles` is not a supported property of `' + name + '`, did ' + 'you mean `style` (singular)?';
    if (owner && owner.constructor && owner.constructor.displayName) {
      msg += '\n\nCheck the `' + owner.constructor.displayName + '` parent ' + ' component.';
    }
    throw new Error(msg);
  }
}
if (__DEV__) {
  var NativeMethodsMixin_DEV = NativeMethodsMixin;
  invariant(!NativeMethodsMixin_DEV.componentWillMount && !NativeMethodsMixin_DEV.componentWillReceiveProps, 'Do not override existing functions.');
  NativeMethodsMixin_DEV.componentWillMount = function () {
    throwOnStylesProp(this, this.props);
  };
  NativeMethodsMixin_DEV.componentWillReceiveProps = function (newProps) {
    throwOnStylesProp(this, newProps);
  };
}

function mountSafeCallback(context, callback) {
  return function () {
    if (!callback || context.isMounted && !context.isMounted()) {
      return undefined;
    }
    return callback.apply(context, arguments);
  };
}

module.exports = NativeMethodsMixin;
}, 341, null, "NativeMethodsMixin");
__d(/* ReactNativeAttributePayload */function(global, require, module, exports) {
'use strict';

var ReactNativePropRegistry = require(343                      ); // 343 = ReactNativePropRegistry

var deepDiffer = require(344         ); // 344 = deepDiffer
var flattenStyle = require(345           ); // 345 = flattenStyle

var emptyObject = {};

var removedKeys = null;
var removedKeyCount = 0;

function defaultDiffer(prevProp, nextProp) {
  if (typeof nextProp !== 'object' || nextProp === null) {
    return true;
  } else {
    return deepDiffer(prevProp, nextProp);
  }
}

function resolveObject(idOrObject) {
  if (typeof idOrObject === 'number') {
    return ReactNativePropRegistry.getByID(idOrObject);
  }
  return idOrObject;
}

function restoreDeletedValuesInNestedArray(updatePayload, node, validAttributes) {
  if (Array.isArray(node)) {
    var i = node.length;
    while (i-- && removedKeyCount > 0) {
      restoreDeletedValuesInNestedArray(updatePayload, node[i], validAttributes);
    }
  } else if (node && removedKeyCount > 0) {
    var obj = resolveObject(node);
    for (var propKey in removedKeys) {
      if (!removedKeys[propKey]) {
        continue;
      }
      var nextProp = obj[propKey];
      if (nextProp === undefined) {
        continue;
      }

      var attributeConfig = validAttributes[propKey];
      if (!attributeConfig) {
        continue;
      }

      if (typeof nextProp === 'function') {
        nextProp = true;
      }
      if (typeof nextProp === 'undefined') {
        nextProp = null;
      }

      if (typeof attributeConfig !== 'object') {
        updatePayload[propKey] = nextProp;
      } else if (typeof attributeConfig.diff === 'function' || typeof attributeConfig.process === 'function') {
        var nextValue = typeof attributeConfig.process === 'function' ? attributeConfig.process(nextProp) : nextProp;
        updatePayload[propKey] = nextValue;
      }
      removedKeys[propKey] = false;
      removedKeyCount--;
    }
  }
}

function diffNestedArrayProperty(updatePayload, prevArray, nextArray, validAttributes) {
  var minLength = prevArray.length < nextArray.length ? prevArray.length : nextArray.length;
  var i;
  for (i = 0; i < minLength; i++) {
    updatePayload = diffNestedProperty(updatePayload, prevArray[i], nextArray[i], validAttributes);
  }
  for (; i < prevArray.length; i++) {
    updatePayload = clearNestedProperty(updatePayload, prevArray[i], validAttributes);
  }
  for (; i < nextArray.length; i++) {
    updatePayload = addNestedProperty(updatePayload, nextArray[i], validAttributes);
  }
  return updatePayload;
}

function diffNestedProperty(updatePayload, prevProp, nextProp, validAttributes) {

  if (!updatePayload && prevProp === nextProp) {
    return updatePayload;
  }

  if (!prevProp || !nextProp) {
    if (nextProp) {
      return addNestedProperty(updatePayload, nextProp, validAttributes);
    }
    if (prevProp) {
      return clearNestedProperty(updatePayload, prevProp, validAttributes);
    }
    return updatePayload;
  }

  if (!Array.isArray(prevProp) && !Array.isArray(nextProp)) {
    return diffProperties(updatePayload, resolveObject(prevProp), resolveObject(nextProp), validAttributes);
  }

  if (Array.isArray(prevProp) && Array.isArray(nextProp)) {
    return diffNestedArrayProperty(updatePayload, prevProp, nextProp, validAttributes);
  }

  if (Array.isArray(prevProp)) {
    return diffProperties(updatePayload, flattenStyle(prevProp), resolveObject(nextProp), validAttributes);
  }

  return diffProperties(updatePayload, resolveObject(prevProp), flattenStyle(nextProp), validAttributes);
}

function addNestedProperty(updatePayload, nextProp, validAttributes) {
  if (!nextProp) {
    return updatePayload;
  }

  if (!Array.isArray(nextProp)) {
    return addProperties(updatePayload, resolveObject(nextProp), validAttributes);
  }

  for (var i = 0; i < nextProp.length; i++) {
    updatePayload = addNestedProperty(updatePayload, nextProp[i], validAttributes);
  }

  return updatePayload;
}

function clearNestedProperty(updatePayload, prevProp, validAttributes) {
  if (!prevProp) {
    return updatePayload;
  }

  if (!Array.isArray(prevProp)) {
    return clearProperties(updatePayload, resolveObject(prevProp), validAttributes);
  }

  for (var i = 0; i < prevProp.length; i++) {
    updatePayload = clearNestedProperty(updatePayload, prevProp[i], validAttributes);
  }
  return updatePayload;
}

function diffProperties(updatePayload, prevProps, nextProps, validAttributes) {
  var attributeConfig;
  var nextProp;
  var prevProp;

  for (var propKey in nextProps) {
    attributeConfig = validAttributes[propKey];
    if (!attributeConfig) {
      continue;
    }

    prevProp = prevProps[propKey];
    nextProp = nextProps[propKey];

    if (typeof nextProp === 'function') {
      nextProp = true;

      if (typeof prevProp === 'function') {
        prevProp = true;
      }
    }

    if (typeof nextProp === 'undefined') {
      nextProp = null;
      if (typeof prevProp === 'undefined') {
        prevProp = null;
      }
    }

    if (removedKeys) {
      removedKeys[propKey] = false;
    }

    if (updatePayload && updatePayload[propKey] !== undefined) {
      if (typeof attributeConfig !== 'object') {
        updatePayload[propKey] = nextProp;
      } else if (typeof attributeConfig.diff === 'function' || typeof attributeConfig.process === 'function') {
        var nextValue = typeof attributeConfig.process === 'function' ? attributeConfig.process(nextProp) : nextProp;
        updatePayload[propKey] = nextValue;
      }
      continue;
    }

    if (prevProp === nextProp) {
      continue;
    }

    if (typeof attributeConfig !== 'object') {
      if (defaultDiffer(prevProp, nextProp)) {
        (updatePayload || (updatePayload = {}))[propKey] = nextProp;
      }
    } else if (typeof attributeConfig.diff === 'function' || typeof attributeConfig.process === 'function') {
      var shouldUpdate = prevProp === undefined || (typeof attributeConfig.diff === 'function' ? attributeConfig.diff(prevProp, nextProp) : defaultDiffer(prevProp, nextProp));
      if (shouldUpdate) {
        nextValue = typeof attributeConfig.process === 'function' ? attributeConfig.process(nextProp) : nextProp;
        (updatePayload || (updatePayload = {}))[propKey] = nextValue;
      }
    } else {
      removedKeys = null;
      removedKeyCount = 0;

      updatePayload = diffNestedProperty(updatePayload, prevProp, nextProp, attributeConfig);
      if (removedKeyCount > 0 && updatePayload) {
        restoreDeletedValuesInNestedArray(updatePayload, nextProp, attributeConfig);
        removedKeys = null;
      }
    }
  }

  for (propKey in prevProps) {
    if (nextProps[propKey] !== undefined) {
      continue;
    }
    attributeConfig = validAttributes[propKey];
    if (!attributeConfig) {
      continue;
    }

    if (updatePayload && updatePayload[propKey] !== undefined) {
      continue;
    }

    prevProp = prevProps[propKey];
    if (prevProp === undefined) {
      continue;
    }

    if (typeof attributeConfig !== 'object' || typeof attributeConfig.diff === 'function' || typeof attributeConfig.process === 'function') {
      (updatePayload || (updatePayload = {}))[propKey] = null;
      if (!removedKeys) {
        removedKeys = {};
      }
      if (!removedKeys[propKey]) {
        removedKeys[propKey] = true;
        removedKeyCount++;
      }
    } else {
      updatePayload = clearNestedProperty(updatePayload, prevProp, attributeConfig);
    }
  }
  return updatePayload;
}

function addProperties(updatePayload, props, validAttributes) {
  return diffProperties(updatePayload, emptyObject, props, validAttributes);
}

function clearProperties(updatePayload, prevProps, validAttributes) {
  return diffProperties(updatePayload, prevProps, emptyObject, validAttributes);
}

var ReactNativeAttributePayload = {

  create: function create(props, validAttributes) {
    return addProperties(null, props, validAttributes);
  },

  diff: function diff(prevProps, nextProps, validAttributes) {
    return diffProperties(null, prevProps, nextProps, validAttributes);
  }

};

module.exports = ReactNativeAttributePayload;
}, 342, null, "ReactNativeAttributePayload");
__d(/* ReactNativePropRegistry */function(global, require, module, exports) {
'use strict';

var objects = {};
var uniqueID = 1;
var emptyObject = {};

var ReactNativePropRegistry = function () {
  function ReactNativePropRegistry() {
    babelHelpers.classCallCheck(this, ReactNativePropRegistry);
  }

  babelHelpers.createClass(ReactNativePropRegistry, null, [{
    key: 'register',
    value: function register(object) {
      var id = ++uniqueID;
      if (__DEV__) {
        Object.freeze(object);
      }
      objects[id] = object;
      return id;
    }
  }, {
    key: 'getByID',
    value: function getByID(id) {
      if (!id) {
        return emptyObject;
      }

      var object = objects[id];
      if (!object) {
        console.warn('Invalid style with id `' + id + '`. Skipping ...');
        return emptyObject;
      }
      return object;
    }
  }]);
  return ReactNativePropRegistry;
}();

module.exports = ReactNativePropRegistry;
}, 343, null, "ReactNativePropRegistry");
__d(/* deepDiffer */function(global, require, module, exports) {
'use strict';

var deepDiffer = function deepDiffer(one, two) {
  if (one === two) {
    return false;
  }
  if (typeof one === 'function' && typeof two === 'function') {
    return false;
  }
  if (typeof one !== 'object' || one === null) {
    return one !== two;
  }
  if (typeof two !== 'object' || two === null) {
    return true;
  }
  if (one.constructor !== two.constructor) {
    return true;
  }
  if (Array.isArray(one)) {
    var len = one.length;
    if (two.length !== len) {
      return true;
    }
    for (var ii = 0; ii < len; ii++) {
      if (deepDiffer(one[ii], two[ii])) {
        return true;
      }
    }
  } else {
    for (var key in one) {
      if (deepDiffer(one[key], two[key])) {
        return true;
      }
    }
    for (var twoKey in two) {
      if (one[twoKey] === undefined && two[twoKey] !== undefined) {
        return true;
      }
    }
  }
  return false;
};

module.exports = deepDiffer;
}, 344, null, "deepDiffer");
__d(/* flattenStyle */function(global, require, module, exports) {
'use strict';

var ReactNativePropRegistry = require(343                      ); // 343 = ReactNativePropRegistry
var invariant = require(346                 ); // 346 = fbjs/lib/invariant

function getStyle(style) {
  if (typeof style === 'number') {
    return ReactNativePropRegistry.getByID(style);
  }
  return style;
}

function flattenStyle(style) {
  if (!style) {
    return undefined;
  }
  invariant(style !== true, 'style may be false but not true');

  if (!Array.isArray(style)) {
    return getStyle(style);
  }

  var result = {};
  for (var i = 0, styleLength = style.length; i < styleLength; ++i) {
    var computedStyle = flattenStyle(style[i]);
    if (computedStyle) {
      for (var key in computedStyle) {
        result[key] = computedStyle[key];
      }
    }
  }
  return result;
}

module.exports = flattenStyle;
}, 345, null, "flattenStyle");
__d(/* fbjs/lib/invariant.js */function(global, require, module, exports) {

'use strict';

var validateFormat = function validateFormat(format) {};

if (process.env.NODE_ENV !== 'production') {
  validateFormat = function validateFormat(format) {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  };
}

function invariant(condition, format, a, b, c, d, e, f) {
  validateFormat(format);

  if (!condition) {
    var error;
    if (format === undefined) {
      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(format.replace(/%s/g, function () {
        return args[argIndex++];
      }));
      error.name = 'Invariant Violation';
    }

    error.framesToPop = 1;
    throw error;
  }
}

module.exports = invariant;
}, 346, null, "fbjs/lib/invariant.js");
__d(/* TextInputState */function(global, require, module, exports) {
'use strict';

var Platform = require(348       ); // 348 = Platform
var UIManager = require(395        ); // 395 = UIManager

var TextInputState = {
  _currentlyFocusedID: null,

  currentlyFocusedField: function currentlyFocusedField() {
    return this._currentlyFocusedID;
  },

  focusTextInput: function focusTextInput(textFieldID) {
    if (this._currentlyFocusedID !== textFieldID && textFieldID !== null) {
      this._currentlyFocusedID = textFieldID;
      if (Platform.OS === 'ios') {
        UIManager.focus(textFieldID);
      } else if (Platform.OS === 'android') {
        UIManager.dispatchViewManagerCommand(textFieldID, UIManager.AndroidTextInput.Commands.focusTextInput, null);
      }
    }
  },

  blurTextInput: function blurTextInput(textFieldID) {
    if (this._currentlyFocusedID === textFieldID && textFieldID !== null) {
      this._currentlyFocusedID = null;
      if (Platform.OS === 'ios') {
        UIManager.blur(textFieldID);
      } else if (Platform.OS === 'android') {
        UIManager.dispatchViewManagerCommand(textFieldID, UIManager.AndroidTextInput.Commands.blurTextInput, null);
      }
    }
  }
};

module.exports = TextInputState;
}, 347, null, "TextInputState");
__d(/* Platform */function(global, require, module, exports) {

'use strict';

var Platform = {
  OS: 'android',
  get Version() {
    var AndroidConstants = require(349            ).AndroidConstants; // 349 = NativeModules
    return AndroidConstants && AndroidConstants.Version;
  },
  get isTesting() {
    var constants = require(349            ).AndroidConstants; // 349 = NativeModules
    return constants && constants.isTesting;
  },
  select: function select(obj) {
    return obj.android;
  }
};

module.exports = Platform;
}, 348, null, "Platform");
__d(/* NativeModules */function(global, require, module, exports) {
'use strict';

var BatchedBridge = require(350            ); // 350 = BatchedBridge

var defineLazyObjectProperty = require(394                       ); // 394 = defineLazyObjectProperty
var invariant = require(346                 ); // 346 = fbjs/lib/invariant

function genModule(config, moduleID) {
  if (!config) {
    return null;
  }

  var _config = babelHelpers.slicedToArray(config, 5),
      moduleName = _config[0],
      constants = _config[1],
      methods = _config[2],
      promiseMethods = _config[3],
      syncMethods = _config[4];

  invariant(!moduleName.startsWith('RCT') && !moduleName.startsWith('RK'), 'Module name prefixes should\'ve been stripped by the native side ' + 'but wasn\'t for ' + moduleName);

  if (!constants && !methods) {
    return { name: moduleName };
  }

  var module = {};
  methods && methods.forEach(function (methodName, methodID) {
    var isPromise = promiseMethods && arrayContains(promiseMethods, methodID);
    var isSync = syncMethods && arrayContains(syncMethods, methodID);
    invariant(!isPromise || !isSync, 'Cannot have a method that is both async and a sync hook');
    var methodType = isPromise ? 'promise' : isSync ? 'sync' : 'async';
    module[methodName] = genMethod(moduleID, methodID, methodType);
  });
  babelHelpers.extends(module, constants);

  if (__DEV__) {
    BatchedBridge.createDebugLookup(moduleID, moduleName, methods);
  }

  return { name: moduleName, module: module };
}

global.__fbGenNativeModule = genModule;

function loadModule(name, moduleID) {
  invariant(global.nativeRequireModuleConfig, 'Can\'t lazily create module without nativeRequireModuleConfig');
  var config = global.nativeRequireModuleConfig(name);
  var info = genModule(config, moduleID);
  return info && info.module;
}

function genMethod(moduleID, methodID, type) {
  var fn = null;
  if (type === 'promise') {
    fn = function fn() {
      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return new Promise(function (resolve, reject) {
        BatchedBridge.enqueueNativeCall(moduleID, methodID, args, function (data) {
          return resolve(data);
        }, function (errorData) {
          return reject(createErrorFromErrorData(errorData));
        });
      });
    };
  } else if (type === 'sync') {
    fn = function fn() {
      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      return global.nativeCallSyncHook(moduleID, methodID, args);
    };
  } else {
    fn = function fn() {
      for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        args[_key3] = arguments[_key3];
      }

      var lastArg = args.length > 0 ? args[args.length - 1] : null;
      var secondLastArg = args.length > 1 ? args[args.length - 2] : null;
      var hasSuccessCallback = typeof lastArg === 'function';
      var hasErrorCallback = typeof secondLastArg === 'function';
      hasErrorCallback && invariant(hasSuccessCallback, 'Cannot have a non-function arg after a function arg.');
      var onSuccess = hasSuccessCallback ? lastArg : null;
      var onFail = hasErrorCallback ? secondLastArg : null;
      var callbackCount = hasSuccessCallback + hasErrorCallback;
      args = args.slice(0, args.length - callbackCount);
      BatchedBridge.enqueueNativeCall(moduleID, methodID, args, onFail, onSuccess);
    };
  }
  fn.type = type;
  return fn;
}

function arrayContains(array, value) {
  return array.indexOf(value) !== -1;
}

function createErrorFromErrorData(errorData) {
  var message = errorData.message,
      extraErrorInfo = babelHelpers.objectWithoutProperties(errorData, ['message']);

  var error = new Error(message);
  error.framesToPop = 1;
  return babelHelpers.extends(error, extraErrorInfo);
}

var NativeModules = {};
if (global.nativeModuleProxy) {
  NativeModules = global.nativeModuleProxy;
} else {
  var bridgeConfig = global.__fbBatchedBridgeConfig;
  invariant(bridgeConfig, '__fbBatchedBridgeConfig is not set, cannot invoke native modules');

  (bridgeConfig.remoteModuleConfig || []).forEach(function (config, moduleID) {
    var info = genModule(config, moduleID);
    if (!info) {
      return;
    }

    if (info.module) {
      NativeModules[info.name] = info.module;
    } else {
        defineLazyObjectProperty(NativeModules, info.name, {
          get: function get() {
            return loadModule(info.name, moduleID);
          }
        });
      }
  });
}

module.exports = NativeModules;
}, 349, null, "NativeModules");
__d(/* BatchedBridge */function(global, require, module, exports) {
'use strict';

var MessageQueue = require(351           ); // 351 = MessageQueue
var BatchedBridge = new MessageQueue();

BatchedBridge.registerCallableModule('Systrace', require(354       )); // 354 = Systrace
BatchedBridge.registerCallableModule('JSTimersExecution', require(353                )); // 353 = JSTimersExecution
BatchedBridge.registerCallableModule('HeapCapture', require(370          )); // 370 = HeapCapture
BatchedBridge.registerCallableModule('SamplingProfiler', require(371               )); // 371 = SamplingProfiler

if (__DEV__) {
  BatchedBridge.registerCallableModule('HMRClient', require(372        )); // 372 = HMRClient
}

Object.defineProperty(global, '__fbBatchedBridge', {
  configurable: true,
  value: BatchedBridge
});

module.exports = BatchedBridge;
}, 350, null, "BatchedBridge");
__d(/* MessageQueue */function(global, require, module, exports) {

'use strict';

var ErrorUtils = require(352         ); // 352 = ErrorUtils
var JSTimersExecution = require(353                ); // 353 = JSTimersExecution
var Systrace = require(354       ); // 354 = Systrace

var deepFreezeAndThrowOnMutationInDev = require(368                                ); // 368 = deepFreezeAndThrowOnMutationInDev
var invariant = require(346                 ); // 346 = fbjs/lib/invariant
var stringifySafe = require(369            ); // 369 = stringifySafe

var TO_JS = 0;
var TO_NATIVE = 1;

var MODULE_IDS = 0;
var METHOD_IDS = 1;
var PARAMS = 2;
var MIN_TIME_BETWEEN_FLUSHES_MS = 5;

var TRACE_TAG_REACT_APPS = 1 << 17;

var DEBUG_INFO_LIMIT = 32;

var guard = function guard(fn) {
  try {
    fn();
  } catch (error) {
    ErrorUtils.reportFatalError(error);
  }
};

var MessageQueue = function () {
  function MessageQueue() {
    babelHelpers.classCallCheck(this, MessageQueue);

    this._callableModules = {};
    this._queue = [[], [], [], 0];
    this._callbacks = [];
    this._callbackID = 0;
    this._callID = 0;
    this._lastFlush = 0;
    this._eventLoopStartTime = new Date().getTime();

    if (__DEV__) {
      this._debugInfo = {};
      this._remoteModuleTable = {};
      this._remoteMethodTable = {};
    }

    this.callFunctionReturnFlushedQueue = this.callFunctionReturnFlushedQueue.bind(this);
    this.callFunctionReturnResultAndFlushedQueue = this.callFunctionReturnResultAndFlushedQueue.bind(this);
    this.flushedQueue = this.flushedQueue.bind(this);
    this.invokeCallbackAndReturnFlushedQueue = this.invokeCallbackAndReturnFlushedQueue.bind(this);
  }

  babelHelpers.createClass(MessageQueue, [{
    key: 'callFunctionReturnFlushedQueue',
    value: function callFunctionReturnFlushedQueue(module, method, args) {
      var _this = this;

      guard(function () {
        _this.__callFunction(module, method, args);
        _this.__callImmediates();
      });

      return this.flushedQueue();
    }
  }, {
    key: 'callFunctionReturnResultAndFlushedQueue',
    value: function callFunctionReturnResultAndFlushedQueue(module, method, args) {
      var _this2 = this;

      var result = void 0;
      guard(function () {
        result = _this2.__callFunction(module, method, args);
        _this2.__callImmediates();
      });

      return [result, this.flushedQueue()];
    }
  }, {
    key: 'invokeCallbackAndReturnFlushedQueue',
    value: function invokeCallbackAndReturnFlushedQueue(cbID, args) {
      var _this3 = this;

      guard(function () {
        _this3.__invokeCallback(cbID, args);
        _this3.__callImmediates();
      });

      return this.flushedQueue();
    }
  }, {
    key: 'flushedQueue',
    value: function flushedQueue() {
      this.__callImmediates();

      var queue = this._queue;
      this._queue = [[], [], [], this._callID];
      return queue[0].length ? queue : null;
    }
  }, {
    key: 'getEventLoopRunningTime',
    value: function getEventLoopRunningTime() {
      return new Date().getTime() - this._eventLoopStartTime;
    }
  }, {
    key: 'registerCallableModule',
    value: function registerCallableModule(name, module) {
      this._callableModules[name] = module;
    }
  }, {
    key: 'enqueueNativeCall',
    value: function enqueueNativeCall(moduleID, methodID, params, onFail, onSucc) {
      if (onFail || onSucc) {
        if (__DEV__) {
          var callId = this._callbackID >> 1;
          this._debugInfo[callId] = [moduleID, methodID];
          if (callId > DEBUG_INFO_LIMIT) {
            delete this._debugInfo[callId - DEBUG_INFO_LIMIT];
          }
        }
        onFail && params.push(this._callbackID);

        this._callbacks[this._callbackID++] = onFail;
        onSucc && params.push(this._callbackID);

        this._callbacks[this._callbackID++] = onSucc;
      }

      if (__DEV__) {
        global.nativeTraceBeginAsyncFlow && global.nativeTraceBeginAsyncFlow(TRACE_TAG_REACT_APPS, 'native', this._callID);
      }
      this._callID++;

      this._queue[MODULE_IDS].push(moduleID);
      this._queue[METHOD_IDS].push(methodID);

      if (__DEV__) {
        JSON.stringify(params);

        deepFreezeAndThrowOnMutationInDev(params);
      }
      this._queue[PARAMS].push(params);

      var now = new Date().getTime();
      if (global.nativeFlushQueueImmediate && now - this._lastFlush >= MIN_TIME_BETWEEN_FLUSHES_MS) {
        global.nativeFlushQueueImmediate(this._queue);
        this._queue = [[], [], [], this._callID];
        this._lastFlush = now;
      }
      Systrace.counterEvent('pending_js_to_native_queue', this._queue[0].length);
      if (__DEV__ && this.__spy && isFinite(moduleID)) {
        this.__spy({ type: TO_NATIVE,
          module: this._remoteModuleTable[moduleID],
          method: this._remoteMethodTable[moduleID][methodID],
          args: params });
      }
    }
  }, {
    key: 'createDebugLookup',
    value: function createDebugLookup(moduleID, name, methods) {
      if (__DEV__) {
        this._remoteModuleTable[moduleID] = name;
        this._remoteMethodTable[moduleID] = methods;
      }
    }
  }, {
    key: '__callImmediates',
    value: function __callImmediates() {
      Systrace.beginEvent('JSTimersExecution.callImmediates()');
      guard(function () {
        return JSTimersExecution.callImmediates();
      });
      Systrace.endEvent();
    }
  }, {
    key: '__callFunction',
    value: function __callFunction(module, method, args) {
      this._lastFlush = new Date().getTime();
      this._eventLoopStartTime = this._lastFlush;
      Systrace.beginEvent(module + '.' + method + '()');
      if (__DEV__ && this.__spy) {
        this.__spy({ type: TO_JS, module: module, method: method, args: args });
      }
      var moduleMethods = this._callableModules[module];
      invariant(!!moduleMethods, 'Module %s is not a registered callable module (calling %s)', module, method);
      invariant(!!moduleMethods[method], 'Method %s does not exist on module %s', method, module);
      var result = moduleMethods[method].apply(moduleMethods, args);
      Systrace.endEvent();
      return result;
    }
  }, {
    key: '__invokeCallback',
    value: function __invokeCallback(cbID, args) {
      this._lastFlush = new Date().getTime();
      this._eventLoopStartTime = this._lastFlush;
      var callback = this._callbacks[cbID];

      if (__DEV__) {
        var debug = this._debugInfo[cbID >> 1];
        var _module = debug && this._remoteModuleTable[debug[0]];
        var _method = debug && this._remoteMethodTable[debug[0]][debug[1]];
        if (callback == null) {
          var errorMessage = 'Callback with id ' + cbID + ': ' + _module + '.' + _method + '() not found';
          if (_method) {
            errorMessage = 'The callback ' + _method + '() exists in module ' + _module + ', ' + 'but only one callback may be registered to a function in a native module.';
          }
          invariant(callback, errorMessage);
        }
        var profileName = debug ? '<callback for ' + _module + '.' + _method + '>' : cbID;
        if (callback && this.__spy && __DEV__) {
          this.__spy({ type: TO_JS, module: null, method: profileName, args: args });
        }
        Systrace.beginEvent('MessageQueue.invokeCallback(' + profileName + ', ' + stringifySafe(args) + ')');
      } else {
        if (!callback) {
          return;
        }
      }

      this._callbacks[cbID & ~1] = null;

      this._callbacks[cbID | 1] = null;

      callback.apply(null, args);

      if (__DEV__) {
        Systrace.endEvent();
      }
    }
  }], [{
    key: 'spy',
    value: function spy(spyOrToggle) {
      if (spyOrToggle === true) {
        MessageQueue.prototype.__spy = function (info) {
          console.log((info.type === TO_JS ? 'N->JS' : 'JS->N') + ' : ' + ('' + (info.module ? info.module + '.' : '') + info.method) + ('(' + JSON.stringify(info.args) + ')'));
        };
      } else if (spyOrToggle === false) {
        MessageQueue.prototype.__spy = null;
      } else {
        MessageQueue.prototype.__spy = spyOrToggle;
      }
    }
  }]);
  return MessageQueue;
}();

module.exports = MessageQueue;
}, 351, null, "MessageQueue");
__d(/* ErrorUtils */function(global, require, module, exports) {
module.exports = global.ErrorUtils;
}, 352, null, "ErrorUtils");
__d(/* JSTimersExecution */function(global, require, module, exports) {
'use strict';

var Systrace = require(354       ); // 354 = Systrace

var invariant = require(346                 ); // 346 = fbjs/lib/invariant
var performanceNow = require(362                      ); // 362 = fbjs/lib/performanceNow
var warning = require(335               ); // 335 = fbjs/lib/warning

var FRAME_DURATION = 1000 / 60;
var IDLE_CALLBACK_FRAME_DEADLINE = 1;

var hasEmittedTimeDriftWarning = false;

var JSTimersExecution = {
  GUID: 1,

  callbacks: [],
  types: [],
  timerIDs: [],
  immediates: [],
  requestIdleCallbacks: [],
  identifiers: [],

  errors: null,

  callTimer: function callTimer(timerID, frameTime) {
    warning(timerID <= JSTimersExecution.GUID, 'Tried to call timer with ID %s but no such timer exists.', timerID);

    var timerIndex = JSTimersExecution.timerIDs.indexOf(timerID);
    if (timerIndex === -1) {
      return;
    }

    var type = JSTimersExecution.types[timerIndex];
    var callback = JSTimersExecution.callbacks[timerIndex];
    if (!callback || !type) {
      console.error('No callback found for timerID ' + timerID);
      return;
    }

    if (__DEV__) {
      var identifier = JSTimersExecution.identifiers[timerIndex] || {};
      Systrace.beginEvent('Systrace.callTimer: ' + identifier.methodName);
    }

    if (type === 'setTimeout' || type === 'setImmediate' || type === 'requestAnimationFrame' || type === 'requestIdleCallback') {
      JSTimersExecution._clearIndex(timerIndex);
    }

    try {
      if (type === 'setTimeout' || type === 'setInterval' || type === 'setImmediate') {
        callback();
      } else if (type === 'requestAnimationFrame') {
        callback(performanceNow());
      } else if (type === 'requestIdleCallback') {
        callback({
          timeRemaining: function timeRemaining() {
            return Math.max(0, FRAME_DURATION - (performanceNow() - frameTime));
          }
        });
      } else {
        console.error('Tried to call a callback with invalid type: ' + type);
      }
    } catch (e) {
      if (!JSTimersExecution.errors) {
        JSTimersExecution.errors = [e];
      } else {
        JSTimersExecution.errors.push(e);
      }
    }

    if (__DEV__) {
      Systrace.endEvent();
    }
  },
  callTimers: function callTimers(timerIDs) {
    invariant(timerIDs.length !== 0, 'Cannot call `callTimers` with an empty list of IDs.');

    JSTimersExecution.errors = null;
    for (var i = 0; i < timerIDs.length; i++) {
      JSTimersExecution.callTimer(timerIDs[i], 0);
    }

    var errors = JSTimersExecution.errors;
    if (errors) {
      var errorCount = errors.length;
      if (errorCount > 1) {
        for (var ii = 1; ii < errorCount; ii++) {
          require(364       ).setTimeout(function (error) { // 364 = JSTimers
            throw error;
          }.bind(null, errors[ii]), 0);
        }
      }
      throw errors[0];
    }
  },


  callIdleCallbacks: function callIdleCallbacks(frameTime) {
    if (FRAME_DURATION - (performanceNow() - frameTime) < IDLE_CALLBACK_FRAME_DEADLINE) {
      return;
    }

    JSTimersExecution.errors = null;
    if (JSTimersExecution.requestIdleCallbacks.length > 0) {
      var passIdleCallbacks = JSTimersExecution.requestIdleCallbacks.slice();
      JSTimersExecution.requestIdleCallbacks = [];

      for (var i = 0; i < passIdleCallbacks.length; ++i) {
        JSTimersExecution.callTimer(passIdleCallbacks[i], frameTime);
      }
    }

    if (JSTimersExecution.requestIdleCallbacks.length === 0) {
      var _require = require(349            ), // 349 = NativeModules
          Timing = _require.Timing;

      Timing.setSendIdleEvents(false);
    }

    if (JSTimersExecution.errors) {
      JSTimersExecution.errors.forEach(function (error) {
        return require(364       ).setTimeout(function () { // 364 = JSTimers
          throw error;
        }, 0);
      });
    }
  },

  callImmediatesPass: function callImmediatesPass() {
    Systrace.beginEvent('JSTimersExecution.callImmediatesPass()');

    if (JSTimersExecution.immediates.length > 0) {
      var passImmediates = JSTimersExecution.immediates.slice();
      JSTimersExecution.immediates = [];

      for (var i = 0; i < passImmediates.length; ++i) {
        JSTimersExecution.callTimer(passImmediates[i], 0);
      }
    }

    Systrace.endEvent();

    return JSTimersExecution.immediates.length > 0;
  },
  callImmediates: function callImmediates() {
    JSTimersExecution.errors = null;
    while (JSTimersExecution.callImmediatesPass()) {}
    if (JSTimersExecution.errors) {
      JSTimersExecution.errors.forEach(function (error) {
        return require(364       ).setTimeout(function () { // 364 = JSTimers
          throw error;
        }, 0);
      });
    }
  },
  emitTimeDriftWarning: function emitTimeDriftWarning(warningMessage) {
    if (hasEmittedTimeDriftWarning) {
      return;
    }
    hasEmittedTimeDriftWarning = true;
    console.warn(warningMessage);
  },
  _clearIndex: function _clearIndex(i) {
    JSTimersExecution.timerIDs[i] = null;
    JSTimersExecution.callbacks[i] = null;
    JSTimersExecution.types[i] = null;
    JSTimersExecution.identifiers[i] = null;
  }
};

module.exports = JSTimersExecution;
}, 353, null, "JSTimersExecution");
__d(/* Systrace */function(global, require, module, exports) {
'use strict';

var TRACE_TAG_REACT_APPS = 1 << 17;
var TRACE_TAG_JSC_CALLS = 1 << 27;

var _enabled = false;
var _asyncCookie = 0;

var ReactSystraceDevtool = __DEV__ ? {
  onBeforeMountComponent: function onBeforeMountComponent(debugID) {
    var displayName = require(355                               ).getDisplayName(debugID); // 355 = react/lib/ReactComponentTreeHook
    Systrace.beginEvent('ReactReconciler.mountComponent(' + displayName + ')');
  },
  onMountComponent: function onMountComponent(debugID) {
    Systrace.endEvent();
  },
  onBeforeUpdateComponent: function onBeforeUpdateComponent(debugID) {
    var displayName = require(355                               ).getDisplayName(debugID); // 355 = react/lib/ReactComponentTreeHook
    Systrace.beginEvent('ReactReconciler.updateComponent(' + displayName + ')');
  },
  onUpdateComponent: function onUpdateComponent(debugID) {
    Systrace.endEvent();
  },
  onBeforeUnmountComponent: function onBeforeUnmountComponent(debugID) {
    var displayName = require(355                               ).getDisplayName(debugID); // 355 = react/lib/ReactComponentTreeHook
    Systrace.beginEvent('ReactReconciler.unmountComponent(' + displayName + ')');
  },
  onUnmountComponent: function onUnmountComponent(debugID) {
    Systrace.endEvent();
  },
  onBeginLifeCycleTimer: function onBeginLifeCycleTimer(debugID, timerType) {
    var displayName = require(355                               ).getDisplayName(debugID); // 355 = react/lib/ReactComponentTreeHook
    Systrace.beginEvent(displayName + '.' + timerType + '()');
  },
  onEndLifeCycleTimer: function onEndLifeCycleTimer(debugID, timerType) {
    Systrace.endEvent();
  }
} : null;

var Systrace = {
  setEnabled: function setEnabled(enabled) {
    if (_enabled !== enabled) {
      if (__DEV__) {
        if (enabled) {
          global.nativeTraceBeginLegacy && global.nativeTraceBeginLegacy(TRACE_TAG_JSC_CALLS);
          require(358             ).addHook(ReactSystraceDevtool); // 358 = ReactDebugTool
        } else {
          global.nativeTraceEndLegacy && global.nativeTraceEndLegacy(TRACE_TAG_JSC_CALLS);
          require(358             ).removeHook(ReactSystraceDevtool); // 358 = ReactDebugTool
        }
      }
      _enabled = enabled;
    }
  },
  beginEvent: function beginEvent(profileName, args) {
    if (_enabled) {
      profileName = typeof profileName === 'function' ? profileName() : profileName;
      global.nativeTraceBeginSection(TRACE_TAG_REACT_APPS, profileName, args);
    }
  },
  endEvent: function endEvent() {
    if (_enabled) {
      global.nativeTraceEndSection(TRACE_TAG_REACT_APPS);
    }
  },
  beginAsyncEvent: function beginAsyncEvent(profileName) {
    var cookie = _asyncCookie;
    if (_enabled) {
      _asyncCookie++;
      profileName = typeof profileName === 'function' ? profileName() : profileName;
      global.nativeTraceBeginAsyncSection(TRACE_TAG_REACT_APPS, profileName, cookie, 0);
    }
    return cookie;
  },
  endAsyncEvent: function endAsyncEvent(profileName, cookie) {
    if (_enabled) {
      profileName = typeof profileName === 'function' ? profileName() : profileName;
      global.nativeTraceEndAsyncSection(TRACE_TAG_REACT_APPS, profileName, cookie, 0);
    }
  },
  counterEvent: function counterEvent(profileName, value) {
    if (_enabled) {
      profileName = typeof profileName === 'function' ? profileName() : profileName;
      global.nativeTraceCounter && global.nativeTraceCounter(TRACE_TAG_REACT_APPS, profileName, value);
    }
  },
  attachToRelayProfiler: function attachToRelayProfiler(relayProfiler) {
    relayProfiler.attachProfileHandler('*', function (name) {
      var cookie = Systrace.beginAsyncEvent(name);
      return function () {
        Systrace.endAsyncEvent(name, cookie);
      };
    });

    relayProfiler.attachAggregateHandler('*', function (name, callback) {
      Systrace.beginEvent(name);
      callback();
      Systrace.endEvent();
    });
  },
  swizzleJSON: function swizzleJSON() {
    Systrace.measureMethods(JSON, 'JSON', ['parse', 'stringify']);
  },
  measureMethods: function measureMethods(object, objectName, methodNames) {
    if (!__DEV__) {
      return;
    }

    methodNames.forEach(function (methodName) {
      object[methodName] = Systrace.measure(objectName, methodName, object[methodName]);
    });
  },
  measure: function measure(objName, fnName, func) {
    if (!__DEV__) {
      return func;
    }

    var profileName = objName + '.' + fnName;
    return function () {
      if (!_enabled) {
        return func.apply(this, arguments);
      }

      Systrace.beginEvent(profileName);
      var ret = func.apply(this, arguments);
      Systrace.endEvent();
      return ret;
    };
  }
};

if (__DEV__) {
  require.Systrace = Systrace;
}

module.exports = Systrace;
}, 354, null, "Systrace");
__d(/* react/lib/ReactComponentTreeHook.js */function(global, require, module, exports) {

'use strict';

var _prodInvariant = require(356                   ); // 356 = ./reactProdInvariant

var ReactCurrentOwner = require(357                  ); // 357 = ./ReactCurrentOwner

var invariant = require(346                 ); // 346 = fbjs/lib/invariant
var warning = require(335               ); // 335 = fbjs/lib/warning

function isNative(fn) {
  var funcToString = Function.prototype.toString;
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  var reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(/[\\^$.*+?()[\]{}|]/g, '\\$&').replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');
  try {
    var source = funcToString.call(fn);
    return reIsNative.test(source);
  } catch (err) {
    return false;
  }
}

var canUseCollections = typeof Array.from === 'function' && typeof Map === 'function' && isNative(Map) && Map.prototype != null && typeof Map.prototype.keys === 'function' && isNative(Map.prototype.keys) && typeof Set === 'function' && isNative(Set) && Set.prototype != null && typeof Set.prototype.keys === 'function' && isNative(Set.prototype.keys);

var setItem;
var getItem;
var removeItem;
var getItemIDs;
var addRoot;
var removeRoot;
var getRootIDs;

if (canUseCollections) {
  var itemMap = new Map();
  var rootIDSet = new Set();

  setItem = function setItem(id, item) {
    itemMap.set(id, item);
  };
  getItem = function getItem(id) {
    return itemMap.get(id);
  };
  removeItem = function removeItem(id) {
    itemMap['delete'](id);
  };
  getItemIDs = function getItemIDs() {
    return Array.from(itemMap.keys());
  };

  addRoot = function addRoot(id) {
    rootIDSet.add(id);
  };
  removeRoot = function removeRoot(id) {
    rootIDSet['delete'](id);
  };
  getRootIDs = function getRootIDs() {
    return Array.from(rootIDSet.keys());
  };
} else {
  var itemByKey = {};
  var rootByKey = {};

  var getKeyFromID = function getKeyFromID(id) {
    return '.' + id;
  };
  var getIDFromKey = function getIDFromKey(key) {
    return parseInt(key.substr(1), 10);
  };

  setItem = function setItem(id, item) {
    var key = getKeyFromID(id);
    itemByKey[key] = item;
  };
  getItem = function getItem(id) {
    var key = getKeyFromID(id);
    return itemByKey[key];
  };
  removeItem = function removeItem(id) {
    var key = getKeyFromID(id);
    delete itemByKey[key];
  };
  getItemIDs = function getItemIDs() {
    return Object.keys(itemByKey).map(getIDFromKey);
  };

  addRoot = function addRoot(id) {
    var key = getKeyFromID(id);
    rootByKey[key] = true;
  };
  removeRoot = function removeRoot(id) {
    var key = getKeyFromID(id);
    delete rootByKey[key];
  };
  getRootIDs = function getRootIDs() {
    return Object.keys(rootByKey).map(getIDFromKey);
  };
}

var unmountedIDs = [];

function purgeDeep(id) {
  var item = getItem(id);
  if (item) {
    var childIDs = item.childIDs;

    removeItem(id);
    childIDs.forEach(purgeDeep);
  }
}

function describeComponentFrame(name, source, ownerName) {
  return '\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
}

function _getDisplayName(element) {
  if (element == null) {
    return '#empty';
  } else if (typeof element === 'string' || typeof element === 'number') {
    return '#text';
  } else if (typeof element.type === 'string') {
    return element.type;
  } else {
    return element.type.displayName || element.type.name || 'Unknown';
  }
}

function describeID(id) {
  var name = ReactComponentTreeHook.getDisplayName(id);
  var element = ReactComponentTreeHook.getElement(id);
  var ownerID = ReactComponentTreeHook.getOwnerID(id);
  var ownerName;
  if (ownerID) {
    ownerName = ReactComponentTreeHook.getDisplayName(ownerID);
  }
  process.env.NODE_ENV !== 'production' ? warning(element, 'ReactComponentTreeHook: Missing React element for debugID %s when ' + 'building stack', id) : void 0;
  return describeComponentFrame(name, element && element._source, ownerName);
}

var ReactComponentTreeHook = {
  onSetChildren: function onSetChildren(id, nextChildIDs) {
    var item = getItem(id);
    !item ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;
    item.childIDs = nextChildIDs;

    for (var i = 0; i < nextChildIDs.length; i++) {
      var nextChildID = nextChildIDs[i];
      var nextChild = getItem(nextChildID);
      !nextChild ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected hook events to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('140') : void 0;
      !(nextChild.childIDs != null || typeof nextChild.element !== 'object' || nextChild.element == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onSetChildren() to fire for a container child before its parent includes it in onSetChildren().') : _prodInvariant('141') : void 0;
      !nextChild.isMounted ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('71') : void 0;
      if (nextChild.parentID == null) {
        nextChild.parentID = id;
      }
      !(nextChild.parentID === id) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onBeforeMountComponent() parent and onSetChildren() to be consistent (%s has parents %s and %s).', nextChildID, nextChild.parentID, id) : _prodInvariant('142', nextChildID, nextChild.parentID, id) : void 0;
    }
  },
  onBeforeMountComponent: function onBeforeMountComponent(id, element, parentID) {
    var item = {
      element: element,
      parentID: parentID,
      text: null,
      childIDs: [],
      isMounted: false,
      updateCount: 0
    };
    setItem(id, item);
  },
  onBeforeUpdateComponent: function onBeforeUpdateComponent(id, element) {
    var item = getItem(id);
    if (!item || !item.isMounted) {
      return;
    }
    item.element = element;
  },
  onMountComponent: function onMountComponent(id) {
    var item = getItem(id);
    !item ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;
    item.isMounted = true;
    var isRoot = item.parentID === 0;
    if (isRoot) {
      addRoot(id);
    }
  },
  onUpdateComponent: function onUpdateComponent(id) {
    var item = getItem(id);
    if (!item || !item.isMounted) {
      return;
    }
    item.updateCount++;
  },
  onUnmountComponent: function onUnmountComponent(id) {
    var item = getItem(id);
    if (item) {
      item.isMounted = false;
      var isRoot = item.parentID === 0;
      if (isRoot) {
        removeRoot(id);
      }
    }
    unmountedIDs.push(id);
  },
  purgeUnmountedComponents: function purgeUnmountedComponents() {
    if (ReactComponentTreeHook._preventPurging) {
      return;
    }

    for (var i = 0; i < unmountedIDs.length; i++) {
      var id = unmountedIDs[i];
      purgeDeep(id);
    }
    unmountedIDs.length = 0;
  },
  isMounted: function isMounted(id) {
    var item = getItem(id);
    return item ? item.isMounted : false;
  },
  getCurrentStackAddendum: function getCurrentStackAddendum(topElement) {
    var info = '';
    if (topElement) {
      var name = _getDisplayName(topElement);
      var owner = topElement._owner;
      info += describeComponentFrame(name, topElement._source, owner && owner.getName());
    }

    var currentOwner = ReactCurrentOwner.current;
    var id = currentOwner && currentOwner._debugID;

    info += ReactComponentTreeHook.getStackAddendumByID(id);
    return info;
  },
  getStackAddendumByID: function getStackAddendumByID(id) {
    var info = '';
    while (id) {
      info += describeID(id);
      id = ReactComponentTreeHook.getParentID(id);
    }
    return info;
  },
  getChildIDs: function getChildIDs(id) {
    var item = getItem(id);
    return item ? item.childIDs : [];
  },
  getDisplayName: function getDisplayName(id) {
    var element = ReactComponentTreeHook.getElement(id);
    if (!element) {
      return null;
    }
    return _getDisplayName(element);
  },
  getElement: function getElement(id) {
    var item = getItem(id);
    return item ? item.element : null;
  },
  getOwnerID: function getOwnerID(id) {
    var element = ReactComponentTreeHook.getElement(id);
    if (!element || !element._owner) {
      return null;
    }
    return element._owner._debugID;
  },
  getParentID: function getParentID(id) {
    var item = getItem(id);
    return item ? item.parentID : null;
  },
  getSource: function getSource(id) {
    var item = getItem(id);
    var element = item ? item.element : null;
    var source = element != null ? element._source : null;
    return source;
  },
  getText: function getText(id) {
    var element = ReactComponentTreeHook.getElement(id);
    if (typeof element === 'string') {
      return element;
    } else if (typeof element === 'number') {
      return '' + element;
    } else {
      return null;
    }
  },
  getUpdateCount: function getUpdateCount(id) {
    var item = getItem(id);
    return item ? item.updateCount : 0;
  },

  getRootIDs: getRootIDs,
  getRegisteredIDs: getItemIDs
};

module.exports = ReactComponentTreeHook;
}, 355, null, "react/lib/ReactComponentTreeHook.js");
__d(/* react/lib/reactProdInvariant.js */function(global, require, module, exports) {
'use strict';

function reactProdInvariant(code) {
  var argCount = arguments.length - 1;

  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;

  for (var argIdx = 0; argIdx < argCount; argIdx++) {
    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
  }

  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';

  var error = new Error(message);
  error.name = 'Invariant Violation';
  error.framesToPop = 1;

  throw error;
}

module.exports = reactProdInvariant;
}, 356, null, "react/lib/reactProdInvariant.js");
__d(/* react/lib/ReactCurrentOwner.js */function(global, require, module, exports) {

'use strict';

var ReactCurrentOwner = {
  current: null

};

module.exports = ReactCurrentOwner;
}, 357, null, "react/lib/ReactCurrentOwner.js");
__d(/* ReactDebugTool */function(global, require, module, exports) {

'use strict';

var ReactInvalidSetStateWarningHook = require(359                              ); // 359 = ReactInvalidSetStateWarningHook
var ReactHostOperationHistoryHook = require(360                            ); // 360 = ReactHostOperationHistoryHook
var ReactComponentTreeHook = require(355                               ); // 355 = react/lib/ReactComponentTreeHook
var ExecutionEnvironment = require(361                            ); // 361 = fbjs/lib/ExecutionEnvironment

var performanceNow = require(362                      ); // 362 = fbjs/lib/performanceNow
var warning = require(335               ); // 335 = fbjs/lib/warning

var hooks = [];
var didHookThrowForEvent = {};

function callHook(event, fn, context, arg1, arg2, arg3, arg4, arg5) {
  try {
    fn.call(context, arg1, arg2, arg3, arg4, arg5);
  } catch (e) {
    warning(didHookThrowForEvent[event], 'Exception thrown by hook while handling %s: %s', event, e + '\n' + e.stack);
    didHookThrowForEvent[event] = true;
  }
}

function emitEvent(event, arg1, arg2, arg3, arg4, arg5) {
  for (var i = 0; i < hooks.length; i++) {
    var hook = hooks[i];
    var fn = hook[event];
    if (fn) {
      callHook(event, fn, hook, arg1, arg2, arg3, arg4, arg5);
    }
  }
}

var _isProfiling = false;
var flushHistory = [];
var lifeCycleTimerStack = [];
var currentFlushNesting = 0;
var currentFlushMeasurements = [];
var currentFlushStartTime = 0;
var currentTimerDebugID = null;
var currentTimerStartTime = 0;
var currentTimerNestedFlushDuration = 0;
var currentTimerType = null;

var lifeCycleTimerHasWarned = false;

function clearHistory() {
  ReactComponentTreeHook.purgeUnmountedComponents();
  ReactHostOperationHistoryHook.clearHistory();
}

function getTreeSnapshot(registeredIDs) {
  return registeredIDs.reduce(function (tree, id) {
    var ownerID = ReactComponentTreeHook.getOwnerID(id);
    var parentID = ReactComponentTreeHook.getParentID(id);
    tree[id] = {
      displayName: ReactComponentTreeHook.getDisplayName(id),
      text: ReactComponentTreeHook.getText(id),
      updateCount: ReactComponentTreeHook.getUpdateCount(id),
      childIDs: ReactComponentTreeHook.getChildIDs(id),

      ownerID: ownerID || parentID && ReactComponentTreeHook.getOwnerID(parentID) || 0,
      parentID: parentID
    };
    return tree;
  }, {});
}

function resetMeasurements() {
  var previousStartTime = currentFlushStartTime;
  var previousMeasurements = currentFlushMeasurements;
  var previousOperations = ReactHostOperationHistoryHook.getHistory();

  if (currentFlushNesting === 0) {
    currentFlushStartTime = 0;
    currentFlushMeasurements = [];
    clearHistory();
    return;
  }

  if (previousMeasurements.length || previousOperations.length) {
    var registeredIDs = ReactComponentTreeHook.getRegisteredIDs();
    flushHistory.push({
      duration: performanceNow() - previousStartTime,
      measurements: previousMeasurements || [],
      operations: previousOperations || [],
      treeSnapshot: getTreeSnapshot(registeredIDs)
    });
  }

  clearHistory();
  currentFlushStartTime = performanceNow();
  currentFlushMeasurements = [];
}

function checkDebugID(debugID) {
  var allowRoot = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  if (allowRoot && debugID === 0) {
    return;
  }
  if (!debugID) {
    warning(false, 'ReactDebugTool: debugID may not be empty.');
  }
}

function beginLifeCycleTimer(debugID, timerType) {
  if (currentFlushNesting === 0) {
    return;
  }
  if (currentTimerType && !lifeCycleTimerHasWarned) {
    warning(false, 'There is an internal error in the React performance measurement code. ' + 'Did not expect %s timer to start while %s timer is still in ' + 'progress for %s instance.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another');
    lifeCycleTimerHasWarned = true;
  }
  currentTimerStartTime = performanceNow();
  currentTimerNestedFlushDuration = 0;
  currentTimerDebugID = debugID;
  currentTimerType = timerType;
}

function endLifeCycleTimer(debugID, timerType) {
  if (currentFlushNesting === 0) {
    return;
  }
  if (currentTimerType !== timerType && !lifeCycleTimerHasWarned) {
    warning(false, 'There is an internal error in the React performance measurement code. ' + 'We did not expect %s timer to stop while %s timer is still in ' + 'progress for %s instance. Please report this as a bug in React.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another');
    lifeCycleTimerHasWarned = true;
  }
  if (_isProfiling) {
    currentFlushMeasurements.push({
      timerType: timerType,
      instanceID: debugID,
      duration: performanceNow() - currentTimerStartTime - currentTimerNestedFlushDuration
    });
  }
  currentTimerStartTime = 0;
  currentTimerNestedFlushDuration = 0;
  currentTimerDebugID = null;
  currentTimerType = null;
}

function pauseCurrentLifeCycleTimer() {
  var currentTimer = {
    startTime: currentTimerStartTime,
    nestedFlushStartTime: performanceNow(),
    debugID: currentTimerDebugID,
    timerType: currentTimerType
  };
  lifeCycleTimerStack.push(currentTimer);
  currentTimerStartTime = 0;
  currentTimerNestedFlushDuration = 0;
  currentTimerDebugID = null;
  currentTimerType = null;
}

function resumeCurrentLifeCycleTimer() {
  var _lifeCycleTimerStack$ = lifeCycleTimerStack.pop(),
      startTime = _lifeCycleTimerStack$.startTime,
      nestedFlushStartTime = _lifeCycleTimerStack$.nestedFlushStartTime,
      debugID = _lifeCycleTimerStack$.debugID,
      timerType = _lifeCycleTimerStack$.timerType;

  var nestedFlushDuration = performanceNow() - nestedFlushStartTime;
  currentTimerStartTime = startTime;
  currentTimerNestedFlushDuration += nestedFlushDuration;
  currentTimerDebugID = debugID;
  currentTimerType = timerType;
}

var lastMarkTimeStamp = 0;
var canUsePerformanceMeasure = typeof performance !== 'undefined' && typeof performance.mark === 'function' && typeof performance.clearMarks === 'function' && typeof performance.measure === 'function' && typeof performance.clearMeasures === 'function';

function shouldMark(debugID) {
  if (!_isProfiling || !canUsePerformanceMeasure) {
    return false;
  }
  var element = ReactComponentTreeHook.getElement(debugID);
  if (element == null || typeof element !== 'object') {
    return false;
  }
  var isHostElement = typeof element.type === 'string';
  if (isHostElement) {
    return false;
  }
  return true;
}

function markBegin(debugID, markType) {
  if (!shouldMark(debugID)) {
    return;
  }

  var markName = debugID + '::' + markType;
  lastMarkTimeStamp = performanceNow();
  performance.mark(markName);
}

function markEnd(debugID, markType) {
  if (!shouldMark(debugID)) {
    return;
  }

  var markName = debugID + '::' + markType;
  var displayName = ReactComponentTreeHook.getDisplayName(debugID) || 'Unknown';

  var timeStamp = performanceNow();
  if (timeStamp - lastMarkTimeStamp > 0.1) {
    var measurementName = displayName + ' [' + markType + ']';
    performance.measure(measurementName, markName);
  }

  performance.clearMarks(markName);
  performance.clearMeasures(measurementName);
}

var ReactDebugTool = {
  addHook: function addHook(hook) {
    hooks.push(hook);
  },
  removeHook: function removeHook(hook) {
    for (var i = 0; i < hooks.length; i++) {
      if (hooks[i] === hook) {
        hooks.splice(i, 1);
        i--;
      }
    }
  },
  isProfiling: function isProfiling() {
    return _isProfiling;
  },
  beginProfiling: function beginProfiling() {
    if (_isProfiling) {
      return;
    }

    _isProfiling = true;
    flushHistory.length = 0;
    resetMeasurements();
    ReactDebugTool.addHook(ReactHostOperationHistoryHook);
  },
  endProfiling: function endProfiling() {
    if (!_isProfiling) {
      return;
    }

    _isProfiling = false;
    resetMeasurements();
    ReactDebugTool.removeHook(ReactHostOperationHistoryHook);
  },
  getFlushHistory: function getFlushHistory() {
    return flushHistory;
  },
  onBeginFlush: function onBeginFlush() {
    currentFlushNesting++;
    resetMeasurements();
    pauseCurrentLifeCycleTimer();
    emitEvent('onBeginFlush');
  },
  onEndFlush: function onEndFlush() {
    resetMeasurements();
    currentFlushNesting--;
    resumeCurrentLifeCycleTimer();
    emitEvent('onEndFlush');
  },
  onBeginLifeCycleTimer: function onBeginLifeCycleTimer(debugID, timerType) {
    checkDebugID(debugID);
    emitEvent('onBeginLifeCycleTimer', debugID, timerType);
    markBegin(debugID, timerType);
    beginLifeCycleTimer(debugID, timerType);
  },
  onEndLifeCycleTimer: function onEndLifeCycleTimer(debugID, timerType) {
    checkDebugID(debugID);
    endLifeCycleTimer(debugID, timerType);
    markEnd(debugID, timerType);
    emitEvent('onEndLifeCycleTimer', debugID, timerType);
  },
  onBeginProcessingChildContext: function onBeginProcessingChildContext() {
    emitEvent('onBeginProcessingChildContext');
  },
  onEndProcessingChildContext: function onEndProcessingChildContext() {
    emitEvent('onEndProcessingChildContext');
  },
  onHostOperation: function onHostOperation(operation) {
    checkDebugID(operation.instanceID);
    emitEvent('onHostOperation', operation);
  },
  onSetState: function onSetState() {
    emitEvent('onSetState');
  },
  onSetChildren: function onSetChildren(debugID, childDebugIDs) {
    checkDebugID(debugID);
    childDebugIDs.forEach(checkDebugID);
    emitEvent('onSetChildren', debugID, childDebugIDs);
  },
  onBeforeMountComponent: function onBeforeMountComponent(debugID, element, parentDebugID) {
    checkDebugID(debugID);
    checkDebugID(parentDebugID, true);
    emitEvent('onBeforeMountComponent', debugID, element, parentDebugID);
    markBegin(debugID, 'mount');
  },
  onMountComponent: function onMountComponent(debugID) {
    checkDebugID(debugID);
    markEnd(debugID, 'mount');
    emitEvent('onMountComponent', debugID);
  },
  onBeforeUpdateComponent: function onBeforeUpdateComponent(debugID, element) {
    checkDebugID(debugID);
    emitEvent('onBeforeUpdateComponent', debugID, element);
    markBegin(debugID, 'update');
  },
  onUpdateComponent: function onUpdateComponent(debugID) {
    checkDebugID(debugID);
    markEnd(debugID, 'update');
    emitEvent('onUpdateComponent', debugID);
  },
  onBeforeUnmountComponent: function onBeforeUnmountComponent(debugID) {
    checkDebugID(debugID);
    emitEvent('onBeforeUnmountComponent', debugID);
    markBegin(debugID, 'unmount');
  },
  onUnmountComponent: function onUnmountComponent(debugID) {
    checkDebugID(debugID);
    markEnd(debugID, 'unmount');
    emitEvent('onUnmountComponent', debugID);
  },
  onTestEvent: function onTestEvent() {
    emitEvent('onTestEvent');
  }
};

ReactDebugTool.addHook(ReactInvalidSetStateWarningHook);
ReactDebugTool.addHook(ReactComponentTreeHook);
var url = ExecutionEnvironment.canUseDOM && window.location.href || '';
if (/[?&]react_perf\b/.test(url)) {
  ReactDebugTool.beginProfiling();
}

module.exports = ReactDebugTool;
}, 358, null, "ReactDebugTool");
__d(/* ReactInvalidSetStateWarningHook */function(global, require, module, exports) {

'use strict';

var warning = require(335               ); // 335 = fbjs/lib/warning

if (__DEV__) {
  var processingChildContext = false;

  var warnInvalidSetState = function warnInvalidSetState() {
    warning(!processingChildContext, 'setState(...): Cannot call setState() inside getChildContext()');
  };
}

var ReactInvalidSetStateWarningHook = {
  onBeginProcessingChildContext: function onBeginProcessingChildContext() {
    processingChildContext = true;
  },
  onEndProcessingChildContext: function onEndProcessingChildContext() {
    processingChildContext = false;
  },
  onSetState: function onSetState() {
    warnInvalidSetState();
  }
};

module.exports = ReactInvalidSetStateWarningHook;
}, 359, null, "ReactInvalidSetStateWarningHook");
__d(/* ReactHostOperationHistoryHook */function(global, require, module, exports) {

'use strict';

var history = [];

var ReactHostOperationHistoryHook = {
  onHostOperation: function onHostOperation(operation) {
    history.push(operation);
  },
  clearHistory: function clearHistory() {
    if (ReactHostOperationHistoryHook._preventClearing) {
      return;
    }

    history = [];
  },
  getHistory: function getHistory() {
    return history;
  }
};

module.exports = ReactHostOperationHistoryHook;
}, 360, null, "ReactHostOperationHistoryHook");
__d(/* fbjs/lib/ExecutionEnvironment.js */function(global, require, module, exports) {

'use strict';

var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

var ExecutionEnvironment = {

  canUseDOM: canUseDOM,

  canUseWorkers: typeof Worker !== 'undefined',

  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),

  canUseViewport: canUseDOM && !!window.screen,

  isInWorker: !canUseDOM };

module.exports = ExecutionEnvironment;
}, 361, null, "fbjs/lib/ExecutionEnvironment.js");
__d(/* fbjs/lib/performanceNow.js */function(global, require, module, exports) {'use strict';

var performance = require(363            ); // 363 = ./performance

var performanceNow;

if (performance.now) {
  performanceNow = function performanceNow() {
    return performance.now();
  };
} else {
  performanceNow = function performanceNow() {
    return Date.now();
  };
}

module.exports = performanceNow;
}, 362, null, "fbjs/lib/performanceNow.js");
__d(/* fbjs/lib/performance.js */function(global, require, module, exports) {

'use strict';

var ExecutionEnvironment = require(361                     ); // 361 = ./ExecutionEnvironment

var performance;

if (ExecutionEnvironment.canUseDOM) {
  performance = window.performance || window.msPerformance || window.webkitPerformance;
}

module.exports = performance || {};
}, 363, null, "fbjs/lib/performance.js");
__d(/* JSTimers */function(global, require, module, exports) {
'use strict';

var RCTTiming = require(349            ).Timing; // 349 = NativeModules
var JSTimersExecution = require(353                ); // 353 = JSTimersExecution

var parseErrorStack = require(365              ); // 365 = parseErrorStack

function _getFreeIndex() {
  var freeIndex = JSTimersExecution.timerIDs.indexOf(null);
  if (freeIndex === -1) {
    freeIndex = JSTimersExecution.timerIDs.length;
  }
  return freeIndex;
}

function _allocateCallback(func, type) {
  var id = JSTimersExecution.GUID++;
  var freeIndex = _getFreeIndex();
  JSTimersExecution.timerIDs[freeIndex] = id;
  JSTimersExecution.callbacks[freeIndex] = func;
  JSTimersExecution.types[freeIndex] = type;
  if (__DEV__) {
    var e = new Error();
    e.framesToPop = 1;
    var stack = parseErrorStack(e);
    if (stack) {
      JSTimersExecution.identifiers[freeIndex] = stack.shift();
    }
  }
  return id;
}

function _freeCallback(timerID) {
  if (timerID == null) {
    return;
  }

  var index = JSTimersExecution.timerIDs.indexOf(timerID);

  if (index !== -1) {
    JSTimersExecution._clearIndex(index);
    var type = JSTimersExecution.types[index];
    if (type !== 'setImmediate' && type !== 'requestIdleCallback') {
      RCTTiming.deleteTimer(timerID);
    }
  }
}

var JSTimers = {
  setTimeout: function setTimeout(func, duration) {
    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      args[_key - 2] = arguments[_key];
    }

    var id = _allocateCallback(function () {
      return func.apply(undefined, args);
    }, 'setTimeout');
    RCTTiming.createTimer(id, duration || 0, Date.now(), false);
    return id;
  },

  setInterval: function setInterval(func, duration) {
    for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
      args[_key2 - 2] = arguments[_key2];
    }

    var id = _allocateCallback(function () {
      return func.apply(undefined, args);
    }, 'setInterval');
    RCTTiming.createTimer(id, duration || 0, Date.now(), true);
    return id;
  },

  setImmediate: function setImmediate(func) {
    for (var _len3 = arguments.length, args = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
      args[_key3 - 1] = arguments[_key3];
    }

    var id = _allocateCallback(function () {
      return func.apply(undefined, args);
    }, 'setImmediate');
    JSTimersExecution.immediates.push(id);
    return id;
  },

  requestAnimationFrame: function requestAnimationFrame(func) {
    var id = _allocateCallback(func, 'requestAnimationFrame');
    RCTTiming.createTimer(id, 1, Date.now(), false);
    return id;
  },

  requestIdleCallback: function requestIdleCallback(func) {
    if (JSTimersExecution.requestIdleCallbacks.length === 0) {
      RCTTiming.setSendIdleEvents(true);
    }

    var id = _allocateCallback(func, 'requestIdleCallback');
    JSTimersExecution.requestIdleCallbacks.push(id);
    return id;
  },

  cancelIdleCallback: function cancelIdleCallback(timerID) {
    _freeCallback(timerID);
    var index = JSTimersExecution.requestIdleCallbacks.indexOf(timerID);
    if (index !== -1) {
      JSTimersExecution.requestIdleCallbacks.splice(index, 1);
    }

    if (JSTimersExecution.requestIdleCallbacks.length === 0) {
      RCTTiming.setSendIdleEvents(false);
    }
  },

  clearTimeout: function clearTimeout(timerID) {
    _freeCallback(timerID);
  },

  clearInterval: function clearInterval(timerID) {
    _freeCallback(timerID);
  },

  clearImmediate: function clearImmediate(timerID) {
    _freeCallback(timerID);
    var index = JSTimersExecution.immediates.indexOf(timerID);
    if (index !== -1) {
      JSTimersExecution.immediates.splice(index, 1);
    }
  },

  cancelAnimationFrame: function cancelAnimationFrame(timerID) {
    _freeCallback(timerID);
  }
};

module.exports = JSTimers;
}, 364, null, "JSTimers");
__d(/* parseErrorStack */function(global, require, module, exports) {
'use strict';

var stacktraceParser = require(366                ); // 366 = stacktrace-parser

function parseErrorStack(e) {
  if (!e || !e.stack) {
    return [];
  }

  var stack = Array.isArray(e.stack) ? e.stack : stacktraceParser.parse(e.stack);

  var framesToPop = typeof e.framesToPop === 'number' ? e.framesToPop : 0;
  while (framesToPop--) {
    stack.shift();
  }

  return stack;
}

module.exports = parseErrorStack;
}, 365, null, "parseErrorStack");
__d(/* stacktrace-parser/index.js */function(global, require, module, exports) {module.exports = require(367                         ); // 367 = ./lib/stacktrace-parser.js
}, 366, null, "stacktrace-parser/index.js");
__d(/* stacktrace-parser/lib/stacktrace-parser.js */function(global, require, module, exports) {

var UNKNOWN_FUNCTION = '<unknown>';

var StackTraceParser = {
    parse: function parse(stackString) {
        var chrome = /^\s*at (?:(?:(?:Anonymous function)?|((?:\[object object\])?\S+(?: \[as \S+\])?)) )?\(?((?:file|http|https):.*?):(\d+)(?::(\d+))?\)?\s*$/i,
            gecko = /^(?:\s*([^@]*)(?:\((.*?)\))?@)?(\S.*?):(\d+)(?::(\d+))?\s*$/i,
            node = /^\s*at (?:((?:\[object object\])?\S+(?: \[as \S+\])?) )?\(?(.*?):(\d+)(?::(\d+))?\)?\s*$/i,
            lines = stackString.split('\n'),
            stack = [],
            parts,
            element;

        for (var i = 0, j = lines.length; i < j; ++i) {
            if (parts = gecko.exec(lines[i])) {
                element = {
                    'file': parts[3],
                    'methodName': parts[1] || UNKNOWN_FUNCTION,
                    'lineNumber': +parts[4],
                    'column': parts[5] ? +parts[5] : null
                };
            } else if (parts = chrome.exec(lines[i])) {
                element = {
                    'file': parts[2],
                    'methodName': parts[1] || UNKNOWN_FUNCTION,
                    'lineNumber': +parts[3],
                    'column': parts[4] ? +parts[4] : null
                };
            } else if (parts = node.exec(lines[i])) {
                element = {
                    'file': parts[2],
                    'methodName': parts[1] || UNKNOWN_FUNCTION,
                    'lineNumber': +parts[3],
                    'column': parts[4] ? +parts[4] : null
                };
            } else {
                continue;
            }

            stack.push(element);
        }

        return stack;
    }
};

module.exports = StackTraceParser;
}, 367, null, "stacktrace-parser/lib/stacktrace-parser.js");
__d(/* deepFreezeAndThrowOnMutationInDev */function(global, require, module, exports) {

'use strict';

function deepFreezeAndThrowOnMutationInDev(object) {
  if (__DEV__) {
    if (typeof object !== 'object' || object === null || Object.isFrozen(object) || Object.isSealed(object)) {
      return;
    }

    var keys = Object.keys(object);

    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      if (object.hasOwnProperty(key)) {
        object.__defineGetter__(key, identity.bind(null, object[key]));
        object.__defineSetter__(key, throwOnImmutableMutation.bind(null, key));
      }
    }

    Object.freeze(object);
    Object.seal(object);

    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      if (object.hasOwnProperty(key)) {
        deepFreezeAndThrowOnMutationInDev(object[key]);
      }
    }
  }
}

function throwOnImmutableMutation(key, value) {
  throw Error('You attempted to set the key `' + key + '` with the value `' + JSON.stringify(value) + '` on an object that is meant to be immutable ' + 'and has been frozen.');
}

function identity(value) {
  return value;
}

module.exports = deepFreezeAndThrowOnMutationInDev;
}, 368, null, "deepFreezeAndThrowOnMutationInDev");
__d(/* stringifySafe */function(global, require, module, exports) {
'use strict';

function stringifySafe(arg) {
  var ret;
  var type = typeof arg;
  if (arg === undefined) {
    ret = 'undefined';
  } else if (arg === null) {
    ret = 'null';
  } else if (type === 'string') {
    ret = '"' + arg + '"';
  } else if (type === 'function') {
    try {
      ret = arg.toString();
    } catch (e) {
      ret = '[function unknown]';
    }
  } else {
    try {
      ret = JSON.stringify(arg);
    } catch (e) {
      if (typeof arg.toString === 'function') {
        try {
          ret = arg.toString();
        } catch (E) {}
      }
    }
  }
  return ret || '["' + type + '" failed to stringify]';
}

module.exports = stringifySafe;
}, 369, null, "stringifySafe");
__d(/* HeapCapture */function(global, require, module, exports) {
'use strict';

var HeapCapture = {
  captureHeap: function captureHeap(path) {
    var error = null;
    try {
      global.nativeCaptureHeap(path);
      console.log('HeapCapture.captureHeap succeeded: ' + path);
    } catch (e) {
      console.log('HeapCapture.captureHeap error: ' + e.toString());
      error = e.toString();
    }
    require(349            ).JSCHeapCapture.captureComplete(path, error); // 349 = NativeModules
  }
};

module.exports = HeapCapture;
}, 370, null, "HeapCapture");
__d(/* SamplingProfiler */function(global, require, module, exports) {
'use strict';

var SamplingProfiler = {
  poke: function poke(token) {
    var error = null;
    var result = null;
    try {
      result = global.pokeSamplingProfiler();
      if (result === null) {
        console.log('The JSC Sampling Profiler has started');
      } else {
        console.log('The JSC Sampling Profiler has stopped');
      }
    } catch (e) {
      console.log('Error occured when restarting Sampling Profiler: ' + e.toString());
      error = e.toString();
    }
    require(349            ).JSCSamplingProfiler.operationComplete(token, result, error); // 349 = NativeModules
  }
};

module.exports = SamplingProfiler;
}, 371, null, "SamplingProfiler");
__d(/* HMRClient */function(global, require, module, exports) {
'use strict';

var Platform = require(348       ); // 348 = Platform
var invariant = require(346                 ); // 346 = fbjs/lib/invariant

var HMRClient = {
  enable: function enable(platform, bundleEntry, host, port) {
    invariant(platform, 'Missing required parameter `platform`');
    invariant(bundleEntry, 'Missing required paramenter `bundleEntry`');
    invariant(host, 'Missing required paramenter `host`');

    var WebSocket = require(373        ); // 373 = WebSocket

    var wsHostPort = port !== null && port !== '' ? host + ':' + port : host;

    var wsUrl = 'ws://' + wsHostPort + '/hot?' + ('platform=' + platform + '&') + ('bundleEntry=' + bundleEntry.replace('.bundle', '.js'));

    var activeWS = new WebSocket(wsUrl);
    activeWS.onerror = function (e) {
      var error = 'Hot loading isn\'t working because it cannot connect to the development server.\n\nTry the following to fix the issue:\n- Ensure that the packager server is running and available on the same network';

      if (Platform.OS === 'ios') {
        error += '\n- Ensure that the Packager server URL is correctly set in AppDelegate';
      } else {
        error += '\n- Ensure that your device/emulator is connected to your machine and has USB debugging enabled - run \'adb devices\' to see a list of connected devices\n- If you\'re on a physical device connected to the same machine, run \'adb reverse tcp:8081 tcp:8081\' to forward requests from your device\n- If your device is on the same Wi-Fi network, set \'Debug server host & port for device\' in \'Dev settings\' to your machine\'s IP address and the port of the local dev server - e.g. 10.0.1.1:8081';
      }

      error += '\n\nURL: ' + host + ':' + port + '\n\nError: ' + e.message;

      throw new Error(error);
    };
    activeWS.onmessage = function (_ref) {
      var data = _ref.data;

      var HMRLoadingView = require(392             ); // 392 = HMRLoadingView

      data = JSON.parse(data);

      switch (data.type) {
        case 'update-start':
          {
            HMRLoadingView.showMessage('Hot Loading...');
            break;
          }
        case 'update':
          {
            var _data$body = data.body,
                modules = _data$body.modules,
                sourceMappingURLs = _data$body.sourceMappingURLs,
                sourceURLs = _data$body.sourceURLs,
                inverseDependencies = _data$body.inverseDependencies;


            if (Platform.OS === 'ios') {
              var RCTRedBox = require(349            ).RedBox; // 349 = NativeModules
              RCTRedBox && RCTRedBox.dismiss && RCTRedBox.dismiss();
            } else {
              var RCTExceptionsManager = require(349            ).ExceptionsManager; // 349 = NativeModules
              RCTExceptionsManager && RCTExceptionsManager.dismissRedbox && RCTExceptionsManager.dismissRedbox();
            }

            modules.forEach(function (_ref2, i) {
              var id = _ref2.id,
                  code = _ref2.code;

              code = code + '\n\n' + sourceMappingURLs[i];

              var injectFunction = typeof global.nativeInjectHMRUpdate === 'function' ? global.nativeInjectHMRUpdate : eval;

              code = ['__accept(', id + ',', 'function(global,require,module,exports){', '' + code, '\n},', '' + JSON.stringify(inverseDependencies), ');'].join('');

              injectFunction(code, sourceURLs[i]);
            });

            HMRLoadingView.hide();
            break;
          }
        case 'update-done':
          {
            HMRLoadingView.hide();
            break;
          }
        case 'error':
          {
            HMRLoadingView.hide();
            throw new Error(data.body.type + ' ' + data.body.description);
          }
        default:
          {
            throw new Error('Unexpected message: ' + data);
          }
      }
    };
  }
};

module.exports = HMRClient;
}, 372, null, "HMRClient");
__d(/* WebSocket */function(global, require, module, exports) {
'use strict';

var NativeEventEmitter = require(374                 ); // 374 = NativeEventEmitter
var Platform = require(348       ); // 348 = Platform
var RCTWebSocketModule = require(349            ).WebSocketModule; // 349 = NativeModules
var WebSocketEvent = require(385             ); // 385 = WebSocketEvent
var binaryToBase64 = require(386             ); // 386 = binaryToBase64

var EventTarget = require(388                ); // 388 = event-target-shim
var base64 = require(387        ); // 387 = base64-js

var CONNECTING = 0;
var OPEN = 1;
var CLOSING = 2;
var CLOSED = 3;

var CLOSE_NORMAL = 1000;

var WEBSOCKET_EVENTS = ['close', 'error', 'message', 'open'];

var nextWebSocketId = 0;

var WebSocket = function (_EventTarget) {
  babelHelpers.inherits(WebSocket, _EventTarget);

  function WebSocket(url, protocols, options) {
    babelHelpers.classCallCheck(this, WebSocket);

    var _this = babelHelpers.possibleConstructorReturn(this, (WebSocket.__proto__ || Object.getPrototypeOf(WebSocket)).call(this));

    _this.CONNECTING = CONNECTING;
    _this.OPEN = OPEN;
    _this.CLOSING = CLOSING;
    _this.CLOSED = CLOSED;
    _this.readyState = CONNECTING;

    if (typeof protocols === 'string') {
      protocols = [protocols];
    }

    if (!Array.isArray(protocols)) {
      protocols = null;
    }

    _this._eventEmitter = new NativeEventEmitter(RCTWebSocketModule);
    _this._socketId = nextWebSocketId++;
    RCTWebSocketModule.connect(url, protocols, options, _this._socketId);
    _this._registerEvents();
    return _this;
  }

  babelHelpers.createClass(WebSocket, [{
    key: 'close',
    value: function close(code, reason) {
      if (this.readyState === this.CLOSING || this.readyState === this.CLOSED) {
        return;
      }

      this.readyState = this.CLOSING;
      this._close(code, reason);
    }
  }, {
    key: 'send',
    value: function send(data) {
      if (this.readyState === this.CONNECTING) {
        throw new Error('INVALID_STATE_ERR');
      }

      if (typeof data === 'string') {
        RCTWebSocketModule.send(data, this._socketId);
        return;
      }

      if (data instanceof ArrayBuffer || ArrayBuffer.isView(data)) {
        RCTWebSocketModule.sendBinary(binaryToBase64(data), this._socketId);
        return;
      }

      throw new Error('Unsupported data type');
    }
  }, {
    key: 'ping',
    value: function ping() {
      if (this.readyState === this.CONNECTING) {
        throw new Error('INVALID_STATE_ERR');
      }

      RCTWebSocketModule.ping(this._socketId);
    }
  }, {
    key: '_close',
    value: function _close(code, reason) {
      if (Platform.OS === 'android') {
        var statusCode = typeof code === 'number' ? code : CLOSE_NORMAL;
        var closeReason = typeof reason === 'string' ? reason : '';
        RCTWebSocketModule.close(statusCode, closeReason, this._socketId);
      } else {
        RCTWebSocketModule.close(this._socketId);
      }
    }
  }, {
    key: '_unregisterEvents',
    value: function _unregisterEvents() {
      this._subscriptions.forEach(function (e) {
        return e.remove();
      });
      this._subscriptions = [];
    }
  }, {
    key: '_registerEvents',
    value: function _registerEvents() {
      var _this2 = this;

      this._subscriptions = [this._eventEmitter.addListener('websocketMessage', function (ev) {
        if (ev.id !== _this2._socketId) {
          return;
        }
        _this2.dispatchEvent(new WebSocketEvent('message', {
          data: ev.type === 'binary' ? base64.toByteArray(ev.data).buffer : ev.data
        }));
      }), this._eventEmitter.addListener('websocketOpen', function (ev) {
        if (ev.id !== _this2._socketId) {
          return;
        }
        _this2.readyState = _this2.OPEN;
        _this2.dispatchEvent(new WebSocketEvent('open'));
      }), this._eventEmitter.addListener('websocketClosed', function (ev) {
        if (ev.id !== _this2._socketId) {
          return;
        }
        _this2.readyState = _this2.CLOSED;
        _this2.dispatchEvent(new WebSocketEvent('close', {
          code: ev.code,
          reason: ev.reason
        }));
        _this2._unregisterEvents();
        _this2.close();
      }), this._eventEmitter.addListener('websocketFailed', function (ev) {
        if (ev.id !== _this2._socketId) {
          return;
        }
        _this2.readyState = _this2.CLOSED;
        _this2.dispatchEvent(new WebSocketEvent('error', {
          message: ev.message
        }));
        _this2.dispatchEvent(new WebSocketEvent('close', {
          message: ev.message
        }));
        _this2._unregisterEvents();
        _this2.close();
      })];
    }
  }]);
  return WebSocket;
}(EventTarget.apply(undefined, WEBSOCKET_EVENTS));

WebSocket.CONNECTING = CONNECTING;
WebSocket.OPEN = OPEN;
WebSocket.CLOSING = CLOSING;
WebSocket.CLOSED = CLOSED;


module.exports = WebSocket;
}, 373, null, "WebSocket");
__d(/* NativeEventEmitter */function(global, require, module, exports) {
'use strict';

var EventEmitter = require(375           ); // 375 = EventEmitter
var Platform = require(348       ); // 348 = Platform
var RCTDeviceEventEmitter = require(379                    ); // 379 = RCTDeviceEventEmitter
var invariant = require(346                 ); // 346 = fbjs/lib/invariant

var NativeEventEmitter = function (_EventEmitter) {
  babelHelpers.inherits(NativeEventEmitter, _EventEmitter);

  function NativeEventEmitter(nativeModule) {
    babelHelpers.classCallCheck(this, NativeEventEmitter);

    var _this = babelHelpers.possibleConstructorReturn(this, (NativeEventEmitter.__proto__ || Object.getPrototypeOf(NativeEventEmitter)).call(this, RCTDeviceEventEmitter.sharedSubscriber));

    if (Platform.OS === 'ios') {
      invariant(nativeModule, 'Native module cannot be null.');
      _this._nativeModule = nativeModule;
    }
    return _this;
  }

  babelHelpers.createClass(NativeEventEmitter, [{
    key: 'addListener',
    value: function addListener(eventType, listener, context) {
      if (Platform.OS === 'ios') {
        this._nativeModule.addListener(eventType);
      }
      return babelHelpers.get(NativeEventEmitter.prototype.__proto__ || Object.getPrototypeOf(NativeEventEmitter.prototype), 'addListener', this).call(this, eventType, listener, context);
    }
  }, {
    key: 'removeAllListeners',
    value: function removeAllListeners(eventType) {
      invariant(eventType, 'eventType argument is required.');
      if (Platform.OS === 'ios') {
        var count = this.listeners(eventType).length;
        this._nativeModule.removeListeners(count);
      }
      babelHelpers.get(NativeEventEmitter.prototype.__proto__ || Object.getPrototypeOf(NativeEventEmitter.prototype), 'removeAllListeners', this).call(this, eventType);
    }
  }, {
    key: 'removeSubscription',
    value: function removeSubscription(subscription) {
      if (Platform.OS === 'ios') {
        this._nativeModule.removeListeners(1);
      }
      babelHelpers.get(NativeEventEmitter.prototype.__proto__ || Object.getPrototypeOf(NativeEventEmitter.prototype), 'removeSubscription', this).call(this, subscription);
    }
  }]);
  return NativeEventEmitter;
}(EventEmitter);

module.exports = NativeEventEmitter;
}, 374, null, "NativeEventEmitter");
__d(/* EventEmitter */function(global, require, module, exports) {
'use strict';

var EmitterSubscription = require(376                  ); // 376 = EmitterSubscription
var EventSubscriptionVendor = require(378                      ); // 378 = EventSubscriptionVendor

var emptyFunction = require(336                     ); // 336 = fbjs/lib/emptyFunction
var invariant = require(346                 ); // 346 = fbjs/lib/invariant

var EventEmitter = function () {
  function EventEmitter(subscriber) {
    babelHelpers.classCallCheck(this, EventEmitter);

    this._subscriber = subscriber || new EventSubscriptionVendor();
  }

  babelHelpers.createClass(EventEmitter, [{
    key: 'addListener',
    value: function addListener(eventType, listener, context) {

      return this._subscriber.addSubscription(eventType, new EmitterSubscription(this, this._subscriber, listener, context));
    }
  }, {
    key: 'once',
    value: function once(eventType, listener, context) {
      var _this = this;

      return this.addListener(eventType, function () {
        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        _this.removeCurrentListener();
        listener.apply(context, args);
      });
    }
  }, {
    key: 'removeAllListeners',
    value: function removeAllListeners(eventType) {
      this._subscriber.removeAllSubscriptions(eventType);
    }
  }, {
    key: 'removeCurrentListener',
    value: function removeCurrentListener() {
      invariant(!!this._currentSubscription, 'Not in an emitting cycle; there is no current subscription');
      this.removeSubscription(this._currentSubscription);
    }
  }, {
    key: 'removeSubscription',
    value: function removeSubscription(subscription) {
      invariant(subscription.emitter === this, 'Subscription does not belong to this emitter.');
      this._subscriber.removeSubscription(subscription);
    }
  }, {
    key: 'listeners',
    value: function listeners(eventType) {
      var subscriptions = this._subscriber.getSubscriptionsForType(eventType);
      return subscriptions ? subscriptions.filter(emptyFunction.thatReturnsTrue).map(function (subscription) {
        return subscription.listener;
      }) : [];
    }
  }, {
    key: 'emit',
    value: function emit(eventType) {
      var subscriptions = this._subscriber.getSubscriptionsForType(eventType);
      if (subscriptions) {
        for (var i = 0, l = subscriptions.length; i < l; i++) {
          var subscription = subscriptions[i];

          if (subscription) {
            this._currentSubscription = subscription;
            subscription.listener.apply(subscription.context, Array.prototype.slice.call(arguments, 1));
          }
        }
        this._currentSubscription = null;
      }
    }
  }, {
    key: 'removeListener',
    value: function removeListener(eventType, listener) {
      var subscriptions = this._subscriber.getSubscriptionsForType(eventType);
      if (subscriptions) {
        for (var i = 0, l = subscriptions.length; i < l; i++) {
          var subscription = subscriptions[i];

          if (subscription && subscription.listener === listener) {
            subscription.remove();
          }
        }
      }
    }
  }]);
  return EventEmitter;
}();

module.exports = EventEmitter;
}, 375, null, "EventEmitter");
__d(/* EmitterSubscription */function(global, require, module, exports) {
'use strict';

var EventSubscription = require(377                ); // 377 = EventSubscription

var EmitterSubscription = function (_EventSubscription) {
  babelHelpers.inherits(EmitterSubscription, _EventSubscription);

  function EmitterSubscription(emitter, subscriber, listener, context) {
    babelHelpers.classCallCheck(this, EmitterSubscription);

    var _this = babelHelpers.possibleConstructorReturn(this, (EmitterSubscription.__proto__ || Object.getPrototypeOf(EmitterSubscription)).call(this, subscriber));

    _this.emitter = emitter;
    _this.listener = listener;
    _this.context = context;
    return _this;
  }

  babelHelpers.createClass(EmitterSubscription, [{
    key: 'remove',
    value: function remove() {
      this.emitter.removeSubscription(this);
    }
  }]);
  return EmitterSubscription;
}(EventSubscription);

module.exports = EmitterSubscription;
}, 376, null, "EmitterSubscription");
__d(/* EventSubscription */function(global, require, module, exports) {
'use strict';

var EventSubscription = function () {
  function EventSubscription(subscriber) {
    babelHelpers.classCallCheck(this, EventSubscription);

    this.subscriber = subscriber;
  }

  babelHelpers.createClass(EventSubscription, [{
    key: 'remove',
    value: function remove() {
      this.subscriber.removeSubscription(this);
    }
  }]);
  return EventSubscription;
}();

module.exports = EventSubscription;
}, 377, null, "EventSubscription");
__d(/* EventSubscriptionVendor */function(global, require, module, exports) {
'use strict';

var invariant = require(346                 ); // 346 = fbjs/lib/invariant

var EventSubscriptionVendor = function () {
  function EventSubscriptionVendor() {
    babelHelpers.classCallCheck(this, EventSubscriptionVendor);

    this._subscriptionsForType = {};
    this._currentSubscription = null;
  }

  babelHelpers.createClass(EventSubscriptionVendor, [{
    key: 'addSubscription',
    value: function addSubscription(eventType, subscription) {
      invariant(subscription.subscriber === this, 'The subscriber of the subscription is incorrectly set.');
      if (!this._subscriptionsForType[eventType]) {
        this._subscriptionsForType[eventType] = [];
      }
      var key = this._subscriptionsForType[eventType].length;
      this._subscriptionsForType[eventType].push(subscription);
      subscription.eventType = eventType;
      subscription.key = key;
      return subscription;
    }
  }, {
    key: 'removeAllSubscriptions',
    value: function removeAllSubscriptions(eventType) {
      if (eventType === undefined) {
        this._subscriptionsForType = {};
      } else {
        delete this._subscriptionsForType[eventType];
      }
    }
  }, {
    key: 'removeSubscription',
    value: function removeSubscription(subscription) {
      var eventType = subscription.eventType;
      var key = subscription.key;

      var subscriptionsForType = this._subscriptionsForType[eventType];
      if (subscriptionsForType) {
        delete subscriptionsForType[key];
      }
    }
  }, {
    key: 'getSubscriptionsForType',
    value: function getSubscriptionsForType(eventType) {
      return this._subscriptionsForType[eventType];
    }
  }]);
  return EventSubscriptionVendor;
}();

module.exports = EventSubscriptionVendor;
}, 378, null, "EventSubscriptionVendor");
__d(/* RCTDeviceEventEmitter */function(global, require, module, exports) {
'use strict';

var EventEmitter = require(375           ); // 375 = EventEmitter
var EventSubscriptionVendor = require(378                      ); // 378 = EventSubscriptionVendor
var BatchedBridge = require(350            ); // 350 = BatchedBridge

var RCTDeviceEventEmitter = function (_EventEmitter) {
  babelHelpers.inherits(RCTDeviceEventEmitter, _EventEmitter);

  function RCTDeviceEventEmitter() {
    babelHelpers.classCallCheck(this, RCTDeviceEventEmitter);

    var sharedSubscriber = new EventSubscriptionVendor();

    var _this = babelHelpers.possibleConstructorReturn(this, (RCTDeviceEventEmitter.__proto__ || Object.getPrototypeOf(RCTDeviceEventEmitter)).call(this, sharedSubscriber));

    _this.sharedSubscriber = sharedSubscriber;
    return _this;
  }

  babelHelpers.createClass(RCTDeviceEventEmitter, [{
    key: '_nativeEventModule',
    value: function _nativeEventModule(eventType) {
      if (eventType) {
        if (eventType.lastIndexOf('statusBar', 0) === 0) {
          console.warn('`%s` event should be registered via the StatusBarIOS module', eventType);
          return require(380           ); // 380 = StatusBarIOS
        }
        if (eventType.lastIndexOf('keyboard', 0) === 0) {
          console.warn('`%s` event should be registered via the Keyboard module', eventType);
          return require(381       ); // 381 = Keyboard
        }
        if (eventType === 'appStateDidChange' || eventType === 'memoryWarning') {
          console.warn('`%s` event should be registered via the AppState module', eventType);
          return require(383       ); // 383 = AppState
        }
      }
      return null;
    }
  }, {
    key: 'addListener',
    value: function addListener(eventType, listener, context) {
      var eventModule = this._nativeEventModule(eventType);
      return eventModule ? eventModule.addListener(eventType, listener, context) : babelHelpers.get(RCTDeviceEventEmitter.prototype.__proto__ || Object.getPrototypeOf(RCTDeviceEventEmitter.prototype), 'addListener', this).call(this, eventType, listener, context);
    }
  }, {
    key: 'removeAllListeners',
    value: function removeAllListeners(eventType) {
      var eventModule = this._nativeEventModule(eventType);
      eventModule && eventType ? eventModule.removeAllListeners(eventType) : babelHelpers.get(RCTDeviceEventEmitter.prototype.__proto__ || Object.getPrototypeOf(RCTDeviceEventEmitter.prototype), 'removeAllListeners', this).call(this, eventType);
    }
  }, {
    key: 'removeSubscription',
    value: function removeSubscription(subscription) {
      if (subscription.emitter !== this) {
        subscription.emitter.removeSubscription(subscription);
      } else {
        babelHelpers.get(RCTDeviceEventEmitter.prototype.__proto__ || Object.getPrototypeOf(RCTDeviceEventEmitter.prototype), 'removeSubscription', this).call(this, subscription);
      }
    }
  }]);
  return RCTDeviceEventEmitter;
}(EventEmitter);

RCTDeviceEventEmitter = new RCTDeviceEventEmitter();

BatchedBridge.registerCallableModule('RCTDeviceEventEmitter', RCTDeviceEventEmitter);

module.exports = RCTDeviceEventEmitter;
}, 379, null, "RCTDeviceEventEmitter");
__d(/* StatusBarIOS */function(global, require, module, exports) {
'use strict';

var NativeEventEmitter = require(374                 ); // 374 = NativeEventEmitter

module.exports = new NativeEventEmitter('StatusBarManager');
}, 380, null, "StatusBarIOS");
__d(/* Keyboard */function(global, require, module, exports) {
'use strict';

var invariant = require(346                 ); // 346 = fbjs/lib/invariant
var NativeEventEmitter = require(374                 ); // 374 = NativeEventEmitter
var KeyboardObserver = require(349            ).KeyboardObserver; // 349 = NativeModules
var dismissKeyboard = require(382              ); // 382 = dismissKeyboard
var KeyboardEventEmitter = new NativeEventEmitter(KeyboardObserver);

var Keyboard = {
  addListener: function addListener(eventName, callback) {
    invariant(false, 'Dummy method used for documentation');
  },
  removeListener: function removeListener(eventName, callback) {
    invariant(false, 'Dummy method used for documentation');
  },
  removeAllListeners: function removeAllListeners(eventName) {
    invariant(false, 'Dummy method used for documentation');
  },
  dismiss: function dismiss() {
    invariant(false, 'Dummy method used for documentation');
  }
};

Keyboard = KeyboardEventEmitter;
Keyboard.dismiss = dismissKeyboard;

module.exports = Keyboard;
}, 381, null, "Keyboard");
__d(/* dismissKeyboard */function(global, require, module, exports) {
'use strict';

var TextInputState = require(347             ); // 347 = TextInputState

function dismissKeyboard() {
  TextInputState.blurTextInput(TextInputState.currentlyFocusedField());
}

module.exports = dismissKeyboard;
}, 382, null, "dismissKeyboard");
__d(/* AppState */function(global, require, module, exports) {
'use strict';

var NativeEventEmitter = require(374                 ); // 374 = NativeEventEmitter
var NativeModules = require(349            ); // 349 = NativeModules
var RCTAppState = NativeModules.AppState;

var logError = require(384       ); // 384 = logError
var invariant = require(346                 ); // 346 = fbjs/lib/invariant

var AppState = function (_NativeEventEmitter) {
  babelHelpers.inherits(AppState, _NativeEventEmitter);

  function AppState() {
    babelHelpers.classCallCheck(this, AppState);

    var _this = babelHelpers.possibleConstructorReturn(this, (AppState.__proto__ || Object.getPrototypeOf(AppState)).call(this, RCTAppState));

    _this._eventHandlers = {
      change: new Map(),
      memoryWarning: new Map()
    };

    _this.currentState = RCTAppState.initialAppState || 'active';

    _this.addListener('appStateDidChange', function (appStateData) {
      _this.currentState = appStateData.app_state;
    });

    RCTAppState.getCurrentAppState(function (appStateData) {
      _this.currentState = appStateData.app_state;
    }, logError);
    return _this;
  }

  babelHelpers.createClass(AppState, [{
    key: 'addEventListener',
    value: function addEventListener(type, handler) {
      invariant(['change', 'memoryWarning'].indexOf(type) !== -1, 'Trying to subscribe to unknown event: "%s"', type);
      if (type === 'change') {
        this._eventHandlers[type].set(handler, this.addListener('appStateDidChange', function (appStateData) {
          handler(appStateData.app_state);
        }));
      } else if (type === 'memoryWarning') {
        this._eventHandlers[type].set(handler, this.addListener('memoryWarning', handler));
      }
    }
  }, {
    key: 'removeEventListener',
    value: function removeEventListener(type, handler) {
      invariant(['change', 'memoryWarning'].indexOf(type) !== -1, 'Trying to remove listener for unknown event: "%s"', type);
      if (!this._eventHandlers[type].has(handler)) {
        return;
      }
      this._eventHandlers[type].get(handler).remove();
      this._eventHandlers[type].delete(handler);
    }
  }]);
  return AppState;
}(NativeEventEmitter);

AppState = new AppState();

module.exports = AppState;
}, 383, null, "AppState");
__d(/* logError */function(global, require, module, exports) {
'use strict';

var logError = function logError() {
  if (arguments.length === 1 && arguments[0] instanceof Error) {
    var err = arguments[0];
    console.error('Error: "' + err.message + '".  Stack:\n' + err.stack);
  } else {
    console.error.apply(console, arguments);
  }
};

module.exports = logError;
}, 384, null, "logError");
__d(/* WebSocketEvent */function(global, require, module, exports) {

'use strict';

var WebSocketEvent = function WebSocketEvent(type, eventInitDict) {
  babelHelpers.classCallCheck(this, WebSocketEvent);

  this.type = type.toString();
  babelHelpers.extends(this, eventInitDict);
};

module.exports = WebSocketEvent;
}, 385, null, "WebSocketEvent");
__d(/* binaryToBase64 */function(global, require, module, exports) {
'use strict';

var base64 = require(387        ); // 387 = base64-js

function binaryToBase64(data) {
  if (data instanceof ArrayBuffer) {
    data = new Uint8Array(data);
  }
  if (data instanceof Uint8Array) {
    return base64.fromByteArray(data);
  }
  if (!ArrayBuffer.isView(data)) {
    throw new Error('data must be ArrayBuffer or typed array');
  }
  var _data = data,
      buffer = _data.buffer,
      byteOffset = _data.byteOffset,
      byteLength = _data.byteLength;

  return base64.fromByteArray(new Uint8Array(buffer, byteOffset, byteLength));
}

module.exports = binaryToBase64;
}, 386, null, "binaryToBase64");
__d(/* base64-js/index.js */function(global, require, module, exports) {'use strict';

exports.byteLength = byteLength;
exports.toByteArray = toByteArray;
exports.fromByteArray = fromByteArray;

var lookup = [];
var revLookup = [];
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i];
  revLookup[code.charCodeAt(i)] = i;
}

revLookup['-'.charCodeAt(0)] = 62;
revLookup['_'.charCodeAt(0)] = 63;

function getLens(b64) {
  var len = b64.length;

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4');
  }

  var validLen = b64.indexOf('=');
  if (validLen === -1) validLen = len;

  var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;

  return [validLen, placeHoldersLen];
}

function byteLength(b64) {
  var lens = getLens(b64);
  var validLen = lens[0];
  var placeHoldersLen = lens[1];
  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;
}

function _byteLength(b64, validLen, placeHoldersLen) {
  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;
}

function toByteArray(b64) {
  var tmp;
  var lens = getLens(b64);
  var validLen = lens[0];
  var placeHoldersLen = lens[1];

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));

  var curByte = 0;

  var len = placeHoldersLen > 0 ? validLen - 4 : validLen;

  for (var i = 0; i < len; i += 4) {
    tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];
    arr[curByte++] = tmp >> 16 & 0xFF;
    arr[curByte++] = tmp >> 8 & 0xFF;
    arr[curByte++] = tmp & 0xFF;
  }

  if (placeHoldersLen === 2) {
    tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;
    arr[curByte++] = tmp & 0xFF;
  }

  if (placeHoldersLen === 1) {
    tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;
    arr[curByte++] = tmp >> 8 & 0xFF;
    arr[curByte++] = tmp & 0xFF;
  }

  return arr;
}

function tripletToBase64(num) {
  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];
}

function encodeChunk(uint8, start, end) {
  var tmp;
  var output = [];
  for (var i = start; i < end; i += 3) {
    tmp = (uint8[i] << 16 & 0xFF0000) + (uint8[i + 1] << 8 & 0xFF00) + (uint8[i + 2] & 0xFF);
    output.push(tripletToBase64(tmp));
  }
  return output.join('');
}

function fromByteArray(uint8) {
  var tmp;
  var len = uint8.length;
  var extraBytes = len % 3;
  var parts = [];
  var maxChunkLength = 16383;
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));
  }

  if (extraBytes === 1) {
    tmp = uint8[len - 1];
    parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 0x3F] + '==');
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1];
    parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 0x3F] + lookup[tmp << 2 & 0x3F] + '=');
  }

  return parts.join('');
}
}, 387, null, "base64-js/index.js");
__d(/* event-target-shim/lib/event-target.js */function(global, require, module, exports) {

"use strict";

var Commons = require(389        ); // 389 = ./commons
var CustomEventTarget = require(390                    ); // 390 = ./custom-event-target
var EventWrapper = require(391              ); // 391 = ./event-wrapper
var LISTENERS = Commons.LISTENERS;
var CAPTURE = Commons.CAPTURE;
var BUBBLE = Commons.BUBBLE;
var ATTRIBUTE = Commons.ATTRIBUTE;
var newNode = Commons.newNode;
var defineCustomEventTarget = CustomEventTarget.defineCustomEventTarget;
var createEventWrapper = EventWrapper.createEventWrapper;
var STOP_IMMEDIATE_PROPAGATION_FLAG = EventWrapper.STOP_IMMEDIATE_PROPAGATION_FLAG;

var HAS_EVENTTARGET_INTERFACE = typeof window !== "undefined" && typeof window.EventTarget !== "undefined";

var EventTarget = module.exports = function EventTarget() {
    if (this instanceof EventTarget) {
        Object.defineProperty(this, LISTENERS, { value: Object.create(null) });
    } else if (arguments.length === 1 && Array.isArray(arguments[0])) {
        return defineCustomEventTarget(EventTarget, arguments[0]);
    } else if (arguments.length > 0) {
        var types = Array(arguments.length);
        for (var i = 0; i < arguments.length; ++i) {
            types[i] = arguments[i];
        }

        return defineCustomEventTarget(EventTarget, types);
    } else {
        throw new TypeError("Cannot call a class as a function");
    }
};

EventTarget.prototype = Object.create((HAS_EVENTTARGET_INTERFACE ? window.EventTarget : Object).prototype, {
    constructor: {
        value: EventTarget,
        writable: true,
        configurable: true
    },

    addEventListener: {
        value: function addEventListener(type, listener, capture) {
            if (listener == null) {
                return false;
            }
            if (typeof listener !== "function" && typeof listener !== "object") {
                throw new TypeError("\"listener\" is not an object.");
            }

            var kind = capture ? CAPTURE : BUBBLE;
            var node = this[LISTENERS][type];
            if (node == null) {
                this[LISTENERS][type] = newNode(listener, kind);
                return true;
            }

            var prev = null;
            while (node != null) {
                if (node.listener === listener && node.kind === kind) {
                    return false;
                }
                prev = node;
                node = node.next;
            }

            prev.next = newNode(listener, kind);
            return true;
        },
        configurable: true,
        writable: true
    },

    removeEventListener: {
        value: function removeEventListener(type, listener, capture) {
            if (listener == null) {
                return false;
            }

            var kind = capture ? CAPTURE : BUBBLE;
            var prev = null;
            var node = this[LISTENERS][type];
            while (node != null) {
                if (node.listener === listener && node.kind === kind) {
                    if (prev == null) {
                        this[LISTENERS][type] = node.next;
                    } else {
                        prev.next = node.next;
                    }
                    return true;
                }

                prev = node;
                node = node.next;
            }

            return false;
        },
        configurable: true,
        writable: true
    },

    dispatchEvent: {
        value: function dispatchEvent(event) {
            var node = this[LISTENERS][event.type];
            if (node == null) {
                return true;
            }

            var wrapped = createEventWrapper(event, this);

            while (node != null) {
                if (typeof node.listener === "function") {
                    node.listener.call(this, wrapped);
                } else if (node.kind !== ATTRIBUTE && typeof node.listener.handleEvent === "function") {
                    node.listener.handleEvent(wrapped);
                }

                if (wrapped[STOP_IMMEDIATE_PROPAGATION_FLAG]) {
                    break;
                }
                node = node.next;
            }

            return !wrapped.defaultPrevented;
        },
        configurable: true,
        writable: true
    }
});
}, 388, null, "event-target-shim/lib/event-target.js");
__d(/* event-target-shim/lib/commons.js */function(global, require, module, exports) {

"use strict";

var createUniqueKey = exports.createUniqueKey = typeof Symbol !== "undefined" ? Symbol : function createUniqueKey(name) {
  return "[[" + name + "_" + Math.random().toFixed(8).slice(2) + "]]";
};

exports.LISTENERS = createUniqueKey("listeners");

exports.CAPTURE = 1;

exports.BUBBLE = 2;

exports.ATTRIBUTE = 3;

exports.newNode = function newNode(listener, kind) {
  return { listener: listener, kind: kind, next: null };
};
}, 389, null, "event-target-shim/lib/commons.js");
__d(/* event-target-shim/lib/custom-event-target.js */function(global, require, module, exports) {

"use strict";

var Commons = require(389        ); // 389 = ./commons
var LISTENERS = Commons.LISTENERS;
var ATTRIBUTE = Commons.ATTRIBUTE;
var newNode = Commons.newNode;

function getAttributeListener(eventTarget, type) {
    var node = eventTarget[LISTENERS][type];
    while (node != null) {
        if (node.kind === ATTRIBUTE) {
            return node.listener;
        }
        node = node.next;
    }
    return null;
}

function setAttributeListener(eventTarget, type, listener) {
    if (typeof listener !== "function" && typeof listener !== "object") {
        listener = null;
    }

    var prev = null;
    var node = eventTarget[LISTENERS][type];
    while (node != null) {
        if (node.kind === ATTRIBUTE) {
            if (prev == null) {
                eventTarget[LISTENERS][type] = node.next;
            } else {
                prev.next = node.next;
            }
        } else {
            prev = node;
        }

        node = node.next;
    }

    if (listener != null) {
        if (prev == null) {
            eventTarget[LISTENERS][type] = newNode(listener, ATTRIBUTE);
        } else {
            prev.next = newNode(listener, ATTRIBUTE);
        }
    }
}

exports.defineCustomEventTarget = function (EventTargetBase, types) {
    function EventTarget() {
        EventTargetBase.call(this);
    }

    var descripter = {
        constructor: {
            value: EventTarget,
            configurable: true,
            writable: true
        }
    };

    types.forEach(function (type) {
        descripter["on" + type] = {
            get: function get() {
                return getAttributeListener(this, type);
            },
            set: function set(listener) {
                setAttributeListener(this, type, listener);
            },
            configurable: true,
            enumerable: true
        };
    });

    EventTarget.prototype = Object.create(EventTargetBase.prototype, descripter);

    return EventTarget;
};
}, 390, null, "event-target-shim/lib/custom-event-target.js");
__d(/* event-target-shim/lib/event-wrapper.js */function(global, require, module, exports) {

"use strict";

var createUniqueKey = require(389        ).createUniqueKey; // 389 = ./commons

var STOP_IMMEDIATE_PROPAGATION_FLAG = createUniqueKey("stop_immediate_propagation_flag");

var CANCELED_FLAG = createUniqueKey("canceled_flag");

var ORIGINAL_EVENT = createUniqueKey("original_event");

var wrapperPrototypeDefinition = Object.freeze({
    stopPropagation: Object.freeze({
        value: function stopPropagation() {
            var e = this[ORIGINAL_EVENT];
            if (typeof e.stopPropagation === "function") {
                e.stopPropagation();
            }
        },
        writable: true,
        configurable: true
    }),

    stopImmediatePropagation: Object.freeze({
        value: function stopImmediatePropagation() {
            this[STOP_IMMEDIATE_PROPAGATION_FLAG] = true;

            var e = this[ORIGINAL_EVENT];
            if (typeof e.stopImmediatePropagation === "function") {
                e.stopImmediatePropagation();
            }
        },
        writable: true,
        configurable: true
    }),

    preventDefault: Object.freeze({
        value: function preventDefault() {
            if (this.cancelable === true) {
                this[CANCELED_FLAG] = true;
            }

            var e = this[ORIGINAL_EVENT];
            if (typeof e.preventDefault === "function") {
                e.preventDefault();
            }
        },
        writable: true,
        configurable: true
    }),

    defaultPrevented: Object.freeze({
        get: function defaultPrevented() {
            return this[CANCELED_FLAG];
        },
        enumerable: true,
        configurable: true
    })
});

exports.STOP_IMMEDIATE_PROPAGATION_FLAG = STOP_IMMEDIATE_PROPAGATION_FLAG;

exports.createEventWrapper = function createEventWrapper(event, eventTarget) {
    var timeStamp = typeof event.timeStamp === "number" ? event.timeStamp : Date.now();
    var propertyDefinition = {
        type: { value: event.type, enumerable: true },
        target: { value: eventTarget, enumerable: true },
        currentTarget: { value: eventTarget, enumerable: true },
        eventPhase: { value: 2, enumerable: true },
        bubbles: { value: Boolean(event.bubbles), enumerable: true },
        cancelable: { value: Boolean(event.cancelable), enumerable: true },
        timeStamp: { value: timeStamp, enumerable: true },
        isTrusted: { value: false, enumerable: true }
    };
    propertyDefinition[STOP_IMMEDIATE_PROPAGATION_FLAG] = { value: false, writable: true };
    propertyDefinition[CANCELED_FLAG] = { value: false, writable: true };
    propertyDefinition[ORIGINAL_EVENT] = { value: event };

    if (typeof event.detail !== "undefined") {
        propertyDefinition.detail = { value: event.detail, enumerable: true };
    }

    return Object.create(Object.create(event, wrapperPrototypeDefinition), propertyDefinition);
};
}, 391, null, "event-target-shim/lib/event-wrapper.js");
__d(/* HMRLoadingView */function(global, require, module, exports) {

'use strict';

var ToastAndroid = require(393           ); // 393 = ToastAndroid

var TOAST_SHORT_DELAY = 2000;

var HMRLoadingView = function () {
  function HMRLoadingView() {
    babelHelpers.classCallCheck(this, HMRLoadingView);
  }

  babelHelpers.createClass(HMRLoadingView, null, [{
    key: 'showMessage',
    value: function showMessage(message) {
      if (HMRLoadingView._showing) {
        return;
      }
      ToastAndroid.show(message, ToastAndroid.SHORT);
      HMRLoadingView._showing = true;
      setTimeout(function () {
        HMRLoadingView._showing = false;
      }, TOAST_SHORT_DELAY);
    }
  }, {
    key: 'hide',
    value: function hide() {}
  }]);
  return HMRLoadingView;
}();

module.exports = HMRLoadingView;
}, 392, null, "HMRLoadingView");
__d(/* ToastAndroid */function(global, require, module, exports) {

'use strict';

var RCTToastAndroid = require(349            ).ToastAndroid; // 349 = NativeModules

var ToastAndroid = {
  SHORT: RCTToastAndroid.SHORT,
  LONG: RCTToastAndroid.LONG,

  TOP: RCTToastAndroid.TOP,
  BOTTOM: RCTToastAndroid.BOTTOM,
  CENTER: RCTToastAndroid.CENTER,

  show: function show(message, duration) {
    RCTToastAndroid.show(message, duration);
  },

  showWithGravity: function showWithGravity(message, duration, gravity) {
    RCTToastAndroid.showWithGravity(message, duration, gravity);
  }
};

module.exports = ToastAndroid;
}, 393, null, "ToastAndroid");
__d(/* defineLazyObjectProperty */function(global, require, module, exports) {

'use strict';

function defineLazyObjectProperty(object, name, descriptor) {
  var get = descriptor.get;

  var enumerable = descriptor.enumerable !== false;
  var writable = descriptor.writable !== false;

  var value = void 0;
  var valueSet = false;
  function getValue() {
    if (!valueSet) {
      valueSet = true;
      setValue(get());
    }
    return value;
  }
  function setValue(newValue) {
    value = newValue;
    valueSet = true;
    Object.defineProperty(object, name, {
      value: newValue,
      configurable: true,
      enumerable: enumerable,
      writable: writable
    });
  }

  Object.defineProperty(object, name, {
    get: getValue,
    set: setValue,
    configurable: true,
    enumerable: enumerable
  });
}

module.exports = defineLazyObjectProperty;
}, 394, null, "defineLazyObjectProperty");
__d(/* UIManager */function(global, require, module, exports) {
'use strict';

var NativeModules = require(349            ); // 349 = NativeModules
var Platform = require(348       ); // 348 = Platform

var defineLazyObjectProperty = require(394                       ); // 394 = defineLazyObjectProperty
var findNodeHandle = require(396             ); // 396 = findNodeHandle
var invariant = require(346                 ); // 346 = fbjs/lib/invariant

var UIManager = NativeModules.UIManager;


invariant(UIManager, 'UIManager is undefined. The native module config is probably incorrect.');

var _takeSnapshot = UIManager.takeSnapshot;

UIManager.takeSnapshot = function _callee(view, options) {
  return regeneratorRuntime.async(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          if (_takeSnapshot) {
            _context.next = 3;
            break;
          }

          console.warn('UIManager.takeSnapshot is not available on this platform');
          return _context.abrupt('return');

        case 3:
          if (typeof view !== 'number' && view !== 'window') {
            view = findNodeHandle(view) || 'window';
          }
          return _context.abrupt('return', _takeSnapshot(view, options));

        case 5:
        case 'end':
          return _context.stop();
      }
    }
  }, null, this);
};

if (Platform.OS === 'ios') {
  Object.keys(UIManager).forEach(function (viewName) {
    var viewConfig = UIManager[viewName];
    if (viewConfig.Manager) {
      defineLazyObjectProperty(viewConfig, 'Constants', {
        get: function get() {
          var viewManager = NativeModules[viewConfig.Manager];
          var constants = {};
          viewManager && Object.keys(viewManager).forEach(function (key) {
            var value = viewManager[key];
            if (typeof value !== 'function') {
              constants[key] = value;
            }
          });
          return constants;
        }
      });
      defineLazyObjectProperty(viewConfig, 'Commands', {
        get: function get() {
          var viewManager = NativeModules[viewConfig.Manager];
          var commands = {};
          var index = 0;
          viewManager && Object.keys(viewManager).forEach(function (key) {
            var value = viewManager[key];
            if (typeof value === 'function') {
              commands[key] = index++;
            }
          });
          return commands;
        }
      });
    }
  });
} else if (Platform.OS === 'android' && UIManager.AndroidLazyViewManagersEnabled) {
  UIManager.ViewManagerNames.forEach(function (viewManagerName) {
    defineLazyObjectProperty(UIManager, viewManagerName, {
      get: function get() {
        return NativeModules[viewManagerName.replace(/^(RCT|RK)/, '')];
      }
    });
  });
}

module.exports = UIManager;
}, 395, null, "UIManager");
__d(/* findNodeHandle */function(global, require, module, exports) {

'use strict';

var ReactCurrentOwner = require(357                          ); // 357 = react/lib/ReactCurrentOwner
var ReactInstanceMap = require(397               ); // 397 = ReactInstanceMap

var invariant = require(346                 ); // 346 = fbjs/lib/invariant
var warning = require(335               ); // 335 = fbjs/lib/warning

function findNodeHandle(componentOrHandle) {
  if (__DEV__) {
    var owner = ReactCurrentOwner.current;
    if (owner !== null) {
      warning(owner._warnedAboutRefsInRender, '%s is accessing findNodeHandle inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component');
      owner._warnedAboutRefsInRender = true;
    }
  }
  if (componentOrHandle == null) {
    return null;
  }
  if (typeof componentOrHandle === 'number') {
    return componentOrHandle;
  }

  var component = componentOrHandle;

  var internalInstance = ReactInstanceMap.get(component);
  if (internalInstance) {
    return internalInstance.getHostNode();
  } else {
    var rootNodeID = component._rootNodeID;
    if (rootNodeID) {
      return rootNodeID;
    } else {
      invariant(typeof component === 'object' && '_rootNodeID' in component || component.render != null && typeof component.render === 'function', 'findNodeHandle(...): Argument is not a component ' + '(type: %s, keys: %s)', typeof component, Object.keys(component));
      invariant(false, 'findNodeHandle(...): Unable to find node handle for unmounted ' + 'component.');
    }
  }
}

module.exports = findNodeHandle;
}, 396, null, "findNodeHandle");
__d(/* ReactInstanceMap */function(global, require, module, exports) {

'use strict';

var ReactInstanceMap = {
  remove: function remove(key) {
    key._reactInternalInstance = undefined;
  },

  get: function get(key) {
    return key._reactInternalInstance;
  },

  has: function has(key) {
    return key._reactInternalInstance !== undefined;
  },

  set: function set(key, value) {
    key._reactInternalInstance = value;
  }

};

module.exports = ReactInstanceMap;
}, 397, null, "ReactInstanceMap");
__d(/* React */function(global, require, module, exports) {

'use strict';

module.exports = require(399              ); // 399 = react/lib/React
}, 398, null, "React");
__d(/* react/lib/React.js */function(global, require, module, exports) {

'use strict';

var _assign = require(400            ); // 400 = object-assign

var ReactChildren = require(401              ); // 401 = ./ReactChildren
var ReactComponent = require(409               ); // 409 = ./ReactComponent
var ReactPureComponent = require(412                   ); // 412 = ./ReactPureComponent
var ReactClass = require(413           ); // 413 = ./ReactClass
var ReactDOMFactories = require(414                  ); // 414 = ./ReactDOMFactories
var ReactElement = require(403             ); // 403 = ./ReactElement
var ReactPropTypes = require(418               ); // 418 = ./ReactPropTypes
var ReactVersion = require(419             ); // 419 = ./ReactVersion

var onlyChild = require(420          ); // 420 = ./onlyChild
var warning = require(335               ); // 335 = fbjs/lib/warning

var createElement = ReactElement.createElement;
var createFactory = ReactElement.createFactory;
var cloneElement = ReactElement.cloneElement;

if (process.env.NODE_ENV !== 'production') {
  var ReactElementValidator = require(415                      ); // 415 = ./ReactElementValidator
  createElement = ReactElementValidator.createElement;
  createFactory = ReactElementValidator.createFactory;
  cloneElement = ReactElementValidator.cloneElement;
}

var __spread = _assign;

if (process.env.NODE_ENV !== 'production') {
  var warned = false;
  __spread = function __spread() {
    process.env.NODE_ENV !== 'production' ? warning(warned, 'React.__spread is deprecated and should not be used. Use ' + 'Object.assign directly or another helper function with similar ' + 'semantics. You may be seeing this warning due to your compiler. ' + 'See https://fb.me/react-spread-deprecation for more details.') : void 0;
    warned = true;
    return _assign.apply(null, arguments);
  };
}

var React = {

  Children: {
    map: ReactChildren.map,
    forEach: ReactChildren.forEach,
    count: ReactChildren.count,
    toArray: ReactChildren.toArray,
    only: onlyChild
  },

  Component: ReactComponent,
  PureComponent: ReactPureComponent,

  createElement: createElement,
  cloneElement: cloneElement,
  isValidElement: ReactElement.isValidElement,

  PropTypes: ReactPropTypes,
  createClass: ReactClass.createClass,
  createFactory: createFactory,
  createMixin: function createMixin(mixin) {
    return mixin;
  },

  DOM: ReactDOMFactories,

  version: ReactVersion,

  __spread: __spread
};

module.exports = React;
}, 399, null, "react/lib/React.js");
__d(/* object-assign/index.js */function(global, require, module, exports) {/*
object-assign
(c) Sindre Sorhus
@license MIT
*/

'use strict';

var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative() {
	try {
		if (!Object.assign) {
			return false;
		}

		var test1 = new String('abc');
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(babelHelpers.extends({}, test3)).join('') !== 'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (err) {
		return false;
	}
}

module.exports = shouldUseNative() ? Object.assign : function (target, source) {
	var from;
	var to = toObject(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (getOwnPropertySymbols) {
			symbols = getOwnPropertySymbols(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};
}, 400, null, "object-assign/index.js");
__d(/* react/lib/ReactChildren.js */function(global, require, module, exports) {

'use strict';

var PooledClass = require(402            ); // 402 = ./PooledClass
var ReactElement = require(403             ); // 403 = ./ReactElement

var emptyFunction = require(336                     ); // 336 = fbjs/lib/emptyFunction
var traverseAllChildren = require(406                    ); // 406 = ./traverseAllChildren

var twoArgumentPooler = PooledClass.twoArgumentPooler;
var fourArgumentPooler = PooledClass.fourArgumentPooler;

var userProvidedKeyEscapeRegex = /\/+/g;
function escapeUserProvidedKey(text) {
  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
}

function ForEachBookKeeping(forEachFunction, forEachContext) {
  this.func = forEachFunction;
  this.context = forEachContext;
  this.count = 0;
}
ForEachBookKeeping.prototype.destructor = function () {
  this.func = null;
  this.context = null;
  this.count = 0;
};
PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);

function forEachSingleChild(bookKeeping, child, name) {
  var func = bookKeeping.func,
      context = bookKeeping.context;

  func.call(context, child, bookKeeping.count++);
}

function forEachChildren(children, forEachFunc, forEachContext) {
  if (children == null) {
    return children;
  }
  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
  traverseAllChildren(children, forEachSingleChild, traverseContext);
  ForEachBookKeeping.release(traverseContext);
}

function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
  this.result = mapResult;
  this.keyPrefix = keyPrefix;
  this.func = mapFunction;
  this.context = mapContext;
  this.count = 0;
}
MapBookKeeping.prototype.destructor = function () {
  this.result = null;
  this.keyPrefix = null;
  this.func = null;
  this.context = null;
  this.count = 0;
};
PooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);

function mapSingleChildIntoContext(bookKeeping, child, childKey) {
  var result = bookKeeping.result,
      keyPrefix = bookKeeping.keyPrefix,
      func = bookKeeping.func,
      context = bookKeeping.context;

  var mappedChild = func.call(context, child, bookKeeping.count++);
  if (Array.isArray(mappedChild)) {
    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
  } else if (mappedChild != null) {
    if (ReactElement.isValidElement(mappedChild)) {
      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild, keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
    }
    result.push(mappedChild);
  }
}

function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
  var escapedPrefix = '';
  if (prefix != null) {
    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
  }
  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);
  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
  MapBookKeeping.release(traverseContext);
}

function mapChildren(children, func, context) {
  if (children == null) {
    return children;
  }
  var result = [];
  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
  return result;
}

function forEachSingleChildDummy(traverseContext, child, name) {
  return null;
}

function countChildren(children, context) {
  return traverseAllChildren(children, forEachSingleChildDummy, null);
}

function toArray(children) {
  var result = [];
  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
  return result;
}

var ReactChildren = {
  forEach: forEachChildren,
  map: mapChildren,
  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
  count: countChildren,
  toArray: toArray
};

module.exports = ReactChildren;
}, 401, null, "react/lib/ReactChildren.js");
__d(/* react/lib/PooledClass.js */function(global, require, module, exports) {

'use strict';

var _prodInvariant = require(356                   ); // 356 = ./reactProdInvariant

var invariant = require(346                 ); // 346 = fbjs/lib/invariant

var oneArgumentPooler = function oneArgumentPooler(copyFieldsFrom) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, copyFieldsFrom);
    return instance;
  } else {
    return new Klass(copyFieldsFrom);
  }
};

var twoArgumentPooler = function twoArgumentPooler(a1, a2) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2);
    return instance;
  } else {
    return new Klass(a1, a2);
  }
};

var threeArgumentPooler = function threeArgumentPooler(a1, a2, a3) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3);
    return instance;
  } else {
    return new Klass(a1, a2, a3);
  }
};

var fourArgumentPooler = function fourArgumentPooler(a1, a2, a3, a4) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3, a4);
    return instance;
  } else {
    return new Klass(a1, a2, a3, a4);
  }
};

var standardReleaser = function standardReleaser(instance) {
  var Klass = this;
  !(instance instanceof Klass) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
  instance.destructor();
  if (Klass.instancePool.length < Klass.poolSize) {
    Klass.instancePool.push(instance);
  }
};

var DEFAULT_POOL_SIZE = 10;
var DEFAULT_POOLER = oneArgumentPooler;

var addPoolingTo = function addPoolingTo(CopyConstructor, pooler) {
  var NewKlass = CopyConstructor;
  NewKlass.instancePool = [];
  NewKlass.getPooled = pooler || DEFAULT_POOLER;
  if (!NewKlass.poolSize) {
    NewKlass.poolSize = DEFAULT_POOL_SIZE;
  }
  NewKlass.release = standardReleaser;
  return NewKlass;
};

var PooledClass = {
  addPoolingTo: addPoolingTo,
  oneArgumentPooler: oneArgumentPooler,
  twoArgumentPooler: twoArgumentPooler,
  threeArgumentPooler: threeArgumentPooler,
  fourArgumentPooler: fourArgumentPooler
};

module.exports = PooledClass;
}, 402, null, "react/lib/PooledClass.js");
__d(/* react/lib/ReactElement.js */function(global, require, module, exports) {

'use strict';

var _assign = require(400            ); // 400 = object-assign

var ReactCurrentOwner = require(357                  ); // 357 = ./ReactCurrentOwner

var warning = require(335               ); // 335 = fbjs/lib/warning
var canDefineProperty = require(404                  ); // 404 = ./canDefineProperty
var hasOwnProperty = Object.prototype.hasOwnProperty;

var REACT_ELEMENT_TYPE = require(405                   ); // 405 = ./ReactElementSymbol

var RESERVED_PROPS = {
  key: true,
  ref: true,
  __self: true,
  __source: true
};

var specialPropKeyWarningShown, specialPropRefWarningShown;

function hasValidRef(config) {
  if (process.env.NODE_ENV !== 'production') {
    if (hasOwnProperty.call(config, 'ref')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }
  return config.ref !== undefined;
}

function hasValidKey(config) {
  if (process.env.NODE_ENV !== 'production') {
    if (hasOwnProperty.call(config, 'key')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }
  return config.key !== undefined;
}

function defineKeyPropWarningGetter(props, displayName) {
  var warnAboutAccessingKey = function warnAboutAccessingKey() {
    if (!specialPropKeyWarningShown) {
      specialPropKeyWarningShown = true;
      process.env.NODE_ENV !== 'production' ? warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
    }
  };
  warnAboutAccessingKey.isReactWarning = true;
  Object.defineProperty(props, 'key', {
    get: warnAboutAccessingKey,
    configurable: true
  });
}

function defineRefPropWarningGetter(props, displayName) {
  var warnAboutAccessingRef = function warnAboutAccessingRef() {
    if (!specialPropRefWarningShown) {
      specialPropRefWarningShown = true;
      process.env.NODE_ENV !== 'production' ? warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
    }
  };
  warnAboutAccessingRef.isReactWarning = true;
  Object.defineProperty(props, 'ref', {
    get: warnAboutAccessingRef,
    configurable: true
  });
}

var ReactElement = function ReactElement(type, key, ref, self, source, owner, props) {
  var element = {
    $$typeof: REACT_ELEMENT_TYPE,

    type: type,
    key: key,
    ref: ref,
    props: props,

    _owner: owner
  };

  if (process.env.NODE_ENV !== 'production') {
    element._store = {};

    if (canDefineProperty) {
      Object.defineProperty(element._store, 'validated', {
        configurable: false,
        enumerable: false,
        writable: true,
        value: false
      });

      Object.defineProperty(element, '_self', {
        configurable: false,
        enumerable: false,
        writable: false,
        value: self
      });

      Object.defineProperty(element, '_source', {
        configurable: false,
        enumerable: false,
        writable: false,
        value: source
      });
    } else {
      element._store.validated = false;
      element._self = self;
      element._source = source;
    }
    if (Object.freeze) {
      Object.freeze(element.props);
      Object.freeze(element);
    }
  }

  return element;
};

ReactElement.createElement = function (type, config, children) {
  var propName;

  var props = {};

  var key = null;
  var ref = null;
  var self = null;
  var source = null;

  if (config != null) {
    if (hasValidRef(config)) {
      ref = config.ref;
    }
    if (hasValidKey(config)) {
      key = '' + config.key;
    }

    self = config.__self === undefined ? null : config.__self;
    source = config.__source === undefined ? null : config.__source;

    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        props[propName] = config[propName];
      }
    }
  }

  var childrenLength = arguments.length - 2;
  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);
    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }
    if (process.env.NODE_ENV !== 'production') {
      if (Object.freeze) {
        Object.freeze(childArray);
      }
    }
    props.children = childArray;
  }

  if (type && type.defaultProps) {
    var defaultProps = type.defaultProps;
    for (propName in defaultProps) {
      if (props[propName] === undefined) {
        props[propName] = defaultProps[propName];
      }
    }
  }
  if (process.env.NODE_ENV !== 'production') {
    if (key || ref) {
      if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {
        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
        if (key) {
          defineKeyPropWarningGetter(props, displayName);
        }
        if (ref) {
          defineRefPropWarningGetter(props, displayName);
        }
      }
    }
  }
  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
};

ReactElement.createFactory = function (type) {
  var factory = ReactElement.createElement.bind(null, type);

  factory.type = type;
  return factory;
};

ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);

  return newElement;
};

ReactElement.cloneElement = function (element, config, children) {
  var propName;

  var props = _assign({}, element.props);

  var key = element.key;
  var ref = element.ref;

  var self = element._self;

  var source = element._source;

  var owner = element._owner;

  if (config != null) {
    if (hasValidRef(config)) {
      ref = config.ref;
      owner = ReactCurrentOwner.current;
    }
    if (hasValidKey(config)) {
      key = '' + config.key;
    }

    var defaultProps;
    if (element.type && element.type.defaultProps) {
      defaultProps = element.type.defaultProps;
    }
    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        if (config[propName] === undefined && defaultProps !== undefined) {
          props[propName] = defaultProps[propName];
        } else {
          props[propName] = config[propName];
        }
      }
    }
  }

  var childrenLength = arguments.length - 2;
  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);
    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }
    props.children = childArray;
  }

  return ReactElement(element.type, key, ref, self, source, owner, props);
};

ReactElement.isValidElement = function (object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
};

module.exports = ReactElement;
}, 403, null, "react/lib/ReactElement.js");
__d(/* react/lib/canDefineProperty.js */function(global, require, module, exports) {

'use strict';

var canDefineProperty = false;
if (process.env.NODE_ENV !== 'production') {
  try {
    Object.defineProperty({}, 'x', { get: function get() {} });
    canDefineProperty = true;
  } catch (x) {}
}

module.exports = canDefineProperty;
}, 404, null, "react/lib/canDefineProperty.js");
__d(/* react/lib/ReactElementSymbol.js */function(global, require, module, exports) {

'use strict';

var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

module.exports = REACT_ELEMENT_TYPE;
}, 405, null, "react/lib/ReactElementSymbol.js");
__d(/* react/lib/traverseAllChildren.js */function(global, require, module, exports) {

'use strict';

var _prodInvariant = require(356                   ); // 356 = ./reactProdInvariant

var ReactCurrentOwner = require(357                  ); // 357 = ./ReactCurrentOwner
var REACT_ELEMENT_TYPE = require(405                   ); // 405 = ./ReactElementSymbol

var getIteratorFn = require(407              ); // 407 = ./getIteratorFn
var invariant = require(346                 ); // 346 = fbjs/lib/invariant
var KeyEscapeUtils = require(408               ); // 408 = ./KeyEscapeUtils
var warning = require(335               ); // 335 = fbjs/lib/warning

var SEPARATOR = '.';
var SUBSEPARATOR = ':';

var didWarnAboutMaps = false;

function getComponentKey(component, index) {
  if (component && typeof component === 'object' && component.key != null) {
    return KeyEscapeUtils.escape(component.key);
  }

  return index.toString(36);
}

function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
  var type = typeof children;

  if (type === 'undefined' || type === 'boolean') {
    children = null;
  }

  if (children === null || type === 'string' || type === 'number' || type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {
    callback(traverseContext, children, nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
    return 1;
  }

  var child;
  var nextName;
  var subtreeCount = 0;
  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      child = children[i];
      nextName = nextNamePrefix + getComponentKey(child, i);
      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
    }
  } else {
    var iteratorFn = getIteratorFn(children);
    if (iteratorFn) {
      var iterator = iteratorFn.call(children);
      var step;
      if (iteratorFn !== children.entries) {
        var ii = 0;
        while (!(step = iterator.next()).done) {
          child = step.value;
          nextName = nextNamePrefix + getComponentKey(child, ii++);
          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
        }
      } else {
        if (process.env.NODE_ENV !== 'production') {
          var mapsAsChildrenAddendum = '';
          if (ReactCurrentOwner.current) {
            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
            if (mapsAsChildrenOwnerName) {
              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
            }
          }
          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;
          didWarnAboutMaps = true;
        }

        while (!(step = iterator.next()).done) {
          var entry = step.value;
          if (entry) {
            child = entry[1];
            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
          }
        }
      }
    } else if (type === 'object') {
      var addendum = '';
      if (process.env.NODE_ENV !== 'production') {
        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
        if (children._isReactElement) {
          addendum = ' It looks like you\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';
        }
        if (ReactCurrentOwner.current) {
          var name = ReactCurrentOwner.current.getName();
          if (name) {
            addendum += ' Check the render method of `' + name + '`.';
          }
        }
      }
      var childrenString = String(children);
      !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
    }
  }

  return subtreeCount;
}

function traverseAllChildren(children, callback, traverseContext) {
  if (children == null) {
    return 0;
  }

  return traverseAllChildrenImpl(children, '', callback, traverseContext);
}

module.exports = traverseAllChildren;
}, 406, null, "react/lib/traverseAllChildren.js");
__d(/* react/lib/getIteratorFn.js */function(global, require, module, exports) {

'use strict';

var ITERATOR_SYMBOL = typeof Symbol === 'function' && (typeof Symbol === 'function' ? Symbol.iterator : '@@iterator');
var FAUX_ITERATOR_SYMBOL = '@@iterator';
function getIteratorFn(maybeIterable) {
  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
  if (typeof iteratorFn === 'function') {
    return iteratorFn;
  }
}

module.exports = getIteratorFn;
}, 407, null, "react/lib/getIteratorFn.js");
__d(/* react/lib/KeyEscapeUtils.js */function(global, require, module, exports) {

'use strict';

function escape(key) {
  var escapeRegex = /[=:]/g;
  var escaperLookup = {
    '=': '=0',
    ':': '=2'
  };
  var escapedString = ('' + key).replace(escapeRegex, function (match) {
    return escaperLookup[match];
  });

  return '$' + escapedString;
}

function unescape(key) {
  var unescapeRegex = /(=0|=2)/g;
  var unescaperLookup = {
    '=0': '=',
    '=2': ':'
  };
  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);

  return ('' + keySubstring).replace(unescapeRegex, function (match) {
    return unescaperLookup[match];
  });
}

var KeyEscapeUtils = {
  escape: escape,
  unescape: unescape
};

module.exports = KeyEscapeUtils;
}, 408, null, "react/lib/KeyEscapeUtils.js");
__d(/* react/lib/ReactComponent.js */function(global, require, module, exports) {

'use strict';

var _prodInvariant = require(356                   ); // 356 = ./reactProdInvariant

var ReactNoopUpdateQueue = require(410                     ); // 410 = ./ReactNoopUpdateQueue

var canDefineProperty = require(404                  ); // 404 = ./canDefineProperty
var emptyObject = require(411                   ); // 411 = fbjs/lib/emptyObject
var invariant = require(346                 ); // 346 = fbjs/lib/invariant
var warning = require(335               ); // 335 = fbjs/lib/warning

function ReactComponent(props, context, updater) {
  this.props = props;
  this.context = context;
  this.refs = emptyObject;

  this.updater = updater || ReactNoopUpdateQueue;
}

ReactComponent.prototype.isReactComponent = {};

ReactComponent.prototype.setState = function (partialState, callback) {
  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : _prodInvariant('85') : void 0;
  this.updater.enqueueSetState(this, partialState);
  if (callback) {
    this.updater.enqueueCallback(this, callback, 'setState');
  }
};

ReactComponent.prototype.forceUpdate = function (callback) {
  this.updater.enqueueForceUpdate(this);
  if (callback) {
    this.updater.enqueueCallback(this, callback, 'forceUpdate');
  }
};

if (process.env.NODE_ENV !== 'production') {
  var deprecatedAPIs = {
    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
  };
  var defineDeprecationWarning = function defineDeprecationWarning(methodName, info) {
    if (canDefineProperty) {
      Object.defineProperty(ReactComponent.prototype, methodName, {
        get: function get() {
          process.env.NODE_ENV !== 'production' ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : void 0;
          return undefined;
        }
      });
    }
  };
  for (var fnName in deprecatedAPIs) {
    if (deprecatedAPIs.hasOwnProperty(fnName)) {
      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
    }
  }
}

module.exports = ReactComponent;
}, 409, null, "react/lib/ReactComponent.js");
__d(/* react/lib/ReactNoopUpdateQueue.js */function(global, require, module, exports) {

'use strict';

var warning = require(335               ); // 335 = fbjs/lib/warning

function warnNoop(publicInstance, callerName) {
  if (process.env.NODE_ENV !== 'production') {
    var constructor = publicInstance.constructor;
    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
  }
}

var ReactNoopUpdateQueue = {
  isMounted: function isMounted(publicInstance) {
    return false;
  },

  enqueueCallback: function enqueueCallback(publicInstance, callback) {},

  enqueueForceUpdate: function enqueueForceUpdate(publicInstance) {
    warnNoop(publicInstance, 'forceUpdate');
  },

  enqueueReplaceState: function enqueueReplaceState(publicInstance, completeState) {
    warnNoop(publicInstance, 'replaceState');
  },

  enqueueSetState: function enqueueSetState(publicInstance, partialState) {
    warnNoop(publicInstance, 'setState');
  }
};

module.exports = ReactNoopUpdateQueue;
}, 410, null, "react/lib/ReactNoopUpdateQueue.js");
__d(/* fbjs/lib/emptyObject.js */function(global, require, module, exports) {

'use strict';

var emptyObject = {};

if (process.env.NODE_ENV !== 'production') {
  Object.freeze(emptyObject);
}

module.exports = emptyObject;
}, 411, null, "fbjs/lib/emptyObject.js");
__d(/* react/lib/ReactPureComponent.js */function(global, require, module, exports) {

'use strict';

var _assign = require(400            ); // 400 = object-assign

var ReactComponent = require(409               ); // 409 = ./ReactComponent
var ReactNoopUpdateQueue = require(410                     ); // 410 = ./ReactNoopUpdateQueue

var emptyObject = require(411                   ); // 411 = fbjs/lib/emptyObject

function ReactPureComponent(props, context, updater) {
  this.props = props;
  this.context = context;
  this.refs = emptyObject;

  this.updater = updater || ReactNoopUpdateQueue;
}

function ComponentDummy() {}
ComponentDummy.prototype = ReactComponent.prototype;
ReactPureComponent.prototype = new ComponentDummy();
ReactPureComponent.prototype.constructor = ReactPureComponent;

_assign(ReactPureComponent.prototype, ReactComponent.prototype);
ReactPureComponent.prototype.isPureReactComponent = true;

module.exports = ReactPureComponent;
}, 412, null, "react/lib/ReactPureComponent.js");
__d(/* react/lib/ReactClass.js */function(global, require, module, exports) {

'use strict';

var _prodInvariant = require(356                   ), // 356 = ./reactProdInvariant
    _assign = require(400            ); // 400 = object-assign

var ReactComponent = require(409               ); // 409 = ./ReactComponent
var ReactElement = require(403             ); // 403 = ./ReactElement
var ReactPropTypeLocationNames = require(339                           ); // 339 = ./ReactPropTypeLocationNames
var ReactNoopUpdateQueue = require(410                     ); // 410 = ./ReactNoopUpdateQueue

var emptyObject = require(411                   ); // 411 = fbjs/lib/emptyObject
var invariant = require(346                 ); // 346 = fbjs/lib/invariant
var warning = require(335               ); // 335 = fbjs/lib/warning

var MIXINS_KEY = 'mixins';

function identity(fn) {
  return fn;
}

var injectedMixins = [];

var ReactClassInterface = {
  mixins: 'DEFINE_MANY',

  statics: 'DEFINE_MANY',

  propTypes: 'DEFINE_MANY',

  contextTypes: 'DEFINE_MANY',

  childContextTypes: 'DEFINE_MANY',

  getDefaultProps: 'DEFINE_MANY_MERGED',

  getInitialState: 'DEFINE_MANY_MERGED',

  getChildContext: 'DEFINE_MANY_MERGED',

  render: 'DEFINE_ONCE',

  componentWillMount: 'DEFINE_MANY',

  componentDidMount: 'DEFINE_MANY',

  componentWillReceiveProps: 'DEFINE_MANY',

  shouldComponentUpdate: 'DEFINE_ONCE',

  componentWillUpdate: 'DEFINE_MANY',

  componentDidUpdate: 'DEFINE_MANY',

  componentWillUnmount: 'DEFINE_MANY',

  updateComponent: 'OVERRIDE_BASE'

};

var RESERVED_SPEC_KEYS = {
  displayName: function displayName(Constructor, _displayName) {
    Constructor.displayName = _displayName;
  },
  mixins: function mixins(Constructor, _mixins) {
    if (_mixins) {
      for (var i = 0; i < _mixins.length; i++) {
        mixSpecIntoComponent(Constructor, _mixins[i]);
      }
    }
  },
  childContextTypes: function childContextTypes(Constructor, _childContextTypes) {
    if (process.env.NODE_ENV !== 'production') {
      validateTypeDef(Constructor, _childContextTypes, 'childContext');
    }
    Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, _childContextTypes);
  },
  contextTypes: function contextTypes(Constructor, _contextTypes) {
    if (process.env.NODE_ENV !== 'production') {
      validateTypeDef(Constructor, _contextTypes, 'context');
    }
    Constructor.contextTypes = _assign({}, Constructor.contextTypes, _contextTypes);
  },

  getDefaultProps: function getDefaultProps(Constructor, _getDefaultProps) {
    if (Constructor.getDefaultProps) {
      Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, _getDefaultProps);
    } else {
      Constructor.getDefaultProps = _getDefaultProps;
    }
  },
  propTypes: function propTypes(Constructor, _propTypes) {
    if (process.env.NODE_ENV !== 'production') {
      validateTypeDef(Constructor, _propTypes, 'prop');
    }
    Constructor.propTypes = _assign({}, Constructor.propTypes, _propTypes);
  },
  statics: function statics(Constructor, _statics) {
    mixStaticSpecIntoComponent(Constructor, _statics);
  },
  autobind: function autobind() {} };

function validateTypeDef(Constructor, typeDef, location) {
  for (var propName in typeDef) {
    if (typeDef.hasOwnProperty(propName)) {
      process.env.NODE_ENV !== 'production' ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : void 0;
    }
  }
}

function validateMethodOverride(isAlreadyDefined, name) {
  var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;

  if (ReactClassMixin.hasOwnProperty(name)) {
    !(specPolicy === 'OVERRIDE_BASE') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.', name) : _prodInvariant('73', name) : void 0;
  }

  if (isAlreadyDefined) {
    !(specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('74', name) : void 0;
  }
}

function mixSpecIntoComponent(Constructor, spec) {
  if (!spec) {
    if (process.env.NODE_ENV !== 'production') {
      var typeofSpec = typeof spec;
      var isMixinValid = typeofSpec === 'object' && spec !== null;

      process.env.NODE_ENV !== 'production' ? warning(isMixinValid, '%s: You\'re attempting to include a mixin that is either null ' + 'or not an object. Check the mixins included by the component, ' + 'as well as any mixins they include themselves. ' + 'Expected object but got %s.', Constructor.displayName || 'ReactClass', spec === null ? null : typeofSpec) : void 0;
    }

    return;
  }

  !(typeof spec !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to use a component class or function as a mixin. Instead, just use a regular object.') : _prodInvariant('75') : void 0;
  !!ReactElement.isValidElement(spec) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to use a component as a mixin. Instead, just use a regular object.') : _prodInvariant('76') : void 0;

  var proto = Constructor.prototype;
  var autoBindPairs = proto.__reactAutoBindPairs;

  if (spec.hasOwnProperty(MIXINS_KEY)) {
    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
  }

  for (var name in spec) {
    if (!spec.hasOwnProperty(name)) {
      continue;
    }

    if (name === MIXINS_KEY) {
      continue;
    }

    var property = spec[name];
    var isAlreadyDefined = proto.hasOwnProperty(name);
    validateMethodOverride(isAlreadyDefined, name);

    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
      RESERVED_SPEC_KEYS[name](Constructor, property);
    } else {
      var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
      var isFunction = typeof property === 'function';
      var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;

      if (shouldAutoBind) {
        autoBindPairs.push(name, property);
        proto[name] = property;
      } else {
        if (isAlreadyDefined) {
          var specPolicy = ReactClassInterface[name];

          !(isReactClassMethod && (specPolicy === 'DEFINE_MANY_MERGED' || specPolicy === 'DEFINE_MANY')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.', specPolicy, name) : _prodInvariant('77', specPolicy, name) : void 0;

          if (specPolicy === 'DEFINE_MANY_MERGED') {
            proto[name] = createMergedResultFunction(proto[name], property);
          } else if (specPolicy === 'DEFINE_MANY') {
            proto[name] = createChainedFunction(proto[name], property);
          }
        } else {
          proto[name] = property;
          if (process.env.NODE_ENV !== 'production') {
            if (typeof property === 'function' && spec.displayName) {
              proto[name].displayName = spec.displayName + '_' + name;
            }
          }
        }
      }
    }
  }
}

function mixStaticSpecIntoComponent(Constructor, statics) {
  if (!statics) {
    return;
  }
  for (var name in statics) {
    var property = statics[name];
    if (!statics.hasOwnProperty(name)) {
      continue;
    }

    var isReserved = name in RESERVED_SPEC_KEYS;
    !!isReserved ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define a reserved property, `%s`, that shouldn\'t be on the "statics" key. Define it as an instance property instead; it will still be accessible on the constructor.', name) : _prodInvariant('78', name) : void 0;

    var isInherited = name in Constructor;
    !!isInherited ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('79', name) : void 0;
    Constructor[name] = property;
  }
}

function mergeIntoWithNoDuplicateKeys(one, two) {
  !(one && two && typeof one === 'object' && typeof two === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : _prodInvariant('80') : void 0;

  for (var key in two) {
    if (two.hasOwnProperty(key)) {
      !(one[key] === undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.', key) : _prodInvariant('81', key) : void 0;
      one[key] = two[key];
    }
  }
  return one;
}

function createMergedResultFunction(one, two) {
  return function mergedResult() {
    var a = one.apply(this, arguments);
    var b = two.apply(this, arguments);
    if (a == null) {
      return b;
    } else if (b == null) {
      return a;
    }
    var c = {};
    mergeIntoWithNoDuplicateKeys(c, a);
    mergeIntoWithNoDuplicateKeys(c, b);
    return c;
  };
}

function createChainedFunction(one, two) {
  return function chainedFunction() {
    one.apply(this, arguments);
    two.apply(this, arguments);
  };
}

function bindAutoBindMethod(component, method) {
  var boundMethod = method.bind(component);
  if (process.env.NODE_ENV !== 'production') {
    boundMethod.__reactBoundContext = component;
    boundMethod.__reactBoundMethod = method;
    boundMethod.__reactBoundArguments = null;
    var componentName = component.constructor.displayName;
    var _bind = boundMethod.bind;
    boundMethod.bind = function (newThis) {
      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      if (newThis !== component && newThis !== null) {
        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : void 0;
      } else if (!args.length) {
        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : void 0;
        return boundMethod;
      }
      var reboundMethod = _bind.apply(boundMethod, arguments);
      reboundMethod.__reactBoundContext = component;
      reboundMethod.__reactBoundMethod = method;
      reboundMethod.__reactBoundArguments = args;
      return reboundMethod;
    };
  }
  return boundMethod;
}

function bindAutoBindMethods(component) {
  var pairs = component.__reactAutoBindPairs;
  for (var i = 0; i < pairs.length; i += 2) {
    var autoBindKey = pairs[i];
    var method = pairs[i + 1];
    component[autoBindKey] = bindAutoBindMethod(component, method);
  }
}

var ReactClassMixin = {
  replaceState: function replaceState(newState, callback) {
    this.updater.enqueueReplaceState(this, newState);
    if (callback) {
      this.updater.enqueueCallback(this, callback, 'replaceState');
    }
  },

  isMounted: function isMounted() {
    return this.updater.isMounted(this);
  }
};

var ReactClassComponent = function ReactClassComponent() {};
_assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);

var ReactClass = {
  createClass: function createClass(spec) {
    var Constructor = identity(function (props, context, updater) {

      if (process.env.NODE_ENV !== 'production') {
        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : void 0;
      }

      if (this.__reactAutoBindPairs.length) {
        bindAutoBindMethods(this);
      }

      this.props = props;
      this.context = context;
      this.refs = emptyObject;
      this.updater = updater || ReactNoopUpdateQueue;

      this.state = null;

      var initialState = this.getInitialState ? this.getInitialState() : null;
      if (process.env.NODE_ENV !== 'production') {
        if (initialState === undefined && this.getInitialState._isMockFunction) {
          initialState = null;
        }
      }
      !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : _prodInvariant('82', Constructor.displayName || 'ReactCompositeComponent') : void 0;

      this.state = initialState;
    });
    Constructor.prototype = new ReactClassComponent();
    Constructor.prototype.constructor = Constructor;
    Constructor.prototype.__reactAutoBindPairs = [];

    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));

    mixSpecIntoComponent(Constructor, spec);

    if (Constructor.getDefaultProps) {
      Constructor.defaultProps = Constructor.getDefaultProps();
    }

    if (process.env.NODE_ENV !== 'production') {
      if (Constructor.getDefaultProps) {
        Constructor.getDefaultProps.isReactClassApproved = {};
      }
      if (Constructor.prototype.getInitialState) {
        Constructor.prototype.getInitialState.isReactClassApproved = {};
      }
    }

    !Constructor.prototype.render ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : _prodInvariant('83') : void 0;

    if (process.env.NODE_ENV !== 'production') {
      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : void 0;
    }

    for (var methodName in ReactClassInterface) {
      if (!Constructor.prototype[methodName]) {
        Constructor.prototype[methodName] = null;
      }
    }

    return Constructor;
  },

  injection: {
    injectMixin: function injectMixin(mixin) {
      injectedMixins.push(mixin);
    }
  }

};

module.exports = ReactClass;
}, 413, null, "react/lib/ReactClass.js");
__d(/* react/lib/ReactDOMFactories.js */function(global, require, module, exports) {

'use strict';

var ReactElement = require(403             ); // 403 = ./ReactElement

var createDOMFactory = ReactElement.createFactory;
if (process.env.NODE_ENV !== 'production') {
  var ReactElementValidator = require(415                      ); // 415 = ./ReactElementValidator
  createDOMFactory = ReactElementValidator.createFactory;
}

var ReactDOMFactories = {
  a: createDOMFactory('a'),
  abbr: createDOMFactory('abbr'),
  address: createDOMFactory('address'),
  area: createDOMFactory('area'),
  article: createDOMFactory('article'),
  aside: createDOMFactory('aside'),
  audio: createDOMFactory('audio'),
  b: createDOMFactory('b'),
  base: createDOMFactory('base'),
  bdi: createDOMFactory('bdi'),
  bdo: createDOMFactory('bdo'),
  big: createDOMFactory('big'),
  blockquote: createDOMFactory('blockquote'),
  body: createDOMFactory('body'),
  br: createDOMFactory('br'),
  button: createDOMFactory('button'),
  canvas: createDOMFactory('canvas'),
  caption: createDOMFactory('caption'),
  cite: createDOMFactory('cite'),
  code: createDOMFactory('code'),
  col: createDOMFactory('col'),
  colgroup: createDOMFactory('colgroup'),
  data: createDOMFactory('data'),
  datalist: createDOMFactory('datalist'),
  dd: createDOMFactory('dd'),
  del: createDOMFactory('del'),
  details: createDOMFactory('details'),
  dfn: createDOMFactory('dfn'),
  dialog: createDOMFactory('dialog'),
  div: createDOMFactory('div'),
  dl: createDOMFactory('dl'),
  dt: createDOMFactory('dt'),
  em: createDOMFactory('em'),
  embed: createDOMFactory('embed'),
  fieldset: createDOMFactory('fieldset'),
  figcaption: createDOMFactory('figcaption'),
  figure: createDOMFactory('figure'),
  footer: createDOMFactory('footer'),
  form: createDOMFactory('form'),
  h1: createDOMFactory('h1'),
  h2: createDOMFactory('h2'),
  h3: createDOMFactory('h3'),
  h4: createDOMFactory('h4'),
  h5: createDOMFactory('h5'),
  h6: createDOMFactory('h6'),
  head: createDOMFactory('head'),
  header: createDOMFactory('header'),
  hgroup: createDOMFactory('hgroup'),
  hr: createDOMFactory('hr'),
  html: createDOMFactory('html'),
  i: createDOMFactory('i'),
  iframe: createDOMFactory('iframe'),
  img: createDOMFactory('img'),
  input: createDOMFactory('input'),
  ins: createDOMFactory('ins'),
  kbd: createDOMFactory('kbd'),
  keygen: createDOMFactory('keygen'),
  label: createDOMFactory('label'),
  legend: createDOMFactory('legend'),
  li: createDOMFactory('li'),
  link: createDOMFactory('link'),
  main: createDOMFactory('main'),
  map: createDOMFactory('map'),
  mark: createDOMFactory('mark'),
  menu: createDOMFactory('menu'),
  menuitem: createDOMFactory('menuitem'),
  meta: createDOMFactory('meta'),
  meter: createDOMFactory('meter'),
  nav: createDOMFactory('nav'),
  noscript: createDOMFactory('noscript'),
  object: createDOMFactory('object'),
  ol: createDOMFactory('ol'),
  optgroup: createDOMFactory('optgroup'),
  option: createDOMFactory('option'),
  output: createDOMFactory('output'),
  p: createDOMFactory('p'),
  param: createDOMFactory('param'),
  picture: createDOMFactory('picture'),
  pre: createDOMFactory('pre'),
  progress: createDOMFactory('progress'),
  q: createDOMFactory('q'),
  rp: createDOMFactory('rp'),
  rt: createDOMFactory('rt'),
  ruby: createDOMFactory('ruby'),
  s: createDOMFactory('s'),
  samp: createDOMFactory('samp'),
  script: createDOMFactory('script'),
  section: createDOMFactory('section'),
  select: createDOMFactory('select'),
  small: createDOMFactory('small'),
  source: createDOMFactory('source'),
  span: createDOMFactory('span'),
  strong: createDOMFactory('strong'),
  style: createDOMFactory('style'),
  sub: createDOMFactory('sub'),
  summary: createDOMFactory('summary'),
  sup: createDOMFactory('sup'),
  table: createDOMFactory('table'),
  tbody: createDOMFactory('tbody'),
  td: createDOMFactory('td'),
  textarea: createDOMFactory('textarea'),
  tfoot: createDOMFactory('tfoot'),
  th: createDOMFactory('th'),
  thead: createDOMFactory('thead'),
  time: createDOMFactory('time'),
  title: createDOMFactory('title'),
  tr: createDOMFactory('tr'),
  track: createDOMFactory('track'),
  u: createDOMFactory('u'),
  ul: createDOMFactory('ul'),
  'var': createDOMFactory('var'),
  video: createDOMFactory('video'),
  wbr: createDOMFactory('wbr'),

  circle: createDOMFactory('circle'),
  clipPath: createDOMFactory('clipPath'),
  defs: createDOMFactory('defs'),
  ellipse: createDOMFactory('ellipse'),
  g: createDOMFactory('g'),
  image: createDOMFactory('image'),
  line: createDOMFactory('line'),
  linearGradient: createDOMFactory('linearGradient'),
  mask: createDOMFactory('mask'),
  path: createDOMFactory('path'),
  pattern: createDOMFactory('pattern'),
  polygon: createDOMFactory('polygon'),
  polyline: createDOMFactory('polyline'),
  radialGradient: createDOMFactory('radialGradient'),
  rect: createDOMFactory('rect'),
  stop: createDOMFactory('stop'),
  svg: createDOMFactory('svg'),
  text: createDOMFactory('text'),
  tspan: createDOMFactory('tspan')
};

module.exports = ReactDOMFactories;
}, 414, null, "react/lib/ReactDOMFactories.js");
__d(/* react/lib/ReactElementValidator.js */function(global, require, module, exports) {

'use strict';

var ReactCurrentOwner = require(357                  ); // 357 = ./ReactCurrentOwner
var ReactComponentTreeHook = require(355                       ); // 355 = ./ReactComponentTreeHook
var ReactElement = require(403             ); // 403 = ./ReactElement

var checkReactTypeSpec = require(416                   ); // 416 = ./checkReactTypeSpec

var canDefineProperty = require(404                  ); // 404 = ./canDefineProperty
var getIteratorFn = require(407              ); // 407 = ./getIteratorFn
var warning = require(335               ); // 335 = fbjs/lib/warning

function getDeclarationErrorAddendum() {
  if (ReactCurrentOwner.current) {
    var name = ReactCurrentOwner.current.getName();
    if (name) {
      return ' Check the render method of `' + name + '`.';
    }
  }
  return '';
}

var ownerHasKeyUseWarning = {};

function getCurrentComponentErrorInfo(parentType) {
  var info = getDeclarationErrorAddendum();

  if (!info) {
    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
    if (parentName) {
      info = ' Check the top-level render call using <' + parentName + '>.';
    }
  }
  return info;
}

function validateExplicitKey(element, parentType) {
  if (!element._store || element._store.validated || element.key != null) {
    return;
  }
  element._store.validated = true;

  var memoizer = ownerHasKeyUseWarning.uniqueKey || (ownerHasKeyUseWarning.uniqueKey = {});

  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
  if (memoizer[currentComponentErrorInfo]) {
    return;
  }
  memoizer[currentComponentErrorInfo] = true;

  var childOwner = '';
  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
    childOwner = ' It was passed a child from ' + element._owner.getName() + '.';
  }

  process.env.NODE_ENV !== 'production' ? warning(false, 'Each child in an array or iterator should have a unique "key" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.%s', currentComponentErrorInfo, childOwner, ReactComponentTreeHook.getCurrentStackAddendum(element)) : void 0;
}

function validateChildKeys(node, parentType) {
  if (typeof node !== 'object') {
    return;
  }
  if (Array.isArray(node)) {
    for (var i = 0; i < node.length; i++) {
      var child = node[i];
      if (ReactElement.isValidElement(child)) {
        validateExplicitKey(child, parentType);
      }
    }
  } else if (ReactElement.isValidElement(node)) {
    if (node._store) {
      node._store.validated = true;
    }
  } else if (node) {
    var iteratorFn = getIteratorFn(node);

    if (iteratorFn) {
      if (iteratorFn !== node.entries) {
        var iterator = iteratorFn.call(node);
        var step;
        while (!(step = iterator.next()).done) {
          if (ReactElement.isValidElement(step.value)) {
            validateExplicitKey(step.value, parentType);
          }
        }
      }
    }
  }
}

function validatePropTypes(element) {
  var componentClass = element.type;
  if (typeof componentClass !== 'function') {
    return;
  }
  var name = componentClass.displayName || componentClass.name;
  if (componentClass.propTypes) {
    checkReactTypeSpec(componentClass.propTypes, element.props, 'prop', name, element, null);
  }
  if (typeof componentClass.getDefaultProps === 'function') {
    process.env.NODE_ENV !== 'production' ? warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : void 0;
  }
}

var ReactElementValidator = {

  createElement: function createElement(type, props, children) {
    var validType = typeof type === 'string' || typeof type === 'function';

    if (!validType) {
      if (typeof type !== 'function' && typeof type !== 'string') {
        var info = '';
        if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
          info += ' You likely forgot to export your component from the file ' + 'it\'s defined in.';
        }
        info += getDeclarationErrorAddendum();
        process.env.NODE_ENV !== 'production' ? warning(false, 'React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', type == null ? type : typeof type, info) : void 0;
      }
    }

    var element = ReactElement.createElement.apply(this, arguments);

    if (element == null) {
      return element;
    }

    if (validType) {
      for (var i = 2; i < arguments.length; i++) {
        validateChildKeys(arguments[i], type);
      }
    }

    validatePropTypes(element);

    return element;
  },

  createFactory: function createFactory(type) {
    var validatedFactory = ReactElementValidator.createElement.bind(null, type);

    validatedFactory.type = type;

    if (process.env.NODE_ENV !== 'production') {
      if (canDefineProperty) {
        Object.defineProperty(validatedFactory, 'type', {
          enumerable: false,
          get: function get() {
            process.env.NODE_ENV !== 'production' ? warning(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.') : void 0;
            Object.defineProperty(this, 'type', {
              value: type
            });
            return type;
          }
        });
      }
    }

    return validatedFactory;
  },

  cloneElement: function cloneElement(element, props, children) {
    var newElement = ReactElement.cloneElement.apply(this, arguments);
    for (var i = 2; i < arguments.length; i++) {
      validateChildKeys(arguments[i], newElement.type);
    }
    validatePropTypes(newElement);
    return newElement;
  }

};

module.exports = ReactElementValidator;
}, 415, null, "react/lib/ReactElementValidator.js");
__d(/* react/lib/checkReactTypeSpec.js */function(global, require, module, exports) {

'use strict';

var _prodInvariant = require(356                   ); // 356 = ./reactProdInvariant

var ReactPropTypeLocationNames = require(339                           ); // 339 = ./ReactPropTypeLocationNames
var ReactPropTypesSecret = require(417                     ); // 417 = ./ReactPropTypesSecret

var invariant = require(346                 ); // 346 = fbjs/lib/invariant
var warning = require(335               ); // 335 = fbjs/lib/warning

var ReactComponentTreeHook;

if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
  ReactComponentTreeHook = require(355                       ); // 355 = ./ReactComponentTreeHook
}

var loggedTypeFailures = {};

function checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {
  for (var typeSpecName in typeSpecs) {
    if (typeSpecs.hasOwnProperty(typeSpecName)) {
      var error;

      try {
        !(typeof typeSpecs[typeSpecName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;
        error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
      } catch (ex) {
        error = ex;
      }
      process.env.NODE_ENV !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error) : void 0;
      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
        loggedTypeFailures[error.message] = true;

        var componentStackInfo = '';

        if (process.env.NODE_ENV !== 'production') {
          if (!ReactComponentTreeHook) {
            ReactComponentTreeHook = require(355                       ); // 355 = ./ReactComponentTreeHook
          }
          if (debugID !== null) {
            componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(debugID);
          } else if (element !== null) {
            componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(element);
          }
        }

        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;
      }
    }
  }
}

module.exports = checkReactTypeSpec;
}, 416, null, "react/lib/checkReactTypeSpec.js");
__d(/* react/lib/ReactPropTypesSecret.js */function(global, require, module, exports) {

'use strict';

var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;
}, 417, null, "react/lib/ReactPropTypesSecret.js");
__d(/* react/lib/ReactPropTypes.js */function(global, require, module, exports) {

'use strict';

var ReactElement = require(403             ); // 403 = ./ReactElement
var ReactPropTypeLocationNames = require(339                           ); // 339 = ./ReactPropTypeLocationNames
var ReactPropTypesSecret = require(417                     ); // 417 = ./ReactPropTypesSecret

var emptyFunction = require(336                     ); // 336 = fbjs/lib/emptyFunction
var getIteratorFn = require(407              ); // 407 = ./getIteratorFn
var warning = require(335               ); // 335 = fbjs/lib/warning

var ANONYMOUS = '<<anonymous>>';

var ReactPropTypes = {
  array: createPrimitiveTypeChecker('array'),
  bool: createPrimitiveTypeChecker('boolean'),
  func: createPrimitiveTypeChecker('function'),
  number: createPrimitiveTypeChecker('number'),
  object: createPrimitiveTypeChecker('object'),
  string: createPrimitiveTypeChecker('string'),
  symbol: createPrimitiveTypeChecker('symbol'),

  any: createAnyTypeChecker(),
  arrayOf: createArrayOfTypeChecker,
  element: createElementTypeChecker(),
  instanceOf: createInstanceTypeChecker,
  node: createNodeChecker(),
  objectOf: createObjectOfTypeChecker,
  oneOf: createEnumTypeChecker,
  oneOfType: createUnionTypeChecker,
  shape: createShapeTypeChecker
};

function is(x, y) {
  if (x === y) {
    return x !== 0 || 1 / x === 1 / y;
  } else {
    return x !== x && y !== y;
  }
}

function PropTypeError(message) {
  this.message = message;
  this.stack = '';
}

PropTypeError.prototype = Error.prototype;

function createChainableTypeChecker(validate) {
  if (process.env.NODE_ENV !== 'production') {
    var manualPropTypeCallCache = {};
  }
  function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
    componentName = componentName || ANONYMOUS;
    propFullName = propFullName || propName;
    if (process.env.NODE_ENV !== 'production') {
      if (secret !== ReactPropTypesSecret && typeof console !== 'undefined') {
        var cacheKey = componentName + ':' + propName;
        if (!manualPropTypeCallCache[cacheKey]) {
          process.env.NODE_ENV !== 'production' ? warning(false, 'You are manually calling a React.PropTypes validation ' + 'function for the `%s` prop on `%s`. This is deprecated ' + 'and will not work in production with the next major version. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.', propFullName, componentName) : void 0;
          manualPropTypeCallCache[cacheKey] = true;
        }
      }
    }
    if (props[propName] == null) {
      var locationName = ReactPropTypeLocationNames[location];
      if (isRequired) {
        if (props[propName] === null) {
          return new PropTypeError('The ' + locationName + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
        }
        return new PropTypeError('The ' + locationName + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
      }
      return null;
    } else {
      return validate(props, propName, componentName, location, propFullName);
    }
  }

  var chainedCheckType = checkType.bind(null, false);
  chainedCheckType.isRequired = checkType.bind(null, true);

  return chainedCheckType;
}

function createPrimitiveTypeChecker(expectedType) {
  function validate(props, propName, componentName, location, propFullName, secret) {
    var propValue = props[propName];
    var propType = getPropType(propValue);
    if (propType !== expectedType) {
      var locationName = ReactPropTypeLocationNames[location];

      var preciseType = getPreciseType(propValue);

      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createAnyTypeChecker() {
  return createChainableTypeChecker(emptyFunction.thatReturns(null));
}

function createArrayOfTypeChecker(typeChecker) {
  function validate(props, propName, componentName, location, propFullName) {
    if (typeof typeChecker !== 'function') {
      return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
    }
    var propValue = props[propName];
    if (!Array.isArray(propValue)) {
      var locationName = ReactPropTypeLocationNames[location];
      var propType = getPropType(propValue);
      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
    }
    for (var i = 0; i < propValue.length; i++) {
      var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
      if (error instanceof Error) {
        return error;
      }
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createElementTypeChecker() {
  function validate(props, propName, componentName, location, propFullName) {
    var propValue = props[propName];
    if (!ReactElement.isValidElement(propValue)) {
      var locationName = ReactPropTypeLocationNames[location];
      var propType = getPropType(propValue);
      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createInstanceTypeChecker(expectedClass) {
  function validate(props, propName, componentName, location, propFullName) {
    if (!(props[propName] instanceof expectedClass)) {
      var locationName = ReactPropTypeLocationNames[location];
      var expectedClassName = expectedClass.name || ANONYMOUS;
      var actualClassName = getClassName(props[propName]);
      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createEnumTypeChecker(expectedValues) {
  if (!Array.isArray(expectedValues)) {
    process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;
    return emptyFunction.thatReturnsNull;
  }

  function validate(props, propName, componentName, location, propFullName) {
    var propValue = props[propName];
    for (var i = 0; i < expectedValues.length; i++) {
      if (is(propValue, expectedValues[i])) {
        return null;
      }
    }

    var locationName = ReactPropTypeLocationNames[location];
    var valuesString = JSON.stringify(expectedValues);
    return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
  }
  return createChainableTypeChecker(validate);
}

function createObjectOfTypeChecker(typeChecker) {
  function validate(props, propName, componentName, location, propFullName) {
    if (typeof typeChecker !== 'function') {
      return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
    }
    var propValue = props[propName];
    var propType = getPropType(propValue);
    if (propType !== 'object') {
      var locationName = ReactPropTypeLocationNames[location];
      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
    }
    for (var key in propValue) {
      if (propValue.hasOwnProperty(key)) {
        var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error instanceof Error) {
          return error;
        }
      }
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createUnionTypeChecker(arrayOfTypeCheckers) {
  if (!Array.isArray(arrayOfTypeCheckers)) {
    process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
    return emptyFunction.thatReturnsNull;
  }

  function validate(props, propName, componentName, location, propFullName) {
    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
        return null;
      }
    }

    var locationName = ReactPropTypeLocationNames[location];
    return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
  }
  return createChainableTypeChecker(validate);
}

function createNodeChecker() {
  function validate(props, propName, componentName, location, propFullName) {
    if (!isNode(props[propName])) {
      var locationName = ReactPropTypeLocationNames[location];
      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createShapeTypeChecker(shapeTypes) {
  function validate(props, propName, componentName, location, propFullName) {
    var propValue = props[propName];
    var propType = getPropType(propValue);
    if (propType !== 'object') {
      var locationName = ReactPropTypeLocationNames[location];
      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
    }
    for (var key in shapeTypes) {
      var checker = shapeTypes[key];
      if (!checker) {
        continue;
      }
      var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
      if (error) {
        return error;
      }
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function isNode(propValue) {
  switch (typeof propValue) {
    case 'number':
    case 'string':
    case 'undefined':
      return true;
    case 'boolean':
      return !propValue;
    case 'object':
      if (Array.isArray(propValue)) {
        return propValue.every(isNode);
      }
      if (propValue === null || ReactElement.isValidElement(propValue)) {
        return true;
      }

      var iteratorFn = getIteratorFn(propValue);
      if (iteratorFn) {
        var iterator = iteratorFn.call(propValue);
        var step;
        if (iteratorFn !== propValue.entries) {
          while (!(step = iterator.next()).done) {
            if (!isNode(step.value)) {
              return false;
            }
          }
        } else {
          while (!(step = iterator.next()).done) {
            var entry = step.value;
            if (entry) {
              if (!isNode(entry[1])) {
                return false;
              }
            }
          }
        }
      } else {
        return false;
      }

      return true;
    default:
      return false;
  }
}

function isSymbol(propType, propValue) {
  if (propType === 'symbol') {
    return true;
  }

  if (propValue['@@toStringTag'] === 'Symbol') {
    return true;
  }

  if (typeof Symbol === 'function' && propValue instanceof Symbol) {
    return true;
  }

  return false;
}

function getPropType(propValue) {
  var propType = typeof propValue;
  if (Array.isArray(propValue)) {
    return 'array';
  }
  if (propValue instanceof RegExp) {
    return 'object';
  }
  if (isSymbol(propType, propValue)) {
    return 'symbol';
  }
  return propType;
}

function getPreciseType(propValue) {
  var propType = getPropType(propValue);
  if (propType === 'object') {
    if (propValue instanceof Date) {
      return 'date';
    } else if (propValue instanceof RegExp) {
      return 'regexp';
    }
  }
  return propType;
}

function getClassName(propValue) {
  if (!propValue.constructor || !propValue.constructor.name) {
    return ANONYMOUS;
  }
  return propValue.constructor.name;
}

module.exports = ReactPropTypes;
}, 418, null, "react/lib/ReactPropTypes.js");
__d(/* react/lib/ReactVersion.js */function(global, require, module, exports) {

'use strict';

module.exports = '15.4.2';
}, 419, null, "react/lib/ReactVersion.js");
__d(/* react/lib/onlyChild.js */function(global, require, module, exports) {
'use strict';

var _prodInvariant = require(356                   ); // 356 = ./reactProdInvariant

var ReactElement = require(403             ); // 403 = ./ReactElement

var invariant = require(346                 ); // 346 = fbjs/lib/invariant

function onlyChild(children) {
  !ReactElement.isValidElement(children) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'React.Children.only expected to receive a single React element child.') : _prodInvariant('143') : void 0;
  return children;
}

module.exports = onlyChild;
}, 420, null, "react/lib/onlyChild.js");
__d(/* StyleSheet */function(global, require, module, exports) {
'use strict';

var PixelRatio = require(422         ); // 422 = PixelRatio
var ReactNativePropRegistry = require(343                      ); // 343 = ReactNativePropRegistry
var ReactNativeStyleAttributes = require(424                         ); // 424 = ReactNativeStyleAttributes
var StyleSheetValidation = require(440                   ); // 440 = StyleSheetValidation

var flatten = require(345           ); // 345 = flattenStyle

var hairlineWidth = PixelRatio.roundToNearestPixel(0.4);
if (hairlineWidth === 0) {
  hairlineWidth = 1 / PixelRatio.get();
}

var absoluteFillObject = {
  position: 'absolute',
  left: 0,
  right: 0,
  top: 0,
  bottom: 0
};
var absoluteFill = ReactNativePropRegistry.register(absoluteFillObject);
module.exports = {
  hairlineWidth: hairlineWidth,

  absoluteFill: absoluteFill,

  absoluteFillObject: absoluteFillObject,

  flatten: flatten,

  setStyleAttributePreprocessor: function setStyleAttributePreprocessor(property, process) {
    var value = void 0;

    if (typeof ReactNativeStyleAttributes[property] === 'string') {
      value = {};
    } else if (typeof ReactNativeStyleAttributes[property] === 'object') {
      value = ReactNativeStyleAttributes[property];
    } else {
      console.error(property + ' is not a valid style attribute');
      return;
    }

    if (__DEV__ && typeof value.process === 'function') {
      console.warn('Overwriting ' + property + ' style attribute preprocessor');
    }

    ReactNativeStyleAttributes[property] = babelHelpers.extends({}, value, { process: process });
  },
  create: function create(obj) {
    var result = {};
    for (var key in obj) {
      StyleSheetValidation.validateStyle(key, obj);
      result[key] = ReactNativePropRegistry.register(obj[key]);
    }
    return result;
  }
};
}, 421, null, "StyleSheet");
__d(/* PixelRatio */function(global, require, module, exports) {
'use strict';

var Dimensions = require(423         ); // 423 = Dimensions

var PixelRatio = function () {
  function PixelRatio() {
    babelHelpers.classCallCheck(this, PixelRatio);
  }

  babelHelpers.createClass(PixelRatio, null, [{
    key: 'get',
    value: function get() {
      return Dimensions.get('window').scale;
    }
  }, {
    key: 'getFontScale',
    value: function getFontScale() {
      return Dimensions.get('window').fontScale || PixelRatio.get();
    }
  }, {
    key: 'getPixelSizeForLayoutSize',
    value: function getPixelSizeForLayoutSize(layoutSize) {
      return Math.round(layoutSize * PixelRatio.get());
    }
  }, {
    key: 'roundToNearestPixel',
    value: function roundToNearestPixel(layoutSize) {
      var ratio = PixelRatio.get();
      return Math.round(layoutSize * ratio) / ratio;
    }
  }, {
    key: 'startDetecting',
    value: function startDetecting() {}
  }]);
  return PixelRatio;
}();

module.exports = PixelRatio;
}, 422, null, "PixelRatio");
__d(/* Dimensions */function(global, require, module, exports) {
'use strict';

var Platform = require(348       ); // 348 = Platform
var UIManager = require(395        ); // 395 = UIManager
var RCTDeviceEventEmitter = require(379                    ); // 379 = RCTDeviceEventEmitter

var invariant = require(346                 ); // 346 = fbjs/lib/invariant

var dimensions = {};

var Dimensions = function () {
  function Dimensions() {
    babelHelpers.classCallCheck(this, Dimensions);
  }

  babelHelpers.createClass(Dimensions, null, [{
    key: 'set',
    value: function set(dims) {
      if (dims && dims.windowPhysicalPixels) {
        dims = JSON.parse(JSON.stringify(dims));

        var windowPhysicalPixels = dims.windowPhysicalPixels;
        dims.window = {
          width: windowPhysicalPixels.width / windowPhysicalPixels.scale,
          height: windowPhysicalPixels.height / windowPhysicalPixels.scale,
          scale: windowPhysicalPixels.scale,
          fontScale: windowPhysicalPixels.fontScale
        };
        if (Platform.OS === 'android') {
          var screenPhysicalPixels = dims.screenPhysicalPixels;
          dims.screen = {
            width: screenPhysicalPixels.width / screenPhysicalPixels.scale,
            height: screenPhysicalPixels.height / screenPhysicalPixels.scale,
            scale: screenPhysicalPixels.scale,
            fontScale: screenPhysicalPixels.fontScale
          };

          delete dims.screenPhysicalPixels;
        } else {
          dims.screen = dims.window;
        }

        delete dims.windowPhysicalPixels;
      }

      babelHelpers.extends(dimensions, dims);
    }
  }, {
    key: 'get',
    value: function get(dim) {
      invariant(dimensions[dim], 'No dimension set for key ' + dim);
      return dimensions[dim];
    }
  }]);
  return Dimensions;
}();

Dimensions.set(UIManager.Dimensions);
RCTDeviceEventEmitter.addListener('didUpdateDimensions', function (update) {
  Dimensions.set(update);
});

module.exports = Dimensions;
}, 423, null, "Dimensions");
__d(/* ReactNativeStyleAttributes */function(global, require, module, exports) {

'use strict';

var ImageStylePropTypes = require(425                  ); // 425 = ImageStylePropTypes
var TextStylePropTypes = require(433                 ); // 433 = TextStylePropTypes
var ViewStylePropTypes = require(434                 ); // 434 = ViewStylePropTypes

var keyMirror = require(427                 ); // 427 = fbjs/lib/keyMirror
var matricesDiffer = require(435             ); // 435 = matricesDiffer
var processColor = require(436           ); // 436 = processColor
var processTransform = require(437               ); // 437 = processTransform
var sizesDiffer = require(439          ); // 439 = sizesDiffer

var ReactNativeStyleAttributes = babelHelpers.extends({}, keyMirror(ViewStylePropTypes), keyMirror(TextStylePropTypes), keyMirror(ImageStylePropTypes));

ReactNativeStyleAttributes.transform = { process: processTransform };
ReactNativeStyleAttributes.transformMatrix = { diff: matricesDiffer };
ReactNativeStyleAttributes.shadowOffset = { diff: sizesDiffer };

ReactNativeStyleAttributes.decomposedMatrix = 'decomposedMatrix';

var colorAttributes = { process: processColor };
ReactNativeStyleAttributes.backgroundColor = colorAttributes;
ReactNativeStyleAttributes.borderBottomColor = colorAttributes;
ReactNativeStyleAttributes.borderColor = colorAttributes;
ReactNativeStyleAttributes.borderLeftColor = colorAttributes;
ReactNativeStyleAttributes.borderRightColor = colorAttributes;
ReactNativeStyleAttributes.borderTopColor = colorAttributes;
ReactNativeStyleAttributes.color = colorAttributes;
ReactNativeStyleAttributes.shadowColor = colorAttributes;
ReactNativeStyleAttributes.textDecorationColor = colorAttributes;
ReactNativeStyleAttributes.tintColor = colorAttributes;
ReactNativeStyleAttributes.textShadowColor = colorAttributes;
ReactNativeStyleAttributes.overlayColor = colorAttributes;

module.exports = ReactNativeStyleAttributes;
}, 424, null, "ReactNativeStyleAttributes");
__d(/* ImageStylePropTypes */function(global, require, module, exports) {
'use strict';

var ImageResizeMode = require(426              ); // 426 = ImageResizeMode
var LayoutPropTypes = require(428              ); // 428 = LayoutPropTypes
var ColorPropType = require(338            ); // 338 = ColorPropType
var ShadowPropTypesIOS = require(429                 ); // 429 = ShadowPropTypesIOS
var TransformPropTypes = require(430                 ); // 430 = TransformPropTypes

var ReactPropTypes = require(398    ).PropTypes; // 398 = React

var ImageStylePropTypes = babelHelpers.extends({}, LayoutPropTypes, ShadowPropTypesIOS, TransformPropTypes, {
  resizeMode: ReactPropTypes.oneOf(Object.keys(ImageResizeMode)),
  backfaceVisibility: ReactPropTypes.oneOf(['visible', 'hidden']),
  backgroundColor: ColorPropType,
  borderColor: ColorPropType,
  borderWidth: ReactPropTypes.number,
  borderRadius: ReactPropTypes.number,
  overflow: ReactPropTypes.oneOf(['visible', 'hidden']),

  tintColor: ColorPropType,
  opacity: ReactPropTypes.number,

  overlayColor: ReactPropTypes.string,

  borderTopLeftRadius: ReactPropTypes.number,
  borderTopRightRadius: ReactPropTypes.number,
  borderBottomLeftRadius: ReactPropTypes.number,
  borderBottomRightRadius: ReactPropTypes.number
});

module.exports = ImageStylePropTypes;
}, 425, null, "ImageStylePropTypes");
__d(/* ImageResizeMode */function(global, require, module, exports) {
'use strict';

var keyMirror = require(427                 ); // 427 = fbjs/lib/keyMirror

var ImageResizeMode = keyMirror({
  contain: null,

  cover: null,

  stretch: null,

  center: null,

  repeat: null
});

module.exports = ImageResizeMode;
}, 426, null, "ImageResizeMode");
__d(/* fbjs/lib/keyMirror.js */function(global, require, module, exports) {

'use strict';

var invariant = require(346          ); // 346 = ./invariant

var keyMirror = function keyMirror(obj) {
  var ret = {};
  var key;
  !(obj instanceof Object && !Array.isArray(obj)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'keyMirror(...): Argument must be an object.') : invariant(false) : void 0;
  for (key in obj) {
    if (!obj.hasOwnProperty(key)) {
      continue;
    }
    ret[key] = key;
  }
  return ret;
};

module.exports = keyMirror;
}, 427, null, "fbjs/lib/keyMirror.js");
__d(/* LayoutPropTypes */function(global, require, module, exports) {
'use strict';

var ReactPropTypes = require(398    ).PropTypes; // 398 = React

var LayoutPropTypes = {
  width: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  height: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  top: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  left: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  right: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  bottom: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  minWidth: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  maxWidth: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  minHeight: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  maxHeight: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  margin: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  marginVertical: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  marginHorizontal: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  marginTop: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  marginBottom: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  marginLeft: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  marginRight: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  padding: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  paddingVertical: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  paddingHorizontal: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  paddingTop: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  paddingBottom: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  paddingLeft: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  paddingRight: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  borderWidth: ReactPropTypes.number,

  borderTopWidth: ReactPropTypes.number,

  borderRightWidth: ReactPropTypes.number,

  borderBottomWidth: ReactPropTypes.number,

  borderLeftWidth: ReactPropTypes.number,

  position: ReactPropTypes.oneOf(['absolute', 'relative']),

  flexDirection: ReactPropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),

  flexWrap: ReactPropTypes.oneOf(['wrap', 'nowrap']),

  justifyContent: ReactPropTypes.oneOf(['flex-start', 'flex-end', 'center', 'space-between', 'space-around']),

  alignItems: ReactPropTypes.oneOf(['flex-start', 'flex-end', 'center', 'stretch', 'baseline']),

  alignSelf: ReactPropTypes.oneOf(['auto', 'flex-start', 'flex-end', 'center', 'stretch', 'baseline']),

  overflow: ReactPropTypes.oneOf(['visible', 'hidden', 'scroll']),

  flex: ReactPropTypes.number,
  flexGrow: ReactPropTypes.number,
  flexShrink: ReactPropTypes.number,
  flexBasis: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  aspectRatio: ReactPropTypes.number,

  zIndex: ReactPropTypes.number
};

module.exports = LayoutPropTypes;
}, 428, null, "LayoutPropTypes");
__d(/* ShadowPropTypesIOS */function(global, require, module, exports) {
'use strict';

var ColorPropType = require(338            ); // 338 = ColorPropType
var ReactPropTypes = require(398    ).PropTypes; // 398 = React

var ShadowPropTypesIOS = {
  shadowColor: ColorPropType,

  shadowOffset: ReactPropTypes.shape({ width: ReactPropTypes.number, height: ReactPropTypes.number }),

  shadowOpacity: ReactPropTypes.number,

  shadowRadius: ReactPropTypes.number
};

module.exports = ShadowPropTypesIOS;
}, 429, null, "ShadowPropTypesIOS");
__d(/* TransformPropTypes */function(global, require, module, exports) {
'use strict';

var deprecatedPropType = require(431                 ); // 431 = deprecatedPropType

var ReactPropTypes = require(398    ).PropTypes; // 398 = React

var TransformMatrixPropType = function TransformMatrixPropType(props, propName, componentName) {
  if (props[propName]) {
    return new Error('The transformMatrix style property is deprecated. ' + 'Use `transform: [{ matrix: ... }]` instead.');
  }
};

var DecomposedMatrixPropType = function DecomposedMatrixPropType(props, propName, componentName) {
  if (props[propName]) {
    return new Error('The decomposedMatrix style property is deprecated. ' + 'Use `transform: [...]` instead.');
  }
};

var TransformPropTypes = {
  transform: ReactPropTypes.arrayOf(ReactPropTypes.oneOfType([ReactPropTypes.shape({ perspective: ReactPropTypes.number }), ReactPropTypes.shape({ rotate: ReactPropTypes.string }), ReactPropTypes.shape({ rotateX: ReactPropTypes.string }), ReactPropTypes.shape({ rotateY: ReactPropTypes.string }), ReactPropTypes.shape({ rotateZ: ReactPropTypes.string }), ReactPropTypes.shape({ scale: ReactPropTypes.number }), ReactPropTypes.shape({ scaleX: ReactPropTypes.number }), ReactPropTypes.shape({ scaleY: ReactPropTypes.number }), ReactPropTypes.shape({ translateX: ReactPropTypes.number }), ReactPropTypes.shape({ translateY: ReactPropTypes.number }), ReactPropTypes.shape({ skewX: ReactPropTypes.string }), ReactPropTypes.shape({ skewY: ReactPropTypes.string })])),

  transformMatrix: TransformMatrixPropType,
  decomposedMatrix: DecomposedMatrixPropType,

  scaleX: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),
  scaleY: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),
  rotation: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),
  translateX: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),
  translateY: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.')
};

module.exports = TransformPropTypes;
}, 430, null, "TransformPropTypes");
__d(/* deprecatedPropType */function(global, require, module, exports) {
'use strict';

var UIManager = require(395        ); // 395 = UIManager
var ReactPropTypesSecret = require(417                             ); // 417 = react/lib/ReactPropTypesSecret
var ReactPropTypeLocations = require(432                               ); // 432 = react/lib/ReactPropTypeLocations

function deprecatedPropType(propType, explanation) {
  return function validate(props, propName, componentName) {
    if (!UIManager[componentName] && props[propName] !== undefined) {
      console.warn('`' + propName + '` supplied to `' + componentName + '` has been deprecated. ' + explanation);
    }

    return propType(props, propName, componentName, ReactPropTypeLocations.prop, null, ReactPropTypesSecret);
  };
}

module.exports = deprecatedPropType;
}, 431, null, "deprecatedPropType");
__d(/* react/lib/ReactPropTypeLocations.js */function(global, require, module, exports) {

'use strict';
}, 432, null, "react/lib/ReactPropTypeLocations.js");
__d(/* TextStylePropTypes */function(global, require, module, exports) {
'use strict';

var ReactPropTypes = require(398    ).PropTypes; // 398 = React
var ColorPropType = require(338            ); // 338 = ColorPropType
var ViewStylePropTypes = require(434                 ); // 434 = ViewStylePropTypes

var TextStylePropTypes = babelHelpers.extends({}, ViewStylePropTypes, {

  color: ColorPropType,
  fontFamily: ReactPropTypes.string,
  fontSize: ReactPropTypes.number,
  fontStyle: ReactPropTypes.oneOf(['normal', 'italic']),

  fontWeight: ReactPropTypes.oneOf(['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900']),

  fontVariant: ReactPropTypes.arrayOf(ReactPropTypes.oneOf(['small-caps', 'oldstyle-nums', 'lining-nums', 'tabular-nums', 'proportional-nums'])),
  textShadowOffset: ReactPropTypes.shape({ width: ReactPropTypes.number, height: ReactPropTypes.number }),
  textShadowRadius: ReactPropTypes.number,
  textShadowColor: ColorPropType,

  letterSpacing: ReactPropTypes.number,
  lineHeight: ReactPropTypes.number,

  textAlign: ReactPropTypes.oneOf(['auto', 'left', 'right', 'center', 'justify']),

  textAlignVertical: ReactPropTypes.oneOf(['auto', 'top', 'bottom', 'center']),

  includeFontPadding: ReactPropTypes.bool,
  textDecorationLine: ReactPropTypes.oneOf(['none', 'underline', 'line-through', 'underline line-through']),

  textDecorationStyle: ReactPropTypes.oneOf(['solid', 'double', 'dotted', 'dashed']),

  textDecorationColor: ColorPropType,

  writingDirection: ReactPropTypes.oneOf(['auto', 'ltr', 'rtl'])
});

module.exports = TextStylePropTypes;
}, 433, null, "TextStylePropTypes");
__d(/* ViewStylePropTypes */function(global, require, module, exports) {
'use strict';

var LayoutPropTypes = require(428              ); // 428 = LayoutPropTypes
var ReactPropTypes = require(398    ).PropTypes; // 398 = React
var ColorPropType = require(338            ); // 338 = ColorPropType
var ShadowPropTypesIOS = require(429                 ); // 429 = ShadowPropTypesIOS
var TransformPropTypes = require(430                 ); // 430 = TransformPropTypes

var ViewStylePropTypes = babelHelpers.extends({}, LayoutPropTypes, ShadowPropTypesIOS, TransformPropTypes, {
  backfaceVisibility: ReactPropTypes.oneOf(['visible', 'hidden']),
  backgroundColor: ColorPropType,
  borderColor: ColorPropType,
  borderTopColor: ColorPropType,
  borderRightColor: ColorPropType,
  borderBottomColor: ColorPropType,
  borderLeftColor: ColorPropType,
  borderRadius: ReactPropTypes.number,
  borderTopLeftRadius: ReactPropTypes.number,
  borderTopRightRadius: ReactPropTypes.number,
  borderBottomLeftRadius: ReactPropTypes.number,
  borderBottomRightRadius: ReactPropTypes.number,
  borderStyle: ReactPropTypes.oneOf(['solid', 'dotted', 'dashed']),
  borderWidth: ReactPropTypes.number,
  borderTopWidth: ReactPropTypes.number,
  borderRightWidth: ReactPropTypes.number,
  borderBottomWidth: ReactPropTypes.number,
  borderLeftWidth: ReactPropTypes.number,
  opacity: ReactPropTypes.number,

  elevation: ReactPropTypes.number
});

module.exports = ViewStylePropTypes;
}, 434, null, "ViewStylePropTypes");
__d(/* matricesDiffer */function(global, require, module, exports) {
'use strict';

var matricesDiffer = function matricesDiffer(one, two) {
  if (one === two) {
    return false;
  }
  return !one || !two || one[12] !== two[12] || one[13] !== two[13] || one[14] !== two[14] || one[5] !== two[5] || one[10] !== two[10] || one[1] !== two[1] || one[2] !== two[2] || one[3] !== two[3] || one[4] !== two[4] || one[6] !== two[6] || one[7] !== two[7] || one[8] !== two[8] || one[9] !== two[9] || one[11] !== two[11] || one[15] !== two[15];
};

module.exports = matricesDiffer;
}, 435, null, "matricesDiffer");
__d(/* processColor */function(global, require, module, exports) {
'use strict';

var Platform = require(348       ); // 348 = Platform

var normalizeColor = require(340             ); // 340 = normalizeColor

function processColor(color) {
  if (color === undefined || color === null) {
    return color;
  }

  var int32Color = normalizeColor(color);
  if (int32Color === null) {
    return undefined;
  }

  int32Color = (int32Color << 24 | int32Color >>> 8) >>> 0;

  if (Platform.OS === 'android') {
    int32Color = int32Color | 0x0;
  }
  return int32Color;
}

module.exports = processColor;
}, 436, null, "processColor");
__d(/* processTransform */function(global, require, module, exports) {
'use strict';

var MatrixMath = require(438         ); // 438 = MatrixMath
var Platform = require(348       ); // 348 = Platform

var invariant = require(346                 ); // 346 = fbjs/lib/invariant
var stringifySafe = require(369            ); // 369 = stringifySafe

function processTransform(transform) {
  if (__DEV__) {
    _validateTransforms(transform);
  }

  if (Platform.OS === 'android' || Platform.OS === 'ios') {
    return transform;
  }

  var result = MatrixMath.createIdentityMatrix();

  transform.forEach(function (transformation) {
    var key = Object.keys(transformation)[0];
    var value = transformation[key];

    switch (key) {
      case 'matrix':
        MatrixMath.multiplyInto(result, result, value);
        break;
      case 'perspective':
        _multiplyTransform(result, MatrixMath.reusePerspectiveCommand, [value]);
        break;
      case 'rotateX':
        _multiplyTransform(result, MatrixMath.reuseRotateXCommand, [_convertToRadians(value)]);
        break;
      case 'rotateY':
        _multiplyTransform(result, MatrixMath.reuseRotateYCommand, [_convertToRadians(value)]);
        break;
      case 'rotate':
      case 'rotateZ':
        _multiplyTransform(result, MatrixMath.reuseRotateZCommand, [_convertToRadians(value)]);
        break;
      case 'scale':
        _multiplyTransform(result, MatrixMath.reuseScaleCommand, [value]);
        break;
      case 'scaleX':
        _multiplyTransform(result, MatrixMath.reuseScaleXCommand, [value]);
        break;
      case 'scaleY':
        _multiplyTransform(result, MatrixMath.reuseScaleYCommand, [value]);
        break;
      case 'translate':
        _multiplyTransform(result, MatrixMath.reuseTranslate3dCommand, [value[0], value[1], value[2] || 0]);
        break;
      case 'translateX':
        _multiplyTransform(result, MatrixMath.reuseTranslate2dCommand, [value, 0]);
        break;
      case 'translateY':
        _multiplyTransform(result, MatrixMath.reuseTranslate2dCommand, [0, value]);
        break;
      case 'skewX':
        _multiplyTransform(result, MatrixMath.reuseSkewXCommand, [_convertToRadians(value)]);
        break;
      case 'skewY':
        _multiplyTransform(result, MatrixMath.reuseSkewYCommand, [_convertToRadians(value)]);
        break;
      default:
        throw new Error('Invalid transform name: ' + key);
    }
  });

  return result;
}

function _multiplyTransform(result, matrixMathFunction, args) {
  var matrixToApply = MatrixMath.createIdentityMatrix();
  var argsWithIdentity = [matrixToApply].concat(args);
  matrixMathFunction.apply(this, argsWithIdentity);
  MatrixMath.multiplyInto(result, result, matrixToApply);
}

function _convertToRadians(value) {
  var floatValue = parseFloat(value, 10);
  return value.indexOf('rad') > -1 ? floatValue : floatValue * Math.PI / 180;
}

function _validateTransforms(transform) {
  transform.forEach(function (transformation) {
    var keys = Object.keys(transformation);
    invariant(keys.length === 1, 'You must specify exactly one property per transform object. Passed properties: %s', stringifySafe(transformation));
    var key = keys[0];
    var value = transformation[key];
    _validateTransform(key, value, transformation);
  });
}

function _validateTransform(key, value, transformation) {
  invariant(!value.getValue, 'You passed an Animated.Value to a normal component. ' + 'You need to wrap that component in an Animated. For example, ' + 'replace <View /> by <Animated.View />.');

  var multivalueTransforms = ['matrix', 'translate'];
  if (multivalueTransforms.indexOf(key) !== -1) {
    invariant(Array.isArray(value), 'Transform with key of %s must have an array as the value: %s', key, stringifySafe(transformation));
  }
  switch (key) {
    case 'matrix':
      invariant(value.length === 9 || value.length === 16, 'Matrix transform must have a length of 9 (2d) or 16 (3d). ' + 'Provided matrix has a length of %s: %s', value.length, stringifySafe(transformation));
      break;
    case 'translate':
      invariant(value.length === 2 || value.length === 3, 'Transform with key translate must be an array of length 2 or 3, found %s: %s', value.length, stringifySafe(transformation));
      break;
    case 'rotateX':
    case 'rotateY':
    case 'rotateZ':
    case 'rotate':
    case 'skewX':
    case 'skewY':
      invariant(typeof value === 'string', 'Transform with key of "%s" must be a string: %s', key, stringifySafe(transformation));
      invariant(value.indexOf('deg') > -1 || value.indexOf('rad') > -1, 'Rotate transform must be expressed in degrees (deg) or radians ' + '(rad): %s', stringifySafe(transformation));
      break;
    case 'perspective':
      invariant(typeof value === 'number', 'Transform with key of "%s" must be a number: %s', key, stringifySafe(transformation));
      invariant(value !== 0, 'Transform with key of "%s" cannot be zero: %s', key, stringifySafe(transformation));
      break;
    case 'translateX':
    case 'translateY':
    case 'scale':
    case 'scaleX':
    case 'scaleY':
      invariant(typeof value === 'number', 'Transform with key of "%s" must be a number: %s', key, stringifySafe(transformation));
      break;
    default:
      invariant(false, 'Invalid transform %s: %s', key, stringifySafe(transformation));
  }
}

module.exports = processTransform;
}, 437, null, "processTransform");
__d(/* MatrixMath */function(global, require, module, exports) {
'use strict';

var invariant = require(346                 ); // 346 = fbjs/lib/invariant

var MatrixMath = {
  createIdentityMatrix: function createIdentityMatrix() {
    return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];
  },

  createCopy: function createCopy(m) {
    return [m[0], m[1], m[2], m[3], m[4], m[5], m[6], m[7], m[8], m[9], m[10], m[11], m[12], m[13], m[14], m[15]];
  },

  createOrthographic: function createOrthographic(left, right, bottom, top, near, far) {
    var a = 2 / (right - left);
    var b = 2 / (top - bottom);
    var c = -2 / (far - near);

    var tx = -(right + left) / (right - left);
    var ty = -(top + bottom) / (top - bottom);
    var tz = -(far + near) / (far - near);

    return [a, 0, 0, 0, 0, b, 0, 0, 0, 0, c, 0, tx, ty, tz, 1];
  },

  createFrustum: function createFrustum(left, right, bottom, top, near, far) {
    var r_width = 1 / (right - left);
    var r_height = 1 / (top - bottom);
    var r_depth = 1 / (near - far);
    var x = 2 * (near * r_width);
    var y = 2 * (near * r_height);
    var A = (right + left) * r_width;
    var B = (top + bottom) * r_height;
    var C = (far + near) * r_depth;
    var D = 2 * (far * near * r_depth);
    return [x, 0, 0, 0, 0, y, 0, 0, A, B, C, -1, 0, 0, D, 0];
  },

  createPerspective: function createPerspective(fovInRadians, aspect, near, far) {
    var h = 1 / Math.tan(fovInRadians / 2);
    var r_depth = 1 / (near - far);
    var C = (far + near) * r_depth;
    var D = 2 * (far * near * r_depth);
    return [h / aspect, 0, 0, 0, 0, h, 0, 0, 0, 0, C, -1, 0, 0, D, 0];
  },

  createTranslate2d: function createTranslate2d(x, y) {
    var mat = MatrixMath.createIdentityMatrix();
    MatrixMath.reuseTranslate2dCommand(mat, x, y);
    return mat;
  },

  reuseTranslate2dCommand: function reuseTranslate2dCommand(matrixCommand, x, y) {
    matrixCommand[12] = x;
    matrixCommand[13] = y;
  },

  reuseTranslate3dCommand: function reuseTranslate3dCommand(matrixCommand, x, y, z) {
    matrixCommand[12] = x;
    matrixCommand[13] = y;
    matrixCommand[14] = z;
  },

  createScale: function createScale(factor) {
    var mat = MatrixMath.createIdentityMatrix();
    MatrixMath.reuseScaleCommand(mat, factor);
    return mat;
  },

  reuseScaleCommand: function reuseScaleCommand(matrixCommand, factor) {
    matrixCommand[0] = factor;
    matrixCommand[5] = factor;
  },

  reuseScale3dCommand: function reuseScale3dCommand(matrixCommand, x, y, z) {
    matrixCommand[0] = x;
    matrixCommand[5] = y;
    matrixCommand[10] = z;
  },

  reusePerspectiveCommand: function reusePerspectiveCommand(matrixCommand, p) {
    matrixCommand[11] = -1 / p;
  },

  reuseScaleXCommand: function reuseScaleXCommand(matrixCommand, factor) {
    matrixCommand[0] = factor;
  },
  reuseScaleYCommand: function reuseScaleYCommand(matrixCommand, factor) {
    matrixCommand[5] = factor;
  },
  reuseScaleZCommand: function reuseScaleZCommand(matrixCommand, factor) {
    matrixCommand[10] = factor;
  },


  reuseRotateXCommand: function reuseRotateXCommand(matrixCommand, radians) {
    matrixCommand[5] = Math.cos(radians);
    matrixCommand[6] = Math.sin(radians);
    matrixCommand[9] = -Math.sin(radians);
    matrixCommand[10] = Math.cos(radians);
  },

  reuseRotateYCommand: function reuseRotateYCommand(matrixCommand, amount) {
    matrixCommand[0] = Math.cos(amount);
    matrixCommand[2] = -Math.sin(amount);
    matrixCommand[8] = Math.sin(amount);
    matrixCommand[10] = Math.cos(amount);
  },

  reuseRotateZCommand: function reuseRotateZCommand(matrixCommand, radians) {
    matrixCommand[0] = Math.cos(radians);
    matrixCommand[1] = Math.sin(radians);
    matrixCommand[4] = -Math.sin(radians);
    matrixCommand[5] = Math.cos(radians);
  },

  createRotateZ: function createRotateZ(radians) {
    var mat = MatrixMath.createIdentityMatrix();
    MatrixMath.reuseRotateZCommand(mat, radians);
    return mat;
  },

  reuseSkewXCommand: function reuseSkewXCommand(matrixCommand, radians) {
    matrixCommand[4] = Math.tan(radians);
  },

  reuseSkewYCommand: function reuseSkewYCommand(matrixCommand, radians) {
    matrixCommand[1] = Math.tan(radians);
  },

  multiplyInto: function multiplyInto(out, a, b) {
    var a00 = a[0],
        a01 = a[1],
        a02 = a[2],
        a03 = a[3],
        a10 = a[4],
        a11 = a[5],
        a12 = a[6],
        a13 = a[7],
        a20 = a[8],
        a21 = a[9],
        a22 = a[10],
        a23 = a[11],
        a30 = a[12],
        a31 = a[13],
        a32 = a[14],
        a33 = a[15];

    var b0 = b[0],
        b1 = b[1],
        b2 = b[2],
        b3 = b[3];
    out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
    out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
    out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
    out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;

    b0 = b[4];b1 = b[5];b2 = b[6];b3 = b[7];
    out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
    out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
    out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
    out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;

    b0 = b[8];b1 = b[9];b2 = b[10];b3 = b[11];
    out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
    out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
    out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
    out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;

    b0 = b[12];b1 = b[13];b2 = b[14];b3 = b[15];
    out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
    out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
    out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
    out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;
  },

  determinant: function determinant(matrix) {
    var _matrix = babelHelpers.slicedToArray(matrix, 16),
        m00 = _matrix[0],
        m01 = _matrix[1],
        m02 = _matrix[2],
        m03 = _matrix[3],
        m10 = _matrix[4],
        m11 = _matrix[5],
        m12 = _matrix[6],
        m13 = _matrix[7],
        m20 = _matrix[8],
        m21 = _matrix[9],
        m22 = _matrix[10],
        m23 = _matrix[11],
        m30 = _matrix[12],
        m31 = _matrix[13],
        m32 = _matrix[14],
        m33 = _matrix[15];

    return m03 * m12 * m21 * m30 - m02 * m13 * m21 * m30 - m03 * m11 * m22 * m30 + m01 * m13 * m22 * m30 + m02 * m11 * m23 * m30 - m01 * m12 * m23 * m30 - m03 * m12 * m20 * m31 + m02 * m13 * m20 * m31 + m03 * m10 * m22 * m31 - m00 * m13 * m22 * m31 - m02 * m10 * m23 * m31 + m00 * m12 * m23 * m31 + m03 * m11 * m20 * m32 - m01 * m13 * m20 * m32 - m03 * m10 * m21 * m32 + m00 * m13 * m21 * m32 + m01 * m10 * m23 * m32 - m00 * m11 * m23 * m32 - m02 * m11 * m20 * m33 + m01 * m12 * m20 * m33 + m02 * m10 * m21 * m33 - m00 * m12 * m21 * m33 - m01 * m10 * m22 * m33 + m00 * m11 * m22 * m33;
  },
  inverse: function inverse(matrix) {
    var det = MatrixMath.determinant(matrix);
    if (!det) {
      return matrix;
    }

    var _matrix2 = babelHelpers.slicedToArray(matrix, 16),
        m00 = _matrix2[0],
        m01 = _matrix2[1],
        m02 = _matrix2[2],
        m03 = _matrix2[3],
        m10 = _matrix2[4],
        m11 = _matrix2[5],
        m12 = _matrix2[6],
        m13 = _matrix2[7],
        m20 = _matrix2[8],
        m21 = _matrix2[9],
        m22 = _matrix2[10],
        m23 = _matrix2[11],
        m30 = _matrix2[12],
        m31 = _matrix2[13],
        m32 = _matrix2[14],
        m33 = _matrix2[15];

    return [(m12 * m23 * m31 - m13 * m22 * m31 + m13 * m21 * m32 - m11 * m23 * m32 - m12 * m21 * m33 + m11 * m22 * m33) / det, (m03 * m22 * m31 - m02 * m23 * m31 - m03 * m21 * m32 + m01 * m23 * m32 + m02 * m21 * m33 - m01 * m22 * m33) / det, (m02 * m13 * m31 - m03 * m12 * m31 + m03 * m11 * m32 - m01 * m13 * m32 - m02 * m11 * m33 + m01 * m12 * m33) / det, (m03 * m12 * m21 - m02 * m13 * m21 - m03 * m11 * m22 + m01 * m13 * m22 + m02 * m11 * m23 - m01 * m12 * m23) / det, (m13 * m22 * m30 - m12 * m23 * m30 - m13 * m20 * m32 + m10 * m23 * m32 + m12 * m20 * m33 - m10 * m22 * m33) / det, (m02 * m23 * m30 - m03 * m22 * m30 + m03 * m20 * m32 - m00 * m23 * m32 - m02 * m20 * m33 + m00 * m22 * m33) / det, (m03 * m12 * m30 - m02 * m13 * m30 - m03 * m10 * m32 + m00 * m13 * m32 + m02 * m10 * m33 - m00 * m12 * m33) / det, (m02 * m13 * m20 - m03 * m12 * m20 + m03 * m10 * m22 - m00 * m13 * m22 - m02 * m10 * m23 + m00 * m12 * m23) / det, (m11 * m23 * m30 - m13 * m21 * m30 + m13 * m20 * m31 - m10 * m23 * m31 - m11 * m20 * m33 + m10 * m21 * m33) / det, (m03 * m21 * m30 - m01 * m23 * m30 - m03 * m20 * m31 + m00 * m23 * m31 + m01 * m20 * m33 - m00 * m21 * m33) / det, (m01 * m13 * m30 - m03 * m11 * m30 + m03 * m10 * m31 - m00 * m13 * m31 - m01 * m10 * m33 + m00 * m11 * m33) / det, (m03 * m11 * m20 - m01 * m13 * m20 - m03 * m10 * m21 + m00 * m13 * m21 + m01 * m10 * m23 - m00 * m11 * m23) / det, (m12 * m21 * m30 - m11 * m22 * m30 - m12 * m20 * m31 + m10 * m22 * m31 + m11 * m20 * m32 - m10 * m21 * m32) / det, (m01 * m22 * m30 - m02 * m21 * m30 + m02 * m20 * m31 - m00 * m22 * m31 - m01 * m20 * m32 + m00 * m21 * m32) / det, (m02 * m11 * m30 - m01 * m12 * m30 - m02 * m10 * m31 + m00 * m12 * m31 + m01 * m10 * m32 - m00 * m11 * m32) / det, (m01 * m12 * m20 - m02 * m11 * m20 + m02 * m10 * m21 - m00 * m12 * m21 - m01 * m10 * m22 + m00 * m11 * m22) / det];
  },
  transpose: function transpose(m) {
    return [m[0], m[4], m[8], m[12], m[1], m[5], m[9], m[13], m[2], m[6], m[10], m[14], m[3], m[7], m[11], m[15]];
  },
  multiplyVectorByMatrix: function multiplyVectorByMatrix(v, m) {
    var _v = babelHelpers.slicedToArray(v, 4),
        vx = _v[0],
        vy = _v[1],
        vz = _v[2],
        vw = _v[3];

    return [vx * m[0] + vy * m[4] + vz * m[8] + vw * m[12], vx * m[1] + vy * m[5] + vz * m[9] + vw * m[13], vx * m[2] + vy * m[6] + vz * m[10] + vw * m[14], vx * m[3] + vy * m[7] + vz * m[11] + vw * m[15]];
  },
  v3Length: function v3Length(a) {
    return Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2]);
  },
  v3Normalize: function v3Normalize(vector, v3Length) {
    var im = 1 / (v3Length || MatrixMath.v3Length(vector));
    return [vector[0] * im, vector[1] * im, vector[2] * im];
  },
  v3Dot: function v3Dot(a, b) {
    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];
  },
  v3Combine: function v3Combine(a, b, aScale, bScale) {
    return [aScale * a[0] + bScale * b[0], aScale * a[1] + bScale * b[1], aScale * a[2] + bScale * b[2]];
  },
  v3Cross: function v3Cross(a, b) {
    return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];
  },
  quaternionToDegreesXYZ: function quaternionToDegreesXYZ(q, matrix, row) {
    var _q = babelHelpers.slicedToArray(q, 4),
        qx = _q[0],
        qy = _q[1],
        qz = _q[2],
        qw = _q[3];

    var qw2 = qw * qw;
    var qx2 = qx * qx;
    var qy2 = qy * qy;
    var qz2 = qz * qz;
    var test = qx * qy + qz * qw;
    var unit = qw2 + qx2 + qy2 + qz2;
    var conv = 180 / Math.PI;

    if (test > 0.49999 * unit) {
      return [0, 2 * Math.atan2(qx, qw) * conv, 90];
    }
    if (test < -0.49999 * unit) {
      return [0, -2 * Math.atan2(qx, qw) * conv, -90];
    }

    return [MatrixMath.roundTo3Places(Math.atan2(2 * qx * qw - 2 * qy * qz, 1 - 2 * qx2 - 2 * qz2) * conv), MatrixMath.roundTo3Places(Math.atan2(2 * qy * qw - 2 * qx * qz, 1 - 2 * qy2 - 2 * qz2) * conv), MatrixMath.roundTo3Places(Math.asin(2 * qx * qy + 2 * qz * qw) * conv)];
  },
  roundTo3Places: function roundTo3Places(n) {
    var arr = n.toString().split('e');
    return Math.round(arr[0] + 'e' + (arr[1] ? +arr[1] - 3 : 3)) * 0.001;
  },
  decomposeMatrix: function decomposeMatrix(transformMatrix) {

    invariant(transformMatrix.length === 16, 'Matrix decomposition needs a list of 3d matrix values, received %s', transformMatrix);

    var perspective = [];
    var quaternion = [];
    var scale = [];
    var skew = [];
    var translation = [];

    if (!transformMatrix[15]) {
      return;
    }
    var matrix = [];
    var perspectiveMatrix = [];
    for (var i = 0; i < 4; i++) {
      matrix.push([]);
      for (var j = 0; j < 4; j++) {
        var value = transformMatrix[i * 4 + j] / transformMatrix[15];
        matrix[i].push(value);
        perspectiveMatrix.push(j === 3 ? 0 : value);
      }
    }
    perspectiveMatrix[15] = 1;

    if (!MatrixMath.determinant(perspectiveMatrix)) {
      return;
    }

    if (matrix[0][3] !== 0 || matrix[1][3] !== 0 || matrix[2][3] !== 0) {
      var rightHandSide = [matrix[0][3], matrix[1][3], matrix[2][3], matrix[3][3]];

      var inversePerspectiveMatrix = MatrixMath.inverse(perspectiveMatrix);
      var transposedInversePerspectiveMatrix = MatrixMath.transpose(inversePerspectiveMatrix);
      var perspective = MatrixMath.multiplyVectorByMatrix(rightHandSide, transposedInversePerspectiveMatrix);
    } else {
      perspective[0] = perspective[1] = perspective[2] = 0;
      perspective[3] = 1;
    }

    for (var i = 0; i < 3; i++) {
      translation[i] = matrix[3][i];
    }

    var row = [];
    for (i = 0; i < 3; i++) {
      row[i] = [matrix[i][0], matrix[i][1], matrix[i][2]];
    }

    scale[0] = MatrixMath.v3Length(row[0]);
    row[0] = MatrixMath.v3Normalize(row[0], scale[0]);

    skew[0] = MatrixMath.v3Dot(row[0], row[1]);
    row[1] = MatrixMath.v3Combine(row[1], row[0], 1.0, -skew[0]);

    skew[0] = MatrixMath.v3Dot(row[0], row[1]);
    row[1] = MatrixMath.v3Combine(row[1], row[0], 1.0, -skew[0]);

    scale[1] = MatrixMath.v3Length(row[1]);
    row[1] = MatrixMath.v3Normalize(row[1], scale[1]);
    skew[0] /= scale[1];

    skew[1] = MatrixMath.v3Dot(row[0], row[2]);
    row[2] = MatrixMath.v3Combine(row[2], row[0], 1.0, -skew[1]);
    skew[2] = MatrixMath.v3Dot(row[1], row[2]);
    row[2] = MatrixMath.v3Combine(row[2], row[1], 1.0, -skew[2]);

    scale[2] = MatrixMath.v3Length(row[2]);
    row[2] = MatrixMath.v3Normalize(row[2], scale[2]);
    skew[1] /= scale[2];
    skew[2] /= scale[2];

    var pdum3 = MatrixMath.v3Cross(row[1], row[2]);
    if (MatrixMath.v3Dot(row[0], pdum3) < 0) {
      for (i = 0; i < 3; i++) {
        scale[i] *= -1;
        row[i][0] *= -1;
        row[i][1] *= -1;
        row[i][2] *= -1;
      }
    }

    quaternion[0] = 0.5 * Math.sqrt(Math.max(1 + row[0][0] - row[1][1] - row[2][2], 0));
    quaternion[1] = 0.5 * Math.sqrt(Math.max(1 - row[0][0] + row[1][1] - row[2][2], 0));
    quaternion[2] = 0.5 * Math.sqrt(Math.max(1 - row[0][0] - row[1][1] + row[2][2], 0));
    quaternion[3] = 0.5 * Math.sqrt(Math.max(1 + row[0][0] + row[1][1] + row[2][2], 0));

    if (row[2][1] > row[1][2]) {
      quaternion[0] = -quaternion[0];
    }
    if (row[0][2] > row[2][0]) {
      quaternion[1] = -quaternion[1];
    }
    if (row[1][0] > row[0][1]) {
      quaternion[2] = -quaternion[2];
    }

    var rotationDegrees;
    if (quaternion[0] < 0.001 && quaternion[0] >= 0 && quaternion[1] < 0.001 && quaternion[1] >= 0) {
      rotationDegrees = [0, 0, MatrixMath.roundTo3Places(Math.atan2(row[0][1], row[0][0]) * 180 / Math.PI)];
    } else {
      rotationDegrees = MatrixMath.quaternionToDegreesXYZ(quaternion, matrix, row);
    }

    return {
      rotationDegrees: rotationDegrees,
      perspective: perspective,
      quaternion: quaternion,
      scale: scale,
      skew: skew,
      translation: translation,

      rotate: rotationDegrees[2],
      rotateX: rotationDegrees[0],
      rotateY: rotationDegrees[1],
      scaleX: scale[0],
      scaleY: scale[1],
      translateX: translation[0],
      translateY: translation[1]
    };
  }
};

module.exports = MatrixMath;
}, 438, null, "MatrixMath");
__d(/* sizesDiffer */function(global, require, module, exports) {
'use strict';

var dummySize = { width: undefined, height: undefined };

var sizesDiffer = function sizesDiffer(one, two) {
  one = one || dummySize;
  two = two || dummySize;
  return one !== two && (one.width !== two.width || one.height !== two.height);
};

module.exports = sizesDiffer;
}, 439, null, "sizesDiffer");
__d(/* StyleSheetValidation */function(global, require, module, exports) {
'use strict';

var ImageStylePropTypes = require(425                  ); // 425 = ImageStylePropTypes
var ReactPropTypeLocations = require(432                               ); // 432 = react/lib/ReactPropTypeLocations
var ReactPropTypesSecret = require(417                             ); // 417 = react/lib/ReactPropTypesSecret
var TextStylePropTypes = require(433                 ); // 433 = TextStylePropTypes
var ViewStylePropTypes = require(434                 ); // 434 = ViewStylePropTypes

var invariant = require(346                 ); // 346 = fbjs/lib/invariant

var StyleSheetValidation = function () {
  function StyleSheetValidation() {
    babelHelpers.classCallCheck(this, StyleSheetValidation);
  }

  babelHelpers.createClass(StyleSheetValidation, null, [{
    key: 'validateStyleProp',
    value: function validateStyleProp(prop, style, caller) {
      if (!__DEV__) {
        return;
      }
      if (allStylePropTypes[prop] === undefined) {
        var message1 = '"' + prop + '" is not a valid style property.';
        var message2 = '\nValid style props: ' + JSON.stringify(Object.keys(allStylePropTypes).sort(), null, '  ');
        styleError(message1, style, caller, message2);
      }
      var error = allStylePropTypes[prop](style, prop, caller, ReactPropTypeLocations.prop, null, ReactPropTypesSecret);
      if (error) {
        styleError(error.message, style, caller);
      }
    }
  }, {
    key: 'validateStyle',
    value: function validateStyle(name, styles) {
      if (!__DEV__) {
        return;
      }
      for (var prop in styles[name]) {
        StyleSheetValidation.validateStyleProp(prop, styles[name], 'StyleSheet ' + name);
      }
    }
  }, {
    key: 'addValidStylePropTypes',
    value: function addValidStylePropTypes(stylePropTypes) {
      for (var key in stylePropTypes) {
        allStylePropTypes[key] = stylePropTypes[key];
      }
    }
  }]);
  return StyleSheetValidation;
}();

var styleError = function styleError(message1, style, caller, message2) {
  invariant(false, message1 + '\n' + (caller || '<<unknown>>') + ': ' + JSON.stringify(style, null, '  ') + (message2 || ''));
};

var allStylePropTypes = {};

StyleSheetValidation.addValidStylePropTypes(ImageStylePropTypes);
StyleSheetValidation.addValidStylePropTypes(TextStylePropTypes);
StyleSheetValidation.addValidStylePropTypes(ViewStylePropTypes);

module.exports = StyleSheetValidation;
}, 440, null, "StyleSheetValidation");
__d(/* View */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native/Libraries/Components/View/View.js';
var EdgeInsetsPropType = require(442                 ); // 442 = EdgeInsetsPropType
var NativeMethodsMixin = require(341                 ); // 341 = NativeMethodsMixin
var NativeModules = require(349            ); // 349 = NativeModules
var Platform = require(348       ); // 348 = Platform
var React = require(398    ); // 398 = React
var ReactNativeStyleAttributes = require(424                         ); // 424 = ReactNativeStyleAttributes
var ReactNativeViewAttributes = require(447                        ); // 447 = ReactNativeViewAttributes
var StyleSheetPropType = require(448                 ); // 448 = StyleSheetPropType
var ViewStylePropTypes = require(434                 ); // 434 = ViewStylePropTypes

var invariant = require(346                 ); // 346 = fbjs/lib/invariant

var TVViewPropTypes = {};
if (Platform.isTVOS) {
  TVViewPropTypes = require(449              ); // 449 = TVViewPropTypes
}

var requireNativeComponent = require(450                     ); // 450 = requireNativeComponent

var PropTypes = React.PropTypes;

var stylePropType = StyleSheetPropType(ViewStylePropTypes);

var AccessibilityTraits = ['none', 'button', 'link', 'header', 'search', 'image', 'selected', 'plays', 'key', 'text', 'summary', 'disabled', 'frequentUpdates', 'startsMedia', 'adjustable', 'allowsDirectInteraction', 'pageTurn'];

var AccessibilityComponentType = ['none', 'button', 'radiobutton_checked', 'radiobutton_unchecked'];

var forceTouchAvailable = NativeModules.IOSConstants && NativeModules.IOSConstants.forceTouchAvailable || false;

var statics = {
  AccessibilityTraits: AccessibilityTraits,
  AccessibilityComponentType: AccessibilityComponentType,

  forceTouchAvailable: forceTouchAvailable
};

var View = React.createClass({
  displayName: 'View',

  mixins: [NativeMethodsMixin],

  viewConfig: {
    uiViewClassName: 'RCTView',
    validAttributes: ReactNativeViewAttributes.RCTView
  },

  statics: babelHelpers.extends({}, statics),

  propTypes: babelHelpers.extends({}, TVViewPropTypes, {
    accessible: PropTypes.bool,

    accessibilityLabel: PropTypes.node,

    accessibilityComponentType: PropTypes.oneOf(AccessibilityComponentType),

    accessibilityLiveRegion: PropTypes.oneOf(['none', 'polite', 'assertive']),

    importantForAccessibility: PropTypes.oneOf(['auto', 'yes', 'no', 'no-hide-descendants']),

    accessibilityTraits: PropTypes.oneOfType([PropTypes.oneOf(AccessibilityTraits), PropTypes.arrayOf(PropTypes.oneOf(AccessibilityTraits))]),

    onAccessibilityTap: PropTypes.func,

    onMagicTap: PropTypes.func,

    testID: PropTypes.string,

    onResponderGrant: PropTypes.func,

    onResponderMove: PropTypes.func,

    onResponderReject: PropTypes.func,

    onResponderRelease: PropTypes.func,

    onResponderTerminate: PropTypes.func,

    onResponderTerminationRequest: PropTypes.func,

    onStartShouldSetResponder: PropTypes.func,

    onStartShouldSetResponderCapture: PropTypes.func,

    onMoveShouldSetResponder: PropTypes.func,

    onMoveShouldSetResponderCapture: PropTypes.func,

    hitSlop: EdgeInsetsPropType,

    onLayout: PropTypes.func,

    pointerEvents: PropTypes.oneOf(['box-none', 'none', 'box-only', 'auto']),
    style: stylePropType,

    removeClippedSubviews: PropTypes.bool,

    renderToHardwareTextureAndroid: PropTypes.bool,

    shouldRasterizeIOS: PropTypes.bool,

    collapsable: PropTypes.bool,

    needsOffscreenAlphaCompositing: PropTypes.bool
  }),

  contextTypes: {
    isInAParentText: React.PropTypes.bool
  },

  render: function render() {
    invariant(!(this.context.isInAParentText && Platform.OS === 'android'), 'Nesting of <View> within <Text> is not supported on Android.');

    return React.createElement(RCTView, babelHelpers.extends({}, this.props, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 524
      }
    }));
  }
});

var RCTView = requireNativeComponent('RCTView', View, {
  nativeOnly: {
    nativeBackgroundAndroid: true,
    nativeForegroundAndroid: true
  }
});

if (__DEV__) {
  var UIManager = require(395        ); // 395 = UIManager
  var viewConfig = UIManager.viewConfigs && UIManager.viewConfigs.RCTView || {};
  for (var prop in viewConfig.nativeProps) {
    var viewAny = View;
    if (!viewAny.propTypes[prop] && !ReactNativeStyleAttributes[prop]) {
      throw new Error('View is missing propType for native prop `' + prop + '`');
    }
  }
}

var ViewToExport = RCTView;
if (__DEV__) {
  ViewToExport = View;
} else {
  babelHelpers.extends(RCTView, statics);
}

module.exports = ViewToExport;
}, 441, null, "View");
__d(/* EdgeInsetsPropType */function(global, require, module, exports) {
'use strict';

var _require = require(398    ), // 398 = React
    PropTypes = _require.PropTypes;

var createStrictShapeTypeChecker = require(443                           ); // 443 = createStrictShapeTypeChecker

var EdgeInsetsPropType = createStrictShapeTypeChecker({
  top: PropTypes.number,
  left: PropTypes.number,
  bottom: PropTypes.number,
  right: PropTypes.number
});

module.exports = EdgeInsetsPropType;
}, 442, null, "EdgeInsetsPropType");
__d(/* createStrictShapeTypeChecker */function(global, require, module, exports) {
'use strict';

var ReactPropTypeLocationNames = require(339                                   ); // 339 = react/lib/ReactPropTypeLocationNames
var ReactPropTypesSecret = require(417                             ); // 417 = react/lib/ReactPropTypesSecret

var invariant = require(346                 ); // 346 = fbjs/lib/invariant
var merge = require(444    ); // 444 = merge

function createStrictShapeTypeChecker(shapeTypes) {
  function checkType(isRequired, props, propName, componentName, location) {
    if (!props[propName]) {
      if (isRequired) {
        invariant(false, 'Required object `' + propName + '` was not specified in ' + ('`' + componentName + '`.'));
      }
      return;
    }
    var propValue = props[propName];
    var propType = typeof propValue;
    var locationName = location && ReactPropTypeLocationNames[location] || '(unknown)';
    if (propType !== 'object') {
      invariant(false, 'Invalid ' + locationName + ' `' + propName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
    }

    var allKeys = merge(props[propName], shapeTypes);
    for (var key in allKeys) {
      var checker = shapeTypes[key];
      if (!checker) {
        invariant(false, 'Invalid props.' + propName + ' key `' + key + '` supplied to `' + componentName + '`.' + '\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));
      }
      var error = checker(propValue, key, componentName, location, null, ReactPropTypesSecret);
      if (error) {
        invariant(false, error.message + '\nBad object: ' + JSON.stringify(props[propName], null, '  '));
      }
    }
  }
  function chainedCheckType(props, propName, componentName, location) {
    return checkType(false, props, propName, componentName, location);
  }
  chainedCheckType.isRequired = checkType.bind(null, true);
  return chainedCheckType;
}

module.exports = createStrictShapeTypeChecker;
}, 443, null, "createStrictShapeTypeChecker");
__d(/* merge */function(global, require, module, exports) {

"use strict";

var mergeInto = require(445        ); // 445 = mergeInto

var merge = function merge(one, two) {
  var result = {};
  mergeInto(result, one);
  mergeInto(result, two);
  return result;
};

module.exports = merge;
}, 444, null, "merge");
__d(/* mergeInto */function(global, require, module, exports) {

"use strict";

var mergeHelpers = require(446           ); // 446 = mergeHelpers

var checkMergeObjectArg = mergeHelpers.checkMergeObjectArg;
var checkMergeIntoObjectArg = mergeHelpers.checkMergeIntoObjectArg;

function mergeInto(one, two) {
  checkMergeIntoObjectArg(one);
  if (two != null) {
    checkMergeObjectArg(two);
    for (var key in two) {
      if (!two.hasOwnProperty(key)) {
        continue;
      }
      one[key] = two[key];
    }
  }
}

module.exports = mergeInto;
}, 445, null, "mergeInto");
__d(/* mergeHelpers */function(global, require, module, exports) {

"use strict";

var invariant = require(346                 ); // 346 = fbjs/lib/invariant
var keyMirror = require(427                 ); // 427 = fbjs/lib/keyMirror

var MAX_MERGE_DEPTH = 36;

var isTerminal = function isTerminal(o) {
  return typeof o !== 'object' || o === null;
};

var mergeHelpers = {

  MAX_MERGE_DEPTH: MAX_MERGE_DEPTH,

  isTerminal: isTerminal,

  normalizeMergeArg: function normalizeMergeArg(arg) {
    return arg === undefined || arg === null ? {} : arg;
  },

  checkMergeArrayArgs: function checkMergeArrayArgs(one, two) {
    invariant(Array.isArray(one) && Array.isArray(two), 'Tried to merge arrays, instead got %s and %s.', one, two);
  },

  checkMergeObjectArgs: function checkMergeObjectArgs(one, two) {
    mergeHelpers.checkMergeObjectArg(one);
    mergeHelpers.checkMergeObjectArg(two);
  },

  checkMergeObjectArg: function checkMergeObjectArg(arg) {
    invariant(!isTerminal(arg) && !Array.isArray(arg), 'Tried to merge an object, instead got %s.', arg);
  },

  checkMergeIntoObjectArg: function checkMergeIntoObjectArg(arg) {
    invariant((!isTerminal(arg) || typeof arg === 'function') && !Array.isArray(arg), 'Tried to merge into an object, instead got %s.', arg);
  },

  checkMergeLevel: function checkMergeLevel(level) {
    invariant(level < MAX_MERGE_DEPTH, 'Maximum deep merge depth exceeded. You may be attempting to merge ' + 'circular structures in an unsupported way.');
  },

  checkArrayStrategy: function checkArrayStrategy(strategy) {
    invariant(strategy === undefined || strategy in mergeHelpers.ArrayStrategies, 'You must provide an array strategy to deep merge functions to ' + 'instruct the deep merge how to resolve merging two arrays.');
  },

  ArrayStrategies: keyMirror({
    Clobber: true,
    IndexByIndex: true
  })

};

module.exports = mergeHelpers;
}, 446, null, "mergeHelpers");
__d(/* ReactNativeViewAttributes */function(global, require, module, exports) {
'use strict';

var ReactNativeStyleAttributes = require(424                         ); // 424 = ReactNativeStyleAttributes

var ReactNativeViewAttributes = {};

ReactNativeViewAttributes.UIView = {
  pointerEvents: true,
  accessible: true,
  accessibilityLabel: true,
  accessibilityComponentType: true,
  accessibilityLiveRegion: true,
  accessibilityTraits: true,
  importantForAccessibility: true,
  testID: true,
  renderToHardwareTextureAndroid: true,
  shouldRasterizeIOS: true,
  onLayout: true,
  onAccessibilityTap: true,
  onMagicTap: true,
  collapsable: true,
  needsOffscreenAlphaCompositing: true,
  style: ReactNativeStyleAttributes
};

ReactNativeViewAttributes.RCTView = babelHelpers.extends({}, ReactNativeViewAttributes.UIView, {
  removeClippedSubviews: true
});

module.exports = ReactNativeViewAttributes;
}, 447, null, "ReactNativeViewAttributes");
__d(/* StyleSheetPropType */function(global, require, module, exports) {
'use strict';

var createStrictShapeTypeChecker = require(443                           ); // 443 = createStrictShapeTypeChecker
var flattenStyle = require(345           ); // 345 = flattenStyle

function StyleSheetPropType(shape) {
  var shapePropType = createStrictShapeTypeChecker(shape);
  return function (props, propName, componentName, location) {
    var newProps = props;
    if (props[propName]) {
      newProps = {};
      newProps[propName] = flattenStyle(props[propName]);
    }
    return shapePropType(newProps, propName, componentName, location);
  };
}

module.exports = StyleSheetPropType;
}, 448, null, "StyleSheetPropType");
__d(/* TVViewPropTypes */function(global, require, module, exports) {
'use strict';

var PropTypes = require(398    ).PropTypes; // 398 = React

var TVViewPropTypes = {
  isTVSelectable: PropTypes.bool,

  hasTVPreferredFocus: PropTypes.bool,

  tvParallaxProperties: PropTypes.object,

  tvParallaxShiftDistanceX: PropTypes.number,

  tvParallaxShiftDistanceY: PropTypes.number,

  tvParallaxTiltAngle: PropTypes.number,

  tvParallaxMagnification: PropTypes.number

};

module.exports = TVViewPropTypes;
}, 449, null, "TVViewPropTypes");
__d(/* requireNativeComponent */function(global, require, module, exports) {
'use strict';

var ReactNativeStyleAttributes = require(424                         ); // 424 = ReactNativeStyleAttributes
var UIManager = require(395        ); // 395 = UIManager
var UnimplementedView = require(451                ); // 451 = UnimplementedView

var createReactNativeComponentClass = require(452                              ); // 452 = createReactNativeComponentClass
var insetsDiffer = require(491           ); // 491 = insetsDiffer
var matricesDiffer = require(435             ); // 435 = matricesDiffer
var pointsDiffer = require(492           ); // 492 = pointsDiffer
var processColor = require(436           ); // 436 = processColor
var resolveAssetSource = require(493                 ); // 493 = resolveAssetSource
var sizesDiffer = require(439          ); // 439 = sizesDiffer
var verifyPropTypes = require(497              ); // 497 = verifyPropTypes
var warning = require(335               ); // 335 = fbjs/lib/warning

function requireNativeComponent(viewName, componentInterface, extraConfig) {
  var viewConfig = UIManager[viewName];
  if (!viewConfig || !viewConfig.NativeProps) {
    warning(false, 'Native component for "%s" does not exist', viewName);
    return UnimplementedView;
  }

  viewConfig.uiViewClassName = viewName;
  viewConfig.validAttributes = {};
  viewConfig.propTypes = componentInterface && componentInterface.propTypes;

  var nativeProps = babelHelpers.extends({}, UIManager.RCTView.NativeProps, viewConfig.NativeProps);
  for (var key in nativeProps) {
    var useAttribute = false;
    var attribute = {};

    var differ = TypeToDifferMap[nativeProps[key]];
    if (differ) {
      attribute.diff = differ;
      useAttribute = true;
    }

    var processor = TypeToProcessorMap[nativeProps[key]];
    if (processor) {
      attribute.process = processor;
      useAttribute = true;
    }

    viewConfig.validAttributes[key] = useAttribute ? attribute : true;
  }

  viewConfig.validAttributes.style = ReactNativeStyleAttributes;

  if (__DEV__) {
    componentInterface && verifyPropTypes(componentInterface, viewConfig, extraConfig && extraConfig.nativeOnly);
  }

  return createReactNativeComponentClass(viewConfig);
}

var TypeToDifferMap = {
  CATransform3D: matricesDiffer,
  CGPoint: pointsDiffer,
  CGSize: sizesDiffer,
  UIEdgeInsets: insetsDiffer
};

function processColorArray(colors) {
  return colors && colors.map(processColor);
}

var TypeToProcessorMap = {
  CGColor: processColor,
  CGColorArray: processColorArray,
  UIColor: processColor,
  UIColorArray: processColorArray,
  CGImage: resolveAssetSource,
  UIImage: resolveAssetSource,
  RCTImageSource: resolveAssetSource,

  Color: processColor,
  ColorArray: processColorArray
};

module.exports = requireNativeComponent;
}, 450, null, "requireNativeComponent");
__d(/* UnimplementedView */function(global, require, module, exports) {

'use strict';

var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native/Libraries/Components/UnimplementedViews/UnimplementedView.js';
var React = require(398    ); // 398 = React
var StyleSheet = require(421         ); // 421 = StyleSheet

var UnimplementedView = function (_React$Component) {
  babelHelpers.inherits(UnimplementedView, _React$Component);

  function UnimplementedView() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, UnimplementedView);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = UnimplementedView.__proto__ || Object.getPrototypeOf(UnimplementedView)).call.apply(_ref, [this].concat(args))), _this), _this.setNativeProps = function () {}, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(UnimplementedView, [{
    key: 'render',
    value: function render() {
      var View = require(441   ); // 441 = View
      return React.createElement(
        View,
        { style: [styles.unimplementedView, this.props.style], __source: {
            fileName: _jsxFileName,
            lineNumber: 24
          }
        },
        this.props.children
      );
    }
  }]);
  return UnimplementedView;
}(React.Component);

var styles = StyleSheet.create({
  unimplementedView: {
    borderWidth: 1,
    borderColor: 'red',
    alignSelf: 'flex-start'
  }
});

module.exports = UnimplementedView;
}, 451, null, "UnimplementedView");
__d(/* createReactNativeComponentClass */function(global, require, module, exports) {

'use strict';

var ReactNativeBaseComponent = require(453                       ); // 453 = ReactNativeBaseComponent

var createReactNativeComponentClass = function createReactNativeComponentClass(viewConfig) {
  var Constructor = function Constructor(element) {
    this._currentElement = element;
    this._topLevelWrapper = null;
    this._hostParent = null;
    this._hostContainerInfo = null;
    this._rootNodeID = 0;
    this._renderedChildren = null;
  };
  Constructor.displayName = viewConfig.uiViewClassName;
  Constructor.viewConfig = viewConfig;
  Constructor.propTypes = viewConfig.propTypes;
  Constructor.prototype = new ReactNativeBaseComponent(viewConfig);
  Constructor.prototype.constructor = Constructor;

  return Constructor;
};

module.exports = createReactNativeComponentClass;
}, 452, null, "createReactNativeComponentClass");
__d(/* ReactNativeBaseComponent */function(global, require, module, exports) {
'use strict';

var NativeMethodsMixin = require(341                 ); // 341 = NativeMethodsMixin
var ReactNativeAttributePayload = require(342                          ); // 342 = ReactNativeAttributePayload
var ReactNativeComponentTree = require(454                       ); // 454 = ReactNativeComponentTree
var ReactNativeEventEmitter = require(455                      ); // 455 = ReactNativeEventEmitter
var ReactNativeTagHandles = require(463                    ); // 463 = ReactNativeTagHandles
var ReactMultiChild = require(473              ); // 473 = ReactMultiChild
var UIManager = require(395        ); // 395 = UIManager

var deepFreezeAndThrowOnMutationInDev = require(368                                ); // 368 = deepFreezeAndThrowOnMutationInDev

var registrationNames = ReactNativeEventEmitter.registrationNames;
var putListener = ReactNativeEventEmitter.putListener;
var deleteListener = ReactNativeEventEmitter.deleteListener;
var deleteAllListeners = ReactNativeEventEmitter.deleteAllListeners;

var ReactNativeBaseComponent = function ReactNativeBaseComponent(viewConfig) {
  this.viewConfig = viewConfig;
};

ReactNativeBaseComponent.Mixin = {
  getPublicInstance: function getPublicInstance() {
    return this;
  },

  unmountComponent: function unmountComponent() {
    ReactNativeComponentTree.uncacheNode(this);
    deleteAllListeners(this);
    this.unmountChildren();
    this._rootNodeID = 0;
  },

  initializeChildren: function initializeChildren(children, containerTag, transaction, context) {
    var mountImages = this.mountChildren(children, transaction, context);

    if (mountImages.length) {
      var createdTags = [];
      for (var i = 0, l = mountImages.length; i < l; i++) {
        var mountImage = mountImages[i];
        var childTag = mountImage;
        createdTags[i] = childTag;
      }
      UIManager.setChildren(containerTag, createdTags);
    }
  },

  receiveComponent: function receiveComponent(nextElement, transaction, context) {
    var prevElement = this._currentElement;
    this._currentElement = nextElement;

    if (__DEV__) {
      for (var key in this.viewConfig.validAttributes) {
        if (nextElement.props.hasOwnProperty(key)) {
          deepFreezeAndThrowOnMutationInDev(nextElement.props[key]);
        }
      }
    }

    var updatePayload = ReactNativeAttributePayload.diff(prevElement.props, nextElement.props, this.viewConfig.validAttributes);

    if (updatePayload) {
      UIManager.updateView(this._rootNodeID, this.viewConfig.uiViewClassName, updatePayload);
    }

    this._reconcileListenersUponUpdate(prevElement.props, nextElement.props);
    this.updateChildren(nextElement.props.children, transaction, context);
  },

  _registerListenersUponCreation: function _registerListenersUponCreation(initialProps) {
    for (var key in initialProps) {
      if (registrationNames[key] && initialProps[key]) {
        var listener = initialProps[key];
        putListener(this, key, listener);
      }
    }
  },

  _reconcileListenersUponUpdate: function _reconcileListenersUponUpdate(prevProps, nextProps) {
    for (var key in nextProps) {
      if (registrationNames[key] && nextProps[key] !== prevProps[key]) {
        if (nextProps[key]) {
          putListener(this, key, nextProps[key]);
        } else {
          deleteListener(this, key);
        }
      }
    }
  },

  getHostNode: function getHostNode() {
    return this._rootNodeID;
  },

  mountComponent: function mountComponent(transaction, hostParent, hostContainerInfo, context) {
    var tag = ReactNativeTagHandles.allocateTag();

    this._rootNodeID = tag;
    this._hostParent = hostParent;
    this._hostContainerInfo = hostContainerInfo;

    if (__DEV__) {
      for (var key in this.viewConfig.validAttributes) {
        if (this._currentElement.props.hasOwnProperty(key)) {
          deepFreezeAndThrowOnMutationInDev(this._currentElement.props[key]);
        }
      }
    }

    var updatePayload = ReactNativeAttributePayload.create(this._currentElement.props, this.viewConfig.validAttributes);

    var nativeTopRootTag = hostContainerInfo._tag;
    UIManager.createView(tag, this.viewConfig.uiViewClassName, nativeTopRootTag, updatePayload);

    ReactNativeComponentTree.precacheNode(this, tag);

    this._registerListenersUponCreation(this._currentElement.props);
    this.initializeChildren(this._currentElement.props.children, tag, transaction, context);
    return tag;
  }
};

babelHelpers.extends(ReactNativeBaseComponent.prototype, ReactMultiChild, ReactNativeBaseComponent.Mixin, NativeMethodsMixin);

module.exports = ReactNativeBaseComponent;
}, 453, null, "ReactNativeBaseComponent");
__d(/* ReactNativeComponentTree */function(global, require, module, exports) {

'use strict';

var invariant = require(346                 ); // 346 = fbjs/lib/invariant

var instanceCache = {};

function getRenderedHostOrTextFromComponent(component) {
  var rendered;
  while (rendered = component._renderedComponent) {
    component = rendered;
  }
  return component;
}

function precacheNode(inst, tag) {
  var nativeInst = getRenderedHostOrTextFromComponent(inst);
  instanceCache[tag] = nativeInst;
}

function uncacheNode(inst) {
  var tag = inst._rootNodeID;
  if (tag) {
    delete instanceCache[tag];
  }
}

function getInstanceFromTag(tag) {
  return instanceCache[tag] || null;
}

function getTagFromInstance(inst) {
  invariant(inst._rootNodeID, 'All native instances should have a tag.');
  return inst._rootNodeID;
}

var ReactNativeComponentTree = {
  getClosestInstanceFromNode: getInstanceFromTag,
  getInstanceFromNode: getInstanceFromTag,
  getNodeFromInstance: getTagFromInstance,
  precacheNode: precacheNode,
  uncacheNode: uncacheNode
};

module.exports = ReactNativeComponentTree;
}, 454, null, "ReactNativeComponentTree");
__d(/* ReactNativeEventEmitter */function(global, require, module, exports) {
'use strict';

var EventPluginHub = require(456             ); // 456 = EventPluginHub
var EventPluginRegistry = require(457                  ); // 457 = EventPluginRegistry
var ReactEventEmitterMixin = require(462                     ); // 462 = ReactEventEmitterMixin
var ReactNativeComponentTree = require(454                       ); // 454 = ReactNativeComponentTree
var ReactNativeTagHandles = require(463                    ); // 463 = ReactNativeTagHandles
var ReactUpdates = require(464           ); // 464 = ReactUpdates

var warning = require(335               ); // 335 = fbjs/lib/warning

var EMPTY_NATIVE_EVENT = {};

var touchSubsequence = function touchSubsequence(touches, indices) {
  var ret = [];
  for (var i = 0; i < indices.length; i++) {
    ret.push(touches[indices[i]]);
  }
  return ret;
};

var removeTouchesAtIndices = function removeTouchesAtIndices(touches, indices) {
  var rippedOut = [];

  var temp = touches;
  for (var i = 0; i < indices.length; i++) {
    var index = indices[i];
    rippedOut.push(touches[index]);
    temp[index] = null;
  }
  var fillAt = 0;
  for (var j = 0; j < temp.length; j++) {
    var cur = temp[j];
    if (cur !== null) {
      temp[fillAt++] = cur;
    }
  }
  temp.length = fillAt;
  return rippedOut;
};

var ReactNativeEventEmitter = babelHelpers.extends({}, ReactEventEmitterMixin, {

  registrationNames: EventPluginRegistry.registrationNameModules,

  putListener: EventPluginHub.putListener,

  getListener: EventPluginHub.getListener,

  deleteListener: EventPluginHub.deleteListener,

  deleteAllListeners: EventPluginHub.deleteAllListeners,

  _receiveRootNodeIDEvent: function _receiveRootNodeIDEvent(rootNodeID, topLevelType, nativeEventParam) {
    var nativeEvent = nativeEventParam || EMPTY_NATIVE_EVENT;
    var inst = ReactNativeComponentTree.getInstanceFromNode(rootNodeID);
    if (!inst) {
      return;
    }
    ReactUpdates.batchedUpdates(function () {
      ReactNativeEventEmitter.handleTopLevel(topLevelType, inst, nativeEvent, nativeEvent.target);
    });
  },

  receiveEvent: function receiveEvent(tag, topLevelType, nativeEventParam) {
    var rootNodeID = tag;
    ReactNativeEventEmitter._receiveRootNodeIDEvent(rootNodeID, topLevelType, nativeEventParam);
  },

  receiveTouches: function receiveTouches(eventTopLevelType, touches, changedIndices) {
    var changedTouches = eventTopLevelType === 'topTouchEnd' || eventTopLevelType === 'topTouchCancel' ? removeTouchesAtIndices(touches, changedIndices) : touchSubsequence(touches, changedIndices);

    for (var jj = 0; jj < changedTouches.length; jj++) {
      var touch = changedTouches[jj];

      touch.changedTouches = changedTouches;
      touch.touches = touches;
      var nativeEvent = touch;
      var rootNodeID = null;
      var target = nativeEvent.target;
      if (target !== null && target !== undefined) {
        if (target < ReactNativeTagHandles.tagsStartAt) {
          if (__DEV__) {
            warning(false, 'A view is reporting that a touch occured on tag zero.');
          }
        } else {
          rootNodeID = target;
        }
      }
      ReactNativeEventEmitter._receiveRootNodeIDEvent(rootNodeID, eventTopLevelType, nativeEvent);
    }
  }
});

module.exports = ReactNativeEventEmitter;
}, 455, null, "ReactNativeEventEmitter");
__d(/* EventPluginHub */function(global, require, module, exports) {

'use strict';

var EventPluginRegistry = require(457                  ); // 457 = EventPluginRegistry
var EventPluginUtils = require(458               ); // 458 = EventPluginUtils
var ReactErrorUtils = require(459              ); // 459 = ReactErrorUtils

var accumulateInto = require(460             ); // 460 = accumulateInto
var forEachAccumulated = require(461                 ); // 461 = forEachAccumulated
var invariant = require(346                 ); // 346 = fbjs/lib/invariant

var listenerBank = {};

var eventQueue = null;

var executeDispatchesAndRelease = function executeDispatchesAndRelease(event, simulated) {
  if (event) {
    EventPluginUtils.executeDispatchesInOrder(event, simulated);

    if (!event.isPersistent()) {
      event.constructor.release(event);
    }
  }
};
var executeDispatchesAndReleaseSimulated = function executeDispatchesAndReleaseSimulated(e) {
  return executeDispatchesAndRelease(e, true);
};
var executeDispatchesAndReleaseTopLevel = function executeDispatchesAndReleaseTopLevel(e) {
  return executeDispatchesAndRelease(e, false);
};

var getDictionaryKey = function getDictionaryKey(inst) {
  return '.' + inst._rootNodeID;
};

var EventPluginHub = {
  injection: {
    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,

    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName

  },

  putListener: function putListener(inst, registrationName, listener) {
    invariant(typeof listener === 'function', 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener);

    var key = getDictionaryKey(inst);
    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});
    bankForRegistrationName[key] = listener;

    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
    if (PluginModule && PluginModule.didPutListener) {
      PluginModule.didPutListener(inst, registrationName, listener);
    }
  },

  getListener: function getListener(inst, registrationName) {
    var bankForRegistrationName = listenerBank[registrationName];
    var key = getDictionaryKey(inst);
    return bankForRegistrationName && bankForRegistrationName[key];
  },

  deleteListener: function deleteListener(inst, registrationName) {
    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
    if (PluginModule && PluginModule.willDeleteListener) {
      PluginModule.willDeleteListener(inst, registrationName);
    }

    var bankForRegistrationName = listenerBank[registrationName];

    if (bankForRegistrationName) {
      var key = getDictionaryKey(inst);
      delete bankForRegistrationName[key];
    }
  },

  deleteAllListeners: function deleteAllListeners(inst) {
    var key = getDictionaryKey(inst);
    for (var registrationName in listenerBank) {
      if (!listenerBank.hasOwnProperty(registrationName)) {
        continue;
      }

      if (!listenerBank[registrationName][key]) {
        continue;
      }

      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
      if (PluginModule && PluginModule.willDeleteListener) {
        PluginModule.willDeleteListener(inst, registrationName);
      }

      delete listenerBank[registrationName][key];
    }
  },

  extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var events;
    var plugins = EventPluginRegistry.plugins;
    for (var i = 0; i < plugins.length; i++) {
      var possiblePlugin = plugins[i];
      if (possiblePlugin) {
        var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
        if (extractedEvents) {
          events = accumulateInto(events, extractedEvents);
        }
      }
    }
    return events;
  },

  enqueueEvents: function enqueueEvents(events) {
    if (events) {
      eventQueue = accumulateInto(eventQueue, events);
    }
  },

  processEventQueue: function processEventQueue(simulated) {
    var processingEventQueue = eventQueue;
    eventQueue = null;
    if (simulated) {
      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
    } else {
      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
    }
    invariant(!eventQueue, 'processEventQueue(): Additional events were enqueued while processing ' + 'an event queue. Support for this has not yet been implemented.');

    ReactErrorUtils.rethrowCaughtError();
  },

  __purge: function __purge() {
    listenerBank = {};
  },

  __getListenerBank: function __getListenerBank() {
    return listenerBank;
  }

};

module.exports = EventPluginHub;
}, 456, null, "EventPluginHub");
__d(/* EventPluginRegistry */function(global, require, module, exports) {

'use strict';

var invariant = require(346                 ); // 346 = fbjs/lib/invariant

var eventPluginOrder = null;

var namesToPlugins = {};

function recomputePluginOrdering() {
  if (!eventPluginOrder) {
    return;
  }
  for (var pluginName in namesToPlugins) {
    var pluginModule = namesToPlugins[pluginName];
    var pluginIndex = eventPluginOrder.indexOf(pluginName);
    invariant(pluginIndex > -1, 'EventPluginRegistry: Cannot inject event plugins that do not exist in ' + 'the plugin ordering, `%s`.', pluginName);
    if (EventPluginRegistry.plugins[pluginIndex]) {
      continue;
    }
    invariant(pluginModule.extractEvents, 'EventPluginRegistry: Event plugins must implement an `extractEvents` ' + 'method, but `%s` does not.', pluginName);
    EventPluginRegistry.plugins[pluginIndex] = pluginModule;
    var publishedEvents = pluginModule.eventTypes;
    for (var eventName in publishedEvents) {
      invariant(publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName), 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName);
    }
  }
}

function publishEventForPlugin(dispatchConfig, pluginModule, eventName) {
  invariant(!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName), 'EventPluginHub: More than one plugin attempted to publish the same ' + 'event name, `%s`.', eventName);
  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;

  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
  if (phasedRegistrationNames) {
    for (var phaseName in phasedRegistrationNames) {
      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
        var phasedRegistrationName = phasedRegistrationNames[phaseName];
        publishRegistrationName(phasedRegistrationName, pluginModule, eventName);
      }
    }
    return true;
  } else if (dispatchConfig.registrationName) {
    publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName);
    return true;
  }
  return false;
}

function publishRegistrationName(registrationName, pluginModule, eventName) {
  invariant(!EventPluginRegistry.registrationNameModules[registrationName], 'EventPluginHub: More than one plugin attempted to publish the same ' + 'registration name, `%s`.', registrationName);
  EventPluginRegistry.registrationNameModules[registrationName] = pluginModule;
  EventPluginRegistry.registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;

  if (__DEV__) {
    var lowerCasedName = registrationName.toLowerCase();
    EventPluginRegistry.possibleRegistrationNames[lowerCasedName] = registrationName;

    if (registrationName === 'onDoubleClick') {
      EventPluginRegistry.possibleRegistrationNames.ondblclick = registrationName;
    }
  }
}

var EventPluginRegistry = {
  plugins: [],

  eventNameDispatchConfigs: {},

  registrationNameModules: {},

  registrationNameDependencies: {},

  possibleRegistrationNames: __DEV__ ? {} : null,

  injectEventPluginOrder: function injectEventPluginOrder(injectedEventPluginOrder) {
    invariant(!eventPluginOrder, 'EventPluginRegistry: Cannot inject event plugin ordering more than ' + 'once. You are likely trying to load more than one copy of React.');

    eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);
    recomputePluginOrdering();
  },

  injectEventPluginsByName: function injectEventPluginsByName(injectedNamesToPlugins) {
    var isOrderingDirty = false;
    for (var pluginName in injectedNamesToPlugins) {
      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
        continue;
      }
      var pluginModule = injectedNamesToPlugins[pluginName];
      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {
        invariant(!namesToPlugins[pluginName], 'EventPluginRegistry: Cannot inject two different event plugins ' + 'using the same name, `%s`.', pluginName);
        namesToPlugins[pluginName] = pluginModule;
        isOrderingDirty = true;
      }
    }
    if (isOrderingDirty) {
      recomputePluginOrdering();
    }
  },

  getPluginModuleForEvent: function getPluginModuleForEvent(event) {
    var dispatchConfig = event.dispatchConfig;
    if (dispatchConfig.registrationName) {
      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;
    }
    if (dispatchConfig.phasedRegistrationNames !== undefined) {
      var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;

      for (var phase in phasedRegistrationNames) {
        if (!phasedRegistrationNames.hasOwnProperty(phase)) {
          continue;
        }
        var pluginModule = EventPluginRegistry.registrationNameModules[phasedRegistrationNames[phase]];
        if (pluginModule) {
          return pluginModule;
        }
      }
    }
    return null;
  },

  _resetEventPlugins: function _resetEventPlugins() {
    eventPluginOrder = null;
    for (var pluginName in namesToPlugins) {
      if (namesToPlugins.hasOwnProperty(pluginName)) {
        delete namesToPlugins[pluginName];
      }
    }
    EventPluginRegistry.plugins.length = 0;

    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
    for (var eventName in eventNameDispatchConfigs) {
      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
        delete eventNameDispatchConfigs[eventName];
      }
    }

    var registrationNameModules = EventPluginRegistry.registrationNameModules;
    for (var registrationName in registrationNameModules) {
      if (registrationNameModules.hasOwnProperty(registrationName)) {
        delete registrationNameModules[registrationName];
      }
    }

    if (__DEV__) {
      var possibleRegistrationNames = EventPluginRegistry.possibleRegistrationNames;
      for (var lowerCasedName in possibleRegistrationNames) {
        if (possibleRegistrationNames.hasOwnProperty(lowerCasedName)) {
          delete possibleRegistrationNames[lowerCasedName];
        }
      }
    }
  }

};

module.exports = EventPluginRegistry;
}, 457, null, "EventPluginRegistry");
__d(/* EventPluginUtils */function(global, require, module, exports) {

'use strict';

var ReactErrorUtils = require(459              ); // 459 = ReactErrorUtils

var invariant = require(346                 ); // 346 = fbjs/lib/invariant
var warning = require(335               ); // 335 = fbjs/lib/warning

var ComponentTree;
var TreeTraversal;
var injection = {
  injectComponentTree: function injectComponentTree(Injected) {
    ComponentTree = Injected;
    if (__DEV__) {
      warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.');
    }
  },
  injectTreeTraversal: function injectTreeTraversal(Injected) {
    TreeTraversal = Injected;
    if (__DEV__) {
      warning(Injected && Injected.isAncestor && Injected.getLowestCommonAncestor, 'EventPluginUtils.injection.injectTreeTraversal(...): Injected ' + 'module is missing isAncestor or getLowestCommonAncestor.');
    }
  }
};

function isEndish(topLevelType) {
  return topLevelType === 'topMouseUp' || topLevelType === 'topTouchEnd' || topLevelType === 'topTouchCancel';
}

function isMoveish(topLevelType) {
  return topLevelType === 'topMouseMove' || topLevelType === 'topTouchMove';
}
function isStartish(topLevelType) {
  return topLevelType === 'topMouseDown' || topLevelType === 'topTouchStart';
}

var validateEventDispatches;
if (__DEV__) {
  validateEventDispatches = function validateEventDispatches(event) {
    var dispatchListeners = event._dispatchListeners;
    var dispatchInstances = event._dispatchInstances;

    var listenersIsArr = Array.isArray(dispatchListeners);
    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;

    var instancesIsArr = Array.isArray(dispatchInstances);
    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;

    warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.');
  };
}

function executeDispatch(event, simulated, listener, inst) {
  var type = event.type || 'unknown-event';
  event.currentTarget = EventPluginUtils.getNodeFromInstance(inst);
  if (simulated) {
    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event);
  } else {
    ReactErrorUtils.invokeGuardedCallback(type, listener, event);
  }
  event.currentTarget = null;
}

function executeDispatchesInOrder(event, simulated) {
  var dispatchListeners = event._dispatchListeners;
  var dispatchInstances = event._dispatchInstances;
  if (__DEV__) {
    validateEventDispatches(event);
  }
  if (Array.isArray(dispatchListeners)) {
    for (var i = 0; i < dispatchListeners.length; i++) {
      if (event.isPropagationStopped()) {
        break;
      }

      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
    }
  } else if (dispatchListeners) {
    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
  }
  event._dispatchListeners = null;
  event._dispatchInstances = null;
}

function executeDispatchesInOrderStopAtTrueImpl(event) {
  var dispatchListeners = event._dispatchListeners;
  var dispatchInstances = event._dispatchInstances;
  if (__DEV__) {
    validateEventDispatches(event);
  }
  if (Array.isArray(dispatchListeners)) {
    for (var i = 0; i < dispatchListeners.length; i++) {
      if (event.isPropagationStopped()) {
        break;
      }

      if (dispatchListeners[i](event, dispatchInstances[i])) {
        return dispatchInstances[i];
      }
    }
  } else if (dispatchListeners) {
    if (dispatchListeners(event, dispatchInstances)) {
      return dispatchInstances;
    }
  }
  return null;
}

function executeDispatchesInOrderStopAtTrue(event) {
  var ret = executeDispatchesInOrderStopAtTrueImpl(event);
  event._dispatchInstances = null;
  event._dispatchListeners = null;
  return ret;
}

function executeDirectDispatch(event) {
  if (__DEV__) {
    validateEventDispatches(event);
  }
  var dispatchListener = event._dispatchListeners;
  var dispatchInstance = event._dispatchInstances;
  invariant(!Array.isArray(dispatchListener), 'executeDirectDispatch(...): Invalid `event`.');
  event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;
  var res = dispatchListener ? dispatchListener(event) : null;
  event.currentTarget = null;
  event._dispatchListeners = null;
  event._dispatchInstances = null;
  return res;
}

function hasDispatches(event) {
  return !!event._dispatchListeners;
}

var EventPluginUtils = {
  isEndish: isEndish,
  isMoveish: isMoveish,
  isStartish: isStartish,

  executeDirectDispatch: executeDirectDispatch,
  executeDispatchesInOrder: executeDispatchesInOrder,
  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
  hasDispatches: hasDispatches,

  getInstanceFromNode: function getInstanceFromNode(node) {
    return ComponentTree.getInstanceFromNode(node);
  },
  getNodeFromInstance: function getNodeFromInstance(node) {
    return ComponentTree.getNodeFromInstance(node);
  },
  isAncestor: function isAncestor(a, b) {
    return TreeTraversal.isAncestor(a, b);
  },
  getLowestCommonAncestor: function getLowestCommonAncestor(a, b) {
    return TreeTraversal.getLowestCommonAncestor(a, b);
  },
  getParentInstance: function getParentInstance(inst) {
    return TreeTraversal.getParentInstance(inst);
  },
  traverseTwoPhase: function traverseTwoPhase(target, fn, arg) {
    return TreeTraversal.traverseTwoPhase(target, fn, arg);
  },
  traverseEnterLeave: function traverseEnterLeave(from, to, fn, argFrom, argTo) {
    return TreeTraversal.traverseEnterLeave(from, to, fn, argFrom, argTo);
  },

  injection: injection
};

module.exports = EventPluginUtils;
}, 458, null, "EventPluginUtils");
__d(/* ReactErrorUtils */function(global, require, module, exports) {

'use strict';

var caughtError = null;

function invokeGuardedCallback(name, func, a) {
  try {
    func(a);
  } catch (x) {
    if (caughtError === null) {
      caughtError = x;
    }
  }
}

var ReactErrorUtils = {
  invokeGuardedCallback: invokeGuardedCallback,

  invokeGuardedCallbackWithCatch: invokeGuardedCallback,

  rethrowCaughtError: function rethrowCaughtError() {
    if (caughtError) {
      var error = caughtError;
      caughtError = null;
      throw error;
    }
  }
};

if (__DEV__) {
  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
    var fakeNode = document.createElement('react');
    ReactErrorUtils.invokeGuardedCallback = function (name, func, a) {
      var boundFunc = func.bind(null, a);
      var evtType = 'react-' + name;
      fakeNode.addEventListener(evtType, boundFunc, false);
      var evt = document.createEvent('Event');

      evt.initEvent(evtType, false, false);
      fakeNode.dispatchEvent(evt);
      fakeNode.removeEventListener(evtType, boundFunc, false);
    };
  }
}

module.exports = ReactErrorUtils;
}, 459, null, "ReactErrorUtils");
__d(/* accumulateInto */function(global, require, module, exports) {

'use strict';

var invariant = require(346                 ); // 346 = fbjs/lib/invariant

function accumulateInto(current, next) {
  invariant(next != null, 'accumulateInto(...): Accumulated items must not be null or undefined.');

  if (current == null) {
    return next;
  }

  if (Array.isArray(current)) {
    if (Array.isArray(next)) {
      current.push.apply(current, next);
      return current;
    }
    current.push(next);
    return current;
  }

  if (Array.isArray(next)) {
    return [current].concat(next);
  }

  return [current, next];
}

module.exports = accumulateInto;
}, 460, null, "accumulateInto");
__d(/* forEachAccumulated */function(global, require, module, exports) {

'use strict';

function forEachAccumulated(arr, cb, scope) {
  if (Array.isArray(arr)) {
    arr.forEach(cb, scope);
  } else if (arr) {
    cb.call(scope, arr);
  }
}

module.exports = forEachAccumulated;
}, 461, null, "forEachAccumulated");
__d(/* ReactEventEmitterMixin */function(global, require, module, exports) {

'use strict';

var EventPluginHub = require(456             ); // 456 = EventPluginHub

function runEventQueueInBatch(events) {
  EventPluginHub.enqueueEvents(events);
  EventPluginHub.processEventQueue(false);
}

var ReactEventEmitterMixin = {
  handleTopLevel: function handleTopLevel(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var events = EventPluginHub.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
    runEventQueueInBatch(events);
  }
};

module.exports = ReactEventEmitterMixin;
}, 462, null, "ReactEventEmitterMixin");
__d(/* ReactNativeTagHandles */function(global, require, module, exports) {
'use strict';

var invariant = require(346                 ); // 346 = fbjs/lib/invariant

var INITIAL_TAG_COUNT = 1;
var ReactNativeTagHandles = {
  tagsStartAt: INITIAL_TAG_COUNT,
  tagCount: INITIAL_TAG_COUNT,

  allocateTag: function allocateTag() {
    while (this.reactTagIsNativeTopRootID(ReactNativeTagHandles.tagCount)) {
      ReactNativeTagHandles.tagCount++;
    }
    var tag = ReactNativeTagHandles.tagCount;
    ReactNativeTagHandles.tagCount++;
    return tag;
  },

  assertRootTag: function assertRootTag(tag) {
    invariant(this.reactTagIsNativeTopRootID(tag), 'Expect a native root tag, instead got %s', tag);
  },

  reactTagIsNativeTopRootID: function reactTagIsNativeTopRootID(reactTag) {
    return reactTag % 10 === 1;
  }
};

module.exports = ReactNativeTagHandles;
}, 463, null, "ReactNativeTagHandles");
__d(/* ReactUpdates */function(global, require, module, exports) {

'use strict';

var CallbackQueue = require(465            ); // 465 = CallbackQueue
var PooledClass = require(466          ); // 466 = PooledClass
var ReactFeatureFlags = require(467                ); // 467 = ReactFeatureFlags
var ReactReconciler = require(468              ); // 468 = ReactReconciler
var Transaction = require(472          ); // 472 = Transaction

var invariant = require(346                 ); // 346 = fbjs/lib/invariant

var dirtyComponents = [];
var updateBatchNumber = 0;
var asapCallbackQueue = CallbackQueue.getPooled();
var asapEnqueued = false;

var batchingStrategy = null;

function ensureInjected() {
  invariant(ReactUpdates.ReactReconcileTransaction && batchingStrategy, 'ReactUpdates: must inject a reconcile transaction class and batching ' + 'strategy');
}

var NESTED_UPDATES = {
  initialize: function initialize() {
    this.dirtyComponentsLength = dirtyComponents.length;
  },
  close: function close() {
    if (this.dirtyComponentsLength !== dirtyComponents.length) {
      dirtyComponents.splice(0, this.dirtyComponentsLength);
      flushBatchedUpdates();
    } else {
      dirtyComponents.length = 0;
    }
  }
};

var UPDATE_QUEUEING = {
  initialize: function initialize() {
    this.callbackQueue.reset();
  },
  close: function close() {
    this.callbackQueue.notifyAll();
  }
};

var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];

function ReactUpdatesFlushTransaction() {
  this.reinitializeTransaction();
  this.dirtyComponentsLength = null;
  this.callbackQueue = CallbackQueue.getPooled();
  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(true);
}

babelHelpers.extends(ReactUpdatesFlushTransaction.prototype, Transaction, {
  getTransactionWrappers: function getTransactionWrappers() {
    return TRANSACTION_WRAPPERS;
  },

  destructor: function destructor() {
    this.dirtyComponentsLength = null;
    CallbackQueue.release(this.callbackQueue);
    this.callbackQueue = null;
    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
    this.reconcileTransaction = null;
  },

  perform: function perform(method, scope, a) {
    return Transaction.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);
  }
});

PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);

function batchedUpdates(callback, a, b, c, d, e) {
  ensureInjected();
  return batchingStrategy.batchedUpdates(callback, a, b, c, d, e);
}

function mountOrderComparator(c1, c2) {
  return c1._mountOrder - c2._mountOrder;
}

function runBatchedUpdates(transaction) {
  var len = transaction.dirtyComponentsLength;
  invariant(len === dirtyComponents.length, 'Expected flush transaction\'s stored dirty-components length (%s) to ' + 'match dirty-components array length (%s).', len, dirtyComponents.length);

  dirtyComponents.sort(mountOrderComparator);

  updateBatchNumber++;

  for (var i = 0; i < len; i++) {
    var component = dirtyComponents[i];

    var callbacks = component._pendingCallbacks;
    component._pendingCallbacks = null;

    var markerName;
    if (ReactFeatureFlags.logTopLevelRenders) {
      var namedComponent = component;

      if (component._currentElement.type.isReactTopLevelWrapper) {
        namedComponent = component._renderedComponent;
      }
      markerName = 'React update: ' + namedComponent.getName();
      console.time(markerName);
    }

    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction, updateBatchNumber);

    if (markerName) {
      console.timeEnd(markerName);
    }

    if (callbacks) {
      for (var j = 0; j < callbacks.length; j++) {
        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());
      }
    }
  }
}

var flushBatchedUpdates = function flushBatchedUpdates() {
  while (dirtyComponents.length || asapEnqueued) {
    if (dirtyComponents.length) {
      var transaction = ReactUpdatesFlushTransaction.getPooled();
      transaction.perform(runBatchedUpdates, null, transaction);
      ReactUpdatesFlushTransaction.release(transaction);
    }

    if (asapEnqueued) {
      asapEnqueued = false;
      var queue = asapCallbackQueue;
      asapCallbackQueue = CallbackQueue.getPooled();
      queue.notifyAll();
      CallbackQueue.release(queue);
    }
  }
};

function enqueueUpdate(component) {
  ensureInjected();

  if (!batchingStrategy.isBatchingUpdates) {
    batchingStrategy.batchedUpdates(enqueueUpdate, component);
    return;
  }

  dirtyComponents.push(component);
  if (component._updateBatchNumber == null) {
    component._updateBatchNumber = updateBatchNumber + 1;
  }
}

function asap(callback, context) {
  invariant(batchingStrategy.isBatchingUpdates, 'ReactUpdates.asap: Can\'t enqueue an asap callback in a context where' + 'updates are not being batched.');
  asapCallbackQueue.enqueue(callback, context);
  asapEnqueued = true;
}

var ReactUpdatesInjection = {
  injectReconcileTransaction: function injectReconcileTransaction(ReconcileTransaction) {
    invariant(ReconcileTransaction, 'ReactUpdates: must provide a reconcile transaction class');
    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
  },

  injectBatchingStrategy: function injectBatchingStrategy(_batchingStrategy) {
    invariant(_batchingStrategy, 'ReactUpdates: must provide a batching strategy');
    invariant(typeof _batchingStrategy.batchedUpdates === 'function', 'ReactUpdates: must provide a batchedUpdates() function');
    invariant(typeof _batchingStrategy.isBatchingUpdates === 'boolean', 'ReactUpdates: must provide an isBatchingUpdates boolean attribute');
    batchingStrategy = _batchingStrategy;
  },

  getBatchingStrategy: function getBatchingStrategy() {
    return batchingStrategy;
  }
};

var ReactUpdates = {
  ReactReconcileTransaction: null,

  batchedUpdates: batchedUpdates,
  enqueueUpdate: enqueueUpdate,
  flushBatchedUpdates: flushBatchedUpdates,
  injection: ReactUpdatesInjection,
  asap: asap
};

module.exports = ReactUpdates;
}, 464, null, "ReactUpdates");
__d(/* CallbackQueue */function(global, require, module, exports) {

'use strict';

var PooledClass = require(466          ); // 466 = PooledClass

var invariant = require(346                 ); // 346 = fbjs/lib/invariant

var CallbackQueue = function () {
  function CallbackQueue(arg) {
    babelHelpers.classCallCheck(this, CallbackQueue);

    this._callbacks = null;
    this._contexts = null;
    this._arg = arg;
  }

  babelHelpers.createClass(CallbackQueue, [{
    key: 'enqueue',
    value: function enqueue(callback, context) {
      this._callbacks = this._callbacks || [];
      this._callbacks.push(callback);
      this._contexts = this._contexts || [];
      this._contexts.push(context);
    }
  }, {
    key: 'notifyAll',
    value: function notifyAll() {
      var callbacks = this._callbacks;
      var contexts = this._contexts;
      var arg = this._arg;
      if (callbacks && contexts) {
        invariant(callbacks.length === contexts.length, 'Mismatched list of contexts in callback queue');
        this._callbacks = null;
        this._contexts = null;
        for (var i = 0; i < callbacks.length; i++) {
          callbacks[i].call(contexts[i], arg);
        }
        callbacks.length = 0;
        contexts.length = 0;
      }
    }
  }, {
    key: 'checkpoint',
    value: function checkpoint() {
      return this._callbacks ? this._callbacks.length : 0;
    }
  }, {
    key: 'rollback',
    value: function rollback(len) {
      if (this._callbacks && this._contexts) {
        this._callbacks.length = len;
        this._contexts.length = len;
      }
    }
  }, {
    key: 'reset',
    value: function reset() {
      this._callbacks = null;
      this._contexts = null;
    }
  }, {
    key: 'destructor',
    value: function destructor() {
      this.reset();
    }
  }]);
  return CallbackQueue;
}();

module.exports = PooledClass.addPoolingTo(CallbackQueue);
}, 465, null, "CallbackQueue");
__d(/* PooledClass */function(global, require, module, exports) {

'use strict';

var invariant = require(346                 ); // 346 = fbjs/lib/invariant

var oneArgumentPooler = function oneArgumentPooler(copyFieldsFrom) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, copyFieldsFrom);
    return instance;
  } else {
    return new Klass(copyFieldsFrom);
  }
};

var twoArgumentPooler = function twoArgumentPooler(a1, a2) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2);
    return instance;
  } else {
    return new Klass(a1, a2);
  }
};

var threeArgumentPooler = function threeArgumentPooler(a1, a2, a3) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3);
    return instance;
  } else {
    return new Klass(a1, a2, a3);
  }
};

var fourArgumentPooler = function fourArgumentPooler(a1, a2, a3, a4) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3, a4);
    return instance;
  } else {
    return new Klass(a1, a2, a3, a4);
  }
};

var fiveArgumentPooler = function fiveArgumentPooler(a1, a2, a3, a4, a5) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3, a4, a5);
    return instance;
  } else {
    return new Klass(a1, a2, a3, a4, a5);
  }
};

var standardReleaser = function standardReleaser(instance) {
  var Klass = this;
  invariant(instance instanceof Klass, 'Trying to release an instance into a pool of a different type.');
  instance.destructor();
  if (Klass.instancePool.length < Klass.poolSize) {
    Klass.instancePool.push(instance);
  }
};

var DEFAULT_POOL_SIZE = 10;
var DEFAULT_POOLER = oneArgumentPooler;

var addPoolingTo = function addPoolingTo(CopyConstructor, pooler) {
  var NewKlass = CopyConstructor;
  NewKlass.instancePool = [];
  NewKlass.getPooled = pooler || DEFAULT_POOLER;
  if (!NewKlass.poolSize) {
    NewKlass.poolSize = DEFAULT_POOL_SIZE;
  }
  NewKlass.release = standardReleaser;
  return NewKlass;
};

var PooledClass = {
  addPoolingTo: addPoolingTo,
  oneArgumentPooler: oneArgumentPooler,
  twoArgumentPooler: twoArgumentPooler,
  threeArgumentPooler: threeArgumentPooler,
  fourArgumentPooler: fourArgumentPooler,
  fiveArgumentPooler: fiveArgumentPooler
};

module.exports = PooledClass;
}, 466, null, "PooledClass");
__d(/* ReactFeatureFlags */function(global, require, module, exports) {

'use strict';

var ReactFeatureFlags = {
  logTopLevelRenders: false
};

module.exports = ReactFeatureFlags;
}, 467, null, "ReactFeatureFlags");
__d(/* ReactReconciler */function(global, require, module, exports) {

'use strict';

var ReactRef = require(469       ); // 469 = ReactRef
var ReactInstrumentation = require(471                   ); // 471 = ReactInstrumentation

var warning = require(335               ); // 335 = fbjs/lib/warning

function attachRefs(transaction) {
  ReactRef.attachRefs(this, this._currentElement, transaction);
}

var ReactReconciler = {
  mountComponent: function mountComponent(internalInstance, transaction, hostParent, hostContainerInfo, context, parentDebugID) {
    if (__DEV__) {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onBeforeMountComponent(internalInstance._debugID, internalInstance._currentElement, parentDebugID);
      }
    }
    var markup = internalInstance.mountComponent(transaction, hostParent, hostContainerInfo, context, parentDebugID);
    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {
      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
    }
    if (__DEV__) {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onMountComponent(internalInstance._debugID);
      }
    }
    return markup;
  },

  getHostNode: function getHostNode(internalInstance) {
    return internalInstance.getHostNode();
  },

  unmountComponent: function unmountComponent(internalInstance, safely) {
    if (__DEV__) {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onBeforeUnmountComponent(internalInstance._debugID);
      }
    }
    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
    internalInstance.unmountComponent(safely);
    if (__DEV__) {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onUnmountComponent(internalInstance._debugID);
      }
    }
  },

  receiveComponent: function receiveComponent(internalInstance, nextElement, transaction, context) {
    var prevElement = internalInstance._currentElement;

    if (nextElement === prevElement && context === internalInstance._context) {
      return;
    }

    if (__DEV__) {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, nextElement);
      }
    }

    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);

    if (refsChanged) {
      ReactRef.detachRefs(internalInstance, prevElement);
    }

    internalInstance.receiveComponent(nextElement, transaction, context);

    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {
      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
    }

    if (__DEV__) {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
      }
    }
  },

  performUpdateIfNecessary: function performUpdateIfNecessary(internalInstance, transaction, updateBatchNumber) {
    if (internalInstance._updateBatchNumber !== updateBatchNumber) {
      warning(internalInstance._updateBatchNumber == null || internalInstance._updateBatchNumber === updateBatchNumber + 1, 'performUpdateIfNecessary: Unexpected batch number (current %s, ' + 'pending %s)', updateBatchNumber, internalInstance._updateBatchNumber);
      return;
    }
    if (__DEV__) {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, internalInstance._currentElement);
      }
    }
    internalInstance.performUpdateIfNecessary(transaction);
    if (__DEV__) {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
      }
    }
  }

};

module.exports = ReactReconciler;
}, 468, null, "ReactReconciler");
__d(/* ReactRef */function(global, require, module, exports) {

'use strict';

var ReactOwner = require(470         ); // 470 = ReactOwner

var ReactRef = {};

function attachRef(ref, component, owner, transaction) {
  if (typeof ref === 'function') {
    ref(component.getPublicInstance(transaction));
  } else {
    ReactOwner.addComponentAsRefTo(component, ref, owner, transaction);
  }
}

function detachRef(ref, component, owner) {
  if (typeof ref === 'function') {
    ref(null);
  } else {
    ReactOwner.removeComponentAsRefFrom(component, ref, owner);
  }
}

ReactRef.attachRefs = function (instance, element, transaction) {
  if (element === null || typeof element !== 'object') {
    return;
  }
  var ref = element.ref;
  if (ref != null) {
    attachRef(ref, instance, element._owner, transaction);
  }
};

ReactRef.shouldUpdateRefs = function (prevElement, nextElement) {

  var prevRef = null;
  var prevOwner = null;
  if (prevElement !== null && typeof prevElement === 'object') {
    prevRef = prevElement.ref;
    prevOwner = prevElement._owner;
  }

  var nextRef = null;
  var nextOwner = null;
  if (nextElement !== null && typeof nextElement === 'object') {
    nextRef = nextElement.ref;
    nextOwner = nextElement._owner;
  }

  return prevRef !== nextRef || typeof nextRef === 'string' && nextOwner !== prevOwner;
};

ReactRef.detachRefs = function (instance, element) {
  if (element === null || typeof element !== 'object') {
    return;
  }
  var ref = element.ref;
  if (ref != null) {
    detachRef(ref, instance, element._owner);
  }
};

module.exports = ReactRef;
}, 469, null, "ReactRef");
__d(/* ReactOwner */function(global, require, module, exports) {

'use strict';

var invariant = require(346                 ); // 346 = fbjs/lib/invariant

function isValidOwner(object) {
  return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');
}

var ReactOwner = {
  addComponentAsRefTo: function addComponentAsRefTo(component, ref, owner, transaction) {
    invariant(isValidOwner(owner), 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might ' + 'be adding a ref to a component that was not created inside a component\'s ' + '`render` method, or you have multiple copies of React loaded ' + '(details: https://fb.me/react-refs-must-have-owner).');
    owner.attachRef(ref, component, transaction);
  },

  removeComponentAsRefFrom: function removeComponentAsRefFrom(component, ref, owner) {
    invariant(isValidOwner(owner), 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might ' + 'be removing a ref to a component that was not created inside a component\'s ' + '`render` method, or you have multiple copies of React loaded ' + '(details: https://fb.me/react-refs-must-have-owner).');
    var ownerPublicInstance = owner.getPublicInstance();

    if (ownerPublicInstance && ownerPublicInstance.refs[ref] === component.getPublicInstance()) {
      owner.detachRef(ref);
    }
  }

};

module.exports = ReactOwner;
}, 470, null, "ReactOwner");
__d(/* ReactInstrumentation */function(global, require, module, exports) {

'use strict';

var debugTool = null;

if (__DEV__) {
  var ReactDebugTool = require(358             ); // 358 = ReactDebugTool
  debugTool = ReactDebugTool;
}

module.exports = { debugTool: debugTool };
}, 471, null, "ReactInstrumentation");
__d(/* Transaction */function(global, require, module, exports) {

'use strict';

var invariant = require(346                 ); // 346 = fbjs/lib/invariant

var OBSERVED_ERROR = {};

var TransactionImpl = {
  reinitializeTransaction: function reinitializeTransaction() {
    this.transactionWrappers = this.getTransactionWrappers();
    if (this.wrapperInitData) {
      this.wrapperInitData.length = 0;
    } else {
      this.wrapperInitData = [];
    }
    this._isInTransaction = false;
  },

  _isInTransaction: false,

  getTransactionWrappers: null,

  isInTransaction: function isInTransaction() {
    return !!this._isInTransaction;
  },

  perform: function perform(method, scope, a, b, c, d, e, f) {
    invariant(!this.isInTransaction(), 'Transaction.perform(...): Cannot initialize a transaction when there ' + 'is already an outstanding transaction.');
    var errorThrown;
    var ret;
    try {
      this._isInTransaction = true;

      errorThrown = true;
      this.initializeAll(0);
      ret = method.call(scope, a, b, c, d, e, f);
      errorThrown = false;
    } finally {
      try {
        if (errorThrown) {
          try {
            this.closeAll(0);
          } catch (err) {}
        } else {
          this.closeAll(0);
        }
      } finally {
        this._isInTransaction = false;
      }
    }
    return ret;
  },

  initializeAll: function initializeAll(startIndex) {
    var transactionWrappers = this.transactionWrappers;
    for (var i = startIndex; i < transactionWrappers.length; i++) {
      var wrapper = transactionWrappers[i];
      try {
        this.wrapperInitData[i] = OBSERVED_ERROR;
        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;
      } finally {
        if (this.wrapperInitData[i] === OBSERVED_ERROR) {
          try {
            this.initializeAll(i + 1);
          } catch (err) {}
        }
      }
    }
  },

  closeAll: function closeAll(startIndex) {
    invariant(this.isInTransaction(), 'Transaction.closeAll(): Cannot close transaction when none are open.');
    var transactionWrappers = this.transactionWrappers;
    for (var i = startIndex; i < transactionWrappers.length; i++) {
      var wrapper = transactionWrappers[i];
      var initData = this.wrapperInitData[i];
      var errorThrown;
      try {
        errorThrown = true;
        if (initData !== OBSERVED_ERROR && wrapper.close) {
          wrapper.close.call(this, initData);
        }
        errorThrown = false;
      } finally {
        if (errorThrown) {
          try {
            this.closeAll(i + 1);
          } catch (e) {}
        }
      }
    }
    this.wrapperInitData.length = 0;
  }
};

module.exports = TransactionImpl;
}, 472, null, "Transaction");
__d(/* ReactMultiChild */function(global, require, module, exports) {

'use strict';

var ReactComponentEnvironment = require(474                        ); // 474 = ReactComponentEnvironment
var ReactInstanceMap = require(397               ); // 397 = ReactInstanceMap
var ReactInstrumentation = require(471                   ); // 471 = ReactInstrumentation

var ReactCurrentOwner = require(357                          ); // 357 = react/lib/ReactCurrentOwner
var ReactReconciler = require(468              ); // 468 = ReactReconciler
var ReactChildReconciler = require(475                   ); // 475 = ReactChildReconciler

var emptyFunction = require(336                     ); // 336 = fbjs/lib/emptyFunction
var flattenChildren = require(490              ); // 490 = flattenChildren
var invariant = require(346                 ); // 346 = fbjs/lib/invariant

function makeInsertMarkup(markup, afterNode, toIndex) {
  return {
    type: 'INSERT_MARKUP',
    content: markup,
    fromIndex: null,
    fromNode: null,
    toIndex: toIndex,
    afterNode: afterNode
  };
}

function makeMove(child, afterNode, toIndex) {
  return {
    type: 'MOVE_EXISTING',
    content: null,
    fromIndex: child._mountIndex,
    fromNode: ReactReconciler.getHostNode(child),
    toIndex: toIndex,
    afterNode: afterNode
  };
}

function makeRemove(child, node) {
  return {
    type: 'REMOVE_NODE',
    content: null,
    fromIndex: child._mountIndex,
    fromNode: node,
    toIndex: null,
    afterNode: null
  };
}

function makeSetMarkup(markup) {
  return {
    type: 'SET_MARKUP',
    content: markup,
    fromIndex: null,
    fromNode: null,
    toIndex: null,
    afterNode: null
  };
}

function makeTextContent(textContent) {
  return {
    type: 'TEXT_CONTENT',
    content: textContent,
    fromIndex: null,
    fromNode: null,
    toIndex: null,
    afterNode: null
  };
}

function enqueue(queue, update) {
  if (update) {
    queue = queue || [];
    queue.push(update);
  }
  return queue;
}

function processQueue(inst, updateQueue) {
  ReactComponentEnvironment.processChildrenUpdates(inst, updateQueue);
}

var setChildrenForInstrumentation = emptyFunction;
if (__DEV__) {
  var getDebugID = function getDebugID(inst) {
    if (!inst._debugID) {
      var internal;
      if (internal = ReactInstanceMap.get(inst)) {
        inst = internal;
      }
    }
    return inst._debugID;
  };
  setChildrenForInstrumentation = function setChildrenForInstrumentation(children) {
    var debugID = getDebugID(this);

    if (debugID !== 0) {
      ReactInstrumentation.debugTool.onSetChildren(debugID, children ? Object.keys(children).map(function (key) {
        return children[key]._debugID;
      }) : []);
    }
  };
}

var ReactMultiChild = {
  _reconcilerInstantiateChildren: function _reconcilerInstantiateChildren(nestedChildren, transaction, context) {
    if (__DEV__) {
      var selfDebugID = getDebugID(this);
      if (this._currentElement) {
        try {
          ReactCurrentOwner.current = this._currentElement._owner;
          return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context, selfDebugID);
        } finally {
          ReactCurrentOwner.current = null;
        }
      }
    }
    return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
  },

  _reconcilerUpdateChildren: function _reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context) {
    var nextChildren;
    var selfDebugID = 0;
    if (__DEV__) {
      selfDebugID = getDebugID(this);
      if (this._currentElement) {
        try {
          ReactCurrentOwner.current = this._currentElement._owner;
          nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
        } finally {
          ReactCurrentOwner.current = null;
        }
        ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
        return nextChildren;
      }
    }
    nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
    ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
    return nextChildren;
  },

  mountChildren: function mountChildren(nestedChildren, transaction, context) {
    var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);
    this._renderedChildren = children;

    var mountImages = [];
    var index = 0;
    for (var name in children) {
      if (children.hasOwnProperty(name)) {
        var child = children[name];
        var selfDebugID = 0;
        if (__DEV__) {
          selfDebugID = getDebugID(this);
        }
        var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._hostContainerInfo, context, selfDebugID);
        child._mountIndex = index++;
        mountImages.push(mountImage);
      }
    }

    if (__DEV__) {
      setChildrenForInstrumentation.call(this, children);
    }

    return mountImages;
  },

  updateTextContent: function updateTextContent(nextContent) {
    var prevChildren = this._renderedChildren;

    ReactChildReconciler.unmountChildren(prevChildren, false);
    for (var name in prevChildren) {
      if (prevChildren.hasOwnProperty(name)) {
        invariant(false, 'updateTextContent called on non-empty component.');
      }
    }

    var updates = [makeTextContent(nextContent)];
    processQueue(this, updates);
  },

  updateMarkup: function updateMarkup(nextMarkup) {
    var prevChildren = this._renderedChildren;

    ReactChildReconciler.unmountChildren(prevChildren, false);
    for (var name in prevChildren) {
      if (prevChildren.hasOwnProperty(name)) {
        invariant(false, 'updateTextContent called on non-empty component.');
      }
    }
    var updates = [makeSetMarkup(nextMarkup)];
    processQueue(this, updates);
  },

  updateChildren: function updateChildren(nextNestedChildrenElements, transaction, context) {
    this._updateChildren(nextNestedChildrenElements, transaction, context);
  },

  _updateChildren: function _updateChildren(nextNestedChildrenElements, transaction, context) {
    var prevChildren = this._renderedChildren;
    var removedNodes = {};
    var mountImages = [];
    var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context);
    if (!nextChildren && !prevChildren) {
      return;
    }
    var updates = null;
    var name;

    var nextIndex = 0;
    var lastIndex = 0;

    var nextMountIndex = 0;
    var lastPlacedNode = null;
    for (name in nextChildren) {
      if (!nextChildren.hasOwnProperty(name)) {
        continue;
      }
      var prevChild = prevChildren && prevChildren[name];
      var nextChild = nextChildren[name];
      if (prevChild === nextChild) {
        updates = enqueue(updates, this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex));
        lastIndex = Math.max(prevChild._mountIndex, lastIndex);
        prevChild._mountIndex = nextIndex;
      } else {
        if (prevChild) {
          lastIndex = Math.max(prevChild._mountIndex, lastIndex);
        }

        updates = enqueue(updates, this._mountChildAtIndex(nextChild, mountImages[nextMountIndex], lastPlacedNode, nextIndex, transaction, context));
        nextMountIndex++;
      }
      nextIndex++;
      lastPlacedNode = ReactReconciler.getHostNode(nextChild);
    }

    for (name in removedNodes) {
      if (removedNodes.hasOwnProperty(name)) {
        updates = enqueue(updates, this._unmountChild(prevChildren[name], removedNodes[name]));
      }
    }
    if (updates) {
      processQueue(this, updates);
    }
    this._renderedChildren = nextChildren;

    if (__DEV__) {
      setChildrenForInstrumentation.call(this, nextChildren);
    }
  },

  unmountChildren: function unmountChildren(safely) {
    var renderedChildren = this._renderedChildren;
    ReactChildReconciler.unmountChildren(renderedChildren, safely);
    this._renderedChildren = null;
  },

  moveChild: function moveChild(child, afterNode, toIndex, lastIndex) {
    if (child._mountIndex < lastIndex) {
      return makeMove(child, afterNode, toIndex);
    }
  },

  createChild: function createChild(child, afterNode, mountImage) {
    return makeInsertMarkup(mountImage, afterNode, child._mountIndex);
  },

  removeChild: function removeChild(child, node) {
    return makeRemove(child, node);
  },

  _mountChildAtIndex: function _mountChildAtIndex(child, mountImage, afterNode, index, transaction, context) {
    child._mountIndex = index;
    return this.createChild(child, afterNode, mountImage);
  },

  _unmountChild: function _unmountChild(child, node) {
    var update = this.removeChild(child, node);
    child._mountIndex = null;
    return update;
  }
};

module.exports = ReactMultiChild;
}, 473, null, "ReactMultiChild");
__d(/* ReactComponentEnvironment */function(global, require, module, exports) {

'use strict';

var invariant = require(346                 ); // 346 = fbjs/lib/invariant

var injected = false;

var ReactComponentEnvironment = {
  replaceNodeWithMarkup: null,

  processChildrenUpdates: null,

  injection: {
    injectEnvironment: function injectEnvironment(environment) {
      invariant(!injected, 'ReactCompositeComponent: injectEnvironment() can only be called once.');
      ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup;
      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;
      injected = true;
    }
  }

};

module.exports = ReactComponentEnvironment;
}, 474, null, "ReactComponentEnvironment");
__d(/* ReactChildReconciler */function(global, require, module, exports) {

'use strict';

var ReactReconciler = require(468              ); // 468 = ReactReconciler

var instantiateReactComponent = require(476                        ); // 476 = instantiateReactComponent
var KeyEscapeUtils = require(486             ); // 486 = KeyEscapeUtils
var shouldUpdateReactComponent = require(483                         ); // 483 = shouldUpdateReactComponent
var traverseAllChildren = require(487                  ); // 487 = traverseAllChildren
var warning = require(335               ); // 335 = fbjs/lib/warning

var ReactComponentTreeHook;

if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
  ReactComponentTreeHook = require(355                               ); // 355 = react/lib/ReactComponentTreeHook
}

function instantiateChild(childInstances, child, name, selfDebugID) {
  var keyUnique = childInstances[name] === undefined;
  if (__DEV__) {
    if (!ReactComponentTreeHook) {
      ReactComponentTreeHook = require(355                               ); // 355 = react/lib/ReactComponentTreeHook
    }
    if (!keyUnique) {
      warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID));
    }
  }
  if (child != null && keyUnique) {
    childInstances[name] = instantiateReactComponent(child, true);
  }
}

var ReactChildReconciler = {
  instantiateChildren: function instantiateChildren(nestedChildNodes, transaction, context, selfDebugID) {
    if (nestedChildNodes == null) {
      return null;
    }
    var childInstances = {};

    if (__DEV__) {
      traverseAllChildren(nestedChildNodes, function (childInsts, child, name) {
        return instantiateChild(childInsts, child, name, selfDebugID);
      }, childInstances);
    } else {
      traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);
    }
    return childInstances;
  },

  updateChildren: function updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, hostParent, hostContainerInfo, context, selfDebugID) {
    if (!nextChildren && !prevChildren) {
      return;
    }
    var name;
    var prevChild;
    for (name in nextChildren) {
      if (!nextChildren.hasOwnProperty(name)) {
        continue;
      }
      prevChild = prevChildren && prevChildren[name];
      var prevElement = prevChild && prevChild._currentElement;
      var nextElement = nextChildren[name];
      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {
        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);
        nextChildren[name] = prevChild;
      } else {
        if (prevChild) {
          removedNodes[name] = ReactReconciler.getHostNode(prevChild);
          ReactReconciler.unmountComponent(prevChild, false);
        }

        var nextChildInstance = instantiateReactComponent(nextElement, true);
        nextChildren[name] = nextChildInstance;

        var nextChildMountImage = ReactReconciler.mountComponent(nextChildInstance, transaction, hostParent, hostContainerInfo, context, selfDebugID);
        mountImages.push(nextChildMountImage);
      }
    }

    for (name in prevChildren) {
      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
        prevChild = prevChildren[name];
        removedNodes[name] = ReactReconciler.getHostNode(prevChild);
        ReactReconciler.unmountComponent(prevChild, false);
      }
    }
  },

  unmountChildren: function unmountChildren(renderedChildren, safely) {
    for (var name in renderedChildren) {
      if (renderedChildren.hasOwnProperty(name)) {
        var renderedChild = renderedChildren[name];
        ReactReconciler.unmountComponent(renderedChild, safely);
      }
    }
  }

};

module.exports = ReactChildReconciler;
}, 475, null, "ReactChildReconciler");
__d(/* instantiateReactComponent */function(global, require, module, exports) {

'use strict';

var ReactCompositeComponent = require(477                      ); // 477 = ReactCompositeComponent
var ReactEmptyComponent = require(484                  ); // 484 = ReactEmptyComponent
var ReactHostComponent = require(485                 ); // 485 = ReactHostComponent

var invariant = require(346                 ); // 346 = fbjs/lib/invariant
var warning = require(335               ); // 335 = fbjs/lib/warning

var ReactCompositeComponentWrapper = function ReactCompositeComponentWrapper(element) {
  this.construct(element);
};
babelHelpers.extends(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent, {
  _instantiateReactComponent: instantiateReactComponent
});

function getDeclarationErrorAddendum(owner) {
  if (owner) {
    var name = owner.getName();
    if (name) {
      return ' Check the render method of `' + name + '`.';
    }
  }
  return '';
}

function isInternalComponentType(type) {
  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';
}

var nextDebugID = 1;

function instantiateReactComponent(node, shouldHaveDebugID) {
  var instance;

  if (node === null || node === false) {
    instance = ReactEmptyComponent.create(instantiateReactComponent);
  } else if (typeof node === 'object') {
    var element = node;
    invariant(element && (typeof element.type === 'function' || typeof element.type === 'string'), 'Element type is invalid: expected a string (for built-in components) ' + 'or a class/function (for composite components) but got: %s.%s', element.type == null ? element.type : typeof element.type, getDeclarationErrorAddendum(element._owner));

    if (typeof element.type === 'string') {
      instance = ReactHostComponent.createInternalComponent(element);
    } else if (isInternalComponentType(element.type)) {
      instance = new element.type(element);

      if (!instance.getHostNode) {
        instance.getHostNode = instance.getNativeNode;
      }
    } else {
      instance = new ReactCompositeComponentWrapper(element);
    }
  } else if (typeof node === 'string' || typeof node === 'number') {
    instance = ReactHostComponent.createInstanceForText(node);
  } else {
    invariant(false, 'Encountered invalid React node of type %s', typeof node);
  }

  if (__DEV__) {
    warning(typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.getHostNode === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.');
  }

  instance._mountIndex = 0;
  instance._mountImage = null;

  if (__DEV__) {
    instance._debugID = shouldHaveDebugID ? nextDebugID++ : 0;
  }

  if (__DEV__) {
    if (Object.preventExtensions) {
      Object.preventExtensions(instance);
    }
  }

  return instance;
}

module.exports = instantiateReactComponent;
}, 476, null, "instantiateReactComponent");
__d(/* ReactCompositeComponent */function(global, require, module, exports) {

'use strict';

var React = require(398    ); // 398 = React
var ReactComponentEnvironment = require(474                        ); // 474 = ReactComponentEnvironment
var ReactCurrentOwner = require(357                          ); // 357 = react/lib/ReactCurrentOwner
var ReactErrorUtils = require(459              ); // 459 = ReactErrorUtils
var ReactInstanceMap = require(397               ); // 397 = ReactInstanceMap
var ReactInstrumentation = require(471                   ); // 471 = ReactInstrumentation
var ReactNodeTypes = require(478             ); // 478 = ReactNodeTypes
var ReactReconciler = require(468              ); // 468 = ReactReconciler

if (__DEV__) {
  var checkReactTypeSpec = require(479                 ); // 479 = checkReactTypeSpec
}

var emptyObject = require(411                   ); // 411 = fbjs/lib/emptyObject
var invariant = require(346                 ); // 346 = fbjs/lib/invariant
var shallowEqual = require(482                    ); // 482 = fbjs/lib/shallowEqual
var shouldUpdateReactComponent = require(483                         ); // 483 = shouldUpdateReactComponent
var warning = require(335               ); // 335 = fbjs/lib/warning

var CompositeTypes = {
  ImpureClass: 0,
  PureClass: 1,
  StatelessFunctional: 2
};

function StatelessComponent(Component) {}
StatelessComponent.prototype.render = function () {
  var Component = ReactInstanceMap.get(this)._currentElement.type;
  var element = Component(this.props, this.context, this.updater);
  warnIfInvalidElement(Component, element);
  return element;
};

function warnIfInvalidElement(Component, element) {
  if (__DEV__) {
    warning(element === null || element === false || React.isValidElement(element), '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component');
    warning(!Component.childContextTypes, '%s(...): childContextTypes cannot be defined on a functional component.', Component.displayName || Component.name || 'Component');
  }
}

function shouldConstruct(Component) {
  return !!(Component.prototype && Component.prototype.isReactComponent);
}

function isPureComponent(Component) {
  return !!(Component.prototype && Component.prototype.isPureReactComponent);
}

function measureLifeCyclePerf(fn, debugID, timerType) {
  if (debugID === 0) {
    return fn();
  }

  ReactInstrumentation.debugTool.onBeginLifeCycleTimer(debugID, timerType);
  try {
    return fn();
  } finally {
    ReactInstrumentation.debugTool.onEndLifeCycleTimer(debugID, timerType);
  }
}

var nextMountID = 1;

var ReactCompositeComponent = {
  construct: function construct(element) {
    this._currentElement = element;
    this._rootNodeID = 0;
    this._compositeType = null;
    this._instance = null;
    this._hostParent = null;
    this._hostContainerInfo = null;

    this._updateBatchNumber = null;
    this._pendingElement = null;
    this._pendingStateQueue = null;
    this._pendingReplaceState = false;
    this._pendingForceUpdate = false;

    this._renderedNodeType = null;
    this._renderedComponent = null;
    this._context = null;
    this._mountOrder = 0;
    this._topLevelWrapper = null;

    this._pendingCallbacks = null;

    this._calledComponentWillUnmount = false;

    if (__DEV__) {
      this._warnedAboutRefsInRender = false;
    }
  },

  mountComponent: function mountComponent(transaction, hostParent, hostContainerInfo, context) {
    var _this = this;

    this._context = context;
    this._mountOrder = nextMountID++;
    this._hostParent = hostParent;
    this._hostContainerInfo = hostContainerInfo;

    var publicProps = this._currentElement.props;
    var publicContext = this._processContext(context);

    var Component = this._currentElement.type;

    var updateQueue = transaction.getUpdateQueue();

    var doConstruct = shouldConstruct(Component);
    var inst = this._constructComponent(doConstruct, publicProps, publicContext, updateQueue);
    var renderedElement;

    if (!doConstruct && (inst == null || inst.render == null)) {
      renderedElement = inst;
      warnIfInvalidElement(Component, renderedElement);
      invariant(inst === null || inst === false || React.isValidElement(inst), '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component');
      inst = new StatelessComponent(Component);
      this._compositeType = CompositeTypes.StatelessFunctional;
    } else {
      if (isPureComponent(Component)) {
        this._compositeType = CompositeTypes.PureClass;
      } else {
        this._compositeType = CompositeTypes.ImpureClass;
      }
    }

    if (__DEV__) {
      if (inst.render == null) {
        warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', Component.displayName || Component.name || 'Component');
      }

      var propsMutated = inst.props !== publicProps;
      var componentName = Component.displayName || Component.name || 'Component';

      warning(inst.props === undefined || !propsMutated, '%s(...): When calling super() in `%s`, make sure to pass ' + 'up the same props that your component\'s constructor was passed.', componentName, componentName);
    }

    inst.props = publicProps;
    inst.context = publicContext;
    inst.refs = emptyObject;
    inst.updater = updateQueue;

    this._instance = inst;

    ReactInstanceMap.set(inst, this);

    if (__DEV__) {
      warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component');
      warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component');
      warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component');
      warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component');
      warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component');
      warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component');
      warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component');
    }

    var initialState = inst.state;
    if (initialState === undefined) {
      inst.state = initialState = null;
    }
    invariant(typeof initialState === 'object' && !Array.isArray(initialState), '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent');

    this._pendingStateQueue = null;
    this._pendingReplaceState = false;
    this._pendingForceUpdate = false;

    var markup;
    if (inst.unstable_handleError) {
      markup = this.performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context);
    } else {
      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
    }

    if (inst.componentDidMount) {
      if (__DEV__) {
        transaction.getReactMountReady().enqueue(function () {
          measureLifeCyclePerf(function () {
            return inst.componentDidMount();
          }, _this._debugID, 'componentDidMount');
        });
      } else {
        transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
      }
    }

    return markup;
  },

  _constructComponent: function _constructComponent(doConstruct, publicProps, publicContext, updateQueue) {
    if (__DEV__) {
      ReactCurrentOwner.current = this;
      try {
        return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
      } finally {
        ReactCurrentOwner.current = null;
      }
    } else {
      return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
    }
  },

  _constructComponentWithoutOwner: function _constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue) {
    var Component = this._currentElement.type;

    if (doConstruct) {
      if (__DEV__) {
        return measureLifeCyclePerf(function () {
          return new Component(publicProps, publicContext, updateQueue);
        }, this._debugID, 'ctor');
      } else {
        return new Component(publicProps, publicContext, updateQueue);
      }
    }

    if (__DEV__) {
      return measureLifeCyclePerf(function () {
        return Component(publicProps, publicContext, updateQueue);
      }, this._debugID, 'render');
    } else {
      return Component(publicProps, publicContext, updateQueue);
    }
  },

  performInitialMountWithErrorHandling: function performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context) {
    var markup;
    var checkpoint = transaction.checkpoint();
    try {
      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
    } catch (e) {
      transaction.rollback(checkpoint);
      this._instance.unstable_handleError(e);
      if (this._pendingStateQueue) {
        this._instance.state = this._processPendingState(this._instance.props, this._instance.context);
      }
      checkpoint = transaction.checkpoint();

      this._renderedComponent.unmountComponent(true);
      transaction.rollback(checkpoint);

      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
    }
    return markup;
  },

  performInitialMount: function performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context) {
    var inst = this._instance;

    var debugID = 0;
    if (__DEV__) {
      debugID = this._debugID;
    }

    if (inst.componentWillMount) {
      if (__DEV__) {
        measureLifeCyclePerf(function () {
          return inst.componentWillMount();
        }, debugID, 'componentWillMount');
      } else {
        inst.componentWillMount();
      }

      if (this._pendingStateQueue) {
        inst.state = this._processPendingState(inst.props, inst.context);
      }
    }

    if (renderedElement === undefined) {
      renderedElement = this._renderValidatedComponent();
    }

    var nodeType = ReactNodeTypes.getType(renderedElement);
    this._renderedNodeType = nodeType;
    var child = this._instantiateReactComponent(renderedElement, nodeType !== ReactNodeTypes.EMPTY);
    this._renderedComponent = child;

    var markup = ReactReconciler.mountComponent(child, transaction, hostParent, hostContainerInfo, this._processChildContext(context), debugID);

    if (__DEV__) {
      if (debugID !== 0) {
        var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];
        ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);
      }
    }

    return markup;
  },

  getHostNode: function getHostNode() {
    return ReactReconciler.getHostNode(this._renderedComponent);
  },

  unmountComponent: function unmountComponent(safely) {
    if (!this._renderedComponent) {
      return;
    }

    var inst = this._instance;

    if (inst.componentWillUnmount && !inst._calledComponentWillUnmount) {
      inst._calledComponentWillUnmount = true;

      if (safely) {
        var name = this.getName() + '.componentWillUnmount()';
        ReactErrorUtils.invokeGuardedCallback(name, inst.componentWillUnmount.bind(inst));
      } else {
        if (__DEV__) {
          measureLifeCyclePerf(function () {
            return inst.componentWillUnmount();
          }, this._debugID, 'componentWillUnmount');
        } else {
          inst.componentWillUnmount();
        }
      }
    }

    if (this._renderedComponent) {
      ReactReconciler.unmountComponent(this._renderedComponent, safely);
      this._renderedNodeType = null;
      this._renderedComponent = null;
      this._instance = null;
    }

    this._pendingStateQueue = null;
    this._pendingReplaceState = false;
    this._pendingForceUpdate = false;
    this._pendingCallbacks = null;
    this._pendingElement = null;

    this._context = null;
    this._rootNodeID = 0;
    this._topLevelWrapper = null;

    ReactInstanceMap.remove(inst);
  },

  _maskContext: function _maskContext(context) {
    var Component = this._currentElement.type;
    var contextTypes = Component.contextTypes;
    if (!contextTypes) {
      return emptyObject;
    }
    var maskedContext = {};
    for (var contextName in contextTypes) {
      maskedContext[contextName] = context[contextName];
    }
    return maskedContext;
  },

  _processContext: function _processContext(context) {
    var maskedContext = this._maskContext(context);
    if (__DEV__) {
      var Component = this._currentElement.type;
      if (Component.contextTypes) {
        this._checkContextTypes(Component.contextTypes, maskedContext, 'context');
      }
    }
    return maskedContext;
  },

  _processChildContext: function _processChildContext(currentContext) {
    var Component = this._currentElement.type;
    var inst = this._instance;
    var childContext;

    if (inst.getChildContext) {
      if (__DEV__) {
        ReactInstrumentation.debugTool.onBeginProcessingChildContext();
        try {
          childContext = inst.getChildContext();
        } finally {
          ReactInstrumentation.debugTool.onEndProcessingChildContext();
        }
      } else {
        childContext = inst.getChildContext();
      }
    }

    if (childContext) {
      invariant(typeof Component.childContextTypes === 'object', '%s.getChildContext(): childContextTypes must be defined in order to ' + 'use getChildContext().', this.getName() || 'ReactCompositeComponent');
      if (__DEV__) {
        this._checkContextTypes(Component.childContextTypes, childContext, 'childContext');
      }
      for (var name in childContext) {
        invariant(name in Component.childContextTypes, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name);
      }
      return babelHelpers.extends({}, currentContext, childContext);
    }
    return currentContext;
  },

  _checkContextTypes: function _checkContextTypes(typeSpecs, values, location) {
    if (__DEV__) {
      checkReactTypeSpec(typeSpecs, values, location, this.getName(), null, this._debugID);
    }
  },

  receiveComponent: function receiveComponent(nextElement, transaction, nextContext) {
    var prevElement = this._currentElement;
    var prevContext = this._context;

    this._pendingElement = null;

    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);
  },

  performUpdateIfNecessary: function performUpdateIfNecessary(transaction) {
    if (this._pendingElement != null) {
      ReactReconciler.receiveComponent(this, this._pendingElement, transaction, this._context);
    } else if (this._pendingStateQueue !== null || this._pendingForceUpdate) {
      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);
    } else {
      this._updateBatchNumber = null;
    }
  },

  updateComponent: function updateComponent(transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {
    var inst = this._instance;
    invariant(inst != null, 'Attempted to update component `%s` that has already been unmounted ' + '(or failed to mount).', this.getName() || 'ReactCompositeComponent');

    var willReceive = false;
    var nextContext;

    if (this._context === nextUnmaskedContext) {
      nextContext = inst.context;
    } else {
      nextContext = this._processContext(nextUnmaskedContext);
      willReceive = true;
    }

    var prevProps = prevParentElement.props;
    var nextProps = nextParentElement.props;

    if (prevParentElement !== nextParentElement) {
      willReceive = true;
    }

    if (willReceive && inst.componentWillReceiveProps) {
      if (__DEV__) {
        measureLifeCyclePerf(function () {
          return inst.componentWillReceiveProps(nextProps, nextContext);
        }, this._debugID, 'componentWillReceiveProps');
      } else {
        inst.componentWillReceiveProps(nextProps, nextContext);
      }
    }

    var nextState = this._processPendingState(nextProps, nextContext);
    var shouldUpdate = true;

    if (!this._pendingForceUpdate) {
      if (inst.shouldComponentUpdate) {
        if (__DEV__) {
          shouldUpdate = measureLifeCyclePerf(function () {
            return inst.shouldComponentUpdate(nextProps, nextState, nextContext);
          }, this._debugID, 'shouldComponentUpdate');
        } else {
          shouldUpdate = inst.shouldComponentUpdate(nextProps, nextState, nextContext);
        }
      } else {
        if (this._compositeType === CompositeTypes.PureClass) {
          shouldUpdate = !shallowEqual(prevProps, nextProps) || !shallowEqual(inst.state, nextState);
        }
      }
    }

    if (__DEV__) {
      warning(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent');
    }

    this._updateBatchNumber = null;
    if (shouldUpdate) {
      this._pendingForceUpdate = false;

      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);
    } else {
      this._currentElement = nextParentElement;
      this._context = nextUnmaskedContext;
      inst.props = nextProps;
      inst.state = nextState;
      inst.context = nextContext;
    }
  },

  _processPendingState: function _processPendingState(props, context) {
    var inst = this._instance;
    var queue = this._pendingStateQueue;
    var replace = this._pendingReplaceState;
    this._pendingReplaceState = false;
    this._pendingStateQueue = null;

    if (!queue) {
      return inst.state;
    }

    if (replace && queue.length === 1) {
      return queue[0];
    }

    var nextState = babelHelpers.extends({}, replace ? queue[0] : inst.state);
    for (var i = replace ? 1 : 0; i < queue.length; i++) {
      var partial = queue[i];
      babelHelpers.extends(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);
    }

    return nextState;
  },

  _performComponentUpdate: function _performComponentUpdate(nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {
    var _this2 = this;

    var inst = this._instance;

    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);
    var prevProps;
    var prevState;
    var prevContext;
    if (hasComponentDidUpdate) {
      prevProps = inst.props;
      prevState = inst.state;
      prevContext = inst.context;
    }

    if (inst.componentWillUpdate) {
      if (__DEV__) {
        measureLifeCyclePerf(function () {
          return inst.componentWillUpdate(nextProps, nextState, nextContext);
        }, this._debugID, 'componentWillUpdate');
      } else {
        inst.componentWillUpdate(nextProps, nextState, nextContext);
      }
    }

    this._currentElement = nextElement;
    this._context = unmaskedContext;
    inst.props = nextProps;
    inst.state = nextState;
    inst.context = nextContext;

    this._updateRenderedComponent(transaction, unmaskedContext);

    if (hasComponentDidUpdate) {
      if (__DEV__) {
        transaction.getReactMountReady().enqueue(function () {
          measureLifeCyclePerf(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), _this2._debugID, 'componentDidUpdate');
        });
      } else {
        transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);
      }
    }
  },

  _updateRenderedComponent: function _updateRenderedComponent(transaction, context) {
    var prevComponentInstance = this._renderedComponent;
    var prevRenderedElement = prevComponentInstance._currentElement;
    var nextRenderedElement = this._renderValidatedComponent();

    var debugID = 0;
    if (__DEV__) {
      debugID = this._debugID;
    }

    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {
      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));
    } else {
      var oldHostNode = ReactReconciler.getHostNode(prevComponentInstance);
      ReactReconciler.unmountComponent(prevComponentInstance, false);

      var nodeType = ReactNodeTypes.getType(nextRenderedElement);
      this._renderedNodeType = nodeType;
      var child = this._instantiateReactComponent(nextRenderedElement, nodeType !== ReactNodeTypes.EMPTY);
      this._renderedComponent = child;

      var nextMarkup = ReactReconciler.mountComponent(child, transaction, this._hostParent, this._hostContainerInfo, this._processChildContext(context), debugID);

      if (__DEV__) {
        if (debugID !== 0) {
          var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];
          ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);
        }
      }

      this._replaceNodeWithMarkup(oldHostNode, nextMarkup, prevComponentInstance);
    }
  },

  _replaceNodeWithMarkup: function _replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance) {
    ReactComponentEnvironment.replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance);
  },

  _renderValidatedComponentWithoutOwnerOrContext: function _renderValidatedComponentWithoutOwnerOrContext() {
    var inst = this._instance;
    var renderedElement;

    if (__DEV__) {
      renderedElement = measureLifeCyclePerf(function () {
        return inst.render();
      }, this._debugID, 'render');
    } else {
      renderedElement = inst.render();
    }

    if (__DEV__) {
      if (renderedElement === undefined && inst.render._isMockFunction) {
        renderedElement = null;
      }
    }

    return renderedElement;
  },

  _renderValidatedComponent: function _renderValidatedComponent() {
    var renderedElement;
    if (__DEV__ || this._compositeType !== CompositeTypes.StatelessFunctional) {
      ReactCurrentOwner.current = this;
      try {
        renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();
      } finally {
        ReactCurrentOwner.current = null;
      }
    } else {
      renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();
    }
    invariant(renderedElement === null || renderedElement === false || React.isValidElement(renderedElement), '%s.render(): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent');

    return renderedElement;
  },

  attachRef: function attachRef(ref, component, transaction) {
    var inst = this.getPublicInstance();
    invariant(inst != null, 'Stateless function components cannot have refs.');
    var publicComponentInstance = component.getPublicInstance(transaction);
    if (__DEV__) {
      var componentName = component && component.getName ? component.getName() : 'a component';
      warning(publicComponentInstance != null || component._compositeType !== CompositeTypes.StatelessFunctional, 'Stateless function components cannot be given refs ' + '(See ref "%s" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName());
    }
    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
    refs[ref] = publicComponentInstance;
  },

  detachRef: function detachRef(ref) {
    var refs = this.getPublicInstance().refs;
    delete refs[ref];
  },

  getName: function getName() {
    var type = this._currentElement.type;
    var constructor = this._instance && this._instance.constructor;
    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;
  },

  getPublicInstance: function getPublicInstance() {
    var inst = this._instance;
    if (this._compositeType === CompositeTypes.StatelessFunctional) {
      return null;
    }
    return inst;
  },

  _instantiateReactComponent: null

};

module.exports = ReactCompositeComponent;
}, 477, null, "ReactCompositeComponent");
__d(/* ReactNodeTypes */function(global, require, module, exports) {

'use strict';

var React = require(398    ); // 398 = React

var invariant = require(346                 ); // 346 = fbjs/lib/invariant

var ReactNodeTypes = {
  HOST: 0,
  COMPOSITE: 1,
  EMPTY: 2,

  getType: function getType(node) {
    if (node === null || node === false) {
      return ReactNodeTypes.EMPTY;
    } else if (React.isValidElement(node)) {
      if (typeof node.type === 'function') {
        return ReactNodeTypes.COMPOSITE;
      } else {
        return ReactNodeTypes.HOST;
      }
    }
    invariant(false, 'Unexpected node: %s', node);
  }
};

module.exports = ReactNodeTypes;
}, 478, null, "ReactNodeTypes");
__d(/* checkReactTypeSpec */function(global, require, module, exports) {

'use strict';

var ReactPropTypeLocationNames = require(480                         ); // 480 = ReactPropTypeLocationNames
var ReactPropTypesSecret = require(481                   ); // 481 = ReactPropTypesSecret

var invariant = require(346                 ); // 346 = fbjs/lib/invariant
var warning = require(335               ); // 335 = fbjs/lib/warning

var ReactComponentTreeHook;

if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
  ReactComponentTreeHook = require(355                               ); // 355 = react/lib/ReactComponentTreeHook
}

var loggedTypeFailures = {};

function checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {
  for (var typeSpecName in typeSpecs) {
    if (typeSpecs.hasOwnProperty(typeSpecName)) {
      var error;

      try {
        invariant(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName);
        error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
      } catch (ex) {
        error = ex;
      }
      warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error);
      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
        loggedTypeFailures[error.message] = true;

        var componentStackInfo = '';

        if (__DEV__) {
          if (!ReactComponentTreeHook) {
            ReactComponentTreeHook = require(355                               ); // 355 = react/lib/ReactComponentTreeHook
          }
          if (debugID !== null) {
            componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(debugID);
          } else if (element !== null) {
            componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(element);
          }
        }

        warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo);
      }
    }
  }
}

module.exports = checkReactTypeSpec;
}, 479, null, "checkReactTypeSpec");
__d(/* ReactPropTypeLocationNames */function(global, require, module, exports) {

'use strict';

var ReactPropTypeLocationNames = {};

if (__DEV__) {
  ReactPropTypeLocationNames = {
    prop: 'prop',
    context: 'context',
    childContext: 'child context'
  };
}

module.exports = ReactPropTypeLocationNames;
}, 480, null, "ReactPropTypeLocationNames");
__d(/* ReactPropTypesSecret */function(global, require, module, exports) {

'use strict';

var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;
}, 481, null, "ReactPropTypesSecret");
__d(/* fbjs/lib/shallowEqual.js */function(global, require, module, exports) {

'use strict';

var hasOwnProperty = Object.prototype.hasOwnProperty;

function is(x, y) {
  if (x === y) {
    return x !== 0 || y !== 0 || 1 / x === 1 / y;
  } else {
    return x !== x && y !== y;
  }
}

function shallowEqual(objA, objB) {
  if (is(objA, objB)) {
    return true;
  }

  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
    return false;
  }

  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);

  if (keysA.length !== keysB.length) {
    return false;
  }

  for (var i = 0; i < keysA.length; i++) {
    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
      return false;
    }
  }

  return true;
}

module.exports = shallowEqual;
}, 482, null, "fbjs/lib/shallowEqual.js");
__d(/* shouldUpdateReactComponent */function(global, require, module, exports) {

'use strict';

function shouldUpdateReactComponent(prevElement, nextElement) {
  var prevEmpty = prevElement === null || prevElement === false;
  var nextEmpty = nextElement === null || nextElement === false;
  if (prevEmpty || nextEmpty) {
    return prevEmpty === nextEmpty;
  }

  var prevType = typeof prevElement;
  var nextType = typeof nextElement;
  if (prevType === 'string' || prevType === 'number') {
    return nextType === 'string' || nextType === 'number';
  } else {
    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;
  }
}

module.exports = shouldUpdateReactComponent;
}, 483, null, "shouldUpdateReactComponent");
__d(/* ReactEmptyComponent */function(global, require, module, exports) {

'use strict';

var emptyComponentFactory;

var ReactEmptyComponentInjection = {
  injectEmptyComponentFactory: function injectEmptyComponentFactory(factory) {
    emptyComponentFactory = factory;
  }
};

var ReactEmptyComponent = {
  create: function create(instantiate) {
    return emptyComponentFactory(instantiate);
  }
};

ReactEmptyComponent.injection = ReactEmptyComponentInjection;

module.exports = ReactEmptyComponent;
}, 484, null, "ReactEmptyComponent");
__d(/* ReactHostComponent */function(global, require, module, exports) {

'use strict';

var invariant = require(346                 ); // 346 = fbjs/lib/invariant

var genericComponentClass = null;

var tagToComponentClass = {};
var textComponentClass = null;

var ReactHostComponentInjection = {
  injectGenericComponentClass: function injectGenericComponentClass(componentClass) {
    genericComponentClass = componentClass;
  },

  injectTextComponentClass: function injectTextComponentClass(componentClass) {
    textComponentClass = componentClass;
  },

  injectComponentClasses: function injectComponentClasses(componentClasses) {
    babelHelpers.extends(tagToComponentClass, componentClasses);
  }
};

function createInternalComponent(element) {
  invariant(genericComponentClass, 'There is no registered component for the tag %s', element.type);
  return new genericComponentClass(element);
}

function createInstanceForText(text) {
  return new textComponentClass(text);
}

function isTextComponent(component) {
  return component instanceof textComponentClass;
}

var ReactHostComponent = {
  createInternalComponent: createInternalComponent,
  createInstanceForText: createInstanceForText,
  isTextComponent: isTextComponent,
  injection: ReactHostComponentInjection
};

module.exports = ReactHostComponent;
}, 485, null, "ReactHostComponent");
__d(/* KeyEscapeUtils */function(global, require, module, exports) {

'use strict';

function escape(key) {
  var escapeRegex = /[=:]/g;
  var escaperLookup = {
    '=': '=0',
    ':': '=2'
  };
  var escapedString = ('' + key).replace(escapeRegex, function (match) {
    return escaperLookup[match];
  });

  return '$' + escapedString;
}

function unescape(key) {
  var unescapeRegex = /(=0|=2)/g;
  var unescaperLookup = {
    '=0': '=',
    '=2': ':'
  };
  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);

  return ('' + keySubstring).replace(unescapeRegex, function (match) {
    return unescaperLookup[match];
  });
}

var KeyEscapeUtils = {
  escape: escape,
  unescape: unescape
};

module.exports = KeyEscapeUtils;
}, 486, null, "KeyEscapeUtils");
__d(/* traverseAllChildren */function(global, require, module, exports) {

'use strict';

var ReactCurrentOwner = require(357                          ); // 357 = react/lib/ReactCurrentOwner
var REACT_ELEMENT_TYPE = require(488                 ); // 488 = ReactElementSymbol

var getIteratorFn = require(489            ); // 489 = getIteratorFn
var invariant = require(346                 ); // 346 = fbjs/lib/invariant
var KeyEscapeUtils = require(486             ); // 486 = KeyEscapeUtils
var warning = require(335               ); // 335 = fbjs/lib/warning

var SEPARATOR = '.';
var SUBSEPARATOR = ':';

var didWarnAboutMaps = false;

function getComponentKey(component, index) {
  if (component && typeof component === 'object' && component.key != null) {
    return KeyEscapeUtils.escape(component.key);
  }

  return index.toString(36);
}

function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
  var type = typeof children;

  if (type === 'undefined' || type === 'boolean') {
    children = null;
  }

  if (children === null || type === 'string' || type === 'number' || type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {
    callback(traverseContext, children, nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
    return 1;
  }

  var child;
  var nextName;
  var subtreeCount = 0;
  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      child = children[i];
      nextName = nextNamePrefix + getComponentKey(child, i);
      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
    }
  } else {
    var iteratorFn = getIteratorFn(children);
    if (iteratorFn) {
      var iterator = iteratorFn.call(children);
      var step;
      if (iteratorFn !== children.entries) {
        var ii = 0;
        while (!(step = iterator.next()).done) {
          child = step.value;
          nextName = nextNamePrefix + getComponentKey(child, ii++);
          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
        }
      } else {
        if (__DEV__) {
          var mapsAsChildrenAddendum = '';
          if (ReactCurrentOwner.current) {
            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
            if (mapsAsChildrenOwnerName) {
              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
            }
          }
          warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum);
          didWarnAboutMaps = true;
        }

        while (!(step = iterator.next()).done) {
          var entry = step.value;
          if (entry) {
            child = entry[1];
            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
          }
        }
      }
    } else if (type === 'object') {
      var addendum = '';
      if (__DEV__) {
        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
        if (children._isReactElement) {
          addendum = ' It looks like you\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';
        }
        if (ReactCurrentOwner.current) {
          var name = ReactCurrentOwner.current.getName();
          if (name) {
            addendum += ' Check the render method of `' + name + '`.';
          }
        }
      }
      var childrenString = String(children);
      invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum);
    }
  }

  return subtreeCount;
}

function traverseAllChildren(children, callback, traverseContext) {
  if (children == null) {
    return 0;
  }

  return traverseAllChildrenImpl(children, '', callback, traverseContext);
}

module.exports = traverseAllChildren;
}, 487, null, "traverseAllChildren");
__d(/* ReactElementSymbol */function(global, require, module, exports) {

'use strict';

var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && (typeof Symbol === 'function' ? Symbol.for : '@@for') && (typeof Symbol === 'function' ? Symbol.for : '@@for')('react.element') || 0xeac7;

module.exports = REACT_ELEMENT_TYPE;
}, 488, null, "ReactElementSymbol");
__d(/* getIteratorFn */function(global, require, module, exports) {

'use strict';

var ITERATOR_SYMBOL = typeof Symbol === 'function' && (typeof Symbol === 'function' ? Symbol.iterator : '@@iterator');
var FAUX_ITERATOR_SYMBOL = '@@iterator';
function getIteratorFn(maybeIterable) {
  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
  if (typeof iteratorFn === 'function') {
    return iteratorFn;
  }
}

module.exports = getIteratorFn;
}, 489, null, "getIteratorFn");
__d(/* flattenChildren */function(global, require, module, exports) {

'use strict';

var KeyEscapeUtils = require(486             ); // 486 = KeyEscapeUtils
var traverseAllChildren = require(487                  ); // 487 = traverseAllChildren
var warning = require(335               ); // 335 = fbjs/lib/warning

var ReactComponentTreeHook;

if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
  ReactComponentTreeHook = require(355                               ); // 355 = react/lib/ReactComponentTreeHook
}

function flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID) {
  if (traverseContext && typeof traverseContext === 'object') {
    var result = traverseContext;
    var keyUnique = result[name] === undefined;
    if (__DEV__) {
      if (!ReactComponentTreeHook) {
        ReactComponentTreeHook = require(355                               ); // 355 = react/lib/ReactComponentTreeHook
      }
      if (!keyUnique) {
        warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID));
      }
    }
    if (keyUnique && child != null) {
      result[name] = child;
    }
  }
}

function flattenChildren(children, selfDebugID) {
  if (children == null) {
    return children;
  }
  var result = {};

  if (__DEV__) {
    traverseAllChildren(children, function (traverseContext, child, name) {
      return flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID);
    }, result);
  } else {
    traverseAllChildren(children, flattenSingleChildIntoContext, result);
  }
  return result;
}

module.exports = flattenChildren;
}, 490, null, "flattenChildren");
__d(/* insetsDiffer */function(global, require, module, exports) {
'use strict';

var dummyInsets = {
  top: undefined,
  left: undefined,
  right: undefined,
  bottom: undefined
};

var insetsDiffer = function insetsDiffer(one, two) {
  one = one || dummyInsets;
  two = two || dummyInsets;
  return one !== two && (one.top !== two.top || one.left !== two.left || one.right !== two.right || one.bottom !== two.bottom);
};

module.exports = insetsDiffer;
}, 491, null, "insetsDiffer");
__d(/* pointsDiffer */function(global, require, module, exports) {
'use strict';

var dummyPoint = { x: undefined, y: undefined };

var pointsDiffer = function pointsDiffer(one, two) {
  one = one || dummyPoint;
  two = two || dummyPoint;
  return one !== two && (one.x !== two.x || one.y !== two.y);
};

module.exports = pointsDiffer;
}, 492, null, "pointsDiffer");
__d(/* resolveAssetSource */function(global, require, module, exports) {
'use strict';

var AssetRegistry = require(494            ); // 494 = AssetRegistry
var AssetSourceResolver = require(495                  ); // 495 = AssetSourceResolver

var _require = require(349            ), // 349 = NativeModules
    SourceCode = _require.SourceCode;

var _customSourceTransformer = void 0,
    _serverURL = void 0,
    _bundleSourcePath = void 0;

function getDevServerURL() {
  if (_serverURL === undefined) {
    var scriptURL = SourceCode.scriptURL;
    var match = scriptURL && scriptURL.match(/^https?:\/\/.*?\//);
    if (match) {
      _serverURL = match[0];
    } else {
      _serverURL = null;
    }
  }
  return _serverURL;
}

function getBundleSourcePath() {
  if (_bundleSourcePath === undefined) {
    var scriptURL = SourceCode.scriptURL;
    if (!scriptURL) {
      _bundleSourcePath = null;
      return _bundleSourcePath;
    }
    if (scriptURL.startsWith('assets://')) {
      _bundleSourcePath = null;
      return _bundleSourcePath;
    }
    if (scriptURL.startsWith('file://')) {
      _bundleSourcePath = scriptURL.substring(7, scriptURL.lastIndexOf('/') + 1);
    } else {
      _bundleSourcePath = scriptURL.substring(0, scriptURL.lastIndexOf('/') + 1);
    }
  }

  return _bundleSourcePath;
}

function setCustomSourceTransformer(transformer) {
  _customSourceTransformer = transformer;
}

function resolveAssetSource(source) {
  if (typeof source === 'object') {
    return source;
  }

  var asset = AssetRegistry.getAssetByID(source);
  if (!asset) {
    return null;
  }

  var resolver = new AssetSourceResolver(getDevServerURL(), getBundleSourcePath(), asset);
  if (_customSourceTransformer) {
    return _customSourceTransformer(resolver);
  }
  return resolver.defaultAsset();
}

module.exports = resolveAssetSource;
module.exports.pickScale = AssetSourceResolver.pickScale;
module.exports.setCustomSourceTransformer = setCustomSourceTransformer;
}, 493, null, "resolveAssetSource");
__d(/* AssetRegistry */function(global, require, module, exports) {
'use strict';

var assets = [];

function registerAsset(asset) {
  return assets.push(asset);
}

function getAssetByID(assetId) {
  return assets[assetId - 1];
}

module.exports = { registerAsset: registerAsset, getAssetByID: getAssetByID };
}, 494, null, "AssetRegistry");
__d(/* AssetSourceResolver */function(global, require, module, exports) {
'use strict';

var PixelRatio = require(422         ); // 422 = PixelRatio
var Platform = require(348       ); // 348 = Platform

var assetPathUtils = require(496                                    ); // 496 = ../../local-cli/bundle/assetPathUtils
var invariant = require(346                 ); // 346 = fbjs/lib/invariant

function getScaledAssetPath(asset) {
  var scale = AssetSourceResolver.pickScale(asset.scales, PixelRatio.get());
  var scaleSuffix = scale === 1 ? '' : '@' + scale + 'x';
  var assetDir = assetPathUtils.getBasePath(asset);
  return assetDir + '/' + asset.name + scaleSuffix + '.' + asset.type;
}

function getAssetPathInDrawableFolder(asset) {
  var scale = AssetSourceResolver.pickScale(asset.scales, PixelRatio.get());
  var drawbleFolder = assetPathUtils.getAndroidDrawableFolderName(asset, scale);
  var fileName = assetPathUtils.getAndroidResourceIdentifier(asset);
  return drawbleFolder + '/' + fileName + '.' + asset.type;
}

var AssetSourceResolver = function () {
  function AssetSourceResolver(serverUrl, bundlePath, asset) {
    babelHelpers.classCallCheck(this, AssetSourceResolver);

    this.serverUrl = serverUrl;
    this.bundlePath = bundlePath;
    this.asset = asset;
  }

  babelHelpers.createClass(AssetSourceResolver, [{
    key: 'isLoadedFromServer',
    value: function isLoadedFromServer() {
      return !!this.serverUrl;
    }
  }, {
    key: 'isLoadedFromFileSystem',
    value: function isLoadedFromFileSystem() {
      return !!this.bundlePath;
    }
  }, {
    key: 'defaultAsset',
    value: function defaultAsset() {
      if (this.isLoadedFromServer()) {
        return this.assetServerURL();
      }

      if (Platform.OS === 'android') {
        return this.isLoadedFromFileSystem() ? this.drawableFolderInBundle() : this.resourceIdentifierWithoutScale();
      } else {
        return this.scaledAssetPathInBundle();
      }
    }
  }, {
    key: 'assetServerURL',
    value: function assetServerURL() {
      invariant(!!this.serverUrl, 'need server to load from');
      return this.fromSource(this.serverUrl + getScaledAssetPath(this.asset) + '?platform=' + Platform.OS + '&hash=' + this.asset.hash);
    }
  }, {
    key: 'scaledAssetPath',
    value: function scaledAssetPath() {
      return this.fromSource(getScaledAssetPath(this.asset));
    }
  }, {
    key: 'scaledAssetPathInBundle',
    value: function scaledAssetPathInBundle() {
      var path = this.bundlePath || '';
      return this.fromSource(path + getScaledAssetPath(this.asset));
    }
  }, {
    key: 'resourceIdentifierWithoutScale',
    value: function resourceIdentifierWithoutScale() {
      invariant(Platform.OS === 'android', 'resource identifiers work on Android');
      return this.fromSource(assetPathUtils.getAndroidResourceIdentifier(this.asset));
    }
  }, {
    key: 'drawableFolderInBundle',
    value: function drawableFolderInBundle() {
      var path = this.bundlePath || '';
      return this.fromSource('file://' + path + getAssetPathInDrawableFolder(this.asset));
    }
  }, {
    key: 'fromSource',
    value: function fromSource(source) {
      return {
        __packager_asset: true,
        width: this.asset.width,
        height: this.asset.height,
        uri: source,
        scale: AssetSourceResolver.pickScale(this.asset.scales, PixelRatio.get())
      };
    }
  }], [{
    key: 'pickScale',
    value: function pickScale(scales, deviceScale) {
      for (var i = 0; i < scales.length; i++) {
        if (scales[i] >= deviceScale) {
          return scales[i];
        }
      }

      return scales[scales.length - 1] || 1;
    }
  }]);
  return AssetSourceResolver;
}();

module.exports = AssetSourceResolver;
}, 495, null, "AssetSourceResolver");
__d(/* react-native/local-cli/bundle/assetPathUtils.js */function(global, require, module, exports) {
'use strict';

function getAndroidAssetSuffix(scale) {
  switch (scale) {
    case 0.75:
      return 'ldpi';
    case 1:
      return 'mdpi';
    case 1.5:
      return 'hdpi';
    case 2:
      return 'xhdpi';
    case 3:
      return 'xxhdpi';
    case 4:
      return 'xxxhdpi';
  }
}

function getAndroidDrawableFolderName(asset, scale) {
  var suffix = getAndroidAssetSuffix(scale);
  if (!suffix) {
    throw new Error('Don\'t know which android drawable suffix to use for asset: ' + JSON.stringify(asset));
  }
  var androidFolder = 'drawable-' + suffix;
  return androidFolder;
}

function getAndroidResourceIdentifier(asset) {
  var folderPath = getBasePath(asset);
  return (folderPath + '/' + asset.name).toLowerCase().replace(/\//g, '_').replace(/([^a-z0-9_])/g, '').replace(/^assets_/, '');
}

function getBasePath(asset) {
  var basePath = asset.httpServerLocation;
  if (basePath[0] === '/') {
    basePath = basePath.substr(1);
  }
  return basePath;
}

module.exports = {
  getAndroidAssetSuffix: getAndroidAssetSuffix,
  getAndroidDrawableFolderName: getAndroidDrawableFolderName,
  getAndroidResourceIdentifier: getAndroidResourceIdentifier,
  getBasePath: getBasePath
};
}, 496, null, "react-native/local-cli/bundle/assetPathUtils.js");
__d(/* verifyPropTypes */function(global, require, module, exports) {
'use strict';

var ReactNativeStyleAttributes = require(424                         ); // 424 = ReactNativeStyleAttributes

function verifyPropTypes(componentInterface, viewConfig, nativePropsToIgnore) {
  if (!viewConfig) {
    return;
  }
  var componentName = componentInterface.displayName || componentInterface.name || 'unknown';

  if (!componentInterface.propTypes) {
    throw new Error('`' + componentName + '` has no propTypes defined`');
  }

  var nativeProps = viewConfig.NativeProps;
  for (var prop in nativeProps) {
    if (!componentInterface.propTypes[prop] && !ReactNativeStyleAttributes[prop] && (!nativePropsToIgnore || !nativePropsToIgnore[prop])) {
      var message;
      if (componentInterface.propTypes.hasOwnProperty(prop)) {
        message = '`' + componentName + '` has incorrectly defined propType for native prop `' + viewConfig.uiViewClassName + '.' + prop + '` of native type `' + nativeProps[prop];
      } else {
        message = '`' + componentName + '` has no propType for native prop `' + viewConfig.uiViewClassName + '.' + prop + '` of native type `' + nativeProps[prop] + '`';
      }
      message += '\nIf you haven\'t changed this prop yourself, this usually means that ' + 'your versions of the native code and JavaScript code are out of sync. Updating both ' + 'should make this error go away.';
      throw new Error(message);
    }
  }
}

module.exports = verifyPropTypes;
}, 497, null, "verifyPropTypes");
__d(/* ReactNativeART */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native/Libraries/ART/ReactNativeART.js';
var Color = require(499             ); // 499 = art/core/color
var Path = require(500                  ); // 500 = ARTSerializablePath
var Transform = require(503                 ); // 503 = art/core/transform

var React = require(398    ); // 398 = React
var ReactNativeViewAttributes = require(447                        ); // 447 = ReactNativeViewAttributes

var createReactNativeComponentClass = require(452                              ); // 452 = createReactNativeComponentClass
var merge = require(444    ); // 444 = merge
var invariant = require(346                 ); // 346 = fbjs/lib/invariant

function arrayDiffer(a, b) {
  if (a == null || b == null) {
    return true;
  }
  if (a.length !== b.length) {
    return true;
  }
  for (var i = 0; i < a.length; i++) {
    if (a[i] !== b[i]) {
      return true;
    }
  }
  return false;
}

function fontAndLinesDiffer(a, b) {
  if (a === b) {
    return false;
  }
  if (a.font !== b.font) {
    if (a.font === null) {
      return true;
    }
    if (b.font === null) {
      return true;
    }

    if (a.font.fontFamily !== b.font.fontFamily || a.font.fontSize !== b.font.fontSize || a.font.fontWeight !== b.font.fontWeight || a.font.fontStyle !== b.font.fontStyle) {
      return true;
    }
  }
  return arrayDiffer(a.lines, b.lines);
}

var SurfaceViewAttributes = merge(ReactNativeViewAttributes.UIView, {});

var NodeAttributes = {
  transform: { diff: arrayDiffer },
  opacity: true
};

var GroupAttributes = merge(NodeAttributes, {
  clipping: { diff: arrayDiffer }
});

var RenderableAttributes = merge(NodeAttributes, {
  fill: { diff: arrayDiffer },
  stroke: { diff: arrayDiffer },
  strokeWidth: true,
  strokeCap: true,
  strokeJoin: true,
  strokeDash: { diff: arrayDiffer }
});

var ShapeAttributes = merge(RenderableAttributes, {
  d: { diff: arrayDiffer }
});

var TextAttributes = merge(RenderableAttributes, {
  alignment: true,
  frame: { diff: fontAndLinesDiffer },
  path: { diff: arrayDiffer }
});

var NativeSurfaceView = createReactNativeComponentClass({
  validAttributes: SurfaceViewAttributes,
  uiViewClassName: 'ARTSurfaceView'
});

var NativeGroup = createReactNativeComponentClass({
  validAttributes: GroupAttributes,
  uiViewClassName: 'ARTGroup'
});

var NativeShape = createReactNativeComponentClass({
  validAttributes: ShapeAttributes,
  uiViewClassName: 'ARTShape'
});

var NativeText = createReactNativeComponentClass({
  validAttributes: TextAttributes,
  uiViewClassName: 'ARTText'
});

function childrenAsString(children) {
  if (!children) {
    return '';
  }
  if (typeof children === 'string') {
    return children;
  }
  if (children.length) {
    return children.join('\n');
  }
  return '';
}

var Surface = function (_React$Component) {
  babelHelpers.inherits(Surface, _React$Component);

  function Surface() {
    babelHelpers.classCallCheck(this, Surface);
    return babelHelpers.possibleConstructorReturn(this, (Surface.__proto__ || Object.getPrototypeOf(Surface)).apply(this, arguments));
  }

  babelHelpers.createClass(Surface, [{
    key: 'getChildContext',
    value: function getChildContext() {
      return { isInSurface: true };
    }
  }, {
    key: 'render',
    value: function render() {
      var props = this.props;
      var w = extractNumber(props.width, 0);
      var h = extractNumber(props.height, 0);
      return React.createElement(
        NativeSurfaceView,
        { style: [props.style, { width: w, height: h }], __source: {
            fileName: _jsxFileName,
            lineNumber: 154
          }
        },
        this.props.children
      );
    }
  }]);
  return Surface;
}(React.Component);

Surface.childContextTypes = {
  isInSurface: React.PropTypes.bool
};


function extractNumber(value, defaultValue) {
  if (value == null) {
    return defaultValue;
  }
  return +value;
}

var pooledTransform = new Transform();

function extractTransform(props) {
  var scaleX = props.scaleX != null ? props.scaleX : props.scale != null ? props.scale : 1;
  var scaleY = props.scaleY != null ? props.scaleY : props.scale != null ? props.scale : 1;

  pooledTransform.transformTo(1, 0, 0, 1, 0, 0).move(props.x || 0, props.y || 0).rotate(props.rotation || 0, props.originX, props.originY).scale(scaleX, scaleY, props.originX, props.originY);

  if (props.transform != null) {
    pooledTransform.transform(props.transform);
  }

  return [pooledTransform.xx, pooledTransform.yx, pooledTransform.xy, pooledTransform.yy, pooledTransform.x, pooledTransform.y];
}

function extractOpacity(props) {
  if (props.visible === false) {
    return 0;
  }
  if (props.opacity == null) {
    return 1;
  }
  return +props.opacity;
}

var Group = function (_React$Component2) {
  babelHelpers.inherits(Group, _React$Component2);

  function Group() {
    babelHelpers.classCallCheck(this, Group);
    return babelHelpers.possibleConstructorReturn(this, (Group.__proto__ || Object.getPrototypeOf(Group)).apply(this, arguments));
  }

  babelHelpers.createClass(Group, [{
    key: 'render',
    value: function render() {
      var props = this.props;
      invariant(this.context.isInSurface, 'ART: <Group /> must be a child of a <Surface />');
      return React.createElement(
        NativeGroup,
        {
          opacity: extractOpacity(props),
          transform: extractTransform(props), __source: {
            fileName: _jsxFileName,
            lineNumber: 226
          }
        },
        this.props.children
      );
    }
  }]);
  return Group;
}(React.Component);

Group.contextTypes = {
  isInSurface: React.PropTypes.bool.isRequired
};

var ClippingRectangle = function (_React$Component3) {
  babelHelpers.inherits(ClippingRectangle, _React$Component3);

  function ClippingRectangle() {
    babelHelpers.classCallCheck(this, ClippingRectangle);
    return babelHelpers.possibleConstructorReturn(this, (ClippingRectangle.__proto__ || Object.getPrototypeOf(ClippingRectangle)).apply(this, arguments));
  }

  babelHelpers.createClass(ClippingRectangle, [{
    key: 'render',
    value: function render() {
      var props = this.props;
      var x = extractNumber(props.x, 0);
      var y = extractNumber(props.y, 0);
      var w = extractNumber(props.width, 0);
      var h = extractNumber(props.height, 0);
      var clipping = [x, y, w, h];

      var propsExcludingXAndY = merge(props);
      delete propsExcludingXAndY.x;
      delete propsExcludingXAndY.y;
      return React.createElement(
        NativeGroup,
        {
          clipping: clipping,
          opacity: extractOpacity(props),
          transform: extractTransform(propsExcludingXAndY), __source: {
            fileName: _jsxFileName,
            lineNumber: 248
          }
        },
        this.props.children
      );
    }
  }]);
  return ClippingRectangle;
}(React.Component);

var SOLID_COLOR = 0;
var LINEAR_GRADIENT = 1;
var RADIAL_GRADIENT = 2;
var PATTERN = 3;

function insertColorIntoArray(color, targetArray, atIndex) {
  var c = new Color(color);
  targetArray[atIndex + 0] = c.red / 255;
  targetArray[atIndex + 1] = c.green / 255;
  targetArray[atIndex + 2] = c.blue / 255;
  targetArray[atIndex + 3] = c.alpha;
}

function insertColorsIntoArray(stops, targetArray, atIndex) {
  var i = 0;
  if ('length' in stops) {
    while (i < stops.length) {
      insertColorIntoArray(stops[i], targetArray, atIndex + i * 4);
      i++;
    }
  } else {
    for (var offset in stops) {
      insertColorIntoArray(stops[offset], targetArray, atIndex + i * 4);
      i++;
    }
  }
  return atIndex + i * 4;
}

function insertOffsetsIntoArray(stops, targetArray, atIndex, multi, reverse) {
  var offsetNumber;
  var i = 0;
  if ('length' in stops) {
    while (i < stops.length) {
      offsetNumber = i / (stops.length - 1) * multi;
      targetArray[atIndex + i] = reverse ? 1 - offsetNumber : offsetNumber;
      i++;
    }
  } else {
    for (var offsetString in stops) {
      offsetNumber = +offsetString * multi;
      targetArray[atIndex + i] = reverse ? 1 - offsetNumber : offsetNumber;
      i++;
    }
  }
  return atIndex + i;
}

function insertColorStopsIntoArray(stops, targetArray, atIndex) {
  var lastIndex = insertColorsIntoArray(stops, targetArray, atIndex);
  insertOffsetsIntoArray(stops, targetArray, lastIndex, 1, false);
}

function insertDoubleColorStopsIntoArray(stops, targetArray, atIndex) {
  var lastIndex = insertColorsIntoArray(stops, targetArray, atIndex);
  lastIndex = insertColorsIntoArray(stops, targetArray, lastIndex);
  lastIndex = insertOffsetsIntoArray(stops, targetArray, lastIndex, 0.5, false);
  insertOffsetsIntoArray(stops, targetArray, lastIndex, 0.5, true);
}

function applyBoundingBoxToBrushData(brushData, props) {
  var type = brushData[0];
  var width = +props.width;
  var height = +props.height;
  if (type === LINEAR_GRADIENT) {
    brushData[1] *= width;
    brushData[2] *= height;
    brushData[3] *= width;
    brushData[4] *= height;
  } else if (type === RADIAL_GRADIENT) {
    brushData[1] *= width;
    brushData[2] *= height;
    brushData[3] *= width;
    brushData[4] *= height;
    brushData[5] *= width;
    brushData[6] *= height;
  } else if (type === PATTERN) {}
}

function extractBrush(colorOrBrush, props) {
  if (colorOrBrush == null) {
    return null;
  }
  if (colorOrBrush._brush) {
    if (colorOrBrush._bb) {
      applyBoundingBoxToBrushData(colorOrBrush._brush, props);
      colorOrBrush._bb = false;
    }
    return colorOrBrush._brush;
  }
  var c = new Color(colorOrBrush);
  return [SOLID_COLOR, c.red / 255, c.green / 255, c.blue / 255, c.alpha];
}

function extractColor(color) {
  if (color == null) {
    return null;
  }
  var c = new Color(color);
  return [c.red / 255, c.green / 255, c.blue / 255, c.alpha];
}

function extractStrokeCap(strokeCap) {
  switch (strokeCap) {
    case 'butt':
      return 0;
    case 'square':
      return 2;
    default:
      return 1;}
}

function extractStrokeJoin(strokeJoin) {
  switch (strokeJoin) {
    case 'miter':
      return 0;
    case 'bevel':
      return 2;
    default:
      return 1;}
}

var Shape = function (_React$Component4) {
  babelHelpers.inherits(Shape, _React$Component4);

  function Shape() {
    babelHelpers.classCallCheck(this, Shape);
    return babelHelpers.possibleConstructorReturn(this, (Shape.__proto__ || Object.getPrototypeOf(Shape)).apply(this, arguments));
  }

  babelHelpers.createClass(Shape, [{
    key: 'render',
    value: function render() {
      var props = this.props;
      var path = props.d || childrenAsString(props.children);
      var d = new Path(path).toJSON();
      return React.createElement(NativeShape, {
        fill: extractBrush(props.fill, props),
        opacity: extractOpacity(props),
        stroke: extractColor(props.stroke),
        strokeCap: extractStrokeCap(props.strokeCap),
        strokeDash: props.strokeDash || null,
        strokeJoin: extractStrokeJoin(props.strokeJoin),
        strokeWidth: extractNumber(props.strokeWidth, 1),
        transform: extractTransform(props),

        d: d,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 396
        }
      });
    }
  }]);
  return Shape;
}(React.Component);

var cachedFontObjectsFromString = {};

var fontFamilyPrefix = /^[\s"']*/;
var fontFamilySuffix = /[\s"']*$/;

function extractSingleFontFamily(fontFamilyString) {
  return fontFamilyString.split(',')[0].replace(fontFamilyPrefix, '').replace(fontFamilySuffix, '');
}

function parseFontString(font) {
  if (cachedFontObjectsFromString.hasOwnProperty(font)) {
    return cachedFontObjectsFromString[font];
  }
  var regexp = /^\s*((?:(?:normal|bold|italic)\s+)*)(?:(\d+(?:\.\d+)?)[ptexm\%]*(?:\s*\/.*?)?\s+)?\s*\"?([^\"]*)/i;
  var match = regexp.exec(font);
  if (!match) {
    return null;
  }
  var fontFamily = extractSingleFontFamily(match[3]);
  var fontSize = +match[2] || 12;
  var isBold = /bold/.exec(match[1]);
  var isItalic = /italic/.exec(match[1]);
  cachedFontObjectsFromString[font] = {
    fontFamily: fontFamily,
    fontSize: fontSize,
    fontWeight: isBold ? 'bold' : 'normal',
    fontStyle: isItalic ? 'italic' : 'normal'
  };
  return cachedFontObjectsFromString[font];
}

function extractFont(font) {
  if (font == null) {
    return null;
  }
  if (typeof font === 'string') {
    return parseFontString(font);
  }
  var fontFamily = extractSingleFontFamily(font.fontFamily);
  var fontSize = +font.fontSize || 12;
  return {
    fontFamily: fontFamily,
    fontSize: fontSize,
    fontWeight: font.fontWeight,
    fontStyle: font.fontStyle
  };
}

var newLine = /\n/g;
function extractFontAndLines(font, text) {
  return { font: extractFont(font), lines: text.split(newLine) };
}

function extractAlignment(alignment) {
  switch (alignment) {
    case 'right':
      return 1;
    case 'center':
      return 2;
    default:
      return 0;
  }
}

var Text = function (_React$Component5) {
  babelHelpers.inherits(Text, _React$Component5);

  function Text() {
    babelHelpers.classCallCheck(this, Text);
    return babelHelpers.possibleConstructorReturn(this, (Text.__proto__ || Object.getPrototypeOf(Text)).apply(this, arguments));
  }

  babelHelpers.createClass(Text, [{
    key: 'render',
    value: function render() {
      var props = this.props;
      var textPath = props.path ? new Path(props.path).toJSON() : null;
      var textFrame = extractFontAndLines(props.font, childrenAsString(props.children));
      return React.createElement(NativeText, {
        fill: extractBrush(props.fill, props),
        opacity: extractOpacity(props),
        stroke: extractColor(props.stroke),
        strokeCap: extractStrokeCap(props.strokeCap),
        strokeDash: props.strokeDash || null,
        strokeJoin: extractStrokeJoin(props.strokeJoin),
        strokeWidth: extractNumber(props.strokeWidth, 1),
        transform: extractTransform(props),

        alignment: extractAlignment(props.alignment),
        frame: textFrame,
        path: textPath,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 493
        }
      });
    }
  }]);
  return Text;
}(React.Component);

function LinearGradient(stops, x1, y1, x2, y2) {
  var type = LINEAR_GRADIENT;

  if (arguments.length < 5) {
    var angle = (x1 == null ? 270 : x1) * Math.PI / 180;

    var x = Math.cos(angle);
    var y = -Math.sin(angle);
    var l = (Math.abs(x) + Math.abs(y)) / 2;

    x *= l;y *= l;

    x1 = 0.5 - x;
    x2 = 0.5 + x;
    y1 = 0.5 - y;
    y2 = 0.5 + y;
    this._bb = true;
  } else {
    this._bb = false;
  }

  var brushData = [type, +x1, +y1, +x2, +y2];
  insertColorStopsIntoArray(stops, brushData, 5);
  this._brush = brushData;
}

function RadialGradient(stops, fx, fy, rx, ry, cx, cy) {
  if (ry == null) {
    ry = rx;
  }
  if (cx == null) {
    cx = fx;
  }
  if (cy == null) {
    cy = fy;
  }
  if (fx == null) {
    fx = fy = rx = ry = cx = cy = 0.5;
    this._bb = true;
  } else {
    this._bb = false;
  }

  var brushData = [RADIAL_GRADIENT, +fx, +fy, +rx * 2, +ry * 2, +cx, +cy];
  insertDoubleColorStopsIntoArray(stops, brushData, 7);
  this._brush = brushData;
}

function Pattern(url, width, height, left, top) {
  this._brush = [PATTERN, url, +left || 0, +top || 0, +width, +height];
}

var ReactART = {
  LinearGradient: LinearGradient,
  RadialGradient: RadialGradient,
  Pattern: Pattern,
  Transform: Transform,
  Path: Path,
  Surface: Surface,
  Group: Group,
  ClippingRectangle: ClippingRectangle,
  Shape: Shape,
  Text: Text
};

module.exports = ReactART;
}, 498, null, "ReactNativeART");
__d(/* art/core/color.js */function(global, require, module, exports) {var colors = {
	maroon: '#800000', red: '#ff0000', orange: '#ffA500', yellow: '#ffff00', olive: '#808000',
	purple: '#800080', fuchsia: "#ff00ff", white: '#ffffff', lime: '#00ff00', green: '#008000',
	navy: '#000080', blue: '#0000ff', aqua: '#00ffff', teal: '#008080',
	black: '#000000', silver: '#c0c0c0', gray: '#808080'
};

var map = function map(array, fn) {
	var results = [];
	for (var i = 0, l = array.length; i < l; i++) {
		results[i] = fn(array[i], i);
	}return results;
};

var Color = function Color(color, type) {

	if (color.isColor) {

		this.red = color.red;
		this.green = color.green;
		this.blue = color.blue;
		this.alpha = color.alpha;
	} else {

		var namedColor = colors[color];
		if (namedColor) {
			color = namedColor;
			type = 'hex';
		}

		switch (typeof color) {
			case 'string':
				if (!type) type = (type = color.match(/^rgb|^hsb|^hsl/)) ? type[0] : 'hex';break;
			case 'object':
				type = type || 'rgb';color = color.toString();break;
			case 'number':
				type = 'hex';color = color.toString(16);break;
		}

		color = Color['parse' + type.toUpperCase()](color);
		this.red = color[0];
		this.green = color[1];
		this.blue = color[2];
		this.alpha = color[3];
	}

	this.isColor = true;
};

var limit = function limit(number, min, max) {
	return Math.min(max, Math.max(min, number));
};

var listMatch = /([-.\d]+\%?)\s*,\s*([-.\d]+\%?)\s*,\s*([-.\d]+\%?)\s*,?\s*([-.\d]*\%?)/;
var hexMatch = /^#?([a-f0-9]{1,2})([a-f0-9]{1,2})([a-f0-9]{1,2})([a-f0-9]{0,2})$/i;

Color.parseRGB = function (color) {
	return map(color.match(listMatch).slice(1), function (bit, i) {
		if (bit) bit = parseFloat(bit) * (bit[bit.length - 1] == '%' ? 2.55 : 1);
		return i < 3 ? Math.round((bit %= 256) < 0 ? bit + 256 : bit) : limit(bit === '' ? 1 : Number(bit), 0, 1);
	});
};

Color.parseHEX = function (color) {
	if (color.length == 1) color = color + color + color;
	return map(color.match(hexMatch).slice(1), function (bit, i) {
		if (i == 3) return bit ? parseInt(bit, 16) / 255 : 1;
		return parseInt(bit.length == 1 ? bit + bit : bit, 16);
	});
};

Color.parseHSB = function (color) {
	var hsb = map(color.match(listMatch).slice(1), function (bit, i) {
		if (bit) bit = parseFloat(bit);
		if (i === 0) return Math.round((bit %= 360) < 0 ? bit + 360 : bit);else if (i < 3) return limit(Math.round(bit), 0, 100);else return limit(bit === '' ? 1 : Number(bit), 0, 1);
	});

	var a = hsb[3];
	var br = Math.round(hsb[2] / 100 * 255);
	if (hsb[1] == 0) return [br, br, br, a];

	var hue = hsb[0];
	var f = hue % 60;
	var p = Math.round(hsb[2] * (100 - hsb[1]) / 10000 * 255);
	var q = Math.round(hsb[2] * (6000 - hsb[1] * f) / 600000 * 255);
	var t = Math.round(hsb[2] * (6000 - hsb[1] * (60 - f)) / 600000 * 255);

	switch (Math.floor(hue / 60)) {
		case 0:
			return [br, t, p, a];
		case 1:
			return [q, br, p, a];
		case 2:
			return [p, br, t, a];
		case 3:
			return [p, q, br, a];
		case 4:
			return [t, p, br, a];
		default:
			return [br, p, q, a];
	}
};

Color.parseHSL = function (color) {
	var hsb = map(color.match(listMatch).slice(1), function (bit, i) {
		if (bit) bit = parseFloat(bit);
		if (i === 0) return Math.round((bit %= 360) < 0 ? bit + 360 : bit);else if (i < 3) return limit(Math.round(bit), 0, 100);else return limit(bit === '' ? 1 : Number(bit), 0, 1);
	});

	var h = hsb[0] / 60;
	var s = hsb[1] / 100;
	var l = hsb[2] / 100;
	var a = hsb[3];

	var c = (1 - Math.abs(2 * l - 1)) * s;
	var x = c * (1 - Math.abs(h % 2 - 1));
	var m = l - c / 2;

	var p = Math.round((c + m) * 255);
	var q = Math.round((x + m) * 255);
	var t = Math.round(m * 255);

	switch (Math.floor(h)) {
		case 0:
			return [p, q, t, a];
		case 1:
			return [q, p, t, a];
		case 2:
			return [t, p, q, a];
		case 3:
			return [t, q, p, a];
		case 4:
			return [q, t, p, a];
		default:
			return [p, t, q, a];
	}
};

var toString = function toString(type, array) {
	if (array[3] != 1) type += 'a';else array.pop();
	return type + '(' + array.join(', ') + ')';
};

Color.prototype = {

	toHSB: function toHSB(array) {
		var red = this.red,
		    green = this.green,
		    blue = this.blue,
		    alpha = this.alpha;

		var max = Math.max(red, green, blue),
		    min = Math.min(red, green, blue),
		    delta = max - min;
		var hue = 0,
		    saturation = delta != 0 ? delta / max : 0,
		    brightness = max / 255;
		if (saturation) {
			var rr = (max - red) / delta,
			    gr = (max - green) / delta,
			    br = (max - blue) / delta;
			hue = red == max ? br - gr : green == max ? 2 + rr - br : 4 + gr - rr;
			if ((hue /= 6) < 0) hue++;
		}

		var hsb = [Math.round(hue * 360), Math.round(saturation * 100), Math.round(brightness * 100), alpha];

		return array ? hsb : toString('hsb', hsb);
	},

	toHSL: function toHSL(array) {
		var red = this.red,
		    green = this.green,
		    blue = this.blue,
		    alpha = this.alpha;

		var max = Math.max(red, green, blue),
		    min = Math.min(red, green, blue),
		    delta = max - min;
		var hue = 0,
		    saturation = delta != 0 ? delta / (255 - Math.abs(max + min - 255)) : 0,
		    lightness = (max + min) / 512;
		if (saturation) {
			var rr = (max - red) / delta,
			    gr = (max - green) / delta,
			    br = (max - blue) / delta;
			hue = red == max ? br - gr : green == max ? 2 + rr - br : 4 + gr - rr;
			if ((hue /= 6) < 0) hue++;
		}

		var hsl = [Math.round(hue * 360), Math.round(saturation * 100), Math.round(lightness * 100), alpha];

		return array ? hsl : toString('hsl', hsl);
	},

	toHEX: function toHEX(array) {

		var a = this.alpha;
		var alpha = (a = Math.round(a * 255).toString(16)).length == 1 ? a + a : a;

		var hex = map([this.red, this.green, this.blue], function (bit) {
			bit = bit.toString(16);
			return bit.length == 1 ? '0' + bit : bit;
		});

		return array ? hex.concat(alpha) : '#' + hex.join('') + (alpha == 'ff' ? '' : alpha);
	},

	toRGB: function toRGB(array) {
		var rgb = [this.red, this.green, this.blue, this.alpha];
		return array ? rgb : toString('rgb', rgb);
	}

};

Color.prototype.toString = Color.prototype.toRGB;

Color.hex = function (hex) {
	return new Color(hex, 'hex');
};

if (this.hex == null) this.hex = Color.hex;

Color.hsb = function (h, s, b, a) {
	return new Color([h || 0, s || 0, b || 0, a == null ? 1 : a], 'hsb');
};

if (this.hsb == null) this.hsb = Color.hsb;

Color.hsl = function (h, s, l, a) {
	return new Color([h || 0, s || 0, l || 0, a == null ? 1 : a], 'hsl');
};

if (this.hsl == null) this.hsl = Color.hsl;

Color.rgb = function (r, g, b, a) {
	return new Color([r || 0, g || 0, b || 0, a == null ? 1 : a], 'rgb');
};

if (this.rgb == null) this.rgb = Color.rgb;

Color.detach = function (color) {
	color = new Color(color);
	return [Color.rgb(color.red, color.green, color.blue).toString(), color.alpha];
};

module.exports = Color;
}, 499, null, "art/core/color.js");
__d(/* ARTSerializablePath */function(global, require, module, exports) {
'use strict';

var Class = require(501                ); // 501 = art/core/class.js
var Path = require(502               ); // 502 = art/core/path.js

var MOVE_TO = 0;
var CLOSE = 1;
var LINE_TO = 2;
var CURVE_TO = 3;
var ARC = 4;

var SerializablePath = Class(Path, {

  initialize: function initialize(path) {
    this.reset();
    if (path instanceof SerializablePath) {
      this.path = path.path.slice(0);
    } else if (path) {
      if (path.applyToPath) {
        path.applyToPath(this);
      } else {
        this.push(path);
      }
    }
  },

  onReset: function onReset() {
    this.path = [];
  },

  onMove: function onMove(sx, sy, x, y) {
    this.path.push(MOVE_TO, x, y);
  },

  onLine: function onLine(sx, sy, x, y) {
    this.path.push(LINE_TO, x, y);
  },

  onBezierCurve: function onBezierCurve(sx, sy, p1x, p1y, p2x, p2y, x, y) {
    this.path.push(CURVE_TO, p1x, p1y, p2x, p2y, x, y);
  },

  _arcToBezier: Path.prototype.onArc,

  onArc: function onArc(sx, sy, ex, ey, cx, cy, rx, ry, sa, ea, ccw, rotation) {
    if (rx !== ry || rotation) {
      return this._arcToBezier(sx, sy, ex, ey, cx, cy, rx, ry, sa, ea, ccw, rotation);
    }
    this.path.push(ARC, cx, cy, rx, sa, ea, ccw ? 0 : 1);
  },

  onClose: function onClose() {
    this.path.push(CLOSE);
  },

  toJSON: function toJSON() {
    return this.path;
  }

});

module.exports = SerializablePath;
}, 500, null, "ARTSerializablePath");
__d(/* art/core/class.js */function(global, require, module, exports) {module.exports = function (mixins) {
	var proto = {};
	for (var i = 0, l = arguments.length; i < l; i++) {
		var mixin = arguments[i];
		if (typeof mixin == 'function') mixin = mixin.prototype;
		for (var key in mixin) {
			proto[key] = mixin[key];
		}
	}
	if (!proto.initialize) proto.initialize = function () {};
	proto.constructor = function (a, b, c, d, e, f, g, h) {
		return new proto.initialize(a, b, c, d, e, f, g, h);
	};
	proto.constructor.prototype = proto.initialize.prototype = proto;
	return proto.constructor;
};
}, 501, null, "art/core/class.js");
__d(/* art/core/path.js */function(global, require, module, exports) {var Class = require(501      ); // 501 = ./class

module.exports = Class({

	initialize: function initialize(path) {
		this.reset().push(path);
	},

	push: function push() {
		var p = Array.prototype.join.call(arguments, ' ').match(/[a-df-z]|[\-+]?(?:[\d\.]e[\-+]?|[^\s\-+,a-z])+/ig);
		if (!p) return this;

		var last,
		    cmd = p[0],
		    i = 1;
		while (cmd) {
			switch (cmd) {
				case 'm':
					this.move(p[i++], p[i++]);break;
				case 'l':
					this.line(p[i++], p[i++]);break;
				case 'c':
					this.curve(p[i++], p[i++], p[i++], p[i++], p[i++], p[i++]);break;
				case 's':
					this.curve(p[i++], p[i++], null, null, p[i++], p[i++]);break;
				case 'q':
					this.curve(p[i++], p[i++], p[i++], p[i++]);break;
				case 't':
					this.curve(p[i++], p[i++]);break;
				case 'a':
					this.arc(p[i + 5], p[i + 6], p[i], p[i + 1], p[i + 3], !+p[i + 4], p[i + 2]);i += 7;break;
				case 'h':
					this.line(p[i++], 0);break;
				case 'v':
					this.line(0, p[i++]);break;

				case 'M':
					this.moveTo(p[i++], p[i++]);break;
				case 'L':
					this.lineTo(p[i++], p[i++]);break;
				case 'C':
					this.curveTo(p[i++], p[i++], p[i++], p[i++], p[i++], p[i++]);break;
				case 'S':
					this.curveTo(p[i++], p[i++], null, null, p[i++], p[i++]);break;
				case 'Q':
					this.curveTo(p[i++], p[i++], p[i++], p[i++]);break;
				case 'T':
					this.curveTo(p[i++], p[i++]);break;
				case 'A':
					this.arcTo(p[i + 5], p[i + 6], p[i], p[i + 1], p[i + 3], !+p[i + 4], p[i + 2]);i += 7;break;
				case 'H':
					this.lineTo(p[i++], this.penY);break;
				case 'V':
					this.lineTo(this.penX, p[i++]);break;

				case 'Z':case 'z':
					this.close();break;
				default:
					cmd = last;i--;continue;
			}

			last = cmd;
			if (last == 'm') last = 'l';else if (last == 'M') last = 'L';
			cmd = p[i++];
		}
		return this;
	},

	reset: function reset() {
		this.penX = this.penY = 0;
		this.penDownX = this.penDownY = null;
		this._pivotX = this._pivotY = 0;
		this.onReset();
		return this;
	},

	move: function move(x, y) {
		this.onMove(this.penX, this.penY, this._pivotX = this.penX += +x, this._pivotY = this.penY += +y);
		return this;
	},
	moveTo: function moveTo(x, y) {
		this.onMove(this.penX, this.penY, this._pivotX = this.penX = +x, this._pivotY = this.penY = +y);
		return this;
	},

	line: function line(x, y) {
		return this.lineTo(this.penX + +x, this.penY + +y);
	},
	lineTo: function lineTo(x, y) {
		if (this.penDownX == null) {
			this.penDownX = this.penX;this.penDownY = this.penY;
		}
		this.onLine(this.penX, this.penY, this._pivotX = this.penX = +x, this._pivotY = this.penY = +y);
		return this;
	},

	curve: function curve(c1x, c1y, c2x, c2y, ex, ey) {
		var x = this.penX,
		    y = this.penY;
		return this.curveTo(x + +c1x, y + +c1y, c2x == null ? null : x + +c2x, c2y == null ? null : y + +c2y, ex == null ? null : x + +ex, ey == null ? null : y + +ey);
	},
	curveTo: function curveTo(c1x, c1y, c2x, c2y, ex, ey) {
		var x = this.penX,
		    y = this.penY;
		if (c2x == null) {
			c2x = +c1x;c2y = +c1y;
			c1x = x * 2 - (this._pivotX || 0);c1y = y * 2 - (this._pivotY || 0);
		}
		if (ex == null) {
			this._pivotX = +c1x;this._pivotY = +c1y;
			ex = +c2x;ey = +c2y;
			c2x = (ex + +c1x * 2) / 3;c2y = (ey + +c1y * 2) / 3;
			c1x = (x + +c1x * 2) / 3;c1y = (y + +c1y * 2) / 3;
		} else {
			this._pivotX = +c2x;this._pivotY = +c2y;
		}
		if (this.penDownX == null) {
			this.penDownX = x;this.penDownY = y;
		}
		this.onBezierCurve(x, y, +c1x, +c1y, +c2x, +c2y, this.penX = +ex, this.penY = +ey);
		return this;
	},

	arc: function arc(x, y, rx, ry, outer, counterClockwise, rotation) {
		return this.arcTo(this.penX + +x, this.penY + +y, rx, ry, outer, counterClockwise, rotation);
	},
	arcTo: function arcTo(x, y, rx, ry, outer, counterClockwise, rotation) {
		ry = Math.abs(+ry || +rx || +y - this.penY);
		rx = Math.abs(+rx || +x - this.penX);

		if (!rx || !ry || x == this.penX && y == this.penY) return this.lineTo(x, y);

		var tX = this.penX,
		    tY = this.penY,
		    clockwise = !+counterClockwise,
		    large = !!+outer;

		var rad = rotation ? rotation * Math.PI / 180 : 0,
		    cos = Math.cos(rad),
		    sin = Math.sin(rad);
		x -= tX;y -= tY;

		var cx = cos * x / 2 + sin * y / 2,
		    cy = -sin * x / 2 + cos * y / 2,
		    rxry = rx * rx * ry * ry,
		    rycx = ry * ry * cx * cx,
		    rxcy = rx * rx * cy * cy,
		    a = rxry - rxcy - rycx;

		if (a < 0) {
			a = Math.sqrt(1 - a / rxry);
			rx *= a;ry *= a;
			cx = x / 2;cy = y / 2;
		} else {
			a = Math.sqrt(a / (rxcy + rycx));
			if (large == clockwise) a = -a;
			var cxd = -a * cy * rx / ry,
			    cyd = a * cx * ry / rx;
			cx = cos * cxd - sin * cyd + x / 2;
			cy = sin * cxd + cos * cyd + y / 2;
		}

		var xx = cos / rx,
		    yx = sin / rx,
		    xy = -sin / ry,
		    yy = cos / ry;

		var sa = Math.atan2(xy * -cx + yy * -cy, xx * -cx + yx * -cy),
		    ea = Math.atan2(xy * (x - cx) + yy * (y - cy), xx * (x - cx) + yx * (y - cy));

		cx += tX;cy += tY;
		x += tX;y += tY;

		if (this.penDownX == null) {
			this.penDownX = this.penX;this.penDownY = this.penY;
		}
		this.onArc(tX, tY, this._pivotX = this.penX = x, this._pivotY = this.penY = y, cx, cy, rx, ry, sa, ea, !clockwise, rotation);
		return this;
	},

	counterArc: function counterArc(x, y, rx, ry, outer) {
		return this.arc(x, y, rx, ry, outer, true);
	},
	counterArcTo: function counterArcTo(x, y, rx, ry, outer) {
		return this.arcTo(x, y, rx, ry, outer, true);
	},

	close: function close() {
		if (this.penDownX != null) {
			this.onClose(this.penX, this.penY, this.penX = this.penDownX, this.penY = this.penDownY);
			this.penDownX = null;
		}
		return this;
	},

	onReset: function onReset() {},

	onMove: function onMove(sx, sy, ex, ey) {},

	onLine: function onLine(sx, sy, ex, ey) {
		this.onBezierCurve(sx, sy, sx, sy, ex, ey, ex, ey);
	},

	onBezierCurve: function onBezierCurve(sx, sy, c1x, c1y, c2x, c2y, ex, ey) {
		var gx = ex - sx,
		    gy = ey - sy,
		    g = gx * gx + gy * gy,
		    v1,
		    v2,
		    cx,
		    cy,
		    u;

		cx = c1x - sx;cy = c1y - sy;
		u = cx * gx + cy * gy;

		if (u > g) {
			cx -= gx;
			cy -= gy;
		} else if (u > 0 && g != 0) {
			cx -= u / g * gx;
			cy -= u / g * gy;
		}

		v1 = cx * cx + cy * cy;

		cx = c2x - sx;cy = c2y - sy;
		u = cx * gx + cy * gy;

		if (u > g) {
			cx -= gx;
			cy -= gy;
		} else if (u > 0 && g != 0) {
			cx -= u / g * gx;
			cy -= u / g * gy;
		}

		v2 = cx * cx + cy * cy;

		if (v1 < 0.01 && v2 < 0.01) {
			this.onLine(sx, sy, ex, ey);
			return;
		}

		if (isNaN(v1) || isNaN(v2)) {
			throw new Error('Bad input');
		}

		var s1x = (c1x + c2x) * 0.5,
		    s1y = (c1y + c2y) * 0.5,
		    l1x = (c1x + sx) * 0.5,
		    l1y = (c1y + sy) * 0.5,
		    l2x = (l1x + s1x) * 0.5,
		    l2y = (l1y + s1y) * 0.5,
		    r2x = (ex + c2x) * 0.5,
		    r2y = (ey + c2y) * 0.5,
		    r1x = (r2x + s1x) * 0.5,
		    r1y = (r2y + s1y) * 0.5,
		    l2r1x = (l2x + r1x) * 0.5,
		    l2r1y = (l2y + r1y) * 0.5;

		this.onBezierCurve(sx, sy, l1x, l1y, l2x, l2y, l2r1x, l2r1y);
		this.onBezierCurve(l2r1x, l2r1y, r1x, r1y, r2x, r2y, ex, ey);
	},

	onArc: function onArc(sx, sy, ex, ey, cx, cy, rx, ry, sa, ea, ccw, rotation) {
		var rad = rotation ? rotation * Math.PI / 180 : 0,
		    cos = Math.cos(rad),
		    sin = Math.sin(rad),
		    xx = cos * rx,
		    yx = -sin * ry,
		    xy = sin * rx,
		    yy = cos * ry;

		var arc = ea - sa;
		if (arc < 0 && !ccw) arc += Math.PI * 2;else if (arc > 0 && ccw) arc -= Math.PI * 2;

		var n = Math.ceil(Math.abs(arc / (Math.PI / 2))),
		    step = arc / n,
		    k = 4 / 3 * Math.tan(step / 4);

		var x = Math.cos(sa),
		    y = Math.sin(sa);

		for (var i = 0; i < n; i++) {
			var cp1x = x - k * y,
			    cp1y = y + k * x;

			sa += step;
			x = Math.cos(sa);y = Math.sin(sa);

			var cp2x = x + k * y,
			    cp2y = y - k * x;

			this.onBezierCurve(sx, sy, cx + xx * cp1x + yx * cp1y, cy + xy * cp1x + yy * cp1y, cx + xx * cp2x + yx * cp2y, cy + xy * cp2x + yy * cp2y, sx = cx + xx * x + yx * y, sy = cy + xy * x + yy * y);
		}
	},

	onClose: function onClose(sx, sy, ex, ey) {
		this.onLine(sx, sy, ex, ey);
	}

});
}, 502, null, "art/core/path.js");
__d(/* art/core/transform.js */function(global, require, module, exports) {var Class = require(501      ); // 501 = ./class

function Transform(xx, yx, xy, yy, x, y) {
	if (xx && typeof xx == 'object') {
		yx = xx.yx;yy = xx.yy;y = xx.y;
		xy = xx.xy;x = xx.x;xx = xx.xx;
	}
	this.xx = xx == null ? 1 : xx;
	this.yx = yx || 0;
	this.xy = xy || 0;
	this.yy = yy == null ? 1 : yy;
	this.x = (x == null ? this.x : x) || 0;
	this.y = (y == null ? this.y : y) || 0;
	this._transform();
	return this;
};

module.exports = Class({

	initialize: Transform,

	_transform: function _transform() {},

	xx: 1, yx: 0, x: 0,
	xy: 0, yy: 1, y: 0,

	transform: function transform(xx, yx, xy, yy, x, y) {
		var m = this;
		if (xx && typeof xx == 'object') {
			yx = xx.yx;yy = xx.yy;y = xx.y;
			xy = xx.xy;x = xx.x;xx = xx.xx;
		}
		if (!x) x = 0;
		if (!y) y = 0;
		return this.transformTo(m.xx * xx + m.xy * yx, m.yx * xx + m.yy * yx, m.xx * xy + m.xy * yy, m.yx * xy + m.yy * yy, m.xx * x + m.xy * y + m.x, m.yx * x + m.yy * y + m.y);
	},

	transformTo: Transform,

	translate: function translate(x, y) {
		return this.transform(1, 0, 0, 1, x, y);
	},

	move: function move(x, y) {
		this.x += x || 0;
		this.y += y || 0;
		this._transform();
		return this;
	},

	scale: function scale(x, y) {
		if (y == null) y = x;
		return this.transform(x, 0, 0, y, 0, 0);
	},

	rotate: function rotate(deg, x, y) {
		if (x == null || y == null) {
			x = (this.left || 0) + (this.width || 0) / 2;
			y = (this.top || 0) + (this.height || 0) / 2;
		}

		var rad = deg * Math.PI / 180,
		    sin = Math.sin(rad),
		    cos = Math.cos(rad);

		this.transform(1, 0, 0, 1, x, y);
		var m = this;

		return this.transformTo(cos * m.xx - sin * m.yx, sin * m.xx + cos * m.yx, cos * m.xy - sin * m.yy, sin * m.xy + cos * m.yy, m.x, m.y).transform(1, 0, 0, 1, -x, -y);
	},

	moveTo: function moveTo(x, y) {
		var m = this;
		return this.transformTo(m.xx, m.yx, m.xy, m.yy, x, y);
	},

	rotateTo: function rotateTo(deg, x, y) {
		var m = this;
		var flip = m.yx / m.xx > m.yy / m.xy ? -1 : 1;
		if (m.xx < 0 ? m.xy >= 0 : m.xy < 0) flip = -flip;
		return this.rotate(deg - Math.atan2(flip * m.yx, flip * m.xx) * 180 / Math.PI, x, y);
	},

	scaleTo: function scaleTo(x, y) {
		var m = this;

		var h = Math.sqrt(m.xx * m.xx + m.yx * m.yx);
		m.xx /= h;m.yx /= h;

		h = Math.sqrt(m.yy * m.yy + m.xy * m.xy);
		m.yy /= h;m.xy /= h;

		return this.scale(x, y);
	},

	resizeTo: function resizeTo(width, height) {
		var w = this.width,
		    h = this.height;
		if (!w || !h) return this;
		return this.scaleTo(width / w, height / h);
	},

	inversePoint: function inversePoint(x, y) {
		var a = this.xx,
		    b = this.yx,
		    c = this.xy,
		    d = this.yy,
		    e = this.x,
		    f = this.y;
		var det = b * c - a * d;
		if (det == 0) return null;
		return {
			x: (d * (e - x) + c * (y - f)) / det,
			y: (a * (f - y) + b * (x - e)) / det
		};
	},

	point: function point(x, y) {
		var m = this;
		return {
			x: m.xx * x + m.xy * y + m.x,
			y: m.yx * x + m.yy * y + m.y
		};
	}

});
}, 503, null, "art/core/transform.js");
__d(/* Button */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native/Libraries/Components/Button.js';
var ColorPropType = require(338            ); // 338 = ColorPropType
var Platform = require(348       ); // 348 = Platform
var React = require(398    ); // 398 = React
var StyleSheet = require(421         ); // 421 = StyleSheet
var Text = require(505   ); // 505 = Text
var TouchableNativeFeedback = require(512                      ); // 512 = TouchableNativeFeedback
var TouchableOpacity = require(572               ); // 572 = TouchableOpacity
var View = require(441   ); // 441 = View

var invariant = require(346                 ); // 346 = fbjs/lib/invariant

var Button = function (_React$Component) {
  babelHelpers.inherits(Button, _React$Component);

  function Button() {
    babelHelpers.classCallCheck(this, Button);
    return babelHelpers.possibleConstructorReturn(this, (Button.__proto__ || Object.getPrototypeOf(Button)).apply(this, arguments));
  }

  babelHelpers.createClass(Button, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          accessibilityLabel = _props.accessibilityLabel,
          color = _props.color,
          onPress = _props.onPress,
          title = _props.title,
          disabled = _props.disabled,
          testID = _props.testID;

      var buttonStyles = [styles.button];
      var textStyles = [styles.text];
      var Touchable = Platform.OS === 'android' ? TouchableNativeFeedback : TouchableOpacity;
      if (color && Platform.OS === 'ios') {
        textStyles.push({ color: color });
      } else if (color) {
        buttonStyles.push({ backgroundColor: color });
      }
      if (disabled) {
        buttonStyles.push(styles.buttonDisabled);
        textStyles.push(styles.textDisabled);
      }
      invariant(typeof title === 'string', 'The title prop of a Button must be a string');
      var formattedTitle = Platform.OS === 'android' ? title.toUpperCase() : title;
      return React.createElement(
        Touchable,
        {
          accessibilityComponentType: 'button',
          accessibilityLabel: accessibilityLabel,
          accessibilityTraits: ['button'],
          testID: testID,
          disabled: disabled,
          onPress: onPress, __source: {
            fileName: _jsxFileName,
            lineNumber: 115
          }
        },
        React.createElement(
          View,
          { style: buttonStyles, __source: {
              fileName: _jsxFileName,
              lineNumber: 122
            }
          },
          React.createElement(
            Text,
            { style: textStyles, __source: {
                fileName: _jsxFileName,
                lineNumber: 123
              }
            },
            formattedTitle
          )
        )
      );
    }
  }]);
  return Button;
}(React.Component);

Button.propTypes = {
  title: React.PropTypes.string.isRequired,

  accessibilityLabel: React.PropTypes.string,

  color: ColorPropType,

  disabled: React.PropTypes.bool,

  onPress: React.PropTypes.func.isRequired,

  testID: React.PropTypes.string
};

var defaultBlue = '#2196F3';
if (Platform.OS === 'ios') {
  defaultBlue = '#0C42FD';
}

var styles = StyleSheet.create({
  button: Platform.select({
    ios: {},
    android: {
      elevation: 4,
      backgroundColor: defaultBlue,
      borderRadius: 2
    }
  }),
  text: Platform.select({
    ios: {
      color: defaultBlue,
      textAlign: 'center',
      padding: 8,
      fontSize: 18
    },
    android: {
      textAlign: 'center',
      color: 'white',
      padding: 8,
      fontWeight: '500'
    }
  }),
  buttonDisabled: Platform.select({
    ios: {},
    android: {
      elevation: 0,
      backgroundColor: '#dfdfdf'
    }
  }),
  textDisabled: Platform.select({
    ios: {
      color: '#cdcdcd'
    },
    android: {
      color: '#a1a1a1'
    }
  })
});

module.exports = Button;
}, 504, null, "Button");
__d(/* Text */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native/Libraries/Text/Text.js';
var ColorPropType = require(338            ); // 338 = ColorPropType
var EdgeInsetsPropType = require(442                 ); // 442 = EdgeInsetsPropType
var NativeMethodsMixin = require(341                 ); // 341 = NativeMethodsMixin
var Platform = require(348       ); // 348 = Platform
var React = require(398    ); // 398 = React
var ReactNativeViewAttributes = require(447                        ); // 447 = ReactNativeViewAttributes
var StyleSheetPropType = require(448                 ); // 448 = StyleSheetPropType
var TextStylePropTypes = require(433                 ); // 433 = TextStylePropTypes
var Touchable = require(506        ); // 506 = Touchable

var processColor = require(436           ); // 436 = processColor
var createReactNativeComponentClass = require(452                              ); // 452 = createReactNativeComponentClass
var mergeFast = require(511        ); // 511 = mergeFast

var PropTypes = React.PropTypes;


var stylePropType = StyleSheetPropType(TextStylePropTypes);

var viewConfig = {
  validAttributes: mergeFast(ReactNativeViewAttributes.UIView, {
    isHighlighted: true,
    numberOfLines: true,
    ellipsizeMode: true,
    allowFontScaling: true,
    selectable: true,
    selectionColor: true,
    adjustsFontSizeToFit: true,
    minimumFontScale: true,
    textBreakStrategy: true
  }),
  uiViewClassName: 'RCTText'
};

var Text = React.createClass({
  displayName: 'Text',

  propTypes: {
    ellipsizeMode: PropTypes.oneOf(['head', 'middle', 'tail', 'clip']),

    numberOfLines: PropTypes.number,

    textBreakStrategy: PropTypes.oneOf(['simple', 'highQuality', 'balanced']),

    onLayout: PropTypes.func,

    onPress: PropTypes.func,

    onLongPress: PropTypes.func,

    pressRetentionOffset: EdgeInsetsPropType,

    selectable: PropTypes.bool,

    selectionColor: ColorPropType,

    suppressHighlighting: PropTypes.bool,
    style: stylePropType,

    testID: PropTypes.string,

    allowFontScaling: PropTypes.bool,

    accessible: PropTypes.bool,

    adjustsFontSizeToFit: PropTypes.bool,

    minimumFontScale: PropTypes.number
  },
  getDefaultProps: function getDefaultProps() {
    return {
      accessible: true,
      allowFontScaling: true,
      ellipsizeMode: 'tail'
    };
  },

  getInitialState: function getInitialState() {
    return mergeFast(Touchable.Mixin.touchableGetInitialState(), {
      isHighlighted: false
    });
  },
  mixins: [NativeMethodsMixin],
  viewConfig: viewConfig,
  getChildContext: function getChildContext() {
    return { isInAParentText: true };
  },

  childContextTypes: {
    isInAParentText: PropTypes.bool
  },
  contextTypes: {
    isInAParentText: PropTypes.bool
  },

  _handlers: null,
  _hasPressHandler: function _hasPressHandler() {
    return !!this.props.onPress || !!this.props.onLongPress;
  },

  touchableHandleActivePressIn: null,
  touchableHandleActivePressOut: null,
  touchableHandlePress: null,
  touchableHandleLongPress: null,
  touchableGetPressRectOffset: null,
  render: function render() {
    var _this = this;

    var newProps = this.props;
    if (this.props.onStartShouldSetResponder || this._hasPressHandler()) {
      if (!this._handlers) {
        this._handlers = {
          onStartShouldSetResponder: function onStartShouldSetResponder() {
            var shouldSetFromProps = _this.props.onStartShouldSetResponder && _this.props.onStartShouldSetResponder();
            var setResponder = shouldSetFromProps || _this._hasPressHandler();
            if (setResponder && !_this.touchableHandleActivePressIn) {
              for (var key in Touchable.Mixin) {
                if (typeof Touchable.Mixin[key] === 'function') {
                  _this[key] = Touchable.Mixin[key].bind(_this);
                }
              }
              _this.touchableHandleActivePressIn = function () {
                if (_this.props.suppressHighlighting || !_this._hasPressHandler()) {
                  return;
                }
                _this.setState({
                  isHighlighted: true
                });
              };

              _this.touchableHandleActivePressOut = function () {
                if (_this.props.suppressHighlighting || !_this._hasPressHandler()) {
                  return;
                }
                _this.setState({
                  isHighlighted: false
                });
              };

              _this.touchableHandlePress = function (e) {
                _this.props.onPress && _this.props.onPress(e);
              };

              _this.touchableHandleLongPress = function (e) {
                _this.props.onLongPress && _this.props.onLongPress(e);
              };

              _this.touchableGetPressRectOffset = function () {
                return this.props.pressRetentionOffset || PRESS_RECT_OFFSET;
              };
            }
            return setResponder;
          },
          onResponderGrant: function (e, dispatchID) {
            this.touchableHandleResponderGrant(e, dispatchID);
            this.props.onResponderGrant && this.props.onResponderGrant.apply(this, arguments);
          }.bind(this),
          onResponderMove: function (e) {
            this.touchableHandleResponderMove(e);
            this.props.onResponderMove && this.props.onResponderMove.apply(this, arguments);
          }.bind(this),
          onResponderRelease: function (e) {
            this.touchableHandleResponderRelease(e);
            this.props.onResponderRelease && this.props.onResponderRelease.apply(this, arguments);
          }.bind(this),
          onResponderTerminate: function (e) {
            this.touchableHandleResponderTerminate(e);
            this.props.onResponderTerminate && this.props.onResponderTerminate.apply(this, arguments);
          }.bind(this),
          onResponderTerminationRequest: function () {
            var allowTermination = this.touchableHandleResponderTerminationRequest();
            if (allowTermination && this.props.onResponderTerminationRequest) {
              allowTermination = this.props.onResponderTerminationRequest.apply(this, arguments);
            }
            return allowTermination;
          }.bind(this)
        };
      }
      newProps = babelHelpers.extends({}, this.props, this._handlers, {
        isHighlighted: this.state.isHighlighted
      });
    }
    if (newProps.selectionColor != null) {
      newProps = babelHelpers.extends({}, newProps, {
        selectionColor: processColor(newProps.selectionColor)
      });
    }
    if (Touchable.TOUCH_TARGET_DEBUG && newProps.onPress) {
      newProps = babelHelpers.extends({}, newProps, {
        style: [this.props.style, { color: 'magenta' }]
      });
    }
    if (this.context.isInAParentText) {
      return React.createElement(RCTVirtualText, babelHelpers.extends({}, newProps, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 342
        }
      }));
    } else {
      return React.createElement(RCTText, babelHelpers.extends({}, newProps, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 344
        }
      }));
    }
  }
});

var PRESS_RECT_OFFSET = { top: 20, left: 20, right: 20, bottom: 30 };

var RCTText = createReactNativeComponentClass(viewConfig);
var RCTVirtualText = RCTText;

if (Platform.OS === 'android') {
  RCTVirtualText = createReactNativeComponentClass({
    validAttributes: mergeFast(ReactNativeViewAttributes.UIView, {
      isHighlighted: true
    }),
    uiViewClassName: 'RCTVirtualText'
  });
}

module.exports = Text;
}, 505, null, "Text");
__d(/* Touchable */function(global, require, module, exports) {

'use strict';

var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native/Libraries/Components/Touchable/Touchable.js';
var BoundingDimensions = require(507                 ); // 507 = BoundingDimensions
var Platform = require(348       ); // 348 = Platform
var Position = require(508       ); // 508 = Position
var React = require(398    ); // 398 = React
var TVEventHandler = require(509             ); // 509 = TVEventHandler
var TouchEventUtils = require(510                       ); // 510 = fbjs/lib/TouchEventUtils
var UIManager = require(395        ); // 395 = UIManager
var View = require(441   ); // 441 = View

var findNodeHandle = require(396             ); // 396 = findNodeHandle
var keyMirror = require(427                 ); // 427 = fbjs/lib/keyMirror
var normalizeColor = require(340             ); // 340 = normalizeColor

var States = keyMirror({
  NOT_RESPONDER: null,
  RESPONDER_INACTIVE_PRESS_IN: null,
  RESPONDER_INACTIVE_PRESS_OUT: null,
  RESPONDER_ACTIVE_PRESS_IN: null,
  RESPONDER_ACTIVE_PRESS_OUT: null,
  RESPONDER_ACTIVE_LONG_PRESS_IN: null,
  RESPONDER_ACTIVE_LONG_PRESS_OUT: null,
  ERROR: null
});

var IsActive = {
  RESPONDER_ACTIVE_PRESS_OUT: true,
  RESPONDER_ACTIVE_PRESS_IN: true
};

var IsPressingIn = {
  RESPONDER_INACTIVE_PRESS_IN: true,
  RESPONDER_ACTIVE_PRESS_IN: true,
  RESPONDER_ACTIVE_LONG_PRESS_IN: true
};

var IsLongPressingIn = {
  RESPONDER_ACTIVE_LONG_PRESS_IN: true
};

var Signals = keyMirror({
  DELAY: null,
  RESPONDER_GRANT: null,
  RESPONDER_RELEASE: null,
  RESPONDER_TERMINATED: null,
  ENTER_PRESS_RECT: null,
  LEAVE_PRESS_RECT: null,
  LONG_PRESS_DETECTED: null
});

var Transitions = {
  NOT_RESPONDER: {
    DELAY: States.ERROR,
    RESPONDER_GRANT: States.RESPONDER_INACTIVE_PRESS_IN,
    RESPONDER_RELEASE: States.ERROR,
    RESPONDER_TERMINATED: States.ERROR,
    ENTER_PRESS_RECT: States.ERROR,
    LEAVE_PRESS_RECT: States.ERROR,
    LONG_PRESS_DETECTED: States.ERROR
  },
  RESPONDER_INACTIVE_PRESS_IN: {
    DELAY: States.RESPONDER_ACTIVE_PRESS_IN,
    RESPONDER_GRANT: States.ERROR,
    RESPONDER_RELEASE: States.NOT_RESPONDER,
    RESPONDER_TERMINATED: States.NOT_RESPONDER,
    ENTER_PRESS_RECT: States.RESPONDER_INACTIVE_PRESS_IN,
    LEAVE_PRESS_RECT: States.RESPONDER_INACTIVE_PRESS_OUT,
    LONG_PRESS_DETECTED: States.ERROR
  },
  RESPONDER_INACTIVE_PRESS_OUT: {
    DELAY: States.RESPONDER_ACTIVE_PRESS_OUT,
    RESPONDER_GRANT: States.ERROR,
    RESPONDER_RELEASE: States.NOT_RESPONDER,
    RESPONDER_TERMINATED: States.NOT_RESPONDER,
    ENTER_PRESS_RECT: States.RESPONDER_INACTIVE_PRESS_IN,
    LEAVE_PRESS_RECT: States.RESPONDER_INACTIVE_PRESS_OUT,
    LONG_PRESS_DETECTED: States.ERROR
  },
  RESPONDER_ACTIVE_PRESS_IN: {
    DELAY: States.ERROR,
    RESPONDER_GRANT: States.ERROR,
    RESPONDER_RELEASE: States.NOT_RESPONDER,
    RESPONDER_TERMINATED: States.NOT_RESPONDER,
    ENTER_PRESS_RECT: States.RESPONDER_ACTIVE_PRESS_IN,
    LEAVE_PRESS_RECT: States.RESPONDER_ACTIVE_PRESS_OUT,
    LONG_PRESS_DETECTED: States.RESPONDER_ACTIVE_LONG_PRESS_IN
  },
  RESPONDER_ACTIVE_PRESS_OUT: {
    DELAY: States.ERROR,
    RESPONDER_GRANT: States.ERROR,
    RESPONDER_RELEASE: States.NOT_RESPONDER,
    RESPONDER_TERMINATED: States.NOT_RESPONDER,
    ENTER_PRESS_RECT: States.RESPONDER_ACTIVE_PRESS_IN,
    LEAVE_PRESS_RECT: States.RESPONDER_ACTIVE_PRESS_OUT,
    LONG_PRESS_DETECTED: States.ERROR
  },
  RESPONDER_ACTIVE_LONG_PRESS_IN: {
    DELAY: States.ERROR,
    RESPONDER_GRANT: States.ERROR,
    RESPONDER_RELEASE: States.NOT_RESPONDER,
    RESPONDER_TERMINATED: States.NOT_RESPONDER,
    ENTER_PRESS_RECT: States.RESPONDER_ACTIVE_LONG_PRESS_IN,
    LEAVE_PRESS_RECT: States.RESPONDER_ACTIVE_LONG_PRESS_OUT,
    LONG_PRESS_DETECTED: States.RESPONDER_ACTIVE_LONG_PRESS_IN
  },
  RESPONDER_ACTIVE_LONG_PRESS_OUT: {
    DELAY: States.ERROR,
    RESPONDER_GRANT: States.ERROR,
    RESPONDER_RELEASE: States.NOT_RESPONDER,
    RESPONDER_TERMINATED: States.NOT_RESPONDER,
    ENTER_PRESS_RECT: States.RESPONDER_ACTIVE_LONG_PRESS_IN,
    LEAVE_PRESS_RECT: States.RESPONDER_ACTIVE_LONG_PRESS_OUT,
    LONG_PRESS_DETECTED: States.ERROR
  },
  error: {
    DELAY: States.NOT_RESPONDER,
    RESPONDER_GRANT: States.RESPONDER_INACTIVE_PRESS_IN,
    RESPONDER_RELEASE: States.NOT_RESPONDER,
    RESPONDER_TERMINATED: States.NOT_RESPONDER,
    ENTER_PRESS_RECT: States.NOT_RESPONDER,
    LEAVE_PRESS_RECT: States.NOT_RESPONDER,
    LONG_PRESS_DETECTED: States.NOT_RESPONDER
  }
};

var HIGHLIGHT_DELAY_MS = 130;

var PRESS_EXPAND_PX = 20;

var LONG_PRESS_THRESHOLD = 500;

var LONG_PRESS_DELAY_MS = LONG_PRESS_THRESHOLD - HIGHLIGHT_DELAY_MS;

var LONG_PRESS_ALLOWED_MOVEMENT = 10;

var TouchableMixin = {
  componentDidMount: function componentDidMount() {
    if (!Platform.isTVOS) {
      return;
    }

    this._tvEventHandler = new TVEventHandler();
    this._tvEventHandler.enable(this, function (cmp, evt) {
      var myTag = findNodeHandle(cmp);
      evt.dispatchConfig = {};
      if (myTag === evt.tag) {
        if (evt.eventType === 'focus') {
          cmp.touchableHandleActivePressIn && cmp.touchableHandleActivePressIn(evt);
        } else if (evt.eventType === 'blur') {
          cmp.touchableHandleActivePressOut && cmp.touchableHandleActivePressOut(evt);
        } else if (evt.eventType === 'select') {
          cmp.touchableHandlePress && cmp.touchableHandlePress(evt);
        }
      }
    });
  },

  componentWillUnmount: function componentWillUnmount() {
    if (this._tvEventHandler) {
      this._tvEventHandler.disable();
      delete this._tvEventHandler;
    }
    this.touchableDelayTimeout && clearTimeout(this.touchableDelayTimeout);
    this.longPressDelayTimeout && clearTimeout(this.longPressDelayTimeout);
    this.pressOutDelayTimeout && clearTimeout(this.pressOutDelayTimeout);
  },

  touchableGetInitialState: function touchableGetInitialState() {
    return {
      touchable: { touchState: undefined, responderID: null }
    };
  },

  touchableHandleResponderTerminationRequest: function touchableHandleResponderTerminationRequest() {
    return !this.props.rejectResponderTermination;
  },

  touchableHandleStartShouldSetResponder: function touchableHandleStartShouldSetResponder() {
    return !this.props.disabled;
  },

  touchableLongPressCancelsPress: function touchableLongPressCancelsPress() {
    return true;
  },

  touchableHandleResponderGrant: function touchableHandleResponderGrant(e) {
    var dispatchID = e.currentTarget;

    e.persist();

    this.pressOutDelayTimeout && clearTimeout(this.pressOutDelayTimeout);
    this.pressOutDelayTimeout = null;

    this.state.touchable.touchState = States.NOT_RESPONDER;
    this.state.touchable.responderID = dispatchID;
    this._receiveSignal(Signals.RESPONDER_GRANT, e);
    var delayMS = this.touchableGetHighlightDelayMS !== undefined ? Math.max(this.touchableGetHighlightDelayMS(), 0) : HIGHLIGHT_DELAY_MS;
    delayMS = isNaN(delayMS) ? HIGHLIGHT_DELAY_MS : delayMS;
    if (delayMS !== 0) {
      this.touchableDelayTimeout = setTimeout(this._handleDelay.bind(this, e), delayMS);
    } else {
      this._handleDelay(e);
    }

    var longDelayMS = this.touchableGetLongPressDelayMS !== undefined ? Math.max(this.touchableGetLongPressDelayMS(), 10) : LONG_PRESS_DELAY_MS;
    longDelayMS = isNaN(longDelayMS) ? LONG_PRESS_DELAY_MS : longDelayMS;
    this.longPressDelayTimeout = setTimeout(this._handleLongDelay.bind(this, e), longDelayMS + delayMS);
  },

  touchableHandleResponderRelease: function touchableHandleResponderRelease(e) {
    this._receiveSignal(Signals.RESPONDER_RELEASE, e);
  },

  touchableHandleResponderTerminate: function touchableHandleResponderTerminate(e) {
    this._receiveSignal(Signals.RESPONDER_TERMINATED, e);
  },

  touchableHandleResponderMove: function touchableHandleResponderMove(e) {
    if (this.state.touchable.touchState === States.RESPONDER_INACTIVE_PRESS_IN) {
      return;
    }

    if (!this.state.touchable.positionOnActivate) {
      return;
    }

    var positionOnActivate = this.state.touchable.positionOnActivate;
    var dimensionsOnActivate = this.state.touchable.dimensionsOnActivate;
    var pressRectOffset = this.touchableGetPressRectOffset ? this.touchableGetPressRectOffset() : {
      left: PRESS_EXPAND_PX,
      right: PRESS_EXPAND_PX,
      top: PRESS_EXPAND_PX,
      bottom: PRESS_EXPAND_PX
    };

    var pressExpandLeft = pressRectOffset.left;
    var pressExpandTop = pressRectOffset.top;
    var pressExpandRight = pressRectOffset.right;
    var pressExpandBottom = pressRectOffset.bottom;

    var hitSlop = this.touchableGetHitSlop ? this.touchableGetHitSlop() : null;

    if (hitSlop) {
      pressExpandLeft += hitSlop.left;
      pressExpandTop += hitSlop.top;
      pressExpandRight += hitSlop.right;
      pressExpandBottom += hitSlop.bottom;
    }

    var touch = TouchEventUtils.extractSingleTouch(e.nativeEvent);
    var pageX = touch && touch.pageX;
    var pageY = touch && touch.pageY;

    if (this.pressInLocation) {
      var movedDistance = this._getDistanceBetweenPoints(pageX, pageY, this.pressInLocation.pageX, this.pressInLocation.pageY);
      if (movedDistance > LONG_PRESS_ALLOWED_MOVEMENT) {
        this._cancelLongPressDelayTimeout();
      }
    }

    var isTouchWithinActive = pageX > positionOnActivate.left - pressExpandLeft && pageY > positionOnActivate.top - pressExpandTop && pageX < positionOnActivate.left + dimensionsOnActivate.width + pressExpandRight && pageY < positionOnActivate.top + dimensionsOnActivate.height + pressExpandBottom;
    if (isTouchWithinActive) {
      this._receiveSignal(Signals.ENTER_PRESS_RECT, e);
      var curState = this.state.touchable.touchState;
      if (curState === States.RESPONDER_INACTIVE_PRESS_IN) {
        this._cancelLongPressDelayTimeout();
      }
    } else {
      this._cancelLongPressDelayTimeout();
      this._receiveSignal(Signals.LEAVE_PRESS_RECT, e);
    }
  },

  _remeasureMetricsOnActivation: function _remeasureMetricsOnActivation() {
    var tag = this.state.touchable.responderID;
    if (tag == null) {
      return;
    }

    UIManager.measure(tag, this._handleQueryLayout);
  },

  _handleQueryLayout: function _handleQueryLayout(l, t, w, h, globalX, globalY) {
    this.state.touchable.positionOnActivate && Position.release(this.state.touchable.positionOnActivate);
    this.state.touchable.dimensionsOnActivate && BoundingDimensions.release(this.state.touchable.dimensionsOnActivate);
    this.state.touchable.positionOnActivate = Position.getPooled(globalX, globalY);
    this.state.touchable.dimensionsOnActivate = BoundingDimensions.getPooled(w, h);
  },

  _handleDelay: function _handleDelay(e) {
    this.touchableDelayTimeout = null;
    this._receiveSignal(Signals.DELAY, e);
  },

  _handleLongDelay: function _handleLongDelay(e) {
    this.longPressDelayTimeout = null;
    var curState = this.state.touchable.touchState;
    if (curState !== States.RESPONDER_ACTIVE_PRESS_IN && curState !== States.RESPONDER_ACTIVE_LONG_PRESS_IN) {
      console.error('Attempted to transition from state `' + curState + '` to `' + States.RESPONDER_ACTIVE_LONG_PRESS_IN + '`, which is not supported. This is ' + 'most likely due to `Touchable.longPressDelayTimeout` not being cancelled.');
    } else {
      this._receiveSignal(Signals.LONG_PRESS_DETECTED, e);
    }
  },

  _receiveSignal: function _receiveSignal(signal, e) {
    var responderID = this.state.touchable.responderID;
    var curState = this.state.touchable.touchState;
    var nextState = Transitions[curState] && Transitions[curState][signal];
    if (!responderID && signal === Signals.RESPONDER_RELEASE) {
      return;
    }
    if (!nextState) {
      throw new Error('Unrecognized signal `' + signal + '` or state `' + curState + '` for Touchable responder `' + responderID + '`');
    }
    if (nextState === States.ERROR) {
      throw new Error('Touchable cannot transition from `' + curState + '` to `' + signal + '` for responder `' + responderID + '`');
    }
    if (curState !== nextState) {
      this._performSideEffectsForTransition(curState, nextState, signal, e);
      this.state.touchable.touchState = nextState;
    }
  },

  _cancelLongPressDelayTimeout: function _cancelLongPressDelayTimeout() {
    this.longPressDelayTimeout && clearTimeout(this.longPressDelayTimeout);
    this.longPressDelayTimeout = null;
  },

  _isHighlight: function _isHighlight(state) {
    return state === States.RESPONDER_ACTIVE_PRESS_IN || state === States.RESPONDER_ACTIVE_LONG_PRESS_IN;
  },

  _savePressInLocation: function _savePressInLocation(e) {
    var touch = TouchEventUtils.extractSingleTouch(e.nativeEvent);
    var pageX = touch && touch.pageX;
    var pageY = touch && touch.pageY;
    var locationX = touch && touch.locationX;
    var locationY = touch && touch.locationY;
    this.pressInLocation = { pageX: pageX, pageY: pageY, locationX: locationX, locationY: locationY };
  },

  _getDistanceBetweenPoints: function _getDistanceBetweenPoints(aX, aY, bX, bY) {
    var deltaX = aX - bX;
    var deltaY = aY - bY;
    return Math.sqrt(deltaX * deltaX + deltaY * deltaY);
  },

  _performSideEffectsForTransition: function _performSideEffectsForTransition(curState, nextState, signal, e) {
    var curIsHighlight = this._isHighlight(curState);
    var newIsHighlight = this._isHighlight(nextState);

    var isFinalSignal = signal === Signals.RESPONDER_TERMINATED || signal === Signals.RESPONDER_RELEASE;

    if (isFinalSignal) {
      this._cancelLongPressDelayTimeout();
    }

    if (!IsActive[curState] && IsActive[nextState]) {
      this._remeasureMetricsOnActivation();
    }

    if (IsPressingIn[curState] && signal === Signals.LONG_PRESS_DETECTED) {
      this.touchableHandleLongPress && this.touchableHandleLongPress(e);
    }

    if (newIsHighlight && !curIsHighlight) {
      this._startHighlight(e);
    } else if (!newIsHighlight && curIsHighlight) {
      this._endHighlight(e);
    }

    if (IsPressingIn[curState] && signal === Signals.RESPONDER_RELEASE) {
      var hasLongPressHandler = !!this.props.onLongPress;
      var pressIsLongButStillCallOnPress = IsLongPressingIn[curState] && (!hasLongPressHandler || !this.touchableLongPressCancelsPress());

      var shouldInvokePress = !IsLongPressingIn[curState] || pressIsLongButStillCallOnPress;
      if (shouldInvokePress && this.touchableHandlePress) {
        if (!newIsHighlight && !curIsHighlight) {
          this._startHighlight(e);
          this._endHighlight(e);
        }
        this.touchableHandlePress(e);
      }
    }

    this.touchableDelayTimeout && clearTimeout(this.touchableDelayTimeout);
    this.touchableDelayTimeout = null;
  },

  _startHighlight: function _startHighlight(e) {
    this._savePressInLocation(e);
    this.touchableHandleActivePressIn && this.touchableHandleActivePressIn(e);
  },

  _endHighlight: function _endHighlight(e) {
    var _this = this;

    if (this.touchableHandleActivePressOut) {
      if (this.touchableGetPressOutDelayMS && this.touchableGetPressOutDelayMS()) {
        this.pressOutDelayTimeout = setTimeout(function () {
          _this.touchableHandleActivePressOut(e);
        }, this.touchableGetPressOutDelayMS());
      } else {
        this.touchableHandleActivePressOut(e);
      }
    }
  }

};

var Touchable = {
  Mixin: TouchableMixin,
  TOUCH_TARGET_DEBUG: false,
  renderDebugView: function renderDebugView(_ref) {
    var color = _ref.color,
        hitSlop = _ref.hitSlop;

    if (!Touchable.TOUCH_TARGET_DEBUG) {
      return null;
    }
    if (!__DEV__) {
      throw Error('Touchable.TOUCH_TARGET_DEBUG should not be enabled in prod!');
    }
    var debugHitSlopStyle = {};
    hitSlop = hitSlop || { top: 0, bottom: 0, left: 0, right: 0 };
    for (var key in hitSlop) {
      debugHitSlopStyle[key] = -hitSlop[key];
    }
    var hexColor = '#' + ('00000000' + normalizeColor(color).toString(16)).substr(-8);
    return React.createElement(View, {
      pointerEvents: 'none',
      style: babelHelpers.extends({
        position: 'absolute',
        borderColor: hexColor.slice(0, -2) + '55',
        borderWidth: 1,
        borderStyle: 'dashed',
        backgroundColor: hexColor.slice(0, -2) + '0F' }, debugHitSlopStyle),
      __source: {
        fileName: _jsxFileName,
        lineNumber: 789
      }
    });
  }
};

module.exports = Touchable;
}, 506, null, "Touchable");
__d(/* BoundingDimensions */function(global, require, module, exports) {

'use strict';

var PooledClass = require(402                    ); // 402 = react/lib/PooledClass

var twoArgumentPooler = PooledClass.twoArgumentPooler;

function BoundingDimensions(width, height) {
  this.width = width;
  this.height = height;
}

BoundingDimensions.prototype.destructor = function () {
  this.width = null;
  this.height = null;
};

BoundingDimensions.getPooledFromElement = function (element) {
  return BoundingDimensions.getPooled(element.offsetWidth, element.offsetHeight);
};

PooledClass.addPoolingTo(BoundingDimensions, twoArgumentPooler);

module.exports = BoundingDimensions;
}, 507, null, "BoundingDimensions");
__d(/* Position */function(global, require, module, exports) {

'use strict';

var PooledClass = require(402                    ); // 402 = react/lib/PooledClass

var twoArgumentPooler = PooledClass.twoArgumentPooler;

function Position(left, top) {
  this.left = left;
  this.top = top;
}

Position.prototype.destructor = function () {
  this.left = null;
  this.top = null;
};

PooledClass.addPoolingTo(Position, twoArgumentPooler);

module.exports = Position;
}, 508, null, "Position");
__d(/* TVEventHandler */function(global, require, module, exports) {
'use strict';

function TVEventHandler() {}

TVEventHandler.prototype.enable = function (component, callback) {};

TVEventHandler.prototype.disable = function () {};

module.exports = TVEventHandler;
}, 509, null, "TVEventHandler");
__d(/* fbjs/lib/TouchEventUtils.js */function(global, require, module, exports) {"use strict";

var TouchEventUtils = {
  extractSingleTouch: function extractSingleTouch(nativeEvent) {
    var touches = nativeEvent.touches;
    var changedTouches = nativeEvent.changedTouches;
    var hasTouches = touches && touches.length > 0;
    var hasChangedTouches = changedTouches && changedTouches.length > 0;

    return !hasTouches && hasChangedTouches ? changedTouches[0] : hasTouches ? touches[0] : nativeEvent;
  }
};

module.exports = TouchEventUtils;
}, 510, null, "fbjs/lib/TouchEventUtils.js");
__d(/* mergeFast */function(global, require, module, exports) {
'use strict';

var mergeFast = function mergeFast(one, two) {
  var ret = {};
  for (var keyOne in one) {
    ret[keyOne] = one[keyOne];
  }
  for (var keyTwo in two) {
    ret[keyTwo] = two[keyTwo];
  }
  return ret;
};

module.exports = mergeFast;
}, 511, null, "mergeFast");
__d(/* TouchableNativeFeedback */function(global, require, module, exports) {
'use strict';

var Platform = require(348       ); // 348 = Platform
var React = require(398    ); // 398 = React
var ReactNative = require(513          ); // 513 = ReactNative
var Touchable = require(506        ); // 506 = Touchable
var TouchableWithoutFeedback = require(569                       ); // 569 = TouchableWithoutFeedback
var UIManager = require(395        ); // 395 = UIManager

var ensurePositiveDelayProps = require(571                       ); // 571 = ensurePositiveDelayProps
var processColor = require(436           ); // 436 = processColor

var PropTypes = React.PropTypes;

var rippleBackgroundPropType = PropTypes.shape({
  type: React.PropTypes.oneOf(['RippleAndroid']),
  color: PropTypes.number,
  borderless: PropTypes.bool
});

var themeAttributeBackgroundPropType = PropTypes.shape({
  type: React.PropTypes.oneOf(['ThemeAttrAndroid']),
  attribute: PropTypes.string.isRequired
});

var backgroundPropType = PropTypes.oneOfType([rippleBackgroundPropType, themeAttributeBackgroundPropType]);

var PRESS_RETENTION_OFFSET = { top: 20, left: 20, right: 20, bottom: 30 };

var TouchableNativeFeedback = React.createClass({
  displayName: 'TouchableNativeFeedback',

  propTypes: babelHelpers.extends({}, TouchableWithoutFeedback.propTypes, {
    background: backgroundPropType,

    useForeground: PropTypes.bool
  }),

  statics: {
    SelectableBackground: function SelectableBackground() {
      return { type: 'ThemeAttrAndroid', attribute: 'selectableItemBackground' };
    },

    SelectableBackgroundBorderless: function SelectableBackgroundBorderless() {
      return { type: 'ThemeAttrAndroid', attribute: 'selectableItemBackgroundBorderless' };
    },

    Ripple: function Ripple(color, borderless) {
      return { type: 'RippleAndroid', color: processColor(color), borderless: borderless };
    },

    canUseNativeForeground: function canUseNativeForeground() {
      return Platform.OS === 'android' && Platform.Version >= 23;
    }
  },

  mixins: [Touchable.Mixin],

  getDefaultProps: function getDefaultProps() {
    return {
      background: this.SelectableBackground()
    };
  },

  getInitialState: function getInitialState() {
    return this.touchableGetInitialState();
  },

  componentDidMount: function componentDidMount() {
    ensurePositiveDelayProps(this.props);
  },

  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    ensurePositiveDelayProps(nextProps);
  },

  touchableHandleActivePressIn: function touchableHandleActivePressIn(e) {
    this.props.onPressIn && this.props.onPressIn(e);
    this._dispatchPressedStateChange(true);
    this._dispatchHotspotUpdate(this.pressInLocation.locationX, this.pressInLocation.locationY);
  },

  touchableHandleActivePressOut: function touchableHandleActivePressOut(e) {
    this.props.onPressOut && this.props.onPressOut(e);
    this._dispatchPressedStateChange(false);
  },

  touchableHandlePress: function touchableHandlePress(e) {
    this.props.onPress && this.props.onPress(e);
  },

  touchableHandleLongPress: function touchableHandleLongPress(e) {
    this.props.onLongPress && this.props.onLongPress(e);
  },

  touchableGetPressRectOffset: function touchableGetPressRectOffset() {
    return this.props.pressRetentionOffset || PRESS_RETENTION_OFFSET;
  },

  touchableGetHitSlop: function touchableGetHitSlop() {
    return this.props.hitSlop;
  },

  touchableGetHighlightDelayMS: function touchableGetHighlightDelayMS() {
    return this.props.delayPressIn;
  },

  touchableGetLongPressDelayMS: function touchableGetLongPressDelayMS() {
    return this.props.delayLongPress;
  },

  touchableGetPressOutDelayMS: function touchableGetPressOutDelayMS() {
    return this.props.delayPressOut;
  },

  _handleResponderMove: function _handleResponderMove(e) {
    this.touchableHandleResponderMove(e);
    this._dispatchHotspotUpdate(e.nativeEvent.locationX, e.nativeEvent.locationY);
  },

  _dispatchHotspotUpdate: function _dispatchHotspotUpdate(destX, destY) {
    UIManager.dispatchViewManagerCommand(ReactNative.findNodeHandle(this), UIManager.RCTView.Commands.hotspotUpdate, [destX || 0, destY || 0]);
  },

  _dispatchPressedStateChange: function _dispatchPressedStateChange(pressed) {
    UIManager.dispatchViewManagerCommand(ReactNative.findNodeHandle(this), UIManager.RCTView.Commands.setPressed, [pressed]);
  },

  render: function render() {
    var _babelHelpers$extends;

    var child = React.Children.only(this.props.children);
    var children = child.props.children;
    if (Touchable.TOUCH_TARGET_DEBUG && child.type.displayName === 'View') {
      if (!Array.isArray(children)) {
        children = [children];
      }
      children.push(Touchable.renderDebugView({ color: 'brown', hitSlop: this.props.hitSlop }));
    }
    if (this.props.useForeground && !TouchableNativeFeedback.canUseNativeForeground()) {
      console.warn('Requested foreground ripple, but it is not available on this version of Android. ' + 'Consider calling TouchableNativeFeedback.canUseNativeForeground() and using a different ' + 'Touchable if the result is false.');
    }
    var drawableProp = this.props.useForeground && TouchableNativeFeedback.canUseNativeForeground() ? 'nativeForegroundAndroid' : 'nativeBackgroundAndroid';
    var childProps = babelHelpers.extends({}, child.props, (_babelHelpers$extends = {}, babelHelpers.defineProperty(_babelHelpers$extends, drawableProp, this.props.background), babelHelpers.defineProperty(_babelHelpers$extends, 'accessible', this.props.accessible !== false), babelHelpers.defineProperty(_babelHelpers$extends, 'accessibilityLabel', this.props.accessibilityLabel), babelHelpers.defineProperty(_babelHelpers$extends, 'accessibilityComponentType', this.props.accessibilityComponentType), babelHelpers.defineProperty(_babelHelpers$extends, 'accessibilityTraits', this.props.accessibilityTraits), babelHelpers.defineProperty(_babelHelpers$extends, 'children', children), babelHelpers.defineProperty(_babelHelpers$extends, 'testID', this.props.testID), babelHelpers.defineProperty(_babelHelpers$extends, 'onLayout', this.props.onLayout), babelHelpers.defineProperty(_babelHelpers$extends, 'hitSlop', this.props.hitSlop), babelHelpers.defineProperty(_babelHelpers$extends, 'onStartShouldSetResponder', this.touchableHandleStartShouldSetResponder), babelHelpers.defineProperty(_babelHelpers$extends, 'onResponderTerminationRequest', this.touchableHandleResponderTerminationRequest), babelHelpers.defineProperty(_babelHelpers$extends, 'onResponderGrant', this.touchableHandleResponderGrant), babelHelpers.defineProperty(_babelHelpers$extends, 'onResponderMove', this._handleResponderMove), babelHelpers.defineProperty(_babelHelpers$extends, 'onResponderRelease', this.touchableHandleResponderRelease), babelHelpers.defineProperty(_babelHelpers$extends, 'onResponderTerminate', this.touchableHandleResponderTerminate), _babelHelpers$extends));

    return React.cloneElement(child, childProps);
  }
});

module.exports = TouchableNativeFeedback;
}, 512, null, "TouchableNativeFeedback");
__d(/* ReactNative */function(global, require, module, exports) {
'use strict';

var ReactNativeComponentTree = require(454                       ); // 454 = ReactNativeComponentTree
var ReactNativeDefaultInjection = require(514                          ); // 514 = ReactNativeDefaultInjection

var ReactNativeMount = require(543               ); // 543 = ReactNativeMount
var ReactUpdates = require(464           ); // 464 = ReactUpdates

var findNodeHandle = require(396             ); // 396 = findNodeHandle

ReactNativeDefaultInjection.inject();

var render = function render(element, mountInto, callback) {
  return ReactNativeMount.renderComponent(element, mountInto, callback);
};

var ReactNative = {
  hasReactNativeInitialized: false,
  findNodeHandle: findNodeHandle,
  render: render,
  unmountComponentAtNode: ReactNativeMount.unmountComponentAtNode,

  unstable_batchedUpdates: ReactUpdates.batchedUpdates,


  unmountComponentAtNodeAndRemoveContainer: ReactNativeMount.unmountComponentAtNodeAndRemoveContainer
};

if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
    ComponentTree: {
      getClosestInstanceFromNode: function getClosestInstanceFromNode(node) {
        return ReactNativeComponentTree.getClosestInstanceFromNode(node);
      },
      getNodeFromInstance: function getNodeFromInstance(inst) {
        while (inst._renderedComponent) {
          inst = inst._renderedComponent;
        }
        if (inst) {
          return ReactNativeComponentTree.getNodeFromInstance(inst);
        } else {
          return null;
        }
      }
    },
    Mount: ReactNativeMount,
    Reconciler: require(468              ) // 468 = ReactReconciler
  });
}

module.exports = ReactNative;
}, 513, null, "ReactNative");
__d(/* ReactNativeDefaultInjection */function(global, require, module, exports) {
'use strict';

require(515             ); // 515 = InitializeCore

var EventPluginHub = require(456             ); // 456 = EventPluginHub
var EventPluginUtils = require(458               ); // 458 = EventPluginUtils
var RCTEventEmitter = require(552              ); // 552 = RCTEventEmitter
var React = require(398    ); // 398 = React
var ReactComponentEnvironment = require(474                        ); // 474 = ReactComponentEnvironment
var ReactDefaultBatchingStrategy = require(553                           ); // 553 = ReactDefaultBatchingStrategy
var ReactEmptyComponent = require(484                  ); // 484 = ReactEmptyComponent
var ReactNativeBridgeEventPlugin = require(554                           ); // 554 = ReactNativeBridgeEventPlugin
var ReactHostComponent = require(485                 ); // 485 = ReactHostComponent
var ReactNativeComponentEnvironment = require(557                              ); // 557 = ReactNativeComponentEnvironment
var ReactNativeComponentTree = require(454                       ); // 454 = ReactNativeComponentTree
var ReactNativeEventEmitter = require(455                      ); // 455 = ReactNativeEventEmitter
var ReactNativeEventPluginOrder = require(560                          ); // 560 = ReactNativeEventPluginOrder
var ReactNativeGlobalResponderHandler = require(561                                ); // 561 = ReactNativeGlobalResponderHandler
var ReactNativeTextComponent = require(562                       ); // 562 = ReactNativeTextComponent
var ReactNativeTreeTraversal = require(563                       ); // 563 = ReactNativeTreeTraversal
var ReactSimpleEmptyComponent = require(564                        ); // 564 = ReactSimpleEmptyComponent
var ReactUpdates = require(464           ); // 464 = ReactUpdates
var ResponderEventPlugin = require(565                   ); // 565 = ResponderEventPlugin

var invariant = require(346                 ); // 346 = fbjs/lib/invariant

function inject() {
  RCTEventEmitter.register(ReactNativeEventEmitter);

  EventPluginHub.injection.injectEventPluginOrder(ReactNativeEventPluginOrder);
  EventPluginUtils.injection.injectComponentTree(ReactNativeComponentTree);
  EventPluginUtils.injection.injectTreeTraversal(ReactNativeTreeTraversal);

  ResponderEventPlugin.injection.injectGlobalResponderHandler(ReactNativeGlobalResponderHandler);

  EventPluginHub.injection.injectEventPluginsByName({
    'ResponderEventPlugin': ResponderEventPlugin,
    'ReactNativeBridgeEventPlugin': ReactNativeBridgeEventPlugin
  });

  ReactUpdates.injection.injectReconcileTransaction(ReactNativeComponentEnvironment.ReactReconcileTransaction);

  ReactUpdates.injection.injectBatchingStrategy(ReactDefaultBatchingStrategy);

  ReactComponentEnvironment.injection.injectEnvironment(ReactNativeComponentEnvironment);

  var EmptyComponent = function EmptyComponent(instantiate) {
    var View = require(441   ); // 441 = View
    return new ReactSimpleEmptyComponent(React.createElement(View, {
      collapsable: true,
      style: { position: 'absolute' }
    }), instantiate);
  };

  ReactEmptyComponent.injection.injectEmptyComponentFactory(EmptyComponent);

  ReactHostComponent.injection.injectTextComponentClass(ReactNativeTextComponent);
  ReactHostComponent.injection.injectGenericComponentClass(function (tag) {
    var info = '';
    if (typeof tag === 'string' && /^[a-z]/.test(tag)) {
      info += ' Each component name should start with an uppercase letter.';
    }
    invariant(false, 'Expected a component class, got %s.%s', tag, info);
  });
}

module.exports = {
  inject: inject
};
}, 514, null, "ReactNativeDefaultInjection");
__d(/* InitializeCore */function(global, require, module, exports) {
'use strict';

if (global.GLOBAL === undefined) {
  global.GLOBAL = global;
}

if (global.window === undefined) {
  global.window = global;
}

var defineLazyObjectProperty = require(394                       ); // 394 = defineLazyObjectProperty

function defineProperty(object, name, getValue, eager) {
  var descriptor = Object.getOwnPropertyDescriptor(object, name);
  if (descriptor) {
    var backupName = 'original' + name[0].toUpperCase() + name.substr(1);
    Object.defineProperty(object, backupName, babelHelpers.extends({}, descriptor, {
      value: object[name]
    }));
  }

  var _ref = descriptor || {},
      enumerable = _ref.enumerable,
      writable = _ref.writable,
      configurable = _ref.configurable;

  if (descriptor && !configurable) {
    console.error('Failed to set polyfill. ' + name + ' is not configurable.');
    return;
  }

  if (eager === true) {
    Object.defineProperty(object, name, {
      configurable: true,
      enumerable: enumerable !== false,
      writable: writable !== false,
      value: getValue()
    });
  } else {
    defineLazyObjectProperty(object, name, {
      get: getValue,
      enumerable: enumerable !== false,
      writable: writable !== false
    });
  }
}

global.process = global.process || {};
global.process.env = global.process.env || {};
if (!global.process.env.NODE_ENV) {
  global.process.env.NODE_ENV = __DEV__ ? 'development' : 'production';
}

var Systrace = require(354       ); // 354 = Systrace
Systrace.setEnabled(global.__RCTProfileIsProfiling || false);

var ExceptionsManager = require(516                ); // 516 = ExceptionsManager
ExceptionsManager.installConsoleErrorReporter();

require(521     ); // 521 = RCTLog

if (!global.__fbDisableExceptionsManager) {
  var handleError = function handleError(e, isFatal) {
    try {
      ExceptionsManager.handleException(e, isFatal);
    } catch (ee) {
      console.log('Failed to print error: ', ee.message);

      throw e;
    }
  };

  var ErrorUtils = require(352         ); // 352 = ErrorUtils
  ErrorUtils.setGlobalHandler(handleError);
}

var defineLazyTimer = function defineLazyTimer(name) {
  defineProperty(global, name, function () {
    return require(364       )[name]; // 364 = JSTimers
  });
};
defineLazyTimer('setTimeout');
defineLazyTimer('setInterval');
defineLazyTimer('setImmediate');
defineLazyTimer('clearTimeout');
defineLazyTimer('clearInterval');
defineLazyTimer('clearImmediate');
defineLazyTimer('requestAnimationFrame');
defineLazyTimer('cancelAnimationFrame');
defineLazyTimer('requestIdleCallback');
defineLazyTimer('cancelIdleCallback');

if (!global.alert) {
  global.alert = function (text) {
    require(522    ).alert('Alert', '' + text); // 522 = Alert
  };
}

defineProperty(global, 'Promise', function () {
  return require(524      ); // 524 = Promise
});

defineProperty(global, 'regeneratorRuntime', function () {
  delete global.regeneratorRuntime;
  require(530                          ); // 530 = regenerator-runtime/runtime
  return global.regeneratorRuntime;
});

defineProperty(global, 'XMLHttpRequest', function () {
  return require(531             ); // 531 = XMLHttpRequest
});
defineProperty(global, 'FormData', function () {
  return require(533       ); // 533 = FormData
});

defineProperty(global, 'fetch', function () {
  return require(519    ).fetch; // 519 = fetch
});
defineProperty(global, 'Headers', function () {
  return require(519    ).Headers; // 519 = fetch
});
defineProperty(global, 'Request', function () {
  return require(519    ).Request; // 519 = fetch
});
defineProperty(global, 'Response', function () {
  return require(519    ).Response; // 519 = fetch
});
defineProperty(global, 'WebSocket', function () {
  return require(373        ); // 373 = WebSocket
});

var navigator = global.navigator;
if (navigator === undefined) {
  global.navigator = navigator = {};
}

defineProperty(navigator, 'product', function () {
  return 'ReactNative';
}, true);
defineProperty(navigator, 'geolocation', function () {
  return require(535          ); // 535 = Geolocation
});

defineProperty(global, 'Map', function () {
  return require(536  ); // 536 = Map
}, true);
defineProperty(global, 'Set', function () {
  return require(541  ); // 541 = Set
}, true);

if (__DEV__) {
  if (!window.document) {
    var setupDevtools = require(542            ); // 542 = setupDevtools
    setupDevtools();
  }

  require(546                         ); // 546 = RCTDebugComponentOwnership
}

if (__DEV__) {
  var JSInspector = require(547          ); // 547 = JSInspector
  JSInspector.registerAgent(require(548           )); // 548 = NetworkAgent
}

require(379                    ); // 379 = RCTDeviceEventEmitter
require(550                       ); // 550 = RCTNativeAppEventEmitter
require(551                ); // 551 = PerformanceLogger
}, 515, null, "InitializeCore");
__d(/* ExceptionsManager */function(global, require, module, exports) {
'use strict';

var exceptionID = 0;
function reportException(e, isFatal) {
  var _require = require(349            ), // 349 = NativeModules
      ExceptionsManager = _require.ExceptionsManager;

  if (ExceptionsManager) {
    var parseErrorStack = require(365              ); // 365 = parseErrorStack
    var stack = parseErrorStack(e);
    var currentExceptionID = ++exceptionID;
    if (isFatal) {
      ExceptionsManager.reportFatalException(e.message, stack, currentExceptionID);
    } else {
      ExceptionsManager.reportSoftException(e.message, stack, currentExceptionID);
    }
    if (__DEV__) {
      var symbolicateStackTrace = require(517                    ); // 517 = symbolicateStackTrace
      symbolicateStackTrace(stack).then(function (prettyStack) {
        if (prettyStack) {
          ExceptionsManager.updateExceptionMessage(e.message, prettyStack, currentExceptionID);
        } else {
          throw new Error('The stack is null');
        }
      }).catch(function (error) {
        return console.warn('Unable to symbolicate stack trace: ' + error.message);
      });
    }
  }
}

function handleException(e, isFatal) {
  if (!e.message) {
    e = new Error(e);
  }
  if (console._errorOriginal) {
    console._errorOriginal(e.message);
  } else {
    console.error(e.message);
  }
  reportException(e, isFatal);
}

function reactConsoleErrorHandler() {
  console._errorOriginal.apply(console, arguments);
  if (!console.reportErrorsAsExceptions) {
    return;
  }

  if (arguments[0] && arguments[0].stack) {
    reportException(arguments[0], false);
  } else {
    var stringifySafe = require(369            ); // 369 = stringifySafe
    var str = Array.prototype.map.call(arguments, stringifySafe).join(', ');
    if (str.slice(0, 10) === '"Warning: ') {
      return;
    }
    var error = new Error('console.error: ' + str);
    error.framesToPop = 1;
    reportException(error, false);
  }
}

function installConsoleErrorReporter() {
  if (console._errorOriginal) {
    return;
  }

  console._errorOriginal = console.error.bind(console);
  console.error = reactConsoleErrorHandler;
  if (console.reportErrorsAsExceptions === undefined) {
    console.reportErrorsAsExceptions = true;
  }
}

module.exports = { handleException: handleException, installConsoleErrorReporter: installConsoleErrorReporter };
}, 516, null, "ExceptionsManager");
__d(/* symbolicateStackTrace */function(global, require, module, exports) {
'use strict';

var getDevServer = require(518           ); // 518 = getDevServer

var _require = require(349            ), // 349 = NativeModules
    SourceCode = _require.SourceCode;

var fetch = void 0;

function isSourcedFromDisk(sourcePath) {
  return !/^http/.test(sourcePath) && /[\\/]/.test(sourcePath);
}

function symbolicateStackTrace(stack) {
  var devServer, stackCopy, foundInternalSource, response, json;
  return regeneratorRuntime.async(function symbolicateStackTrace$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          if (!fetch) {
            fetch = global.fetch || require(519    ).fetch; // 519 = fetch
          }

          devServer = getDevServer();

          if (devServer.bundleLoadedFromServer) {
            _context.next = 4;
            break;
          }

          throw new Error('Bundle was not loaded from the packager');

        case 4:
          stackCopy = stack;


          if (SourceCode.scriptURL) {
            foundInternalSource = false;

            stackCopy = stack.map(function (frame) {
              if (!foundInternalSource && isSourcedFromDisk(frame.file)) {
                return babelHelpers.extends({}, frame, { file: SourceCode.scriptURL });
              }

              foundInternalSource = true;
              return frame;
            });
          }

          _context.next = 8;
          return regeneratorRuntime.awrap(fetch(devServer.url + 'symbolicate', {
            method: 'POST',
            body: JSON.stringify({ stack: stackCopy })
          }));

        case 8:
          response = _context.sent;
          _context.next = 11;
          return regeneratorRuntime.awrap(response.json());

        case 11:
          json = _context.sent;
          return _context.abrupt('return', json.stack);

        case 13:
        case 'end':
          return _context.stop();
      }
    }
  }, null, this);
}

module.exports = symbolicateStackTrace;
}, 517, null, "symbolicateStackTrace");
__d(/* getDevServer */function(global, require, module, exports) {
'use strict';

var _require = require(349            ), // 349 = NativeModules
    SourceCode = _require.SourceCode;

var _cachedDevServerURL = void 0;
var FALLBACK = 'http://localhost:8081/';

function getDevServer() {
  if (_cachedDevServerURL === undefined) {
    var match = SourceCode.scriptURL && SourceCode.scriptURL.match(/^https?:\/\/.*?\//);
    _cachedDevServerURL = match ? match[0] : null;
  }

  return {
    url: _cachedDevServerURL || FALLBACK,
    bundleLoadedFromServer: _cachedDevServerURL !== null
  };
}

module.exports = getDevServer;
}, 518, null, "getDevServer");
__d(/* fetch */function(global, require, module, exports) {
'use strict';

require(520           ); // 520 = whatwg-fetch

module.exports = { fetch: fetch, Headers: Headers, Request: Request, Response: Response };
}, 519, null, "fetch");
__d(/* whatwg-fetch/fetch.js */function(global, require, module, exports) {(function (self) {
  'use strict';

  if (self.fetch) {
    return;
  }

  var support = {
    searchParams: 'URLSearchParams' in self,
    iterable: 'Symbol' in self && 'iterator' in Symbol,
    blob: 'FileReader' in self && 'Blob' in self && function () {
      try {
        new Blob();
        return true;
      } catch (e) {
        return false;
      }
    }(),
    formData: 'FormData' in self,
    arrayBuffer: 'ArrayBuffer' in self
  };

  if (support.arrayBuffer) {
    var viewClasses = ['[object Int8Array]', '[object Uint8Array]', '[object Uint8ClampedArray]', '[object Int16Array]', '[object Uint16Array]', '[object Int32Array]', '[object Uint32Array]', '[object Float32Array]', '[object Float64Array]'];

    var isDataView = function isDataView(obj) {
      return obj && DataView.prototype.isPrototypeOf(obj);
    };

    var isArrayBufferView = ArrayBuffer.isView || function (obj) {
      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1;
    };
  }

  function normalizeName(name) {
    if (typeof name !== 'string') {
      name = String(name);
    }
    if (/[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(name)) {
      throw new TypeError('Invalid character in header field name');
    }
    return name.toLowerCase();
  }

  function normalizeValue(value) {
    if (typeof value !== 'string') {
      value = String(value);
    }
    return value;
  }

  function iteratorFor(items) {
    var iterator = {
      next: function next() {
        var value = items.shift();
        return { done: value === undefined, value: value };
      }
    };

    if (support.iterable) {
      iterator[typeof Symbol === 'function' ? Symbol.iterator : '@@iterator'] = function () {
        return iterator;
      };
    }

    return iterator;
  }

  function Headers(headers) {
    this.map = {};

    if (headers instanceof Headers) {
      headers.forEach(function (value, name) {
        this.append(name, value);
      }, this);
    } else if (headers) {
      Object.getOwnPropertyNames(headers).forEach(function (name) {
        this.append(name, headers[name]);
      }, this);
    }
  }

  Headers.prototype.append = function (name, value) {
    name = normalizeName(name);
    value = normalizeValue(value);
    var list = this.map[name];
    if (!list) {
      list = [];
      this.map[name] = list;
    }
    list.push(value);
  };

  Headers.prototype['delete'] = function (name) {
    delete this.map[normalizeName(name)];
  };

  Headers.prototype.get = function (name) {
    var values = this.map[normalizeName(name)];
    return values ? values[0] : null;
  };

  Headers.prototype.getAll = function (name) {
    return this.map[normalizeName(name)] || [];
  };

  Headers.prototype.has = function (name) {
    return this.map.hasOwnProperty(normalizeName(name));
  };

  Headers.prototype.set = function (name, value) {
    this.map[normalizeName(name)] = [normalizeValue(value)];
  };

  Headers.prototype.forEach = function (callback, thisArg) {
    Object.getOwnPropertyNames(this.map).forEach(function (name) {
      this.map[name].forEach(function (value) {
        callback.call(thisArg, value, name, this);
      }, this);
    }, this);
  };

  Headers.prototype.keys = function () {
    var items = [];
    this.forEach(function (value, name) {
      items.push(name);
    });
    return iteratorFor(items);
  };

  Headers.prototype.values = function () {
    var items = [];
    this.forEach(function (value) {
      items.push(value);
    });
    return iteratorFor(items);
  };

  Headers.prototype.entries = function () {
    var items = [];
    this.forEach(function (value, name) {
      items.push([name, value]);
    });
    return iteratorFor(items);
  };

  if (support.iterable) {
    Headers.prototype[typeof Symbol === 'function' ? Symbol.iterator : '@@iterator'] = Headers.prototype.entries;
  }

  function consumed(body) {
    if (body.bodyUsed) {
      return Promise.reject(new TypeError('Already read'));
    }
    body.bodyUsed = true;
  }

  function fileReaderReady(reader) {
    return new Promise(function (resolve, reject) {
      reader.onload = function () {
        resolve(reader.result);
      };
      reader.onerror = function () {
        reject(reader.error);
      };
    });
  }

  function readBlobAsArrayBuffer(blob) {
    var reader = new FileReader();
    var promise = fileReaderReady(reader);
    reader.readAsArrayBuffer(blob);
    return promise;
  }

  function readBlobAsText(blob) {
    var reader = new FileReader();
    var promise = fileReaderReady(reader);
    reader.readAsText(blob);
    return promise;
  }

  function readArrayBufferAsText(buf) {
    var view = new Uint8Array(buf);
    var chars = new Array(view.length);

    for (var i = 0; i < view.length; i++) {
      chars[i] = String.fromCharCode(view[i]);
    }
    return chars.join('');
  }

  function bufferClone(buf) {
    if (buf.slice) {
      return buf.slice(0);
    } else {
      var view = new Uint8Array(buf.byteLength);
      view.set(new Uint8Array(buf));
      return view.buffer;
    }
  }

  function Body() {
    this.bodyUsed = false;

    this._initBody = function (body) {
      this._bodyInit = body;
      if (!body) {
        this._bodyText = '';
      } else if (typeof body === 'string') {
        this._bodyText = body;
      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {
        this._bodyBlob = body;
      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {
        this._bodyFormData = body;
      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
        this._bodyText = body.toString();
      } else if (support.arrayBuffer && support.blob && isDataView(body)) {
        this._bodyArrayBuffer = bufferClone(body.buffer);

        this._bodyInit = new Blob([this._bodyArrayBuffer]);
      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {
        this._bodyArrayBuffer = bufferClone(body);
      } else {
        throw new Error('unsupported BodyInit type');
      }

      if (!this.headers.get('content-type')) {
        if (typeof body === 'string') {
          this.headers.set('content-type', 'text/plain;charset=UTF-8');
        } else if (this._bodyBlob && this._bodyBlob.type) {
          this.headers.set('content-type', this._bodyBlob.type);
        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');
        }
      }
    };

    if (support.blob) {
      this.blob = function () {
        var rejected = consumed(this);
        if (rejected) {
          return rejected;
        }

        if (this._bodyBlob) {
          return Promise.resolve(this._bodyBlob);
        } else if (this._bodyArrayBuffer) {
          return Promise.resolve(new Blob([this._bodyArrayBuffer]));
        } else if (this._bodyFormData) {
          throw new Error('could not read FormData body as blob');
        } else {
          return Promise.resolve(new Blob([this._bodyText]));
        }
      };

      this.arrayBuffer = function () {
        if (this._bodyArrayBuffer) {
          return consumed(this) || Promise.resolve(this._bodyArrayBuffer);
        } else {
          return this.blob().then(readBlobAsArrayBuffer);
        }
      };
    }

    this.text = function () {
      var rejected = consumed(this);
      if (rejected) {
        return rejected;
      }

      if (this._bodyBlob) {
        return readBlobAsText(this._bodyBlob);
      } else if (this._bodyArrayBuffer) {
        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer));
      } else if (this._bodyFormData) {
        throw new Error('could not read FormData body as text');
      } else {
        return Promise.resolve(this._bodyText);
      }
    };

    if (support.formData) {
      this.formData = function () {
        return this.text().then(decode);
      };
    }

    this.json = function () {
      return this.text().then(JSON.parse);
    };

    return this;
  }

  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];

  function normalizeMethod(method) {
    var upcased = method.toUpperCase();
    return methods.indexOf(upcased) > -1 ? upcased : method;
  }

  function Request(input, options) {
    options = options || {};
    var body = options.body;

    if (typeof input === 'string') {
      this.url = input;
    } else {
      if (input.bodyUsed) {
        throw new TypeError('Already read');
      }
      this.url = input.url;
      this.credentials = input.credentials;
      if (!options.headers) {
        this.headers = new Headers(input.headers);
      }
      this.method = input.method;
      this.mode = input.mode;
      if (!body && input._bodyInit != null) {
        body = input._bodyInit;
        input.bodyUsed = true;
      }
    }

    this.credentials = options.credentials || this.credentials || 'omit';
    if (options.headers || !this.headers) {
      this.headers = new Headers(options.headers);
    }
    this.method = normalizeMethod(options.method || this.method || 'GET');
    this.mode = options.mode || this.mode || null;
    this.referrer = null;

    if ((this.method === 'GET' || this.method === 'HEAD') && body) {
      throw new TypeError('Body not allowed for GET or HEAD requests');
    }
    this._initBody(body);
  }

  Request.prototype.clone = function () {
    return new Request(this, { body: this._bodyInit });
  };

  function decode(body) {
    var form = new FormData();
    body.trim().split('&').forEach(function (bytes) {
      if (bytes) {
        var split = bytes.split('=');
        var name = split.shift().replace(/\+/g, ' ');
        var value = split.join('=').replace(/\+/g, ' ');
        form.append(decodeURIComponent(name), decodeURIComponent(value));
      }
    });
    return form;
  }

  function parseHeaders(rawHeaders) {
    var headers = new Headers();
    rawHeaders.split('\r\n').forEach(function (line) {
      var parts = line.split(':');
      var key = parts.shift().trim();
      if (key) {
        var value = parts.join(':').trim();
        headers.append(key, value);
      }
    });
    return headers;
  }

  Body.call(Request.prototype);

  function Response(bodyInit, options) {
    if (!options) {
      options = {};
    }

    this.type = 'default';
    this.status = 'status' in options ? options.status : 200;
    this.ok = this.status >= 200 && this.status < 300;
    this.statusText = 'statusText' in options ? options.statusText : 'OK';
    this.headers = new Headers(options.headers);
    this.url = options.url || '';
    this._initBody(bodyInit);
  }

  Body.call(Response.prototype);

  Response.prototype.clone = function () {
    return new Response(this._bodyInit, {
      status: this.status,
      statusText: this.statusText,
      headers: new Headers(this.headers),
      url: this.url
    });
  };

  Response.error = function () {
    var response = new Response(null, { status: 0, statusText: '' });
    response.type = 'error';
    return response;
  };

  var redirectStatuses = [301, 302, 303, 307, 308];

  Response.redirect = function (url, status) {
    if (redirectStatuses.indexOf(status) === -1) {
      throw new RangeError('Invalid status code');
    }

    return new Response(null, { status: status, headers: { location: url } });
  };

  self.Headers = Headers;
  self.Request = Request;
  self.Response = Response;

  self.fetch = function (input, init) {
    return new Promise(function (resolve, reject) {
      var request = new Request(input, init);
      var xhr = new XMLHttpRequest();

      xhr.onload = function () {
        var options = {
          status: xhr.status,
          statusText: xhr.statusText,
          headers: parseHeaders(xhr.getAllResponseHeaders() || '')
        };
        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');
        var body = 'response' in xhr ? xhr.response : xhr.responseText;
        resolve(new Response(body, options));
      };

      xhr.onerror = function () {
        reject(new TypeError('Network request failed'));
      };

      xhr.ontimeout = function () {
        reject(new TypeError('Network request failed'));
      };

      xhr.open(request.method, request.url, true);

      if (request.credentials === 'include') {
        xhr.withCredentials = true;
      }

      if ('responseType' in xhr && support.blob) {
        xhr.responseType = 'blob';
      }

      request.headers.forEach(function (value, name) {
        xhr.setRequestHeader(name, value);
      });

      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);
    });
  };
  self.fetch.polyfill = true;
})(typeof self !== 'undefined' ? self : this);
}, 520, null, "whatwg-fetch/fetch.js");
__d(/* RCTLog */function(global, require, module, exports) {
'use strict';

var BatchedBridge = require(350            ); // 350 = BatchedBridge

var invariant = require(346                 ); // 346 = fbjs/lib/invariant

var levelsMap = {
  log: 'log',
  info: 'info',
  warn: 'warn',
  error: 'error',
  fatal: 'error'
};

var RCTLog = function () {
  function RCTLog() {
    babelHelpers.classCallCheck(this, RCTLog);
  }

  babelHelpers.createClass(RCTLog, null, [{
    key: 'logIfNoNativeHook',
    value: function logIfNoNativeHook() {
      var args = Array.prototype.slice.call(arguments);
      var level = args.shift();
      var logFn = levelsMap[level];
      invariant(logFn, 'Level "' + level + '" not one of ' + Object.keys(levelsMap));
      if (typeof global.nativeLoggingHook === 'undefined') {
        console[logFn].apply(console, args);
      }

      return true;
    }
  }]);
  return RCTLog;
}();

BatchedBridge.registerCallableModule('RCTLog', RCTLog);

module.exports = RCTLog;
}, 521, null, "RCTLog");
__d(/* Alert */function(global, require, module, exports) {
'use strict';

var AlertIOS = require(523       ); // 523 = AlertIOS
var Platform = require(348       ); // 348 = Platform
var DialogModuleAndroid = require(349            ).DialogManagerAndroid; // 349 = NativeModules

var Alert = function () {
  function Alert() {
    babelHelpers.classCallCheck(this, Alert);
  }

  babelHelpers.createClass(Alert, null, [{
    key: 'alert',
    value: function alert(title, message, buttons, options, type) {
      if (Platform.OS === 'ios') {
        if (typeof type !== 'undefined') {
          console.warn('Alert.alert() with a 5th "type" parameter is deprecated and will be removed. Use AlertIOS.prompt() instead.');
          AlertIOS.alert(title, message, buttons, type);
          return;
        }
        AlertIOS.alert(title, message, buttons);
      } else if (Platform.OS === 'android') {
        AlertAndroid.alert(title, message, buttons, options);
      }
    }
  }]);
  return Alert;
}();

var AlertAndroid = function () {
  function AlertAndroid() {
    babelHelpers.classCallCheck(this, AlertAndroid);
  }

  babelHelpers.createClass(AlertAndroid, null, [{
    key: 'alert',
    value: function alert(title, message, buttons, options) {
      var config = {
        title: title || '',
        message: message || ''
      };

      if (options) {
        config = babelHelpers.extends({}, config, { cancelable: options.cancelable });
      }

      var validButtons = buttons ? buttons.slice(0, 3) : [{ text: 'OK' }];
      var buttonPositive = validButtons.pop();
      var buttonNegative = validButtons.pop();
      var buttonNeutral = validButtons.pop();
      if (buttonNeutral) {
        config = babelHelpers.extends({}, config, { buttonNeutral: buttonNeutral.text || '' });
      }
      if (buttonNegative) {
        config = babelHelpers.extends({}, config, { buttonNegative: buttonNegative.text || '' });
      }
      if (buttonPositive) {
        config = babelHelpers.extends({}, config, { buttonPositive: buttonPositive.text || '' });
      }
      DialogModuleAndroid.showAlert(config, function (errorMessage) {
        return console.warn(errorMessage);
      }, function (action, buttonKey) {
        if (action !== DialogModuleAndroid.buttonClicked) {
          return;
        }
        if (buttonKey === DialogModuleAndroid.buttonNeutral) {
          buttonNeutral.onPress && buttonNeutral.onPress();
        } else if (buttonKey === DialogModuleAndroid.buttonNegative) {
          buttonNegative.onPress && buttonNegative.onPress();
        } else if (buttonKey === DialogModuleAndroid.buttonPositive) {
          buttonPositive.onPress && buttonPositive.onPress();
        }
      });
    }
  }]);
  return AlertAndroid;
}();

module.exports = Alert;
}, 522, null, "Alert");
__d(/* AlertIOS */function(global, require, module, exports) {
'use strict';

var RCTAlertManager = require(349            ).AlertManager; // 349 = NativeModules

var AlertIOS = function () {
  function AlertIOS() {
    babelHelpers.classCallCheck(this, AlertIOS);
  }

  babelHelpers.createClass(AlertIOS, null, [{
    key: 'alert',
    value: function alert(title, message, callbackOrButtons, type) {
      if (typeof type !== 'undefined') {
        console.warn('AlertIOS.alert() with a 4th "type" parameter is deprecated and will be removed. Use AlertIOS.prompt() instead.');
        this.prompt(title, message, callbackOrButtons, type);
        return;
      }
      this.prompt(title, message, callbackOrButtons, 'default');
    }
  }, {
    key: 'prompt',
    value: function prompt(title, message, callbackOrButtons) {
      var type = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'plain-text';
      var defaultValue = arguments[4];
      var keyboardType = arguments[5];

      if (typeof type === 'function') {
        console.warn('You passed a callback function as the "type" argument to AlertIOS.prompt(). React Native is ' + 'assuming  you want to use the deprecated AlertIOS.prompt(title, defaultValue, buttons, callback) ' + 'signature. The current signature is AlertIOS.prompt(title, message, callbackOrButtons, type, defaultValue, ' + 'keyboardType) and the old syntax will be removed in a future version.');

        var callback = type;
        var defaultValue = message;
        RCTAlertManager.alertWithArgs({
          title: title || undefined,
          type: 'plain-text',
          defaultValue: defaultValue
        }, function (id, value) {
          callback(value);
        });
        return;
      }

      var callbacks = [];
      var buttons = [];
      var cancelButtonKey;
      var destructiveButtonKey;
      if (typeof callbackOrButtons === 'function') {
        callbacks = [callbackOrButtons];
      } else if (callbackOrButtons instanceof Array) {
        callbackOrButtons.forEach(function (btn, index) {
          callbacks[index] = btn.onPress;
          if (btn.style === 'cancel') {
            cancelButtonKey = String(index);
          } else if (btn.style === 'destructive') {
            destructiveButtonKey = String(index);
          }
          if (btn.text || index < (callbackOrButtons || []).length - 1) {
            var btnDef = {};
            btnDef[index] = btn.text || '';
            buttons.push(btnDef);
          }
        });
      }

      RCTAlertManager.alertWithArgs({
        title: title || undefined,
        message: message || undefined,
        buttons: buttons,
        type: type || undefined,
        defaultValue: defaultValue,
        cancelButtonKey: cancelButtonKey,
        destructiveButtonKey: destructiveButtonKey,
        keyboardType: keyboardType
      }, function (id, value) {
        var cb = callbacks[id];
        cb && cb(value);
      });
    }
  }]);
  return AlertIOS;
}();

module.exports = AlertIOS;
}, 523, null, "AlertIOS");
__d(/* Promise */function(global, require, module, exports) {
'use strict';

var Promise = require(525                      ); // 525 = fbjs/lib/Promise.native

if (__DEV__) {
  require(529                                      ).enable({ // 529 = promise/setimmediate/rejection-tracking
    allRejections: true,
    onUnhandled: function onUnhandled(id) {
      var error = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var _error$message = error.message,
          message = _error$message === undefined ? null : _error$message,
          _error$stack = error.stack,
          stack = _error$stack === undefined ? null : _error$stack;

      var warning = 'Possible Unhandled Promise Rejection (id: ' + id + '):\n' + (message == null ? '' : message + '\n') + (stack == null ? '' : stack);
      console.warn(warning);
    },
    onHandled: function onHandled(id) {
      var warning = 'Promise Rejection Handled (id: ' + id + ')\n' + 'This means you can ignore any previous messages of the form ' + ('"Possible Unhandled Promise Rejection (id: ' + id + '):"');
      console.warn(warning);
    }
  });
}

module.exports = Promise;
}, 524, null, "Promise");
__d(/* fbjs/lib/Promise.native.js */function(global, require, module, exports) {

'use strict';

var Promise = require(526                                  ); // 526 = promise/setimmediate/es6-extensions
require(528                        ); // 528 = promise/setimmediate/done

Promise.prototype['finally'] = function (onSettled) {
  return this.then(onSettled, onSettled);
};

module.exports = Promise;
}, 525, null, "fbjs/lib/Promise.native.js");
__d(/* promise/setimmediate/es6-extensions.js */function(global, require, module, exports) {'use strict';

var Promise = require(527        ); // 527 = ./core.js

module.exports = Promise;

var TRUE = valuePromise(true);
var FALSE = valuePromise(false);
var NULL = valuePromise(null);
var UNDEFINED = valuePromise(undefined);
var ZERO = valuePromise(0);
var EMPTYSTRING = valuePromise('');

function valuePromise(value) {
  var p = new Promise(Promise._61);
  p._65 = 1;
  p._55 = value;
  return p;
}
Promise.resolve = function (value) {
  if (value instanceof Promise) return value;

  if (value === null) return NULL;
  if (value === undefined) return UNDEFINED;
  if (value === true) return TRUE;
  if (value === false) return FALSE;
  if (value === 0) return ZERO;
  if (value === '') return EMPTYSTRING;

  if (typeof value === 'object' || typeof value === 'function') {
    try {
      var then = value.then;
      if (typeof then === 'function') {
        return new Promise(then.bind(value));
      }
    } catch (ex) {
      return new Promise(function (resolve, reject) {
        reject(ex);
      });
    }
  }
  return valuePromise(value);
};

Promise.all = function (arr) {
  var args = Array.prototype.slice.call(arr);

  return new Promise(function (resolve, reject) {
    if (args.length === 0) return resolve([]);
    var remaining = args.length;
    function res(i, val) {
      if (val && (typeof val === 'object' || typeof val === 'function')) {
        if (val instanceof Promise && val.then === Promise.prototype.then) {
          while (val._65 === 3) {
            val = val._55;
          }
          if (val._65 === 1) return res(i, val._55);
          if (val._65 === 2) reject(val._55);
          val.then(function (val) {
            res(i, val);
          }, reject);
          return;
        } else {
          var then = val.then;
          if (typeof then === 'function') {
            var p = new Promise(then.bind(val));
            p.then(function (val) {
              res(i, val);
            }, reject);
            return;
          }
        }
      }
      args[i] = val;
      if (--remaining === 0) {
        resolve(args);
      }
    }
    for (var i = 0; i < args.length; i++) {
      res(i, args[i]);
    }
  });
};

Promise.reject = function (value) {
  return new Promise(function (resolve, reject) {
    reject(value);
  });
};

Promise.race = function (values) {
  return new Promise(function (resolve, reject) {
    values.forEach(function (value) {
      Promise.resolve(value).then(resolve, reject);
    });
  });
};

Promise.prototype['catch'] = function (onRejected) {
  return this.then(null, onRejected);
};
}, 526, null, "promise/setimmediate/es6-extensions.js");
__d(/* promise/setimmediate/core.js */function(global, require, module, exports) {'use strict';

function noop() {}

var LAST_ERROR = null;
var IS_ERROR = {};
function getThen(obj) {
  try {
    return obj.then;
  } catch (ex) {
    LAST_ERROR = ex;
    return IS_ERROR;
  }
}

function tryCallOne(fn, a) {
  try {
    return fn(a);
  } catch (ex) {
    LAST_ERROR = ex;
    return IS_ERROR;
  }
}
function tryCallTwo(fn, a, b) {
  try {
    fn(a, b);
  } catch (ex) {
    LAST_ERROR = ex;
    return IS_ERROR;
  }
}

module.exports = Promise;

function Promise(fn) {
  if (typeof this !== 'object') {
    throw new TypeError('Promises must be constructed via new');
  }
  if (typeof fn !== 'function') {
    throw new TypeError('Promise constructor\'s argument is not a function');
  }
  this._40 = 0;
  this._65 = 0;
  this._55 = null;
  this._72 = null;
  if (fn === noop) return;
  doResolve(fn, this);
}
Promise._37 = null;
Promise._87 = null;
Promise._61 = noop;

Promise.prototype.then = function (onFulfilled, onRejected) {
  if (this.constructor !== Promise) {
    return safeThen(this, onFulfilled, onRejected);
  }
  var res = new Promise(noop);
  handle(this, new Handler(onFulfilled, onRejected, res));
  return res;
};

function safeThen(self, onFulfilled, onRejected) {
  return new self.constructor(function (resolve, reject) {
    var res = new Promise(noop);
    res.then(resolve, reject);
    handle(self, new Handler(onFulfilled, onRejected, res));
  });
}
function handle(self, deferred) {
  while (self._65 === 3) {
    self = self._55;
  }
  if (Promise._37) {
    Promise._37(self);
  }
  if (self._65 === 0) {
    if (self._40 === 0) {
      self._40 = 1;
      self._72 = deferred;
      return;
    }
    if (self._40 === 1) {
      self._40 = 2;
      self._72 = [self._72, deferred];
      return;
    }
    self._72.push(deferred);
    return;
  }
  handleResolved(self, deferred);
}

function handleResolved(self, deferred) {
  setImmediate(function () {
    var cb = self._65 === 1 ? deferred.onFulfilled : deferred.onRejected;
    if (cb === null) {
      if (self._65 === 1) {
        resolve(deferred.promise, self._55);
      } else {
        reject(deferred.promise, self._55);
      }
      return;
    }
    var ret = tryCallOne(cb, self._55);
    if (ret === IS_ERROR) {
      reject(deferred.promise, LAST_ERROR);
    } else {
      resolve(deferred.promise, ret);
    }
  });
}
function resolve(self, newValue) {
  if (newValue === self) {
    return reject(self, new TypeError('A promise cannot be resolved with itself.'));
  }
  if (newValue && (typeof newValue === 'object' || typeof newValue === 'function')) {
    var then = getThen(newValue);
    if (then === IS_ERROR) {
      return reject(self, LAST_ERROR);
    }
    if (then === self.then && newValue instanceof Promise) {
      self._65 = 3;
      self._55 = newValue;
      finale(self);
      return;
    } else if (typeof then === 'function') {
      doResolve(then.bind(newValue), self);
      return;
    }
  }
  self._65 = 1;
  self._55 = newValue;
  finale(self);
}

function reject(self, newValue) {
  self._65 = 2;
  self._55 = newValue;
  if (Promise._87) {
    Promise._87(self, newValue);
  }
  finale(self);
}
function finale(self) {
  if (self._40 === 1) {
    handle(self, self._72);
    self._72 = null;
  }
  if (self._40 === 2) {
    for (var i = 0; i < self._72.length; i++) {
      handle(self, self._72[i]);
    }
    self._72 = null;
  }
}

function Handler(onFulfilled, onRejected, promise) {
  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;
  this.onRejected = typeof onRejected === 'function' ? onRejected : null;
  this.promise = promise;
}

function doResolve(fn, promise) {
  var done = false;
  var res = tryCallTwo(fn, function (value) {
    if (done) return;
    done = true;
    resolve(promise, value);
  }, function (reason) {
    if (done) return;
    done = true;
    reject(promise, reason);
  });
  if (!done && res === IS_ERROR) {
    done = true;
    reject(promise, LAST_ERROR);
  }
}
}, 527, null, "promise/setimmediate/core.js");
__d(/* promise/setimmediate/done.js */function(global, require, module, exports) {'use strict';

var Promise = require(527        ); // 527 = ./core.js

module.exports = Promise;
Promise.prototype.done = function (onFulfilled, onRejected) {
  var self = arguments.length ? this.then.apply(this, arguments) : this;
  self.then(null, function (err) {
    setTimeout(function () {
      throw err;
    }, 0);
  });
};
}, 528, null, "promise/setimmediate/done.js");
__d(/* promise/setimmediate/rejection-tracking.js */function(global, require, module, exports) {'use strict';

var Promise = require(527     ); // 527 = ./core

var DEFAULT_WHITELIST = [ReferenceError, TypeError, RangeError];

var enabled = false;
exports.disable = disable;
function disable() {
  enabled = false;
  Promise._37 = null;
  Promise._87 = null;
}

exports.enable = enable;
function enable(options) {
  options = options || {};
  if (enabled) disable();
  enabled = true;
  var id = 0;
  var displayId = 0;
  var rejections = {};
  Promise._37 = function (promise) {
    if (promise._65 === 2 && rejections[promise._51]) {
      if (rejections[promise._51].logged) {
        onHandled(promise._51);
      } else {
        clearTimeout(rejections[promise._51].timeout);
      }
      delete rejections[promise._51];
    }
  };
  Promise._87 = function (promise, err) {
    if (promise._40 === 0) {
      promise._51 = id++;
      rejections[promise._51] = {
        displayId: null,
        error: err,
        timeout: setTimeout(onUnhandled.bind(null, promise._51), matchWhitelist(err, DEFAULT_WHITELIST) ? 100 : 2000),
        logged: false
      };
    }
  };
  function onUnhandled(id) {
    if (options.allRejections || matchWhitelist(rejections[id].error, options.whitelist || DEFAULT_WHITELIST)) {
      rejections[id].displayId = displayId++;
      if (options.onUnhandled) {
        rejections[id].logged = true;
        options.onUnhandled(rejections[id].displayId, rejections[id].error);
      } else {
        rejections[id].logged = true;
        logError(rejections[id].displayId, rejections[id].error);
      }
    }
  }
  function onHandled(id) {
    if (rejections[id].logged) {
      if (options.onHandled) {
        options.onHandled(rejections[id].displayId, rejections[id].error);
      } else if (!rejections[id].onUnhandled) {
        console.warn('Promise Rejection Handled (id: ' + rejections[id].displayId + '):');
        console.warn('  This means you can ignore any previous messages of the form "Possible Unhandled Promise Rejection" with id ' + rejections[id].displayId + '.');
      }
    }
  }
}

function logError(id, error) {
  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');
  var errStr = (error && (error.stack || error)) + '';
  errStr.split('\n').forEach(function (line) {
    console.warn('  ' + line);
  });
}

function matchWhitelist(error, list) {
  return list.some(function (cls) {
    return error instanceof cls;
  });
}
}, 529, null, "promise/setimmediate/rejection-tracking.js");
__d(/* regenerator-runtime/runtime.js */function(global, require, module, exports) {

!function (global) {
  "use strict";

  var hasOwn = Object.prototype.hasOwnProperty;
  var undefined;
  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  var inModule = typeof module === "object";
  var runtime = global.regeneratorRuntime;
  if (runtime) {
    if (inModule) {
      module.exports = runtime;
    }

    return;
  }

  runtime = global.regeneratorRuntime = inModule ? module.exports : {};

  function wrap(innerFn, outerFn, self, tryLocsList) {
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []);

    generator._invoke = makeInvokeMethod(innerFn, self, context);

    return generator;
  }
  runtime.wrap = wrap;

  function tryCatch(fn, obj, arg) {
    try {
      return { type: "normal", arg: fn.call(obj, arg) };
    } catch (err) {
      return { type: "throw", arg: err };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";

  var ContinueSentinel = {};

  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}

  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype;
  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
  GeneratorFunctionPrototype.constructor = GeneratorFunction;
  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = "GeneratorFunction";

  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function (method) {
      prototype[method] = function (arg) {
        return this._invoke(method, arg);
      };
    });
  }

  runtime.isGeneratorFunction = function (genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor ? ctor === GeneratorFunction || (ctor.displayName || ctor.name) === "GeneratorFunction" : false;
  };

  runtime.mark = function (genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      if (!(toStringTagSymbol in genFun)) {
        genFun[toStringTagSymbol] = "GeneratorFunction";
      }
    }
    genFun.prototype = Object.create(Gp);
    return genFun;
  };

  runtime.awrap = function (arg) {
    return new AwaitArgument(arg);
  };

  function AwaitArgument(arg) {
    this.arg = arg;
  }

  function AsyncIterator(generator) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;
        if (value instanceof AwaitArgument) {
          return Promise.resolve(value.arg).then(function (value) {
            invoke("next", value, resolve, reject);
          }, function (err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return Promise.resolve(value).then(function (unwrapped) {
          result.value = unwrapped;
          resolve(result);
        }, reject);
      }
    }

    if (typeof process === "object" && process.domain) {
      invoke = process.domain.bind(invoke);
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new Promise(function (resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
    }

    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);

  runtime.async = function (innerFn, outerFn, self, tryLocsList) {
    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList));

    return runtime.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {
      return result.done ? result.value : iter.next();
    });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;

    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }

        return doneResult();
      }

      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          if (method === "return" || method === "throw" && delegate.iterator[method] === undefined) {
            context.delegate = null;

            var returnMethod = delegate.iterator["return"];
            if (returnMethod) {
              var record = tryCatch(returnMethod, delegate.iterator, arg);
              if (record.type === "throw") {
                method = "throw";
                arg = record.arg;
                continue;
              }
            }

            if (method === "return") {
              continue;
            }
          }

          var record = tryCatch(delegate.iterator[method], delegate.iterator, arg);

          if (record.type === "throw") {
            context.delegate = null;

            method = "throw";
            arg = record.arg;
            continue;
          }

          method = "next";
          arg = undefined;

          var info = record.arg;
          if (info.done) {
            context[delegate.resultName] = info.value;
            context.next = delegate.nextLoc;
          } else {
            state = GenStateSuspendedYield;
            return info;
          }

          context.delegate = null;
        }

        if (method === "next") {
          context.sent = context._sent = arg;
        } else if (method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw arg;
          }

          if (context.dispatchException(arg)) {
            method = "next";
            arg = undefined;
          }
        } else if (method === "return") {
          context.abrupt("return", arg);
        }

        state = GenStateExecuting;

        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          state = context.done ? GenStateCompleted : GenStateSuspendedYield;

          var info = {
            value: record.arg,
            done: context.done
          };

          if (record.arg === ContinueSentinel) {
            if (context.delegate && method === "next") {
              arg = undefined;
            }
          } else {
            return info;
          }
        } else if (record.type === "throw") {
          state = GenStateCompleted;

          method = "throw";
          arg = record.arg;
        }
      }
    };
  }

  defineIteratorMethods(Gp);

  Gp[iteratorSymbol] = function () {
    return this;
  };

  Gp[toStringTagSymbol] = "Generator";

  Gp.toString = function () {
    return "[object Generator]";
  };

  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  runtime.keys = function (object) {
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();

    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }

      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1,
            next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;

          return next;
        };

        return next.next = next;
      }
    }

    return { next: doneResult };
  }
  runtime.values = values;

  function doneResult() {
    return { value: undefined, done: true };
  }

  Context.prototype = {
    constructor: Context,

    reset: function reset(skipTempReset) {
      this.prev = 0;
      this.next = 0;

      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;

      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          if (name.charAt(0) === "t" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },

    stop: function stop() {
      this.done = true;

      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },

    dispatchException: function dispatchException(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;
        return !!caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }
          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }
          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }
          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },

    abrupt: function abrupt(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry && (type === "break" || type === "continue") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.next = finallyEntry.finallyLoc;
      } else {
        this.complete(record);
      }

      return ContinueSentinel;
    },

    complete: function complete(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" || record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = record.arg;
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }
    },

    finish: function finish(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },

    "catch": function _catch(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }

      throw new Error("illegal catch attempt");
    },

    delegateYield: function delegateYield(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      return ContinueSentinel;
    }
  };
}(typeof global === "object" ? global : typeof window === "object" ? window : typeof self === "object" ? self : this);
}, 530, null, "regenerator-runtime/runtime.js");
__d(/* XMLHttpRequest */function(global, require, module, exports) {
'use strict';

var EventTarget = require(388                ); // 388 = event-target-shim
var RCTNetworking = require(532            ); // 532 = RCTNetworking

var base64 = require(387        ); // 387 = base64-js
var invariant = require(346                 ); // 346 = fbjs/lib/invariant
var warning = require(335               ); // 335 = fbjs/lib/warning

var UNSENT = 0;
var OPENED = 1;
var HEADERS_RECEIVED = 2;
var LOADING = 3;
var DONE = 4;

var SUPPORTED_RESPONSE_TYPES = {
  arraybuffer: typeof global.ArrayBuffer === 'function',
  blob: typeof global.Blob === 'function',
  document: false,
  json: true,
  text: true,
  '': true
};

var REQUEST_EVENTS = ['abort', 'error', 'load', 'loadstart', 'progress', 'timeout', 'loadend'];

var XHR_EVENTS = REQUEST_EVENTS.concat('readystatechange');

var XMLHttpRequestEventTarget = function (_EventTarget) {
  babelHelpers.inherits(XMLHttpRequestEventTarget, _EventTarget);

  function XMLHttpRequestEventTarget() {
    babelHelpers.classCallCheck(this, XMLHttpRequestEventTarget);
    return babelHelpers.possibleConstructorReturn(this, (XMLHttpRequestEventTarget.__proto__ || Object.getPrototypeOf(XMLHttpRequestEventTarget)).apply(this, arguments));
  }

  return XMLHttpRequestEventTarget;
}(EventTarget.apply(undefined, REQUEST_EVENTS));

var XMLHttpRequest = function (_EventTarget2) {
  babelHelpers.inherits(XMLHttpRequest, _EventTarget2);
  babelHelpers.createClass(XMLHttpRequest, null, [{
    key: 'setInterceptor',
    value: function setInterceptor(interceptor) {
      XMLHttpRequest._interceptor = interceptor;
    }
  }]);

  function XMLHttpRequest() {
    babelHelpers.classCallCheck(this, XMLHttpRequest);

    var _this2 = babelHelpers.possibleConstructorReturn(this, (XMLHttpRequest.__proto__ || Object.getPrototypeOf(XMLHttpRequest)).call(this));

    _this2.UNSENT = UNSENT;
    _this2.OPENED = OPENED;
    _this2.HEADERS_RECEIVED = HEADERS_RECEIVED;
    _this2.LOADING = LOADING;
    _this2.DONE = DONE;
    _this2.readyState = UNSENT;
    _this2.status = 0;
    _this2.timeout = 0;
    _this2.upload = new XMLHttpRequestEventTarget();
    _this2._aborted = false;
    _this2._hasError = false;
    _this2._method = null;
    _this2._response = '';
    _this2._url = null;
    _this2._timedOut = false;
    _this2._trackingName = 'unknown';
    _this2._incrementalEvents = false;

    _this2._reset();
    return _this2;
  }

  babelHelpers.createClass(XMLHttpRequest, [{
    key: '_reset',
    value: function _reset() {
      this.readyState = this.UNSENT;
      this.responseHeaders = undefined;
      this.status = 0;
      delete this.responseURL;

      this._requestId = null;

      this._cachedResponse = undefined;
      this._hasError = false;
      this._headers = {};
      this._response = '';
      this._responseType = '';
      this._sent = false;
      this._lowerCaseResponseHeaders = {};

      this._clearSubscriptions();
      this._timedOut = false;
    }
  }, {
    key: '__didCreateRequest',
    value: function __didCreateRequest(requestId) {
      this._requestId = requestId;

      XMLHttpRequest._interceptor && XMLHttpRequest._interceptor.requestSent(requestId, this._url || '', this._method || 'GET', this._headers);
    }
  }, {
    key: '__didUploadProgress',
    value: function __didUploadProgress(requestId, progress, total) {
      if (requestId === this._requestId) {
        this.upload.dispatchEvent({
          type: 'progress',
          lengthComputable: true,
          loaded: progress,
          total: total
        });
      }
    }
  }, {
    key: '__didReceiveResponse',
    value: function __didReceiveResponse(requestId, status, responseHeaders, responseURL) {
      if (requestId === this._requestId) {
        this.status = status;
        this.setResponseHeaders(responseHeaders);
        this.setReadyState(this.HEADERS_RECEIVED);
        if (responseURL || responseURL === '') {
          this.responseURL = responseURL;
        } else {
          delete this.responseURL;
        }

        XMLHttpRequest._interceptor && XMLHttpRequest._interceptor.responseReceived(requestId, responseURL || this._url || '', status, responseHeaders || {});
      }
    }
  }, {
    key: '__didReceiveData',
    value: function __didReceiveData(requestId, response) {
      if (requestId !== this._requestId) {
        return;
      }
      this._response = response;
      this._cachedResponse = undefined;
      this.setReadyState(this.LOADING);

      XMLHttpRequest._interceptor && XMLHttpRequest._interceptor.dataReceived(requestId, response);
    }
  }, {
    key: '__didReceiveIncrementalData',
    value: function __didReceiveIncrementalData(requestId, responseText, progress, total) {
      if (requestId !== this._requestId) {
        return;
      }
      if (!this._response) {
        this._response = responseText;
      } else {
        this._response += responseText;
      }

      XMLHttpRequest._interceptor && XMLHttpRequest._interceptor.dataReceived(requestId, responseText);

      this.setReadyState(this.LOADING);
      this.__didReceiveDataProgress(requestId, progress, total);
    }
  }, {
    key: '__didReceiveDataProgress',
    value: function __didReceiveDataProgress(requestId, loaded, total) {
      if (requestId !== this._requestId) {
        return;
      }
      this.dispatchEvent({
        type: 'progress',
        lengthComputable: total >= 0,
        loaded: loaded,
        total: total
      });
    }
  }, {
    key: '__didCompleteResponse',
    value: function __didCompleteResponse(requestId, error, timeOutError) {
      if (requestId === this._requestId) {
        if (error) {
          if (this._responseType === '' || this._responseType === 'text') {
            this._response = error;
          }
          this._hasError = true;
          if (timeOutError) {
            this._timedOut = true;
          }
        }
        this._clearSubscriptions();
        this._requestId = null;
        this.setReadyState(this.DONE);

        if (error) {
          XMLHttpRequest._interceptor && XMLHttpRequest._interceptor.loadingFailed(requestId, error);
        } else {
          XMLHttpRequest._interceptor && XMLHttpRequest._interceptor.loadingFinished(requestId, this._response.length);
        }
      }
    }
  }, {
    key: '_clearSubscriptions',
    value: function _clearSubscriptions() {
      (this._subscriptions || []).forEach(function (sub) {
        sub.remove();
      });
      this._subscriptions = [];
    }
  }, {
    key: 'getAllResponseHeaders',
    value: function getAllResponseHeaders() {
      if (!this.responseHeaders) {
        return null;
      }
      var headers = this.responseHeaders || {};
      return Object.keys(headers).map(function (headerName) {
        return headerName + ': ' + headers[headerName];
      }).join('\r\n');
    }
  }, {
    key: 'getResponseHeader',
    value: function getResponseHeader(header) {
      var value = this._lowerCaseResponseHeaders[header.toLowerCase()];
      return value !== undefined ? value : null;
    }
  }, {
    key: 'setRequestHeader',
    value: function setRequestHeader(header, value) {
      if (this.readyState !== this.OPENED) {
        throw new Error('Request has not been opened');
      }
      this._headers[header.toLowerCase()] = String(value);
    }
  }, {
    key: 'setTrackingName',
    value: function setTrackingName(trackingName) {
      this._trackingName = trackingName;
      return this;
    }
  }, {
    key: 'open',
    value: function open(method, url, async) {
      if (this.readyState !== this.UNSENT) {
        throw new Error('Cannot open, already sending');
      }
      if (async !== undefined && !async) {
        throw new Error('Synchronous http requests are not supported');
      }
      if (!url) {
        throw new Error('Cannot load an empty url');
      }
      this._method = method.toUpperCase();
      this._url = url;
      this._aborted = false;
      this.setReadyState(this.OPENED);
    }
  }, {
    key: 'send',
    value: function send(data) {
      var _this3 = this;

      if (this.readyState !== this.OPENED) {
        throw new Error('Request has not been opened');
      }
      if (this._sent) {
        throw new Error('Request has already been sent');
      }
      this._sent = true;
      var incrementalEvents = this._incrementalEvents || !!this.onreadystatechange || !!this.onprogress;

      this._subscriptions.push(RCTNetworking.addListener('didSendNetworkData', function (args) {
        return _this3.__didUploadProgress.apply(_this3, babelHelpers.toConsumableArray(args));
      }));
      this._subscriptions.push(RCTNetworking.addListener('didReceiveNetworkResponse', function (args) {
        return _this3.__didReceiveResponse.apply(_this3, babelHelpers.toConsumableArray(args));
      }));
      this._subscriptions.push(RCTNetworking.addListener('didReceiveNetworkData', function (args) {
        return _this3.__didReceiveData.apply(_this3, babelHelpers.toConsumableArray(args));
      }));
      this._subscriptions.push(RCTNetworking.addListener('didReceiveNetworkIncrementalData', function (args) {
        return _this3.__didReceiveIncrementalData.apply(_this3, babelHelpers.toConsumableArray(args));
      }));
      this._subscriptions.push(RCTNetworking.addListener('didReceiveNetworkDataProgress', function (args) {
        return _this3.__didReceiveDataProgress.apply(_this3, babelHelpers.toConsumableArray(args));
      }));
      this._subscriptions.push(RCTNetworking.addListener('didCompleteNetworkResponse', function (args) {
        return _this3.__didCompleteResponse.apply(_this3, babelHelpers.toConsumableArray(args));
      }));

      var nativeResponseType = 'text';
      if (this._responseType === 'arraybuffer' || this._responseType === 'blob') {
        nativeResponseType = 'base64';
      }

      invariant(this._method, 'Request method needs to be defined.');
      invariant(this._url, 'Request URL needs to be defined.');
      RCTNetworking.sendRequest(this._method, this._trackingName, this._url, this._headers, data, nativeResponseType, incrementalEvents, this.timeout, this.__didCreateRequest.bind(this));
    }
  }, {
    key: 'abort',
    value: function abort() {
      this._aborted = true;
      if (this._requestId) {
        RCTNetworking.abortRequest(this._requestId);
      }

      if (!(this.readyState === this.UNSENT || this.readyState === this.OPENED && !this._sent || this.readyState === this.DONE)) {
        this._reset();
        this.setReadyState(this.DONE);
      }

      this._reset();
    }
  }, {
    key: 'setResponseHeaders',
    value: function setResponseHeaders(responseHeaders) {
      this.responseHeaders = responseHeaders || null;
      var headers = responseHeaders || {};
      this._lowerCaseResponseHeaders = Object.keys(headers).reduce(function (lcaseHeaders, headerName) {
        lcaseHeaders[headerName.toLowerCase()] = headers[headerName];
        return lcaseHeaders;
      }, {});
    }
  }, {
    key: 'setReadyState',
    value: function setReadyState(newState) {
      this.readyState = newState;
      this.dispatchEvent({ type: 'readystatechange' });
      if (newState === this.DONE) {
        if (this._aborted) {
          this.dispatchEvent({ type: 'abort' });
        } else if (this._hasError) {
          if (this._timedOut) {
            this.dispatchEvent({ type: 'timeout' });
          } else {
            this.dispatchEvent({ type: 'error' });
          }
        } else {
          this.dispatchEvent({ type: 'load' });
        }
        this.dispatchEvent({ type: 'loadend' });
      }
    }
  }, {
    key: 'addEventListener',
    value: function addEventListener(type, listener) {
      if (type === 'readystatechange' || type === 'progress') {
        this._incrementalEvents = true;
      }
      babelHelpers.get(XMLHttpRequest.prototype.__proto__ || Object.getPrototypeOf(XMLHttpRequest.prototype), 'addEventListener', this).call(this, type, listener);
    }
  }, {
    key: 'responseType',
    get: function get() {
      return this._responseType;
    },
    set: function set(responseType) {
      if (this._sent) {
        throw new Error('Failed to set the \'responseType\' property on \'XMLHttpRequest\': The ' + 'response type cannot be set after the request has been sent.');
      }
      if (!SUPPORTED_RESPONSE_TYPES.hasOwnProperty(responseType)) {
        warning(false, 'The provided value \'' + responseType + '\' is not a valid \'responseType\'.');
        return;
      }

      invariant(SUPPORTED_RESPONSE_TYPES[responseType] || responseType === 'document', 'The provided value \'' + responseType + '\' is unsupported in this environment.');
      this._responseType = responseType;
    }
  }, {
    key: 'responseText',
    get: function get() {
      if (this._responseType !== '' && this._responseType !== 'text') {
        throw new Error("The 'responseText' property is only available if 'responseType' " + ('is set to \'\' or \'text\', but it is \'' + this._responseType + '\'.'));
      }
      if (this.readyState < LOADING) {
        return '';
      }
      return this._response;
    }
  }, {
    key: 'response',
    get: function get() {
      var responseType = this.responseType;

      if (responseType === '' || responseType === 'text') {
        return this.readyState < LOADING || this._hasError ? '' : this._response;
      }

      if (this.readyState !== DONE) {
        return null;
      }

      if (this._cachedResponse !== undefined) {
        return this._cachedResponse;
      }

      switch (responseType) {
        case 'document':
          this._cachedResponse = null;
          break;

        case 'arraybuffer':
          this._cachedResponse = base64.toByteArray(this._response).buffer;
          break;

        case 'blob':
          this._cachedResponse = new global.Blob([base64.toByteArray(this._response).buffer], { type: this.getResponseHeader('content-type') || '' });
          break;

        case 'json':
          try {
            this._cachedResponse = JSON.parse(this._response);
          } catch (_) {
            this._cachedResponse = null;
          }
          break;

        default:
          this._cachedResponse = null;
      }

      return this._cachedResponse;
    }
  }]);
  return XMLHttpRequest;
}(EventTarget.apply(undefined, babelHelpers.toConsumableArray(XHR_EVENTS)));

XMLHttpRequest.UNSENT = UNSENT;
XMLHttpRequest.OPENED = OPENED;
XMLHttpRequest.HEADERS_RECEIVED = HEADERS_RECEIVED;
XMLHttpRequest.LOADING = LOADING;
XMLHttpRequest.DONE = DONE;
XMLHttpRequest._interceptor = null;


module.exports = XMLHttpRequest;
}, 531, null, "XMLHttpRequest");
__d(/* RCTNetworking */function(global, require, module, exports) {
'use strict';

var FormData = require(533       ); // 533 = FormData
var NativeEventEmitter = require(374                 ); // 374 = NativeEventEmitter
var RCTNetworkingNative = require(349            ).Networking; // 349 = NativeModules
var convertRequestBody = require(534                 ); // 534 = convertRequestBody

function convertHeadersMapToArray(headers) {
  var headerArray = [];
  for (var name in headers) {
    headerArray.push([name, headers[name]]);
  }
  return headerArray;
}

var _requestId = 1;
function generateRequestId() {
  return _requestId++;
}

var RCTNetworking = function (_NativeEventEmitter) {
  babelHelpers.inherits(RCTNetworking, _NativeEventEmitter);

  function RCTNetworking() {
    babelHelpers.classCallCheck(this, RCTNetworking);
    return babelHelpers.possibleConstructorReturn(this, (RCTNetworking.__proto__ || Object.getPrototypeOf(RCTNetworking)).call(this, RCTNetworkingNative));
  }

  babelHelpers.createClass(RCTNetworking, [{
    key: 'sendRequest',
    value: function sendRequest(method, trackingName, url, headers, data, responseType, incrementalUpdates, timeout, callback) {
      var body = convertRequestBody(data);
      if (body && body.formData) {
        body.formData = body.formData.map(function (part) {
          return babelHelpers.extends({}, part, {
            headers: convertHeadersMapToArray(part.headers)
          });
        });
      }
      var requestId = generateRequestId();
      RCTNetworkingNative.sendRequest(method, url, requestId, convertHeadersMapToArray(headers), babelHelpers.extends({}, body, { trackingName: trackingName }), responseType, incrementalUpdates, timeout);
      callback(requestId);
    }
  }, {
    key: 'abortRequest',
    value: function abortRequest(requestId) {
      RCTNetworkingNative.abortRequest(requestId);
    }
  }, {
    key: 'clearCookies',
    value: function clearCookies(callback) {
      RCTNetworkingNative.clearCookies(callback);
    }
  }]);
  return RCTNetworking;
}(NativeEventEmitter);

module.exports = new RCTNetworking();
}, 532, null, "RCTNetworking");
__d(/* FormData */function(global, require, module, exports) {
'use strict';

var FormData = function () {
  function FormData() {
    babelHelpers.classCallCheck(this, FormData);

    this._parts = [];
  }

  babelHelpers.createClass(FormData, [{
    key: 'append',
    value: function append(key, value) {
      this._parts.push([key, value]);
    }
  }, {
    key: 'getParts',
    value: function getParts() {
      return this._parts.map(function (_ref) {
        var _ref2 = babelHelpers.slicedToArray(_ref, 2),
            name = _ref2[0],
            value = _ref2[1];

        var contentDisposition = 'form-data; name="' + name + '"';

        var headers = { 'content-disposition': contentDisposition };

        if (typeof value === 'object') {
          if (typeof value.name === 'string') {
            headers['content-disposition'] += '; filename="' + value.name + '"';
          }
          if (typeof value.type === 'string') {
            headers['content-type'] = value.type;
          }
          return babelHelpers.extends({}, value, { headers: headers, fieldName: name });
        }

        return { string: String(value), headers: headers, fieldName: name };
      });
    }
  }]);
  return FormData;
}();

module.exports = FormData;
}, 533, null, "FormData");
__d(/* convertRequestBody */function(global, require, module, exports) {
'use strict';

var binaryToBase64 = require(386             ); // 386 = binaryToBase64

var FormData = require(533       ); // 533 = FormData

function convertRequestBody(body) {
  if (typeof body === 'string') {
    return { string: body };
  }
  if (body instanceof FormData) {
    return { formData: body.getParts() };
  }
  if (body instanceof ArrayBuffer || ArrayBuffer.isView(body)) {
    return { base64: binaryToBase64(body) };
  }
  return body;
}

module.exports = convertRequestBody;
}, 534, null, "convertRequestBody");
__d(/* Geolocation */function(global, require, module, exports) {
'use strict';

var NativeEventEmitter = require(374                 ); // 374 = NativeEventEmitter
var RCTLocationObserver = require(349            ).LocationObserver; // 349 = NativeModules

var invariant = require(346                 ); // 346 = fbjs/lib/invariant
var logError = require(384       ); // 384 = logError
var warning = require(335               ); // 335 = fbjs/lib/warning

var LocationEventEmitter = new NativeEventEmitter(RCTLocationObserver);

var subscriptions = [];
var updatesEnabled = false;

var Geolocation = {
  getCurrentPosition: function getCurrentPosition(geo_success, geo_error, geo_options) {
    invariant(typeof geo_success === 'function', 'Must provide a valid geo_success callback.');
    RCTLocationObserver.getCurrentPosition(geo_options || {}, geo_success, geo_error || logError);
  },

  watchPosition: function watchPosition(success, error, options) {
    if (!updatesEnabled) {
      RCTLocationObserver.startObserving(options || {});
      updatesEnabled = true;
    }
    var watchID = subscriptions.length;
    subscriptions.push([LocationEventEmitter.addListener('geolocationDidChange', success), error ? LocationEventEmitter.addListener('geolocationError', error) : null]);
    return watchID;
  },

  clearWatch: function clearWatch(watchID) {
    var sub = subscriptions[watchID];
    if (!sub) {
      return;
    }

    sub[0].remove();

    var sub1 = sub[1];sub1 && sub1.remove();
    subscriptions[watchID] = undefined;
    var noWatchers = true;
    for (var ii = 0; ii < subscriptions.length; ii++) {
      if (subscriptions[ii]) {
        noWatchers = false;
      }
    }
    if (noWatchers) {
      Geolocation.stopObserving();
    }
  },

  stopObserving: function stopObserving() {
    if (updatesEnabled) {
      RCTLocationObserver.stopObserving();
      updatesEnabled = false;
      for (var ii = 0; ii < subscriptions.length; ii++) {
        var sub = subscriptions[ii];
        if (sub) {
          warning('Called stopObserving with existing subscriptions.');
          sub[0].remove();

          var sub1 = sub[1];sub1 && sub1.remove();
        }
      }
      subscriptions = [];
    }
  }
};

module.exports = Geolocation;
}, 535, null, "Geolocation");
__d(/* Map */function(global, require, module, exports) {

'use strict';

var _shouldPolyfillES6Collection = require(537                           ); // 537 = _shouldPolyfillES6Collection
var guid = require(538   ); // 538 = guid
var isNode = require(539              ); // 539 = fbjs/lib/isNode
var toIterator = require(540         ); // 540 = toIterator

module.exports = function (global, undefined) {
  if (!_shouldPolyfillES6Collection('Map')) {
    return global.Map;
  }

  var KIND_KEY = 'key';
  var KIND_VALUE = 'value';
  var KIND_KEY_VALUE = 'key+value';

  var KEY_PREFIX = '$map_';

  var SECRET_SIZE_PROP;
  if (__DEV__) {
    SECRET_SIZE_PROP = '$size' + guid();
  }

  var OLD_IE_HASH_PREFIX = 'IE_HASH_';

  var Map = function () {
    function Map(iterable) {
      babelHelpers.classCallCheck(this, Map);

      if (!isObject(this)) {
        throw new TypeError('Wrong map object type.');
      }

      initMap(this);

      if (iterable != null) {
        var it = toIterator(iterable);
        var next;
        while (!(next = it.next()).done) {
          if (!isObject(next.value)) {
            throw new TypeError('Expected iterable items to be pair objects.');
          }
          this.set(next.value[0], next.value[1]);
        }
      }
    }

    babelHelpers.createClass(Map, [{
      key: 'clear',
      value: function clear() {
        initMap(this);
      }
    }, {
      key: 'has',
      value: function has(key) {
        var index = getIndex(this, key);
        return !!(index != null && this._mapData[index]);
      }
    }, {
      key: 'set',
      value: function set(key, value) {
        var index = getIndex(this, key);

        if (index != null && this._mapData[index]) {
          this._mapData[index][1] = value;
        } else {
          index = this._mapData.push([key, value]) - 1;
          setIndex(this, key, index);
          if (__DEV__) {
            this[SECRET_SIZE_PROP] += 1;
          } else {
            this.size += 1;
          }
        }

        return this;
      }
    }, {
      key: 'get',
      value: function get(key) {
        var index = getIndex(this, key);
        if (index == null) {
          return undefined;
        } else {
          return this._mapData[index][1];
        }
      }
    }, {
      key: 'delete',
      value: function _delete(key) {
        var index = getIndex(this, key);
        if (index != null && this._mapData[index]) {
          setIndex(this, key, undefined);
          this._mapData[index] = undefined;
          if (__DEV__) {
            this[SECRET_SIZE_PROP] -= 1;
          } else {
            this.size -= 1;
          }
          return true;
        } else {
          return false;
        }
      }
    }, {
      key: 'entries',
      value: function entries() {
        return new MapIterator(this, KIND_KEY_VALUE);
      }
    }, {
      key: 'keys',
      value: function keys() {
        return new MapIterator(this, KIND_KEY);
      }
    }, {
      key: 'values',
      value: function values() {
        return new MapIterator(this, KIND_VALUE);
      }
    }, {
      key: 'forEach',
      value: function forEach(callback, thisArg) {
        if (typeof callback !== 'function') {
          throw new TypeError('Callback must be callable.');
        }

        var boundCallback = callback.bind(thisArg || undefined);
        var mapData = this._mapData;

        for (var i = 0; i < mapData.length; i++) {
          var entry = mapData[i];
          if (entry != null) {
            boundCallback(entry[1], entry[0], this);
          }
        }
      }
    }]);
    return Map;
  }();

  Map.prototype[toIterator.ITERATOR_SYMBOL] = Map.prototype.entries;

  var MapIterator = function () {
    function MapIterator(map, kind) {
      babelHelpers.classCallCheck(this, MapIterator);

      if (!(isObject(map) && map._mapData)) {
        throw new TypeError('Object is not a map.');
      }

      if ([KIND_KEY, KIND_KEY_VALUE, KIND_VALUE].indexOf(kind) === -1) {
        throw new Error('Invalid iteration kind.');
      }

      this._map = map;
      this._nextIndex = 0;
      this._kind = kind;
    }

    babelHelpers.createClass(MapIterator, [{
      key: 'next',
      value: function next() {
        if (!this instanceof Map) {
          throw new TypeError('Expected to be called on a MapIterator.');
        }

        var map = this._map;
        var index = this._nextIndex;
        var kind = this._kind;

        if (map == null) {
          return createIterResultObject(undefined, true);
        }

        var entries = map._mapData;

        while (index < entries.length) {
          var record = entries[index];

          index += 1;
          this._nextIndex = index;

          if (record) {
            if (kind === KIND_KEY) {
              return createIterResultObject(record[0], false);
            } else if (kind === KIND_VALUE) {
              return createIterResultObject(record[1], false);
            } else if (kind) {
              return createIterResultObject(record, false);
            }
          }
        }

        this._map = undefined;

        return createIterResultObject(undefined, true);
      }
    }]);
    return MapIterator;
  }();

  MapIterator.prototype[toIterator.ITERATOR_SYMBOL] = function () {
    return this;
  };

  function getIndex(map, key) {
    if (isObject(key)) {
      var hash = getHash(key);
      return map._objectIndex[hash];
    } else {
      var prefixedKey = KEY_PREFIX + key;
      if (typeof key === 'string') {
        return map._stringIndex[prefixedKey];
      } else {
        return map._otherIndex[prefixedKey];
      }
    }
  }

  function setIndex(map, key, index) {
    var shouldDelete = index == null;

    if (isObject(key)) {
      var hash = getHash(key);
      if (shouldDelete) {
        delete map._objectIndex[hash];
      } else {
        map._objectIndex[hash] = index;
      }
    } else {
      var prefixedKey = KEY_PREFIX + key;
      if (typeof key === 'string') {
        if (shouldDelete) {
          delete map._stringIndex[prefixedKey];
        } else {
          map._stringIndex[prefixedKey] = index;
        }
      } else {
        if (shouldDelete) {
          delete map._otherIndex[prefixedKey];
        } else {
          map._otherIndex[prefixedKey] = index;
        }
      }
    }
  }

  function initMap(map) {
    map._mapData = [];

    map._objectIndex = {};

    map._stringIndex = {};

    map._otherIndex = {};

    if (__DEV__) {
      if (isES5) {
        if (map.hasOwnProperty(SECRET_SIZE_PROP)) {
          map[SECRET_SIZE_PROP] = 0;
        } else {
          Object.defineProperty(map, SECRET_SIZE_PROP, {
            value: 0,
            writable: true
          });
          Object.defineProperty(map, 'size', {
            set: function set(v) {
              console.error('PLEASE FIX ME: You are changing the map size property which ' + 'should not be writable and will break in production.');
              throw new Error('The map size property is not writable.');
            },
            get: function get() {
              return map[SECRET_SIZE_PROP];
            }
          });
        }

        return;
      }
    }

    map.size = 0;
  }

  function isObject(o) {
    return o != null && (typeof o === 'object' || typeof o === 'function');
  }

  function createIterResultObject(value, done) {
    return { value: value, done: done };
  }

  var isES5 = function () {
    try {
      Object.defineProperty({}, 'x', {});
      return true;
    } catch (e) {
      return false;
    }
  }();

  function isExtensible(o) {
    if (!isES5) {
      return true;
    } else {
      return Object.isExtensible(o);
    }
  }

  function getIENodeHash(node) {
    var uniqueID;
    switch (node.nodeType) {
      case 1:
        uniqueID = node.uniqueID;
        break;
      case 9:
        uniqueID = node.documentElement.uniqueID;
        break;
      default:
        return null;
    }

    if (uniqueID) {
      return OLD_IE_HASH_PREFIX + uniqueID;
    } else {
      return null;
    }
  }

  var getHash = function () {
    var propIsEnumerable = Object.prototype.propertyIsEnumerable;
    var hashProperty = guid();
    var hashCounter = 0;

    return function getHash(o) {
      if (o[hashProperty]) {
        return o[hashProperty];
      } else if (!isES5 && o.propertyIsEnumerable && o.propertyIsEnumerable[hashProperty]) {
        return o.propertyIsEnumerable[hashProperty];
      } else if (!isES5 && isNode(o) && getIENodeHash(o)) {
        return getIENodeHash(o);
      } else if (!isES5 && o[hashProperty]) {
        return o[hashProperty];
      }

      if (isExtensible(o)) {
        hashCounter += 1;
        if (isES5) {
          Object.defineProperty(o, hashProperty, {
            enumerable: false,
            writable: false,
            configurable: false,
            value: hashCounter
          });
        } else if (o.propertyIsEnumerable) {
          o.propertyIsEnumerable = function () {
            return propIsEnumerable.apply(this, arguments);
          };
          o.propertyIsEnumerable[hashProperty] = hashCounter;
        } else if (isNode(o)) {
          o[hashProperty] = hashCounter;
        } else {
          throw new Error('Unable to set a non-enumerable property on object.');
        }
        return hashCounter;
      } else {
        throw new Error('Non-extensible objects are not allowed as keys.');
      }
    };
  }();

  return Map;
}(Function('return this')());
}, 536, null, "Map");
__d(/* _shouldPolyfillES6Collection */function(global, require, module, exports) {
'use strict';

function shouldPolyfillES6Collection(collectionName) {
  var Collection = global[collectionName];
  if (Collection == null) {
    return true;
  }

  if (typeof global.Symbol !== 'function') {
    return true;
  }

  var proto = Collection.prototype;

  return Collection == null || typeof Collection !== 'function' || typeof proto.clear !== 'function' || new Collection().size !== 0 || typeof proto.keys !== 'function' || typeof proto.forEach !== 'function';
}

module.exports = shouldPolyfillES6Collection;
}, 537, null, "_shouldPolyfillES6Collection");
__d(/* guid */function(global, require, module, exports) {

'use strict';

function guid() {
  return 'f' + (Math.random() * (1 << 30)).toString(16).replace('.', '');
}

module.exports = guid;
}, 538, null, "guid");
__d(/* fbjs/lib/isNode.js */function(global, require, module, exports) {'use strict';

function isNode(object) {
  var doc = object ? object.ownerDocument || object : document;
  var defaultView = doc.defaultView || window;
  return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
}

module.exports = isNode;
}, 539, null, "fbjs/lib/isNode.js");
__d(/* toIterator */function(global, require, module, exports) {
'use strict';

var KIND_KEY = 'key';
var KIND_VALUE = 'value';
var KIND_KEY_VAL = 'key+value';

var ITERATOR_SYMBOL = typeof Symbol === 'function' ? typeof Symbol === 'function' ? Symbol.iterator : '@@iterator' : '@@iterator';

var toIterator = function () {
  if (!(Array.prototype[ITERATOR_SYMBOL] && String.prototype[ITERATOR_SYMBOL])) {
    return function () {
      var ArrayIterator = function () {
        function ArrayIterator(array, kind) {
          babelHelpers.classCallCheck(this, ArrayIterator);

          if (!Array.isArray(array)) {
            throw new TypeError('Object is not an Array');
          }
          this._iteratedObject = array;
          this._kind = kind;
          this._nextIndex = 0;
        }

        babelHelpers.createClass(ArrayIterator, [{
          key: 'next',
          value: function next() {
            if (!this instanceof ArrayIterator) {
              throw new TypeError('Object is not an ArrayIterator');
            }

            if (this._iteratedObject == null) {
              return createIterResultObject(undefined, true);
            }

            var array = this._iteratedObject;
            var len = this._iteratedObject.length;
            var index = this._nextIndex;
            var kind = this._kind;

            if (index >= len) {
              this._iteratedObject = undefined;
              return createIterResultObject(undefined, true);
            }

            this._nextIndex = index + 1;

            if (kind === KIND_KEY) {
              return createIterResultObject(index, false);
            } else if (kind === KIND_VALUE) {
              return createIterResultObject(array[index], false);
            } else if (kind === KIND_KEY_VAL) {
              return createIterResultObject([index, array[index]], false);
            }
          }
        }, {
          key: '@@iterator',
          value: function iterator() {
            return this;
          }
        }]);
        return ArrayIterator;
      }();

      var StringIterator = function () {
        function StringIterator(string) {
          babelHelpers.classCallCheck(this, StringIterator);

          if (typeof string !== 'string') {
            throw new TypeError('Object is not a string');
          }
          this._iteratedString = string;
          this._nextIndex = 0;
        }

        babelHelpers.createClass(StringIterator, [{
          key: 'next',
          value: function next() {
            if (!this instanceof StringIterator) {
              throw new TypeError('Object is not a StringIterator');
            }

            if (this._iteratedString == null) {
              return createIterResultObject(undefined, true);
            }

            var index = this._nextIndex;
            var s = this._iteratedString;
            var len = s.length;

            if (index >= len) {
              this._iteratedString = undefined;
              return createIterResultObject(undefined, true);
            }

            var ret;
            var first = s.charCodeAt(index);

            if (first < 0xD800 || first > 0xDBFF || index + 1 === len) {
              ret = s[index];
            } else {
              var second = s.charCodeAt(index + 1);
              if (second < 0xDC00 || second > 0xDFFF) {
                ret = s[index];
              } else {
                ret = s[index] + s[index + 1];
              }
            }

            this._nextIndex = index + ret.length;

            return createIterResultObject(ret, false);
          }
        }, {
          key: '@@iterator',
          value: function iterator() {
            return this;
          }
        }]);
        return StringIterator;
      }();

      function createIterResultObject(value, done) {
        return { value: value, done: done };
      }

      return function (object, kind) {
        if (typeof object === 'string') {
          return new StringIterator(object);
        } else if (Array.isArray(object)) {
          return new ArrayIterator(object, kind || KIND_VALUE);
        } else {
          return object[ITERATOR_SYMBOL]();
        }
      };
    }();
  } else {
    return function (object) {
      return object[ITERATOR_SYMBOL]();
    };
  }
}();

babelHelpers.extends(toIterator, {
  KIND_KEY: KIND_KEY,
  KIND_VALUE: KIND_VALUE,
  KIND_KEY_VAL: KIND_KEY_VAL,
  ITERATOR_SYMBOL: ITERATOR_SYMBOL
});

module.exports = toIterator;
}, 540, null, "toIterator");
__d(/* Set */function(global, require, module, exports) {

'use strict';

var Map = require(536  ); // 536 = Map

var _shouldPolyfillES6Collection = require(537                           ); // 537 = _shouldPolyfillES6Collection
var toIterator = require(540         ); // 540 = toIterator

module.exports = function (global) {
  if (!_shouldPolyfillES6Collection('Set')) {
    return global.Set;
  }

  var Set = function () {
    function Set(iterable) {
      babelHelpers.classCallCheck(this, Set);

      if (this == null || typeof this !== 'object' && typeof this !== 'function') {
        throw new TypeError('Wrong set object type.');
      }

      initSet(this);

      if (iterable != null) {
        var it = toIterator(iterable);
        var next;
        while (!(next = it.next()).done) {
          this.add(next.value);
        }
      }
    }

    babelHelpers.createClass(Set, [{
      key: 'add',
      value: function add(value) {
        this._map.set(value, value);
        this.size = this._map.size;
        return this;
      }
    }, {
      key: 'clear',
      value: function clear() {
        initSet(this);
      }
    }, {
      key: 'delete',
      value: function _delete(value) {
        var ret = this._map.delete(value);
        this.size = this._map.size;
        return ret;
      }
    }, {
      key: 'entries',
      value: function entries() {
        return this._map.entries();
      }
    }, {
      key: 'forEach',
      value: function forEach(callback) {
        var thisArg = arguments[1];
        var it = this._map.keys();
        var next;
        while (!(next = it.next()).done) {
          callback.call(thisArg, next.value, next.value, this);
        }
      }
    }, {
      key: 'has',
      value: function has(value) {
        return this._map.has(value);
      }
    }, {
      key: 'values',
      value: function values() {
        return this._map.values();
      }
    }]);
    return Set;
  }();

  Set.prototype[toIterator.ITERATOR_SYMBOL] = Set.prototype.values;

  Set.prototype.keys = Set.prototype.values;

  function initSet(set) {
    set._map = new Map();
    set.size = set._map.size;
  }

  return Set;
}(Function('return this')());
}, 541, null, "Set");
__d(/* setupDevtools */function(global, require, module, exports) {
'use strict';

var NativeModules = require(349            ); // 349 = NativeModules
var Platform = require(348       ); // 348 = Platform

function setupDevtools() {
  var messageListeners = [];
  var closeListeners = [];
  var hostname = 'localhost';
  if (Platform.OS === 'android' && NativeModules.AndroidConstants) {
    hostname = NativeModules.AndroidConstants.ServerHost.split(':')[0];
  }
  var port = window.__REACT_DEVTOOLS_PORT__ || 8097;
  var ws = new window.WebSocket('ws://' + hostname + ':' + port + '/devtools');

  var FOR_BACKEND = {
    resolveRNStyle: require(345           ), // 345 = flattenStyle
    wall: {
      listen: function listen(fn) {
        messageListeners.push(fn);
      },
      onClose: function onClose(fn) {
        closeListeners.push(fn);
      },
      send: function send(data) {
        ws.send(JSON.stringify(data));
      }
    }
  };
  ws.onclose = handleClose;
  ws.onerror = handleClose;
  ws.onopen = function () {
    tryToConnect();
  };

  var hasClosed = false;
  function handleClose() {
    if (!hasClosed) {
      hasClosed = true;
      setTimeout(setupDevtools, 2000);
      closeListeners.forEach(function (fn) {
        return fn();
      });
    }
  }

  function tryToConnect() {
    ws.send('attach:agent');
    var _interval = setInterval(function () {
      return ws.send('attach:agent');
    }, 500);
    ws.onmessage = function (evt) {
      if (evt.data.indexOf('eval:') === 0) {
        clearInterval(_interval);
        initialize(evt.data.slice('eval:'.length));
      }
    };
  }

  function initialize(text) {
    try {
      eval(text);
    } catch (e) {
      console.error('Failed to eval: ' + e.message);
      return;
    }

    var ReactNativeComponentTree = require(454                       ); // 454 = ReactNativeComponentTree
    window.__REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
      ComponentTree: {
        getClosestInstanceFromNode: function getClosestInstanceFromNode(node) {
          return ReactNativeComponentTree.getClosestInstanceFromNode(node);
        },
        getNodeFromInstance: function getNodeFromInstance(inst) {
          while (inst._renderedComponent) {
            inst = inst._renderedComponent;
          }
          if (inst) {
            return ReactNativeComponentTree.getNodeFromInstance(inst);
          } else {
            return null;
          }
        }
      },
      Mount: require(543               ), // 543 = ReactNativeMount
      Reconciler: require(468              ) // 468 = ReactReconciler
    });
    ws.onmessage = handleMessage;
  }

  function handleMessage(evt) {
    var data;
    try {
      data = JSON.parse(evt.data);
    } catch (e) {
      return console.error('failed to parse json: ' + evt.data);
    }

    if (data.$close || data.$error) {
      closeListeners.forEach(function (fn) {
        return fn();
      });
      window.__REACT_DEVTOOLS_GLOBAL_HOOK__.emit('shutdown');
      tryToConnect();
      return;
    }
    if (data.$open) {
      return;
    }
    messageListeners.forEach(function (fn) {
      try {
        fn(data);
      } catch (e) {
        console.log(data);
        throw e;
      }
    });
  }
}

module.exports = setupDevtools;
}, 542, null, "setupDevtools");
__d(/* ReactNativeMount */function(global, require, module, exports) {
'use strict';

var React = require(398    ); // 398 = React
var ReactInstrumentation = require(471                   ); // 471 = ReactInstrumentation
var ReactNativeContainerInfo = require(544                       ); // 544 = ReactNativeContainerInfo
var ReactNativeTagHandles = require(463                    ); // 463 = ReactNativeTagHandles
var ReactReconciler = require(468              ); // 468 = ReactReconciler
var ReactUpdateQueue = require(545               ); // 545 = ReactUpdateQueue
var ReactUpdates = require(464           ); // 464 = ReactUpdates
var UIManager = require(395        ); // 395 = UIManager

var emptyObject = require(411                   ); // 411 = fbjs/lib/emptyObject
var instantiateReactComponent = require(476                        ); // 476 = instantiateReactComponent
var shouldUpdateReactComponent = require(483                         ); // 483 = shouldUpdateReactComponent

var TopLevelWrapper = function TopLevelWrapper() {};
TopLevelWrapper.prototype.isReactComponent = {};
if (__DEV__) {
  TopLevelWrapper.displayName = 'TopLevelWrapper';
}
TopLevelWrapper.prototype.render = function () {
  return this.props.child;
};
TopLevelWrapper.isReactTopLevelWrapper = true;

function mountComponentIntoNode(componentInstance, containerTag, transaction) {
  var markup = ReactReconciler.mountComponent(componentInstance, transaction, null, ReactNativeContainerInfo(containerTag), emptyObject, 0);
  componentInstance._renderedComponent._topLevelWrapper = componentInstance;
  ReactNativeMount._mountImageIntoNode(markup, containerTag);
}

function batchedMountComponentIntoNode(componentInstance, containerTag) {
  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled();
  transaction.perform(mountComponentIntoNode, null, componentInstance, containerTag, transaction);
  ReactUpdates.ReactReconcileTransaction.release(transaction);
}

var ReactNativeMount = {
  _instancesByContainerID: {},

  findNodeHandle: require(396             ), // 396 = findNodeHandle

  renderComponent: function renderComponent(nextElement, containerTag, callback) {
    var nextWrappedElement = React.createElement(TopLevelWrapper, { child: nextElement });

    var topRootNodeID = containerTag;
    var prevComponent = ReactNativeMount._instancesByContainerID[topRootNodeID];
    if (prevComponent) {
      var prevWrappedElement = prevComponent._currentElement;
      var prevElement = prevWrappedElement.props.child;
      if (shouldUpdateReactComponent(prevElement, nextElement)) {
        ReactUpdateQueue.enqueueElementInternal(prevComponent, nextWrappedElement, emptyObject);
        if (callback) {
          ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
        }
        return prevComponent;
      } else {
        ReactNativeMount.unmountComponentAtNode(containerTag);
      }
    }

    if (!ReactNativeTagHandles.reactTagIsNativeTopRootID(containerTag)) {
      console.error('You cannot render into anything but a top root');
      return null;
    }

    ReactNativeTagHandles.assertRootTag(containerTag);

    var instance = instantiateReactComponent(nextWrappedElement, false);
    ReactNativeMount._instancesByContainerID[containerTag] = instance;

    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, instance, containerTag);
    var component = instance.getPublicInstance();
    if (callback) {
      callback.call(component);
    }
    return component;
  },

  _mountImageIntoNode: function _mountImageIntoNode(mountImage, containerID) {
    var childTag = mountImage;
    UIManager.setChildren(containerID, [childTag]);
  },

  unmountComponentAtNodeAndRemoveContainer: function unmountComponentAtNodeAndRemoveContainer(containerTag) {
    ReactNativeMount.unmountComponentAtNode(containerTag);

    UIManager.removeRootView(containerTag);
  },

  unmountComponentAtNode: function unmountComponentAtNode(containerTag) {
    if (!ReactNativeTagHandles.reactTagIsNativeTopRootID(containerTag)) {
      console.error('You cannot render into anything but a top root');
      return false;
    }

    var instance = ReactNativeMount._instancesByContainerID[containerTag];
    if (!instance) {
      return false;
    }
    if (__DEV__) {
      ReactInstrumentation.debugTool.onBeginFlush();
    }
    ReactNativeMount.unmountComponentFromNode(instance, containerTag);
    delete ReactNativeMount._instancesByContainerID[containerTag];
    if (__DEV__) {
      ReactInstrumentation.debugTool.onEndFlush();
    }
    return true;
  },

  unmountComponentFromNode: function unmountComponentFromNode(instance, containerID) {
    ReactReconciler.unmountComponent(instance);
    UIManager.removeSubviewsFromContainerWithID(containerID);
  }

};

module.exports = ReactNativeMount;
}, 543, null, "ReactNativeMount");
__d(/* ReactNativeContainerInfo */function(global, require, module, exports) {
'use strict';

function ReactNativeContainerInfo(tag) {
  var info = {
    _tag: tag
  };
  return info;
}

module.exports = ReactNativeContainerInfo;
}, 544, null, "ReactNativeContainerInfo");
__d(/* ReactUpdateQueue */function(global, require, module, exports) {

'use strict';

var ReactCurrentOwner = require(357                          ); // 357 = react/lib/ReactCurrentOwner
var ReactInstanceMap = require(397               ); // 397 = ReactInstanceMap
var ReactInstrumentation = require(471                   ); // 471 = ReactInstrumentation
var ReactUpdates = require(464           ); // 464 = ReactUpdates

var invariant = require(346                 ); // 346 = fbjs/lib/invariant
var warning = require(335               ); // 335 = fbjs/lib/warning

function enqueueUpdate(internalInstance) {
  ReactUpdates.enqueueUpdate(internalInstance);
}

function formatUnexpectedArgument(arg) {
  var type = typeof arg;
  if (type !== 'object') {
    return type;
  }
  var displayName = arg.constructor && arg.constructor.name || type;
  var keys = Object.keys(arg);
  if (keys.length > 0 && keys.length < 20) {
    return displayName + ' (keys: ' + keys.join(', ') + ')';
  }
  return displayName;
}

function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
  var internalInstance = ReactInstanceMap.get(publicInstance);
  if (!internalInstance) {
    if (__DEV__) {
      var ctor = publicInstance.constructor;

      warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, ctor && (ctor.displayName || ctor.name) || 'ReactClass');
    }
    return null;
  }

  if (__DEV__) {
    warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition (such as ' + 'within `render` or another component\'s constructor). Render methods ' + 'should be a pure function of props and state; constructor ' + 'side-effects are an anti-pattern, but can be moved to ' + '`componentWillMount`.', callerName);
  }

  return internalInstance;
}

var ReactUpdateQueue = {
  isMounted: function isMounted(publicInstance) {
    if (__DEV__) {
      var owner = ReactCurrentOwner.current;
      if (owner !== null) {
        warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component');
        owner._warnedAboutRefsInRender = true;
      }
    }
    var internalInstance = ReactInstanceMap.get(publicInstance);
    if (internalInstance) {
      return !!internalInstance._renderedComponent;
    } else {
      return false;
    }
  },

  enqueueCallback: function enqueueCallback(publicInstance, callback, callerName) {
    ReactUpdateQueue.validateCallback(callback, callerName);
    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);

    if (!internalInstance) {
      return null;
    }

    if (internalInstance._pendingCallbacks) {
      internalInstance._pendingCallbacks.push(callback);
    } else {
      internalInstance._pendingCallbacks = [callback];
    }

    enqueueUpdate(internalInstance);
  },

  enqueueCallbackInternal: function enqueueCallbackInternal(internalInstance, callback) {
    if (internalInstance._pendingCallbacks) {
      internalInstance._pendingCallbacks.push(callback);
    } else {
      internalInstance._pendingCallbacks = [callback];
    }
    enqueueUpdate(internalInstance);
  },

  enqueueForceUpdate: function enqueueForceUpdate(publicInstance) {
    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');

    if (!internalInstance) {
      return;
    }

    internalInstance._pendingForceUpdate = true;

    enqueueUpdate(internalInstance);
  },

  enqueueReplaceState: function enqueueReplaceState(publicInstance, completeState) {
    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');

    if (!internalInstance) {
      return;
    }

    internalInstance._pendingStateQueue = [completeState];
    internalInstance._pendingReplaceState = true;

    enqueueUpdate(internalInstance);
  },

  enqueueSetState: function enqueueSetState(publicInstance, partialState) {
    if (__DEV__) {
      ReactInstrumentation.debugTool.onSetState();
      warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().');
    }

    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');

    if (!internalInstance) {
      return;
    }

    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);
    queue.push(partialState);

    enqueueUpdate(internalInstance);
  },

  enqueueElementInternal: function enqueueElementInternal(internalInstance, nextElement, nextContext) {
    internalInstance._pendingElement = nextElement;

    internalInstance._context = nextContext;
    enqueueUpdate(internalInstance);
  },

  validateCallback: function validateCallback(callback, callerName) {
    invariant(!callback || typeof callback === 'function', '%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, formatUnexpectedArgument(callback));
  }

};

module.exports = ReactUpdateQueue;
}, 545, null, "ReactUpdateQueue");
__d(/* RCTDebugComponentOwnership */function(global, require, module, exports) {

'use strict';

var BatchedBridge = require(350            ); // 350 = BatchedBridge

var RCTDebugComponentOwnership = {
  getOwnerHierarchy: function getOwnerHierarchy(requestID, tag) {
    throw new Error('This seems to be unused. Will disable until it is needed again.');
  }
};

BatchedBridge.registerCallableModule('RCTDebugComponentOwnership', RCTDebugComponentOwnership);

module.exports = RCTDebugComponentOwnership;
}, 546, null, "RCTDebugComponentOwnership");
__d(/* JSInspector */function(global, require, module, exports) {
'use strict';

var JSInspector = {
  registerAgent: function registerAgent(type) {
    if (global.__registerInspectorAgent) {
      global.__registerInspectorAgent(type);
    }
  },
  getTimestamp: function getTimestamp() {
    return global.__inspectorTimestamp();
  }
};

module.exports = JSInspector;
}, 547, null, "JSInspector");
__d(/* NetworkAgent */function(global, require, module, exports) {
'use strict';

var InspectorAgent = require(549             ); // 549 = InspectorAgent
var JSInspector = require(547          ); // 547 = JSInspector
var Map = require(536  ); // 536 = Map
var XMLHttpRequest = require(531             ); // 531 = XMLHttpRequest

var Interceptor = function () {
  function Interceptor(agent) {
    babelHelpers.classCallCheck(this, Interceptor);

    this._agent = agent;
    this._requests = new Map();
  }

  babelHelpers.createClass(Interceptor, [{
    key: 'getData',
    value: function getData(requestId) {
      return this._requests.get(requestId);
    }
  }, {
    key: 'requestSent',
    value: function requestSent(id, url, method, headers) {
      var requestId = String(id);
      this._requests.set(requestId, '');

      var request = {
        url: url,
        method: method,
        headers: headers,
        initialPriority: 'Medium'
      };
      var event = {
        requestId: requestId,
        documentURL: '',
        frameId: '1',
        loaderId: '1',
        request: request,
        timestamp: JSInspector.getTimestamp(),
        initiator: {
          type: 'other'
        },
        type: 'Other'
      };
      this._agent.sendEvent('requestWillBeSent', event);
    }
  }, {
    key: 'responseReceived',
    value: function responseReceived(id, url, status, headers) {
      var requestId = String(id);
      var response = {
        url: url,
        status: status,
        statusText: String(status),
        headers: headers,

        requestHeaders: {},
        mimeType: this._getMimeType(headers),
        connectionReused: false,
        connectionId: -1,
        encodedDataLength: 0,
        securityState: 'unknown'
      };

      var event = {
        requestId: requestId,
        frameId: '1',
        loaderId: '1',
        timestamp: JSInspector.getTimestamp(),
        type: 'Other',
        response: response
      };
      this._agent.sendEvent('responseReceived', event);
    }
  }, {
    key: 'dataReceived',
    value: function dataReceived(id, data) {
      var requestId = String(id);
      var existingData = this._requests.get(requestId) || '';
      this._requests.set(requestId, existingData.concat(data));
      var event = {
        requestId: requestId,
        timestamp: JSInspector.getTimestamp(),
        dataLength: data.length,
        encodedDataLength: data.length
      };
      this._agent.sendEvent('dataReceived', event);
    }
  }, {
    key: 'loadingFinished',
    value: function loadingFinished(id, encodedDataLength) {
      var event = {
        requestId: String(id),
        timestamp: JSInspector.getTimestamp(),
        encodedDataLength: encodedDataLength
      };
      this._agent.sendEvent('loadingFinished', event);
    }
  }, {
    key: 'loadingFailed',
    value: function loadingFailed(id, error) {
      var event = {
        requestId: String(id),
        timestamp: JSInspector.getTimestamp(),
        type: 'Other',
        errorText: error
      };
      this._agent.sendEvent('loadingFailed', event);
    }
  }, {
    key: '_getMimeType',
    value: function _getMimeType(headers) {
      var contentType = headers['Content-Type'] || '';
      return contentType.split(';')[0];
    }
  }]);
  return Interceptor;
}();

var NetworkAgent = function (_InspectorAgent) {
  babelHelpers.inherits(NetworkAgent, _InspectorAgent);

  function NetworkAgent() {
    babelHelpers.classCallCheck(this, NetworkAgent);
    return babelHelpers.possibleConstructorReturn(this, (NetworkAgent.__proto__ || Object.getPrototypeOf(NetworkAgent)).apply(this, arguments));
  }

  babelHelpers.createClass(NetworkAgent, [{
    key: 'enable',
    value: function enable(_ref) {
      var maxResourceBufferSize = _ref.maxResourceBufferSize,
          maxTotalBufferSize = _ref.maxTotalBufferSize;

      this._interceptor = new Interceptor(this);
      XMLHttpRequest.setInterceptor(this._interceptor);
    }
  }, {
    key: 'disable',
    value: function disable() {
      XMLHttpRequest.setInterceptor(null);
      this._interceptor = null;
    }
  }, {
    key: 'getResponseBody',
    value: function getResponseBody(_ref2) {
      var requestId = _ref2.requestId;

      return { body: this.interceptor().getData(requestId), base64Encoded: false };
    }
  }, {
    key: 'interceptor',
    value: function interceptor() {
      if (this._interceptor) {
        return this._interceptor;
      } else {
        throw Error('_interceptor can not be null');
      }
    }
  }]);
  return NetworkAgent;
}(InspectorAgent);

NetworkAgent.DOMAIN = 'Network';


module.exports = NetworkAgent;
}, 548, null, "NetworkAgent");
__d(/* InspectorAgent */function(global, require, module, exports) {
'use strict';

var InspectorAgent = function () {
  function InspectorAgent(eventSender) {
    babelHelpers.classCallCheck(this, InspectorAgent);

    this._eventSender = eventSender;
  }

  babelHelpers.createClass(InspectorAgent, [{
    key: 'sendEvent',
    value: function sendEvent(name, params) {
      this._eventSender(name, params);
    }
  }]);
  return InspectorAgent;
}();

module.exports = InspectorAgent;
}, 549, null, "InspectorAgent");
__d(/* RCTNativeAppEventEmitter */function(global, require, module, exports) {
'use strict';

var BatchedBridge = require(350            ); // 350 = BatchedBridge
var RCTDeviceEventEmitter = require(379                    ); // 379 = RCTDeviceEventEmitter

var RCTNativeAppEventEmitter = RCTDeviceEventEmitter;

BatchedBridge.registerCallableModule('RCTNativeAppEventEmitter', RCTNativeAppEventEmitter);

module.exports = RCTNativeAppEventEmitter;
}, 550, null, "RCTNativeAppEventEmitter");
__d(/* PerformanceLogger */function(global, require, module, exports) {
'use strict';

var BatchedBridge = require(350            ); // 350 = BatchedBridge
var performanceNow = global.nativePerformanceNow || require(362                      ); // 362 = fbjs/lib/performanceNow

var timespans = {};
var extras = {};

var PerformanceLogger = {
  addTimespan: function addTimespan(key, lengthInMs, description) {
    if (timespans[key]) {
      if (__DEV__) {
        console.log('PerformanceLogger: Attempting to add a timespan that already exists ', key);
      }
      return;
    }

    timespans[key] = {
      description: description,
      totalTime: lengthInMs
    };
  },
  startTimespan: function startTimespan(key, description) {
    if (timespans[key]) {
      if (__DEV__) {
        console.log('PerformanceLogger: Attempting to start a timespan that already exists ', key);
      }
      return;
    }

    timespans[key] = {
      description: description,
      startTime: performanceNow()
    };
  },
  stopTimespan: function stopTimespan(key) {
    if (!timespans[key] || !timespans[key].startTime) {
      if (__DEV__) {
        console.log('PerformanceLogger: Attempting to end a timespan that has not started ', key);
      }
      return;
    }
    if (timespans[key].endTime) {
      if (__DEV__) {
        console.log('PerformanceLogger: Attempting to end a timespan that has already ended ', key);
      }
      return;
    }

    timespans[key].endTime = performanceNow();
    timespans[key].totalTime = timespans[key].endTime - timespans[key].startTime;
  },
  clear: function clear() {
    timespans = {};
    extras = {};
  },
  clearExceptTimespans: function clearExceptTimespans(keys) {
    timespans = Object.keys(timespans).reduce(function (previous, key) {
      if (keys.indexOf(key) !== -1) {
        previous[key] = timespans[key];
      }
      return previous;
    }, {});
    extras = {};
  },
  getTimespans: function getTimespans() {
    return timespans;
  },
  hasTimespan: function hasTimespan(key) {
    return !!timespans[key];
  },
  logTimespans: function logTimespans() {
    for (var key in timespans) {
      if (timespans[key].totalTime) {
        console.log(key + ': ' + timespans[key].totalTime + 'ms');
      }
    }
  },
  addTimespans: function addTimespans(newTimespans, labels) {
    for (var i = 0, l = newTimespans.length; i < l; i += 2) {
      var label = labels[i / 2];
      PerformanceLogger.addTimespan(label, newTimespans[i + 1] - newTimespans[i], label);
    }
  },
  setExtra: function setExtra(key, value) {
    if (extras[key]) {
      if (__DEV__) {
        console.log('PerformanceLogger: Attempting to set an extra that already exists ', key);
      }
      return;
    }
    extras[key] = value;
  },
  getExtras: function getExtras() {
    return extras;
  }
};

BatchedBridge.registerCallableModule('PerformanceLogger', PerformanceLogger);

module.exports = PerformanceLogger;
}, 551, null, "PerformanceLogger");
__d(/* RCTEventEmitter */function(global, require, module, exports) {
'use strict';

var BatchedBridge = require(350            ); // 350 = BatchedBridge

var RCTEventEmitter = {
  register: function register(eventEmitter) {
    BatchedBridge.registerCallableModule('RCTEventEmitter', eventEmitter);
  }
};

module.exports = RCTEventEmitter;
}, 552, null, "RCTEventEmitter");
__d(/* ReactDefaultBatchingStrategy */function(global, require, module, exports) {

'use strict';

var ReactUpdates = require(464           ); // 464 = ReactUpdates
var Transaction = require(472          ); // 472 = Transaction

var emptyFunction = require(336                     ); // 336 = fbjs/lib/emptyFunction

var RESET_BATCHED_UPDATES = {
  initialize: emptyFunction,
  close: function close() {
    ReactDefaultBatchingStrategy.isBatchingUpdates = false;
  }
};

var FLUSH_BATCHED_UPDATES = {
  initialize: emptyFunction,
  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
};

var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];

function ReactDefaultBatchingStrategyTransaction() {
  this.reinitializeTransaction();
}

babelHelpers.extends(ReactDefaultBatchingStrategyTransaction.prototype, Transaction, {
  getTransactionWrappers: function getTransactionWrappers() {
    return TRANSACTION_WRAPPERS;
  }
});

var transaction = new ReactDefaultBatchingStrategyTransaction();

var ReactDefaultBatchingStrategy = {
  isBatchingUpdates: false,

  batchedUpdates: function batchedUpdates(callback, a, b, c, d, e) {
    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;

    ReactDefaultBatchingStrategy.isBatchingUpdates = true;

    if (alreadyBatchingUpdates) {
      return callback(a, b, c, d, e);
    } else {
      return transaction.perform(callback, null, a, b, c, d, e);
    }
  }
};

module.exports = ReactDefaultBatchingStrategy;
}, 553, null, "ReactDefaultBatchingStrategy");
__d(/* ReactNativeBridgeEventPlugin */function(global, require, module, exports) {
'use strict';

var EventPropagators = require(555               ); // 555 = EventPropagators
var SyntheticEvent = require(556             ); // 556 = SyntheticEvent
var UIManager = require(395        ); // 395 = UIManager

var warning = require(335               ); // 335 = fbjs/lib/warning

var customBubblingEventTypes = UIManager.customBubblingEventTypes;
var customDirectEventTypes = UIManager.customDirectEventTypes;

var allTypesByEventName = {};

for (var bubblingTypeName in customBubblingEventTypes) {
  allTypesByEventName[bubblingTypeName] = customBubblingEventTypes[bubblingTypeName];
}

for (var directTypeName in customDirectEventTypes) {
  warning(!customBubblingEventTypes[directTypeName], 'Event cannot be both direct and bubbling: %s', directTypeName);
  allTypesByEventName[directTypeName] = customDirectEventTypes[directTypeName];
}

var ReactNativeBridgeEventPlugin = {

  eventTypes: babelHelpers.extends({}, customBubblingEventTypes, customDirectEventTypes),

  extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var bubbleDispatchConfig = customBubblingEventTypes[topLevelType];
    var directDispatchConfig = customDirectEventTypes[topLevelType];
    var event = SyntheticEvent.getPooled(bubbleDispatchConfig || directDispatchConfig, targetInst, nativeEvent, nativeEventTarget);
    if (bubbleDispatchConfig) {
      EventPropagators.accumulateTwoPhaseDispatches(event);
    } else if (directDispatchConfig) {
      EventPropagators.accumulateDirectDispatches(event);
    } else {
      return null;
    }
    return event;
  }
};

module.exports = ReactNativeBridgeEventPlugin;
}, 554, null, "ReactNativeBridgeEventPlugin");
__d(/* EventPropagators */function(global, require, module, exports) {

'use strict';

var EventPluginHub = require(456             ); // 456 = EventPluginHub
var EventPluginUtils = require(458               ); // 458 = EventPluginUtils

var accumulateInto = require(460             ); // 460 = accumulateInto
var forEachAccumulated = require(461                 ); // 461 = forEachAccumulated
var warning = require(335               ); // 335 = fbjs/lib/warning

var getListener = EventPluginHub.getListener;

function listenerAtPhase(inst, event, propagationPhase) {
  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
  return getListener(inst, registrationName);
}

function accumulateDirectionalDispatches(inst, phase, event) {
  if (__DEV__) {
    warning(inst, 'Dispatching inst must not be null');
  }
  var listener = listenerAtPhase(inst, event, phase);
  if (listener) {
    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
  }
}

function accumulateTwoPhaseDispatchesSingle(event) {
  if (event && event.dispatchConfig.phasedRegistrationNames) {
    EventPluginUtils.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
  }
}

function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
  if (event && event.dispatchConfig.phasedRegistrationNames) {
    var targetInst = event._targetInst;
    var parentInst = targetInst ? EventPluginUtils.getParentInstance(targetInst) : null;
    EventPluginUtils.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);
  }
}

function accumulateDispatches(inst, ignoredDirection, event) {
  if (event && event.dispatchConfig.registrationName) {
    var registrationName = event.dispatchConfig.registrationName;
    var listener = getListener(inst, registrationName);
    if (listener) {
      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
    }
  }
}

function accumulateDirectDispatchesSingle(event) {
  if (event && event.dispatchConfig.registrationName) {
    accumulateDispatches(event._targetInst, null, event);
  }
}

function accumulateTwoPhaseDispatches(events) {
  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
}

function accumulateTwoPhaseDispatchesSkipTarget(events) {
  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
}

function accumulateEnterLeaveDispatches(leave, enter, from, to) {
  EventPluginUtils.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
}

function accumulateDirectDispatches(events) {
  forEachAccumulated(events, accumulateDirectDispatchesSingle);
}

var EventPropagators = {
  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
  accumulateDirectDispatches: accumulateDirectDispatches,
  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
};

module.exports = EventPropagators;
}, 555, null, "EventPropagators");
__d(/* SyntheticEvent */function(global, require, module, exports) {

'use strict';

var PooledClass = require(466          ); // 466 = PooledClass

var emptyFunction = require(336                     ); // 336 = fbjs/lib/emptyFunction
var warning = require(335               ); // 335 = fbjs/lib/warning

var didWarnForAddedNewProperty = false;
var isProxySupported = typeof Proxy === 'function';

var shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];

var EventInterface = {
  type: null,
  target: null,

  currentTarget: emptyFunction.thatReturnsNull,
  eventPhase: null,
  bubbles: null,
  cancelable: null,
  timeStamp: function timeStamp(event) {
    return event.timeStamp || Date.now();
  },
  defaultPrevented: null,
  isTrusted: null
};

function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
  if (__DEV__) {
    delete this.nativeEvent;
    delete this.preventDefault;
    delete this.stopPropagation;
  }

  this.dispatchConfig = dispatchConfig;
  this._targetInst = targetInst;
  this.nativeEvent = nativeEvent;

  var Interface = this.constructor.Interface;
  for (var propName in Interface) {
    if (!Interface.hasOwnProperty(propName)) {
      continue;
    }
    if (__DEV__) {
      delete this[propName];
    }
    var normalize = Interface[propName];
    if (normalize) {
      this[propName] = normalize(nativeEvent);
    } else {
      if (propName === 'target') {
        this.target = nativeEventTarget;
      } else {
        this[propName] = nativeEvent[propName];
      }
    }
  }

  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
  if (defaultPrevented) {
    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
  } else {
    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
  }
  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
  return this;
}

babelHelpers.extends(SyntheticEvent.prototype, {

  preventDefault: function preventDefault() {
    this.defaultPrevented = true;
    var event = this.nativeEvent;
    if (!event) {
      return;
    }

    if (event.preventDefault) {
      event.preventDefault();
    } else if (typeof event.returnValue !== 'unknown') {
      event.returnValue = false;
    }
    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
  },

  stopPropagation: function stopPropagation() {
    var event = this.nativeEvent;
    if (!event) {
      return;
    }

    if (event.stopPropagation) {
      event.stopPropagation();
    } else if (typeof event.cancelBubble !== 'unknown') {
      event.cancelBubble = true;
    }

    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
  },

  persist: function persist() {
    this.isPersistent = emptyFunction.thatReturnsTrue;
  },

  isPersistent: emptyFunction.thatReturnsFalse,

  destructor: function destructor() {
    var Interface = this.constructor.Interface;
    for (var propName in Interface) {
      if (__DEV__) {
        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
      } else {
        this[propName] = null;
      }
    }
    for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
      this[shouldBeReleasedProperties[i]] = null;
    }
    if (__DEV__) {
      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));
      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));
      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));
    }
  }

});

SyntheticEvent.Interface = EventInterface;

if (__DEV__) {
  if (isProxySupported) {
    SyntheticEvent = new Proxy(SyntheticEvent, {
      construct: function construct(target, args) {
        return this.apply(target, Object.create(target.prototype), args);
      },
      apply: function apply(constructor, that, args) {
        return new Proxy(constructor.apply(that, args), {
          set: function set(target, prop, value) {
            if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {
              warning(didWarnForAddedNewProperty || target.isPersistent(), 'This synthetic event is reused for performance reasons. If you\'re ' + 'seeing this, you\'re adding a new property in the synthetic event object. ' + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.');
              didWarnForAddedNewProperty = true;
            }
            target[prop] = value;
            return true;
          }
        });
      }
    });
  }
}

SyntheticEvent.augmentClass = function (Class, Interface) {
  var Super = this;

  var E = function E() {};
  E.prototype = Super.prototype;
  var prototype = new E();

  babelHelpers.extends(prototype, Class.prototype);
  Class.prototype = prototype;
  Class.prototype.constructor = Class;

  Class.Interface = babelHelpers.extends({}, Super.Interface, Interface);
  Class.augmentClass = Super.augmentClass;

  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);
};

PooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);

module.exports = SyntheticEvent;

function getPooledWarningPropertyDefinition(propName, getVal) {
  var isFunction = typeof getVal === 'function';
  return {
    configurable: true,
    set: set,
    get: get
  };

  function set(val) {
    var action = isFunction ? 'setting the method' : 'setting the property';
    warn(action, 'This is effectively a no-op');
    return val;
  }

  function get() {
    var action = isFunction ? 'accessing the method' : 'accessing the property';
    var result = isFunction ? 'This is a no-op function' : 'This is set to null';
    warn(action, result);
    return getVal;
  }

  function warn(action, result) {
    var warningCondition = false;
    warning(warningCondition, 'This synthetic event is reused for performance reasons. If you\'re seeing this, ' + 'you\'re %s `%s` on a released/nullified synthetic event. %s. ' + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result);
  }
}
}, 556, null, "SyntheticEvent");
__d(/* ReactNativeComponentEnvironment */function(global, require, module, exports) {
'use strict';

var ReactNativeDOMIDOperations = require(558                         ); // 558 = ReactNativeDOMIDOperations
var ReactNativeReconcileTransaction = require(559                              ); // 559 = ReactNativeReconcileTransaction

var ReactNativeComponentEnvironment = {

  processChildrenUpdates: ReactNativeDOMIDOperations.dangerouslyProcessChildrenUpdates,

  replaceNodeWithMarkup: ReactNativeDOMIDOperations.dangerouslyReplaceNodeWithMarkupByID,

  clearNode: function clearNode() {},

  ReactReconcileTransaction: ReactNativeReconcileTransaction
};

module.exports = ReactNativeComponentEnvironment;
}, 557, null, "ReactNativeComponentEnvironment");
__d(/* ReactNativeDOMIDOperations */function(global, require, module, exports) {
'use strict';

var ReactNativeComponentTree = require(454                       ); // 454 = ReactNativeComponentTree
var UIManager = require(395        ); // 395 = UIManager

var dangerouslyProcessChildrenUpdates = function dangerouslyProcessChildrenUpdates(inst, childrenUpdates) {
  if (!childrenUpdates.length) {
    return;
  }

  var containerTag = ReactNativeComponentTree.getNodeFromInstance(inst);

  var moveFromIndices;
  var moveToIndices;
  var addChildTags;
  var addAtIndices;
  var removeAtIndices;

  for (var i = 0; i < childrenUpdates.length; i++) {
    var update = childrenUpdates[i];
    if (update.type === 'MOVE_EXISTING') {
      (moveFromIndices || (moveFromIndices = [])).push(update.fromIndex);
      (moveToIndices || (moveToIndices = [])).push(update.toIndex);
    } else if (update.type === 'REMOVE_NODE') {
      (removeAtIndices || (removeAtIndices = [])).push(update.fromIndex);
    } else if (update.type === 'INSERT_MARKUP') {
      var mountImage = update.content;
      var tag = mountImage;
      (addAtIndices || (addAtIndices = [])).push(update.toIndex);
      (addChildTags || (addChildTags = [])).push(tag);
    }
  }

  UIManager.manageChildren(containerTag, moveFromIndices, moveToIndices, addChildTags, addAtIndices, removeAtIndices);
};

var ReactNativeDOMIDOperations = {
  dangerouslyProcessChildrenUpdates: dangerouslyProcessChildrenUpdates,

  dangerouslyReplaceNodeWithMarkupByID: function dangerouslyReplaceNodeWithMarkupByID(id, mountImage) {
    var oldTag = id;
    UIManager.replaceExistingNonRootView(oldTag, mountImage);
  }
};

module.exports = ReactNativeDOMIDOperations;
}, 558, null, "ReactNativeDOMIDOperations");
__d(/* ReactNativeReconcileTransaction */function(global, require, module, exports) {
'use strict';

var CallbackQueue = require(465            ); // 465 = CallbackQueue
var PooledClass = require(466          ); // 466 = PooledClass
var Transaction = require(472          ); // 472 = Transaction
var ReactInstrumentation = require(471                   ); // 471 = ReactInstrumentation
var ReactUpdateQueue = require(545               ); // 545 = ReactUpdateQueue

var ON_DOM_READY_QUEUEING = {
  initialize: function initialize() {
    this.reactMountReady.reset();
  },

  close: function close() {
    this.reactMountReady.notifyAll();
  }
};

var TRANSACTION_WRAPPERS = [ON_DOM_READY_QUEUEING];

if (__DEV__) {
  TRANSACTION_WRAPPERS.push({
    initialize: ReactInstrumentation.debugTool.onBeginFlush,
    close: ReactInstrumentation.debugTool.onEndFlush
  });
}

function ReactNativeReconcileTransaction() {
  this.reinitializeTransaction();
  this.reactMountReady = CallbackQueue.getPooled(null);
}

var Mixin = {
  getTransactionWrappers: function getTransactionWrappers() {
    return TRANSACTION_WRAPPERS;
  },

  getReactMountReady: function getReactMountReady() {
    return this.reactMountReady;
  },

  getUpdateQueue: function getUpdateQueue() {
    return ReactUpdateQueue;
  },

  checkpoint: function checkpoint() {
    return this.reactMountReady.checkpoint();
  },

  rollback: function rollback(checkpoint) {
    this.reactMountReady.rollback(checkpoint);
  },

  destructor: function destructor() {
    CallbackQueue.release(this.reactMountReady);
    this.reactMountReady = null;
  }
};

babelHelpers.extends(ReactNativeReconcileTransaction.prototype, Transaction, ReactNativeReconcileTransaction, Mixin);

PooledClass.addPoolingTo(ReactNativeReconcileTransaction);

module.exports = ReactNativeReconcileTransaction;
}, 559, null, "ReactNativeReconcileTransaction");
__d(/* ReactNativeEventPluginOrder */function(global, require, module, exports) {
'use strict';

var ReactNativeEventPluginOrder = ['ResponderEventPlugin', 'ReactNativeBridgeEventPlugin'];

module.exports = ReactNativeEventPluginOrder;
}, 560, null, "ReactNativeEventPluginOrder");
__d(/* ReactNativeGlobalResponderHandler */function(global, require, module, exports) {
'use strict';

var UIManager = require(395        ); // 395 = UIManager

var ReactNativeGlobalResponderHandler = {
  onChange: function onChange(from, to, blockNativeResponder) {
    if (to !== null) {
      UIManager.setJSResponder(to._rootNodeID, blockNativeResponder);
    } else {
      UIManager.clearJSResponder();
    }
  }
};

module.exports = ReactNativeGlobalResponderHandler;
}, 561, null, "ReactNativeGlobalResponderHandler");
__d(/* ReactNativeTextComponent */function(global, require, module, exports) {

'use strict';

var ReactNativeComponentTree = require(454                       ); // 454 = ReactNativeComponentTree
var ReactNativeTagHandles = require(463                    ); // 463 = ReactNativeTagHandles
var UIManager = require(395        ); // 395 = UIManager

var invariant = require(346                 ); // 346 = fbjs/lib/invariant

var ReactNativeTextComponent = function ReactNativeTextComponent(text) {
  this._currentElement = text;
  this._stringText = '' + text;
  this._hostParent = null;
  this._rootNodeID = 0;
};

babelHelpers.extends(ReactNativeTextComponent.prototype, {

  mountComponent: function mountComponent(transaction, hostParent, hostContainerInfo, context) {
    invariant(context.isInAParentText, 'RawText "%s" must be wrapped in an explicit <Text> component.', this._stringText);
    this._hostParent = hostParent;
    var tag = ReactNativeTagHandles.allocateTag();
    this._rootNodeID = tag;
    var nativeTopRootTag = hostContainerInfo._tag;
    UIManager.createView(tag, 'RCTRawText', nativeTopRootTag, { text: this._stringText });

    ReactNativeComponentTree.precacheNode(this, tag);

    return tag;
  },

  getHostNode: function getHostNode() {
    return this._rootNodeID;
  },

  receiveComponent: function receiveComponent(nextText, transaction, context) {
    if (nextText !== this._currentElement) {
      this._currentElement = nextText;
      var nextStringText = '' + nextText;
      if (nextStringText !== this._stringText) {
        this._stringText = nextStringText;
        UIManager.updateView(this._rootNodeID, 'RCTRawText', { text: this._stringText });
      }
    }
  },

  unmountComponent: function unmountComponent() {
    ReactNativeComponentTree.uncacheNode(this);
    this._currentElement = null;
    this._stringText = null;
    this._rootNodeID = 0;
  }

});

module.exports = ReactNativeTextComponent;
}, 562, null, "ReactNativeTextComponent");
__d(/* ReactNativeTreeTraversal */function(global, require, module, exports) {

'use strict';

function getLowestCommonAncestor(instA, instB) {
  var depthA = 0;
  for (var tempA = instA; tempA; tempA = tempA._hostParent) {
    depthA++;
  }
  var depthB = 0;
  for (var tempB = instB; tempB; tempB = tempB._hostParent) {
    depthB++;
  }

  while (depthA - depthB > 0) {
    instA = instA._hostParent;
    depthA--;
  }

  while (depthB - depthA > 0) {
    instB = instB._hostParent;
    depthB--;
  }

  var depth = depthA;
  while (depth--) {
    if (instA === instB) {
      return instA;
    }
    instA = instA._hostParent;
    instB = instB._hostParent;
  }
  return null;
}

function isAncestor(instA, instB) {
  while (instB) {
    if (instB === instA) {
      return true;
    }
    instB = instB._hostParent;
  }
  return false;
}

function getParentInstance(inst) {
  return inst._hostParent;
}

function traverseTwoPhase(inst, fn, arg) {
  var path = [];
  while (inst) {
    path.push(inst);
    inst = inst._hostParent;
  }
  var i;
  for (i = path.length; i-- > 0;) {
    fn(path[i], 'captured', arg);
  }
  for (i = 0; i < path.length; i++) {
    fn(path[i], 'bubbled', arg);
  }
}

function traverseEnterLeave(from, to, fn, argFrom, argTo) {
  var common = from && to ? getLowestCommonAncestor(from, to) : null;
  var pathFrom = [];
  while (from && from !== common) {
    pathFrom.push(from);
    from = from._hostParent;
  }
  var pathTo = [];
  while (to && to !== common) {
    pathTo.push(to);
    to = to._hostParent;
  }
  var i;
  for (i = 0; i < pathFrom.length; i++) {
    fn(pathFrom[i], 'bubbled', argFrom);
  }
  for (i = pathTo.length; i-- > 0;) {
    fn(pathTo[i], 'captured', argTo);
  }
}

module.exports = {
  isAncestor: isAncestor,
  getLowestCommonAncestor: getLowestCommonAncestor,
  getParentInstance: getParentInstance,
  traverseTwoPhase: traverseTwoPhase,
  traverseEnterLeave: traverseEnterLeave
};
}, 563, null, "ReactNativeTreeTraversal");
__d(/* ReactSimpleEmptyComponent */function(global, require, module, exports) {

'use strict';

var ReactReconciler = require(468              ); // 468 = ReactReconciler

var ReactSimpleEmptyComponent = function ReactSimpleEmptyComponent(placeholderElement, instantiate) {
  this._currentElement = null;
  this._renderedComponent = instantiate(placeholderElement);
};
babelHelpers.extends(ReactSimpleEmptyComponent.prototype, {
  mountComponent: function mountComponent(transaction, hostParent, hostContainerInfo, context, parentDebugID) {
    return ReactReconciler.mountComponent(this._renderedComponent, transaction, hostParent, hostContainerInfo, context, parentDebugID);
  },
  receiveComponent: function receiveComponent() {},
  getHostNode: function getHostNode() {
    return ReactReconciler.getHostNode(this._renderedComponent);
  },
  unmountComponent: function unmountComponent() {
    ReactReconciler.unmountComponent(this._renderedComponent);
    this._renderedComponent = null;
  }
});

module.exports = ReactSimpleEmptyComponent;
}, 564, null, "ReactSimpleEmptyComponent");
__d(/* ResponderEventPlugin */function(global, require, module, exports) {

'use strict';

var EventPluginUtils = require(458               ); // 458 = EventPluginUtils
var EventPropagators = require(555               ); // 555 = EventPropagators
var ResponderSyntheticEvent = require(566                      ); // 566 = ResponderSyntheticEvent
var ResponderTouchHistoryStore = require(567                         ); // 567 = ResponderTouchHistoryStore

var accumulate = require(568         ); // 568 = accumulate

var isStartish = EventPluginUtils.isStartish;
var isMoveish = EventPluginUtils.isMoveish;
var isEndish = EventPluginUtils.isEndish;
var executeDirectDispatch = EventPluginUtils.executeDirectDispatch;
var hasDispatches = EventPluginUtils.hasDispatches;
var executeDispatchesInOrderStopAtTrue = EventPluginUtils.executeDispatchesInOrderStopAtTrue;

var responderInst = null;

var trackedTouchCount = 0;

var previousActiveTouches = 0;

var changeResponder = function changeResponder(nextResponderInst, blockHostResponder) {
  var oldResponderInst = responderInst;
  responderInst = nextResponderInst;
  if (ResponderEventPlugin.GlobalResponderHandler !== null) {
    ResponderEventPlugin.GlobalResponderHandler.onChange(oldResponderInst, nextResponderInst, blockHostResponder);
  }
};

var eventTypes = {
  startShouldSetResponder: {
    phasedRegistrationNames: {
      bubbled: 'onStartShouldSetResponder',
      captured: 'onStartShouldSetResponderCapture'
    }
  },

  scrollShouldSetResponder: {
    phasedRegistrationNames: {
      bubbled: 'onScrollShouldSetResponder',
      captured: 'onScrollShouldSetResponderCapture'
    }
  },

  selectionChangeShouldSetResponder: {
    phasedRegistrationNames: {
      bubbled: 'onSelectionChangeShouldSetResponder',
      captured: 'onSelectionChangeShouldSetResponderCapture'
    }
  },

  moveShouldSetResponder: {
    phasedRegistrationNames: {
      bubbled: 'onMoveShouldSetResponder',
      captured: 'onMoveShouldSetResponderCapture'
    }
  },

  responderStart: { registrationName: 'onResponderStart' },
  responderMove: { registrationName: 'onResponderMove' },
  responderEnd: { registrationName: 'onResponderEnd' },
  responderRelease: { registrationName: 'onResponderRelease' },
  responderTerminationRequest: {
    registrationName: 'onResponderTerminationRequest'
  },
  responderGrant: { registrationName: 'onResponderGrant' },
  responderReject: { registrationName: 'onResponderReject' },
  responderTerminate: { registrationName: 'onResponderTerminate' }
};

function setResponderAndExtractTransfer(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
  var shouldSetEventType = isStartish(topLevelType) ? eventTypes.startShouldSetResponder : isMoveish(topLevelType) ? eventTypes.moveShouldSetResponder : topLevelType === 'topSelectionChange' ? eventTypes.selectionChangeShouldSetResponder : eventTypes.scrollShouldSetResponder;

  var bubbleShouldSetFrom = !responderInst ? targetInst : EventPluginUtils.getLowestCommonAncestor(responderInst, targetInst);

  var skipOverBubbleShouldSetFrom = bubbleShouldSetFrom === responderInst;
  var shouldSetEvent = ResponderSyntheticEvent.getPooled(shouldSetEventType, bubbleShouldSetFrom, nativeEvent, nativeEventTarget);
  shouldSetEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;
  if (skipOverBubbleShouldSetFrom) {
    EventPropagators.accumulateTwoPhaseDispatchesSkipTarget(shouldSetEvent);
  } else {
    EventPropagators.accumulateTwoPhaseDispatches(shouldSetEvent);
  }
  var wantsResponderInst = executeDispatchesInOrderStopAtTrue(shouldSetEvent);
  if (!shouldSetEvent.isPersistent()) {
    shouldSetEvent.constructor.release(shouldSetEvent);
  }

  if (!wantsResponderInst || wantsResponderInst === responderInst) {
    return null;
  }
  var extracted;
  var grantEvent = ResponderSyntheticEvent.getPooled(eventTypes.responderGrant, wantsResponderInst, nativeEvent, nativeEventTarget);
  grantEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;

  EventPropagators.accumulateDirectDispatches(grantEvent);
  var blockHostResponder = executeDirectDispatch(grantEvent) === true;
  if (responderInst) {

    var terminationRequestEvent = ResponderSyntheticEvent.getPooled(eventTypes.responderTerminationRequest, responderInst, nativeEvent, nativeEventTarget);
    terminationRequestEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;
    EventPropagators.accumulateDirectDispatches(terminationRequestEvent);
    var shouldSwitch = !hasDispatches(terminationRequestEvent) || executeDirectDispatch(terminationRequestEvent);
    if (!terminationRequestEvent.isPersistent()) {
      terminationRequestEvent.constructor.release(terminationRequestEvent);
    }

    if (shouldSwitch) {
      var terminateEvent = ResponderSyntheticEvent.getPooled(eventTypes.responderTerminate, responderInst, nativeEvent, nativeEventTarget);
      terminateEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;
      EventPropagators.accumulateDirectDispatches(terminateEvent);
      extracted = accumulate(extracted, [grantEvent, terminateEvent]);
      changeResponder(wantsResponderInst, blockHostResponder);
    } else {
      var rejectEvent = ResponderSyntheticEvent.getPooled(eventTypes.responderReject, wantsResponderInst, nativeEvent, nativeEventTarget);
      rejectEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;
      EventPropagators.accumulateDirectDispatches(rejectEvent);
      extracted = accumulate(extracted, rejectEvent);
    }
  } else {
    extracted = accumulate(extracted, grantEvent);
    changeResponder(wantsResponderInst, blockHostResponder);
  }
  return extracted;
}

function canTriggerTransfer(topLevelType, topLevelInst, nativeEvent) {
  return topLevelInst && (topLevelType === 'topScroll' && !nativeEvent.responderIgnoreScroll || trackedTouchCount > 0 && topLevelType === 'topSelectionChange' || isStartish(topLevelType) || isMoveish(topLevelType));
}

function noResponderTouches(nativeEvent) {
  var touches = nativeEvent.touches;
  if (!touches || touches.length === 0) {
    return true;
  }
  for (var i = 0; i < touches.length; i++) {
    var activeTouch = touches[i];
    var target = activeTouch.target;
    if (target !== null && target !== undefined && target !== 0) {
      var targetInst = EventPluginUtils.getInstanceFromNode(target);
      if (EventPluginUtils.isAncestor(responderInst, targetInst)) {
        return false;
      }
    }
  }
  return true;
}

var ResponderEventPlugin = {
  _getResponderID: function _getResponderID() {
    return responderInst ? responderInst._rootNodeID : null;
  },

  eventTypes: eventTypes,

  extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    if (isStartish(topLevelType)) {
      trackedTouchCount += 1;
    } else if (isEndish(topLevelType)) {
      if (trackedTouchCount >= 0) {
        trackedTouchCount -= 1;
      } else {
        console.error('Ended a touch event which was not counted in `trackedTouchCount`.');
        return null;
      }
    }

    ResponderTouchHistoryStore.recordTouchTrack(topLevelType, nativeEvent);

    var extracted = canTriggerTransfer(topLevelType, targetInst, nativeEvent) ? setResponderAndExtractTransfer(topLevelType, targetInst, nativeEvent, nativeEventTarget) : null;

    var isResponderTouchStart = responderInst && isStartish(topLevelType);
    var isResponderTouchMove = responderInst && isMoveish(topLevelType);
    var isResponderTouchEnd = responderInst && isEndish(topLevelType);
    var incrementalTouch = isResponderTouchStart ? eventTypes.responderStart : isResponderTouchMove ? eventTypes.responderMove : isResponderTouchEnd ? eventTypes.responderEnd : null;

    if (incrementalTouch) {
      var gesture = ResponderSyntheticEvent.getPooled(incrementalTouch, responderInst, nativeEvent, nativeEventTarget);
      gesture.touchHistory = ResponderTouchHistoryStore.touchHistory;
      EventPropagators.accumulateDirectDispatches(gesture);
      extracted = accumulate(extracted, gesture);
    }

    var isResponderTerminate = responderInst && topLevelType === 'topTouchCancel';
    var isResponderRelease = responderInst && !isResponderTerminate && isEndish(topLevelType) && noResponderTouches(nativeEvent);
    var finalTouch = isResponderTerminate ? eventTypes.responderTerminate : isResponderRelease ? eventTypes.responderRelease : null;
    if (finalTouch) {
      var finalEvent = ResponderSyntheticEvent.getPooled(finalTouch, responderInst, nativeEvent, nativeEventTarget);
      finalEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;
      EventPropagators.accumulateDirectDispatches(finalEvent);
      extracted = accumulate(extracted, finalEvent);
      changeResponder(null);
    }

    var numberActiveTouches = ResponderTouchHistoryStore.touchHistory.numberActiveTouches;
    if (ResponderEventPlugin.GlobalInteractionHandler && numberActiveTouches !== previousActiveTouches) {
      ResponderEventPlugin.GlobalInteractionHandler.onChange(numberActiveTouches);
    }
    previousActiveTouches = numberActiveTouches;

    return extracted;
  },

  GlobalResponderHandler: null,
  GlobalInteractionHandler: null,

  injection: {
    injectGlobalResponderHandler: function injectGlobalResponderHandler(GlobalResponderHandler) {
      ResponderEventPlugin.GlobalResponderHandler = GlobalResponderHandler;
    },

    injectGlobalInteractionHandler: function injectGlobalInteractionHandler(GlobalInteractionHandler) {
      ResponderEventPlugin.GlobalInteractionHandler = GlobalInteractionHandler;
    }
  }
};

module.exports = ResponderEventPlugin;
}, 565, null, "ResponderEventPlugin");
__d(/* ResponderSyntheticEvent */function(global, require, module, exports) {

'use strict';

var SyntheticEvent = require(556             ); // 556 = SyntheticEvent

var ResponderEventInterface = {
  touchHistory: function touchHistory(nativeEvent) {
    return null;
  }
};

function ResponderSyntheticEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(ResponderSyntheticEvent, ResponderEventInterface);

module.exports = ResponderSyntheticEvent;
}, 566, null, "ResponderSyntheticEvent");
__d(/* ResponderTouchHistoryStore */function(global, require, module, exports) {

'use strict';

var EventPluginUtils = require(458               ); // 458 = EventPluginUtils

var invariant = require(346                 ); // 346 = fbjs/lib/invariant
var warning = require(335               ); // 335 = fbjs/lib/warning

var isEndish = EventPluginUtils.isEndish,
    isMoveish = EventPluginUtils.isMoveish,
    isStartish = EventPluginUtils.isStartish;


var MAX_TOUCH_BANK = 20;
var touchBank = [];
var touchHistory = {
  touchBank: touchBank,
  numberActiveTouches: 0,

  indexOfSingleActiveTouch: -1,
  mostRecentTimeStamp: 0
};

function timestampForTouch(touch) {
  return touch.timeStamp || touch.timestamp;
}

function createTouchRecord(touch) {
  return {
    touchActive: true,
    startPageX: touch.pageX,
    startPageY: touch.pageY,
    startTimeStamp: timestampForTouch(touch),
    currentPageX: touch.pageX,
    currentPageY: touch.pageY,
    currentTimeStamp: timestampForTouch(touch),
    previousPageX: touch.pageX,
    previousPageY: touch.pageY,
    previousTimeStamp: timestampForTouch(touch)
  };
}

function resetTouchRecord(touchRecord, touch) {
  touchRecord.touchActive = true;
  touchRecord.startPageX = touch.pageX;
  touchRecord.startPageY = touch.pageY;
  touchRecord.startTimeStamp = timestampForTouch(touch);
  touchRecord.currentPageX = touch.pageX;
  touchRecord.currentPageY = touch.pageY;
  touchRecord.currentTimeStamp = timestampForTouch(touch);
  touchRecord.previousPageX = touch.pageX;
  touchRecord.previousPageY = touch.pageY;
  touchRecord.previousTimeStamp = timestampForTouch(touch);
}

function getTouchIdentifier(_ref) {
  var identifier = _ref.identifier;

  invariant(identifier != null, 'Touch object is missing identifier.');
  warning(identifier <= MAX_TOUCH_BANK, 'Touch identifier %s is greater than maximum supported %s which causes ' + 'performance issues backfilling array locations for all of the indices.', identifier, MAX_TOUCH_BANK);
  return identifier;
}

function recordTouchStart(touch) {
  var identifier = getTouchIdentifier(touch);
  var touchRecord = touchBank[identifier];
  if (touchRecord) {
    resetTouchRecord(touchRecord, touch);
  } else {
    touchBank[identifier] = createTouchRecord(touch);
  }
  touchHistory.mostRecentTimeStamp = timestampForTouch(touch);
}

function recordTouchMove(touch) {
  var touchRecord = touchBank[getTouchIdentifier(touch)];
  if (touchRecord) {
    touchRecord.touchActive = true;
    touchRecord.previousPageX = touchRecord.currentPageX;
    touchRecord.previousPageY = touchRecord.currentPageY;
    touchRecord.previousTimeStamp = touchRecord.currentTimeStamp;
    touchRecord.currentPageX = touch.pageX;
    touchRecord.currentPageY = touch.pageY;
    touchRecord.currentTimeStamp = timestampForTouch(touch);
    touchHistory.mostRecentTimeStamp = timestampForTouch(touch);
  } else {
    console.error('Cannot record touch move without a touch start.\n' + 'Touch Move: %s\n', 'Touch Bank: %s', printTouch(touch), printTouchBank());
  }
}

function recordTouchEnd(touch) {
  var touchRecord = touchBank[getTouchIdentifier(touch)];
  if (touchRecord) {
    touchRecord.touchActive = false;
    touchRecord.previousPageX = touchRecord.currentPageX;
    touchRecord.previousPageY = touchRecord.currentPageY;
    touchRecord.previousTimeStamp = touchRecord.currentTimeStamp;
    touchRecord.currentPageX = touch.pageX;
    touchRecord.currentPageY = touch.pageY;
    touchRecord.currentTimeStamp = timestampForTouch(touch);
    touchHistory.mostRecentTimeStamp = timestampForTouch(touch);
  } else {
    console.error('Cannot record touch end without a touch start.\n' + 'Touch End: %s\n', 'Touch Bank: %s', printTouch(touch), printTouchBank());
  }
}

function printTouch(touch) {
  return JSON.stringify({
    identifier: touch.identifier,
    pageX: touch.pageX,
    pageY: touch.pageY,
    timestamp: timestampForTouch(touch)
  });
}

function printTouchBank() {
  var printed = JSON.stringify(touchBank.slice(0, MAX_TOUCH_BANK));
  if (touchBank.length > MAX_TOUCH_BANK) {
    printed += ' (original size: ' + touchBank.length + ')';
  }
  return printed;
}

var ResponderTouchHistoryStore = {
  recordTouchTrack: function recordTouchTrack(topLevelType, nativeEvent) {
    if (isMoveish(topLevelType)) {
      nativeEvent.changedTouches.forEach(recordTouchMove);
    } else if (isStartish(topLevelType)) {
      nativeEvent.changedTouches.forEach(recordTouchStart);
      touchHistory.numberActiveTouches = nativeEvent.touches.length;
      if (touchHistory.numberActiveTouches === 1) {
        touchHistory.indexOfSingleActiveTouch = nativeEvent.touches[0].identifier;
      }
    } else if (isEndish(topLevelType)) {
      nativeEvent.changedTouches.forEach(recordTouchEnd);
      touchHistory.numberActiveTouches = nativeEvent.touches.length;
      if (touchHistory.numberActiveTouches === 1) {
        for (var i = 0; i < touchBank.length; i++) {
          var touchTrackToCheck = touchBank[i];
          if (touchTrackToCheck != null && touchTrackToCheck.touchActive) {
            touchHistory.indexOfSingleActiveTouch = i;
            break;
          }
        }
        if (__DEV__) {
          var activeRecord = touchBank[touchHistory.indexOfSingleActiveTouch];
          warning(activeRecord != null && activeRecord.touchActive, 'Cannot find single active touch.');
        }
      }
    }
  },


  touchHistory: touchHistory
};

module.exports = ResponderTouchHistoryStore;
}, 567, null, "ResponderTouchHistoryStore");
__d(/* accumulate */function(global, require, module, exports) {

'use strict';

var invariant = require(346                 ); // 346 = fbjs/lib/invariant

function accumulate(current, next) {
  invariant(next != null, 'accumulate(...): Accumulated items must be not be null or undefined.');

  if (current == null) {
    return next;
  }

  if (Array.isArray(current)) {
    return current.concat(next);
  }

  if (Array.isArray(next)) {
    return [current].concat(next);
  }

  return [current, next];
}

module.exports = accumulate;
}, 568, null, "accumulate");
__d(/* TouchableWithoutFeedback */function(global, require, module, exports) {
'use strict';

var EdgeInsetsPropType = require(442                 ); // 442 = EdgeInsetsPropType
var React = require(398    ); // 398 = React
var TimerMixin = require(570                ); // 570 = react-timer-mixin
var Touchable = require(506        ); // 506 = Touchable
var View = require(441   ); // 441 = View

var ensurePositiveDelayProps = require(571                       ); // 571 = ensurePositiveDelayProps
var warning = require(335               ); // 335 = fbjs/lib/warning

var PRESS_RETENTION_OFFSET = { top: 20, left: 20, right: 20, bottom: 30 };

var TouchableWithoutFeedback = React.createClass({
  displayName: 'TouchableWithoutFeedback',

  mixins: [TimerMixin, Touchable.Mixin],

  propTypes: {
    accessible: React.PropTypes.bool,
    accessibilityComponentType: React.PropTypes.oneOf(View.AccessibilityComponentType),
    accessibilityTraits: React.PropTypes.oneOfType([React.PropTypes.oneOf(View.AccessibilityTraits), React.PropTypes.arrayOf(React.PropTypes.oneOf(View.AccessibilityTraits))]),

    disabled: React.PropTypes.bool,

    onPress: React.PropTypes.func,
    onPressIn: React.PropTypes.func,
    onPressOut: React.PropTypes.func,

    onLayout: React.PropTypes.func,

    onLongPress: React.PropTypes.func,

    delayPressIn: React.PropTypes.number,

    delayPressOut: React.PropTypes.number,

    delayLongPress: React.PropTypes.number,

    pressRetentionOffset: EdgeInsetsPropType,

    hitSlop: EdgeInsetsPropType
  },

  getInitialState: function getInitialState() {
    return this.touchableGetInitialState();
  },

  componentDidMount: function componentDidMount() {
    ensurePositiveDelayProps(this.props);
  },

  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    ensurePositiveDelayProps(nextProps);
  },

  touchableHandlePress: function touchableHandlePress(e) {
    this.props.onPress && this.props.onPress(e);
  },

  touchableHandleActivePressIn: function touchableHandleActivePressIn(e) {
    this.props.onPressIn && this.props.onPressIn(e);
  },

  touchableHandleActivePressOut: function touchableHandleActivePressOut(e) {
    this.props.onPressOut && this.props.onPressOut(e);
  },

  touchableHandleLongPress: function touchableHandleLongPress(e) {
    this.props.onLongPress && this.props.onLongPress(e);
  },

  touchableGetPressRectOffset: function touchableGetPressRectOffset() {
    return this.props.pressRetentionOffset || PRESS_RETENTION_OFFSET;
  },

  touchableGetHitSlop: function touchableGetHitSlop() {
    return this.props.hitSlop;
  },

  touchableGetHighlightDelayMS: function touchableGetHighlightDelayMS() {
    return this.props.delayPressIn || 0;
  },

  touchableGetLongPressDelayMS: function touchableGetLongPressDelayMS() {
    return this.props.delayLongPress === 0 ? 0 : this.props.delayLongPress || 500;
  },

  touchableGetPressOutDelayMS: function touchableGetPressOutDelayMS() {
    return this.props.delayPressOut || 0;
  },

  render: function render() {
    var child = React.Children.only(this.props.children);
    var children = child.props.children;
    warning(!child.type || child.type.displayName !== 'Text', 'TouchableWithoutFeedback does not work well with Text children. Wrap children in a View instead. See ' + (child._owner && child._owner.getName && child._owner.getName() || '<unknown>'));
    if (Touchable.TOUCH_TARGET_DEBUG && child.type && child.type.displayName === 'View') {
      children = React.Children.toArray(children);
      children.push(Touchable.renderDebugView({ color: 'red', hitSlop: this.props.hitSlop }));
    }
    var style = Touchable.TOUCH_TARGET_DEBUG && child.type && child.type.displayName === 'Text' ? [child.props.style, { color: 'red' }] : child.props.style;
    return React.cloneElement(child, {
      accessible: this.props.accessible !== false,
      accessibilityLabel: this.props.accessibilityLabel,
      accessibilityComponentType: this.props.accessibilityComponentType,
      accessibilityTraits: this.props.accessibilityTraits,
      testID: this.props.testID,
      onLayout: this.props.onLayout,
      hitSlop: this.props.hitSlop,
      onStartShouldSetResponder: this.touchableHandleStartShouldSetResponder,
      onResponderTerminationRequest: this.touchableHandleResponderTerminationRequest,
      onResponderGrant: this.touchableHandleResponderGrant,
      onResponderMove: this.touchableHandleResponderMove,
      onResponderRelease: this.touchableHandleResponderRelease,
      onResponderTerminate: this.touchableHandleResponderTerminate,
      style: style,
      children: children
    });
  }
});

module.exports = TouchableWithoutFeedback;
}, 569, null, "TouchableWithoutFeedback");
__d(/* react-timer-mixin/TimerMixin.js */function(global, require, module, exports) {
'use strict';

var GLOBAL = typeof window === 'undefined' ? global : window;

var setter = function setter(_setter, _clearer, array) {
  return function (callback, delta) {
    var id = _setter(function () {
      _clearer.call(this, id);
      callback.apply(this, arguments);
    }.bind(this), delta);

    if (!this[array]) {
      this[array] = [id];
    } else {
      this[array].push(id);
    }
    return id;
  };
};

var clearer = function clearer(_clearer, array) {
  return function (id) {
    if (this[array]) {
      var index = this[array].indexOf(id);
      if (index !== -1) {
        this[array].splice(index, 1);
      }
    }
    _clearer(id);
  };
};

var _timeouts = 'TimerMixin_timeouts';
var _clearTimeout = clearer(GLOBAL.clearTimeout, _timeouts);
var _setTimeout = setter(GLOBAL.setTimeout, _clearTimeout, _timeouts);

var _intervals = 'TimerMixin_intervals';
var _clearInterval = clearer(GLOBAL.clearInterval, _intervals);
var _setInterval = setter(GLOBAL.setInterval, function () {}, _intervals);

var _immediates = 'TimerMixin_immediates';
var _clearImmediate = clearer(GLOBAL.clearImmediate, _immediates);
var _setImmediate = setter(GLOBAL.setImmediate, _clearImmediate, _immediates);

var _rafs = 'TimerMixin_rafs';
var _cancelAnimationFrame = clearer(GLOBAL.cancelAnimationFrame, _rafs);
var _requestAnimationFrame = setter(GLOBAL.requestAnimationFrame, _cancelAnimationFrame, _rafs);

var TimerMixin = {
  componentWillUnmount: function componentWillUnmount() {
    this[_timeouts] && this[_timeouts].forEach(function (id) {
      GLOBAL.clearTimeout(id);
    });
    this[_timeouts] = null;
    this[_intervals] && this[_intervals].forEach(function (id) {
      GLOBAL.clearInterval(id);
    });
    this[_intervals] = null;
    this[_immediates] && this[_immediates].forEach(function (id) {
      GLOBAL.clearImmediate(id);
    });
    this[_immediates] = null;
    this[_rafs] && this[_rafs].forEach(function (id) {
      GLOBAL.cancelAnimationFrame(id);
    });
    this[_rafs] = null;
  },

  setTimeout: _setTimeout,
  clearTimeout: _clearTimeout,

  setInterval: _setInterval,
  clearInterval: _clearInterval,

  setImmediate: _setImmediate,
  clearImmediate: _clearImmediate,

  requestAnimationFrame: _requestAnimationFrame,
  cancelAnimationFrame: _cancelAnimationFrame
};

module.exports = TimerMixin;
}, 570, null, "react-timer-mixin/TimerMixin.js");
__d(/* ensurePositiveDelayProps */function(global, require, module, exports) {
'use strict';

var invariant = require(346                 ); // 346 = fbjs/lib/invariant

var ensurePositiveDelayProps = function ensurePositiveDelayProps(props) {
  invariant(!(props.delayPressIn < 0 || props.delayPressOut < 0 || props.delayLongPress < 0), 'Touchable components cannot have negative delay properties');
};

module.exports = ensurePositiveDelayProps;
}, 571, null, "ensurePositiveDelayProps");
__d(/* TouchableOpacity */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native/Libraries/Components/Touchable/TouchableOpacity.js';


var Animated = require(573       ); // 573 = Animated
var Easing = require(583     ); // 583 = Easing
var NativeMethodsMixin = require(341                 ); // 341 = NativeMethodsMixin
var React = require(398    ); // 398 = React
var TimerMixin = require(570                ); // 570 = react-timer-mixin
var Touchable = require(506        ); // 506 = Touchable
var TouchableWithoutFeedback = require(569                       ); // 569 = TouchableWithoutFeedback

var ensurePositiveDelayProps = require(571                       ); // 571 = ensurePositiveDelayProps
var flattenStyle = require(345           ); // 345 = flattenStyle

var PRESS_RETENTION_OFFSET = { top: 20, left: 20, right: 20, bottom: 30 };

var TouchableOpacity = React.createClass({
  displayName: 'TouchableOpacity',

  mixins: [TimerMixin, Touchable.Mixin, NativeMethodsMixin],

  propTypes: babelHelpers.extends({}, TouchableWithoutFeedback.propTypes, {
    activeOpacity: React.PropTypes.number,
    focusedOpacity: React.PropTypes.number,

    tvParallaxProperties: React.PropTypes.object
  }),

  getDefaultProps: function getDefaultProps() {
    return {
      activeOpacity: 0.2,
      focusedOpacity: 0.7
    };
  },

  getInitialState: function getInitialState() {
    return babelHelpers.extends({}, this.touchableGetInitialState(), {
      anim: new Animated.Value(1)
    });
  },

  componentDidMount: function componentDidMount() {
    ensurePositiveDelayProps(this.props);
  },

  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    ensurePositiveDelayProps(nextProps);
  },

  setOpacityTo: function setOpacityTo(value, duration) {
    Animated.timing(this.state.anim, {
      toValue: value,
      duration: duration,
      easing: Easing.inOut(Easing.quad),
      useNativeDriver: true
    }).start();
  },

  touchableHandleActivePressIn: function touchableHandleActivePressIn(e) {
    if (e.dispatchConfig.registrationName === 'onResponderGrant') {
      this._opacityActive(0);
    } else {
      this._opacityActive(150);
    }
    this.props.onPressIn && this.props.onPressIn(e);
  },

  touchableHandleActivePressOut: function touchableHandleActivePressOut(e) {
    this._opacityInactive(250);
    this.props.onPressOut && this.props.onPressOut(e);
  },

  touchableHandlePress: function touchableHandlePress(e) {
    this.props.onPress && this.props.onPress(e);
  },

  touchableHandleLongPress: function touchableHandleLongPress(e) {
    this.props.onLongPress && this.props.onLongPress(e);
  },

  touchableGetPressRectOffset: function touchableGetPressRectOffset() {
    return this.props.pressRetentionOffset || PRESS_RETENTION_OFFSET;
  },

  touchableGetHitSlop: function touchableGetHitSlop() {
    return this.props.hitSlop;
  },

  touchableGetHighlightDelayMS: function touchableGetHighlightDelayMS() {
    return this.props.delayPressIn || 0;
  },

  touchableGetLongPressDelayMS: function touchableGetLongPressDelayMS() {
    return this.props.delayLongPress === 0 ? 0 : this.props.delayLongPress || 500;
  },

  touchableGetPressOutDelayMS: function touchableGetPressOutDelayMS() {
    return this.props.delayPressOut;
  },

  _opacityActive: function _opacityActive(duration) {
    this.setOpacityTo(this.props.activeOpacity, duration);
  },

  _opacityInactive: function _opacityInactive(duration) {
    var childStyle = flattenStyle(this.props.style) || {};
    this.setOpacityTo(childStyle.opacity === undefined ? 1 : childStyle.opacity, duration);
  },

  _opacityFocused: function _opacityFocused() {
    this.setOpacityTo(this.props.focusedOpacity);
  },

  render: function render() {
    return React.createElement(
      Animated.View,
      {
        accessible: this.props.accessible !== false,
        accessibilityLabel: this.props.accessibilityLabel,
        accessibilityComponentType: this.props.accessibilityComponentType,
        accessibilityTraits: this.props.accessibilityTraits,
        style: [this.props.style, { opacity: this.state.anim }],
        testID: this.props.testID,
        onLayout: this.props.onLayout,
        isTVSelectable: true,
        tvParallaxProperties: this.props.tvParallaxProperties,
        hitSlop: this.props.hitSlop,
        onStartShouldSetResponder: this.touchableHandleStartShouldSetResponder,
        onResponderTerminationRequest: this.touchableHandleResponderTerminationRequest,
        onResponderGrant: this.touchableHandleResponderGrant,
        onResponderMove: this.touchableHandleResponderMove,
        onResponderRelease: this.touchableHandleResponderRelease,
        onResponderTerminate: this.touchableHandleResponderTerminate, __source: {
          fileName: _jsxFileName,
          lineNumber: 171
        }
      },
      this.props.children,
      Touchable.renderDebugView({ color: 'cyan', hitSlop: this.props.hitSlop })
    );
  }
});

module.exports = TouchableOpacity;
}, 572, null, "TouchableOpacity");
__d(/* Animated */function(global, require, module, exports) {
'use strict';

var AnimatedImplementation = require(574                     ); // 574 = AnimatedImplementation
var Image = require(585    ); // 585 = Image
var Text = require(505   ); // 505 = Text
var View = require(441   ); // 441 = View
var ScrollView = require(587         ); // 587 = ScrollView

module.exports = babelHelpers.extends({}, AnimatedImplementation, {
  View: AnimatedImplementation.createAnimatedComponent(View),
  Text: AnimatedImplementation.createAnimatedComponent(Text),
  Image: AnimatedImplementation.createAnimatedComponent(Image),
  ScrollView: AnimatedImplementation.createAnimatedComponent(ScrollView)
});
}, 573, null, "Animated");
__d(/* AnimatedImplementation */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native/Libraries/Animated/src/AnimatedImplementation.js';
var InteractionManager = require(575                 ); // 575 = InteractionManager
var Interpolation = require(578            ); // 578 = Interpolation
var NativeAnimatedHelper = require(579                   ); // 579 = NativeAnimatedHelper
var React = require(398    ); // 398 = React
var Set = require(541  ); // 541 = Set
var SpringConfig = require(580           ); // 580 = SpringConfig
var ViewStylePropTypes = require(434                 ); // 434 = ViewStylePropTypes

var findNodeHandle = require(396             ); // 396 = findNodeHandle
var flattenStyle = require(345           ); // 345 = flattenStyle
var invariant = require(346                 ); // 346 = fbjs/lib/invariant
var requestAnimationFrame = require(581                             ); // 581 = fbjs/lib/requestAnimationFrame

var NativeAnimatedAPI = NativeAnimatedHelper.API;

var warnedMissingNativeAnimated = false;

function shouldUseNativeDriver(config) {
  if (config.useNativeDriver && !NativeAnimatedHelper.isNativeAnimatedAvailable()) {
    if (!warnedMissingNativeAnimated) {
      console.warn('Animated: `useNativeDriver` is not supported because the native ' + 'animated module is missing. Falling back to JS-based animation. To ' + 'resolve this, add `RCTAnimation` module to this app, or remove ' + '`useNativeDriver`. ' + 'More info: https://github.com/facebook/react-native/issues/11094#issuecomment-263240420');
      warnedMissingNativeAnimated = true;
    }
    return false;
  }

  return config.useNativeDriver || false;
}

var Animated = function () {
  function Animated() {
    babelHelpers.classCallCheck(this, Animated);
  }

  babelHelpers.createClass(Animated, [{
    key: '__attach',
    value: function __attach() {}
  }, {
    key: '__detach',
    value: function __detach() {
      if (this.__isNative && this.__nativeTag != null) {
        NativeAnimatedAPI.dropAnimatedNode(this.__nativeTag);
        this.__nativeTag = undefined;
      }
    }
  }, {
    key: '__getValue',
    value: function __getValue() {}
  }, {
    key: '__getAnimatedValue',
    value: function __getAnimatedValue() {
      return this.__getValue();
    }
  }, {
    key: '__addChild',
    value: function __addChild(child) {}
  }, {
    key: '__removeChild',
    value: function __removeChild(child) {}
  }, {
    key: '__getChildren',
    value: function __getChildren() {
      return [];
    }
  }, {
    key: '__makeNative',
    value: function __makeNative() {
      if (!this.__isNative) {
        throw new Error('This node cannot be made a "native" animated node');
      }
    }
  }, {
    key: '__getNativeTag',
    value: function __getNativeTag() {
      NativeAnimatedHelper.assertNativeAnimatedModule();
      invariant(this.__isNative, 'Attempt to get native tag from node not marked as "native"');
      if (this.__nativeTag == null) {
        var nativeTag = NativeAnimatedHelper.generateNewNodeTag();
        NativeAnimatedAPI.createAnimatedNode(nativeTag, this.__getNativeConfig());
        this.__nativeTag = nativeTag;
      }
      return this.__nativeTag;
    }
  }, {
    key: '__getNativeConfig',
    value: function __getNativeConfig() {
      throw new Error('This JS animated node type cannot be used as native animated node');
    }
  }, {
    key: 'toJSON',
    value: function toJSON() {
      return this.__getValue();
    }
  }]);
  return Animated;
}();

var Animation = function () {
  function Animation() {
    babelHelpers.classCallCheck(this, Animation);
  }

  babelHelpers.createClass(Animation, [{
    key: 'start',
    value: function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {}
  }, {
    key: 'stop',
    value: function stop() {
      if (this.__nativeId) {
        NativeAnimatedAPI.stopAnimation(this.__nativeId);
      }
    }
  }, {
    key: '__getNativeAnimationConfig',
    value: function __getNativeAnimationConfig() {
      throw new Error('This animation type cannot be offloaded to native');
    }
  }, {
    key: '__debouncedOnEnd',
    value: function __debouncedOnEnd(result) {
      var onEnd = this.__onEnd;
      this.__onEnd = null;
      onEnd && onEnd(result);
    }
  }, {
    key: '__startNativeAnimation',
    value: function __startNativeAnimation(animatedValue) {
      animatedValue.__makeNative();
      this.__nativeId = NativeAnimatedHelper.generateNewAnimationId();
      NativeAnimatedAPI.startAnimatingNode(this.__nativeId, animatedValue.__getNativeTag(), this.__getNativeAnimationConfig(), this.__debouncedOnEnd.bind(this));
    }
  }]);
  return Animation;
}();

var AnimatedWithChildren = function (_Animated) {
  babelHelpers.inherits(AnimatedWithChildren, _Animated);

  function AnimatedWithChildren() {
    babelHelpers.classCallCheck(this, AnimatedWithChildren);

    var _this = babelHelpers.possibleConstructorReturn(this, (AnimatedWithChildren.__proto__ || Object.getPrototypeOf(AnimatedWithChildren)).call(this));

    _this._children = [];
    return _this;
  }

  babelHelpers.createClass(AnimatedWithChildren, [{
    key: '__makeNative',
    value: function __makeNative() {
      if (!this.__isNative) {
        this.__isNative = true;
        for (var _iterator = this._children, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === 'function' ? Symbol.iterator : '@@iterator']();;) {
          var _ref;

          if (_isArray) {
            if (_i >= _iterator.length) break;
            _ref = _iterator[_i++];
          } else {
            _i = _iterator.next();
            if (_i.done) break;
            _ref = _i.value;
          }

          var child = _ref;

          child.__makeNative();
          NativeAnimatedAPI.connectAnimatedNodes(this.__getNativeTag(), child.__getNativeTag());
        }
      }
    }
  }, {
    key: '__addChild',
    value: function __addChild(child) {
      if (this._children.length === 0) {
        this.__attach();
      }
      this._children.push(child);
      if (this.__isNative) {
        child.__makeNative();
        NativeAnimatedAPI.connectAnimatedNodes(this.__getNativeTag(), child.__getNativeTag());
      }
    }
  }, {
    key: '__removeChild',
    value: function __removeChild(child) {
      var index = this._children.indexOf(child);
      if (index === -1) {
        console.warn('Trying to remove a child that doesn\'t exist');
        return;
      }
      if (this.__isNative && child.__isNative) {
        NativeAnimatedAPI.disconnectAnimatedNodes(this.__getNativeTag(), child.__getNativeTag());
      }
      this._children.splice(index, 1);
      if (this._children.length === 0) {
        this.__detach();
      }
    }
  }, {
    key: '__getChildren',
    value: function __getChildren() {
      return this._children;
    }
  }]);
  return AnimatedWithChildren;
}(Animated);

function _flush(rootNode) {
  var animatedStyles = new Set();
  function findAnimatedStyles(node) {
    if (typeof node.update === 'function') {
      animatedStyles.add(node);
    } else {
      node.__getChildren().forEach(findAnimatedStyles);
    }
  }
  findAnimatedStyles(rootNode);

  animatedStyles.forEach(function (animatedStyle) {
    return animatedStyle.update();
  });
}

var _easeInOut = void 0;
function easeInOut() {
  if (!_easeInOut) {
    var Easing = require(583     ); // 583 = Easing
    _easeInOut = Easing.inOut(Easing.ease);
  }
  return _easeInOut;
}

var TimingAnimation = function (_Animation) {
  babelHelpers.inherits(TimingAnimation, _Animation);

  function TimingAnimation(config) {
    babelHelpers.classCallCheck(this, TimingAnimation);

    var _this2 = babelHelpers.possibleConstructorReturn(this, (TimingAnimation.__proto__ || Object.getPrototypeOf(TimingAnimation)).call(this));

    _this2._toValue = config.toValue;
    _this2._easing = config.easing !== undefined ? config.easing : easeInOut();
    _this2._duration = config.duration !== undefined ? config.duration : 500;
    _this2._delay = config.delay !== undefined ? config.delay : 0;
    _this2.__isInteraction = config.isInteraction !== undefined ? config.isInteraction : true;
    _this2._useNativeDriver = shouldUseNativeDriver(config);
    return _this2;
  }

  babelHelpers.createClass(TimingAnimation, [{
    key: '__getNativeAnimationConfig',
    value: function __getNativeAnimationConfig() {
      var frameDuration = 1000.0 / 60.0;
      var frames = [];
      for (var dt = 0.0; dt < this._duration; dt += frameDuration) {
        frames.push(this._easing(dt / this._duration));
      }
      frames.push(this._easing(1));
      return {
        type: 'frames',
        frames: frames,
        toValue: this._toValue,
        delay: this._delay
      };
    }
  }, {
    key: 'start',
    value: function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {
      var _this3 = this;

      this.__active = true;
      this._fromValue = fromValue;
      this._onUpdate = onUpdate;
      this.__onEnd = onEnd;

      var start = function start() {
        if (_this3._duration === 0 && !_this3._useNativeDriver) {
          _this3._onUpdate(_this3._toValue);
          _this3.__debouncedOnEnd({ finished: true });
        } else {
          _this3._startTime = Date.now();
          if (_this3._useNativeDriver) {
            _this3.__startNativeAnimation(animatedValue);
          } else {
            _this3._animationFrame = requestAnimationFrame(_this3.onUpdate.bind(_this3));
          }
        }
      };
      if (this._delay) {
        this._timeout = setTimeout(start, this._delay);
      } else {
        start();
      }
    }
  }, {
    key: 'onUpdate',
    value: function onUpdate() {
      var now = Date.now();
      if (now >= this._startTime + this._duration) {
        if (this._duration === 0) {
          this._onUpdate(this._toValue);
        } else {
          this._onUpdate(this._fromValue + this._easing(1) * (this._toValue - this._fromValue));
        }
        this.__debouncedOnEnd({ finished: true });
        return;
      }

      this._onUpdate(this._fromValue + this._easing((now - this._startTime) / this._duration) * (this._toValue - this._fromValue));
      if (this.__active) {
        this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));
      }
    }
  }, {
    key: 'stop',
    value: function stop() {
      babelHelpers.get(TimingAnimation.prototype.__proto__ || Object.getPrototypeOf(TimingAnimation.prototype), 'stop', this).call(this);
      this.__active = false;
      clearTimeout(this._timeout);
      global.cancelAnimationFrame(this._animationFrame);
      this.__debouncedOnEnd({ finished: false });
    }
  }]);
  return TimingAnimation;
}(Animation);

var DecayAnimation = function (_Animation2) {
  babelHelpers.inherits(DecayAnimation, _Animation2);

  function DecayAnimation(config) {
    babelHelpers.classCallCheck(this, DecayAnimation);

    var _this4 = babelHelpers.possibleConstructorReturn(this, (DecayAnimation.__proto__ || Object.getPrototypeOf(DecayAnimation)).call(this));

    _this4._deceleration = config.deceleration !== undefined ? config.deceleration : 0.998;
    _this4._velocity = config.velocity;
    _this4._useNativeDriver = shouldUseNativeDriver(config);
    _this4.__isInteraction = config.isInteraction !== undefined ? config.isInteraction : true;
    return _this4;
  }

  babelHelpers.createClass(DecayAnimation, [{
    key: '__getNativeAnimationConfig',
    value: function __getNativeAnimationConfig() {
      return {
        type: 'decay',
        deceleration: this._deceleration,
        velocity: this._velocity
      };
    }
  }, {
    key: 'start',
    value: function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {
      this.__active = true;
      this._lastValue = fromValue;
      this._fromValue = fromValue;
      this._onUpdate = onUpdate;
      this.__onEnd = onEnd;
      this._startTime = Date.now();
      if (this._useNativeDriver) {
        this.__startNativeAnimation(animatedValue);
      } else {
        this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));
      }
    }
  }, {
    key: 'onUpdate',
    value: function onUpdate() {
      var now = Date.now();

      var value = this._fromValue + this._velocity / (1 - this._deceleration) * (1 - Math.exp(-(1 - this._deceleration) * (now - this._startTime)));

      this._onUpdate(value);

      if (Math.abs(this._lastValue - value) < 0.1) {
        this.__debouncedOnEnd({ finished: true });
        return;
      }

      this._lastValue = value;
      if (this.__active) {
        this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));
      }
    }
  }, {
    key: 'stop',
    value: function stop() {
      babelHelpers.get(DecayAnimation.prototype.__proto__ || Object.getPrototypeOf(DecayAnimation.prototype), 'stop', this).call(this);
      this.__active = false;
      global.cancelAnimationFrame(this._animationFrame);
      this.__debouncedOnEnd({ finished: false });
    }
  }]);
  return DecayAnimation;
}(Animation);

function withDefault(value, defaultValue) {
  if (value === undefined || value === null) {
    return defaultValue;
  }
  return value;
}

var SpringAnimation = function (_Animation3) {
  babelHelpers.inherits(SpringAnimation, _Animation3);

  function SpringAnimation(config) {
    babelHelpers.classCallCheck(this, SpringAnimation);

    var _this5 = babelHelpers.possibleConstructorReturn(this, (SpringAnimation.__proto__ || Object.getPrototypeOf(SpringAnimation)).call(this));

    _this5._overshootClamping = withDefault(config.overshootClamping, false);
    _this5._restDisplacementThreshold = withDefault(config.restDisplacementThreshold, 0.001);
    _this5._restSpeedThreshold = withDefault(config.restSpeedThreshold, 0.001);
    _this5._initialVelocity = config.velocity;
    _this5._lastVelocity = withDefault(config.velocity, 0);
    _this5._toValue = config.toValue;
    _this5._useNativeDriver = shouldUseNativeDriver(config);
    _this5.__isInteraction = config.isInteraction !== undefined ? config.isInteraction : true;

    var springConfig;
    if (config.bounciness !== undefined || config.speed !== undefined) {
      invariant(config.tension === undefined && config.friction === undefined, 'You can only define bounciness/speed or tension/friction but not both');
      springConfig = SpringConfig.fromBouncinessAndSpeed(withDefault(config.bounciness, 8), withDefault(config.speed, 12));
    } else {
      springConfig = SpringConfig.fromOrigamiTensionAndFriction(withDefault(config.tension, 40), withDefault(config.friction, 7));
    }
    _this5._tension = springConfig.tension;
    _this5._friction = springConfig.friction;
    return _this5;
  }

  babelHelpers.createClass(SpringAnimation, [{
    key: '__getNativeAnimationConfig',
    value: function __getNativeAnimationConfig() {
      return {
        type: 'spring',
        overshootClamping: this._overshootClamping,
        restDisplacementThreshold: this._restDisplacementThreshold,
        restSpeedThreshold: this._restSpeedThreshold,
        tension: this._tension,
        friction: this._friction,
        initialVelocity: withDefault(this._initialVelocity, this._lastVelocity),
        toValue: this._toValue
      };
    }
  }, {
    key: 'start',
    value: function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {
      this.__active = true;
      this._startPosition = fromValue;
      this._lastPosition = this._startPosition;

      this._onUpdate = onUpdate;
      this.__onEnd = onEnd;
      this._lastTime = Date.now();

      if (previousAnimation instanceof SpringAnimation) {
        var internalState = previousAnimation.getInternalState();
        this._lastPosition = internalState.lastPosition;
        this._lastVelocity = internalState.lastVelocity;
        this._lastTime = internalState.lastTime;
      }
      if (this._initialVelocity !== undefined && this._initialVelocity !== null) {
        this._lastVelocity = this._initialVelocity;
      }
      if (this._useNativeDriver) {
        this.__startNativeAnimation(animatedValue);
      } else {
        this.onUpdate();
      }
    }
  }, {
    key: 'getInternalState',
    value: function getInternalState() {
      return {
        lastPosition: this._lastPosition,
        lastVelocity: this._lastVelocity,
        lastTime: this._lastTime
      };
    }
  }, {
    key: 'onUpdate',
    value: function onUpdate() {
      var position = this._lastPosition;
      var velocity = this._lastVelocity;

      var tempPosition = this._lastPosition;
      var tempVelocity = this._lastVelocity;

      var MAX_STEPS = 64;
      var now = Date.now();
      if (now > this._lastTime + MAX_STEPS) {
        now = this._lastTime + MAX_STEPS;
      }

      var TIMESTEP_MSEC = 1;
      var numSteps = Math.floor((now - this._lastTime) / TIMESTEP_MSEC);

      for (var i = 0; i < numSteps; ++i) {
        var step = TIMESTEP_MSEC / 1000;

        var aVelocity = velocity;
        var aAcceleration = this._tension * (this._toValue - tempPosition) - this._friction * tempVelocity;
        var tempPosition = position + aVelocity * step / 2;
        var tempVelocity = velocity + aAcceleration * step / 2;

        var bVelocity = tempVelocity;
        var bAcceleration = this._tension * (this._toValue - tempPosition) - this._friction * tempVelocity;
        tempPosition = position + bVelocity * step / 2;
        tempVelocity = velocity + bAcceleration * step / 2;

        var cVelocity = tempVelocity;
        var cAcceleration = this._tension * (this._toValue - tempPosition) - this._friction * tempVelocity;
        tempPosition = position + cVelocity * step / 2;
        tempVelocity = velocity + cAcceleration * step / 2;

        var dVelocity = tempVelocity;
        var dAcceleration = this._tension * (this._toValue - tempPosition) - this._friction * tempVelocity;
        tempPosition = position + cVelocity * step / 2;
        tempVelocity = velocity + cAcceleration * step / 2;

        var dxdt = (aVelocity + 2 * (bVelocity + cVelocity) + dVelocity) / 6;
        var dvdt = (aAcceleration + 2 * (bAcceleration + cAcceleration) + dAcceleration) / 6;

        position += dxdt * step;
        velocity += dvdt * step;
      }

      this._lastTime = now;
      this._lastPosition = position;
      this._lastVelocity = velocity;

      this._onUpdate(position);
      if (!this.__active) {
        return;
      }

      var isOvershooting = false;
      if (this._overshootClamping && this._tension !== 0) {
        if (this._startPosition < this._toValue) {
          isOvershooting = position > this._toValue;
        } else {
          isOvershooting = position < this._toValue;
        }
      }
      var isVelocity = Math.abs(velocity) <= this._restSpeedThreshold;
      var isDisplacement = true;
      if (this._tension !== 0) {
        isDisplacement = Math.abs(this._toValue - position) <= this._restDisplacementThreshold;
      }

      if (isOvershooting || isVelocity && isDisplacement) {
        if (this._tension !== 0) {
          this._onUpdate(this._toValue);
        }

        this.__debouncedOnEnd({ finished: true });
        return;
      }
      this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));
    }
  }, {
    key: 'stop',
    value: function stop() {
      babelHelpers.get(SpringAnimation.prototype.__proto__ || Object.getPrototypeOf(SpringAnimation.prototype), 'stop', this).call(this);
      this.__active = false;
      global.cancelAnimationFrame(this._animationFrame);
      this.__debouncedOnEnd({ finished: false });
    }
  }]);
  return SpringAnimation;
}(Animation);

var _uniqueId = 1;

var AnimatedValue = function (_AnimatedWithChildren) {
  babelHelpers.inherits(AnimatedValue, _AnimatedWithChildren);

  function AnimatedValue(value) {
    babelHelpers.classCallCheck(this, AnimatedValue);

    var _this6 = babelHelpers.possibleConstructorReturn(this, (AnimatedValue.__proto__ || Object.getPrototypeOf(AnimatedValue)).call(this));

    _this6._value = value;
    _this6._offset = 0;
    _this6._animation = null;
    _this6._listeners = {};
    return _this6;
  }

  babelHelpers.createClass(AnimatedValue, [{
    key: '__detach',
    value: function __detach() {
      this.stopAnimation();
      babelHelpers.get(AnimatedValue.prototype.__proto__ || Object.getPrototypeOf(AnimatedValue.prototype), '__detach', this).call(this);
    }
  }, {
    key: '__getValue',
    value: function __getValue() {
      return this._value + this._offset;
    }
  }, {
    key: '__makeNative',
    value: function __makeNative() {
      babelHelpers.get(AnimatedValue.prototype.__proto__ || Object.getPrototypeOf(AnimatedValue.prototype), '__makeNative', this).call(this);

      if (Object.keys(this._listeners).length) {
        this._startListeningToNativeValueUpdates();
      }
    }
  }, {
    key: 'setValue',
    value: function setValue(value) {
      if (this._animation) {
        this._animation.stop();
        this._animation = null;
      }
      this._updateValue(value, !this.__isNative);
      if (this.__isNative) {
        NativeAnimatedAPI.setAnimatedNodeValue(this.__getNativeTag(), value);
      }
    }
  }, {
    key: 'setOffset',
    value: function setOffset(offset) {
      this._offset = offset;
      if (this.__isNative) {
        NativeAnimatedAPI.setAnimatedNodeOffset(this.__getNativeTag(), offset);
      }
    }
  }, {
    key: 'flattenOffset',
    value: function flattenOffset() {
      this._value += this._offset;
      this._offset = 0;
      if (this.__isNative) {
        NativeAnimatedAPI.flattenAnimatedNodeOffset(this.__getNativeTag());
      }
    }
  }, {
    key: 'extractOffset',
    value: function extractOffset() {
      this._offset += this._value;
      this._value = 0;
      if (this.__isNative) {
        NativeAnimatedAPI.extractAnimatedNodeOffset(this.__getNativeTag());
      }
    }
  }, {
    key: 'addListener',
    value: function addListener(callback) {
      var id = String(_uniqueId++);
      this._listeners[id] = callback;
      if (this.__isNative) {
        this._startListeningToNativeValueUpdates();
      }
      return id;
    }
  }, {
    key: 'removeListener',
    value: function removeListener(id) {
      delete this._listeners[id];
      if (this.__isNative && Object.keys(this._listeners).length === 0) {
        this._stopListeningForNativeValueUpdates();
      }
    }
  }, {
    key: 'removeAllListeners',
    value: function removeAllListeners() {
      this._listeners = {};
      if (this.__isNative) {
        this._stopListeningForNativeValueUpdates();
      }
    }
  }, {
    key: '_startListeningToNativeValueUpdates',
    value: function _startListeningToNativeValueUpdates() {
      var _this7 = this;

      if (this.__nativeAnimatedValueListener) {
        return;
      }

      NativeAnimatedAPI.startListeningToAnimatedNodeValue(this.__getNativeTag());
      this.__nativeAnimatedValueListener = NativeAnimatedHelper.nativeEventEmitter.addListener('onAnimatedValueUpdate', function (data) {
        if (data.tag !== _this7.__getNativeTag()) {
          return;
        }
        _this7._updateValue(data.value, false);
      });
    }
  }, {
    key: '_stopListeningForNativeValueUpdates',
    value: function _stopListeningForNativeValueUpdates() {
      if (!this.__nativeAnimatedValueListener) {
        return;
      }

      this.__nativeAnimatedValueListener.remove();
      this.__nativeAnimatedValueListener = null;
      NativeAnimatedAPI.stopListeningToAnimatedNodeValue(this.__getNativeTag());
    }
  }, {
    key: 'stopAnimation',
    value: function stopAnimation(callback) {
      this.stopTracking();
      this._animation && this._animation.stop();
      this._animation = null;
      callback && callback(this.__getValue());
    }
  }, {
    key: 'interpolate',
    value: function interpolate(config) {
      return new AnimatedInterpolation(this, config);
    }
  }, {
    key: 'animate',
    value: function animate(animation, callback) {
      var _this8 = this;

      var handle = null;
      if (animation.__isInteraction) {
        handle = InteractionManager.createInteractionHandle();
      }
      var previousAnimation = this._animation;
      this._animation && this._animation.stop();
      this._animation = animation;
      animation.start(this._value, function (value) {
        _this8._updateValue(value, true);
      }, function (result) {
        _this8._animation = null;
        if (handle !== null) {
          InteractionManager.clearInteractionHandle(handle);
        }
        callback && callback(result);
      }, previousAnimation, this);
    }
  }, {
    key: 'stopTracking',
    value: function stopTracking() {
      this._tracking && this._tracking.__detach();
      this._tracking = null;
    }
  }, {
    key: 'track',
    value: function track(tracking) {
      this.stopTracking();
      this._tracking = tracking;
    }
  }, {
    key: '_updateValue',
    value: function _updateValue(value, flush) {
      this._value = value;
      if (flush) {
        _flush(this);
      }
      for (var key in this._listeners) {
        this._listeners[key]({ value: this.__getValue() });
      }
    }
  }, {
    key: '__getNativeConfig',
    value: function __getNativeConfig() {
      return {
        type: 'value',
        value: this._value,
        offset: this._offset
      };
    }
  }]);
  return AnimatedValue;
}(AnimatedWithChildren);

var AnimatedValueXY = function (_AnimatedWithChildren2) {
  babelHelpers.inherits(AnimatedValueXY, _AnimatedWithChildren2);

  function AnimatedValueXY(valueIn) {
    babelHelpers.classCallCheck(this, AnimatedValueXY);

    var _this9 = babelHelpers.possibleConstructorReturn(this, (AnimatedValueXY.__proto__ || Object.getPrototypeOf(AnimatedValueXY)).call(this));

    var value = valueIn || { x: 0, y: 0 };
    if (typeof value.x === 'number' && typeof value.y === 'number') {
      _this9.x = new AnimatedValue(value.x);
      _this9.y = new AnimatedValue(value.y);
    } else {
      invariant(value.x instanceof AnimatedValue && value.y instanceof AnimatedValue, 'AnimatedValueXY must be initalized with an object of numbers or ' + 'AnimatedValues.');
      _this9.x = value.x;
      _this9.y = value.y;
    }
    _this9._listeners = {};
    return _this9;
  }

  babelHelpers.createClass(AnimatedValueXY, [{
    key: 'setValue',
    value: function setValue(value) {
      this.x.setValue(value.x);
      this.y.setValue(value.y);
    }
  }, {
    key: 'setOffset',
    value: function setOffset(offset) {
      this.x.setOffset(offset.x);
      this.y.setOffset(offset.y);
    }
  }, {
    key: 'flattenOffset',
    value: function flattenOffset() {
      this.x.flattenOffset();
      this.y.flattenOffset();
    }
  }, {
    key: '__getValue',
    value: function __getValue() {
      return {
        x: this.x.__getValue(),
        y: this.y.__getValue()
      };
    }
  }, {
    key: 'stopAnimation',
    value: function stopAnimation(callback) {
      this.x.stopAnimation();
      this.y.stopAnimation();
      callback && callback(this.__getValue());
    }
  }, {
    key: 'addListener',
    value: function addListener(callback) {
      var _this10 = this;

      var id = String(_uniqueId++);
      var jointCallback = function jointCallback(_ref2) {
        var number = _ref2.value;

        callback(_this10.__getValue());
      };
      this._listeners[id] = {
        x: this.x.addListener(jointCallback),
        y: this.y.addListener(jointCallback)
      };
      return id;
    }
  }, {
    key: 'removeListener',
    value: function removeListener(id) {
      this.x.removeListener(this._listeners[id].x);
      this.y.removeListener(this._listeners[id].y);
      delete this._listeners[id];
    }
  }, {
    key: 'removeAllListeners',
    value: function removeAllListeners() {
      this.x.removeAllListeners();
      this.y.removeAllListeners();
      this._listeners = {};
    }
  }, {
    key: 'getLayout',
    value: function getLayout() {
      return {
        left: this.x,
        top: this.y
      };
    }
  }, {
    key: 'getTranslateTransform',
    value: function getTranslateTransform() {
      return [{ translateX: this.x }, { translateY: this.y }];
    }
  }]);
  return AnimatedValueXY;
}(AnimatedWithChildren);

var AnimatedInterpolation = function (_AnimatedWithChildren3) {
  babelHelpers.inherits(AnimatedInterpolation, _AnimatedWithChildren3);

  function AnimatedInterpolation(parent, config) {
    babelHelpers.classCallCheck(this, AnimatedInterpolation);

    var _this11 = babelHelpers.possibleConstructorReturn(this, (AnimatedInterpolation.__proto__ || Object.getPrototypeOf(AnimatedInterpolation)).call(this));

    _this11._parent = parent;
    _this11._config = config;
    _this11._interpolation = Interpolation.create(config);
    return _this11;
  }

  babelHelpers.createClass(AnimatedInterpolation, [{
    key: '__getValue',
    value: function __getValue() {
      var parentValue = this._parent.__getValue();
      invariant(typeof parentValue === 'number', 'Cannot interpolate an input which is not a number.');

      return this._interpolation(parentValue);
    }
  }, {
    key: 'interpolate',
    value: function interpolate(config) {
      return new AnimatedInterpolation(this, config);
    }
  }, {
    key: '__attach',
    value: function __attach() {
      this._parent.__addChild(this);
    }
  }, {
    key: '__detach',
    value: function __detach() {
      this._parent.__removeChild(this);
      babelHelpers.get(AnimatedInterpolation.prototype.__proto__ || Object.getPrototypeOf(AnimatedInterpolation.prototype), '__detach', this).call(this);
    }
  }, {
    key: '__transformDataType',
    value: function __transformDataType(range) {
      return range.map(function (value) {
        if (typeof value !== 'string') {
          return value;
        }
        if (/deg$/.test(value)) {
          var degrees = parseFloat(value, 10) || 0;
          var radians = degrees * Math.PI / 180.0;
          return radians;
        } else {
          return parseFloat(value, 10) || 0;
        }
      });
    }
  }, {
    key: '__getNativeConfig',
    value: function __getNativeConfig() {
      if (__DEV__) {
        NativeAnimatedHelper.validateInterpolation(this._config);
      }

      return {
        inputRange: this._config.inputRange,

        outputRange: this.__transformDataType(this._config.outputRange),
        extrapolateLeft: this._config.extrapolateLeft || this._config.extrapolate || 'extend',
        extrapolateRight: this._config.extrapolateRight || this._config.extrapolate || 'extend',
        type: 'interpolation'
      };
    }
  }]);
  return AnimatedInterpolation;
}(AnimatedWithChildren);

var AnimatedAddition = function (_AnimatedWithChildren4) {
  babelHelpers.inherits(AnimatedAddition, _AnimatedWithChildren4);

  function AnimatedAddition(a, b) {
    babelHelpers.classCallCheck(this, AnimatedAddition);

    var _this12 = babelHelpers.possibleConstructorReturn(this, (AnimatedAddition.__proto__ || Object.getPrototypeOf(AnimatedAddition)).call(this));

    _this12._a = typeof a === 'number' ? new AnimatedValue(a) : a;
    _this12._b = typeof b === 'number' ? new AnimatedValue(b) : b;
    return _this12;
  }

  babelHelpers.createClass(AnimatedAddition, [{
    key: '__makeNative',
    value: function __makeNative() {
      this._a.__makeNative();
      this._b.__makeNative();
      babelHelpers.get(AnimatedAddition.prototype.__proto__ || Object.getPrototypeOf(AnimatedAddition.prototype), '__makeNative', this).call(this);
    }
  }, {
    key: '__getValue',
    value: function __getValue() {
      return this._a.__getValue() + this._b.__getValue();
    }
  }, {
    key: 'interpolate',
    value: function interpolate(config) {
      return new AnimatedInterpolation(this, config);
    }
  }, {
    key: '__attach',
    value: function __attach() {
      this._a.__addChild(this);
      this._b.__addChild(this);
    }
  }, {
    key: '__detach',
    value: function __detach() {
      this._a.__removeChild(this);
      this._b.__removeChild(this);
      babelHelpers.get(AnimatedAddition.prototype.__proto__ || Object.getPrototypeOf(AnimatedAddition.prototype), '__detach', this).call(this);
    }
  }, {
    key: '__getNativeConfig',
    value: function __getNativeConfig() {
      return {
        type: 'addition',
        input: [this._a.__getNativeTag(), this._b.__getNativeTag()]
      };
    }
  }]);
  return AnimatedAddition;
}(AnimatedWithChildren);

var AnimatedDivision = function (_AnimatedWithChildren5) {
  babelHelpers.inherits(AnimatedDivision, _AnimatedWithChildren5);

  function AnimatedDivision(a, b) {
    babelHelpers.classCallCheck(this, AnimatedDivision);

    var _this13 = babelHelpers.possibleConstructorReturn(this, (AnimatedDivision.__proto__ || Object.getPrototypeOf(AnimatedDivision)).call(this));

    _this13._a = typeof a === 'number' ? new AnimatedValue(a) : a;
    _this13._b = typeof b === 'number' ? new AnimatedValue(b) : b;
    return _this13;
  }

  babelHelpers.createClass(AnimatedDivision, [{
    key: '__makeNative',
    value: function __makeNative() {
      babelHelpers.get(AnimatedDivision.prototype.__proto__ || Object.getPrototypeOf(AnimatedDivision.prototype), '__makeNative', this).call(this);
      this._a.__makeNative();
      this._b.__makeNative();
    }
  }, {
    key: '__getValue',
    value: function __getValue() {
      var a = this._a.__getValue();
      var b = this._b.__getValue();
      if (b === 0) {
        console.error('Detected division by zero in AnimatedDivision');
      }
      return a / b;
    }
  }, {
    key: 'interpolate',
    value: function interpolate(config) {
      return new AnimatedInterpolation(this, config);
    }
  }, {
    key: '__attach',
    value: function __attach() {
      this._a.__addChild(this);
      this._b.__addChild(this);
    }
  }, {
    key: '__detach',
    value: function __detach() {
      this._a.__removeChild(this);
      this._b.__removeChild(this);
      babelHelpers.get(AnimatedDivision.prototype.__proto__ || Object.getPrototypeOf(AnimatedDivision.prototype), '__detach', this).call(this);
    }
  }, {
    key: '__getNativeConfig',
    value: function __getNativeConfig() {
      return {
        type: 'division',
        input: [this._a.__getNativeTag(), this._b.__getNativeTag()]
      };
    }
  }]);
  return AnimatedDivision;
}(AnimatedWithChildren);

var AnimatedMultiplication = function (_AnimatedWithChildren6) {
  babelHelpers.inherits(AnimatedMultiplication, _AnimatedWithChildren6);

  function AnimatedMultiplication(a, b) {
    babelHelpers.classCallCheck(this, AnimatedMultiplication);

    var _this14 = babelHelpers.possibleConstructorReturn(this, (AnimatedMultiplication.__proto__ || Object.getPrototypeOf(AnimatedMultiplication)).call(this));

    _this14._a = typeof a === 'number' ? new AnimatedValue(a) : a;
    _this14._b = typeof b === 'number' ? new AnimatedValue(b) : b;
    return _this14;
  }

  babelHelpers.createClass(AnimatedMultiplication, [{
    key: '__makeNative',
    value: function __makeNative() {
      babelHelpers.get(AnimatedMultiplication.prototype.__proto__ || Object.getPrototypeOf(AnimatedMultiplication.prototype), '__makeNative', this).call(this);
      this._a.__makeNative();
      this._b.__makeNative();
    }
  }, {
    key: '__getValue',
    value: function __getValue() {
      return this._a.__getValue() * this._b.__getValue();
    }
  }, {
    key: 'interpolate',
    value: function interpolate(config) {
      return new AnimatedInterpolation(this, config);
    }
  }, {
    key: '__attach',
    value: function __attach() {
      this._a.__addChild(this);
      this._b.__addChild(this);
    }
  }, {
    key: '__detach',
    value: function __detach() {
      this._a.__removeChild(this);
      this._b.__removeChild(this);
      babelHelpers.get(AnimatedMultiplication.prototype.__proto__ || Object.getPrototypeOf(AnimatedMultiplication.prototype), '__detach', this).call(this);
    }
  }, {
    key: '__getNativeConfig',
    value: function __getNativeConfig() {
      return {
        type: 'multiplication',
        input: [this._a.__getNativeTag(), this._b.__getNativeTag()]
      };
    }
  }]);
  return AnimatedMultiplication;
}(AnimatedWithChildren);

var AnimatedModulo = function (_AnimatedWithChildren7) {
  babelHelpers.inherits(AnimatedModulo, _AnimatedWithChildren7);

  function AnimatedModulo(a, modulus) {
    babelHelpers.classCallCheck(this, AnimatedModulo);

    var _this15 = babelHelpers.possibleConstructorReturn(this, (AnimatedModulo.__proto__ || Object.getPrototypeOf(AnimatedModulo)).call(this));

    _this15._a = a;
    _this15._modulus = modulus;
    return _this15;
  }

  babelHelpers.createClass(AnimatedModulo, [{
    key: '__makeNative',
    value: function __makeNative() {
      babelHelpers.get(AnimatedModulo.prototype.__proto__ || Object.getPrototypeOf(AnimatedModulo.prototype), '__makeNative', this).call(this);
      this._a.__makeNative();
    }
  }, {
    key: '__getValue',
    value: function __getValue() {
      return (this._a.__getValue() % this._modulus + this._modulus) % this._modulus;
    }
  }, {
    key: 'interpolate',
    value: function interpolate(config) {
      return new AnimatedInterpolation(this, config);
    }
  }, {
    key: '__attach',
    value: function __attach() {
      this._a.__addChild(this);
    }
  }, {
    key: '__detach',
    value: function __detach() {
      this._a.__removeChild(this);
    }
  }, {
    key: '__getNativeConfig',
    value: function __getNativeConfig() {
      return {
        type: 'modulus',
        input: this._a.__getNativeTag(),
        modulus: this._modulus
      };
    }
  }]);
  return AnimatedModulo;
}(AnimatedWithChildren);

var AnimatedDiffClamp = function (_AnimatedWithChildren8) {
  babelHelpers.inherits(AnimatedDiffClamp, _AnimatedWithChildren8);

  function AnimatedDiffClamp(a, min, max) {
    babelHelpers.classCallCheck(this, AnimatedDiffClamp);

    var _this16 = babelHelpers.possibleConstructorReturn(this, (AnimatedDiffClamp.__proto__ || Object.getPrototypeOf(AnimatedDiffClamp)).call(this));

    _this16._a = a;
    _this16._min = min;
    _this16._max = max;
    _this16._value = _this16._lastValue = _this16._a.__getValue();
    return _this16;
  }

  babelHelpers.createClass(AnimatedDiffClamp, [{
    key: '__makeNative',
    value: function __makeNative() {
      babelHelpers.get(AnimatedDiffClamp.prototype.__proto__ || Object.getPrototypeOf(AnimatedDiffClamp.prototype), '__makeNative', this).call(this);
      this._a.__makeNative();
    }
  }, {
    key: 'interpolate',
    value: function interpolate(config) {
      return new AnimatedInterpolation(this, config);
    }
  }, {
    key: '__getValue',
    value: function __getValue() {
      var value = this._a.__getValue();
      var diff = value - this._lastValue;
      this._lastValue = value;
      this._value = Math.min(Math.max(this._value + diff, this._min), this._max);
      return this._value;
    }
  }, {
    key: '__attach',
    value: function __attach() {
      this._a.__addChild(this);
    }
  }, {
    key: '__detach',
    value: function __detach() {
      this._a.__removeChild(this);
    }
  }, {
    key: '__getNativeConfig',
    value: function __getNativeConfig() {
      return {
        type: 'diffclamp',
        input: this._a.__getNativeTag(),
        min: this._min,
        max: this._max
      };
    }
  }]);
  return AnimatedDiffClamp;
}(AnimatedWithChildren);

var AnimatedTransform = function (_AnimatedWithChildren9) {
  babelHelpers.inherits(AnimatedTransform, _AnimatedWithChildren9);

  function AnimatedTransform(transforms) {
    babelHelpers.classCallCheck(this, AnimatedTransform);

    var _this17 = babelHelpers.possibleConstructorReturn(this, (AnimatedTransform.__proto__ || Object.getPrototypeOf(AnimatedTransform)).call(this));

    _this17._transforms = transforms;
    return _this17;
  }

  babelHelpers.createClass(AnimatedTransform, [{
    key: '__makeNative',
    value: function __makeNative() {
      babelHelpers.get(AnimatedTransform.prototype.__proto__ || Object.getPrototypeOf(AnimatedTransform.prototype), '__makeNative', this).call(this);
      this._transforms.forEach(function (transform) {
        for (var key in transform) {
          var value = transform[key];
          if (value instanceof Animated) {
            value.__makeNative();
          }
        }
      });
    }
  }, {
    key: '__getValue',
    value: function __getValue() {
      return this._transforms.map(function (transform) {
        var result = {};
        for (var key in transform) {
          var value = transform[key];
          if (value instanceof Animated) {
            result[key] = value.__getValue();
          } else {
            result[key] = value;
          }
        }
        return result;
      });
    }
  }, {
    key: '__getAnimatedValue',
    value: function __getAnimatedValue() {
      return this._transforms.map(function (transform) {
        var result = {};
        for (var key in transform) {
          var value = transform[key];
          if (value instanceof Animated) {
            result[key] = value.__getAnimatedValue();
          } else {
            result[key] = value;
          }
        }
        return result;
      });
    }
  }, {
    key: '__attach',
    value: function __attach() {
      var _this18 = this;

      this._transforms.forEach(function (transform) {
        for (var key in transform) {
          var value = transform[key];
          if (value instanceof Animated) {
            value.__addChild(_this18);
          }
        }
      });
    }
  }, {
    key: '__detach',
    value: function __detach() {
      var _this19 = this;

      this._transforms.forEach(function (transform) {
        for (var key in transform) {
          var value = transform[key];
          if (value instanceof Animated) {
            value.__removeChild(_this19);
          }
        }
      });
    }
  }, {
    key: '__getNativeConfig',
    value: function __getNativeConfig() {
      var transConfigs = [];

      this._transforms.forEach(function (transform) {
        for (var key in transform) {
          var value = transform[key];
          if (value instanceof Animated) {
            transConfigs.push({
              type: 'animated',
              property: key,
              nodeTag: value.__getNativeTag()
            });
          } else {
            transConfigs.push({
              type: 'static',
              property: key,
              value: value
            });
          }
        }
      });

      NativeAnimatedHelper.validateTransform(transConfigs);
      return {
        type: 'transform',
        transforms: transConfigs
      };
    }
  }]);
  return AnimatedTransform;
}(AnimatedWithChildren);

var AnimatedStyle = function (_AnimatedWithChildren10) {
  babelHelpers.inherits(AnimatedStyle, _AnimatedWithChildren10);

  function AnimatedStyle(style) {
    babelHelpers.classCallCheck(this, AnimatedStyle);

    var _this20 = babelHelpers.possibleConstructorReturn(this, (AnimatedStyle.__proto__ || Object.getPrototypeOf(AnimatedStyle)).call(this));

    style = flattenStyle(style) || {};
    if (style.transform) {
      style = babelHelpers.extends({}, style, {
        transform: new AnimatedTransform(style.transform)
      });
    }
    _this20._style = style;
    return _this20;
  }

  babelHelpers.createClass(AnimatedStyle, [{
    key: '__getValue',
    value: function __getValue() {
      var style = {};
      for (var key in this._style) {
        var value = this._style[key];
        if (value instanceof Animated) {
          if (!value.__isNative) {
            style[key] = value.__getValue();
          }
        } else {
          style[key] = value;
        }
      }
      return style;
    }
  }, {
    key: '__getAnimatedValue',
    value: function __getAnimatedValue() {
      var style = {};
      for (var key in this._style) {
        var value = this._style[key];
        if (value instanceof Animated) {
          style[key] = value.__getAnimatedValue();
        }
      }
      return style;
    }
  }, {
    key: '__attach',
    value: function __attach() {
      for (var key in this._style) {
        var value = this._style[key];
        if (value instanceof Animated) {
          value.__addChild(this);
        }
      }
    }
  }, {
    key: '__detach',
    value: function __detach() {
      for (var key in this._style) {
        var value = this._style[key];
        if (value instanceof Animated) {
          value.__removeChild(this);
        }
      }
    }
  }, {
    key: '__makeNative',
    value: function __makeNative() {
      babelHelpers.get(AnimatedStyle.prototype.__proto__ || Object.getPrototypeOf(AnimatedStyle.prototype), '__makeNative', this).call(this);
      for (var key in this._style) {
        var value = this._style[key];
        if (value instanceof Animated) {
          value.__makeNative();
        }
      }
    }
  }, {
    key: '__getNativeConfig',
    value: function __getNativeConfig() {
      var styleConfig = {};
      for (var styleKey in this._style) {
        if (this._style[styleKey] instanceof Animated) {
          styleConfig[styleKey] = this._style[styleKey].__getNativeTag();
        }
      }
      NativeAnimatedHelper.validateStyles(styleConfig);
      return {
        type: 'style',
        style: styleConfig
      };
    }
  }]);
  return AnimatedStyle;
}(AnimatedWithChildren);

var AnimatedProps = function (_Animated2) {
  babelHelpers.inherits(AnimatedProps, _Animated2);

  function AnimatedProps(props, callback) {
    babelHelpers.classCallCheck(this, AnimatedProps);

    var _this21 = babelHelpers.possibleConstructorReturn(this, (AnimatedProps.__proto__ || Object.getPrototypeOf(AnimatedProps)).call(this));

    if (props.style) {
      props = babelHelpers.extends({}, props, {
        style: new AnimatedStyle(props.style)
      });
    }
    _this21._props = props;
    _this21._callback = callback;
    _this21.__attach();
    return _this21;
  }

  babelHelpers.createClass(AnimatedProps, [{
    key: '__getValue',
    value: function __getValue() {
      var props = {};
      for (var key in this._props) {
        var value = this._props[key];
        if (value instanceof Animated) {
          if (!value.__isNative || value instanceof AnimatedStyle) {
            props[key] = value.__getValue();
          }
        } else if (value instanceof AnimatedEvent) {
          props[key] = value.__getHandler();
        } else {
          props[key] = value;
        }
      }
      return props;
    }
  }, {
    key: '__getAnimatedValue',
    value: function __getAnimatedValue() {
      var props = {};
      for (var key in this._props) {
        var value = this._props[key];
        if (value instanceof Animated) {
          props[key] = value.__getAnimatedValue();
        }
      }
      return props;
    }
  }, {
    key: '__attach',
    value: function __attach() {
      for (var key in this._props) {
        var value = this._props[key];
        if (value instanceof Animated) {
          value.__addChild(this);
        }
      }
    }
  }, {
    key: '__detach',
    value: function __detach() {
      if (this.__isNative && this._animatedView) {
        this.__disconnectAnimatedView();
      }
      for (var key in this._props) {
        var value = this._props[key];
        if (value instanceof Animated) {
          value.__removeChild(this);
        }
      }
      babelHelpers.get(AnimatedProps.prototype.__proto__ || Object.getPrototypeOf(AnimatedProps.prototype), '__detach', this).call(this);
    }
  }, {
    key: 'update',
    value: function update() {
      this._callback();
    }
  }, {
    key: '__makeNative',
    value: function __makeNative() {
      if (!this.__isNative) {
        this.__isNative = true;
        for (var key in this._props) {
          var value = this._props[key];
          if (value instanceof Animated) {
            value.__makeNative();
          }
        }
        if (this._animatedView) {
          this.__connectAnimatedView();
        }
      }
    }
  }, {
    key: 'setNativeView',
    value: function setNativeView(animatedView) {
      invariant(this._animatedView === undefined, 'Animated view already set.');
      this._animatedView = animatedView;
      if (this.__isNative) {
        this.__connectAnimatedView();
      }
    }
  }, {
    key: '__connectAnimatedView',
    value: function __connectAnimatedView() {
      invariant(this.__isNative, 'Expected node to be marked as "native"');
      var nativeViewTag = findNodeHandle(this._animatedView);
      invariant(nativeViewTag != null, 'Unable to locate attached view in the native tree');
      NativeAnimatedAPI.connectAnimatedNodeToView(this.__getNativeTag(), nativeViewTag);
    }
  }, {
    key: '__disconnectAnimatedView',
    value: function __disconnectAnimatedView() {
      invariant(this.__isNative, 'Expected node to be marked as "native"');
      var nativeViewTag = findNodeHandle(this._animatedView);
      invariant(nativeViewTag != null, 'Unable to locate attached view in the native tree');
      NativeAnimatedAPI.disconnectAnimatedNodeFromView(this.__getNativeTag(), nativeViewTag);
    }
  }, {
    key: '__getNativeConfig',
    value: function __getNativeConfig() {
      var propsConfig = {};
      for (var propKey in this._props) {
        var value = this._props[propKey];
        if (value instanceof Animated) {
          propsConfig[propKey] = value.__getNativeTag();
        }
      }
      return {
        type: 'props',
        props: propsConfig
      };
    }
  }]);
  return AnimatedProps;
}(Animated);

function createAnimatedComponent(Component) {
  var AnimatedComponent = function (_React$Component) {
    babelHelpers.inherits(AnimatedComponent, _React$Component);

    function AnimatedComponent(props) {
      babelHelpers.classCallCheck(this, AnimatedComponent);

      var _this22 = babelHelpers.possibleConstructorReturn(this, (AnimatedComponent.__proto__ || Object.getPrototypeOf(AnimatedComponent)).call(this, props));

      _this22._setComponentRef = _this22._setComponentRef.bind(_this22);
      return _this22;
    }

    babelHelpers.createClass(AnimatedComponent, [{
      key: 'componentWillUnmount',
      value: function componentWillUnmount() {
        this._propsAnimated && this._propsAnimated.__detach();
        this._detachNativeEvents(this.props);
      }
    }, {
      key: 'setNativeProps',
      value: function setNativeProps(props) {
        this._component.setNativeProps(props);
      }
    }, {
      key: 'componentWillMount',
      value: function componentWillMount() {
        this._attachProps(this.props);
      }
    }, {
      key: 'componentDidMount',
      value: function componentDidMount() {
        this._propsAnimated.setNativeView(this._component);

        this._attachNativeEvents(this.props);
      }
    }, {
      key: '_attachNativeEvents',
      value: function _attachNativeEvents(newProps) {
        if (newProps !== this.props) {
          this._detachNativeEvents(this.props);
        }

        var ref = this._component.getScrollableNode ? this._component.getScrollableNode() : this._component;

        for (var _key in newProps) {
          var prop = newProps[_key];
          if (prop instanceof AnimatedEvent && prop.__isNative) {
            prop.__attach(ref, _key);
          }
        }
      }
    }, {
      key: '_detachNativeEvents',
      value: function _detachNativeEvents(props) {
        var ref = this._component.getScrollableNode ? this._component.getScrollableNode() : this._component;

        for (var _key2 in props) {
          var prop = props[_key2];
          if (prop instanceof AnimatedEvent && prop.__isNative) {
            prop.__detach(ref, _key2);
          }
        }
      }
    }, {
      key: '_attachProps',
      value: function _attachProps(nextProps) {
        var _this23 = this;

        var oldPropsAnimated = this._propsAnimated;

        var callback = function callback() {
          if (_this23._component.setNativeProps) {
            if (!_this23._propsAnimated.__isNative) {
              _this23._component.setNativeProps(_this23._propsAnimated.__getAnimatedValue());
            } else {
              throw new Error('Attempting to run JS driven animation on animated ' + 'node that has been moved to "native" earlier by starting an ' + 'animation with `useNativeDriver: true`');
            }
          } else {
            _this23.forceUpdate();
          }
        };

        this._propsAnimated = new AnimatedProps(nextProps, callback);

        if (this._component) {
          this._propsAnimated.setNativeView(this._component);
        }

        oldPropsAnimated && oldPropsAnimated.__detach();
      }
    }, {
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(nextProps) {
        this._attachProps(nextProps);
        this._attachNativeEvents(nextProps);
      }
    }, {
      key: 'render',
      value: function render() {
        return React.createElement(Component, babelHelpers.extends({}, this._propsAnimated.__getValue(), {
          ref: this._setComponentRef,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 1802
          }
        }));
      }
    }, {
      key: '_setComponentRef',
      value: function _setComponentRef(c) {
        this._component = c;
      }
    }, {
      key: 'getNode',
      value: function getNode() {
        return this._component;
      }
    }]);
    return AnimatedComponent;
  }(React.Component);

  AnimatedComponent.propTypes = {
    style: function style(props, propName, componentName) {
      if (!Component.propTypes) {
        return;
      }

      for (var key in ViewStylePropTypes) {
        if (!Component.propTypes[key] && props[key] !== undefined) {
          console.warn('You are setting the style `{ ' + key + ': ... }` as a prop. You ' + 'should nest it in a style object. ' + 'E.g. `{ style: { ' + key + ': ... } }`');
        }
      }
    }
  };

  return AnimatedComponent;
}

var AnimatedTracking = function (_Animated3) {
  babelHelpers.inherits(AnimatedTracking, _Animated3);

  function AnimatedTracking(value, parent, animationClass, animationConfig, callback) {
    babelHelpers.classCallCheck(this, AnimatedTracking);

    var _this24 = babelHelpers.possibleConstructorReturn(this, (AnimatedTracking.__proto__ || Object.getPrototypeOf(AnimatedTracking)).call(this));

    _this24._value = value;
    _this24._parent = parent;
    _this24._animationClass = animationClass;
    _this24._animationConfig = animationConfig;
    _this24._callback = callback;
    _this24.__attach();
    return _this24;
  }

  babelHelpers.createClass(AnimatedTracking, [{
    key: '__getValue',
    value: function __getValue() {
      return this._parent.__getValue();
    }
  }, {
    key: '__attach',
    value: function __attach() {
      this._parent.__addChild(this);
    }
  }, {
    key: '__detach',
    value: function __detach() {
      this._parent.__removeChild(this);
      babelHelpers.get(AnimatedTracking.prototype.__proto__ || Object.getPrototypeOf(AnimatedTracking.prototype), '__detach', this).call(this);
    }
  }, {
    key: 'update',
    value: function update() {
      this._value.animate(new this._animationClass(babelHelpers.extends({}, this._animationConfig, {
        toValue: this._animationConfig.toValue.__getValue()
      })), this._callback);
    }
  }]);
  return AnimatedTracking;
}(Animated);

var add = function add(a, b) {
  return new AnimatedAddition(a, b);
};

var divide = function divide(a, b) {
  return new AnimatedDivision(a, b);
};

var multiply = function multiply(a, b) {
  return new AnimatedMultiplication(a, b);
};

var modulo = function modulo(a, modulus) {
  return new AnimatedModulo(a, modulus);
};

var diffClamp = function diffClamp(a, min, max) {
  return new AnimatedDiffClamp(a, min, max);
};

var _combineCallbacks = function _combineCallbacks(callback, config) {
  if (callback && config.onComplete) {
    return function () {
      config.onComplete && config.onComplete.apply(config, arguments);
      callback && callback.apply(undefined, arguments);
    };
  } else {
    return callback || config.onComplete;
  }
};

var maybeVectorAnim = function maybeVectorAnim(value, config, anim) {
  if (value instanceof AnimatedValueXY) {
    var configX = babelHelpers.extends({}, config);
    var configY = babelHelpers.extends({}, config);
    for (var key in config) {
      var _config$key = config[key],
          x = _config$key.x,
          y = _config$key.y;

      if (x !== undefined && y !== undefined) {
        configX[key] = x;
        configY[key] = y;
      }
    }
    var aX = anim(value.x, configX);
    var aY = anim(value.y, configY);

    return parallel([aX, aY], { stopTogether: false });
  }
  return null;
};

var spring = function spring(value, config) {
  return maybeVectorAnim(value, config, spring) || {
    start: function start(callback) {
      callback = _combineCallbacks(callback, config);
      var singleValue = value;
      var singleConfig = config;
      singleValue.stopTracking();
      if (config.toValue instanceof Animated) {
        singleValue.track(new AnimatedTracking(singleValue, config.toValue, SpringAnimation, singleConfig, callback));
      } else {
        singleValue.animate(new SpringAnimation(singleConfig), callback);
      }
    },

    stop: function stop() {
      value.stopAnimation();
    }
  };
};

var timing = function timing(value, config) {
  return maybeVectorAnim(value, config, timing) || {
    start: function start(callback) {
      callback = _combineCallbacks(callback, config);
      var singleValue = value;
      var singleConfig = config;
      singleValue.stopTracking();
      if (config.toValue instanceof Animated) {
        singleValue.track(new AnimatedTracking(singleValue, config.toValue, TimingAnimation, singleConfig, callback));
      } else {
        singleValue.animate(new TimingAnimation(singleConfig), callback);
      }
    },

    stop: function stop() {
      value.stopAnimation();
    }
  };
};

var decay = function decay(value, config) {
  return maybeVectorAnim(value, config, decay) || {
    start: function start(callback) {
      callback = _combineCallbacks(callback, config);
      var singleValue = value;
      var singleConfig = config;
      singleValue.stopTracking();
      singleValue.animate(new DecayAnimation(singleConfig), callback);
    },

    stop: function stop() {
      value.stopAnimation();
    }
  };
};

var sequence = function sequence(animations) {
  var current = 0;
  return {
    start: function start(callback) {
      var onComplete = function onComplete(result) {
        if (!result.finished) {
          callback && callback(result);
          return;
        }

        current++;

        if (current === animations.length) {
          callback && callback(result);
          return;
        }

        animations[current].start(onComplete);
      };

      if (animations.length === 0) {
        callback && callback({ finished: true });
      } else {
        animations[current].start(onComplete);
      }
    },

    stop: function stop() {
      if (current < animations.length) {
        animations[current].stop();
      }
    }
  };
};

var parallel = function parallel(animations, config) {
  var doneCount = 0;

  var hasEnded = {};
  var stopTogether = !(config && config.stopTogether === false);

  var result = {
    start: function start(callback) {
      if (doneCount === animations.length) {
        callback && callback({ finished: true });
        return;
      }

      animations.forEach(function (animation, idx) {
        var cb = function cb(endResult) {
          hasEnded[idx] = true;
          doneCount++;
          if (doneCount === animations.length) {
            doneCount = 0;
            callback && callback(endResult);
            return;
          }

          if (!endResult.finished && stopTogether) {
            result.stop();
          }
        };

        if (!animation) {
          cb({ finished: true });
        } else {
          animation.start(cb);
        }
      });
    },

    stop: function stop() {
      animations.forEach(function (animation, idx) {
        !hasEnded[idx] && animation.stop();
        hasEnded[idx] = true;
      });
    }
  };

  return result;
};

var delay = function delay(time) {
  return timing(new AnimatedValue(0), { toValue: 0, delay: time, duration: 0 });
};

var stagger = function stagger(time, animations) {
  return parallel(animations.map(function (animation, i) {
    return sequence([delay(time * i), animation]);
  }));
};

var AnimatedEvent = function () {
  function AnimatedEvent(argMapping) {
    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    babelHelpers.classCallCheck(this, AnimatedEvent);

    this._argMapping = argMapping;
    this._listener = config.listener;
    this.__isNative = shouldUseNativeDriver(config);

    if (this.__isNative) {
      invariant(!this._listener, 'Listener is not supported for native driven events.');
    }

    if (__DEV__) {
      this._validateMapping();
    }
  }

  babelHelpers.createClass(AnimatedEvent, [{
    key: '__attach',
    value: function __attach(viewRef, eventName) {
      invariant(this.__isNative, 'Only native driven events need to be attached.');

      var eventMappings = [];

      var traverse = function traverse(value, path) {
        if (value instanceof AnimatedValue) {
          value.__makeNative();

          eventMappings.push({
            nativeEventPath: path,
            animatedValueTag: value.__getNativeTag()
          });
        } else if (typeof value === 'object') {
          for (var _key3 in value) {
            traverse(value[_key3], path.concat(_key3));
          }
        }
      };

      invariant(this._argMapping[0] && this._argMapping[0].nativeEvent, 'Native driven events only support animated values contained inside `nativeEvent`.');

      traverse(this._argMapping[0].nativeEvent, []);

      var viewTag = findNodeHandle(viewRef);

      eventMappings.forEach(function (mapping) {
        NativeAnimatedAPI.addAnimatedEventToView(viewTag, eventName, mapping);
      });
    }
  }, {
    key: '__detach',
    value: function __detach(viewTag, eventName) {
      invariant(this.__isNative, 'Only native driven events need to be detached.');

      NativeAnimatedAPI.removeAnimatedEventFromView(viewTag, eventName);
    }
  }, {
    key: '__getHandler',
    value: function __getHandler() {
      var _this25 = this;

      return function () {
        for (var _len = arguments.length, args = Array(_len), _key4 = 0; _key4 < _len; _key4++) {
          args[_key4] = arguments[_key4];
        }

        var traverse = function traverse(recMapping, recEvt, key) {
          if (typeof recEvt === 'number' && recMapping instanceof AnimatedValue) {
            recMapping.setValue(recEvt);
          } else if (typeof recMapping === 'object') {
            for (var mappingKey in recMapping) {
              traverse(recMapping[mappingKey], recEvt[mappingKey], mappingKey);
            }
          }
        };

        if (!_this25.__isNative) {
          _this25._argMapping.forEach(function (mapping, idx) {
            traverse(mapping, args[idx], 'arg' + idx);
          });
        }

        if (_this25._listener) {
          _this25._listener.apply(null, args);
        }
      };
    }
  }, {
    key: '_validateMapping',
    value: function _validateMapping() {
      var traverse = function traverse(recMapping, recEvt, key) {
        if (typeof recEvt === 'number') {
          invariant(recMapping instanceof AnimatedValue, 'Bad mapping of type ' + typeof recMapping + ' for key ' + key + ', event value must map to AnimatedValue');
          return;
        }
        invariant(typeof recMapping === 'object', 'Bad mapping of type ' + typeof recMapping + ' for key ' + key);
        invariant(typeof recEvt === 'object', 'Bad event of type ' + typeof recEvt + ' for key ' + key);
        for (var mappingKey in recMapping) {
          traverse(recMapping[mappingKey], recEvt[mappingKey], mappingKey);
        }
      };
    }
  }]);
  return AnimatedEvent;
}();

var event = function event(argMapping, config) {
  var animatedEvent = new AnimatedEvent(argMapping, config);
  if (animatedEvent.__isNative) {
    return animatedEvent;
  } else {
    return animatedEvent.__getHandler();
  }
};

module.exports = {
  Value: AnimatedValue,

  ValueXY: AnimatedValueXY,

  decay: decay,

  timing: timing,

  spring: spring,

  add: add,

  divide: divide,

  multiply: multiply,

  modulo: modulo,

  diffClamp: diffClamp,

  delay: delay,

  sequence: sequence,

  parallel: parallel,

  stagger: stagger,

  event: event,

  createAnimatedComponent: createAnimatedComponent,

  __PropsOnlyForTests: AnimatedProps
};
}, 574, null, "AnimatedImplementation");
__d(/* InteractionManager */function(global, require, module, exports) {
'use strict';

var BatchedBridge = require(350            ); // 350 = BatchedBridge
var EventEmitter = require(375           ); // 375 = EventEmitter
var Set = require(541  ); // 541 = Set
var TaskQueue = require(576        ); // 576 = TaskQueue

var infoLog = require(577      ); // 577 = infoLog
var invariant = require(346                 ); // 346 = fbjs/lib/invariant
var keyMirror = require(427                 ); // 427 = fbjs/lib/keyMirror

var _emitter = new EventEmitter();

var DEBUG_DELAY = 0;
var DEBUG = false;

var InteractionManager = {
  Events: keyMirror({
    interactionStart: true,
    interactionComplete: true
  }),

  runAfterInteractions: function runAfterInteractions(task) {
    var tasks = [];
    var promise = new Promise(function (resolve) {
      _scheduleUpdate();
      if (task) {
        tasks.push(task);
      }
      tasks.push({ run: resolve, name: 'resolve ' + (task && task.name || '?') });
      _taskQueue.enqueueTasks(tasks);
    });
    return {
      then: promise.then.bind(promise),
      done: function done() {
        if (promise.done) {
          return promise.done.apply(promise, arguments);
        } else {
          console.warn('Tried to call done when not supported by current Promise implementation.');
        }
      },
      cancel: function cancel() {
        _taskQueue.cancelTasks(tasks);
      }
    };
  },
  createInteractionHandle: function createInteractionHandle() {
    DEBUG && infoLog('create interaction handle');
    _scheduleUpdate();
    var handle = ++_inc;
    _addInteractionSet.add(handle);
    return handle;
  },
  clearInteractionHandle: function clearInteractionHandle(handle) {
    DEBUG && infoLog('clear interaction handle');
    invariant(!!handle, 'Must provide a handle to clear.');
    _scheduleUpdate();
    _addInteractionSet.delete(handle);
    _deleteInteractionSet.add(handle);
  },


  addListener: _emitter.addListener.bind(_emitter),

  setDeadline: function setDeadline(deadline) {
    _deadline = deadline;
  }
};

var _interactionSet = new Set();
var _addInteractionSet = new Set();
var _deleteInteractionSet = new Set();
var _taskQueue = new TaskQueue({ onMoreTasks: _scheduleUpdate });
var _nextUpdateHandle = 0;
var _inc = 0;
var _deadline = -1;

function _scheduleUpdate() {
  if (!_nextUpdateHandle) {
    if (_deadline > 0) {
      _nextUpdateHandle = setTimeout(_processUpdate, 0 + DEBUG_DELAY);
    } else {
      _nextUpdateHandle = setImmediate(_processUpdate);
    }
  }
}

function _processUpdate() {
  _nextUpdateHandle = 0;

  var interactionCount = _interactionSet.size;
  _addInteractionSet.forEach(function (handle) {
    return _interactionSet.add(handle);
  });
  _deleteInteractionSet.forEach(function (handle) {
    return _interactionSet.delete(handle);
  });
  var nextInteractionCount = _interactionSet.size;

  if (interactionCount !== 0 && nextInteractionCount === 0) {
    _emitter.emit(InteractionManager.Events.interactionComplete);
  } else if (interactionCount === 0 && nextInteractionCount !== 0) {
    _emitter.emit(InteractionManager.Events.interactionStart);
  }

  if (nextInteractionCount === 0) {
    while (_taskQueue.hasTasksToProcess()) {
      _taskQueue.processNext();
      if (_deadline > 0 && BatchedBridge.getEventLoopRunningTime() >= _deadline) {
        _scheduleUpdate();
        break;
      }
    }
  }
  _addInteractionSet.clear();
  _deleteInteractionSet.clear();
}

module.exports = InteractionManager;
}, 575, null, "InteractionManager");
__d(/* TaskQueue */function(global, require, module, exports) {
'use strict';

var infoLog = require(577      ); // 577 = infoLog
var invariant = require(346                 ); // 346 = fbjs/lib/invariant

var DEBUG = false;

var TaskQueue = function () {
  function TaskQueue(_ref) {
    var onMoreTasks = _ref.onMoreTasks;
    babelHelpers.classCallCheck(this, TaskQueue);

    this._onMoreTasks = onMoreTasks;
    this._queueStack = [{ tasks: [], popable: false }];
  }

  babelHelpers.createClass(TaskQueue, [{
    key: 'enqueue',
    value: function enqueue(task) {
      this._getCurrentQueue().push(task);
    }
  }, {
    key: 'enqueueTasks',
    value: function enqueueTasks(tasks) {
      var _this = this;

      tasks.forEach(function (task) {
        return _this.enqueue(task);
      });
    }
  }, {
    key: 'cancelTasks',
    value: function cancelTasks(tasksToCancel) {
      this._queueStack = this._queueStack.map(function (queue) {
        return babelHelpers.extends({}, queue, {
          tasks: queue.tasks.filter(function (task) {
            return tasksToCancel.indexOf(task) === -1;
          })
        });
      }).filter(function (queue, idx) {
        return queue.tasks.length > 0 || idx === 0;
      });
    }
  }, {
    key: 'hasTasksToProcess',
    value: function hasTasksToProcess() {
      return this._getCurrentQueue().length > 0;
    }
  }, {
    key: 'processNext',
    value: function processNext() {
      var queue = this._getCurrentQueue();
      if (queue.length) {
        var task = queue.shift();
        try {
          if (task.gen) {
            DEBUG && infoLog('genPromise for task ' + task.name);
            this._genPromise(task);
          } else if (task.run) {
            DEBUG && infoLog('run task ' + task.name);
            task.run();
          } else {
            invariant(typeof task === 'function', 'Expected Function, SimpleTask, or PromiseTask, but got:\n' + JSON.stringify(task, null, 2));
            DEBUG && infoLog('run anonymous task');
            task();
          }
        } catch (e) {
          e.message = 'TaskQueue: Error with task ' + (task.name || '') + ': ' + e.message;
          throw e;
        }
      }
    }
  }, {
    key: '_getCurrentQueue',
    value: function _getCurrentQueue() {
      var stackIdx = this._queueStack.length - 1;
      var queue = this._queueStack[stackIdx];
      if (queue.popable && queue.tasks.length === 0 && this._queueStack.length > 1) {
        this._queueStack.pop();
        DEBUG && infoLog('popped queue: ', { stackIdx: stackIdx, queueStackSize: this._queueStack.length });
        return this._getCurrentQueue();
      } else {
        return queue.tasks;
      }
    }
  }, {
    key: '_genPromise',
    value: function _genPromise(task) {
      var _this2 = this;

      this._queueStack.push({ tasks: [], popable: false });
      var stackIdx = this._queueStack.length - 1;
      DEBUG && infoLog('push new queue: ', { stackIdx: stackIdx });
      DEBUG && infoLog('exec gen task ' + task.name);
      task.gen().then(function () {
        DEBUG && infoLog('onThen for gen task ' + task.name, { stackIdx: stackIdx, queueStackSize: _this2._queueStack.length });
        _this2._queueStack[stackIdx].popable = true;
        _this2.hasTasksToProcess() && _this2._onMoreTasks();
      }).catch(function (ex) {
        ex.message = 'TaskQueue: Error resolving Promise in task ' + task.name + ': ' + ex.message;
        throw ex;
      }).done();
    }
  }]);
  return TaskQueue;
}();

module.exports = TaskQueue;
}, 576, null, "TaskQueue");
__d(/* infoLog */function(global, require, module, exports) {
'use strict';

function infoLog() {
  var _console;

  return (_console = console).log.apply(_console, arguments);
}

module.exports = infoLog;
}, 577, null, "infoLog");
__d(/* Interpolation */function(global, require, module, exports) {
'use strict';

var invariant = require(346                 ); // 346 = fbjs/lib/invariant
var normalizeColor = require(340             ); // 340 = normalizeColor

var linear = function linear(t) {
  return t;
};

var Interpolation = function () {
  function Interpolation() {
    babelHelpers.classCallCheck(this, Interpolation);
  }

  babelHelpers.createClass(Interpolation, null, [{
    key: 'create',
    value: function create(config) {

      if (config.outputRange && typeof config.outputRange[0] === 'string') {
        return createInterpolationFromStringOutputRange(config);
      }

      var outputRange = config.outputRange;
      checkInfiniteRange('outputRange', outputRange);

      var inputRange = config.inputRange;
      checkInfiniteRange('inputRange', inputRange);
      checkValidInputRange(inputRange);

      invariant(inputRange.length === outputRange.length, 'inputRange (' + inputRange.length + ') and outputRange (' + outputRange.length + ') must have the same length');

      var easing = config.easing || linear;

      var extrapolateLeft = 'extend';
      if (config.extrapolateLeft !== undefined) {
        extrapolateLeft = config.extrapolateLeft;
      } else if (config.extrapolate !== undefined) {
        extrapolateLeft = config.extrapolate;
      }

      var extrapolateRight = 'extend';
      if (config.extrapolateRight !== undefined) {
        extrapolateRight = config.extrapolateRight;
      } else if (config.extrapolate !== undefined) {
        extrapolateRight = config.extrapolate;
      }

      return function (input) {
        invariant(typeof input === 'number', 'Cannot interpolation an input which is not a number');

        var range = findRange(input, inputRange);
        return interpolate(input, inputRange[range], inputRange[range + 1], outputRange[range], outputRange[range + 1], easing, extrapolateLeft, extrapolateRight);
      };
    }
  }]);
  return Interpolation;
}();

function interpolate(input, inputMin, inputMax, outputMin, outputMax, easing, extrapolateLeft, extrapolateRight) {
  var result = input;

  if (result < inputMin) {
    if (extrapolateLeft === 'identity') {
      return result;
    } else if (extrapolateLeft === 'clamp') {
      result = inputMin;
    } else if (extrapolateLeft === 'extend') {}
  }

  if (result > inputMax) {
    if (extrapolateRight === 'identity') {
      return result;
    } else if (extrapolateRight === 'clamp') {
      result = inputMax;
    } else if (extrapolateRight === 'extend') {}
  }

  if (outputMin === outputMax) {
    return outputMin;
  }

  if (inputMin === inputMax) {
    if (input <= inputMin) {
      return outputMin;
    }
    return outputMax;
  }

  if (inputMin === -Infinity) {
    result = -result;
  } else if (inputMax === Infinity) {
    result = result - inputMin;
  } else {
    result = (result - inputMin) / (inputMax - inputMin);
  }

  result = easing(result);

  if (outputMin === -Infinity) {
    result = -result;
  } else if (outputMax === Infinity) {
    result = result + outputMin;
  } else {
    result = result * (outputMax - outputMin) + outputMin;
  }

  return result;
}

function colorToRgba(input) {
  var int32Color = normalizeColor(input);
  if (int32Color === null) {
    return input;
  }

  int32Color = int32Color || 0;

  var r = (int32Color & 0xff000000) >>> 24;
  var g = (int32Color & 0x00ff0000) >>> 16;
  var b = (int32Color & 0x0000ff00) >>> 8;
  var a = (int32Color & 0x000000ff) / 255;

  return 'rgba(' + r + ', ' + g + ', ' + b + ', ' + a + ')';
}

var stringShapeRegex = /[0-9\.-]+/g;

function createInterpolationFromStringOutputRange(config) {
  var outputRange = config.outputRange;
  invariant(outputRange.length >= 2, 'Bad output range');
  outputRange = outputRange.map(colorToRgba);
  checkPattern(outputRange);

  var outputRanges = outputRange[0].match(stringShapeRegex).map(function () {
    return [];
  });
  outputRange.forEach(function (value) {
    value.match(stringShapeRegex).forEach(function (number, i) {
      outputRanges[i].push(+number);
    });
  });

  var interpolations = outputRange[0].match(stringShapeRegex).map(function (value, i) {
    return Interpolation.create(babelHelpers.extends({}, config, {
      outputRange: outputRanges[i]
    }));
  });

  var shouldRound = isRgbOrRgba(outputRange[0]);

  return function (input) {
    var i = 0;

    return outputRange[0].replace(stringShapeRegex, function () {
      var val = +interpolations[i++](input);
      var rounded = shouldRound && i < 4 ? Math.round(val) : Math.round(val * 1000) / 1000;
      return String(rounded);
    });
  };
}

function isRgbOrRgba(range) {
  return typeof range === 'string' && range.startsWith('rgb');
}

function checkPattern(arr) {
  var pattern = arr[0].replace(stringShapeRegex, '');
  for (var i = 1; i < arr.length; ++i) {
    invariant(pattern === arr[i].replace(stringShapeRegex, ''), 'invalid pattern ' + arr[0] + ' and ' + arr[i]);
  }
}

function findRange(input, inputRange) {
  for (var i = 1; i < inputRange.length - 1; ++i) {
    if (inputRange[i] >= input) {
      break;
    }
  }
  return i - 1;
}

function checkValidInputRange(arr) {
  invariant(arr.length >= 2, 'inputRange must have at least 2 elements');
  for (var i = 1; i < arr.length; ++i) {
    invariant(arr[i] >= arr[i - 1], 'inputRange must be monotonically increasing ' + arr);
  }
}

function checkInfiniteRange(name, arr) {
  invariant(arr.length >= 2, name + ' must have at least 2 elements');
  invariant(arr.length !== 2 || arr[0] !== -Infinity || arr[1] !== Infinity, name + 'cannot be ]-infinity;+infinity[ ' + arr);
}

module.exports = Interpolation;
}, 578, null, "Interpolation");
__d(/* NativeAnimatedHelper */function(global, require, module, exports) {
'use strict';

var NativeAnimatedModule = require(349            ).NativeAnimatedModule; // 349 = NativeModules
var NativeEventEmitter = require(374                 ); // 374 = NativeEventEmitter

var invariant = require(346                 ); // 346 = fbjs/lib/invariant

var __nativeAnimatedNodeTagCount = 1;
var __nativeAnimationIdCount = 1;

var nativeEventEmitter = void 0;

var API = {
  createAnimatedNode: function createAnimatedNode(tag, config) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.createAnimatedNode(tag, config);
  },
  startListeningToAnimatedNodeValue: function startListeningToAnimatedNodeValue(tag) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.startListeningToAnimatedNodeValue(tag);
  },
  stopListeningToAnimatedNodeValue: function stopListeningToAnimatedNodeValue(tag) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.stopListeningToAnimatedNodeValue(tag);
  },
  connectAnimatedNodes: function connectAnimatedNodes(parentTag, childTag) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.connectAnimatedNodes(parentTag, childTag);
  },
  disconnectAnimatedNodes: function disconnectAnimatedNodes(parentTag, childTag) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.disconnectAnimatedNodes(parentTag, childTag);
  },
  startAnimatingNode: function startAnimatingNode(animationId, nodeTag, config, endCallback) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.startAnimatingNode(animationId, nodeTag, config, endCallback);
  },
  stopAnimation: function stopAnimation(animationId) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.stopAnimation(animationId);
  },
  setAnimatedNodeValue: function setAnimatedNodeValue(nodeTag, value) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.setAnimatedNodeValue(nodeTag, value);
  },
  setAnimatedNodeOffset: function setAnimatedNodeOffset(nodeTag, offset) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.setAnimatedNodeOffset(nodeTag, offset);
  },
  flattenAnimatedNodeOffset: function flattenAnimatedNodeOffset(nodeTag) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.flattenAnimatedNodeOffset(nodeTag);
  },
  extractAnimatedNodeOffset: function extractAnimatedNodeOffset(nodeTag) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.extractAnimatedNodeOffset(nodeTag);
  },
  connectAnimatedNodeToView: function connectAnimatedNodeToView(nodeTag, viewTag) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.connectAnimatedNodeToView(nodeTag, viewTag);
  },
  disconnectAnimatedNodeFromView: function disconnectAnimatedNodeFromView(nodeTag, viewTag) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.disconnectAnimatedNodeFromView(nodeTag, viewTag);
  },
  dropAnimatedNode: function dropAnimatedNode(tag) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.dropAnimatedNode(tag);
  },
  addAnimatedEventToView: function addAnimatedEventToView(viewTag, eventName, eventMapping) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.addAnimatedEventToView(viewTag, eventName, eventMapping);
  },
  removeAnimatedEventFromView: function removeAnimatedEventFromView(viewTag, eventName) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.removeAnimatedEventFromView(viewTag, eventName);
  }
};

var STYLES_WHITELIST = {
  opacity: true,
  transform: true,

  scaleX: true,
  scaleY: true,
  translateX: true,
  translateY: true
};

var TRANSFORM_WHITELIST = {
  translateX: true,
  translateY: true,
  scale: true,
  scaleX: true,
  scaleY: true,
  rotate: true,
  rotateX: true,
  rotateY: true,
  perspective: true
};

function validateTransform(configs) {
  configs.forEach(function (config) {
    if (!TRANSFORM_WHITELIST.hasOwnProperty(config.property)) {
      throw new Error('Property \'' + config.property + '\' is not supported by native animated module');
    }
  });
}

function validateStyles(styles) {
  for (var key in styles) {
    if (!STYLES_WHITELIST.hasOwnProperty(key)) {
      throw new Error('Style property \'' + key + '\' is not supported by native animated module');
    }
  }
}

function validateInterpolation(config) {
  var SUPPORTED_INTERPOLATION_PARAMS = {
    inputRange: true,
    outputRange: true,
    extrapolate: true,
    extrapolateRight: true,
    extrapolateLeft: true
  };
  for (var key in config) {
    if (!SUPPORTED_INTERPOLATION_PARAMS.hasOwnProperty(key)) {
      throw new Error('Interpolation property \'' + key + '\' is not supported by native animated module');
    }
  }
}

function generateNewNodeTag() {
  return __nativeAnimatedNodeTagCount++;
}

function generateNewAnimationId() {
  return __nativeAnimationIdCount++;
}

function assertNativeAnimatedModule() {
  invariant(NativeAnimatedModule, 'Native animated module is not available');
}

function isNativeAnimatedAvailable() {
  return !!NativeAnimatedModule;
}

module.exports = {
  API: API,
  validateStyles: validateStyles,
  validateTransform: validateTransform,
  validateInterpolation: validateInterpolation,
  generateNewNodeTag: generateNewNodeTag,
  generateNewAnimationId: generateNewAnimationId,
  assertNativeAnimatedModule: assertNativeAnimatedModule,
  isNativeAnimatedAvailable: isNativeAnimatedAvailable,
  get nativeEventEmitter() {
    if (!nativeEventEmitter) {
      nativeEventEmitter = new NativeEventEmitter(NativeAnimatedModule);
    }
    return nativeEventEmitter;
  }
};
}, 579, null, "NativeAnimatedHelper");
__d(/* SpringConfig */function(global, require, module, exports) {

'use strict';

function tensionFromOrigamiValue(oValue) {
  return (oValue - 30) * 3.62 + 194;
}

function frictionFromOrigamiValue(oValue) {
  return (oValue - 8) * 3 + 25;
}

function fromOrigamiTensionAndFriction(tension, friction) {
  return {
    tension: tensionFromOrigamiValue(tension),
    friction: frictionFromOrigamiValue(friction)
  };
}

function fromBouncinessAndSpeed(bounciness, speed) {
  function normalize(value, startValue, endValue) {
    return (value - startValue) / (endValue - startValue);
  }

  function projectNormal(n, start, end) {
    return start + n * (end - start);
  }

  function linearInterpolation(t, start, end) {
    return t * end + (1 - t) * start;
  }

  function quadraticOutInterpolation(t, start, end) {
    return linearInterpolation(2 * t - t * t, start, end);
  }

  function b3Friction1(x) {
    return 0.0007 * Math.pow(x, 3) - 0.031 * Math.pow(x, 2) + 0.64 * x + 1.28;
  }

  function b3Friction2(x) {
    return 0.000044 * Math.pow(x, 3) - 0.006 * Math.pow(x, 2) + 0.36 * x + 2;
  }

  function b3Friction3(x) {
    return 0.00000045 * Math.pow(x, 3) - 0.000332 * Math.pow(x, 2) + 0.1078 * x + 5.84;
  }

  function b3Nobounce(tension) {
    if (tension <= 18) {
      return b3Friction1(tension);
    } else if (tension > 18 && tension <= 44) {
      return b3Friction2(tension);
    } else {
      return b3Friction3(tension);
    }
  }

  var b = normalize(bounciness / 1.7, 0, 20);
  b = projectNormal(b, 0, 0.8);
  var s = normalize(speed / 1.7, 0, 20);
  var bouncyTension = projectNormal(s, 0.5, 200);
  var bouncyFriction = quadraticOutInterpolation(b, b3Nobounce(bouncyTension), 0.01);

  return {
    tension: tensionFromOrigamiValue(bouncyTension),
    friction: frictionFromOrigamiValue(bouncyFriction)
  };
}

module.exports = {
  fromOrigamiTensionAndFriction: fromOrigamiTensionAndFriction,
  fromBouncinessAndSpeed: fromBouncinessAndSpeed
};
}, 580, null, "SpringConfig");
__d(/* fbjs/lib/requestAnimationFrame.js */function(global, require, module, exports) {'use strict';

var emptyFunction = require(336              ); // 336 = ./emptyFunction
var nativeRequestAnimationFrame = require(582                            ); // 582 = ./nativeRequestAnimationFrame

var lastTime = 0;

var requestAnimationFrame = nativeRequestAnimationFrame || function (callback) {
  var currTime = Date.now();
  var timeDelay = Math.max(0, 16 - (currTime - lastTime));
  lastTime = currTime + timeDelay;
  return global.setTimeout(function () {
    callback(Date.now());
  }, timeDelay);
};

requestAnimationFrame(emptyFunction);

module.exports = requestAnimationFrame;
}, 581, null, "fbjs/lib/requestAnimationFrame.js");
__d(/* fbjs/lib/nativeRequestAnimationFrame.js */function(global, require, module, exports) {"use strict";

var nativeRequestAnimationFrame = global.requestAnimationFrame || global.webkitRequestAnimationFrame || global.mozRequestAnimationFrame || global.oRequestAnimationFrame || global.msRequestAnimationFrame;

module.exports = nativeRequestAnimationFrame;
}, 582, null, "fbjs/lib/nativeRequestAnimationFrame.js");
__d(/* Easing */function(global, require, module, exports) {
'use strict';

var _ease = void 0;

var Easing = function () {
  function Easing() {
    babelHelpers.classCallCheck(this, Easing);
  }

  babelHelpers.createClass(Easing, null, [{
    key: 'step0',
    value: function step0(n) {
      return n > 0 ? 1 : 0;
    }
  }, {
    key: 'step1',
    value: function step1(n) {
      return n >= 1 ? 1 : 0;
    }
  }, {
    key: 'linear',
    value: function linear(t) {
      return t;
    }
  }, {
    key: 'ease',
    value: function ease(t) {
      if (!_ease) {
        _ease = Easing.bezier(0.42, 0, 1, 1);
      }
      return _ease(t);
    }
  }, {
    key: 'quad',
    value: function quad(t) {
      return t * t;
    }
  }, {
    key: 'cubic',
    value: function cubic(t) {
      return t * t * t;
    }
  }, {
    key: 'poly',
    value: function poly(n) {
      return function (t) {
        return Math.pow(t, n);
      };
    }
  }, {
    key: 'sin',
    value: function sin(t) {
      return 1 - Math.cos(t * Math.PI / 2);
    }
  }, {
    key: 'circle',
    value: function circle(t) {
      return 1 - Math.sqrt(1 - t * t);
    }
  }, {
    key: 'exp',
    value: function exp(t) {
      return Math.pow(2, 10 * (t - 1));
    }
  }, {
    key: 'elastic',
    value: function elastic() {
      var bounciness = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;

      var p = bounciness * Math.PI;
      return function (t) {
        return 1 - Math.pow(Math.cos(t * Math.PI / 2), 3) * Math.cos(t * p);
      };
    }
  }, {
    key: 'back',
    value: function back(s) {
      if (s === undefined) {
        s = 1.70158;
      }
      return function (t) {
        return t * t * ((s + 1) * t - s);
      };
    }
  }, {
    key: 'bounce',
    value: function bounce(t) {
      if (t < 1 / 2.75) {
        return 7.5625 * t * t;
      }

      if (t < 2 / 2.75) {
        t -= 1.5 / 2.75;
        return 7.5625 * t * t + 0.75;
      }

      if (t < 2.5 / 2.75) {
        t -= 2.25 / 2.75;
        return 7.5625 * t * t + 0.9375;
      }

      t -= 2.625 / 2.75;
      return 7.5625 * t * t + 0.984375;
    }
  }, {
    key: 'bezier',
    value: function bezier(x1, y1, x2, y2) {
      var _bezier = require(584     ); // 584 = bezier
      return _bezier(x1, y1, x2, y2);
    }
  }, {
    key: 'in',
    value: function _in(easing) {
      return easing;
    }
  }, {
    key: 'out',
    value: function out(easing) {
      return function (t) {
        return 1 - easing(1 - t);
      };
    }
  }, {
    key: 'inOut',
    value: function inOut(easing) {
      return function (t) {
        if (t < 0.5) {
          return easing(t * 2) / 2;
        }
        return 1 - easing((1 - t) * 2) / 2;
      };
    }
  }]);
  return Easing;
}();

module.exports = Easing;
}, 583, null, "Easing");
__d(/* bezier */function(global, require, module, exports) {
'use strict';

var NEWTON_ITERATIONS = 4;
var NEWTON_MIN_SLOPE = 0.001;
var SUBDIVISION_PRECISION = 0.0000001;
var SUBDIVISION_MAX_ITERATIONS = 10;

var kSplineTableSize = 11;
var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);

var float32ArraySupported = typeof Float32Array === 'function';

function A(aA1, aA2) {
  return 1.0 - 3.0 * aA2 + 3.0 * aA1;
}
function B(aA1, aA2) {
  return 3.0 * aA2 - 6.0 * aA1;
}
function C(aA1) {
  return 3.0 * aA1;
}

function calcBezier(aT, aA1, aA2) {
  return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;
}

function getSlope(aT, aA1, aA2) {
  return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1);
}

function binarySubdivide(aX, aA, aB, mX1, mX2) {
  var currentX,
      currentT,
      i = 0;
  do {
    currentT = aA + (aB - aA) / 2.0;
    currentX = calcBezier(currentT, mX1, mX2) - aX;
    if (currentX > 0.0) {
      aB = currentT;
    } else {
      aA = currentT;
    }
  } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);
  return currentT;
}

function newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {
  for (var i = 0; i < NEWTON_ITERATIONS; ++i) {
    var currentSlope = getSlope(aGuessT, mX1, mX2);
    if (currentSlope === 0.0) {
      return aGuessT;
    }
    var currentX = calcBezier(aGuessT, mX1, mX2) - aX;
    aGuessT -= currentX / currentSlope;
  }
  return aGuessT;
}

module.exports = function bezier(mX1, mY1, mX2, mY2) {
  if (!(0 <= mX1 && mX1 <= 1 && 0 <= mX2 && mX2 <= 1)) {
    throw new Error('bezier x values must be in [0, 1] range');
  }

  var sampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);
  if (mX1 !== mY1 || mX2 !== mY2) {
    for (var i = 0; i < kSplineTableSize; ++i) {
      sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);
    }
  }

  function getTForX(aX) {
    var intervalStart = 0.0;
    var currentSample = 1;
    var lastSample = kSplineTableSize - 1;

    for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {
      intervalStart += kSampleStepSize;
    }
    --currentSample;

    var dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);
    var guessForT = intervalStart + dist * kSampleStepSize;

    var initialSlope = getSlope(guessForT, mX1, mX2);
    if (initialSlope >= NEWTON_MIN_SLOPE) {
      return newtonRaphsonIterate(aX, guessForT, mX1, mX2);
    } else if (initialSlope === 0.0) {
      return guessForT;
    } else {
      return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);
    }
  }

  return function BezierEasing(x) {
    if (mX1 === mY1 && mX2 === mY2) {
      return x;
    }

    if (x === 0) {
      return 0;
    }
    if (x === 1) {
      return 1;
    }
    return calcBezier(getTForX(x), mY1, mY2);
  };
};
}, 584, null, "bezier");
__d(/* Image */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native/Libraries/Image/Image.android.js';
var NativeMethodsMixin = require(341                 ); // 341 = NativeMethodsMixin
var NativeModules = require(349            ); // 349 = NativeModules
var ImageResizeMode = require(426              ); // 426 = ImageResizeMode
var ImageStylePropTypes = require(425                  ); // 425 = ImageStylePropTypes
var ViewStylePropTypes = require(434                 ); // 434 = ViewStylePropTypes
var React = require(398    ); // 398 = React
var ReactNativeViewAttributes = require(447                        ); // 447 = ReactNativeViewAttributes
var StyleSheet = require(421         ); // 421 = StyleSheet
var StyleSheetPropType = require(448                 ); // 448 = StyleSheetPropType
var View = require(441   ); // 441 = View

var flattenStyle = require(345           ); // 345 = flattenStyle
var merge = require(444    ); // 444 = merge
var requireNativeComponent = require(450                     ); // 450 = requireNativeComponent
var resolveAssetSource = require(493                 ); // 493 = resolveAssetSource
var Set = require(541  ); // 541 = Set
var filterObject = require(586                    ); // 586 = fbjs/lib/filterObject

var PropTypes = React.PropTypes;
var ImageLoader = NativeModules.ImageLoader;


var _requestId = 1;
function generateRequestId() {
  return _requestId++;
}

var ImageViewAttributes = merge(ReactNativeViewAttributes.UIView, {
  src: true,
  loadingIndicatorSrc: true,
  resizeMethod: true,
  resizeMode: true,
  progressiveRenderingEnabled: true,
  fadeDuration: true,
  shouldNotifyLoadEvents: true
});

var ViewStyleKeys = new Set(Object.keys(ViewStylePropTypes));
var ImageSpecificStyleKeys = new Set(Object.keys(ImageStylePropTypes).filter(function (x) {
  return !ViewStyleKeys.has(x);
}));

var Image = React.createClass({
  displayName: 'Image',

  propTypes: babelHelpers.extends({}, View.propTypes, {
    style: StyleSheetPropType(ImageStylePropTypes),

    source: PropTypes.oneOfType([PropTypes.shape({
      uri: PropTypes.string
    }), PropTypes.number, PropTypes.arrayOf(PropTypes.shape({
      uri: PropTypes.string,
      width: PropTypes.number,
      height: PropTypes.number
    }))]),

    loadingIndicatorSource: PropTypes.oneOfType([PropTypes.shape({
      uri: PropTypes.string
    }), PropTypes.number]),
    progressiveRenderingEnabled: PropTypes.bool,
    fadeDuration: PropTypes.number,

    onLoadStart: PropTypes.func,

    onError: PropTypes.func,

    onLoad: PropTypes.func,

    onLoadEnd: PropTypes.func,

    testID: PropTypes.string,

    resizeMethod: PropTypes.oneOf(['auto', 'resize', 'scale']),

    resizeMode: PropTypes.oneOf(['cover', 'contain', 'stretch', 'center'])
  }),

  statics: {
    resizeMode: ImageResizeMode,

    getSize: function getSize(url, success, failure) {
      return ImageLoader.getSize(url).then(function (sizes) {
        success(sizes.width, sizes.height);
      }).catch(failure || function () {
        console.warn('Failed to get size for image: ' + url);
      });
    },
    prefetch: function prefetch(url, callback) {
      var requestId = generateRequestId();
      callback && callback(requestId);
      return ImageLoader.prefetchImage(url, requestId);
    },
    abortPrefetch: function abortPrefetch(requestId) {
      ImageLoader.abortRequest(requestId);
    },
    queryCache: function queryCache(urls) {
      return regeneratorRuntime.async(function queryCache$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return regeneratorRuntime.awrap(ImageLoader.queryCache(urls));

            case 2:
              return _context.abrupt('return', _context.sent);

            case 3:
            case 'end':
              return _context.stop();
          }
        }
      }, null, this);
    },

    resolveAssetSource: resolveAssetSource
  },

  mixins: [NativeMethodsMixin],

  viewConfig: {
    uiViewClassName: 'RCTView',
    validAttributes: ReactNativeViewAttributes.RCTView
  },

  _updateViewConfig: function _updateViewConfig(props) {
    if (props.children) {
      this.viewConfig = {
        uiViewClassName: 'RCTView',
        validAttributes: ReactNativeViewAttributes.RCTView
      };
    } else {
      this.viewConfig = {
        uiViewClassName: 'RCTImageView',
        validAttributes: ImageViewAttributes
      };
    }
  },

  componentWillMount: function componentWillMount() {
    this._updateViewConfig(this.props);
  },

  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    this._updateViewConfig(nextProps);
  },

  contextTypes: {
    isInAParentText: React.PropTypes.bool
  },

  render: function render() {
    var source = resolveAssetSource(this.props.source);
    var loadingIndicatorSource = resolveAssetSource(this.props.loadingIndicatorSource);

    if (source && source.uri === '') {
      console.warn('source.uri should not be an empty string');
    }

    if (this.props.src) {
      console.warn('The <Image> component requires a `source` property rather than `src`.');
    }

    if (source && (source.uri || Array.isArray(source))) {
      var style = void 0;
      var sources = void 0;
      if (source.uri) {
        var _width = source.width,
            _height = source.height;

        style = flattenStyle([{ width: _width, height: _height }, styles.base, this.props.style]);
        sources = [{ uri: source.uri }];
      } else {
        style = flattenStyle([styles.base, this.props.style]);
        sources = source;
      }

      var _props = this.props,
          onLoadStart = _props.onLoadStart,
          onLoad = _props.onLoad,
          onLoadEnd = _props.onLoadEnd,
          onError = _props.onError;

      var nativeProps = merge(this.props, {
        style: style,
        shouldNotifyLoadEvents: !!(onLoadStart || onLoad || onLoadEnd || onError),
        src: sources,
        loadingIndicatorSrc: loadingIndicatorSource ? loadingIndicatorSource.uri : null
      });

      if (nativeProps.children) {
        var containerStyle = filterObject(style, function (val, key) {
          return !ImageSpecificStyleKeys.has(key);
        });
        var imageStyle = filterObject(style, function (val, key) {
          return ImageSpecificStyleKeys.has(key);
        });
        var imageProps = merge(nativeProps, {
          style: [imageStyle, styles.absoluteImage],
          children: undefined
        });

        return React.createElement(
          View,
          { style: containerStyle, __source: {
              fileName: _jsxFileName,
              lineNumber: 316
            }
          },
          React.createElement(RKImage, babelHelpers.extends({}, imageProps, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 317
            }
          })),
          this.props.children
        );
      } else {
        if (this.context.isInAParentText) {
          return React.createElement(RCTTextInlineImage, babelHelpers.extends({}, nativeProps, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 323
            }
          }));
        } else {
          return React.createElement(RKImage, babelHelpers.extends({}, nativeProps, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 325
            }
          }));
        }
      }
    }
    return null;
  }
});

var styles = StyleSheet.create({
  base: {
    overflow: 'hidden'
  },
  absoluteImage: {
    left: 0,
    right: 0,
    top: 0,
    bottom: 0,
    position: 'absolute'
  }
});

var cfg = {
  nativeOnly: {
    src: true,
    loadingIndicatorSrc: true,
    shouldNotifyLoadEvents: true
  }
};
var RKImage = requireNativeComponent('RCTImageView', Image, cfg);
var RCTTextInlineImage = requireNativeComponent('RCTTextInlineImage', Image, cfg);

module.exports = Image;
}, 585, null, "Image");
__d(/* fbjs/lib/filterObject.js */function(global, require, module, exports) {

'use strict';

var hasOwnProperty = Object.prototype.hasOwnProperty;

function filterObject(object, callback, context) {
  if (!object) {
    return null;
  }
  var result = {};
  for (var name in object) {
    if (hasOwnProperty.call(object, name) && callback.call(context, object[name], name, object)) {
      result[name] = object[name];
    }
  }
  return result;
}

module.exports = filterObject;
}, 586, null, "fbjs/lib/filterObject.js");
__d(/* ScrollView */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native/Libraries/Components/ScrollView/ScrollView.js';
var ColorPropType = require(338            ); // 338 = ColorPropType
var EdgeInsetsPropType = require(442                 ); // 442 = EdgeInsetsPropType
var Platform = require(348       ); // 348 = Platform
var PointPropType = require(588            ); // 588 = PointPropType
var React = require(398    ); // 398 = React
var ReactNative = require(513          ); // 513 = ReactNative
var ScrollResponder = require(589              ); // 589 = ScrollResponder
var StyleSheet = require(421         ); // 421 = StyleSheet
var StyleSheetPropType = require(448                 ); // 448 = StyleSheetPropType
var View = require(441   ); // 441 = View
var ViewStylePropTypes = require(434                 ); // 434 = ViewStylePropTypes

var dismissKeyboard = require(382              ); // 382 = dismissKeyboard
var flattenStyle = require(345           ); // 345 = flattenStyle
var invariant = require(346                 ); // 346 = fbjs/lib/invariant
var processDecelerationRate = require(591                      ); // 591 = processDecelerationRate
var PropTypes = React.PropTypes;
var requireNativeComponent = require(450                     ); // 450 = requireNativeComponent

var ScrollView = React.createClass({
  displayName: 'ScrollView',

  propTypes: babelHelpers.extends({}, View.propTypes, {
    automaticallyAdjustContentInsets: PropTypes.bool,

    contentInset: EdgeInsetsPropType,

    contentOffset: PointPropType,

    bounces: PropTypes.bool,

    bouncesZoom: PropTypes.bool,

    alwaysBounceHorizontal: PropTypes.bool,

    alwaysBounceVertical: PropTypes.bool,

    centerContent: PropTypes.bool,

    contentContainerStyle: StyleSheetPropType(ViewStylePropTypes),

    decelerationRate: PropTypes.oneOfType([PropTypes.oneOf(['fast', 'normal']), PropTypes.number]),

    horizontal: PropTypes.bool,

    indicatorStyle: PropTypes.oneOf(['default', 'black', 'white']),

    directionalLockEnabled: PropTypes.bool,

    canCancelContentTouches: PropTypes.bool,

    keyboardDismissMode: PropTypes.oneOf(['none', 'interactive', 'on-drag']),

    keyboardShouldPersistTaps: PropTypes.oneOf(['always', 'never', 'handled', false, true]),

    maximumZoomScale: PropTypes.number,

    minimumZoomScale: PropTypes.number,

    onScroll: PropTypes.func,

    onScrollAnimationEnd: PropTypes.func,

    onContentSizeChange: PropTypes.func,

    pagingEnabled: PropTypes.bool,

    scrollEnabled: PropTypes.bool,

    scrollEventThrottle: PropTypes.number,

    scrollIndicatorInsets: EdgeInsetsPropType,

    scrollsToTop: PropTypes.bool,

    showsHorizontalScrollIndicator: PropTypes.bool,

    showsVerticalScrollIndicator: PropTypes.bool,

    stickyHeaderIndices: PropTypes.arrayOf(PropTypes.number),
    style: StyleSheetPropType(ViewStylePropTypes),

    snapToInterval: PropTypes.number,

    snapToAlignment: PropTypes.oneOf(['start', 'center', 'end']),

    removeClippedSubviews: PropTypes.bool,

    zoomScale: PropTypes.number,

    refreshControl: PropTypes.element,

    endFillColor: ColorPropType,

    scrollPerfTag: PropTypes.string,

    overScrollMode: PropTypes.oneOf(['auto', 'always', 'never'])
  }),

  mixins: [ScrollResponder.Mixin],

  getInitialState: function getInitialState() {
    return this.scrollResponderMixinGetInitialState();
  },

  setNativeProps: function setNativeProps(props) {
    this._scrollViewRef && this._scrollViewRef.setNativeProps(props);
  },

  getScrollResponder: function getScrollResponder() {
    return this;
  },

  getScrollableNode: function getScrollableNode() {
    return ReactNative.findNodeHandle(this._scrollViewRef);
  },

  getInnerViewNode: function getInnerViewNode() {
    return ReactNative.findNodeHandle(this._innerViewRef);
  },

  scrollTo: function scrollTo(y, x, animated) {
    if (typeof y === 'number') {
      console.warn('`scrollTo(y, x, animated)` is deprecated. Use `scrollTo({x: 5, y: 5, animated: true})` instead.');
    } else {
      var _ref = y || {};

      x = _ref.x;
      y = _ref.y;
      animated = _ref.animated;
    }
    this.getScrollResponder().scrollResponderScrollTo({ x: x || 0, y: y || 0, animated: animated !== false });
  },

  scrollToEnd: function scrollToEnd(options) {
    var animated = (options && options.animated) !== false;
    this.getScrollResponder().scrollResponderScrollToEnd({
      animated: animated
    });
  },

  scrollWithoutAnimationTo: function scrollWithoutAnimationTo() {
    var y = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
    var x = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

    console.warn('`scrollWithoutAnimationTo` is deprecated. Use `scrollTo` instead');
    this.scrollTo({ x: x, y: y, animated: false });
  },

  _handleScroll: function _handleScroll(e) {
    if (__DEV__) {
      if (this.props.onScroll && this.props.scrollEventThrottle == null && Platform.OS === 'ios') {
        console.log('You specified `onScroll` on a <ScrollView> but not ' + '`scrollEventThrottle`. You will only receive one event. ' + 'Using `16` you get all the events but be aware that it may ' + 'cause frame drops, use a bigger number if you don\'t need as ' + 'much precision.');
      }
    }
    if (Platform.OS === 'android') {
      if (this.props.keyboardDismissMode === 'on-drag') {
        dismissKeyboard();
      }
    }
    this.scrollResponderHandleScroll(e);
  },

  _handleContentOnLayout: function _handleContentOnLayout(e) {
    var _e$nativeEvent$layout = e.nativeEvent.layout,
        width = _e$nativeEvent$layout.width,
        height = _e$nativeEvent$layout.height;

    this.props.onContentSizeChange && this.props.onContentSizeChange(width, height);
  },

  _scrollViewRef: null,
  _setScrollViewRef: function _setScrollViewRef(ref) {
    this._scrollViewRef = ref;
  },

  _innerViewRef: null,
  _setInnerViewRef: function _setInnerViewRef(ref) {
    this._innerViewRef = ref;
  },

  render: function render() {
    var contentContainerStyle = [this.props.horizontal && styles.contentContainerHorizontal, this.props.contentContainerStyle];
    var style = void 0,
        childLayoutProps = void 0;
    if (__DEV__ && this.props.style) {
      style = flattenStyle(this.props.style);
      childLayoutProps = ['alignItems', 'justifyContent'].filter(function (prop) {
        return style && style[prop] !== undefined;
      });
      invariant(childLayoutProps.length === 0, 'ScrollView child layout (' + JSON.stringify(childLayoutProps) + ') must be applied through the contentContainerStyle prop.');
    }

    var contentSizeChangeProps = {};
    if (this.props.onContentSizeChange) {
      contentSizeChangeProps = {
        onLayout: this._handleContentOnLayout
      };
    }

    var contentContainer = React.createElement(
      View,
      babelHelpers.extends({}, contentSizeChangeProps, {
        ref: this._setInnerViewRef,
        style: contentContainerStyle,
        removeClippedSubviews: this.props.removeClippedSubviews,
        collapsable: false, __source: {
          fileName: _jsxFileName,
          lineNumber: 510
        }
      }),
      this.props.children
    );

    var alwaysBounceHorizontal = this.props.alwaysBounceHorizontal !== undefined ? this.props.alwaysBounceHorizontal : this.props.horizontal;

    var alwaysBounceVertical = this.props.alwaysBounceVertical !== undefined ? this.props.alwaysBounceVertical : !this.props.horizontal;

    var baseStyle = this.props.horizontal ? styles.baseHorizontal : styles.baseVertical;
    var props = babelHelpers.extends({}, this.props, {
      alwaysBounceHorizontal: alwaysBounceHorizontal,
      alwaysBounceVertical: alwaysBounceVertical,
      style: [baseStyle, this.props.style],

      onContentSizeChange: null,
      onTouchStart: this.scrollResponderHandleTouchStart,
      onTouchMove: this.scrollResponderHandleTouchMove,
      onTouchEnd: this.scrollResponderHandleTouchEnd,
      onScrollBeginDrag: this.scrollResponderHandleScrollBeginDrag,
      onScrollEndDrag: this.scrollResponderHandleScrollEndDrag,
      onMomentumScrollBegin: this.scrollResponderHandleMomentumScrollBegin,
      onMomentumScrollEnd: this.scrollResponderHandleMomentumScrollEnd,
      onStartShouldSetResponder: this.scrollResponderHandleStartShouldSetResponder,
      onStartShouldSetResponderCapture: this.scrollResponderHandleStartShouldSetResponderCapture,
      onScrollShouldSetResponder: this.scrollResponderHandleScrollShouldSetResponder,
      onScroll: this._handleScroll,
      onResponderGrant: this.scrollResponderHandleResponderGrant,
      onResponderTerminationRequest: this.scrollResponderHandleTerminationRequest,
      onResponderTerminate: this.scrollResponderHandleTerminate,
      onResponderRelease: this.scrollResponderHandleResponderRelease,
      onResponderReject: this.scrollResponderHandleResponderReject,
      sendMomentumEvents: this.props.onMomentumScrollBegin || this.props.onMomentumScrollEnd ? true : false
    });

    var decelerationRate = this.props.decelerationRate;

    if (decelerationRate) {
      props.decelerationRate = processDecelerationRate(decelerationRate);
    }

    var ScrollViewClass = void 0;
    if (Platform.OS === 'ios') {
      ScrollViewClass = RCTScrollView;
    } else if (Platform.OS === 'android') {
      if (this.props.horizontal) {
        ScrollViewClass = AndroidHorizontalScrollView;
      } else {
        ScrollViewClass = AndroidScrollView;
      }
    }
    invariant(ScrollViewClass !== undefined, 'ScrollViewClass must not be undefined');

    var refreshControl = this.props.refreshControl;
    if (refreshControl) {
      if (Platform.OS === 'ios') {
        return React.createElement(
          ScrollViewClass,
          babelHelpers.extends({}, props, { ref: this._setScrollViewRef, __source: {
              fileName: _jsxFileName,
              lineNumber: 582
            }
          }),
          refreshControl,
          contentContainer
        );
      } else if (Platform.OS === 'android') {

        return React.cloneElement(refreshControl, { style: props.style }, React.createElement(
          ScrollViewClass,
          babelHelpers.extends({}, props, { style: baseStyle, ref: this._setScrollViewRef, __source: {
              fileName: _jsxFileName,
              lineNumber: 597
            }
          }),
          contentContainer
        ));
      }
    }
    return React.createElement(
      ScrollViewClass,
      babelHelpers.extends({}, props, { ref: this._setScrollViewRef, __source: {
          fileName: _jsxFileName,
          lineNumber: 604
        }
      }),
      contentContainer
    );
  }
});

var styles = StyleSheet.create({
  baseVertical: {
    flexGrow: 1,
    flexShrink: 1,
    flexDirection: 'column',
    overflow: 'scroll'
  },
  baseHorizontal: {
    flexGrow: 1,
    flexShrink: 1,
    flexDirection: 'row',
    overflow: 'scroll'
  },
  contentContainerHorizontal: {
    flexDirection: 'row'
  }
});

var nativeOnlyProps = void 0,
    AndroidScrollView = void 0,
    AndroidHorizontalScrollView = void 0,
    RCTScrollView = void 0;
if (Platform.OS === 'android') {
  nativeOnlyProps = {
    nativeOnly: {
      sendMomentumEvents: true
    }
  };
  AndroidScrollView = requireNativeComponent('RCTScrollView', ScrollView, nativeOnlyProps);
  AndroidHorizontalScrollView = requireNativeComponent('AndroidHorizontalScrollView', ScrollView, nativeOnlyProps);
} else if (Platform.OS === 'ios') {
  nativeOnlyProps = {
    nativeOnly: {
      onMomentumScrollBegin: true,
      onMomentumScrollEnd: true,
      onScrollBeginDrag: true,
      onScrollEndDrag: true
    }
  };
  RCTScrollView = requireNativeComponent('RCTScrollView', ScrollView, nativeOnlyProps);
}

module.exports = ScrollView;
}, 587, null, "ScrollView");
__d(/* PointPropType */function(global, require, module, exports) {
'use strict';

var PropTypes = require(398    ).PropTypes; // 398 = React

var createStrictShapeTypeChecker = require(443                           ); // 443 = createStrictShapeTypeChecker

var PointPropType = createStrictShapeTypeChecker({
  x: PropTypes.number,
  y: PropTypes.number
});

module.exports = PointPropType;
}, 588, null, "PointPropType");
__d(/* ScrollResponder */function(global, require, module, exports) {
'use strict';

var Dimensions = require(423         ); // 423 = Dimensions
var Platform = require(348       ); // 348 = Platform
var Keyboard = require(381       ); // 381 = Keyboard
var ReactNative = require(513          ); // 513 = ReactNative
var Subscribable = require(590           ); // 590 = Subscribable
var TextInputState = require(347             ); // 347 = TextInputState
var UIManager = require(395        ); // 395 = UIManager
var warning = require(335               ); // 335 = fbjs/lib/warning

var _require = require(454                       ), // 454 = ReactNativeComponentTree
    getInstanceFromNode = _require.getInstanceFromNode;

var _require2 = require(349            ), // 349 = NativeModules
    ScrollViewManager = _require2.ScrollViewManager;

var invariant = require(346                 ); // 346 = fbjs/lib/invariant

var IS_ANIMATING_TOUCH_START_THRESHOLD_MS = 16;

function isTagInstanceOfTextInput(tag) {
  var instance = getInstanceFromNode(tag);
  return instance && instance.viewConfig && (instance.viewConfig.uiViewClassName === 'AndroidTextInput' || instance.viewConfig.uiViewClassName === 'RCTTextView' || instance.viewConfig.uiViewClassName === 'RCTTextField');
}

var ScrollResponderMixin = {
  mixins: [Subscribable.Mixin],
  scrollResponderMixinGetInitialState: function scrollResponderMixinGetInitialState() {
    return {
      isTouching: false,
      lastMomentumScrollBeginTime: 0,
      lastMomentumScrollEndTime: 0,

      observedScrollSinceBecomingResponder: false,
      becameResponderWhileAnimating: false
    };
  },

  scrollResponderHandleScrollShouldSetResponder: function scrollResponderHandleScrollShouldSetResponder() {
    return this.state.isTouching;
  },

  scrollResponderHandleStartShouldSetResponder: function scrollResponderHandleStartShouldSetResponder(e) {
    var currentlyFocusedTextInput = TextInputState.currentlyFocusedField();

    if (this.props.keyboardShouldPersistTaps === 'handled' && currentlyFocusedTextInput != null && e.target !== currentlyFocusedTextInput) {
      return true;
    }
    return false;
  },

  scrollResponderHandleStartShouldSetResponderCapture: function scrollResponderHandleStartShouldSetResponderCapture(e) {
    var currentlyFocusedTextInput = TextInputState.currentlyFocusedField();
    var keyboardShouldPersistTaps = this.props.keyboardShouldPersistTaps;

    var keyboardNeverPersistTaps = !keyboardShouldPersistTaps || keyboardShouldPersistTaps === 'never';
    if (keyboardNeverPersistTaps && currentlyFocusedTextInput != null && !isTagInstanceOfTextInput(e.target)) {
      return true;
    }
    return this.scrollResponderIsAnimating();
  },

  scrollResponderHandleResponderReject: function scrollResponderHandleResponderReject() {},

  scrollResponderHandleTerminationRequest: function scrollResponderHandleTerminationRequest() {
    return !this.state.observedScrollSinceBecomingResponder;
  },

  scrollResponderHandleTouchEnd: function scrollResponderHandleTouchEnd(e) {
    var nativeEvent = e.nativeEvent;
    this.state.isTouching = nativeEvent.touches.length !== 0;
    this.props.onTouchEnd && this.props.onTouchEnd(e);
  },

  scrollResponderHandleResponderRelease: function scrollResponderHandleResponderRelease(e) {
    this.props.onResponderRelease && this.props.onResponderRelease(e);

    var currentlyFocusedTextInput = TextInputState.currentlyFocusedField();
    if (this.props.keyboardShouldPersistTaps !== true && this.props.keyboardShouldPersistTaps !== 'always' && currentlyFocusedTextInput != null && e.target !== currentlyFocusedTextInput && !this.state.observedScrollSinceBecomingResponder && !this.state.becameResponderWhileAnimating) {
      this.props.onScrollResponderKeyboardDismissed && this.props.onScrollResponderKeyboardDismissed(e);
      TextInputState.blurTextInput(currentlyFocusedTextInput);
    }
  },

  scrollResponderHandleScroll: function scrollResponderHandleScroll(e) {
    this.state.observedScrollSinceBecomingResponder = true;
    this.props.onScroll && this.props.onScroll(e);
  },

  scrollResponderHandleResponderGrant: function scrollResponderHandleResponderGrant(e) {
    this.state.observedScrollSinceBecomingResponder = false;
    this.props.onResponderGrant && this.props.onResponderGrant(e);
    this.state.becameResponderWhileAnimating = this.scrollResponderIsAnimating();
  },

  scrollResponderHandleScrollBeginDrag: function scrollResponderHandleScrollBeginDrag(e) {
    this.props.onScrollBeginDrag && this.props.onScrollBeginDrag(e);
  },

  scrollResponderHandleScrollEndDrag: function scrollResponderHandleScrollEndDrag(e) {
    this.props.onScrollEndDrag && this.props.onScrollEndDrag(e);
  },

  scrollResponderHandleMomentumScrollBegin: function scrollResponderHandleMomentumScrollBegin(e) {
    this.state.lastMomentumScrollBeginTime = Date.now();
    this.props.onMomentumScrollBegin && this.props.onMomentumScrollBegin(e);
  },

  scrollResponderHandleMomentumScrollEnd: function scrollResponderHandleMomentumScrollEnd(e) {
    this.state.lastMomentumScrollEndTime = Date.now();
    this.props.onMomentumScrollEnd && this.props.onMomentumScrollEnd(e);
  },

  scrollResponderHandleTouchStart: function scrollResponderHandleTouchStart(e) {
    this.state.isTouching = true;
    this.props.onTouchStart && this.props.onTouchStart(e);
  },

  scrollResponderHandleTouchMove: function scrollResponderHandleTouchMove(e) {
    this.props.onTouchMove && this.props.onTouchMove(e);
  },

  scrollResponderIsAnimating: function scrollResponderIsAnimating() {
    var now = Date.now();
    var timeSinceLastMomentumScrollEnd = now - this.state.lastMomentumScrollEndTime;
    var isAnimating = timeSinceLastMomentumScrollEnd < IS_ANIMATING_TOUCH_START_THRESHOLD_MS || this.state.lastMomentumScrollEndTime < this.state.lastMomentumScrollBeginTime;
    return isAnimating;
  },

  scrollResponderGetScrollableNode: function scrollResponderGetScrollableNode() {
    return this.getScrollableNode ? this.getScrollableNode() : ReactNative.findNodeHandle(this);
  },

  scrollResponderScrollTo: function scrollResponderScrollTo(x, y, animated) {
    if (typeof x === 'number') {
      console.warn('`scrollResponderScrollTo(x, y, animated)` is deprecated. Use `scrollResponderScrollTo({x: 5, y: 5, animated: true})` instead.');
    } else {
      var _ref = x || {};

      x = _ref.x;
      y = _ref.y;
      animated = _ref.animated;
    }
    UIManager.dispatchViewManagerCommand(this.scrollResponderGetScrollableNode(), UIManager.RCTScrollView.Commands.scrollTo, [x || 0, y || 0, animated !== false]);
  },

  scrollResponderScrollToEnd: function scrollResponderScrollToEnd(options) {
    var animated = (options && options.animated) !== false;
    UIManager.dispatchViewManagerCommand(this.scrollResponderGetScrollableNode(), UIManager.RCTScrollView.Commands.scrollToEnd, [animated]);
  },

  scrollResponderScrollWithoutAnimationTo: function scrollResponderScrollWithoutAnimationTo(offsetX, offsetY) {
    console.warn('`scrollResponderScrollWithoutAnimationTo` is deprecated. Use `scrollResponderScrollTo` instead');
    this.scrollResponderScrollTo({ x: offsetX, y: offsetY, animated: false });
  },

  scrollResponderZoomTo: function scrollResponderZoomTo(rect, animated) {
    invariant(ScrollViewManager && ScrollViewManager.zoomToRect, 'zoomToRect is not implemented');
    if ('animated' in rect) {
      var animated = rect.animated,
          rect = babelHelpers.objectWithoutProperties(rect, ['animated']);
    } else if (typeof animated !== 'undefined') {
      console.warn('`scrollResponderZoomTo` `animated` argument is deprecated. Use `options.animated` instead');
    }
    ScrollViewManager.zoomToRect(this.scrollResponderGetScrollableNode(), rect, animated !== false);
  },

  scrollResponderScrollNativeHandleToKeyboard: function scrollResponderScrollNativeHandleToKeyboard(nodeHandle, additionalOffset, preventNegativeScrollOffset) {
    this.additionalScrollOffset = additionalOffset || 0;
    this.preventNegativeScrollOffset = !!preventNegativeScrollOffset;
    UIManager.measureLayout(nodeHandle, ReactNative.findNodeHandle(this.getInnerViewNode()), this.scrollResponderTextInputFocusError, this.scrollResponderInputMeasureAndScrollToKeyboard);
  },

  scrollResponderInputMeasureAndScrollToKeyboard: function scrollResponderInputMeasureAndScrollToKeyboard(left, top, width, height) {
    var keyboardScreenY = Dimensions.get('window').height;
    if (this.keyboardWillOpenTo) {
      keyboardScreenY = this.keyboardWillOpenTo.endCoordinates.screenY;
    }
    var scrollOffsetY = top - keyboardScreenY + height + this.additionalScrollOffset;

    if (this.preventNegativeScrollOffset) {
      scrollOffsetY = Math.max(0, scrollOffsetY);
    }
    this.scrollResponderScrollTo({ x: 0, y: scrollOffsetY, animated: true });

    this.additionalOffset = 0;
    this.preventNegativeScrollOffset = false;
  },

  scrollResponderTextInputFocusError: function scrollResponderTextInputFocusError(e) {
    console.error('Error measuring text field: ', e);
  },

  componentWillMount: function componentWillMount() {
    var keyboardShouldPersistTaps = this.props.keyboardShouldPersistTaps;

    warning(typeof keyboardShouldPersistTaps !== 'boolean', '\'keyboardShouldPersistTaps={' + keyboardShouldPersistTaps + '}\' is deprecated. ' + ('Use \'keyboardShouldPersistTaps="' + (keyboardShouldPersistTaps ? "always" : "never") + '"\' instead'));

    this.keyboardWillOpenTo = null;
    this.additionalScrollOffset = 0;
    this.addListenerOn(Keyboard, 'keyboardWillShow', this.scrollResponderKeyboardWillShow);
    this.addListenerOn(Keyboard, 'keyboardWillHide', this.scrollResponderKeyboardWillHide);
    this.addListenerOn(Keyboard, 'keyboardDidShow', this.scrollResponderKeyboardDidShow);
    this.addListenerOn(Keyboard, 'keyboardDidHide', this.scrollResponderKeyboardDidHide);
  },

  scrollResponderKeyboardWillShow: function scrollResponderKeyboardWillShow(e) {
    this.keyboardWillOpenTo = e;
    this.props.onKeyboardWillShow && this.props.onKeyboardWillShow(e);
  },

  scrollResponderKeyboardWillHide: function scrollResponderKeyboardWillHide(e) {
    this.keyboardWillOpenTo = null;
    this.props.onKeyboardWillHide && this.props.onKeyboardWillHide(e);
  },

  scrollResponderKeyboardDidShow: function scrollResponderKeyboardDidShow(e) {
    if (e) {
      this.keyboardWillOpenTo = e;
    }
    this.props.onKeyboardDidShow && this.props.onKeyboardDidShow(e);
  },

  scrollResponderKeyboardDidHide: function scrollResponderKeyboardDidHide(e) {
    this.keyboardWillOpenTo = null;
    this.props.onKeyboardDidHide && this.props.onKeyboardDidHide(e);
  }

};

var ScrollResponder = {
  Mixin: ScrollResponderMixin
};

module.exports = ScrollResponder;
}, 589, null, "ScrollResponder");
__d(/* Subscribable */function(global, require, module, exports) {
'use strict';

var Subscribable = {};

Subscribable.Mixin = {

  componentWillMount: function componentWillMount() {
    this._subscribableSubscriptions = [];
  },

  componentWillUnmount: function componentWillUnmount() {
    this._subscribableSubscriptions.forEach(function (subscription) {
      return subscription.remove();
    });
    this._subscribableSubscriptions = null;
  },

  addListenerOn: function addListenerOn(eventEmitter, eventType, listener, context) {
    this._subscribableSubscriptions.push(eventEmitter.addListener(eventType, listener, context));
  }
};

module.exports = Subscribable;
}, 590, null, "Subscribable");
__d(/* processDecelerationRate */function(global, require, module, exports) {
'use strict';

function processDecelerationRate(decelerationRate) {
  if (decelerationRate === 'normal') {
    decelerationRate = 0.998;
  } else if (decelerationRate === 'fast') {
    decelerationRate = 0.99;
  }
  return decelerationRate;
}

module.exports = processDecelerationRate;
}, 591, null, "processDecelerationRate");
__d(/* DatePickerIOS */function(global, require, module, exports) {

'use strict';

var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native/Libraries/Components/DatePicker/DatePickerIOS.android.js';
var React = require(398    ); // 398 = React
var StyleSheet = require(421         ); // 421 = StyleSheet
var Text = require(505   ); // 505 = Text
var View = require(441   ); // 441 = View

var DummyDatePickerIOS = function (_React$Component) {
  babelHelpers.inherits(DummyDatePickerIOS, _React$Component);

  function DummyDatePickerIOS() {
    babelHelpers.classCallCheck(this, DummyDatePickerIOS);
    return babelHelpers.possibleConstructorReturn(this, (DummyDatePickerIOS.__proto__ || Object.getPrototypeOf(DummyDatePickerIOS)).apply(this, arguments));
  }

  babelHelpers.createClass(DummyDatePickerIOS, [{
    key: 'render',
    value: function render() {
      return React.createElement(
        View,
        { style: [styles.dummyDatePickerIOS, this.props.style], __source: {
            fileName: _jsxFileName,
            lineNumber: 22
          }
        },
        React.createElement(
          Text,
          { style: styles.datePickerText, __source: {
              fileName: _jsxFileName,
              lineNumber: 23
            }
          },
          'DatePickerIOS is not supported on this platform!'
        )
      );
    }
  }]);
  return DummyDatePickerIOS;
}(React.Component);

var styles = StyleSheet.create({
  dummyDatePickerIOS: {
    height: 100,
    width: 300,
    backgroundColor: '#ffbcbc',
    borderWidth: 1,
    borderColor: 'red',
    alignItems: 'center',
    justifyContent: 'center',
    margin: 10
  },
  datePickerText: {
    color: '#333333',
    margin: 20
  }
});

module.exports = DummyDatePickerIOS;
}, 592, null, "DatePickerIOS");
__d(/* DrawerLayoutAndroid */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native/Libraries/Components/DrawerAndroid/DrawerLayoutAndroid.android.js';
var ColorPropType = require(338            ); // 338 = ColorPropType
var NativeMethodsMixin = require(341                 ); // 341 = NativeMethodsMixin
var Platform = require(348       ); // 348 = Platform
var React = require(398    ); // 398 = React
var ReactNative = require(513          ); // 513 = ReactNative
var StatusBar = require(594        ); // 594 = StatusBar
var StyleSheet = require(421         ); // 421 = StyleSheet
var UIManager = require(395        ); // 395 = UIManager
var View = require(441   ); // 441 = View

var DrawerConsts = UIManager.AndroidDrawerLayout.Constants;

var dismissKeyboard = require(382              ); // 382 = dismissKeyboard
var requireNativeComponent = require(450                     ); // 450 = requireNativeComponent

var ReactPropTypes = React.PropTypes;

var RK_DRAWER_REF = 'drawerlayout';
var INNERVIEW_REF = 'innerView';

var DRAWER_STATES = ['Idle', 'Dragging', 'Settling'];

var DrawerLayoutAndroid = React.createClass({
  displayName: 'DrawerLayoutAndroid',

  statics: {
    positions: DrawerConsts.DrawerPosition
  },

  propTypes: babelHelpers.extends({}, View.propTypes, {
    keyboardDismissMode: ReactPropTypes.oneOf(['none', 'on-drag']),

    drawerBackgroundColor: ColorPropType,

    drawerPosition: ReactPropTypes.oneOf([DrawerConsts.DrawerPosition.Left, DrawerConsts.DrawerPosition.Right]),

    drawerWidth: ReactPropTypes.number,

    drawerLockMode: ReactPropTypes.oneOf(['unlocked', 'locked-closed', 'locked-open']),

    onDrawerSlide: ReactPropTypes.func,

    onDrawerStateChanged: ReactPropTypes.func,

    onDrawerOpen: ReactPropTypes.func,

    onDrawerClose: ReactPropTypes.func,

    renderNavigationView: ReactPropTypes.func.isRequired,

    statusBarBackgroundColor: ColorPropType
  }),

  mixins: [NativeMethodsMixin],

  getDefaultProps: function getDefaultProps() {
    return {
      drawerBackgroundColor: 'white'
    };
  },

  getInitialState: function getInitialState() {
    return { statusBarBackgroundColor: undefined };
  },

  getInnerViewNode: function getInnerViewNode() {
    return this.refs[INNERVIEW_REF].getInnerViewNode();
  },

  componentDidMount: function componentDidMount() {
    this._updateStatusBarBackground();
  },

  componentDidReceiveProps: function componentDidReceiveProps() {
    this._updateStatusBarBackground();
  },

  render: function render() {
    var drawStatusBar = Platform.Version >= 21 && this.props.statusBarBackgroundColor;
    var drawerViewWrapper = React.createElement(
      View,
      {
        style: [styles.drawerSubview, { width: this.props.drawerWidth, backgroundColor: this.props.drawerBackgroundColor }],
        collapsable: false, __source: {
          fileName: _jsxFileName,
          lineNumber: 182
        }
      },
      this.props.renderNavigationView(),
      drawStatusBar && React.createElement(View, { style: styles.drawerStatusBar, __source: {
          fileName: _jsxFileName,
          lineNumber: 189
        }
      })
    );
    var childrenWrapper = React.createElement(
      View,
      { ref: INNERVIEW_REF, style: styles.mainSubview, collapsable: false, __source: {
          fileName: _jsxFileName,
          lineNumber: 192
        }
      },
      drawStatusBar && React.createElement(StatusBar, {
        translucent: true,
        backgroundColor: this.state.statusBarBackgroundColor,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 194
        }
      }),
      drawStatusBar && React.createElement(View, { style: [styles.statusBar, { backgroundColor: this.props.statusBarBackgroundColor }], __source: {
          fileName: _jsxFileName,
          lineNumber: 199
        }
      }),
      this.props.children
    );
    return React.createElement(
      AndroidDrawerLayout,
      babelHelpers.extends({}, this.props, {
        ref: RK_DRAWER_REF,
        drawerWidth: this.props.drawerWidth,
        drawerPosition: this.props.drawerPosition,
        drawerLockMode: this.props.drawerLockMode,
        style: [styles.base, this.props.style],
        onDrawerSlide: this._onDrawerSlide,
        onDrawerOpen: this._onDrawerOpen,
        onDrawerClose: this._onDrawerClose,
        onDrawerStateChanged: this._onDrawerStateChanged, __source: {
          fileName: _jsxFileName,
          lineNumber: 206
        }
      }),
      childrenWrapper,
      drawerViewWrapper
    );
  },

  _onDrawerSlide: function _onDrawerSlide(event) {
    if (this.props.onDrawerSlide) {
      this.props.onDrawerSlide(event);
    }
    if (this.props.keyboardDismissMode === 'on-drag') {
      dismissKeyboard();
    }
  },

  _onDrawerOpen: function _onDrawerOpen() {
    if (this.props.onDrawerOpen) {
      this.props.onDrawerOpen();
    }
  },

  _onDrawerClose: function _onDrawerClose() {
    if (this.props.onDrawerClose) {
      this.props.onDrawerClose();
    }
  },

  _onDrawerStateChanged: function _onDrawerStateChanged(event) {
    if (this.props.onDrawerStateChanged) {
      this.props.onDrawerStateChanged(DRAWER_STATES[event.nativeEvent.drawerState]);
    }
  },

  openDrawer: function openDrawer() {
    UIManager.dispatchViewManagerCommand(this._getDrawerLayoutHandle(), UIManager.AndroidDrawerLayout.Commands.openDrawer, null);
  },

  closeDrawer: function closeDrawer() {
    UIManager.dispatchViewManagerCommand(this._getDrawerLayoutHandle(), UIManager.AndroidDrawerLayout.Commands.closeDrawer, null);
  },

  _getDrawerLayoutHandle: function _getDrawerLayoutHandle() {
    return ReactNative.findNodeHandle(this.refs[RK_DRAWER_REF]);
  },

  _updateStatusBarBackground: function _updateStatusBarBackground() {
    var _this = this;

    if (Platform.Version >= 21 && this.props.statusBarBackgroundColor) {
      if (this.state.statusBarBackgroundColor !== 'transparent') {
        requestAnimationFrame(function () {
          _this.setState({ statusBarBackgroundColor: 'transparent' });
        });
      }
    } else {
      this.setState({ statusBarBackgroundColor: undefined });
    }
  }
});

var styles = StyleSheet.create({
  base: {
    flex: 1,
    elevation: 16
  },
  mainSubview: {
    position: 'absolute',
    top: 0,
    left: 0,
    right: 0,
    bottom: 0
  },
  drawerSubview: {
    position: 'absolute',
    top: 0,
    bottom: 0
  },
  statusBar: {
    height: StatusBar.currentHeight
  },
  drawerStatusBar: {
    position: 'absolute',
    top: 0,
    left: 0,
    right: 0,
    height: StatusBar.currentHeight,
    backgroundColor: 'rgba(0, 0, 0, 0.251)'
  }
});

var AndroidDrawerLayout = requireNativeComponent('AndroidDrawerLayout', DrawerLayoutAndroid);

module.exports = DrawerLayoutAndroid;
}, 593, null, "DrawerLayoutAndroid");
__d(/* StatusBar */function(global, require, module, exports) {
'use strict';

var React = require(398    ); // 398 = React
var ColorPropType = require(338            ); // 338 = ColorPropType
var Platform = require(348       ); // 348 = Platform

var processColor = require(436           ); // 436 = processColor

var StatusBarManager = require(349            ).StatusBarManager; // 349 = NativeModules

function mergePropsStack(propsStack, defaultValues) {
  return propsStack.reduce(function (prev, cur) {
    for (var prop in cur) {
      if (cur[prop] != null) {
        prev[prop] = cur[prop];
      }
    }
    return prev;
  }, babelHelpers.extends({}, defaultValues));
}

function createStackEntry(props) {
  return {
    backgroundColor: props.backgroundColor != null ? {
      value: props.backgroundColor,
      animated: props.animated
    } : null,
    barStyle: props.barStyle != null ? {
      value: props.barStyle,
      animated: props.animated
    } : null,
    translucent: props.translucent,
    hidden: props.hidden != null ? {
      value: props.hidden,
      animated: props.animated,
      transition: props.showHideTransition
    } : null,
    networkActivityIndicatorVisible: props.networkActivityIndicatorVisible
  };
}

var StatusBar = function (_React$Component) {
  babelHelpers.inherits(StatusBar, _React$Component);

  function StatusBar() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, StatusBar);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = StatusBar.__proto__ || Object.getPrototypeOf(StatusBar)).call.apply(_ref, [this].concat(args))), _this), _this._stackEntry = null, _this._updatePropsStack = function () {
      clearImmediate(StatusBar._updateImmediate);
      StatusBar._updateImmediate = setImmediate(function () {
        var oldProps = StatusBar._currentValues;
        var mergedProps = mergePropsStack(StatusBar._propsStack, StatusBar._defaultProps);

        if (Platform.OS === 'ios') {
          if (!oldProps || oldProps.barStyle.value !== mergedProps.barStyle.value) {
            StatusBarManager.setStyle(mergedProps.barStyle.value, mergedProps.barStyle.animated);
          }
          if (!oldProps || oldProps.hidden.value !== mergedProps.hidden.value) {
            StatusBarManager.setHidden(mergedProps.hidden.value, mergedProps.hidden.animated ? mergedProps.hidden.transition : 'none');
          }

          if (!oldProps || oldProps.networkActivityIndicatorVisible !== mergedProps.networkActivityIndicatorVisible) {
            StatusBarManager.setNetworkActivityIndicatorVisible(mergedProps.networkActivityIndicatorVisible);
          }
        } else if (Platform.OS === 'android') {
          if (!oldProps || oldProps.barStyle.value !== mergedProps.barStyle.value) {
            StatusBarManager.setStyle(mergedProps.barStyle.value);
          }
          if (!oldProps || oldProps.backgroundColor.value !== mergedProps.backgroundColor.value) {
            StatusBarManager.setColor(processColor(mergedProps.backgroundColor.value), mergedProps.backgroundColor.animated);
          }
          if (!oldProps || oldProps.hidden.value !== mergedProps.hidden.value) {
            StatusBarManager.setHidden(mergedProps.hidden.value);
          }
          if (!oldProps || oldProps.translucent !== mergedProps.translucent) {
            StatusBarManager.setTranslucent(mergedProps.translucent);
          }
        }

        StatusBar._currentValues = mergedProps;
      });
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(StatusBar, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this._stackEntry = createStackEntry(this.props);
      StatusBar._propsStack.push(this._stackEntry);
      this._updatePropsStack();
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      var index = StatusBar._propsStack.indexOf(this._stackEntry);
      StatusBar._propsStack.splice(index, 1);

      this._updatePropsStack();
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      var index = StatusBar._propsStack.indexOf(this._stackEntry);
      this._stackEntry = createStackEntry(this.props);
      StatusBar._propsStack[index] = this._stackEntry;

      this._updatePropsStack();
    }
  }, {
    key: 'render',
    value: function render() {
      return null;
    }
  }], [{
    key: 'setHidden',
    value: function setHidden(hidden, animation) {
      animation = animation || 'none';
      StatusBar._defaultProps.hidden.value = hidden;
      if (Platform.OS === 'ios') {
        StatusBarManager.setHidden(hidden, animation);
      } else if (Platform.OS === 'android') {
        StatusBarManager.setHidden(hidden);
      }
    }
  }, {
    key: 'setBarStyle',
    value: function setBarStyle(style, animated) {
      animated = animated || false;
      StatusBar._defaultProps.barStyle.value = style;
      if (Platform.OS === 'ios') {
        StatusBarManager.setStyle(style, animated);
      } else if (Platform.OS === 'android') {
        StatusBarManager.setStyle(style);
      }
    }
  }, {
    key: 'setNetworkActivityIndicatorVisible',
    value: function setNetworkActivityIndicatorVisible(visible) {
      if (Platform.OS !== 'ios') {
        console.warn('`setNetworkActivityIndicatorVisible` is only available on iOS');
        return;
      }
      StatusBar._defaultProps.networkActivityIndicatorVisible = visible;
      StatusBarManager.setNetworkActivityIndicatorVisible(visible);
    }
  }, {
    key: 'setBackgroundColor',
    value: function setBackgroundColor(color, animated) {
      if (Platform.OS !== 'android') {
        console.warn('`setBackgroundColor` is only available on Android');
        return;
      }
      animated = animated || false;
      StatusBar._defaultProps.backgroundColor.value = color;
      StatusBarManager.setColor(processColor(color), animated);
    }
  }, {
    key: 'setTranslucent',
    value: function setTranslucent(translucent) {
      if (Platform.OS !== 'android') {
        console.warn('`setTranslucent` is only available on Android');
        return;
      }
      StatusBar._defaultProps.translucent = translucent;
      StatusBarManager.setTranslucent(translucent);
    }
  }]);
  return StatusBar;
}(React.Component);

StatusBar._propsStack = [];
StatusBar._defaultProps = createStackEntry({
  animated: false,
  showHideTransition: 'fade',
  backgroundColor: 'black',
  barStyle: 'default',
  translucent: false,
  hidden: false,
  networkActivityIndicatorVisible: false
});
StatusBar._updateImmediate = null;
StatusBar._currentValues = null;
StatusBar.currentHeight = StatusBarManager.HEIGHT;
StatusBar.propTypes = {
  hidden: React.PropTypes.bool,

  animated: React.PropTypes.bool,

  backgroundColor: ColorPropType,

  translucent: React.PropTypes.bool,

  barStyle: React.PropTypes.oneOf(['default', 'light-content', 'dark-content']),

  networkActivityIndicatorVisible: React.PropTypes.bool,

  showHideTransition: React.PropTypes.oneOf(['fade', 'slide'])
};
StatusBar.defaultProps = {
  animated: false,
  showHideTransition: 'fade'
};


module.exports = StatusBar;
}, 594, null, "StatusBar");
__d(/* ImageEditor */function(global, require, module, exports) {
'use strict';

var RCTImageEditingManager = require(349            ).ImageEditingManager; // 349 = NativeModules

var ImageEditor = function () {
  function ImageEditor() {
    babelHelpers.classCallCheck(this, ImageEditor);
  }

  babelHelpers.createClass(ImageEditor, null, [{
    key: 'cropImage',
    value: function cropImage(uri, cropData, success, failure) {
      RCTImageEditingManager.cropImage(uri, cropData, success, failure);
    }
  }]);
  return ImageEditor;
}();

module.exports = ImageEditor;
}, 595, null, "ImageEditor");
__d(/* ImageStore */function(global, require, module, exports) {
'use strict';

var RCTImageStoreManager = require(349            ).ImageStoreManager; // 349 = NativeModules

var ImageStore = function () {
  function ImageStore() {
    babelHelpers.classCallCheck(this, ImageStore);
  }

  babelHelpers.createClass(ImageStore, null, [{
    key: 'hasImageForTag',
    value: function hasImageForTag(uri, callback) {
      if (RCTImageStoreManager.hasImageForTag) {
        RCTImageStoreManager.hasImageForTag(uri, callback);
      } else {
        console.warn('hasImageForTag() not implemented');
      }
    }
  }, {
    key: 'removeImageForTag',
    value: function removeImageForTag(uri) {
      if (RCTImageStoreManager.removeImageForTag) {
        RCTImageStoreManager.removeImageForTag(uri);
      } else {
        console.warn('removeImageForTag() not implemented');
      }
    }
  }, {
    key: 'addImageFromBase64',
    value: function addImageFromBase64(base64ImageData, success, failure) {
      RCTImageStoreManager.addImageFromBase64(base64ImageData, success, failure);
    }
  }, {
    key: 'getBase64ForTag',
    value: function getBase64ForTag(uri, success, failure) {
      RCTImageStoreManager.getBase64ForTag(uri, success, failure);
    }
  }]);
  return ImageStore;
}();

module.exports = ImageStore;
}, 596, null, "ImageStore");
__d(/* KeyboardAvoidingView */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native/Libraries/Components/Keyboard/KeyboardAvoidingView.js';
var Keyboard = require(381       ); // 381 = Keyboard
var LayoutAnimation = require(598              ); // 598 = LayoutAnimation
var Platform = require(348       ); // 348 = Platform
var React = require(398    ); // 398 = React
var TimerMixin = require(570                ); // 570 = react-timer-mixin
var View = require(441   ); // 441 = View

var PropTypes = React.PropTypes;

var viewRef = 'VIEW';

var KeyboardAvoidingView = React.createClass({
  displayName: 'KeyboardAvoidingView',

  mixins: [TimerMixin],

  propTypes: babelHelpers.extends({}, View.propTypes, {
    behavior: PropTypes.oneOf(['height', 'position', 'padding']),

    contentContainerStyle: View.propTypes.style,

    keyboardVerticalOffset: PropTypes.number.isRequired
  }),

  getDefaultProps: function getDefaultProps() {
    return {
      keyboardVerticalOffset: 0
    };
  },
  getInitialState: function getInitialState() {
    return {
      bottom: 0
    };
  },


  subscriptions: [],
  frame: null,

  relativeKeyboardHeight: function relativeKeyboardHeight(keyboardFrame) {
    var frame = this.frame;
    if (!frame || !keyboardFrame) {
      return 0;
    }

    var y1 = Math.max(frame.y, keyboardFrame.screenY - this.props.keyboardVerticalOffset);
    var y2 = Math.min(frame.y + frame.height, keyboardFrame.screenY + keyboardFrame.height - this.props.keyboardVerticalOffset);
    if (frame.y > keyboardFrame.screenY) {
      return frame.y + frame.height - keyboardFrame.screenY - this.props.keyboardVerticalOffset;
    }
    return Math.max(y2 - y1, 0);
  },
  onKeyboardChange: function onKeyboardChange(event) {
    if (!event) {
      this.setState({ bottom: 0 });
      return;
    }

    var duration = event.duration,
        easing = event.easing,
        endCoordinates = event.endCoordinates;

    var height = this.relativeKeyboardHeight(endCoordinates);

    if (duration && easing) {
      LayoutAnimation.configureNext({
        duration: duration,
        update: {
          duration: duration,
          type: LayoutAnimation.Types[easing] || 'keyboard'
        }
      });
    }
    this.setState({ bottom: height });
  },
  onLayout: function onLayout(event) {
    this.frame = event.nativeEvent.layout;
  },
  componentWillUpdate: function componentWillUpdate(nextProps, nextState, nextContext) {
    if (nextState.bottom === this.state.bottom && this.props.behavior === 'height' && nextProps.behavior === 'height') {
      nextState.bottom = 0;
    }
  },
  componentWillMount: function componentWillMount() {
    if (Platform.OS === 'ios') {
      this.subscriptions = [Keyboard.addListener('keyboardWillChangeFrame', this.onKeyboardChange)];
    } else {
      this.subscriptions = [Keyboard.addListener('keyboardDidHide', this.onKeyboardChange), Keyboard.addListener('keyboardDidShow', this.onKeyboardChange)];
    }
  },
  componentWillUnmount: function componentWillUnmount() {
    this.subscriptions.forEach(function (sub) {
      return sub.remove();
    });
  },
  render: function render() {
    var _props = this.props,
        behavior = _props.behavior,
        children = _props.children,
        style = _props.style,
        props = babelHelpers.objectWithoutProperties(_props, ['behavior', 'children', 'style']);


    switch (behavior) {
      case 'height':
        var heightStyle = void 0;
        if (this.frame) {
          heightStyle = { height: this.frame.height - this.state.bottom, flex: 0 };
        }
        return React.createElement(
          View,
          babelHelpers.extends({ ref: viewRef, style: [style, heightStyle], onLayout: this.onLayout }, props, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 169
            }
          }),
          children
        );

      case 'position':
        var positionStyle = { bottom: this.state.bottom };
        var contentContainerStyle = this.props.contentContainerStyle;


        return React.createElement(
          View,
          babelHelpers.extends({ ref: viewRef, style: style, onLayout: this.onLayout }, props, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 179
            }
          }),
          React.createElement(
            View,
            { style: [contentContainerStyle, positionStyle], __source: {
                fileName: _jsxFileName,
                lineNumber: 180
              }
            },
            children
          )
        );

      case 'padding':
        var paddingStyle = { paddingBottom: this.state.bottom };
        return React.createElement(
          View,
          babelHelpers.extends({ ref: viewRef, style: [style, paddingStyle], onLayout: this.onLayout }, props, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 189
            }
          }),
          children
        );

      default:
        return React.createElement(
          View,
          babelHelpers.extends({ ref: viewRef, onLayout: this.onLayout, style: style }, props, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 196
            }
          }),
          children
        );
    }
  }
});

module.exports = KeyboardAvoidingView;
}, 597, null, "KeyboardAvoidingView");
__d(/* LayoutAnimation */function(global, require, module, exports) {
'use strict';

var _require = require(398    ), // 398 = React
    PropTypes = _require.PropTypes;

var UIManager = require(395        ); // 395 = UIManager

var createStrictShapeTypeChecker = require(443                           ); // 443 = createStrictShapeTypeChecker
var keyMirror = require(427                 ); // 427 = fbjs/lib/keyMirror

var TypesEnum = {
  spring: true,
  linear: true,
  easeInEaseOut: true,
  easeIn: true,
  easeOut: true,
  keyboard: true
};
var Types = keyMirror(TypesEnum);

var PropertiesEnum = {
  opacity: true,
  scaleXY: true
};
var Properties = keyMirror(PropertiesEnum);

var animChecker = createStrictShapeTypeChecker({
  duration: PropTypes.number,
  delay: PropTypes.number,
  springDamping: PropTypes.number,
  initialVelocity: PropTypes.number,
  type: PropTypes.oneOf(Object.keys(Types)).isRequired,
  property: PropTypes.oneOf(Object.keys(Properties))
});

var configChecker = createStrictShapeTypeChecker({
  duration: PropTypes.number.isRequired,
  create: animChecker,
  update: animChecker,
  delete: animChecker
});

function configureNext(config, onAnimationDidEnd) {
  configChecker({ config: config }, 'config', 'LayoutAnimation.configureNext');
  UIManager.configureNextLayoutAnimation(config, onAnimationDidEnd || function () {}, function () {});
}

function create(duration, type, creationProp) {
  return {
    duration: duration,
    create: {
      type: type,
      property: creationProp
    },
    update: {
      type: type
    },
    delete: {
      type: type,
      property: creationProp
    }
  };
}

var Presets = {
  easeInEaseOut: create(300, Types.easeInEaseOut, Properties.opacity),
  linear: create(500, Types.linear, Properties.opacity),
  spring: {
    duration: 700,
    create: {
      type: Types.linear,
      property: Properties.opacity
    },
    update: {
      type: Types.spring,
      springDamping: 0.4
    },
    delete: {
      type: Types.linear,
      property: Properties.opacity
    }
  }
};

var LayoutAnimation = {
  configureNext: configureNext,

  create: create,
  Types: Types,
  Properties: Properties,
  configChecker: configChecker,
  Presets: Presets,
  easeInEaseOut: configureNext.bind(null, Presets.easeInEaseOut),
  linear: configureNext.bind(null, Presets.linear),
  spring: configureNext.bind(null, Presets.spring)
};

module.exports = LayoutAnimation;
}, 598, null, "LayoutAnimation");
__d(/* ListView */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native/Libraries/CustomComponents/ListView/ListView.js';
var ListViewDataSource = require(600                 ); // 600 = ListViewDataSource
var React = require(398    ); // 398 = React
var ReactNative = require(513          ); // 513 = ReactNative
var RCTScrollViewManager = require(349            ).ScrollViewManager; // 349 = NativeModules
var ScrollView = require(587         ); // 587 = ScrollView
var ScrollResponder = require(589              ); // 589 = ScrollResponder
var StaticRenderer = require(602             ); // 602 = StaticRenderer
var TimerMixin = require(570                ); // 570 = react-timer-mixin

var cloneReferencedElement = require(603                             ); // 603 = react-clone-referenced-element
var isEmpty = require(601      ); // 601 = isEmpty
var merge = require(444    ); // 444 = merge

var PropTypes = React.PropTypes;

var DEFAULT_PAGE_SIZE = 1;
var DEFAULT_INITIAL_ROWS = 10;
var DEFAULT_SCROLL_RENDER_AHEAD = 1000;
var DEFAULT_END_REACHED_THRESHOLD = 1000;
var DEFAULT_SCROLL_CALLBACK_THROTTLE = 50;

var ListView = React.createClass({
  displayName: 'ListView',

  _childFrames: [],
  _sentEndForContentLength: null,
  _scrollComponent: null,
  _prevRenderedRowsCount: 0,
  _visibleRows: {},
  scrollProperties: {},

  mixins: [ScrollResponder.Mixin, TimerMixin],

  statics: {
    DataSource: ListViewDataSource
  },

  propTypes: babelHelpers.extends({}, ScrollView.propTypes, {
    dataSource: PropTypes.instanceOf(ListViewDataSource).isRequired,

    renderSeparator: PropTypes.func,

    renderRow: PropTypes.func.isRequired,

    initialListSize: PropTypes.number.isRequired,

    onEndReached: PropTypes.func,

    onEndReachedThreshold: PropTypes.number.isRequired,

    pageSize: PropTypes.number.isRequired,

    renderFooter: PropTypes.func,
    renderHeader: PropTypes.func,

    renderSectionHeader: PropTypes.func,

    renderScrollComponent: React.PropTypes.func.isRequired,

    scrollRenderAheadDistance: React.PropTypes.number.isRequired,

    onChangeVisibleRows: React.PropTypes.func,

    removeClippedSubviews: React.PropTypes.bool,

    stickySectionHeadersEnabled: React.PropTypes.bool,

    stickyHeaderIndices: PropTypes.arrayOf(PropTypes.number).isRequired,

    enableEmptySections: PropTypes.bool
  }),

  getMetrics: function getMetrics() {
    return {
      contentLength: this.scrollProperties.contentLength,
      totalRows: this.props.enableEmptySections ? this.props.dataSource.getRowAndSectionCount() : this.props.dataSource.getRowCount(),
      renderedRows: this.state.curRenderedRowsCount,
      visibleRows: Object.keys(this._visibleRows).length
    };
  },

  getScrollResponder: function getScrollResponder() {
    if (this._scrollComponent && this._scrollComponent.getScrollResponder) {
      return this._scrollComponent.getScrollResponder();
    }
  },

  getScrollableNode: function getScrollableNode() {
    if (this._scrollComponent && this._scrollComponent.getScrollableNode) {
      return this._scrollComponent.getScrollableNode();
    } else {
      return ReactNative.findNodeHandle(this._scrollComponent);
    }
  },

  scrollTo: function scrollTo() {
    if (this._scrollComponent && this._scrollComponent.scrollTo) {
      var _scrollComponent;

      (_scrollComponent = this._scrollComponent).scrollTo.apply(_scrollComponent, arguments);
    }
  },

  scrollToEnd: function scrollToEnd(options) {
    if (this._scrollComponent) {
      if (this._scrollComponent.scrollToEnd) {
        this._scrollComponent.scrollToEnd(options);
      } else {
        console.warn('The scroll component used by the ListView does not support ' + 'scrollToEnd. Check the renderScrollComponent prop of your ListView.');
      }
    }
  },

  setNativeProps: function setNativeProps(props) {
    if (this._scrollComponent) {
      this._scrollComponent.setNativeProps(props);
    }
  },

  getDefaultProps: function getDefaultProps() {
    return {
      initialListSize: DEFAULT_INITIAL_ROWS,
      pageSize: DEFAULT_PAGE_SIZE,
      renderScrollComponent: function renderScrollComponent(props) {
        return React.createElement(ScrollView, babelHelpers.extends({}, props, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 329
          }
        }));
      },
      scrollRenderAheadDistance: DEFAULT_SCROLL_RENDER_AHEAD,
      onEndReachedThreshold: DEFAULT_END_REACHED_THRESHOLD,
      stickySectionHeadersEnabled: true,
      stickyHeaderIndices: []
    };
  },

  getInitialState: function getInitialState() {
    return {
      curRenderedRowsCount: this.props.initialListSize,
      highlightedRow: {}
    };
  },

  getInnerViewNode: function getInnerViewNode() {
    return this._scrollComponent.getInnerViewNode();
  },

  componentWillMount: function componentWillMount() {
    this.scrollProperties = {
      visibleLength: null,
      contentLength: null,
      offset: 0
    };
    this._childFrames = [];
    this._visibleRows = {};
    this._prevRenderedRowsCount = 0;
    this._sentEndForContentLength = null;
  },

  componentDidMount: function componentDidMount() {
    var _this = this;

    this.requestAnimationFrame(function () {
      _this._measureAndUpdateScrollProps();
    });
  },

  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    var _this2 = this;

    if (this.props.dataSource !== nextProps.dataSource || this.props.initialListSize !== nextProps.initialListSize) {
      this.setState(function (state, props) {
        _this2._prevRenderedRowsCount = 0;
        return {
          curRenderedRowsCount: Math.min(Math.max(state.curRenderedRowsCount, props.initialListSize), props.enableEmptySections ? props.dataSource.getRowAndSectionCount() : props.dataSource.getRowCount())
        };
      }, function () {
        return _this2._renderMoreRowsIfNeeded();
      });
    }
  },

  componentDidUpdate: function componentDidUpdate() {
    var _this3 = this;

    this.requestAnimationFrame(function () {
      _this3._measureAndUpdateScrollProps();
    });
  },

  _onRowHighlighted: function _onRowHighlighted(sectionID, rowID) {
    this.setState({ highlightedRow: { sectionID: sectionID, rowID: rowID } });
  },

  render: function render() {
    var bodyComponents = [];

    var dataSource = this.props.dataSource;
    var allRowIDs = dataSource.rowIdentities;
    var rowCount = 0;
    var stickySectionHeaderIndices = [];

    var header = this.props.renderHeader && this.props.renderHeader();
    var footer = this.props.renderFooter && this.props.renderFooter();
    var totalIndex = header ? 1 : 0;

    for (var sectionIdx = 0; sectionIdx < allRowIDs.length; sectionIdx++) {
      var sectionID = dataSource.sectionIdentities[sectionIdx];
      var rowIDs = allRowIDs[sectionIdx];
      if (rowIDs.length === 0) {
        if (this.props.enableEmptySections === undefined) {
          var warning = require(335               ); // 335 = fbjs/lib/warning
          warning(false, 'In next release empty section headers will be rendered.' + ' In this release you can use \'enableEmptySections\' flag to render empty section headers.');
          continue;
        } else {
          var invariant = require(346                 ); // 346 = fbjs/lib/invariant
          invariant(this.props.enableEmptySections, 'In next release \'enableEmptySections\' flag will be deprecated, empty section headers will always be rendered.' + ' If empty section headers are not desirable their indices should be excluded from sectionIDs object.' + ' In this release \'enableEmptySections\' may only have value \'true\' to allow empty section headers rendering.');
        }
      }

      if (this.props.renderSectionHeader) {
        var shouldUpdateHeader = rowCount >= this._prevRenderedRowsCount && dataSource.sectionHeaderShouldUpdate(sectionIdx);
        bodyComponents.push(React.createElement(StaticRenderer, {
          key: 's_' + sectionID,
          shouldUpdate: !!shouldUpdateHeader,
          render: this.props.renderSectionHeader.bind(null, dataSource.getSectionHeaderData(sectionIdx), sectionID),
          __source: {
            fileName: _jsxFileName,
            lineNumber: 432
          }
        }));
        if (this.props.stickySectionHeadersEnabled) {
          stickySectionHeaderIndices.push(totalIndex++);
        }
      }

      for (var rowIdx = 0; rowIdx < rowIDs.length; rowIdx++) {
        var rowID = rowIDs[rowIdx];
        var comboID = sectionID + '_' + rowID;
        var shouldUpdateRow = rowCount >= this._prevRenderedRowsCount && dataSource.rowShouldUpdate(sectionIdx, rowIdx);
        var row = React.createElement(StaticRenderer, {
          key: 'r_' + comboID,
          shouldUpdate: !!shouldUpdateRow,
          render: this.props.renderRow.bind(null, dataSource.getRowData(sectionIdx, rowIdx), sectionID, rowID, this._onRowHighlighted),
          __source: {
            fileName: _jsxFileName,
            lineNumber: 453
          }
        });
        bodyComponents.push(row);
        totalIndex++;

        if (this.props.renderSeparator && (rowIdx !== rowIDs.length - 1 || sectionIdx === allRowIDs.length - 1)) {
          var adjacentRowHighlighted = this.state.highlightedRow.sectionID === sectionID && (this.state.highlightedRow.rowID === rowID || this.state.highlightedRow.rowID === rowIDs[rowIdx + 1]);
          var separator = this.props.renderSeparator(sectionID, rowID, adjacentRowHighlighted);
          if (separator) {
            bodyComponents.push(separator);
            totalIndex++;
          }
        }
        if (++rowCount === this.state.curRenderedRowsCount) {
          break;
        }
      }
      if (rowCount >= this.state.curRenderedRowsCount) {
        break;
      }
    }

    var _props = this.props,
        renderScrollComponent = _props.renderScrollComponent,
        props = babelHelpers.objectWithoutProperties(_props, ['renderScrollComponent']);

    if (!props.scrollEventThrottle) {
      props.scrollEventThrottle = DEFAULT_SCROLL_CALLBACK_THROTTLE;
    }
    if (props.removeClippedSubviews === undefined) {
      props.removeClippedSubviews = true;
    }
    babelHelpers.extends(props, {
      onScroll: this._onScroll,
      stickyHeaderIndices: this.props.stickyHeaderIndices.concat(stickySectionHeaderIndices),

      onKeyboardWillShow: undefined,
      onKeyboardWillHide: undefined,
      onKeyboardDidShow: undefined,
      onKeyboardDidHide: undefined
    });

    return cloneReferencedElement(renderScrollComponent(props), {
      ref: this._setScrollComponentRef,
      onContentSizeChange: this._onContentSizeChange,
      onLayout: this._onLayout
    }, header, bodyComponents, footer);
  },

  _measureAndUpdateScrollProps: function _measureAndUpdateScrollProps() {
    var scrollComponent = this.getScrollResponder();
    if (!scrollComponent || !scrollComponent.getInnerViewNode) {
      return;
    }

    RCTScrollViewManager && RCTScrollViewManager.calculateChildFrames && RCTScrollViewManager.calculateChildFrames(ReactNative.findNodeHandle(scrollComponent), this._updateVisibleRows);
  },

  _setScrollComponentRef: function _setScrollComponentRef(scrollComponent) {
    this._scrollComponent = scrollComponent;
  },

  _onContentSizeChange: function _onContentSizeChange(width, height) {
    var contentLength = !this.props.horizontal ? height : width;
    if (contentLength !== this.scrollProperties.contentLength) {
      this.scrollProperties.contentLength = contentLength;
      this._updateVisibleRows();
      this._renderMoreRowsIfNeeded();
    }
    this.props.onContentSizeChange && this.props.onContentSizeChange(width, height);
  },

  _onLayout: function _onLayout(event) {
    var _event$nativeEvent$la = event.nativeEvent.layout,
        width = _event$nativeEvent$la.width,
        height = _event$nativeEvent$la.height;

    var visibleLength = !this.props.horizontal ? height : width;
    if (visibleLength !== this.scrollProperties.visibleLength) {
      this.scrollProperties.visibleLength = visibleLength;
      this._updateVisibleRows();
      this._renderMoreRowsIfNeeded();
    }
    this.props.onLayout && this.props.onLayout(event);
  },

  _maybeCallOnEndReached: function _maybeCallOnEndReached(event) {
    if (this.props.onEndReached && this.scrollProperties.contentLength !== this._sentEndForContentLength && this._getDistanceFromEnd(this.scrollProperties) < this.props.onEndReachedThreshold && this.state.curRenderedRowsCount === (this.props.enableEmptySections ? this.props.dataSource.getRowAndSectionCount() : this.props.dataSource.getRowCount())) {
      this._sentEndForContentLength = this.scrollProperties.contentLength;
      this.props.onEndReached(event);
      return true;
    }
    return false;
  },

  _renderMoreRowsIfNeeded: function _renderMoreRowsIfNeeded() {
    if (this.scrollProperties.contentLength === null || this.scrollProperties.visibleLength === null || this.state.curRenderedRowsCount === (this.props.enableEmptySections ? this.props.dataSource.getRowAndSectionCount() : this.props.dataSource.getRowCount())) {
      this._maybeCallOnEndReached();
      return;
    }

    var distanceFromEnd = this._getDistanceFromEnd(this.scrollProperties);
    if (distanceFromEnd < this.props.scrollRenderAheadDistance) {
      this._pageInNewRows();
    }
  },

  _pageInNewRows: function _pageInNewRows() {
    var _this4 = this;

    this.setState(function (state, props) {
      var rowsToRender = Math.min(state.curRenderedRowsCount + props.pageSize, props.enableEmptySections ? props.dataSource.getRowAndSectionCount() : props.dataSource.getRowCount());
      _this4._prevRenderedRowsCount = state.curRenderedRowsCount;
      return {
        curRenderedRowsCount: rowsToRender
      };
    }, function () {
      _this4._measureAndUpdateScrollProps();
      _this4._prevRenderedRowsCount = _this4.state.curRenderedRowsCount;
    });
  },

  _getDistanceFromEnd: function _getDistanceFromEnd(scrollProperties) {
    return scrollProperties.contentLength - scrollProperties.visibleLength - scrollProperties.offset;
  },

  _updateVisibleRows: function _updateVisibleRows(updatedFrames) {
    var _this5 = this;

    if (!this.props.onChangeVisibleRows) {
      return;
    }
    if (updatedFrames) {
      updatedFrames.forEach(function (newFrame) {
        _this5._childFrames[newFrame.index] = merge(newFrame);
      });
    }
    var isVertical = !this.props.horizontal;
    var dataSource = this.props.dataSource;
    var visibleMin = this.scrollProperties.offset;
    var visibleMax = visibleMin + this.scrollProperties.visibleLength;
    var allRowIDs = dataSource.rowIdentities;

    var header = this.props.renderHeader && this.props.renderHeader();
    var totalIndex = header ? 1 : 0;
    var visibilityChanged = false;
    var changedRows = {};
    for (var sectionIdx = 0; sectionIdx < allRowIDs.length; sectionIdx++) {
      var rowIDs = allRowIDs[sectionIdx];
      if (rowIDs.length === 0) {
        continue;
      }
      var sectionID = dataSource.sectionIdentities[sectionIdx];
      if (this.props.renderSectionHeader) {
        totalIndex++;
      }
      var visibleSection = this._visibleRows[sectionID];
      if (!visibleSection) {
        visibleSection = {};
      }
      for (var rowIdx = 0; rowIdx < rowIDs.length; rowIdx++) {
        var rowID = rowIDs[rowIdx];
        var frame = this._childFrames[totalIndex];
        totalIndex++;
        if (this.props.renderSeparator && (rowIdx !== rowIDs.length - 1 || sectionIdx === allRowIDs.length - 1)) {
          totalIndex++;
        }
        if (!frame) {
          break;
        }
        var rowVisible = visibleSection[rowID];
        var min = isVertical ? frame.y : frame.x;
        var max = min + (isVertical ? frame.height : frame.width);
        if (!min && !max || min === max) {
          break;
        }
        if (min > visibleMax || max < visibleMin) {
          if (rowVisible) {
            visibilityChanged = true;
            delete visibleSection[rowID];
            if (!changedRows[sectionID]) {
              changedRows[sectionID] = {};
            }
            changedRows[sectionID][rowID] = false;
          }
        } else if (!rowVisible) {
          visibilityChanged = true;
          visibleSection[rowID] = true;
          if (!changedRows[sectionID]) {
            changedRows[sectionID] = {};
          }
          changedRows[sectionID][rowID] = true;
        }
      }
      if (!isEmpty(visibleSection)) {
        this._visibleRows[sectionID] = visibleSection;
      } else if (this._visibleRows[sectionID]) {
        delete this._visibleRows[sectionID];
      }
    }
    visibilityChanged && this.props.onChangeVisibleRows(this._visibleRows, changedRows);
  },

  _onScroll: function _onScroll(e) {
    var isVertical = !this.props.horizontal;
    this.scrollProperties.visibleLength = e.nativeEvent.layoutMeasurement[isVertical ? 'height' : 'width'];
    this.scrollProperties.contentLength = e.nativeEvent.contentSize[isVertical ? 'height' : 'width'];
    this.scrollProperties.offset = e.nativeEvent.contentOffset[isVertical ? 'y' : 'x'];
    this._updateVisibleRows(e.nativeEvent.updatedChildFrames);
    if (!this._maybeCallOnEndReached(e)) {
      this._renderMoreRowsIfNeeded();
    }

    if (this.props.onEndReached && this._getDistanceFromEnd(this.scrollProperties) > this.props.onEndReachedThreshold) {
      this._sentEndForContentLength = null;
    }

    this.props.onScroll && this.props.onScroll(e);
  }
});

module.exports = ListView;
}, 599, null, "ListView");
__d(/* ListViewDataSource */function(global, require, module, exports) {
'use strict';

var invariant = require(346                 ); // 346 = fbjs/lib/invariant
var isEmpty = require(601      ); // 601 = isEmpty
var warning = require(335               ); // 335 = fbjs/lib/warning

function defaultGetRowData(dataBlob, sectionID, rowID) {
  return dataBlob[sectionID][rowID];
}

function defaultGetSectionHeaderData(dataBlob, sectionID) {
  return dataBlob[sectionID];
}

var ListViewDataSource = function () {
  function ListViewDataSource(params) {
    babelHelpers.classCallCheck(this, ListViewDataSource);

    invariant(params && typeof params.rowHasChanged === 'function', 'Must provide a rowHasChanged function.');
    this._rowHasChanged = params.rowHasChanged;
    this._getRowData = params.getRowData || defaultGetRowData;
    this._sectionHeaderHasChanged = params.sectionHeaderHasChanged;
    this._getSectionHeaderData = params.getSectionHeaderData || defaultGetSectionHeaderData;

    this._dataBlob = null;
    this._dirtyRows = [];
    this._dirtySections = [];
    this._cachedRowCount = 0;

    this.rowIdentities = [];
    this.sectionIdentities = [];
  }

  babelHelpers.createClass(ListViewDataSource, [{
    key: 'cloneWithRows',
    value: function cloneWithRows(dataBlob, rowIdentities) {
      var rowIds = rowIdentities ? [rowIdentities] : null;
      if (!this._sectionHeaderHasChanged) {
        this._sectionHeaderHasChanged = function () {
          return false;
        };
      }
      return this.cloneWithRowsAndSections({ s1: dataBlob }, ['s1'], rowIds);
    }
  }, {
    key: 'cloneWithRowsAndSections',
    value: function cloneWithRowsAndSections(dataBlob, sectionIdentities, rowIdentities) {
      invariant(typeof this._sectionHeaderHasChanged === 'function', 'Must provide a sectionHeaderHasChanged function with section data.');
      invariant(!sectionIdentities || !rowIdentities || sectionIdentities.length === rowIdentities.length, 'row and section ids lengths must be the same');

      var newSource = new ListViewDataSource({
        getRowData: this._getRowData,
        getSectionHeaderData: this._getSectionHeaderData,
        rowHasChanged: this._rowHasChanged,
        sectionHeaderHasChanged: this._sectionHeaderHasChanged
      });
      newSource._dataBlob = dataBlob;
      if (sectionIdentities) {
        newSource.sectionIdentities = sectionIdentities;
      } else {
        newSource.sectionIdentities = Object.keys(dataBlob);
      }
      if (rowIdentities) {
        newSource.rowIdentities = rowIdentities;
      } else {
        newSource.rowIdentities = [];
        newSource.sectionIdentities.forEach(function (sectionID) {
          newSource.rowIdentities.push(Object.keys(dataBlob[sectionID]));
        });
      }
      newSource._cachedRowCount = countRows(newSource.rowIdentities);

      newSource._calculateDirtyArrays(this._dataBlob, this.sectionIdentities, this.rowIdentities);

      return newSource;
    }
  }, {
    key: 'getRowCount',
    value: function getRowCount() {
      return this._cachedRowCount;
    }
  }, {
    key: 'getRowAndSectionCount',
    value: function getRowAndSectionCount() {
      return this._cachedRowCount + this.sectionIdentities.length;
    }
  }, {
    key: 'rowShouldUpdate',
    value: function rowShouldUpdate(sectionIndex, rowIndex) {
      var needsUpdate = this._dirtyRows[sectionIndex][rowIndex];
      warning(needsUpdate !== undefined, 'missing dirtyBit for section, row: ' + sectionIndex + ', ' + rowIndex);
      return needsUpdate;
    }
  }, {
    key: 'getRowData',
    value: function getRowData(sectionIndex, rowIndex) {
      var sectionID = this.sectionIdentities[sectionIndex];
      var rowID = this.rowIdentities[sectionIndex][rowIndex];
      warning(sectionID !== undefined && rowID !== undefined, 'rendering invalid section, row: ' + sectionIndex + ', ' + rowIndex);
      return this._getRowData(this._dataBlob, sectionID, rowID);
    }
  }, {
    key: 'getRowIDForFlatIndex',
    value: function getRowIDForFlatIndex(index) {
      var accessIndex = index;
      for (var ii = 0; ii < this.sectionIdentities.length; ii++) {
        if (accessIndex >= this.rowIdentities[ii].length) {
          accessIndex -= this.rowIdentities[ii].length;
        } else {
          return this.rowIdentities[ii][accessIndex];
        }
      }
      return null;
    }
  }, {
    key: 'getSectionIDForFlatIndex',
    value: function getSectionIDForFlatIndex(index) {
      var accessIndex = index;
      for (var ii = 0; ii < this.sectionIdentities.length; ii++) {
        if (accessIndex >= this.rowIdentities[ii].length) {
          accessIndex -= this.rowIdentities[ii].length;
        } else {
          return this.sectionIdentities[ii];
        }
      }
      return null;
    }
  }, {
    key: 'getSectionLengths',
    value: function getSectionLengths() {
      var results = [];
      for (var ii = 0; ii < this.sectionIdentities.length; ii++) {
        results.push(this.rowIdentities[ii].length);
      }
      return results;
    }
  }, {
    key: 'sectionHeaderShouldUpdate',
    value: function sectionHeaderShouldUpdate(sectionIndex) {
      var needsUpdate = this._dirtySections[sectionIndex];
      warning(needsUpdate !== undefined, 'missing dirtyBit for section: ' + sectionIndex);
      return needsUpdate;
    }
  }, {
    key: 'getSectionHeaderData',
    value: function getSectionHeaderData(sectionIndex) {
      if (!this._getSectionHeaderData) {
        return null;
      }
      var sectionID = this.sectionIdentities[sectionIndex];
      warning(sectionID !== undefined, 'renderSection called on invalid section: ' + sectionIndex);
      return this._getSectionHeaderData(this._dataBlob, sectionID);
    }
  }, {
    key: '_calculateDirtyArrays',
    value: function _calculateDirtyArrays(prevDataBlob, prevSectionIDs, prevRowIDs) {
      var prevSectionsHash = keyedDictionaryFromArray(prevSectionIDs);
      var prevRowsHash = {};
      for (var ii = 0; ii < prevRowIDs.length; ii++) {
        var sectionID = prevSectionIDs[ii];
        warning(!prevRowsHash[sectionID], 'SectionID appears more than once: ' + sectionID);
        prevRowsHash[sectionID] = keyedDictionaryFromArray(prevRowIDs[ii]);
      }

      this._dirtySections = [];
      this._dirtyRows = [];

      var dirty;
      for (var sIndex = 0; sIndex < this.sectionIdentities.length; sIndex++) {
        var sectionID = this.sectionIdentities[sIndex];

        dirty = !prevSectionsHash[sectionID];
        var sectionHeaderHasChanged = this._sectionHeaderHasChanged;
        if (!dirty && sectionHeaderHasChanged) {
          dirty = sectionHeaderHasChanged(this._getSectionHeaderData(prevDataBlob, sectionID), this._getSectionHeaderData(this._dataBlob, sectionID));
        }
        this._dirtySections.push(!!dirty);

        this._dirtyRows[sIndex] = [];
        for (var rIndex = 0; rIndex < this.rowIdentities[sIndex].length; rIndex++) {
          var rowID = this.rowIdentities[sIndex][rIndex];

          dirty = !prevSectionsHash[sectionID] || !prevRowsHash[sectionID][rowID] || this._rowHasChanged(this._getRowData(prevDataBlob, sectionID, rowID), this._getRowData(this._dataBlob, sectionID, rowID));
          this._dirtyRows[sIndex].push(!!dirty);
        }
      }
    }
  }]);
  return ListViewDataSource;
}();

function countRows(allRowIDs) {
  var totalRows = 0;
  for (var sectionIdx = 0; sectionIdx < allRowIDs.length; sectionIdx++) {
    var rowIDs = allRowIDs[sectionIdx];
    totalRows += rowIDs.length;
  }
  return totalRows;
}

function keyedDictionaryFromArray(arr) {
  if (isEmpty(arr)) {
    return {};
  }
  var result = {};
  for (var ii = 0; ii < arr.length; ii++) {
    var key = arr[ii];
    warning(!result[key], 'Value appears more than once in array: ' + key);
    result[key] = true;
  }
  return result;
}

module.exports = ListViewDataSource;
}, 600, null, "ListViewDataSource");
__d(/* isEmpty */function(global, require, module, exports) {
'use strict';

function isEmpty(obj) {
  if (Array.isArray(obj)) {
    return obj.length === 0;
  } else if (typeof obj === 'object') {
    for (var i in obj) {
      return false;
    }
    return true;
  } else {
    return !obj;
  }
}

module.exports = isEmpty;
}, 601, null, "isEmpty");
__d(/* StaticRenderer */function(global, require, module, exports) {
'use strict';

var React = require(398    ); // 398 = React

var StaticRenderer = function (_React$Component) {
  babelHelpers.inherits(StaticRenderer, _React$Component);

  function StaticRenderer() {
    babelHelpers.classCallCheck(this, StaticRenderer);
    return babelHelpers.possibleConstructorReturn(this, (StaticRenderer.__proto__ || Object.getPrototypeOf(StaticRenderer)).apply(this, arguments));
  }

  babelHelpers.createClass(StaticRenderer, [{
    key: 'shouldComponentUpdate',
    value: function shouldComponentUpdate(nextProps) {
      return nextProps.shouldUpdate;
    }
  }, {
    key: 'render',
    value: function render() {
      return this.props.render();
    }
  }]);
  return StaticRenderer;
}(React.Component);

StaticRenderer.propTypes = {
  shouldUpdate: React.PropTypes.bool.isRequired,
  render: React.PropTypes.func.isRequired
};


module.exports = StaticRenderer;
}, 602, null, "StaticRenderer");
__d(/* react-clone-referenced-element/cloneReferencedElement.js */function(global, require, module, exports) {'use strict';

var React = require(604    ); // 604 = react

function cloneReferencedElement(element, config) {
  var cloneRef = config.ref;
  var originalRef = element.ref;

  for (var _len = arguments.length, children = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
    children[_key - 2] = arguments[_key];
  }

  if (originalRef == null || cloneRef == null) {
    return React.cloneElement.apply(React, [element, config].concat(children));
  }

  if (typeof originalRef !== 'function') {
    if (__DEV__) {
      console.warn('Cloning an element with a ref that will be overwritten because it ' + 'is not a function. Use a composable callback-style ref instead. ' + 'Ignoring ref: ' + originalRef);
    }
    return React.cloneElement.apply(React, [element, config].concat(children));
  }

  return React.cloneElement.apply(React, [element, babelHelpers.extends({}, config, {
    ref: function ref(component) {
      cloneRef(component);
      originalRef(component);
    }
  })].concat(children));
}

module.exports = cloneReferencedElement;
}, 603, null, "react-clone-referenced-element/cloneReferencedElement.js");
__d(/* react/react.js */function(global, require, module, exports) {'use strict';

module.exports = require(399          ); // 399 = ./lib/React
}, 604, null, "react/react.js");
__d(/* MapView */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native/Libraries/Components/MapView/MapView.js';
var ColorPropType = require(338            ); // 338 = ColorPropType
var EdgeInsetsPropType = require(442                 ); // 442 = EdgeInsetsPropType
var Image = require(585    ); // 585 = Image
var NativeMethodsMixin = require(341                 ); // 341 = NativeMethodsMixin
var React = require(398    ); // 398 = React
var StyleSheet = require(421         ); // 421 = StyleSheet
var View = require(441   ); // 441 = View

var deprecatedPropType = require(431                 ); // 431 = deprecatedPropType
var processColor = require(436           ); // 436 = processColor
var resolveAssetSource = require(493                 ); // 493 = resolveAssetSource
var requireNativeComponent = require(450                     ); // 450 = requireNativeComponent

var MapView = React.createClass({
  displayName: 'MapView',


  mixins: [NativeMethodsMixin],

  propTypes: babelHelpers.extends({}, View.propTypes, {
    style: View.propTypes.style,

    showsUserLocation: React.PropTypes.bool,

    followUserLocation: React.PropTypes.bool,

    showsPointsOfInterest: React.PropTypes.bool,

    showsCompass: React.PropTypes.bool,

    showsAnnotationCallouts: React.PropTypes.bool,

    zoomEnabled: React.PropTypes.bool,

    rotateEnabled: React.PropTypes.bool,

    pitchEnabled: React.PropTypes.bool,

    scrollEnabled: React.PropTypes.bool,

    mapType: React.PropTypes.oneOf(['standard', 'satellite', 'hybrid']),

    region: React.PropTypes.shape({
      latitude: React.PropTypes.number.isRequired,
      longitude: React.PropTypes.number.isRequired,

      latitudeDelta: React.PropTypes.number,
      longitudeDelta: React.PropTypes.number
    }),

    annotations: React.PropTypes.arrayOf(React.PropTypes.shape({
      latitude: React.PropTypes.number.isRequired,
      longitude: React.PropTypes.number.isRequired,

      animateDrop: React.PropTypes.bool,

      draggable: React.PropTypes.bool,

      onDragStateChange: React.PropTypes.func,

      onFocus: React.PropTypes.func,

      onBlur: React.PropTypes.func,

      title: React.PropTypes.string,
      subtitle: React.PropTypes.string,

      leftCalloutView: React.PropTypes.element,
      rightCalloutView: React.PropTypes.element,
      detailCalloutView: React.PropTypes.element,

      tintColor: ColorPropType,

      image: Image.propTypes.source,

      view: React.PropTypes.element,

      id: React.PropTypes.string,

      hasLeftCallout: deprecatedPropType(React.PropTypes.bool, 'Use `leftCalloutView` instead.'),
      hasRightCallout: deprecatedPropType(React.PropTypes.bool, 'Use `rightCalloutView` instead.'),
      onLeftCalloutPress: deprecatedPropType(React.PropTypes.func, 'Use `leftCalloutView` instead.'),
      onRightCalloutPress: deprecatedPropType(React.PropTypes.func, 'Use `rightCalloutView` instead.')
    })),

    overlays: React.PropTypes.arrayOf(React.PropTypes.shape({
      coordinates: React.PropTypes.arrayOf(React.PropTypes.shape({
        latitude: React.PropTypes.number.isRequired,
        longitude: React.PropTypes.number.isRequired
      })),

      lineWidth: React.PropTypes.number,
      strokeColor: ColorPropType,
      fillColor: ColorPropType,

      id: React.PropTypes.string
    })),

    maxDelta: React.PropTypes.number,

    minDelta: React.PropTypes.number,

    legalLabelInsets: EdgeInsetsPropType,

    onRegionChange: React.PropTypes.func,

    onRegionChangeComplete: React.PropTypes.func,

    onAnnotationPress: React.PropTypes.func,

    active: React.PropTypes.bool
  }),

  statics: {
    PinColors: {
      RED: '#ff3b30',
      GREEN: '#4cd964',
      PURPLE: '#c969e0'
    }
  },

  render: function render() {
    var _this = this;

    var children = [],
        _props = this.props,
        annotations = _props.annotations,
        overlays = _props.overlays,
        followUserLocation = _props.followUserLocation;
    annotations = annotations && annotations.map(function (annotation) {
      var id = annotation.id,
          image = annotation.image,
          tintColor = annotation.tintColor,
          view = annotation.view,
          leftCalloutView = annotation.leftCalloutView,
          rightCalloutView = annotation.rightCalloutView,
          detailCalloutView = annotation.detailCalloutView;


      if (!view && image && tintColor) {
        view = React.createElement(Image, {
          style: {
            tintColor: processColor(tintColor)
          },
          source: image,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 388
          }
        });
        image = undefined;
      }
      if (view) {
        if (image) {
          console.warn('`image` and `view` both set on annotation. Image will be ignored.');
        }
        var viewIndex = children.length;
        children.push(React.cloneElement(view, {
          style: [styles.annotationView, view.props.style || {}]
        }));
      }
      if (leftCalloutView) {
        var leftCalloutViewIndex = children.length;
        children.push(React.cloneElement(leftCalloutView, {
          style: [styles.calloutView, leftCalloutView.props.style || {}]
        }));
      }
      if (rightCalloutView) {
        var rightCalloutViewIndex = children.length;
        children.push(React.cloneElement(rightCalloutView, {
          style: [styles.calloutView, rightCalloutView.props.style || {}]
        }));
      }
      if (detailCalloutView) {
        var detailCalloutViewIndex = children.length;
        children.push(React.cloneElement(detailCalloutView, {
          style: [styles.calloutView, detailCalloutView.props.style || {}]
        }));
      }

      var result = babelHelpers.extends({}, annotation, {
        tintColor: tintColor && processColor(tintColor),
        image: image,
        viewIndex: viewIndex,
        leftCalloutViewIndex: leftCalloutViewIndex,
        rightCalloutViewIndex: rightCalloutViewIndex,
        detailCalloutViewIndex: detailCalloutViewIndex,
        view: undefined,
        leftCalloutView: undefined,
        rightCalloutView: undefined,
        detailCalloutView: undefined
      });
      result.id = id || encodeURIComponent(JSON.stringify(result));
      result.image = image && resolveAssetSource(image);
      return result;
    });
    overlays = overlays && overlays.map(function (overlay) {
      var id = overlay.id,
          fillColor = overlay.fillColor,
          strokeColor = overlay.strokeColor;

      var result = babelHelpers.extends({}, overlay, {
        strokeColor: strokeColor && processColor(strokeColor),
        fillColor: fillColor && processColor(fillColor)
      });
      result.id = id || encodeURIComponent(JSON.stringify(result));
      return result;
    });

    var findByAnnotationId = function findByAnnotationId(annotationId) {
      if (!annotations) {
        return null;
      }
      for (var i = 0, l = annotations.length; i < l; i++) {
        if (annotations[i].id === annotationId) {
          return annotations[i];
        }
      }
      return null;
    };

    var onPress = void 0,
        onAnnotationDragStateChange = void 0,
        onAnnotationFocus = void 0,
        onAnnotationBlur = void 0;
    if (annotations) {
      onPress = function onPress(event) {
        if (event.nativeEvent.action === 'annotation-click') {
          _this.props.onAnnotationPress && _this.props.onAnnotationPress(event.nativeEvent.annotation);
        } else if (event.nativeEvent.action === 'callout-click') {
          var annotation = findByAnnotationId(event.nativeEvent.annotationId);
          if (annotation) {
            if (event.nativeEvent.side === 'left' && annotation.onLeftCalloutPress) {
              annotation.onLeftCalloutPress(event.nativeEvent);
            } else if (event.nativeEvent.side === 'right' && annotation.onRightCalloutPress) {
              annotation.onRightCalloutPress(event.nativeEvent);
            }
          }
        }
      };
      onAnnotationDragStateChange = function onAnnotationDragStateChange(event) {
        var annotation = findByAnnotationId(event.nativeEvent.annotationId);
        if (annotation) {
          annotation.onDragStateChange && annotation.onDragStateChange(event.nativeEvent);
        }
      };
      onAnnotationFocus = function onAnnotationFocus(event) {
        var annotation = findByAnnotationId(event.nativeEvent.annotationId);
        if (annotation && annotation.onFocus) {
          annotation.onFocus(event.nativeEvent);
        }
      };
      onAnnotationBlur = function onAnnotationBlur(event) {
        var annotation = findByAnnotationId(event.nativeEvent.annotationId);
        if (annotation && annotation.onBlur) {
          annotation.onBlur(event.nativeEvent);
        }
      };
    }

    if (this.props.onRegionChange || this.props.onRegionChangeComplete) {
      var onChange = function onChange(event) {
        if (event.nativeEvent.continuous) {
          _this.props.onRegionChange && _this.props.onRegionChange(event.nativeEvent.region);
        } else {
          _this.props.onRegionChangeComplete && _this.props.onRegionChangeComplete(event.nativeEvent.region);
        }
      };
    }

    if (followUserLocation === undefined) {
      followUserLocation = this.props.showUserLocation;
    }

    return React.createElement(RCTMap, babelHelpers.extends({}, this.props, {
      annotations: annotations,
      children: children,
      followUserLocation: followUserLocation,
      overlays: overlays,
      onPress: onPress,
      onChange: onChange,
      onAnnotationDragStateChange: onAnnotationDragStateChange,
      onAnnotationFocus: onAnnotationFocus,
      onAnnotationBlur: onAnnotationBlur,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 526
      }
    }));
  }
});

var styles = StyleSheet.create({
  annotationView: {
    position: 'absolute',
    backgroundColor: 'transparent'
  },
  calloutView: {
    position: 'absolute',
    backgroundColor: 'white'
  }
});

var RCTMap = requireNativeComponent('RCTMap', MapView, {
  nativeOnly: {
    onAnnotationDragStateChange: true,
    onAnnotationFocus: true,
    onAnnotationBlur: true,
    onChange: true,
    onPress: true
  }
});

module.exports = MapView;
}, 605, null, "MapView");
__d(/* Modal */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native/Libraries/Modal/Modal.js',
    _container;

var AppContainer = require(607           ); // 607 = AppContainer
var I18nManager = require(628          ); // 628 = I18nManager
var Platform = require(348       ); // 348 = Platform
var React = require(398    ); // 398 = React
var StyleSheet = require(421         ); // 421 = StyleSheet
var View = require(441   ); // 441 = View

var deprecatedPropType = require(431                 ); // 431 = deprecatedPropType
var requireNativeComponent = require(450                     ); // 450 = requireNativeComponent
var RCTModalHostView = requireNativeComponent('RCTModalHostView', null);

var PropTypes = React.PropTypes;

var Modal = function (_React$Component) {
  babelHelpers.inherits(Modal, _React$Component);

  function Modal() {
    babelHelpers.classCallCheck(this, Modal);
    return babelHelpers.possibleConstructorReturn(this, (Modal.__proto__ || Object.getPrototypeOf(Modal)).apply(this, arguments));
  }

  babelHelpers.createClass(Modal, [{
    key: 'render',
    value: function render() {
      if (this.props.visible === false) {
        return null;
      }

      var containerStyles = {
        backgroundColor: this.props.transparent ? 'transparent' : 'white'
      };

      var animationType = this.props.animationType;
      if (!animationType) {
        animationType = 'none';
        if (this.props.animated) {
          animationType = 'slide';
        }
      }

      var innerChildren = __DEV__ ? React.createElement(
        AppContainer,
        { rootTag: this.context.rootTag, __source: {
            fileName: _jsxFileName,
            lineNumber: 160
          }
        },
        this.props.children
      ) : this.props.children;

      return React.createElement(
        RCTModalHostView,
        {
          animationType: animationType,
          transparent: this.props.transparent,
          hardwareAccelerated: this.props.hardwareAccelerated,
          onRequestClose: this.props.onRequestClose,
          onShow: this.props.onShow,
          style: styles.modal,
          onStartShouldSetResponder: this._shouldSetResponder,
          supportedOrientations: this.props.supportedOrientations,
          onOrientationChange: this.props.onOrientationChange,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 166
          }
        },
        React.createElement(
          View,
          { style: [styles.container, containerStyles], __source: {
              fileName: _jsxFileName,
              lineNumber: 177
            }
          },
          innerChildren
        )
      );
    }
  }, {
    key: '_shouldSetResponder',
    value: function _shouldSetResponder() {
      return true;
    }
  }]);
  return Modal;
}(React.Component);

Modal.propTypes = {
  animationType: PropTypes.oneOf(['none', 'slide', 'fade']),

  transparent: PropTypes.bool,

  hardwareAccelerated: PropTypes.bool,

  visible: PropTypes.bool,

  onRequestClose: Platform.OS === 'android' ? PropTypes.func.isRequired : PropTypes.func,

  onShow: PropTypes.func,
  animated: deprecatedPropType(PropTypes.bool, 'Use the `animationType` prop instead.'),

  supportedOrientations: PropTypes.arrayOf(PropTypes.oneOf(['portrait', 'portrait-upside-down', 'landscape', 'landscape-left', 'landscape-right'])),

  onOrientationChange: PropTypes.func
};
Modal.defaultProps = {
  visible: true,
  hardwareAccelerated: false
};
Modal.contextTypes = {
  rootTag: React.PropTypes.number
};


var side = I18nManager.isRTL ? 'right' : 'left';
var styles = StyleSheet.create({
  modal: {
    position: 'absolute'
  },
  container: (_container = {
    position: 'absolute'
  }, babelHelpers.defineProperty(_container, side, 0), babelHelpers.defineProperty(_container, 'top', 0), _container)
});

module.exports = Modal;
}, 606, null, "Modal");
__d(/* AppContainer */function(global, require, module, exports) {

'use strict';

var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native/Libraries/ReactNative/AppContainer.js';
var EmitterSubscription = require(376                  ); // 376 = EmitterSubscription
var RCTDeviceEventEmitter = require(379                    ); // 379 = RCTDeviceEventEmitter
var React = require(398    ); // 398 = React
var ReactNative = require(513          ); // 513 = ReactNative
var StyleSheet = require(421         ); // 421 = StyleSheet
var View = require(441   ); // 441 = View

var AppContainer = function (_React$Component) {
  babelHelpers.inherits(AppContainer, _React$Component);

  function AppContainer() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, AppContainer);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = AppContainer.__proto__ || Object.getPrototypeOf(AppContainer)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      inspector: null,
      mainKey: 1
    }, _this._subscription = null, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(AppContainer, [{
    key: 'getChildContext',
    value: function getChildContext() {
      return {
        rootTag: this.props.rootTag
      };
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _this2 = this;

      if (__DEV__) {
        this._subscription = RCTDeviceEventEmitter.addListener('toggleElementInspector', function () {
          var Inspector = require(608        ); // 608 = Inspector
          var inspector = _this2.state.inspector ? null : React.createElement(Inspector, {
            inspectedViewTag: ReactNative.findNodeHandle(_this2._mainRef),
            onRequestRerenderApp: function onRequestRerenderApp(updateInspectedViewTag) {
              _this2.setState(function (s) {
                return { mainKey: s.mainKey + 1 };
              }, function () {
                return updateInspectedViewTag(ReactNative.findNodeHandle(_this2._mainRef));
              });
            },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 61
            }
          });
          _this2.setState({ inspector: inspector });
        });
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      if (this._subscription) {
        this._subscription.remove();
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      var yellowBox = null;
      if (__DEV__) {
        var YellowBox = require(627        ); // 627 = YellowBox
        yellowBox = React.createElement(YellowBox, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 88
          }
        });
      }

      return React.createElement(
        View,
        { style: styles.appContainer, pointerEvents: 'box-none', __source: {
            fileName: _jsxFileName,
            lineNumber: 92
          }
        },
        React.createElement(
          View,
          {
            collapsable: !this.state.inspector,
            key: this.state.mainKey,
            pointerEvents: 'box-none',
            style: styles.appContainer, ref: function ref(_ref2) {
              _this3._mainRef = _ref2;
            }, __source: {
              fileName: _jsxFileName,
              lineNumber: 93
            }
          },
          this.props.children
        ),
        yellowBox,
        this.state.inspector
      );
    }
  }]);
  return AppContainer;
}(React.Component);

AppContainer.childContextTypes = {
  rootTag: React.PropTypes.number
};


var styles = StyleSheet.create({
  appContainer: {
    flex: 1
  }
});

module.exports = AppContainer;
}, 607, null, "AppContainer");
__d(/* Inspector */function(global, require, module, exports) {

'use strict';

var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native/Libraries/Inspector/Inspector.js';
var Dimensions = require(423         ); // 423 = Dimensions
var InspectorOverlay = require(609               ); // 609 = InspectorOverlay
var InspectorPanel = require(614             ); // 614 = InspectorPanel
var InspectorUtils = require(610             ); // 610 = InspectorUtils
var Platform = require(348       ); // 348 = Platform
var React = require(398    ); // 398 = React
var StyleSheet = require(421         ); // 421 = StyleSheet
var Touchable = require(506        ); // 506 = Touchable
var UIManager = require(395        ); // 395 = UIManager
var View = require(441   ); // 441 = View

if (window.__REACT_DEVTOOLS_GLOBAL_HOOK__) {
  window.__REACT_DEVTOOLS_GLOBAL_HOOK__.resolveRNStyle = require(345           ); // 345 = flattenStyle
}

var Inspector = function (_React$Component) {
  babelHelpers.inherits(Inspector, _React$Component);

  function Inspector(props) {
    babelHelpers.classCallCheck(this, Inspector);

    var _this = babelHelpers.possibleConstructorReturn(this, (Inspector.__proto__ || Object.getPrototypeOf(Inspector)).call(this, props));

    _initialiseProps.call(_this);

    _this.state = {
      devtoolsAgent: null,
      hierarchy: null,
      panelPos: 'bottom',
      inspecting: true,
      perfing: false,
      inspected: null,
      selection: null,
      inspectedViewTag: _this.props.inspectedViewTag,
      networking: false
    };
    return _this;
  }

  babelHelpers.createClass(Inspector, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      if (window.__REACT_DEVTOOLS_GLOBAL_HOOK__) {
        this.attachToDevtools = this.attachToDevtools.bind(this);
        window.__REACT_DEVTOOLS_GLOBAL_HOOK__.on('react-devtools', this.attachToDevtools);

        if (window.__REACT_DEVTOOLS_GLOBAL_HOOK__.reactDevtoolsAgent) {
          this.attachToDevtools(window.__REACT_DEVTOOLS_GLOBAL_HOOK__.reactDevtoolsAgent);
        }
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      if (this._subs) {
        this._subs.map(function (fn) {
          return fn();
        });
      }
      if (window.__REACT_DEVTOOLS_GLOBAL_HOOK__) {
        window.__REACT_DEVTOOLS_GLOBAL_HOOK__.off('react-devtools', this.attachToDevtools);
      }
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(newProps) {
      this.setState({ inspectedViewTag: newProps.inspectedViewTag });
    }
  }, {
    key: 'setSelection',
    value: function setSelection(i) {
      var _this2 = this;

      var instance = this.state.hierarchy[i];

      var publicInstance = instance['_instance'] || {};
      var source = instance['_currentElement'] && instance['_currentElement']['_source'];
      UIManager.measure(instance.getHostNode(), function (x, y, width, height, left, top) {
        _this2.setState({
          inspected: {
            frame: { left: left, top: top, width: width, height: height },
            style: publicInstance.props ? publicInstance.props.style : {},
            source: source
          },
          selection: i
        });
      });
    }
  }, {
    key: 'onTouchInstance',
    value: function onTouchInstance(touched, frame, pointerY) {
      var hierarchy = InspectorUtils.getOwnerHierarchy(touched);
      var instance = InspectorUtils.lastNotNativeInstance(hierarchy);

      if (this.state.devtoolsAgent) {
        this.state.devtoolsAgent.selectFromReactInstance(instance, true);
      }

      var publicInstance = instance['_instance'] || {};
      var props = publicInstance.props || {};
      var source = instance['_currentElement'] && instance['_currentElement']['_source'];
      this.setState({
        panelPos: pointerY > Dimensions.get('window').height / 2 ? 'top' : 'bottom',
        selection: hierarchy.indexOf(instance),
        hierarchy: hierarchy,
        inspected: {
          style: props.style || {},
          frame: frame,
          source: source
        }
      });
    }
  }, {
    key: 'setPerfing',
    value: function setPerfing(val) {
      this.setState({
        perfing: val,
        inspecting: false,
        inspected: null,
        networking: false
      });
    }
  }, {
    key: 'setInspecting',
    value: function setInspecting(val) {
      this.setState({
        inspecting: val,
        inspected: null
      });
    }
  }, {
    key: 'setTouchTargetting',
    value: function setTouchTargetting(val) {
      var _this3 = this;

      Touchable.TOUCH_TARGET_DEBUG = val;
      this.props.onRequestRerenderApp(function (inspectedViewTag) {
        _this3.setState({ inspectedViewTag: inspectedViewTag });
      });
    }
  }, {
    key: 'setNetworking',
    value: function setNetworking(val) {
      this.setState({
        networking: val,
        perfing: false,
        inspecting: false,
        inspected: null
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var panelContainerStyle = this.state.panelPos === 'bottom' ? { bottom: 0 } : { top: Platform.OS === 'ios' ? 20 : 0 };
      return React.createElement(
        View,
        { style: styles.container, pointerEvents: 'box-none', __source: {
            fileName: _jsxFileName,
            lineNumber: 212
          }
        },
        this.state.inspecting && React.createElement(InspectorOverlay, {
          inspected: this.state.inspected,
          inspectedViewTag: this.state.inspectedViewTag,
          onTouchInstance: this.onTouchInstance.bind(this),
          __source: {
            fileName: _jsxFileName,
            lineNumber: 214
          }
        }),
        React.createElement(
          View,
          { style: [styles.panelContainer, panelContainerStyle], __source: {
              fileName: _jsxFileName,
              lineNumber: 219
            }
          },
          React.createElement(InspectorPanel, {
            devtoolsIsOpen: !!this.state.devtoolsAgent,
            inspecting: this.state.inspecting,
            perfing: this.state.perfing,
            setPerfing: this.setPerfing.bind(this),
            setInspecting: this.setInspecting.bind(this),
            inspected: this.state.inspected,
            hierarchy: this.state.hierarchy,
            selection: this.state.selection,
            setSelection: this.setSelection.bind(this),
            touchTargetting: Touchable.TOUCH_TARGET_DEBUG,
            setTouchTargetting: this.setTouchTargetting.bind(this),
            networking: this.state.networking,
            setNetworking: this.setNetworking.bind(this),
            __source: {
              fileName: _jsxFileName,
              lineNumber: 220
            }
          })
        )
      );
    }
  }]);
  return Inspector;
}(React.Component);

var _initialiseProps = function _initialiseProps() {
  var _this4 = this;

  this.attachToDevtools = function (agent) {
    var _hideWait = null;
    var hlSub = agent.sub('highlight', function (_ref) {
      var node = _ref.node,
          name = _ref.name,
          props = _ref.props;

      clearTimeout(_hideWait);
      UIManager.measure(node, function (x, y, width, height, left, top) {
        _this4.setState({
          hierarchy: [],
          inspected: {
            frame: { left: left, top: top, width: width, height: height },
            style: props ? props.style : {}
          }
        });
      });
    });
    var hideSub = agent.sub('hideHighlight', function () {
      if (_this4.state.inspected === null) {
        return;
      }

      _hideWait = setTimeout(function () {
        _this4.setState({
          inspected: null
        });
      }, 100);
    });
    _this4._subs = [hlSub, hideSub];

    agent.on('shutdown', function () {
      _this4.setState({ devtoolsAgent: null });
      _this4._subs = null;
    });
    _this4.setState({
      devtoolsAgent: agent
    });
  };
};

var styles = StyleSheet.create({
  container: {
    position: 'absolute',
    backgroundColor: 'transparent',
    top: 0,
    left: 0,
    right: 0,
    bottom: 0
  },
  panelContainer: {
    position: 'absolute',
    left: 0,
    right: 0
  }
});

module.exports = Inspector;
}, 608, null, "Inspector");
__d(/* InspectorOverlay */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native/Libraries/Inspector/InspectorOverlay.js';
var Dimensions = require(423         ); // 423 = Dimensions
var InspectorUtils = require(610             ); // 610 = InspectorUtils
var React = require(398    ); // 398 = React
var StyleSheet = require(421         ); // 421 = StyleSheet
var UIManager = require(395        ); // 395 = UIManager
var View = require(441   ); // 441 = View
var ElementBox = require(611         ); // 611 = ElementBox

var PropTypes = React.PropTypes;

var InspectorOverlay = function (_React$Component) {
  babelHelpers.inherits(InspectorOverlay, _React$Component);

  function InspectorOverlay() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, InspectorOverlay);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = InspectorOverlay.__proto__ || Object.getPrototypeOf(InspectorOverlay)).call.apply(_ref, [this].concat(args))), _this), _this.findViewForTouchEvent = function (e) {
      var _e$nativeEvent$touche = e.nativeEvent.touches[0],
          locationX = _e$nativeEvent$touche.locationX,
          locationY = _e$nativeEvent$touche.locationY;

      UIManager.findSubviewIn(_this.props.inspectedViewTag, [locationX, locationY], function (nativeViewTag, left, top, width, height) {
        var instance = InspectorUtils.findInstanceByNativeTag(nativeViewTag);
        if (!instance) {
          return;
        }
        _this.props.onTouchInstance(instance, { left: left, top: top, width: width, height: height }, locationY);
      });
    }, _this.shouldSetResponser = function (e) {
      _this.findViewForTouchEvent(e);
      return true;
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(InspectorOverlay, [{
    key: 'render',
    value: function render() {
      var content = null;
      if (this.props.inspected) {
        content = React.createElement(ElementBox, { frame: this.props.inspected.frame, style: this.props.inspected.style, __source: {
            fileName: _jsxFileName,
            lineNumber: 70
          }
        });
      }

      return React.createElement(
        View,
        {
          onStartShouldSetResponder: this.shouldSetResponser,
          onResponderMove: this.findViewForTouchEvent,
          style: [styles.inspector, { height: Dimensions.get('window').height }], __source: {
            fileName: _jsxFileName,
            lineNumber: 74
          }
        },
        content
      );
    }
  }]);
  return InspectorOverlay;
}(React.Component);

InspectorOverlay.propTypes = {
  inspected: PropTypes.shape({
    frame: PropTypes.object,
    style: PropTypes.any
  }),
  inspectedViewTag: PropTypes.number,
  onTouchInstance: PropTypes.func.isRequired
};


var styles = StyleSheet.create({
  inspector: {
    backgroundColor: 'transparent',
    position: 'absolute',
    left: 0,
    top: 0,
    right: 0
  }
});

module.exports = InspectorOverlay;
}, 609, null, "InspectorOverlay");
__d(/* InspectorUtils */function(global, require, module, exports) {
'use strict';

var ReactNativeComponentTree = require(454                       ); // 454 = ReactNativeComponentTree

function traverseOwnerTreeUp(hierarchy, instance) {
  if (instance) {
    hierarchy.unshift(instance);
    traverseOwnerTreeUp(hierarchy, instance._currentElement._owner);
  }
}

function findInstanceByNativeTag(nativeTag) {
  return ReactNativeComponentTree.getInstanceFromNode(nativeTag);
}

function getOwnerHierarchy(instance) {
  var hierarchy = [];
  traverseOwnerTreeUp(hierarchy, instance);
  return hierarchy;
}

function lastNotNativeInstance(hierarchy) {
  for (var i = hierarchy.length - 1; i > 1; i--) {
    var instance = hierarchy[i];
    if (!instance.viewConfig) {
      return instance;
    }
  }
  return hierarchy[0];
}

module.exports = { findInstanceByNativeTag: findInstanceByNativeTag, getOwnerHierarchy: getOwnerHierarchy, lastNotNativeInstance: lastNotNativeInstance };
}, 610, null, "InspectorUtils");
__d(/* ElementBox */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native/Libraries/Inspector/ElementBox.js';
var React = require(398    ); // 398 = React
var View = require(441   ); // 441 = View
var StyleSheet = require(421         ); // 421 = StyleSheet
var BorderBox = require(612        ); // 612 = BorderBox
var resolveBoxStyle = require(613              ); // 613 = resolveBoxStyle

var flattenStyle = require(345           ); // 345 = flattenStyle

var ElementBox = function (_React$Component) {
  babelHelpers.inherits(ElementBox, _React$Component);

  function ElementBox() {
    babelHelpers.classCallCheck(this, ElementBox);
    return babelHelpers.possibleConstructorReturn(this, (ElementBox.__proto__ || Object.getPrototypeOf(ElementBox)).apply(this, arguments));
  }

  babelHelpers.createClass(ElementBox, [{
    key: 'render',
    value: function render() {
      var style = flattenStyle(this.props.style) || {};
      var margin = resolveBoxStyle('margin', style);
      var padding = resolveBoxStyle('padding', style);
      var frameStyle = this.props.frame;
      if (margin) {
        frameStyle = {
          top: frameStyle.top - margin.top,
          left: frameStyle.left - margin.left,
          height: frameStyle.height + margin.top + margin.bottom,
          width: frameStyle.width + margin.left + margin.right
        };
      }
      var contentStyle = {
        width: this.props.frame.width,
        height: this.props.frame.height
      };
      if (padding) {
        contentStyle = {
          width: contentStyle.width - padding.left - padding.right,
          height: contentStyle.height - padding.top - padding.bottom
        };
      }
      return React.createElement(
        View,
        { style: [styles.frame, frameStyle], pointerEvents: 'none', __source: {
            fileName: _jsxFileName,
            lineNumber: 47
          }
        },
        React.createElement(
          BorderBox,
          { box: margin, style: styles.margin, __source: {
              fileName: _jsxFileName,
              lineNumber: 48
            }
          },
          React.createElement(
            BorderBox,
            { box: padding, style: styles.padding, __source: {
                fileName: _jsxFileName,
                lineNumber: 49
              }
            },
            React.createElement(View, { style: [styles.content, contentStyle], __source: {
                fileName: _jsxFileName,
                lineNumber: 50
              }
            })
          )
        )
      );
    }
  }]);
  return ElementBox;
}(React.Component);

var styles = StyleSheet.create({
  frame: {
    position: 'absolute'
  },
  content: {
    backgroundColor: 'rgba(200, 230, 255, 0.8)'
  },
  padding: {
    borderColor: 'rgba(77, 255, 0, 0.3)'
  },
  margin: {
    borderColor: 'rgba(255, 132, 0, 0.3)'
  }
});

module.exports = ElementBox;
}, 611, null, "ElementBox");
__d(/* BorderBox */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native/Libraries/Inspector/BorderBox.js';
var React = require(398    ); // 398 = React
var View = require(441   ); // 441 = View

var BorderBox = function (_React$Component) {
  babelHelpers.inherits(BorderBox, _React$Component);

  function BorderBox() {
    babelHelpers.classCallCheck(this, BorderBox);
    return babelHelpers.possibleConstructorReturn(this, (BorderBox.__proto__ || Object.getPrototypeOf(BorderBox)).apply(this, arguments));
  }

  babelHelpers.createClass(BorderBox, [{
    key: 'render',
    value: function render() {
      var box = this.props.box;
      if (!box) {
        return this.props.children;
      }
      var style = {
        borderTopWidth: box.top,
        borderBottomWidth: box.bottom,
        borderLeftWidth: box.left,
        borderRightWidth: box.right
      };
      return React.createElement(
        View,
        { style: [style, this.props.style], __source: {
            fileName: _jsxFileName,
            lineNumber: 30
          }
        },
        this.props.children
      );
    }
  }]);
  return BorderBox;
}(React.Component);

module.exports = BorderBox;
}, 612, null, "BorderBox");
__d(/* resolveBoxStyle */function(global, require, module, exports) {
'use strict';

function resolveBoxStyle(prefix, style) {
  var res = {};
  var subs = ['top', 'left', 'bottom', 'right'];
  var set = false;
  subs.forEach(function (sub) {
    res[sub] = style[prefix] || 0;
  });
  if (style[prefix]) {
    set = true;
  }
  if (style[prefix + 'Vertical']) {
    res.top = res.bottom = style[prefix + 'Vertical'];
    set = true;
  }
  if (style[prefix + 'Horizontal']) {
    res.left = res.right = style[prefix + 'Horizontal'];
    set = true;
  }
  subs.forEach(function (sub) {
    var val = style[prefix + capFirst(sub)];
    if (val) {
      res[sub] = val;
      set = true;
    }
  });
  if (!set) {
    return;
  }
  return res;
}

function capFirst(text) {
  return text[0].toUpperCase() + text.slice(1);
}

module.exports = resolveBoxStyle;
}, 613, null, "resolveBoxStyle");
__d(/* InspectorPanel */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native/Libraries/Inspector/InspectorPanel.js';
var ElementProperties = require(615                ); // 615 = ElementProperties
var NetworkOverlay = require(623             ); // 623 = NetworkOverlay
var PerformanceOverlay = require(626                 ); // 626 = PerformanceOverlay
var React = require(398    ); // 398 = React
var ScrollView = require(587         ); // 587 = ScrollView
var StyleSheet = require(421         ); // 421 = StyleSheet
var Text = require(505   ); // 505 = Text
var TouchableHighlight = require(618                 ); // 618 = TouchableHighlight
var View = require(441   ); // 441 = View

var PropTypes = React.PropTypes;

var InspectorPanel = function (_React$Component) {
  babelHelpers.inherits(InspectorPanel, _React$Component);

  function InspectorPanel() {
    babelHelpers.classCallCheck(this, InspectorPanel);
    return babelHelpers.possibleConstructorReturn(this, (InspectorPanel.__proto__ || Object.getPrototypeOf(InspectorPanel)).apply(this, arguments));
  }

  babelHelpers.createClass(InspectorPanel, [{
    key: 'renderWaiting',
    value: function renderWaiting() {
      if (this.props.inspecting) {
        return React.createElement(
          Text,
          { style: styles.waitingText, __source: {
              fileName: _jsxFileName,
              lineNumber: 30
            }
          },
          'Tap something to inspect it'
        );
      }
      return React.createElement(
        Text,
        { style: styles.waitingText, __source: {
            fileName: _jsxFileName,
            lineNumber: 35
          }
        },
        'Nothing is inspected'
      );
    }
  }, {
    key: 'render',
    value: function render() {
      var contents = void 0;
      if (this.props.inspected) {
        contents = React.createElement(
          ScrollView,
          { style: styles.properties, __source: {
              fileName: _jsxFileName,
              lineNumber: 42
            }
          },
          React.createElement(ElementProperties, {
            style: this.props.inspected.style,
            frame: this.props.inspected.frame,
            source: this.props.inspected.source,
            hierarchy: this.props.hierarchy,
            selection: this.props.selection,
            setSelection: this.props.setSelection,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 43
            }
          })
        );
      } else if (this.props.perfing) {
        contents = React.createElement(PerformanceOverlay, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 55
          }
        });
      } else if (this.props.networking) {
        contents = React.createElement(NetworkOverlay, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 59
          }
        });
      } else {
        contents = React.createElement(
          View,
          { style: styles.waiting, __source: {
              fileName: _jsxFileName,
              lineNumber: 63
            }
          },
          this.renderWaiting()
        );
      }
      return React.createElement(
        View,
        { style: styles.container, __source: {
            fileName: _jsxFileName,
            lineNumber: 69
          }
        },
        !this.props.devtoolsIsOpen && contents,
        React.createElement(
          View,
          { style: styles.buttonRow, __source: {
              fileName: _jsxFileName,
              lineNumber: 71
            }
          },
          React.createElement(Button, {
            title: 'Inspect',
            pressed: this.props.inspecting,
            onClick: this.props.setInspecting,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 72
            }
          }),
          React.createElement(Button, { title: 'Perf',
            pressed: this.props.perfing,
            onClick: this.props.setPerfing,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 77
            }
          }),
          React.createElement(Button, { title: 'Network',
            pressed: this.props.networking,
            onClick: this.props.setNetworking,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 81
            }
          }),
          React.createElement(Button, { title: 'Touchables',
            pressed: this.props.touchTargetting,
            onClick: this.props.setTouchTargetting,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 85
            }
          })
        )
      );
    }
  }]);
  return InspectorPanel;
}(React.Component);

InspectorPanel.propTypes = {
  devtoolsIsOpen: PropTypes.bool,
  inspecting: PropTypes.bool,
  setInspecting: PropTypes.func,
  inspected: PropTypes.object,
  perfing: PropTypes.bool,
  setPerfing: PropTypes.func,
  touchTargetting: PropTypes.bool,
  setTouchTargetting: PropTypes.func,
  networking: PropTypes.bool,
  setNetworking: PropTypes.func
};

var Button = function (_React$Component2) {
  babelHelpers.inherits(Button, _React$Component2);

  function Button() {
    babelHelpers.classCallCheck(this, Button);
    return babelHelpers.possibleConstructorReturn(this, (Button.__proto__ || Object.getPrototypeOf(Button)).apply(this, arguments));
  }

  babelHelpers.createClass(Button, [{
    key: 'render',
    value: function render() {
      var _this3 = this;

      return React.createElement(
        TouchableHighlight,
        { onPress: function onPress() {
            return _this3.props.onClick(!_this3.props.pressed);
          }, style: [styles.button, this.props.pressed && styles.buttonPressed], __source: {
            fileName: _jsxFileName,
            lineNumber: 111
          }
        },
        React.createElement(
          Text,
          { style: styles.buttonText, __source: {
              fileName: _jsxFileName,
              lineNumber: 115
            }
          },
          this.props.title
        )
      );
    }
  }]);
  return Button;
}(React.Component);

var styles = StyleSheet.create({
  buttonRow: {
    flexDirection: 'row'
  },
  button: {
    backgroundColor: 'rgba(0, 0, 0, 0.3)',
    margin: 2,
    height: 30,
    justifyContent: 'center',
    alignItems: 'center'
  },
  buttonPressed: {
    backgroundColor: 'rgba(255, 255, 255, 0.3)'
  },
  buttonText: {
    textAlign: 'center',
    color: 'white',
    margin: 5
  },
  container: {
    backgroundColor: 'rgba(0, 0, 0, 0.7)'
  },
  properties: {
    height: 200
  },
  waiting: {
    height: 100
  },
  waitingText: {
    fontSize: 20,
    textAlign: 'center',
    marginVertical: 20,
    color: 'white'
  }
});

module.exports = InspectorPanel;
}, 614, null, "InspectorPanel");
__d(/* ElementProperties */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native/Libraries/Inspector/ElementProperties.js';
var BoxInspector = require(616           ); // 616 = BoxInspector
var React = require(398    ); // 398 = React
var StyleInspector = require(617             ); // 617 = StyleInspector
var StyleSheet = require(421         ); // 421 = StyleSheet
var Text = require(505   ); // 505 = Text
var TouchableHighlight = require(618                 ); // 618 = TouchableHighlight
var TouchableWithoutFeedback = require(569                       ); // 569 = TouchableWithoutFeedback
var View = require(441   ); // 441 = View

var flattenStyle = require(345           ); // 345 = flattenStyle
var mapWithSeparator = require(621               ); // 621 = mapWithSeparator
var openFileInEditor = require(622               ); // 622 = openFileInEditor

var PropTypes = React.PropTypes;

var ElementProperties = function (_React$Component) {
  babelHelpers.inherits(ElementProperties, _React$Component);

  function ElementProperties() {
    babelHelpers.classCallCheck(this, ElementProperties);
    return babelHelpers.possibleConstructorReturn(this, (ElementProperties.__proto__ || Object.getPrototypeOf(ElementProperties)).apply(this, arguments));
  }

  babelHelpers.createClass(ElementProperties, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var style = flattenStyle(this.props.style);

      var selection = this.props.selection;
      var openFileButton = void 0;
      var source = this.props.source;

      var _ref = source || {},
          fileName = _ref.fileName,
          lineNumber = _ref.lineNumber;

      if (fileName && lineNumber) {
        var parts = fileName.split('/');
        var fileNameShort = parts[parts.length - 1];
        openFileButton = React.createElement(
          TouchableHighlight,
          {
            style: styles.openButton,
            onPress: openFileInEditor.bind(null, fileName, lineNumber), __source: {
              fileName: _jsxFileName,
              lineNumber: 63
            }
          },
          React.createElement(
            Text,
            { style: styles.openButtonTitle, numberOfLines: 1, __source: {
                fileName: _jsxFileName,
                lineNumber: 66
              }
            },
            fileNameShort,
            ':',
            lineNumber
          )
        );
      }

      return React.createElement(
        TouchableWithoutFeedback,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 75
          }
        },
        React.createElement(
          View,
          { style: styles.info, __source: {
              fileName: _jsxFileName,
              lineNumber: 76
            }
          },
          React.createElement(
            View,
            { style: styles.breadcrumb, __source: {
                fileName: _jsxFileName,
                lineNumber: 77
              }
            },
            mapWithSeparator(this.props.hierarchy, function (item, i) {
              return React.createElement(
                TouchableHighlight,
                {
                  key: 'item-' + i,
                  style: [styles.breadItem, i === selection && styles.selected],

                  onPress: function onPress() {
                    return _this2.props.setSelection(i);
                  }, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 81
                  }
                },
                React.createElement(
                  Text,
                  { style: styles.breadItemText, __source: {
                      fileName: _jsxFileName,
                      lineNumber: 86
                    }
                  },
                  getInstanceName(item)
                )
              );
            }, function (i) {
              return React.createElement(
                Text,
                { key: 'sep-' + i, style: styles.breadSep, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 92
                  }
                },
                '\u25B8'
              );
            })
          ),
          React.createElement(
            View,
            { style: styles.row, __source: {
                fileName: _jsxFileName,
                lineNumber: 98
              }
            },
            React.createElement(
              View,
              { style: styles.col, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 99
                }
              },
              React.createElement(StyleInspector, { style: style, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 100
                }
              }),
              openFileButton
            ),
            React.createElement(BoxInspector, { style: style, frame: this.props.frame, __source: {
                fileName: _jsxFileName,
                lineNumber: 105
              }
            })
          )
        )
      );
    }
  }]);
  return ElementProperties;
}(React.Component);

ElementProperties.propTypes = {
  hierarchy: PropTypes.array.isRequired,
  style: PropTypes.oneOfType([PropTypes.object, PropTypes.array, PropTypes.number]),
  source: PropTypes.shape({
    fileName: PropTypes.string,
    lineNumber: PropTypes.number
  })
};


function getInstanceName(instance) {
  if (instance.getName) {
    return instance.getName();
  }
  if (instance.constructor && instance.constructor.displayName) {
    return instance.constructor.displayName;
  }
  return 'Unknown';
}

var styles = StyleSheet.create({
  breadSep: {
    fontSize: 8,
    color: 'white'
  },
  breadcrumb: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    alignItems: 'flex-start',
    marginBottom: 5
  },
  selected: {
    borderColor: 'white',
    borderRadius: 5
  },
  breadItem: {
    borderWidth: 1,
    borderColor: 'transparent',
    marginHorizontal: 2
  },
  breadItemText: {
    fontSize: 10,
    color: 'white',
    marginHorizontal: 5
  },
  row: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-between'
  },
  col: {
    flex: 1
  },
  info: {
    padding: 10
  },
  openButton: {
    padding: 10,
    backgroundColor: '#000',
    marginVertical: 5,
    marginRight: 5,
    borderRadius: 2
  },
  openButtonTitle: {
    color: 'white',
    fontSize: 8
  }
});

module.exports = ElementProperties;
}, 615, null, "ElementProperties");
__d(/* BoxInspector */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native/Libraries/Inspector/BoxInspector.js';
var React = require(398    ); // 398 = React
var StyleSheet = require(421         ); // 421 = StyleSheet
var Text = require(505   ); // 505 = Text
var View = require(441   ); // 441 = View
var resolveBoxStyle = require(613              ); // 613 = resolveBoxStyle

var blank = {
  top: 0,
  left: 0,
  right: 0,
  bottom: 0
};

var BoxInspector = function (_React$Component) {
  babelHelpers.inherits(BoxInspector, _React$Component);

  function BoxInspector() {
    babelHelpers.classCallCheck(this, BoxInspector);
    return babelHelpers.possibleConstructorReturn(this, (BoxInspector.__proto__ || Object.getPrototypeOf(BoxInspector)).apply(this, arguments));
  }

  babelHelpers.createClass(BoxInspector, [{
    key: 'render',
    value: function render() {
      var frame = this.props.frame;
      var style = this.props.style;
      var margin = style && resolveBoxStyle('margin', style) || blank;
      var padding = style && resolveBoxStyle('padding', style) || blank;
      return React.createElement(
        BoxContainer,
        { title: 'margin', titleStyle: styles.marginLabel, box: margin, __source: {
            fileName: _jsxFileName,
            lineNumber: 34
          }
        },
        React.createElement(
          BoxContainer,
          { title: 'padding', box: padding, __source: {
              fileName: _jsxFileName,
              lineNumber: 35
            }
          },
          React.createElement(
            View,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 36
              }
            },
            React.createElement(
              Text,
              { style: styles.innerText, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 37
                }
              },
              '(',
              frame.left,
              ', ',
              frame.top,
              ')'
            ),
            React.createElement(
              Text,
              { style: styles.innerText, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 40
                }
              },
              frame.width,
              ' \xD7 ',
              frame.height
            )
          )
        )
      );
    }
  }]);
  return BoxInspector;
}(React.Component);

var BoxContainer = function (_React$Component2) {
  babelHelpers.inherits(BoxContainer, _React$Component2);

  function BoxContainer() {
    babelHelpers.classCallCheck(this, BoxContainer);
    return babelHelpers.possibleConstructorReturn(this, (BoxContainer.__proto__ || Object.getPrototypeOf(BoxContainer)).apply(this, arguments));
  }

  babelHelpers.createClass(BoxContainer, [{
    key: 'render',
    value: function render() {
      var box = this.props.box;
      return React.createElement(
        View,
        { style: styles.box, __source: {
            fileName: _jsxFileName,
            lineNumber: 54
          }
        },
        React.createElement(
          View,
          { style: styles.row, __source: {
              fileName: _jsxFileName,
              lineNumber: 55
            }
          },
          React.createElement(
            Text,
            { style: [this.props.titleStyle, styles.label], __source: {
                fileName: _jsxFileName,
                lineNumber: 56
              }
            },
            this.props.title
          ),
          React.createElement(
            Text,
            { style: styles.boxText, __source: {
                fileName: _jsxFileName,
                lineNumber: 57
              }
            },
            box.top
          )
        ),
        React.createElement(
          View,
          { style: styles.row, __source: {
              fileName: _jsxFileName,
              lineNumber: 59
            }
          },
          React.createElement(
            Text,
            { style: styles.boxText, __source: {
                fileName: _jsxFileName,
                lineNumber: 60
              }
            },
            box.left
          ),
          this.props.children,
          React.createElement(
            Text,
            { style: styles.boxText, __source: {
                fileName: _jsxFileName,
                lineNumber: 62
              }
            },
            box.right
          )
        ),
        React.createElement(
          Text,
          { style: styles.boxText, __source: {
              fileName: _jsxFileName,
              lineNumber: 64
            }
          },
          box.bottom
        )
      );
    }
  }]);
  return BoxContainer;
}(React.Component);

var styles = StyleSheet.create({
  row: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-around'
  },
  marginLabel: {
    width: 60
  },
  label: {
    fontSize: 10,
    color: 'rgb(255,100,0)',
    marginLeft: 5,
    flex: 1,
    textAlign: 'left',
    top: -3
  },
  buffer: {
    fontSize: 10,
    color: 'yellow',
    flex: 1,
    textAlign: 'center'
  },
  innerText: {
    color: 'yellow',
    fontSize: 12,
    textAlign: 'center',
    width: 70
  },
  box: {
    borderWidth: 1,
    borderColor: 'grey'
  },
  boxText: {
    color: 'white',
    fontSize: 12,
    marginHorizontal: 3,
    marginVertical: 2,
    textAlign: 'center'
  }
});

module.exports = BoxInspector;
}, 616, null, "BoxInspector");
__d(/* StyleInspector */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native/Libraries/Inspector/StyleInspector.js';
var React = require(398    ); // 398 = React
var StyleSheet = require(421         ); // 421 = StyleSheet
var Text = require(505   ); // 505 = Text
var View = require(441   ); // 441 = View

var StyleInspector = function (_React$Component) {
  babelHelpers.inherits(StyleInspector, _React$Component);

  function StyleInspector() {
    babelHelpers.classCallCheck(this, StyleInspector);
    return babelHelpers.possibleConstructorReturn(this, (StyleInspector.__proto__ || Object.getPrototypeOf(StyleInspector)).apply(this, arguments));
  }

  babelHelpers.createClass(StyleInspector, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      if (!this.props.style) {
        return React.createElement(
          Text,
          { style: styles.noStyle, __source: {
              fileName: _jsxFileName,
              lineNumber: 22
            }
          },
          'No style'
        );
      }
      var names = Object.keys(this.props.style);
      return React.createElement(
        View,
        { style: styles.container, __source: {
            fileName: _jsxFileName,
            lineNumber: 26
          }
        },
        React.createElement(
          View,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 27
            }
          },
          names.map(function (name) {
            return React.createElement(
              Text,
              { key: name, style: styles.attr, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 28
                }
              },
              name,
              ':'
            );
          })
        ),
        React.createElement(
          View,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 31
            }
          },
          names.map(function (name) {
            var value = typeof _this2.props.style[name] === 'object' ? JSON.stringify(_this2.props.style[name]) : _this2.props.style[name];
            return React.createElement(
              Text,
              { key: name, style: styles.value, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 34
                }
              },
              value
            );
          })
        )
      );
    }
  }]);
  return StyleInspector;
}(React.Component);

var styles = StyleSheet.create({
  container: {
    flexDirection: 'row'
  },
  row: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-around'
  },
  attr: {
    fontSize: 10,
    color: '#ccc'
  },
  value: {
    fontSize: 10,
    color: 'white',
    marginLeft: 10
  },
  noStyle: {
    color: 'white',
    fontSize: 10
  }
});

module.exports = StyleInspector;
}, 617, null, "StyleInspector");
__d(/* TouchableHighlight */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native/Libraries/Components/Touchable/TouchableHighlight.js';


var ColorPropType = require(338            ); // 338 = ColorPropType
var NativeMethodsMixin = require(341                 ); // 341 = NativeMethodsMixin
var React = require(398    ); // 398 = React
var ReactNativeViewAttributes = require(447                        ); // 447 = ReactNativeViewAttributes
var StyleSheet = require(421         ); // 421 = StyleSheet
var TimerMixin = require(570                ); // 570 = react-timer-mixin
var Touchable = require(506        ); // 506 = Touchable
var TouchableWithoutFeedback = require(569                       ); // 569 = TouchableWithoutFeedback
var View = require(441   ); // 441 = View

var ensureComponentIsNative = require(619                      ); // 619 = ensureComponentIsNative
var ensurePositiveDelayProps = require(571                       ); // 571 = ensurePositiveDelayProps
var keyOf = require(620             ); // 620 = fbjs/lib/keyOf
var merge = require(444    ); // 444 = merge

var DEFAULT_PROPS = {
  activeOpacity: 0.85,
  underlayColor: 'black'
};

var PRESS_RETENTION_OFFSET = { top: 20, left: 20, right: 20, bottom: 30 };

var TouchableHighlight = React.createClass({
  displayName: 'TouchableHighlight',

  propTypes: babelHelpers.extends({}, TouchableWithoutFeedback.propTypes, {
    activeOpacity: React.PropTypes.number,

    underlayColor: ColorPropType,
    style: View.propTypes.style,

    onShowUnderlay: React.PropTypes.func,

    onHideUnderlay: React.PropTypes.func,

    hasTVPreferredFocus: React.PropTypes.bool,

    tvParallaxProperties: React.PropTypes.object

  }),

  mixins: [NativeMethodsMixin, TimerMixin, Touchable.Mixin],

  getDefaultProps: function getDefaultProps() {
    return DEFAULT_PROPS;
  },

  _computeSyntheticState: function _computeSyntheticState(props) {
    return {
      activeProps: {
        style: {
          opacity: props.activeOpacity
        }
      },
      activeUnderlayProps: {
        style: {
          backgroundColor: props.underlayColor
        }
      },
      underlayStyle: [INACTIVE_UNDERLAY_PROPS.style, props.style],
      hasTVPreferredFocus: props.hasTVPreferredFocus
    };
  },

  getInitialState: function getInitialState() {
    return merge(this.touchableGetInitialState(), this._computeSyntheticState(this.props));
  },

  componentDidMount: function componentDidMount() {
    ensurePositiveDelayProps(this.props);
    ensureComponentIsNative(this.refs[CHILD_REF]);
  },

  componentDidUpdate: function componentDidUpdate() {
    ensureComponentIsNative(this.refs[CHILD_REF]);
  },

  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    ensurePositiveDelayProps(nextProps);
    if (nextProps.activeOpacity !== this.props.activeOpacity || nextProps.underlayColor !== this.props.underlayColor || nextProps.style !== this.props.style) {
      this.setState(this._computeSyntheticState(nextProps));
    }
  },

  viewConfig: {
    uiViewClassName: 'RCTView',
    validAttributes: ReactNativeViewAttributes.RCTView
  },

  touchableHandleActivePressIn: function touchableHandleActivePressIn(e) {
    this.clearTimeout(this._hideTimeout);
    this._hideTimeout = null;
    this._showUnderlay();
    this.props.onPressIn && this.props.onPressIn(e);
  },

  touchableHandleActivePressOut: function touchableHandleActivePressOut(e) {
    if (!this._hideTimeout) {
      this._hideUnderlay();
    }
    this.props.onPressOut && this.props.onPressOut(e);
  },

  touchableHandlePress: function touchableHandlePress(e) {
    this.clearTimeout(this._hideTimeout);
    this._showUnderlay();
    this._hideTimeout = this.setTimeout(this._hideUnderlay, this.props.delayPressOut || 100);
    this.props.onPress && this.props.onPress(e);
  },

  touchableHandleLongPress: function touchableHandleLongPress(e) {
    this.props.onLongPress && this.props.onLongPress(e);
  },

  touchableGetPressRectOffset: function touchableGetPressRectOffset() {
    return this.props.pressRetentionOffset || PRESS_RETENTION_OFFSET;
  },

  touchableGetHitSlop: function touchableGetHitSlop() {
    return this.props.hitSlop;
  },

  touchableGetHighlightDelayMS: function touchableGetHighlightDelayMS() {
    return this.props.delayPressIn;
  },

  touchableGetLongPressDelayMS: function touchableGetLongPressDelayMS() {
    return this.props.delayLongPress;
  },

  touchableGetPressOutDelayMS: function touchableGetPressOutDelayMS() {
    return this.props.delayPressOut;
  },

  _showUnderlay: function _showUnderlay() {
    if (!this.isMounted() || !this._hasPressHandler()) {
      return;
    }

    this.refs[UNDERLAY_REF].setNativeProps(this.state.activeUnderlayProps);
    this.refs[CHILD_REF].setNativeProps(this.state.activeProps);
    this.props.onShowUnderlay && this.props.onShowUnderlay();
  },

  _hideUnderlay: function _hideUnderlay() {
    this.clearTimeout(this._hideTimeout);
    this._hideTimeout = null;
    if (this._hasPressHandler() && this.refs[UNDERLAY_REF]) {
      this.refs[CHILD_REF].setNativeProps(INACTIVE_CHILD_PROPS);
      this.refs[UNDERLAY_REF].setNativeProps(babelHelpers.extends({}, INACTIVE_UNDERLAY_PROPS, {
        style: this.state.underlayStyle
      }));
      this.props.onHideUnderlay && this.props.onHideUnderlay();
    }
  },

  _hasPressHandler: function _hasPressHandler() {
    return !!(this.props.onPress || this.props.onPressIn || this.props.onPressOut || this.props.onLongPress);
  },

  render: function render() {
    return React.createElement(
      View,
      {
        accessible: this.props.accessible !== false,
        accessibilityLabel: this.props.accessibilityLabel,
        accessibilityComponentType: this.props.accessibilityComponentType,
        accessibilityTraits: this.props.accessibilityTraits,
        ref: UNDERLAY_REF,
        style: this.state.underlayStyle,
        onLayout: this.props.onLayout,
        hitSlop: this.props.hitSlop,
        isTVSelectable: true,
        tvParallaxProperties: this.props.tvParallaxProperties,
        hasTVPreferredFocus: this.state.hasTVPreferredFocus,
        onStartShouldSetResponder: this.touchableHandleStartShouldSetResponder,
        onResponderTerminationRequest: this.touchableHandleResponderTerminationRequest,
        onResponderGrant: this.touchableHandleResponderGrant,
        onResponderMove: this.touchableHandleResponderMove,
        onResponderRelease: this.touchableHandleResponderRelease,
        onResponderTerminate: this.touchableHandleResponderTerminate,
        testID: this.props.testID, __source: {
          fileName: _jsxFileName,
          lineNumber: 248
        }
      },
      React.cloneElement(React.Children.only(this.props.children), {
        ref: CHILD_REF
      }),
      Touchable.renderDebugView({ color: 'green', hitSlop: this.props.hitSlop })
    );
  }
});

var CHILD_REF = keyOf({ childRef: null });
var UNDERLAY_REF = keyOf({ underlayRef: null });
var INACTIVE_CHILD_PROPS = {
  style: StyleSheet.create({ x: { opacity: 1.0 } }).x
};
var INACTIVE_UNDERLAY_PROPS = {
  style: StyleSheet.create({ x: { backgroundColor: 'transparent' } }).x
};

module.exports = TouchableHighlight;
}, 618, null, "TouchableHighlight");
__d(/* ensureComponentIsNative */function(global, require, module, exports) {
'use strict';

var invariant = require(346                 ); // 346 = fbjs/lib/invariant

var ensureComponentIsNative = function ensureComponentIsNative(component) {
  invariant(component && typeof component.setNativeProps === 'function', 'Touchable child must either be native or forward setNativeProps to a ' + 'native component');
};

module.exports = ensureComponentIsNative;
}, 619, null, "ensureComponentIsNative");
__d(/* fbjs/lib/keyOf.js */function(global, require, module, exports) {"use strict";

var keyOf = function keyOf(oneKeyObj) {
  var key;
  for (key in oneKeyObj) {
    if (!oneKeyObj.hasOwnProperty(key)) {
      continue;
    }
    return key;
  }
  return null;
};

module.exports = keyOf;
}, 620, null, "fbjs/lib/keyOf.js");
__d(/* mapWithSeparator */function(global, require, module, exports) {
'use strict';

function mapWithSeparator(items, itemRenderer, spacerRenderer) {
  var mapped = [];
  if (items.length > 0) {
    mapped.push(itemRenderer(items[0], 0, items));
    for (var ii = 1; ii < items.length; ii++) {
      mapped.push(spacerRenderer(ii - 1), itemRenderer(items[ii], ii, items));
    }
  }
  return mapped;
}

module.exports = mapWithSeparator;
}, 621, null, "mapWithSeparator");
__d(/* openFileInEditor */function(global, require, module, exports) {
'use strict';

var getDevServer = require(518           ); // 518 = getDevServer

function openFileInEditor(file, lineNumber) {
  fetch(getDevServer().url + 'open-stack-frame', {
    method: 'POST',
    body: JSON.stringify({ file: file, lineNumber: lineNumber })
  });
}

module.exports = openFileInEditor;
}, 622, null, "openFileInEditor");
__d(/* NetworkOverlay */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native/Libraries/Inspector/NetworkOverlay.js';
var ListView = require(599       ); // 599 = ListView
var React = require(398    ); // 398 = React
var ScrollView = require(587         ); // 587 = ScrollView
var StyleSheet = require(421         ); // 421 = StyleSheet
var Text = require(505   ); // 505 = Text
var TouchableHighlight = require(618                 ); // 618 = TouchableHighlight
var View = require(441   ); // 441 = View
var WebSocketInterceptor = require(624                   ); // 624 = WebSocketInterceptor
var XHRInterceptor = require(625             ); // 625 = XHRInterceptor

var LISTVIEW_CELL_HEIGHT = 15;
var SEPARATOR_THICKNESS = 2;

var nextXHRId = 0;

var NetworkOverlay = function (_React$Component) {
  babelHelpers.inherits(NetworkOverlay, _React$Component);

  function NetworkOverlay(props) {
    babelHelpers.classCallCheck(this, NetworkOverlay);

    var _this = babelHelpers.possibleConstructorReturn(this, (NetworkOverlay.__proto__ || Object.getPrototypeOf(NetworkOverlay)).call(this, props));

    _this._requests = [];
    _this._detailViewItems = [];
    _this._listViewDataSource = new ListView.DataSource({ rowHasChanged: function rowHasChanged(r1, r2) {
        return r1 !== r2;
      } });
    _this.state = {
      dataSource: _this._listViewDataSource.cloneWithRows([]),
      newDetailInfo: false,
      detailRowID: null
    };
    _this._listViewHighlighted = false;
    _this._listViewHeight = 0;
    _this._captureRequestListView = _this._captureRequestListView.bind(_this);
    _this._captureDetailScrollView = _this._captureDetailScrollView.bind(_this);
    _this._listViewOnLayout = _this._listViewOnLayout.bind(_this);
    _this._renderRow = _this._renderRow.bind(_this);
    _this._renderScrollComponent = _this._renderScrollComponent.bind(_this);
    _this._closeButtonClicked = _this._closeButtonClicked.bind(_this);
    _this._socketIdMap = {};
    _this._xhrIdMap = {};
    return _this;
  }

  babelHelpers.createClass(NetworkOverlay, [{
    key: '_enableXHRInterception',
    value: function _enableXHRInterception() {
      var _this2 = this;

      if (XHRInterceptor.isInterceptorEnabled()) {
        return;
      }

      XHRInterceptor.setOpenCallback(function (method, url, xhr) {
        xhr._index = nextXHRId++;
        var xhrIndex = _this2._requests.length;
        _this2._xhrIdMap[xhr._index] = xhrIndex;

        var _xhr = {
          'type': 'XMLHttpRequest',
          'method': method,
          'url': url
        };
        _this2._requests.push(_xhr);
        _this2._detailViewItems.push([]);
        _this2._genDetailViewItem(xhrIndex);
        _this2.setState({ dataSource: _this2._listViewDataSource.cloneWithRows(_this2._requests) }, _this2._scrollToBottom());
      });

      XHRInterceptor.setRequestHeaderCallback(function (header, value, xhr) {
        var xhrIndex = _this2._getRequestIndexByXHRID(xhr._index);
        if (xhrIndex === -1) {
          return;
        }
        var networkInfo = _this2._requests[xhrIndex];
        if (!networkInfo.requestHeaders) {
          networkInfo.requestHeaders = {};
        }
        networkInfo.requestHeaders[header] = value;
        _this2._genDetailViewItem(xhrIndex);
      });

      XHRInterceptor.setSendCallback(function (data, xhr) {
        var xhrIndex = _this2._getRequestIndexByXHRID(xhr._index);
        if (xhrIndex === -1) {
          return;
        }
        _this2._requests[xhrIndex].dataSent = data;
        _this2._genDetailViewItem(xhrIndex);
      });

      XHRInterceptor.setHeaderReceivedCallback(function (type, size, responseHeaders, xhr) {
        var xhrIndex = _this2._getRequestIndexByXHRID(xhr._index);
        if (xhrIndex === -1) {
          return;
        }
        var networkInfo = _this2._requests[xhrIndex];
        networkInfo.responseContentType = type;
        networkInfo.responseSize = size;
        networkInfo.responseHeaders = responseHeaders;
        _this2._genDetailViewItem(xhrIndex);
      });

      XHRInterceptor.setResponseCallback(function (status, timeout, response, responseURL, responseType, xhr) {
        var xhrIndex = _this2._getRequestIndexByXHRID(xhr._index);
        if (xhrIndex === -1) {
          return;
        }
        var networkInfo = _this2._requests[xhrIndex];
        networkInfo.status = status;
        networkInfo.timeout = timeout;
        networkInfo.response = response;
        networkInfo.responseURL = responseURL;
        networkInfo.responseType = responseType;
        _this2._genDetailViewItem(xhrIndex);
      });

      XHRInterceptor.enableInterception();
    }
  }, {
    key: '_enableWebSocketInterception',
    value: function _enableWebSocketInterception() {
      var _this3 = this;

      if (WebSocketInterceptor.isInterceptorEnabled()) {
        return;
      }

      WebSocketInterceptor.setConnectCallback(function (url, protocols, options, socketId) {
        var socketIndex = _this3._requests.length;
        _this3._socketIdMap[socketId] = socketIndex;
        var _webSocket = {
          'type': 'WebSocket',
          'url': url,
          'protocols': protocols
        };
        _this3._requests.push(_webSocket);
        _this3._detailViewItems.push([]);
        _this3._genDetailViewItem(socketIndex);
        _this3.setState({ dataSource: _this3._listViewDataSource.cloneWithRows(_this3._requests) }, _this3._scrollToBottom());
      });

      WebSocketInterceptor.setCloseCallback(function (statusCode, closeReason, socketId) {
        var socketIndex = _this3._socketIdMap[socketId];
        if (socketIndex === undefined) {
          return;
        }
        if (statusCode !== null && closeReason !== null) {
          _this3._requests[socketIndex].status = statusCode;
          _this3._requests[socketIndex].closeReason = closeReason;
        }
        _this3._genDetailViewItem(socketIndex);
      });

      WebSocketInterceptor.setSendCallback(function (data, socketId) {
        var socketIndex = _this3._socketIdMap[socketId];
        if (socketIndex === undefined) {
          return;
        }
        if (!_this3._requests[socketIndex].messages) {
          _this3._requests[socketIndex].messages = '';
        }
        _this3._requests[socketIndex].messages += 'Sent: ' + JSON.stringify(data) + '\n';
        _this3._genDetailViewItem(socketIndex);
      });

      WebSocketInterceptor.setOnMessageCallback(function (socketId, message) {
        var socketIndex = _this3._socketIdMap[socketId];
        if (socketIndex === undefined) {
          return;
        }
        if (!_this3._requests[socketIndex].messages) {
          _this3._requests[socketIndex].messages = '';
        }
        _this3._requests[socketIndex].messages += 'Received: ' + JSON.stringify(message) + '\n';
        _this3._genDetailViewItem(socketIndex);
      });

      WebSocketInterceptor.setOnCloseCallback(function (socketId, message) {
        var socketIndex = _this3._socketIdMap[socketId];
        if (socketIndex === undefined) {
          return;
        }
        _this3._requests[socketIndex].serverClose = message;
        _this3._genDetailViewItem(socketIndex);
      });

      WebSocketInterceptor.setOnErrorCallback(function (socketId, message) {
        var socketIndex = _this3._socketIdMap[socketId];
        if (socketIndex === undefined) {
          return;
        }
        _this3._requests[socketIndex].serverError = message;
        _this3._genDetailViewItem(socketIndex);
      });

      WebSocketInterceptor.enableInterception();
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      this._enableXHRInterception();
      this._enableWebSocketInterception();
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      XHRInterceptor.disableInterception();
      WebSocketInterceptor.disableInterception();
    }
  }, {
    key: '_renderRow',
    value: function _renderRow(rowData, sectionID, rowID, highlightRow) {
      var _this4 = this;

      var urlCellViewStyle = styles.urlEvenCellView;
      var methodCellViewStyle = styles.methodEvenCellView;
      if (rowID % 2 === 1) {
        urlCellViewStyle = styles.urlOddCellView;
        methodCellViewStyle = styles.methodOddCellView;
      }
      return React.createElement(
        TouchableHighlight,
        { onPress: function onPress() {
            _this4._pressRow(rowID);
            highlightRow(sectionID, rowID);
          }, __source: {
            fileName: _jsxFileName,
            lineNumber: 304
          }
        },
        React.createElement(
          View,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 308
            }
          },
          React.createElement(
            View,
            { style: styles.tableRow, __source: {
                fileName: _jsxFileName,
                lineNumber: 309
              }
            },
            React.createElement(
              View,
              { style: urlCellViewStyle, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 310
                }
              },
              React.createElement(
                Text,
                { style: styles.cellText, numberOfLines: 1, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 311
                  }
                },
                rowData.url
              )
            ),
            React.createElement(
              View,
              { style: methodCellViewStyle, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 315
                }
              },
              React.createElement(
                Text,
                { style: styles.cellText, numberOfLines: 1, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 316
                  }
                },
                this._getTypeShortName(rowData.type)
              )
            )
          )
        )
      );
    }
  }, {
    key: '_renderSeperator',
    value: function _renderSeperator(sectionID, rowID, adjacentRowHighlighted) {
      return React.createElement(View, {
        key: sectionID + '-' + rowID,
        style: {
          height: adjacentRowHighlighted ? SEPARATOR_THICKNESS : 0,
          backgroundColor: adjacentRowHighlighted ? '#3B5998' : '#CCCCCC'
        },
        __source: {
          fileName: _jsxFileName,
          lineNumber: 331
        }
      });
    }
  }, {
    key: '_scrollToBottom',
    value: function _scrollToBottom() {
      if (this._listView) {
        var scrollResponder = this._listView.getScrollResponder();
        if (scrollResponder) {
          var scrollY = Math.max(this._requests.length * LISTVIEW_CELL_HEIGHT + (this._listViewHighlighted ? 2 * SEPARATOR_THICKNESS : 0) - this._listViewHeight, 0);
          scrollResponder.scrollResponderScrollTo({
            x: 0,
            y: scrollY,
            animated: true
          });
        }
      }
    }
  }, {
    key: '_captureRequestListView',
    value: function _captureRequestListView(listRef) {
      this._listView = listRef;
    }
  }, {
    key: '_listViewOnLayout',
    value: function _listViewOnLayout(event) {
      var height = event.nativeEvent.layout.height;

      this._listViewHeight = height;
    }
  }, {
    key: '_pressRow',
    value: function _pressRow(rowID) {
      this._listViewHighlighted = true;
      this.setState({ detailRowID: rowID }, this._scrollToTop());
    }
  }, {
    key: '_scrollToTop',
    value: function _scrollToTop() {
      if (this._scrollView) {
        this._scrollView.scrollTo({
          y: 0,
          animated: false
        });
      }
    }
  }, {
    key: '_captureDetailScrollView',
    value: function _captureDetailScrollView(scrollRef) {
      this._scrollView = scrollRef;
    }
  }, {
    key: '_closeButtonClicked',
    value: function _closeButtonClicked() {
      this.setState({ detailRowID: null });
    }
  }, {
    key: '_getStringByValue',
    value: function _getStringByValue(value) {
      if (value === undefined) {
        return 'undefined';
      }
      if (typeof value === 'object') {
        return JSON.stringify(value);
      }
      if (typeof value === 'string' && value.length > 500) {
        return String(value).substr(0, 500).concat('\n***TRUNCATED TO 500 CHARACTERS***');
      }
      return value;
    }
  }, {
    key: '_getRequestIndexByXHRID',
    value: function _getRequestIndexByXHRID(index) {
      if (index === undefined) {
        return -1;
      }
      var xhrIndex = this._xhrIdMap[index];
      if (xhrIndex === undefined) {
        return -1;
      } else {
        return xhrIndex;
      }
    }
  }, {
    key: '_getTypeShortName',
    value: function _getTypeShortName(type) {
      if (type === 'XMLHttpRequest') {
        return 'XHR';
      } else if (type === 'WebSocket') {
        return 'WS';
      }

      return '';
    }
  }, {
    key: '_genDetailViewItem',
    value: function _genDetailViewItem(index) {
      this._detailViewItems[index] = [];
      var detailViewItem = this._detailViewItems[index];
      var requestItem = this._requests[index];
      for (var _key in requestItem) {
        detailViewItem.push(React.createElement(
          View,
          { style: styles.detailViewRow, key: _key, __source: {
              fileName: _jsxFileName,
              lineNumber: 446
            }
          },
          React.createElement(
            Text,
            { style: [styles.detailViewText, styles.detailKeyCellView], __source: {
                fileName: _jsxFileName,
                lineNumber: 447
              }
            },
            _key
          ),
          React.createElement(
            Text,
            { style: [styles.detailViewText, styles.detailValueCellView], __source: {
                fileName: _jsxFileName,
                lineNumber: 450
              }
            },
            this._getStringByValue(requestItem[_key])
          )
        ));
      }

      if (this.state.detailRowID != null && Number(this.state.detailRowID) === index) {
        this.setState({ newDetailInfo: true });
      }
    }
  }, {
    key: 'render',
    value: function render() {
      return React.createElement(
        View,
        { style: styles.container, __source: {
            fileName: _jsxFileName,
            lineNumber: 465
          }
        },
        this.state.detailRowID != null && React.createElement(
          TouchableHighlight,
          {
            style: styles.closeButton,
            onPress: this._closeButtonClicked, __source: {
              fileName: _jsxFileName,
              lineNumber: 467
            }
          },
          React.createElement(
            View,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 470
              }
            },
            React.createElement(
              Text,
              { style: styles.clostButtonText, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 471
                }
              },
              'v'
            )
          )
        ),
        this.state.detailRowID != null && React.createElement(
          ScrollView,
          {
            style: styles.detailScrollView,
            ref: this._captureDetailScrollView, __source: {
              fileName: _jsxFileName,
              lineNumber: 475
            }
          },
          this._detailViewItems[this.state.detailRowID]
        ),
        React.createElement(
          View,
          { style: styles.listViewTitle, __source: {
              fileName: _jsxFileName,
              lineNumber: 480
            }
          },
          this._requests.length > 0 && React.createElement(
            View,
            { style: styles.tableRow, __source: {
                fileName: _jsxFileName,
                lineNumber: 482
              }
            },
            React.createElement(
              View,
              { style: styles.urlTitleCellView, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 483
                }
              },
              React.createElement(
                Text,
                { style: styles.cellText, numberOfLines: 1, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 484
                  }
                },
                'URL'
              )
            ),
            React.createElement(
              View,
              { style: styles.methodTitleCellView, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 486
                }
              },
              React.createElement(
                Text,
                { style: styles.cellText, numberOfLines: 1, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 487
                  }
                },
                'Type'
              )
            )
          )
        ),
        React.createElement(ListView, {
          style: styles.listView,
          ref: this._captureRequestListView,
          dataSource: this.state.dataSource,
          renderRow: this._renderRow,
          enableEmptySections: true,
          renderSeparator: this._renderSeperator,
          onLayout: this._listViewOnLayout,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 491
          }
        })
      );
    }
  }]);
  return NetworkOverlay;
}(React.Component);

var styles = StyleSheet.create({
  container: {
    paddingTop: 10,
    paddingBottom: 10,
    paddingLeft: 5,
    paddingRight: 5
  },
  listViewTitle: {
    height: 20
  },
  listView: {
    flex: 1,
    height: 60
  },
  tableRow: {
    flexDirection: 'row',
    flex: 1
  },
  cellText: {
    color: 'white',
    fontSize: 12
  },
  methodTitleCellView: {
    height: 18,
    borderColor: '#DCD7CD',
    borderTopWidth: 1,
    borderBottomWidth: 1,
    borderRightWidth: 1,
    alignItems: 'center',
    justifyContent: 'center',
    backgroundColor: '#444',
    flex: 1
  },
  urlTitleCellView: {
    height: 18,
    borderColor: '#DCD7CD',
    borderTopWidth: 1,
    borderBottomWidth: 1,
    borderLeftWidth: 1,
    borderRightWidth: 1,
    justifyContent: 'center',
    backgroundColor: '#444',
    flex: 5,
    paddingLeft: 3
  },
  methodOddCellView: {
    height: 15,
    borderColor: '#DCD7CD',
    borderRightWidth: 1,
    alignItems: 'center',
    justifyContent: 'center',
    backgroundColor: '#000',
    flex: 1
  },
  urlOddCellView: {
    height: 15,
    borderColor: '#DCD7CD',
    borderLeftWidth: 1,
    borderRightWidth: 1,
    justifyContent: 'center',
    backgroundColor: '#000',
    flex: 5,
    paddingLeft: 3
  },
  methodEvenCellView: {
    height: 15,
    borderColor: '#DCD7CD',
    borderRightWidth: 1,
    alignItems: 'center',
    justifyContent: 'center',
    backgroundColor: '#888',
    flex: 1
  },
  urlEvenCellView: {
    height: 15,
    borderColor: '#DCD7CD',
    borderLeftWidth: 1,
    borderRightWidth: 1,
    justifyContent: 'center',
    backgroundColor: '#888',
    flex: 5,
    paddingLeft: 3
  },
  detailScrollView: {
    flex: 1,
    height: 180,
    marginTop: 5,
    marginBottom: 5
  },
  detailKeyCellView: {
    flex: 1.3
  },
  detailValueCellView: {
    flex: 2
  },
  detailViewRow: {
    flexDirection: 'row',
    paddingHorizontal: 3
  },
  detailViewText: {
    color: 'white',
    fontSize: 11
  },
  clostButtonText: {
    color: 'white',
    fontSize: 10
  },
  closeButton: {
    marginTop: 5,
    backgroundColor: '#888',
    justifyContent: 'center',
    alignItems: 'center'
  }
});

module.exports = NetworkOverlay;
}, 623, null, "NetworkOverlay");
__d(/* WebSocketInterceptor */function(global, require, module, exports) {
'use strict';

var RCTWebSocketModule = require(349            ).WebSocketModule; // 349 = NativeModules
var NativeEventEmitter = require(374                 ); // 374 = NativeEventEmitter

var base64 = require(387        ); // 387 = base64-js

var originalRCTWebSocketConnect = RCTWebSocketModule.connect;
var originalRCTWebSocketSend = RCTWebSocketModule.send;
var originalRCTWebSocketSendBinary = RCTWebSocketModule.sendBinary;
var originalRCTWebSocketClose = RCTWebSocketModule.close;

var eventEmitter = void 0;
var subscriptions = void 0;

var closeCallback = void 0;
var sendCallback = void 0;
var connectCallback = void 0;
var onOpenCallback = void 0;
var onMessageCallback = void 0;
var onErrorCallback = void 0;
var onCloseCallback = void 0;

var _isInterceptorEnabled = false;

var WebSocketInterceptor = {
  setCloseCallback: function setCloseCallback(callback) {
    closeCallback = callback;
  },
  setSendCallback: function setSendCallback(callback) {
    sendCallback = callback;
  },
  setConnectCallback: function setConnectCallback(callback) {
    connectCallback = callback;
  },
  setOnOpenCallback: function setOnOpenCallback(callback) {
    onOpenCallback = callback;
  },
  setOnMessageCallback: function setOnMessageCallback(callback) {
    onMessageCallback = callback;
  },
  setOnErrorCallback: function setOnErrorCallback(callback) {
    onErrorCallback = callback;
  },
  setOnCloseCallback: function setOnCloseCallback(callback) {
    onCloseCallback = callback;
  },
  isInterceptorEnabled: function isInterceptorEnabled() {
    return _isInterceptorEnabled;
  },
  _unregisterEvents: function _unregisterEvents() {
    subscriptions.forEach(function (e) {
      return e.remove();
    });
    subscriptions = [];
  },
  _registerEvents: function _registerEvents() {
    subscriptions = [eventEmitter.addListener('websocketMessage', function (ev) {
      if (onMessageCallback) {
        onMessageCallback(ev.id, ev.type === 'binary' ? WebSocketInterceptor._arrayBufferToString(ev.data) : ev.data);
      }
    }), eventEmitter.addListener('websocketOpen', function (ev) {
      if (onOpenCallback) {
        onOpenCallback(ev.id);
      }
    }), eventEmitter.addListener('websocketClosed', function (ev) {
      if (onCloseCallback) {
        onCloseCallback(ev.id, { code: ev.code, reason: ev.reason });
      }
    }), eventEmitter.addListener('websocketFailed', function (ev) {
      if (onErrorCallback) {
        onErrorCallback(ev.id, { message: ev.message });
      }
    })];
  },
  enableInterception: function enableInterception() {
    if (_isInterceptorEnabled) {
      return;
    }
    eventEmitter = new NativeEventEmitter(RCTWebSocketModule);
    WebSocketInterceptor._registerEvents();

    RCTWebSocketModule.connect = function (url, protocols, options, socketId) {
      if (connectCallback) {
        connectCallback(url, protocols, options, socketId);
      }
      originalRCTWebSocketConnect.apply(this, arguments);
    };

    RCTWebSocketModule.send = function (data, socketId) {
      if (sendCallback) {
        sendCallback(data, socketId);
      }
      originalRCTWebSocketSend.apply(this, arguments);
    };

    RCTWebSocketModule.sendBinary = function (data, socketId) {
      if (sendCallback) {
        sendCallback(WebSocketInterceptor._arrayBufferToString(data), socketId);
      }
      originalRCTWebSocketSendBinary.apply(this, arguments);
    };

    RCTWebSocketModule.close = function () {
      if (closeCallback) {
        if (arguments.length === 3) {
          closeCallback(arguments[0], arguments[1], arguments[2]);
        } else {
          closeCallback(null, null, arguments[0]);
        }
      }
      originalRCTWebSocketClose.apply(this, arguments);
    };

    _isInterceptorEnabled = true;
  },
  _arrayBufferToString: function _arrayBufferToString(data) {
    var value = base64.toByteArray(data).buffer;
    if (value === undefined || value === null) {
      return '(no value)';
    }
    if (typeof ArrayBuffer !== 'undefined' && typeof Uint8Array !== 'undefined' && value instanceof ArrayBuffer) {
      return 'ArrayBuffer {' + String(Array.from(new Uint8Array(value))) + '}';
    }
    return value;
  },
  disableInterception: function disableInterception() {
    if (!_isInterceptorEnabled) {
      return;
    }
    _isInterceptorEnabled = false;
    RCTWebSocketModule.send = originalRCTWebSocketSend;
    RCTWebSocketModule.sendBinary = originalRCTWebSocketSendBinary;
    RCTWebSocketModule.close = originalRCTWebSocketClose;
    RCTWebSocketModule.connect = originalRCTWebSocketConnect;

    connectCallback = null;
    closeCallback = null;
    sendCallback = null;
    onOpenCallback = null;
    onMessageCallback = null;
    onCloseCallback = null;
    onErrorCallback = null;

    WebSocketInterceptor._unregisterEvents();
  }
};

module.exports = WebSocketInterceptor;
}, 624, null, "WebSocketInterceptor");
__d(/* XHRInterceptor */function(global, require, module, exports) {
'use strict';

var XMLHttpRequest = require(531             ); // 531 = XMLHttpRequest
var originalXHROpen = XMLHttpRequest.prototype.open;
var originalXHRSend = XMLHttpRequest.prototype.send;
var originalXHRSetRequestHeader = XMLHttpRequest.prototype.setRequestHeader;

var openCallback;
var sendCallback;
var requestHeaderCallback;
var headerReceivedCallback;
var responseCallback;

var _isInterceptorEnabled = false;

var XHRInterceptor = {
  setOpenCallback: function setOpenCallback(callback) {
    openCallback = callback;
  },
  setSendCallback: function setSendCallback(callback) {
    sendCallback = callback;
  },
  setHeaderReceivedCallback: function setHeaderReceivedCallback(callback) {
    headerReceivedCallback = callback;
  },
  setResponseCallback: function setResponseCallback(callback) {
    responseCallback = callback;
  },
  setRequestHeaderCallback: function setRequestHeaderCallback(callback) {
    requestHeaderCallback = callback;
  },
  isInterceptorEnabled: function isInterceptorEnabled() {
    return _isInterceptorEnabled;
  },
  enableInterception: function enableInterception() {
    if (_isInterceptorEnabled) {
      return;
    }

    XMLHttpRequest.prototype.open = function (method, url) {
      if (openCallback) {
        openCallback(method, url, this);
      }
      originalXHROpen.apply(this, arguments);
    };

    XMLHttpRequest.prototype.setRequestHeader = function (header, value) {
      if (requestHeaderCallback) {
        requestHeaderCallback(header, value, this);
      }
      originalXHRSetRequestHeader.apply(this, arguments);
    };

    XMLHttpRequest.prototype.send = function (data) {
      var _this = this;

      if (sendCallback) {
        sendCallback(data, this);
      }
      if (this.addEventListener) {
        this.addEventListener('readystatechange', function () {
          if (!_isInterceptorEnabled) {
            return;
          }
          if (_this.readyState === _this.HEADERS_RECEIVED) {
            var contentTypeString = _this.getResponseHeader('Content-Type');
            var contentLengthString = _this.getResponseHeader('Content-Length');
            var responseContentType = void 0,
                responseSize = void 0;
            if (contentTypeString) {
              responseContentType = contentTypeString.split(';')[0];
            }
            if (contentLengthString) {
              responseSize = parseInt(contentLengthString, 10);
            }
            if (headerReceivedCallback) {
              headerReceivedCallback(responseContentType, responseSize, _this.getAllResponseHeaders(), _this);
            }
          }
          if (_this.readyState === _this.DONE) {
            if (responseCallback) {
              responseCallback(_this.status, _this.timeout, _this.response, _this.responseURL, _this.responseType, _this);
            }
          }
        }, false);
      }
      originalXHRSend.apply(this, arguments);
    };
    _isInterceptorEnabled = true;
  },
  disableInterception: function disableInterception() {
    if (!_isInterceptorEnabled) {
      return;
    }
    _isInterceptorEnabled = false;
    XMLHttpRequest.prototype.send = originalXHRSend;
    XMLHttpRequest.prototype.open = originalXHROpen;
    XMLHttpRequest.prototype.setRequestHeader = originalXHRSetRequestHeader;
    responseCallback = null;
    openCallback = null;
    sendCallback = null;
    headerReceivedCallback = null;
    requestHeaderCallback = null;
  }
};

module.exports = XHRInterceptor;
}, 625, null, "XHRInterceptor");
__d(/* PerformanceOverlay */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native/Libraries/Inspector/PerformanceOverlay.js';
var PerformanceLogger = require(551                ); // 551 = PerformanceLogger
var React = require(398    ); // 398 = React
var StyleSheet = require(421         ); // 421 = StyleSheet
var Text = require(505   ); // 505 = Text
var View = require(441   ); // 441 = View

var PerformanceOverlay = function (_React$Component) {
  babelHelpers.inherits(PerformanceOverlay, _React$Component);

  function PerformanceOverlay() {
    babelHelpers.classCallCheck(this, PerformanceOverlay);
    return babelHelpers.possibleConstructorReturn(this, (PerformanceOverlay.__proto__ || Object.getPrototypeOf(PerformanceOverlay)).apply(this, arguments));
  }

  babelHelpers.createClass(PerformanceOverlay, [{
    key: 'render',
    value: function render() {
      var perfLogs = PerformanceLogger.getTimespans();
      var items = [];

      for (var key in perfLogs) {
        if (perfLogs[key].totalTime) {
          var unit = key === 'BundleSize' ? 'b' : 'ms';
          items.push(React.createElement(
            View,
            { style: styles.row, key: key, __source: {
                fileName: _jsxFileName,
                lineNumber: 29
              }
            },
            React.createElement(
              Text,
              { style: [styles.text, styles.label], __source: {
                  fileName: _jsxFileName,
                  lineNumber: 30
                }
              },
              key
            ),
            React.createElement(
              Text,
              { style: [styles.text, styles.totalTime], __source: {
                  fileName: _jsxFileName,
                  lineNumber: 31
                }
              },
              perfLogs[key].totalTime + unit
            )
          ));
        }
      }

      return React.createElement(
        View,
        { style: styles.container, __source: {
            fileName: _jsxFileName,
            lineNumber: 40
          }
        },
        items
      );
    }
  }]);
  return PerformanceOverlay;
}(React.Component);

var styles = StyleSheet.create({
  container: {
    height: 100,
    paddingTop: 10
  },
  label: {
    flex: 1
  },
  row: {
    flexDirection: 'row',
    paddingHorizontal: 10
  },
  text: {
    color: 'white',
    fontSize: 12
  },
  totalTime: {
    paddingRight: 100
  }
});

module.exports = PerformanceOverlay;
}, 626, null, "PerformanceOverlay");
__d(/* YellowBox */function(global, require, module, exports) {

'use strict';

var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native/Libraries/ReactNative/YellowBox.js';
var EventEmitter = require(375           ); // 375 = EventEmitter
var Platform = require(348       ); // 348 = Platform
var React = require(398    ); // 398 = React
var StyleSheet = require(421         ); // 421 = StyleSheet

var infoLog = require(577      ); // 577 = infoLog
var openFileInEditor = require(622               ); // 622 = openFileInEditor
var parseErrorStack = require(365              ); // 365 = parseErrorStack
var symbolicateStackTrace = require(517                    ); // 517 = symbolicateStackTrace

var _warningEmitter = new EventEmitter();
var _warningMap = new Map();

if (__DEV__) {
  var _console = console,
      error = _console.error,
      warn = _console.warn;


  console.error = function () {
    error.apply(console, arguments);

    if (typeof arguments[0] === 'string' && arguments[0].startsWith('Warning: ')) {
      updateWarningMap.apply(null, arguments);
    }
  };

  console.warn = function () {
    warn.apply(console, arguments);

    if (typeof arguments[0] === 'string' && arguments[0].startsWith('(ADVICE)')) {
      return;
    }

    updateWarningMap.apply(null, arguments);
  };

  if (Platform.isTesting) {
    console.disableYellowBox = true;
  }
}

function sprintf(format) {
  for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    args[_key - 1] = arguments[_key];
  }

  var index = 0;
  return format.replace(/%s/g, function (match) {
    return args[index++];
  });
}

function updateWarningMap(format) {
  if (console.disableYellowBox) {
    return;
  }
  var stringifySafe = require(369            ); // 369 = stringifySafe

  format = String(format);
  var argCount = (format.match(/%s/g) || []).length;

  for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
    args[_key2 - 1] = arguments[_key2];
  }

  var warning = [sprintf.apply(undefined, [format].concat(babelHelpers.toConsumableArray(args.slice(0, argCount))))].concat(babelHelpers.toConsumableArray(args.slice(argCount).map(stringifySafe))).join(' ');

  var warningInfo = _warningMap.get(warning);
  if (warningInfo) {
    warningInfo.count += 1;
  } else {
    var _error = new Error();
    _error.framesToPop = 2;

    _warningMap.set(warning, {
      count: 1,
      stacktrace: parseErrorStack(_error),
      symbolicated: false
    });
  }

  _warningEmitter.emit('warning', _warningMap);
}

function ensureSymbolicatedWarning(warning) {
  var prevWarningInfo = _warningMap.get(warning);
  if (!prevWarningInfo || prevWarningInfo.symbolicated) {
    return;
  }
  prevWarningInfo.symbolicated = true;

  symbolicateStackTrace(prevWarningInfo.stacktrace).then(function (stack) {
    var nextWarningInfo = _warningMap.get(warning);
    if (nextWarningInfo) {
      nextWarningInfo.stacktrace = stack;
      _warningEmitter.emit('warning', _warningMap);
    }
  }, function (error) {
    var nextWarningInfo = _warningMap.get(warning);
    if (nextWarningInfo) {
      infoLog('Failed to symbolicate warning, "%s":', warning, error);
      _warningEmitter.emit('warning', _warningMap);
    }
  });
}

function isWarningIgnored(warning) {
  return Array.isArray(console.ignoredYellowBox) && console.ignoredYellowBox.some(function (ignorePrefix) {
    return warning.startsWith(String(ignorePrefix));
  });
}

var WarningRow = function WarningRow(_ref) {
  var count = _ref.count,
      warning = _ref.warning,
      onPress = _ref.onPress;

  var Text = require(505   ); // 505 = Text
  var TouchableHighlight = require(618                 ); // 618 = TouchableHighlight
  var View = require(441   ); // 441 = View

  var countText = count > 1 ? React.createElement(
    Text,
    { style: styles.listRowCount, __source: {
        fileName: _jsxFileName,
        lineNumber: 170
      }
    },
    '(' + count + ') '
  ) : null;

  return React.createElement(
    View,
    { style: styles.listRow, __source: {
        fileName: _jsxFileName,
        lineNumber: 174
      }
    },
    React.createElement(
      TouchableHighlight,
      {
        activeOpacity: 0.5,
        onPress: onPress,
        style: styles.listRowContent,
        underlayColor: 'transparent', __source: {
          fileName: _jsxFileName,
          lineNumber: 175
        }
      },
      React.createElement(
        Text,
        { style: styles.listRowText, numberOfLines: 2, __source: {
            fileName: _jsxFileName,
            lineNumber: 180
          }
        },
        countText,
        warning
      )
    )
  );
};

var StackRow = function StackRow(_ref2) {
  var frame = _ref2.frame;

  var Text = require(505   ); // 505 = Text
  var TouchableHighlight = require(618                 ); // 618 = TouchableHighlight
  var file = frame.file,
      lineNumber = frame.lineNumber;

  var fileParts = file.split('/');
  var fileName = fileParts[fileParts.length - 1];

  return React.createElement(
    TouchableHighlight,
    {
      activeOpacity: 0.5,
      style: styles.openInEditorButton,
      underlayColor: 'transparent',
      onPress: openFileInEditor.bind(null, file, lineNumber), __source: {
        fileName: _jsxFileName,
        lineNumber: 198
      }
    },
    React.createElement(
      Text,
      { style: styles.inspectorCountText, __source: {
          fileName: _jsxFileName,
          lineNumber: 203
        }
      },
      fileName,
      ':',
      lineNumber
    )
  );
};

var WarningInspector = function WarningInspector(_ref3) {
  var warningInfo = _ref3.warningInfo,
      warning = _ref3.warning,
      stacktraceVisible = _ref3.stacktraceVisible,
      onDismiss = _ref3.onDismiss,
      onDismissAll = _ref3.onDismissAll,
      onMinimize = _ref3.onMinimize,
      toggleStacktrace = _ref3.toggleStacktrace;

  var ScrollView = require(587         ); // 587 = ScrollView
  var Text = require(505   ); // 505 = Text
  var TouchableHighlight = require(618                 ); // 618 = TouchableHighlight
  var View = require(441   ); // 441 = View

  var _ref4 = warningInfo || {},
      count = _ref4.count,
      stacktrace = _ref4.stacktrace;

  var countSentence = 'Warning encountered ' + count + ' time' + (count - 1 ? 's' : '') + '.';

  var stacktraceList = void 0;
  if (stacktraceVisible && stacktrace) {
    stacktraceList = React.createElement(
      View,
      { style: styles.stacktraceList, __source: {
          fileName: _jsxFileName,
          lineNumber: 231
        }
      },
      stacktrace.map(function (frame, ii) {
        return React.createElement(StackRow, { frame: frame, key: ii, __source: {
            fileName: _jsxFileName,
            lineNumber: 232
          }
        });
      })
    );
  }

  return React.createElement(
    View,
    { style: styles.inspector, __source: {
        fileName: _jsxFileName,
        lineNumber: 238
      }
    },
    React.createElement(
      View,
      { style: styles.inspectorCount, __source: {
          fileName: _jsxFileName,
          lineNumber: 239
        }
      },
      React.createElement(
        Text,
        { style: styles.inspectorCountText, __source: {
            fileName: _jsxFileName,
            lineNumber: 240
          }
        },
        countSentence
      ),
      React.createElement(
        TouchableHighlight,
        { onPress: toggleStacktrace, underlayColor: 'transparent', __source: {
            fileName: _jsxFileName,
            lineNumber: 241
          }
        },
        React.createElement(
          Text,
          { style: styles.inspectorButtonText, __source: {
              fileName: _jsxFileName,
              lineNumber: 242
            }
          },
          stacktraceVisible ? '▼' : '▶',
          ' Stacktrace'
        )
      )
    ),
    React.createElement(
      ScrollView,
      { style: styles.inspectorWarning, __source: {
          fileName: _jsxFileName,
          lineNumber: 247
        }
      },
      stacktraceList,
      React.createElement(
        Text,
        { style: styles.inspectorWarningText, __source: {
            fileName: _jsxFileName,
            lineNumber: 249
          }
        },
        warning
      )
    ),
    React.createElement(
      View,
      { style: styles.inspectorButtons, __source: {
          fileName: _jsxFileName,
          lineNumber: 251
        }
      },
      React.createElement(
        TouchableHighlight,
        {
          activeOpacity: 0.5,
          onPress: onMinimize,
          style: styles.inspectorButton,
          underlayColor: 'transparent', __source: {
            fileName: _jsxFileName,
            lineNumber: 252
          }
        },
        React.createElement(
          Text,
          { style: styles.inspectorButtonText, __source: {
              fileName: _jsxFileName,
              lineNumber: 257
            }
          },
          'Minimize'
        )
      ),
      React.createElement(
        TouchableHighlight,
        {
          activeOpacity: 0.5,
          onPress: onDismiss,
          style: styles.inspectorButton,
          underlayColor: 'transparent', __source: {
            fileName: _jsxFileName,
            lineNumber: 261
          }
        },
        React.createElement(
          Text,
          { style: styles.inspectorButtonText, __source: {
              fileName: _jsxFileName,
              lineNumber: 266
            }
          },
          'Dismiss'
        )
      ),
      React.createElement(
        TouchableHighlight,
        {
          activeOpacity: 0.5,
          onPress: onDismissAll,
          style: styles.inspectorButton,
          underlayColor: 'transparent', __source: {
            fileName: _jsxFileName,
            lineNumber: 270
          }
        },
        React.createElement(
          Text,
          { style: styles.inspectorButtonText, __source: {
              fileName: _jsxFileName,
              lineNumber: 275
            }
          },
          'Dismiss All'
        )
      )
    )
  );
};

var YellowBox = function (_React$Component) {
  babelHelpers.inherits(YellowBox, _React$Component);

  function YellowBox(props, context) {
    babelHelpers.classCallCheck(this, YellowBox);

    var _this = babelHelpers.possibleConstructorReturn(this, (YellowBox.__proto__ || Object.getPrototypeOf(YellowBox)).call(this, props, context));

    _this.state = {
      inspecting: null,
      stacktraceVisible: false,
      warningMap: _warningMap
    };
    _this.dismissWarning = function (warning) {
      var _this$state = _this.state,
          inspecting = _this$state.inspecting,
          warningMap = _this$state.warningMap;

      if (warning) {
        warningMap.delete(warning);
      } else {
        warningMap.clear();
      }
      _this.setState({
        inspecting: warning && inspecting !== warning ? inspecting : null,
        warningMap: warningMap
      });
    };
    return _this;
  }

  babelHelpers.createClass(YellowBox, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _this2 = this;

      var scheduled = null;
      this._listener = _warningEmitter.addListener('warning', function (warningMap) {
        scheduled = scheduled || setImmediate(function () {
          scheduled = null;
          _this2.setState({
            warningMap: warningMap
          });
        });
      });
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      var inspecting = this.state.inspecting;

      if (inspecting != null) {
        ensureSymbolicatedWarning(inspecting);
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      if (this._listener) {
        this._listener.remove();
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      if (console.disableYellowBox || this.state.warningMap.size === 0) {
        return null;
      }
      var ScrollView = require(587         ); // 587 = ScrollView
      var View = require(441   ); // 441 = View

      var _state = this.state,
          inspecting = _state.inspecting,
          stacktraceVisible = _state.stacktraceVisible;

      var inspector = inspecting !== null ? React.createElement(WarningInspector, {
        warningInfo: this.state.warningMap.get(inspecting),
        warning: inspecting,
        stacktraceVisible: stacktraceVisible,
        onDismiss: function onDismiss() {
          return _this3.dismissWarning(inspecting);
        },
        onDismissAll: function onDismissAll() {
          return _this3.dismissWarning(null);
        },
        onMinimize: function onMinimize() {
          return _this3.setState({ inspecting: null });
        },
        toggleStacktrace: function toggleStacktrace() {
          return _this3.setState({ stacktraceVisible: !stacktraceVisible });
        },
        __source: {
          fileName: _jsxFileName,
          lineNumber: 350
        }
      }) : null;

      var rows = [];
      this.state.warningMap.forEach(function (warningInfo, warning) {
        if (!isWarningIgnored(warning)) {
          rows.push(React.createElement(WarningRow, {
            key: warning,
            count: warningInfo.count,
            warning: warning,
            onPress: function onPress() {
              return _this3.setState({ inspecting: warning });
            },
            onDismiss: function onDismiss() {
              return _this3.dismissWarning(warning);
            },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 365
            }
          }));
        }
      });

      var listStyle = [styles.list, { height: Math.min(rows.length, 4.4) * (rowGutter + rowHeight) }];
      return React.createElement(
        View,
        { style: inspector ? styles.fullScreen : listStyle, __source: {
            fileName: _jsxFileName,
            lineNumber: 382
          }
        },
        React.createElement(
          ScrollView,
          { style: listStyle, scrollsToTop: false, __source: {
              fileName: _jsxFileName,
              lineNumber: 383
            }
          },
          rows
        ),
        inspector
      );
    }
  }]);
  return YellowBox;
}(React.Component);

var backgroundColor = function backgroundColor(opacity) {
  return 'rgba(250, 186, 48, ' + opacity + ')';
};
var textColor = 'white';
var rowGutter = 1;
var rowHeight = 46;

var styles = StyleSheet.create({
  fullScreen: {
    backgroundColor: 'transparent',
    position: 'absolute',
    left: 0,
    right: 0,
    top: 0,
    bottom: 0,
    elevation: Number.MAX_VALUE
  },
  inspector: {
    backgroundColor: backgroundColor(0.95),
    flex: 1,
    paddingTop: 5,
    elevation: Number.MAX_VALUE
  },
  inspectorButtons: {
    flexDirection: 'row'
  },
  inspectorButton: {
    flex: 1,
    paddingVertical: 22,
    backgroundColor: backgroundColor(1)
  },
  stacktraceList: {
    paddingBottom: 5
  },
  inspectorButtonText: {
    color: textColor,
    fontSize: 14,
    opacity: 0.8,
    textAlign: 'center'
  },
  openInEditorButton: {
    paddingTop: 5,
    paddingBottom: 5
  },
  inspectorCount: {
    padding: 15,
    paddingBottom: 0,
    flexDirection: 'row',
    justifyContent: 'space-between'
  },
  inspectorCountText: {
    color: textColor,
    fontSize: 14
  },
  inspectorWarning: {
    flex: 1,
    paddingHorizontal: 15
  },
  inspectorWarningText: {
    color: textColor,
    fontSize: 16,
    fontWeight: '600'
  },
  list: {
    backgroundColor: 'transparent',
    position: 'absolute',
    left: 0,
    right: 0,
    bottom: 0,
    elevation: Number.MAX_VALUE
  },
  listRow: {
    position: 'relative',
    backgroundColor: backgroundColor(0.95),
    flex: 1,
    height: rowHeight,
    marginTop: rowGutter
  },
  listRowContent: {
    flex: 1
  },
  listRowCount: {
    color: 'rgba(255, 255, 255, 0.5)'
  },
  listRowText: {
    color: textColor,
    position: 'absolute',
    left: 0,
    top: Platform.OS === 'android' ? 5 : 7,
    marginLeft: 15,
    marginRight: 15
  }
});

module.exports = YellowBox;
}, 627, null, "YellowBox");
__d(/* I18nManager */function(global, require, module, exports) {
'use strict';

var I18nManager = require(349            ).I18nManager || { // 349 = NativeModules
  isRTL: false,
  allowRTL: function allowRTL() {},
  forceRTL: function forceRTL() {}
};

module.exports = I18nManager;
}, 628, null, "I18nManager");
__d(/* Navigator */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native/Libraries/CustomComponents/Navigator/Navigator.js';
var AnimationsDebugModule = require(349            ).AnimationsDebugModule; // 349 = NativeModules
var Dimensions = require(423         ); // 423 = Dimensions
var InteractionMixin = require(630               ); // 630 = InteractionMixin
var NavigationContext = require(631                ); // 631 = NavigationContext
var NavigatorBreadcrumbNavigationBar = require(636                               ); // 636 = NavigatorBreadcrumbNavigationBar
var NavigatorNavigationBar = require(641                     ); // 641 = NavigatorNavigationBar
var NavigatorSceneConfigs = require(642                    ); // 642 = NavigatorSceneConfigs
var PanResponder = require(643           ); // 643 = PanResponder
var React = require(398    ); // 398 = React
var StyleSheet = require(421         ); // 421 = StyleSheet
var Subscribable = require(590           ); // 590 = Subscribable
var TVEventHandler = require(509             ); // 509 = TVEventHandler
var TimerMixin = require(570                ); // 570 = react-timer-mixin
var View = require(441   ); // 441 = View

var clamp = require(645    ); // 645 = clamp
var flattenStyle = require(345           ); // 345 = flattenStyle
var invariant = require(346                 ); // 346 = fbjs/lib/invariant
var rebound = require(646      ); // 646 = rebound

var PropTypes = React.PropTypes;

var SCREEN_WIDTH = Dimensions.get('window').width;
var SCREEN_HEIGHT = Dimensions.get('window').height;
var SCENE_DISABLED_NATIVE_PROPS = {
  pointerEvents: 'none',
  style: {
    top: SCREEN_HEIGHT,
    bottom: -SCREEN_HEIGHT,
    opacity: 0
  }
};

var __uid = 0;
function getuid() {
  return __uid++;
}

function getRouteID(route) {
  if (route === null || typeof route !== 'object') {
    return String(route);
  }

  var key = '__navigatorRouteID';

  if (!route.hasOwnProperty(key)) {
    Object.defineProperty(route, key, {
      enumerable: false,
      configurable: false,
      writable: false,
      value: getuid()
    });
  }
  return route[key];
}

var styles = StyleSheet.create({
  container: {
    flex: 1,
    overflow: 'hidden'
  },
  defaultSceneStyle: {
    position: 'absolute',
    left: 0,
    right: 0,
    bottom: 0,
    top: 0,
    transform: [{ translateX: 0 }, { translateY: 0 }, { scaleX: 1 }, { scaleY: 1 }, { rotate: '0deg' }, { skewX: '0deg' }, { skewY: '0deg' }]
  },
  baseScene: {
    position: 'absolute',
    overflow: 'hidden',
    left: 0,
    right: 0,
    bottom: 0,
    top: 0
  },
  disabledScene: {
    top: SCREEN_HEIGHT,
    bottom: -SCREEN_HEIGHT
  },
  transitioner: {
    flex: 1,
    backgroundColor: 'transparent',
    overflow: 'hidden'
  }
});

var GESTURE_ACTIONS = ['pop', 'jumpBack', 'jumpForward'];

var Navigator = React.createClass({
  displayName: 'Navigator',


  propTypes: {
    configureScene: PropTypes.func,

    renderScene: PropTypes.func.isRequired,

    initialRoute: PropTypes.object,

    initialRouteStack: PropTypes.arrayOf(PropTypes.object),

    onWillFocus: PropTypes.func,

    onDidFocus: PropTypes.func,

    navigationBar: PropTypes.node,

    navigator: PropTypes.object,

    sceneStyle: View.propTypes.style
  },

  statics: {
    BreadcrumbNavigationBar: NavigatorBreadcrumbNavigationBar,
    NavigationBar: NavigatorNavigationBar,
    SceneConfigs: NavigatorSceneConfigs
  },

  mixins: [TimerMixin, InteractionMixin, Subscribable.Mixin],

  getDefaultProps: function getDefaultProps() {
    return {
      configureScene: function configureScene() {
        return NavigatorSceneConfigs.PushFromRight;
      },
      sceneStyle: styles.defaultSceneStyle
    };
  },

  getInitialState: function getInitialState() {
    var _this = this;

    this._navigationBarNavigator = this.props.navigationBarNavigator || this;

    this._renderedSceneMap = new Map();

    this._sceneRefs = [];

    var routeStack = this.props.initialRouteStack || [this.props.initialRoute];
    invariant(routeStack.length >= 1, 'Navigator requires props.initialRoute or props.initialRouteStack.');
    var initialRouteIndex = routeStack.length - 1;
    if (this.props.initialRoute) {
      initialRouteIndex = routeStack.indexOf(this.props.initialRoute);
      invariant(initialRouteIndex !== -1, 'initialRoute is not in initialRouteStack.');
    }
    return {
      sceneConfigStack: routeStack.map(function (route) {
        return _this.props.configureScene(route, routeStack);
      }),
      routeStack: routeStack,
      presentedIndex: initialRouteIndex,
      transitionFromIndex: null,
      activeGesture: null,
      pendingGestureProgress: null,
      transitionQueue: []
    };
  },

  componentWillMount: function componentWillMount() {
    var _this2 = this;

    this.__defineGetter__('navigationContext', this._getNavigationContext);

    this._subRouteFocus = [];
    this.parentNavigator = this.props.navigator;
    this._handlers = {};
    this.springSystem = new rebound.SpringSystem();
    this.spring = this.springSystem.createSpring();
    this.spring.setRestSpeedThreshold(0.05);
    this.spring.setCurrentValue(0).setAtRest();
    this.spring.addListener({
      onSpringEndStateChange: function onSpringEndStateChange() {
        if (!_this2._interactionHandle) {
          _this2._interactionHandle = _this2.createInteractionHandle();
        }
      },
      onSpringUpdate: function onSpringUpdate() {
        _this2._handleSpringUpdate();
      },
      onSpringAtRest: function onSpringAtRest() {
        _this2._completeTransition();
      }
    });
    this.panGesture = PanResponder.create({
      onMoveShouldSetPanResponder: this._handleMoveShouldSetPanResponder,
      onPanResponderRelease: this._handlePanResponderRelease,
      onPanResponderMove: this._handlePanResponderMove,
      onPanResponderTerminate: this._handlePanResponderTerminate
    });
    this._interactionHandle = null;
    this._emitWillFocus(this.state.routeStack[this.state.presentedIndex]);
  },

  componentDidMount: function componentDidMount() {
    this._handleSpringUpdate();
    this._emitDidFocus(this.state.routeStack[this.state.presentedIndex]);
    this._enableTVEventHandler();
  },

  componentWillUnmount: function componentWillUnmount() {
    if (this._navigationContext) {
      this._navigationContext.dispose();
      this._navigationContext = null;
    }

    this.spring.destroy();

    if (this._interactionHandle) {
      this.clearInteractionHandle(this._interactionHandle);
    }

    this._disableTVEventHandler();
  },

  immediatelyResetRouteStack: function immediatelyResetRouteStack(nextRouteStack) {
    var _this3 = this;

    var destIndex = nextRouteStack.length - 1;
    this._emitWillFocus(nextRouteStack[destIndex]);
    this.setState({
      routeStack: nextRouteStack,
      sceneConfigStack: nextRouteStack.map(function (route) {
        return _this3.props.configureScene(route, nextRouteStack);
      }),
      presentedIndex: destIndex,
      activeGesture: null,
      transitionFromIndex: null,
      transitionQueue: []
    }, function () {
      _this3._handleSpringUpdate();
      var navBar = _this3._navBar;
      if (navBar && navBar.immediatelyRefresh) {
        navBar.immediatelyRefresh();
      }
      _this3._emitDidFocus(_this3.state.routeStack[_this3.state.presentedIndex]);
    });
  },

  _transitionTo: function _transitionTo(destIndex, velocity, jumpSpringTo, cb) {
    if (this.state.presentedIndex === destIndex) {
      cb && cb();
      return;
    }

    if (this.state.transitionFromIndex !== null) {
      this.state.transitionQueue.push({
        destIndex: destIndex,
        velocity: velocity,
        cb: cb
      });
      return;
    }

    this.state.transitionFromIndex = this.state.presentedIndex;
    this.state.presentedIndex = destIndex;
    this.state.transitionCb = cb;
    this._onAnimationStart();
    if (AnimationsDebugModule) {
      AnimationsDebugModule.startRecordingFps();
    }
    var sceneConfig = this.state.sceneConfigStack[this.state.transitionFromIndex] || this.state.sceneConfigStack[this.state.presentedIndex];
    invariant(sceneConfig, 'Cannot configure scene at index ' + this.state.transitionFromIndex);
    if (jumpSpringTo != null) {
      this.spring.setCurrentValue(jumpSpringTo);
    }
    this.spring.setOvershootClampingEnabled(true);
    this.spring.getSpringConfig().friction = sceneConfig.springFriction;
    this.spring.getSpringConfig().tension = sceneConfig.springTension;
    this.spring.setVelocity(velocity || sceneConfig.defaultTransitionVelocity);
    this.spring.setEndValue(1);
  },

  _handleSpringUpdate: function _handleSpringUpdate() {
    if (!this.isMounted()) {
      return;
    }

    if (this.state.transitionFromIndex != null) {
      this._transitionBetween(this.state.transitionFromIndex, this.state.presentedIndex, this.spring.getCurrentValue());
    } else if (this.state.activeGesture != null) {
      var presentedToIndex = this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);
      this._transitionBetween(this.state.presentedIndex, presentedToIndex, this.spring.getCurrentValue());
    }
  },

  _completeTransition: function _completeTransition() {
    if (!this.isMounted()) {
      return;
    }

    if (this.spring.getCurrentValue() !== 1 && this.spring.getCurrentValue() !== 0) {
      if (this.state.pendingGestureProgress) {
        this.state.pendingGestureProgress = null;
      }
      return;
    }
    this._onAnimationEnd();
    var presentedIndex = this.state.presentedIndex;
    var didFocusRoute = this._subRouteFocus[presentedIndex] || this.state.routeStack[presentedIndex];

    if (AnimationsDebugModule) {
      AnimationsDebugModule.stopRecordingFps(Date.now());
    }
    this.state.transitionFromIndex = null;
    this.spring.setCurrentValue(0).setAtRest();
    this._hideScenes();
    if (this.state.transitionCb) {
      this.state.transitionCb();
      this.state.transitionCb = null;
    }

    this._emitDidFocus(didFocusRoute);

    if (this._interactionHandle) {
      this.clearInteractionHandle(this._interactionHandle);
      this._interactionHandle = null;
    }
    if (this.state.pendingGestureProgress) {
      var gestureToIndex = this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);
      this._enableScene(gestureToIndex);
      this.spring.setEndValue(this.state.pendingGestureProgress);
      return;
    }
    if (this.state.transitionQueue.length) {
      var queuedTransition = this.state.transitionQueue.shift();
      this._enableScene(queuedTransition.destIndex);
      this._emitWillFocus(this.state.routeStack[queuedTransition.destIndex]);
      this._transitionTo(queuedTransition.destIndex, queuedTransition.velocity, null, queuedTransition.cb);
    }
  },

  _emitDidFocus: function _emitDidFocus(route) {
    this.navigationContext.emit('didfocus', { route: route });

    if (this.props.onDidFocus) {
      this.props.onDidFocus(route);
    }
  },

  _emitWillFocus: function _emitWillFocus(route) {
    this.navigationContext.emit('willfocus', { route: route });

    var navBar = this._navBar;
    if (navBar && navBar.handleWillFocus) {
      navBar.handleWillFocus(route);
    }
    if (this.props.onWillFocus) {
      this.props.onWillFocus(route);
    }
  },

  _hideScenes: function _hideScenes() {
    var gesturingToIndex = null;
    if (this.state.activeGesture) {
      gesturingToIndex = this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);
    }
    for (var i = 0; i < this.state.routeStack.length; i++) {
      if (i === this.state.presentedIndex || i === this.state.transitionFromIndex || i === gesturingToIndex) {
        continue;
      }
      this._disableScene(i);
    }
  },

  _disableScene: function _disableScene(sceneIndex) {
    this._sceneRefs[sceneIndex] && this._sceneRefs[sceneIndex].setNativeProps(SCENE_DISABLED_NATIVE_PROPS);
  },

  _enableScene: function _enableScene(sceneIndex) {
    var sceneStyle = flattenStyle([styles.baseScene, this.props.sceneStyle]);

    var enabledSceneNativeProps = {
      pointerEvents: 'auto',
      style: {
        top: sceneStyle.top,
        bottom: sceneStyle.bottom
      }
    };
    if (sceneIndex !== this.state.transitionFromIndex && sceneIndex !== this.state.presentedIndex) {
      enabledSceneNativeProps.style.opacity = 0;
    }
    this._sceneRefs[sceneIndex] && this._sceneRefs[sceneIndex].setNativeProps(enabledSceneNativeProps);
  },

  _clearTransformations: function _clearTransformations(sceneIndex) {
    var defaultStyle = flattenStyle([styles.defaultSceneStyle]);
    this._sceneRefs[sceneIndex].setNativeProps({ style: defaultStyle });
  },

  _onAnimationStart: function _onAnimationStart() {
    var fromIndex = this.state.presentedIndex;
    var toIndex = this.state.presentedIndex;
    if (this.state.transitionFromIndex != null) {
      fromIndex = this.state.transitionFromIndex;
    } else if (this.state.activeGesture) {
      toIndex = this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);
    }
    this._setRenderSceneToHardwareTextureAndroid(fromIndex, true);
    this._setRenderSceneToHardwareTextureAndroid(toIndex, true);
    var navBar = this._navBar;
    if (navBar && navBar.onAnimationStart) {
      navBar.onAnimationStart(fromIndex, toIndex);
    }
  },

  _onAnimationEnd: function _onAnimationEnd() {
    var max = this.state.routeStack.length - 1;
    for (var index = 0; index <= max; index++) {
      this._setRenderSceneToHardwareTextureAndroid(index, false);
    }

    var navBar = this._navBar;
    if (navBar && navBar.onAnimationEnd) {
      navBar.onAnimationEnd();
    }
  },

  _setRenderSceneToHardwareTextureAndroid: function _setRenderSceneToHardwareTextureAndroid(sceneIndex, shouldRenderToHardwareTexture) {
    var viewAtIndex = this._sceneRefs[sceneIndex];
    if (viewAtIndex === null || viewAtIndex === undefined) {
      return;
    }
    viewAtIndex.setNativeProps({ renderToHardwareTextureAndroid: shouldRenderToHardwareTexture });
  },

  _handleTouchStart: function _handleTouchStart() {
    this._eligibleGestures = GESTURE_ACTIONS;
  },

  _handleMoveShouldSetPanResponder: function _handleMoveShouldSetPanResponder(e, gestureState) {
    var sceneConfig = this.state.sceneConfigStack[this.state.presentedIndex];
    if (!sceneConfig) {
      return false;
    }
    this._expectingGestureGrant = this._matchGestureAction(this._eligibleGestures, sceneConfig.gestures, gestureState);
    return !!this._expectingGestureGrant;
  },

  _doesGestureOverswipe: function _doesGestureOverswipe(gestureName) {
    var wouldOverswipeBack = this.state.presentedIndex <= 0 && (gestureName === 'pop' || gestureName === 'jumpBack');
    var wouldOverswipeForward = this.state.presentedIndex >= this.state.routeStack.length - 1 && gestureName === 'jumpForward';
    return wouldOverswipeForward || wouldOverswipeBack;
  },

  _deltaForGestureAction: function _deltaForGestureAction(gestureAction) {
    switch (gestureAction) {
      case 'pop':
      case 'jumpBack':
        return -1;
      case 'jumpForward':
        return 1;
      default:
        invariant(false, 'Unsupported gesture action ' + gestureAction);
        return;
    }
  },

  _handlePanResponderRelease: function _handlePanResponderRelease(e, gestureState) {
    var _this4 = this;

    var sceneConfig = this.state.sceneConfigStack[this.state.presentedIndex];
    var releaseGestureAction = this.state.activeGesture;
    if (!releaseGestureAction) {
      return;
    }
    var releaseGesture = sceneConfig.gestures[releaseGestureAction];
    var destIndex = this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);
    if (this.spring.getCurrentValue() === 0) {
      this.spring.setCurrentValue(0).setAtRest();
      this._completeTransition();
      return;
    }
    var isTravelVertical = releaseGesture.direction === 'top-to-bottom' || releaseGesture.direction === 'bottom-to-top';
    var isTravelInverted = releaseGesture.direction === 'right-to-left' || releaseGesture.direction === 'bottom-to-top';
    var velocity, gestureDistance;
    if (isTravelVertical) {
      velocity = isTravelInverted ? -gestureState.vy : gestureState.vy;
      gestureDistance = isTravelInverted ? -gestureState.dy : gestureState.dy;
    } else {
      velocity = isTravelInverted ? -gestureState.vx : gestureState.vx;
      gestureDistance = isTravelInverted ? -gestureState.dx : gestureState.dx;
    }
    var transitionVelocity = clamp(-10, velocity, 10);
    if (Math.abs(velocity) < releaseGesture.notMoving) {
      var hasGesturedEnoughToComplete = gestureDistance > releaseGesture.fullDistance * releaseGesture.stillCompletionRatio;
      transitionVelocity = hasGesturedEnoughToComplete ? releaseGesture.snapVelocity : -releaseGesture.snapVelocity;
    }
    if (transitionVelocity < 0 || this._doesGestureOverswipe(releaseGestureAction)) {
      if (this.state.transitionFromIndex == null) {
        var transitionBackToPresentedIndex = this.state.presentedIndex;

        this.state.presentedIndex = destIndex;
        this._transitionTo(transitionBackToPresentedIndex, -transitionVelocity, 1 - this.spring.getCurrentValue());
      }
    } else {
      this._emitWillFocus(this.state.routeStack[destIndex]);
      this._transitionTo(destIndex, transitionVelocity, null, function () {
        if (releaseGestureAction === 'pop') {
          _this4._cleanScenesPastIndex(destIndex);
        }
      });
    }
    this._detachGesture();
  },

  _handlePanResponderTerminate: function _handlePanResponderTerminate(e, gestureState) {
    if (this.state.activeGesture == null) {
      return;
    }
    var destIndex = this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);
    this._detachGesture();
    var transitionBackToPresentedIndex = this.state.presentedIndex;

    this.state.presentedIndex = destIndex;
    this._transitionTo(transitionBackToPresentedIndex, null, 1 - this.spring.getCurrentValue());
  },

  _attachGesture: function _attachGesture(gestureId) {
    this.state.activeGesture = gestureId;
    var gesturingToIndex = this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);
    this._enableScene(gesturingToIndex);
  },

  _detachGesture: function _detachGesture() {
    this.state.activeGesture = null;
    this.state.pendingGestureProgress = null;
    this._hideScenes();
  },

  _handlePanResponderMove: function _handlePanResponderMove(e, gestureState) {
    if (this._isMoveGestureAttached !== undefined) {
      invariant(this._expectingGestureGrant, 'Responder granted unexpectedly.');
      this._attachGesture(this._expectingGestureGrant);
      this._onAnimationStart();
      this._expectingGestureGrant = undefined;
    }

    var sceneConfig = this.state.sceneConfigStack[this.state.presentedIndex];
    if (this.state.activeGesture) {
      var gesture = sceneConfig.gestures[this.state.activeGesture];
      return this._moveAttachedGesture(gesture, gestureState);
    }
    var matchedGesture = this._matchGestureAction(GESTURE_ACTIONS, sceneConfig.gestures, gestureState);
    if (matchedGesture) {
      this._attachGesture(matchedGesture);
    }
  },

  _moveAttachedGesture: function _moveAttachedGesture(gesture, gestureState) {
    var isTravelVertical = gesture.direction === 'top-to-bottom' || gesture.direction === 'bottom-to-top';
    var isTravelInverted = gesture.direction === 'right-to-left' || gesture.direction === 'bottom-to-top';
    var distance = isTravelVertical ? gestureState.dy : gestureState.dx;
    distance = isTravelInverted ? -distance : distance;
    var gestureDetectMovement = gesture.gestureDetectMovement;
    var nextProgress = (distance - gestureDetectMovement) / (gesture.fullDistance - gestureDetectMovement);
    if (nextProgress < 0 && gesture.isDetachable) {
      var gesturingToIndex = this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);
      this._transitionBetween(this.state.presentedIndex, gesturingToIndex, 0);
      this._detachGesture();
      if (this.state.pendingGestureProgress != null) {
        this.spring.setCurrentValue(0);
      }
      return;
    }
    if (gesture.overswipe && this._doesGestureOverswipe(this.state.activeGesture)) {
      var frictionConstant = gesture.overswipe.frictionConstant;
      var frictionByDistance = gesture.overswipe.frictionByDistance;
      var frictionRatio = 1 / (frictionConstant + Math.abs(nextProgress) * frictionByDistance);
      nextProgress *= frictionRatio;
    }
    nextProgress = clamp(0, nextProgress, 1);
    if (this.state.transitionFromIndex != null) {
      this.state.pendingGestureProgress = nextProgress;
    } else if (this.state.pendingGestureProgress) {
      this.spring.setEndValue(nextProgress);
    } else {
      this.spring.setCurrentValue(nextProgress);
    }
  },

  _matchGestureAction: function _matchGestureAction(eligibleGestures, gestures, gestureState) {
    var _this5 = this;

    if (!gestures || !eligibleGestures || !eligibleGestures.some) {
      return null;
    }
    var matchedGesture = null;
    eligibleGestures.some(function (gestureName, gestureIndex) {
      var gesture = gestures[gestureName];
      if (!gesture) {
        return;
      }
      if (gesture.overswipe == null && _this5._doesGestureOverswipe(gestureName)) {
        return false;
      }
      var isTravelVertical = gesture.direction === 'top-to-bottom' || gesture.direction === 'bottom-to-top';
      var isTravelInverted = gesture.direction === 'right-to-left' || gesture.direction === 'bottom-to-top';
      var startedLoc = isTravelVertical ? gestureState.y0 : gestureState.x0;
      var currentLoc = isTravelVertical ? gestureState.moveY : gestureState.moveX;
      var travelDist = isTravelVertical ? gestureState.dy : gestureState.dx;
      var oppositeAxisTravelDist = isTravelVertical ? gestureState.dx : gestureState.dy;
      var edgeHitWidth = gesture.edgeHitWidth;
      if (isTravelInverted) {
        startedLoc = -startedLoc;
        currentLoc = -currentLoc;
        travelDist = -travelDist;
        oppositeAxisTravelDist = -oppositeAxisTravelDist;
        edgeHitWidth = isTravelVertical ? -(SCREEN_HEIGHT - edgeHitWidth) : -(SCREEN_WIDTH - edgeHitWidth);
      }
      if (startedLoc === 0) {
        startedLoc = currentLoc;
      }
      var moveStartedInRegion = gesture.edgeHitWidth == null || startedLoc < edgeHitWidth;
      if (!moveStartedInRegion) {
        return false;
      }
      var moveTravelledFarEnough = travelDist >= gesture.gestureDetectMovement;
      if (!moveTravelledFarEnough) {
        return false;
      }
      var directionIsCorrect = Math.abs(travelDist) > Math.abs(oppositeAxisTravelDist) * gesture.directionRatio;
      if (directionIsCorrect) {
        matchedGesture = gestureName;
        return true;
      } else {
        _this5._eligibleGestures = _this5._eligibleGestures.slice().splice(gestureIndex, 1);
      }
    });
    return matchedGesture || null;
  },

  _transitionSceneStyle: function _transitionSceneStyle(fromIndex, toIndex, progress, index) {
    var viewAtIndex = this._sceneRefs[index];
    if (viewAtIndex === null || viewAtIndex === undefined) {
      return;
    }

    var sceneConfigIndex = fromIndex < toIndex ? toIndex : fromIndex;
    var sceneConfig = this.state.sceneConfigStack[sceneConfigIndex];

    if (!sceneConfig) {
      sceneConfig = this.state.sceneConfigStack[sceneConfigIndex - 1];
    }
    var styleToUse = {};
    var useFn = index < fromIndex || index < toIndex ? sceneConfig.animationInterpolators.out : sceneConfig.animationInterpolators.into;
    var directionAdjustedProgress = fromIndex < toIndex ? progress : 1 - progress;
    var didChange = useFn(styleToUse, directionAdjustedProgress);
    if (didChange) {
      viewAtIndex.setNativeProps({ style: styleToUse });
    }
  },

  _transitionBetween: function _transitionBetween(fromIndex, toIndex, progress) {
    this._transitionSceneStyle(fromIndex, toIndex, progress, fromIndex);
    this._transitionSceneStyle(fromIndex, toIndex, progress, toIndex);
    var navBar = this._navBar;
    if (navBar && navBar.updateProgress && toIndex >= 0 && fromIndex >= 0) {
      navBar.updateProgress(progress, fromIndex, toIndex);
    }
  },

  _handleResponderTerminationRequest: function _handleResponderTerminationRequest() {
    return false;
  },

  _getDestIndexWithinBounds: function _getDestIndexWithinBounds(n) {
    var currentIndex = this.state.presentedIndex;
    var destIndex = currentIndex + n;
    invariant(destIndex >= 0, 'Cannot jump before the first route.');
    var maxIndex = this.state.routeStack.length - 1;
    invariant(maxIndex >= destIndex, 'Cannot jump past the last route.');
    return destIndex;
  },

  _jumpN: function _jumpN(n) {
    var destIndex = this._getDestIndexWithinBounds(n);
    this._enableScene(destIndex);
    this._emitWillFocus(this.state.routeStack[destIndex]);
    this._transitionTo(destIndex);
  },

  jumpTo: function jumpTo(route) {
    var destIndex = this.state.routeStack.indexOf(route);
    invariant(destIndex !== -1, 'Cannot jump to route that is not in the route stack');
    this._jumpN(destIndex - this.state.presentedIndex);
  },

  jumpForward: function jumpForward() {
    this._jumpN(1);
  },

  jumpBack: function jumpBack() {
    this._jumpN(-1);
  },

  push: function push(route) {
    var _this6 = this;

    invariant(!!route, 'Must supply route to push');
    var activeLength = this.state.presentedIndex + 1;
    var activeStack = this.state.routeStack.slice(0, activeLength);
    var activeAnimationConfigStack = this.state.sceneConfigStack.slice(0, activeLength);
    var nextStack = activeStack.concat([route]);
    var destIndex = nextStack.length - 1;
    var nextSceneConfig = this.props.configureScene(route, nextStack);
    var nextAnimationConfigStack = activeAnimationConfigStack.concat([nextSceneConfig]);
    this._emitWillFocus(nextStack[destIndex]);
    this.setState({
      routeStack: nextStack,
      sceneConfigStack: nextAnimationConfigStack
    }, function () {
      _this6._enableScene(destIndex);
      _this6._transitionTo(destIndex, nextSceneConfig.defaultTransitionVelocity);
    });
  },

  popN: function popN(n) {
    var _this7 = this;

    invariant(typeof n === 'number', 'Must supply a number to popN');
    n = parseInt(n, 10);
    if (n <= 0 || this.state.presentedIndex - n < 0) {
      return;
    }
    var popIndex = this.state.presentedIndex - n;
    var presentedRoute = this.state.routeStack[this.state.presentedIndex];
    var popSceneConfig = this.props.configureScene(presentedRoute);
    this._enableScene(popIndex);

    this._clearTransformations(popIndex);
    this._emitWillFocus(this.state.routeStack[popIndex]);
    this._transitionTo(popIndex, popSceneConfig.defaultTransitionVelocity, null, function () {
      _this7._cleanScenesPastIndex(popIndex);
    });
  },

  pop: function pop() {
    if (this.state.transitionQueue.length) {
      return;
    }

    this.popN(1);
  },

  replaceAtIndex: function replaceAtIndex(route, index, cb) {
    var _this8 = this;

    invariant(!!route, 'Must supply route to replace');
    if (index < 0) {
      index += this.state.routeStack.length;
    }

    if (this.state.routeStack.length <= index) {
      return;
    }

    var nextRouteStack = this.state.routeStack.slice();
    var nextAnimationModeStack = this.state.sceneConfigStack.slice();
    nextRouteStack[index] = route;
    nextAnimationModeStack[index] = this.props.configureScene(route, nextRouteStack);

    if (index === this.state.presentedIndex) {
      this._emitWillFocus(route);
    }
    this.setState({
      routeStack: nextRouteStack,
      sceneConfigStack: nextAnimationModeStack
    }, function () {
      if (index === _this8.state.presentedIndex) {
        _this8._emitDidFocus(route);
      }
      cb && cb();
    });
  },

  replace: function replace(route) {
    this.replaceAtIndex(route, this.state.presentedIndex);
  },

  replacePrevious: function replacePrevious(route) {
    this.replaceAtIndex(route, this.state.presentedIndex - 1);
  },

  popToTop: function popToTop() {
    this.popToRoute(this.state.routeStack[0]);
  },

  popToRoute: function popToRoute(route) {
    var indexOfRoute = this.state.routeStack.indexOf(route);
    invariant(indexOfRoute !== -1, 'Calling popToRoute for a route that doesn\'t exist!');
    var numToPop = this.state.presentedIndex - indexOfRoute;
    this.popN(numToPop);
  },

  replacePreviousAndPop: function replacePreviousAndPop(route) {
    if (this.state.routeStack.length < 2) {
      return;
    }
    this.replacePrevious(route);
    this.pop();
  },

  resetTo: function resetTo(route) {
    var _this9 = this;

    invariant(!!route, 'Must supply route to push');
    this.replaceAtIndex(route, 0, function () {
      _this9.popN(_this9.state.presentedIndex);
    });
  },

  getCurrentRoutes: function getCurrentRoutes() {
    return this.state.routeStack.slice();
  },

  _cleanScenesPastIndex: function _cleanScenesPastIndex(index) {
    var newStackLength = index + 1;

    if (newStackLength < this.state.routeStack.length) {
      this.setState({
        sceneConfigStack: this.state.sceneConfigStack.slice(0, newStackLength),
        routeStack: this.state.routeStack.slice(0, newStackLength)
      });
    }
  },

  _renderScene: function _renderScene(route, i) {
    var _this10 = this;

    var disabledSceneStyle = null;
    var disabledScenePointerEvents = 'auto';
    if (i !== this.state.presentedIndex) {
      disabledSceneStyle = styles.disabledScene;
      disabledScenePointerEvents = 'none';
    }
    return React.createElement(
      View,
      {
        collapsable: false,
        key: 'scene_' + getRouteID(route),
        ref: function ref(scene) {
          _this10._sceneRefs[i] = scene;
        },
        onStartShouldSetResponderCapture: function onStartShouldSetResponderCapture() {
          return _this10.state.transitionFromIndex != null;
        },
        pointerEvents: disabledScenePointerEvents,
        style: [styles.baseScene, this.props.sceneStyle, disabledSceneStyle], __source: {
          fileName: _jsxFileName,
          lineNumber: 1274
        }
      },
      this.props.renderScene(route, this)
    );
  },

  _renderNavigationBar: function _renderNavigationBar() {
    var _this11 = this;

    var navigationBar = this.props.navigationBar;

    if (!navigationBar) {
      return null;
    }
    return React.cloneElement(navigationBar, {
      ref: function ref(navBar) {
        _this11._navBar = navBar;
        if (navigationBar && typeof navigationBar.ref === 'function') {
          navigationBar.ref(navBar);
        }
      },
      navigator: this._navigationBarNavigator,
      navState: this.state
    });
  },

  _tvEventHandler: TVEventHandler,

  _enableTVEventHandler: function _enableTVEventHandler() {
    this._tvEventHandler = new TVEventHandler();
    this._tvEventHandler.enable(this, function (cmp, evt) {
      if (evt && evt.eventType === 'menu') {
        cmp.pop();
      }
    });
  },

  _disableTVEventHandler: function _disableTVEventHandler() {
    if (this._tvEventHandler) {
      this._tvEventHandler.disable();
      delete this._tvEventHandler;
    }
  },

  render: function render() {
    var _this12 = this;

    var newRenderedSceneMap = new Map();
    var scenes = this.state.routeStack.map(function (route, index) {
      var renderedScene;
      if (_this12._renderedSceneMap.has(route) && index !== _this12.state.presentedIndex) {
        renderedScene = _this12._renderedSceneMap.get(route);
      } else {
        renderedScene = _this12._renderScene(route, index);
      }
      newRenderedSceneMap.set(route, renderedScene);
      return renderedScene;
    });
    this._renderedSceneMap = newRenderedSceneMap;
    return React.createElement(
      View,
      { style: [styles.container, this.props.style], __source: {
          fileName: _jsxFileName,
          lineNumber: 1343
        }
      },
      React.createElement(
        View,
        babelHelpers.extends({
          style: styles.transitioner
        }, this.panGesture.panHandlers, {
          onTouchStart: this._handleTouchStart,
          onResponderTerminationRequest: this._handleResponderTerminationRequest, __source: {
            fileName: _jsxFileName,
            lineNumber: 1344
          }
        }),
        scenes
      ),
      this._renderNavigationBar()
    );
  },

  _getNavigationContext: function _getNavigationContext() {
    if (!this._navigationContext) {
      this._navigationContext = new NavigationContext();
    }
    return this._navigationContext;
  }
});

module.exports = Navigator;
}, 629, null, "Navigator");
__d(/* InteractionMixin */function(global, require, module, exports) {
'use strict';

var InteractionManager = require(575                 ); // 575 = InteractionManager

var InteractionMixin = {
  componentWillUnmount: function componentWillUnmount() {
    while (this._interactionMixinHandles.length) {
      InteractionManager.clearInteractionHandle(this._interactionMixinHandles.pop());
    }
  },

  _interactionMixinHandles: [],

  createInteractionHandle: function createInteractionHandle() {
    var handle = InteractionManager.createInteractionHandle();
    this._interactionMixinHandles.push(handle);
    return handle;
  },

  clearInteractionHandle: function clearInteractionHandle(clearHandle) {
    InteractionManager.clearInteractionHandle(clearHandle);
    this._interactionMixinHandles = this._interactionMixinHandles.filter(function (handle) {
      return handle !== clearHandle;
    });
  },

  runAfterInteractions: function runAfterInteractions(callback) {
    InteractionManager.runAfterInteractions(callback);
  }
};

module.exports = InteractionMixin;
}, 630, null, "InteractionMixin");
__d(/* NavigationContext */function(global, require, module, exports) {
'use strict';

var NavigationEvent = require(632              ); // 632 = NavigationEvent
var NavigationEventEmitter = require(633                     ); // 633 = NavigationEventEmitter
var NavigationTreeNode = require(634                 ); // 634 = NavigationTreeNode

var Set = require(541  ); // 541 = Set

var emptyFunction = require(336                     ); // 336 = fbjs/lib/emptyFunction
var invariant = require(346                 ); // 346 = fbjs/lib/invariant

var AT_TARGET = NavigationEvent.AT_TARGET,
    BUBBLING_PHASE = NavigationEvent.BUBBLING_PHASE,
    CAPTURING_PHASE = NavigationEvent.CAPTURING_PHASE;

var LegacyEventTypes = new Set(['willfocus', 'didfocus']);

var NavigationContext = function () {
  function NavigationContext() {
    babelHelpers.classCallCheck(this, NavigationContext);

    this._bubbleEventEmitter = new NavigationEventEmitter(this);
    this._captureEventEmitter = new NavigationEventEmitter(this);
    this._currentRoute = null;

    this.__node = new NavigationTreeNode(this);

    this._emitCounter = 0;
    this._emitQueue = [];

    this.addListener('willfocus', this._onFocus);
    this.addListener('didfocus', this._onFocus);
  }

  babelHelpers.createClass(NavigationContext, [{
    key: 'appendChild',
    value: function appendChild(childContext) {
      this.__node.appendChild(childContext.__node);
    }
  }, {
    key: 'addListener',
    value: function addListener(eventType, listener, useCapture) {
      if (LegacyEventTypes.has(eventType)) {
        useCapture = false;
      }

      var emitter = useCapture ? this._captureEventEmitter : this._bubbleEventEmitter;

      if (emitter) {
        return emitter.addListener(eventType, listener, this);
      } else {
        return { remove: emptyFunction };
      }
    }
  }, {
    key: 'emit',
    value: function emit(eventType, data, didEmitCallback) {
      var _this = this;

      if (this._emitCounter > 0) {
        var args = Array.prototype.slice.call(arguments);
        this._emitQueue.push(args);
        return;
      }

      this._emitCounter++;

      if (LegacyEventTypes.has(eventType)) {
        this.__emit(eventType, data, null, {
          defaultPrevented: false,
          eventPhase: AT_TARGET,
          propagationStopped: true,
          target: this
        });
      } else {
        var targets = [this];
        var parentTarget = this.parent;
        while (parentTarget) {
          targets.unshift(parentTarget);
          parentTarget = parentTarget.parent;
        }

        var propagationStopped = false;
        var defaultPrevented = false;
        var callback = function callback(event) {
          propagationStopped = propagationStopped || event.isPropagationStopped();
          defaultPrevented = defaultPrevented || event.defaultPrevented;
        };

        targets.some(function (currentTarget) {
          if (propagationStopped) {
            return true;
          }

          var extraInfo = {
            defaultPrevented: defaultPrevented,
            eventPhase: CAPTURING_PHASE,
            propagationStopped: propagationStopped,
            target: _this
          };

          currentTarget.__emit(eventType, data, callback, extraInfo);
        }, this);

        targets.reverse().some(function (currentTarget) {
          if (propagationStopped) {
            return true;
          }
          var extraInfo = {
            defaultPrevented: defaultPrevented,
            eventPhase: BUBBLING_PHASE,
            propagationStopped: propagationStopped,
            target: _this
          };
          currentTarget.__emit(eventType, data, callback, extraInfo);
        }, this);
      }

      if (didEmitCallback) {
        var event = NavigationEvent.pool(eventType, this, data);
        propagationStopped && event.stopPropagation();
        defaultPrevented && event.preventDefault();
        didEmitCallback.call(this, event);
        event.dispose();
      }

      this._emitCounter--;
      while (this._emitQueue.length) {
        var args = this._emitQueue.shift();
        this.emit.apply(this, args);
      }
    }
  }, {
    key: 'dispose',
    value: function dispose() {
      this._bubbleEventEmitter && this._bubbleEventEmitter.removeAllListeners();
      this._captureEventEmitter && this._captureEventEmitter.removeAllListeners();
      this._bubbleEventEmitter = null;
      this._captureEventEmitter = null;
      this._currentRoute = null;
    }
  }, {
    key: '__emit',
    value: function __emit(eventType, data, didEmitCallback, extraInfo) {
      var emitter;
      switch (extraInfo.eventPhase) {
        case CAPTURING_PHASE:
          emitter = this._captureEventEmitter;
          break;

        case AT_TARGET:
          emitter = this._bubbleEventEmitter;
          break;

        case BUBBLING_PHASE:
          emitter = this._bubbleEventEmitter;
          break;

        default:
          invariant(false, 'invalid event phase %s', extraInfo.eventPhase);
      }

      if (extraInfo.target === this) {
        extraInfo.eventPhase = AT_TARGET;
      }

      if (emitter) {
        emitter.emit(eventType, data, didEmitCallback, extraInfo);
      }
    }
  }, {
    key: '_onFocus',
    value: function _onFocus(event) {
      invariant(event.data && event.data.hasOwnProperty('route'), 'event type "%s" should provide route', event.type);

      this._currentRoute = event.data.route;
    }
  }, {
    key: 'parent',
    get: function get() {
      var parent = this.__node.getParent();
      return parent ? parent.getValue() : null;
    }
  }, {
    key: 'top',
    get: function get() {
      var result = null;
      var parentNode = this.__node.getParent();
      while (parentNode) {
        result = parentNode.getValue();
        parentNode = parentNode.getParent();
      }
      return result;
    }
  }, {
    key: 'currentRoute',
    get: function get() {
      return this._currentRoute;
    }
  }]);
  return NavigationContext;
}();

module.exports = NavigationContext;
}, 631, null, "NavigationContext");
__d(/* NavigationEvent */function(global, require, module, exports) {
'use strict';

var invariant = require(346                 ); // 346 = fbjs/lib/invariant

var NavigationEventPool = function () {
  function NavigationEventPool() {
    babelHelpers.classCallCheck(this, NavigationEventPool);

    this._list = [];
  }

  babelHelpers.createClass(NavigationEventPool, [{
    key: 'get',
    value: function get(type, currentTarget, data) {
      var event = void 0;
      if (this._list.length > 0) {
        event = this._list.pop();
        event.constructor.call(event, type, currentTarget, data);
      } else {
        event = new NavigationEvent(type, currentTarget, data);
      }
      return event;
    }
  }, {
    key: 'put',
    value: function put(event) {
      this._list.push(event);
    }
  }]);
  return NavigationEventPool;
}();

var _navigationEventPool = new NavigationEventPool();

var NavigationEvent = function () {
  babelHelpers.createClass(NavigationEvent, null, [{
    key: 'pool',
    value: function pool(type, currentTarget, data) {
      return _navigationEventPool.get(type, currentTarget, data);
    }
  }]);

  function NavigationEvent(type, currentTarget, data) {
    babelHelpers.classCallCheck(this, NavigationEvent);

    this.target = currentTarget;
    this.eventPhase = NavigationEvent.NONE;

    this._type = type;
    this._currentTarget = currentTarget;
    this._data = data;
    this._defaultPrevented = false;
    this._disposed = false;
    this._propagationStopped = false;
  }

  babelHelpers.createClass(NavigationEvent, [{
    key: 'preventDefault',
    value: function preventDefault() {
      this._defaultPrevented = true;
    }
  }, {
    key: 'stopPropagation',
    value: function stopPropagation() {
      this._propagationStopped = true;
    }
  }, {
    key: 'stop',
    value: function stop() {
      this.preventDefault();
      this.stopPropagation();
    }
  }, {
    key: 'isPropagationStopped',
    value: function isPropagationStopped() {
      return this._propagationStopped;
    }
  }, {
    key: 'dispose',
    value: function dispose() {
      invariant(!this._disposed, 'NavigationEvent is already disposed');
      this._disposed = true;

      this.target = null;
      this.eventPhase = NavigationEvent.NONE;
      this._type = '';
      this._currentTarget = null;
      this._data = null;
      this._defaultPrevented = false;

      _navigationEventPool.put(this);
    }
  }, {
    key: 'type',
    get: function get() {
      return this._type;
    }
  }, {
    key: 'currentTarget',
    get: function get() {
      return this._currentTarget;
    }
  }, {
    key: 'data',
    get: function get() {
      return this._data;
    }
  }, {
    key: 'defaultPrevented',
    get: function get() {
      return this._defaultPrevented;
    }
  }]);
  return NavigationEvent;
}();

NavigationEvent.NONE = 0;

NavigationEvent.CAPTURING_PHASE = 1;

NavigationEvent.AT_TARGET = 2;

NavigationEvent.BUBBLING_PHASE = 3;

module.exports = NavigationEvent;
}, 632, null, "NavigationEvent");
__d(/* NavigationEventEmitter */function(global, require, module, exports) {
'use strict';

var EventEmitter = require(375           ); // 375 = EventEmitter
var NavigationEvent = require(632              ); // 632 = NavigationEvent

var NavigationEventEmitter = function (_EventEmitter) {
  babelHelpers.inherits(NavigationEventEmitter, _EventEmitter);

  function NavigationEventEmitter(target) {
    babelHelpers.classCallCheck(this, NavigationEventEmitter);

    var _this = babelHelpers.possibleConstructorReturn(this, (NavigationEventEmitter.__proto__ || Object.getPrototypeOf(NavigationEventEmitter)).call(this));

    _this._emitting = false;
    _this._emitQueue = [];
    _this._target = target;
    return _this;
  }

  babelHelpers.createClass(NavigationEventEmitter, [{
    key: 'emit',
    value: function emit(eventType, data, didEmitCallback, extraInfo) {
      if (this._emitting) {
        var args = Array.prototype.slice.call(arguments);
        this._emitQueue.push(args);
        return;
      }

      this._emitting = true;

      var event = NavigationEvent.pool(eventType, this._target, data);

      if (extraInfo) {
        if (extraInfo.target) {
          event.target = extraInfo.target;
        }

        if (extraInfo.eventPhase) {
          event.eventPhase = extraInfo.eventPhase;
        }

        if (extraInfo.defaultPrevented) {
          event.preventDefault();
        }

        if (extraInfo.propagationStopped) {
          event.stopPropagation();
        }
      }

      babelHelpers.get(NavigationEventEmitter.prototype.__proto__ || Object.getPrototypeOf(NavigationEventEmitter.prototype), 'emit', this).call(this, String(eventType), event);

      if (typeof didEmitCallback === 'function') {
        didEmitCallback.call(this._target, event);
      }
      event.dispose();

      this._emitting = false;

      while (this._emitQueue.length) {
        var args = this._emitQueue.shift();
        this.emit.apply(this, args);
      }
    }
  }]);
  return NavigationEventEmitter;
}(EventEmitter);

module.exports = NavigationEventEmitter;
}, 633, null, "NavigationEventEmitter");
__d(/* NavigationTreeNode */function(global, require, module, exports) {

'use strict';

var invariant = require(346                 ); // 346 = fbjs/lib/invariant
var immutable = require(635        ); // 635 = immutable

var List = immutable.List;

var NavigationTreeNode = function () {
  function NavigationTreeNode(value) {
    babelHelpers.classCallCheck(this, NavigationTreeNode);

    this.__parent = null;
    this._children = new List();
    this._value = value;
  }

  babelHelpers.createClass(NavigationTreeNode, [{
    key: 'getValue',
    value: function getValue() {
      return this._value;
    }
  }, {
    key: 'getParent',
    value: function getParent() {
      return this.__parent;
    }
  }, {
    key: 'getChildrenCount',
    value: function getChildrenCount() {
      return this._children.size;
    }
  }, {
    key: 'getChildAt',
    value: function getChildAt(index) {
      return index > -1 && index < this._children.size ? this._children.get(index) : null;
    }
  }, {
    key: 'appendChild',
    value: function appendChild(child) {
      if (child.__parent) {
        child.__parent.removeChild(child);
      }
      child.__parent = this;
      this._children = this._children.push(child);
    }
  }, {
    key: 'removeChild',
    value: function removeChild(child) {
      var index = this._children.indexOf(child);

      invariant(index > -1, 'The node to be removed is not a child of this node.');

      child.__parent = null;

      this._children = this._children.splice(index, 1);
    }
  }, {
    key: 'indexOf',
    value: function indexOf(child) {
      return this._children.indexOf(child);
    }
  }, {
    key: 'forEach',
    value: function forEach(callback, context) {
      this._children.forEach(callback, context);
    }
  }, {
    key: 'map',
    value: function map(callback, context) {
      return this._children.map(callback, context).toJS();
    }
  }, {
    key: 'some',
    value: function some(callback, context) {
      return this._children.some(callback, context);
    }
  }]);
  return NavigationTreeNode;
}();

module.exports = NavigationTreeNode;
}, 634, null, "NavigationTreeNode");
__d(/* immutable/dist/immutable.js */function(global, require, module, exports) {

(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.Immutable = factory();
})(this, function () {
  'use strict';
  var SLICE$0 = Array.prototype.slice;

  function createClass(ctor, superClass) {
    if (superClass) {
      ctor.prototype = Object.create(superClass.prototype);
    }
    ctor.prototype.constructor = ctor;
  }

  function Iterable(value) {
    return isIterable(value) ? value : Seq(value);
  }

  createClass(KeyedIterable, Iterable);
  function KeyedIterable(value) {
    return isKeyed(value) ? value : KeyedSeq(value);
  }

  createClass(IndexedIterable, Iterable);
  function IndexedIterable(value) {
    return isIndexed(value) ? value : IndexedSeq(value);
  }

  createClass(SetIterable, Iterable);
  function SetIterable(value) {
    return isIterable(value) && !isAssociative(value) ? value : SetSeq(value);
  }

  function isIterable(maybeIterable) {
    return !!(maybeIterable && maybeIterable[IS_ITERABLE_SENTINEL]);
  }

  function isKeyed(maybeKeyed) {
    return !!(maybeKeyed && maybeKeyed[IS_KEYED_SENTINEL]);
  }

  function isIndexed(maybeIndexed) {
    return !!(maybeIndexed && maybeIndexed[IS_INDEXED_SENTINEL]);
  }

  function isAssociative(maybeAssociative) {
    return isKeyed(maybeAssociative) || isIndexed(maybeAssociative);
  }

  function isOrdered(maybeOrdered) {
    return !!(maybeOrdered && maybeOrdered[IS_ORDERED_SENTINEL]);
  }

  Iterable.isIterable = isIterable;
  Iterable.isKeyed = isKeyed;
  Iterable.isIndexed = isIndexed;
  Iterable.isAssociative = isAssociative;
  Iterable.isOrdered = isOrdered;

  Iterable.Keyed = KeyedIterable;
  Iterable.Indexed = IndexedIterable;
  Iterable.Set = SetIterable;

  var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';
  var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';
  var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';
  var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';

  var DELETE = 'delete';

  var SHIFT = 5;
  var SIZE = 1 << SHIFT;
  var MASK = SIZE - 1;

  var NOT_SET = {};

  var CHANGE_LENGTH = { value: false };
  var DID_ALTER = { value: false };

  function MakeRef(ref) {
    ref.value = false;
    return ref;
  }

  function SetRef(ref) {
    ref && (ref.value = true);
  }

  function OwnerID() {}

  function arrCopy(arr, offset) {
    offset = offset || 0;
    var len = Math.max(0, arr.length - offset);
    var newArr = new Array(len);
    for (var ii = 0; ii < len; ii++) {
      newArr[ii] = arr[ii + offset];
    }
    return newArr;
  }

  function ensureSize(iter) {
    if (iter.size === undefined) {
      iter.size = iter.__iterate(returnTrue);
    }
    return iter.size;
  }

  function wrapIndex(iter, index) {
    if (typeof index !== 'number') {
      var uint32Index = index >>> 0;
      if ('' + uint32Index !== index || uint32Index === 4294967295) {
        return NaN;
      }
      index = uint32Index;
    }
    return index < 0 ? ensureSize(iter) + index : index;
  }

  function returnTrue() {
    return true;
  }

  function wholeSlice(begin, end, size) {
    return (begin === 0 || size !== undefined && begin <= -size) && (end === undefined || size !== undefined && end >= size);
  }

  function resolveBegin(begin, size) {
    return resolveIndex(begin, size, 0);
  }

  function resolveEnd(end, size) {
    return resolveIndex(end, size, size);
  }

  function resolveIndex(index, size, defaultIndex) {
    return index === undefined ? defaultIndex : index < 0 ? Math.max(0, size + index) : size === undefined ? index : Math.min(size, index);
  }

  var ITERATE_KEYS = 0;
  var ITERATE_VALUES = 1;
  var ITERATE_ENTRIES = 2;

  var REAL_ITERATOR_SYMBOL = typeof Symbol === 'function' && (typeof Symbol === 'function' ? Symbol.iterator : '@@iterator');
  var FAUX_ITERATOR_SYMBOL = '@@iterator';

  var ITERATOR_SYMBOL = REAL_ITERATOR_SYMBOL || FAUX_ITERATOR_SYMBOL;

  function Iterator(next) {
    this.next = next;
  }

  Iterator.prototype.toString = function () {
    return '[Iterator]';
  };

  Iterator.KEYS = ITERATE_KEYS;
  Iterator.VALUES = ITERATE_VALUES;
  Iterator.ENTRIES = ITERATE_ENTRIES;

  Iterator.prototype.inspect = Iterator.prototype.toSource = function () {
    return this.toString();
  };
  Iterator.prototype[ITERATOR_SYMBOL] = function () {
    return this;
  };

  function iteratorValue(type, k, v, iteratorResult) {
    var value = type === 0 ? k : type === 1 ? v : [k, v];
    iteratorResult ? iteratorResult.value = value : iteratorResult = {
      value: value, done: false
    };
    return iteratorResult;
  }

  function iteratorDone() {
    return { value: undefined, done: true };
  }

  function hasIterator(maybeIterable) {
    return !!getIteratorFn(maybeIterable);
  }

  function isIterator(maybeIterator) {
    return maybeIterator && typeof maybeIterator.next === 'function';
  }

  function getIterator(iterable) {
    var iteratorFn = getIteratorFn(iterable);
    return iteratorFn && iteratorFn.call(iterable);
  }

  function getIteratorFn(iterable) {
    var iteratorFn = iterable && (REAL_ITERATOR_SYMBOL && iterable[REAL_ITERATOR_SYMBOL] || iterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  function isArrayLike(value) {
    return value && typeof value.length === 'number';
  }

  createClass(Seq, Iterable);
  function Seq(value) {
    return value === null || value === undefined ? emptySequence() : isIterable(value) ? value.toSeq() : seqFromValue(value);
  }

  Seq.of = function () {
    return Seq(arguments);
  };

  Seq.prototype.toSeq = function () {
    return this;
  };

  Seq.prototype.toString = function () {
    return this.__toString('Seq {', '}');
  };

  Seq.prototype.cacheResult = function () {
    if (!this._cache && this.__iterateUncached) {
      this._cache = this.entrySeq().toArray();
      this.size = this._cache.length;
    }
    return this;
  };

  Seq.prototype.__iterate = function (fn, reverse) {
    return seqIterate(this, fn, reverse, true);
  };

  Seq.prototype.__iterator = function (type, reverse) {
    return seqIterator(this, type, reverse, true);
  };

  createClass(KeyedSeq, Seq);
  function KeyedSeq(value) {
    return value === null || value === undefined ? emptySequence().toKeyedSeq() : isIterable(value) ? isKeyed(value) ? value.toSeq() : value.fromEntrySeq() : keyedSeqFromValue(value);
  }

  KeyedSeq.prototype.toKeyedSeq = function () {
    return this;
  };

  createClass(IndexedSeq, Seq);
  function IndexedSeq(value) {
    return value === null || value === undefined ? emptySequence() : !isIterable(value) ? indexedSeqFromValue(value) : isKeyed(value) ? value.entrySeq() : value.toIndexedSeq();
  }

  IndexedSeq.of = function () {
    return IndexedSeq(arguments);
  };

  IndexedSeq.prototype.toIndexedSeq = function () {
    return this;
  };

  IndexedSeq.prototype.toString = function () {
    return this.__toString('Seq [', ']');
  };

  IndexedSeq.prototype.__iterate = function (fn, reverse) {
    return seqIterate(this, fn, reverse, false);
  };

  IndexedSeq.prototype.__iterator = function (type, reverse) {
    return seqIterator(this, type, reverse, false);
  };

  createClass(SetSeq, Seq);
  function SetSeq(value) {
    return (value === null || value === undefined ? emptySequence() : !isIterable(value) ? indexedSeqFromValue(value) : isKeyed(value) ? value.entrySeq() : value).toSetSeq();
  }

  SetSeq.of = function () {
    return SetSeq(arguments);
  };

  SetSeq.prototype.toSetSeq = function () {
    return this;
  };

  Seq.isSeq = isSeq;
  Seq.Keyed = KeyedSeq;
  Seq.Set = SetSeq;
  Seq.Indexed = IndexedSeq;

  var IS_SEQ_SENTINEL = '@@__IMMUTABLE_SEQ__@@';

  Seq.prototype[IS_SEQ_SENTINEL] = true;

  createClass(ArraySeq, IndexedSeq);
  function ArraySeq(array) {
    this._array = array;
    this.size = array.length;
  }

  ArraySeq.prototype.get = function (index, notSetValue) {
    return this.has(index) ? this._array[wrapIndex(this, index)] : notSetValue;
  };

  ArraySeq.prototype.__iterate = function (fn, reverse) {
    var array = this._array;
    var maxIndex = array.length - 1;
    for (var ii = 0; ii <= maxIndex; ii++) {
      if (fn(array[reverse ? maxIndex - ii : ii], ii, this) === false) {
        return ii + 1;
      }
    }
    return ii;
  };

  ArraySeq.prototype.__iterator = function (type, reverse) {
    var array = this._array;
    var maxIndex = array.length - 1;
    var ii = 0;
    return new Iterator(function () {
      return ii > maxIndex ? iteratorDone() : iteratorValue(type, ii, array[reverse ? maxIndex - ii++ : ii++]);
    });
  };

  createClass(ObjectSeq, KeyedSeq);
  function ObjectSeq(object) {
    var keys = Object.keys(object);
    this._object = object;
    this._keys = keys;
    this.size = keys.length;
  }

  ObjectSeq.prototype.get = function (key, notSetValue) {
    if (notSetValue !== undefined && !this.has(key)) {
      return notSetValue;
    }
    return this._object[key];
  };

  ObjectSeq.prototype.has = function (key) {
    return this._object.hasOwnProperty(key);
  };

  ObjectSeq.prototype.__iterate = function (fn, reverse) {
    var object = this._object;
    var keys = this._keys;
    var maxIndex = keys.length - 1;
    for (var ii = 0; ii <= maxIndex; ii++) {
      var key = keys[reverse ? maxIndex - ii : ii];
      if (fn(object[key], key, this) === false) {
        return ii + 1;
      }
    }
    return ii;
  };

  ObjectSeq.prototype.__iterator = function (type, reverse) {
    var object = this._object;
    var keys = this._keys;
    var maxIndex = keys.length - 1;
    var ii = 0;
    return new Iterator(function () {
      var key = keys[reverse ? maxIndex - ii : ii];
      return ii++ > maxIndex ? iteratorDone() : iteratorValue(type, key, object[key]);
    });
  };

  ObjectSeq.prototype[IS_ORDERED_SENTINEL] = true;

  createClass(IterableSeq, IndexedSeq);
  function IterableSeq(iterable) {
    this._iterable = iterable;
    this.size = iterable.length || iterable.size;
  }

  IterableSeq.prototype.__iterateUncached = function (fn, reverse) {
    if (reverse) {
      return this.cacheResult().__iterate(fn, reverse);
    }
    var iterable = this._iterable;
    var iterator = getIterator(iterable);
    var iterations = 0;
    if (isIterator(iterator)) {
      var step;
      while (!(step = iterator.next()).done) {
        if (fn(step.value, iterations++, this) === false) {
          break;
        }
      }
    }
    return iterations;
  };

  IterableSeq.prototype.__iteratorUncached = function (type, reverse) {
    if (reverse) {
      return this.cacheResult().__iterator(type, reverse);
    }
    var iterable = this._iterable;
    var iterator = getIterator(iterable);
    if (!isIterator(iterator)) {
      return new Iterator(iteratorDone);
    }
    var iterations = 0;
    return new Iterator(function () {
      var step = iterator.next();
      return step.done ? step : iteratorValue(type, iterations++, step.value);
    });
  };

  createClass(IteratorSeq, IndexedSeq);
  function IteratorSeq(iterator) {
    this._iterator = iterator;
    this._iteratorCache = [];
  }

  IteratorSeq.prototype.__iterateUncached = function (fn, reverse) {
    if (reverse) {
      return this.cacheResult().__iterate(fn, reverse);
    }
    var iterator = this._iterator;
    var cache = this._iteratorCache;
    var iterations = 0;
    while (iterations < cache.length) {
      if (fn(cache[iterations], iterations++, this) === false) {
        return iterations;
      }
    }
    var step;
    while (!(step = iterator.next()).done) {
      var val = step.value;
      cache[iterations] = val;
      if (fn(val, iterations++, this) === false) {
        break;
      }
    }
    return iterations;
  };

  IteratorSeq.prototype.__iteratorUncached = function (type, reverse) {
    if (reverse) {
      return this.cacheResult().__iterator(type, reverse);
    }
    var iterator = this._iterator;
    var cache = this._iteratorCache;
    var iterations = 0;
    return new Iterator(function () {
      if (iterations >= cache.length) {
        var step = iterator.next();
        if (step.done) {
          return step;
        }
        cache[iterations] = step.value;
      }
      return iteratorValue(type, iterations, cache[iterations++]);
    });
  };

  function isSeq(maybeSeq) {
    return !!(maybeSeq && maybeSeq[IS_SEQ_SENTINEL]);
  }

  var EMPTY_SEQ;

  function emptySequence() {
    return EMPTY_SEQ || (EMPTY_SEQ = new ArraySeq([]));
  }

  function keyedSeqFromValue(value) {
    var seq = Array.isArray(value) ? new ArraySeq(value).fromEntrySeq() : isIterator(value) ? new IteratorSeq(value).fromEntrySeq() : hasIterator(value) ? new IterableSeq(value).fromEntrySeq() : typeof value === 'object' ? new ObjectSeq(value) : undefined;
    if (!seq) {
      throw new TypeError('Expected Array or iterable object of [k, v] entries, ' + 'or keyed object: ' + value);
    }
    return seq;
  }

  function indexedSeqFromValue(value) {
    var seq = maybeIndexedSeqFromValue(value);
    if (!seq) {
      throw new TypeError('Expected Array or iterable object of values: ' + value);
    }
    return seq;
  }

  function seqFromValue(value) {
    var seq = maybeIndexedSeqFromValue(value) || typeof value === 'object' && new ObjectSeq(value);
    if (!seq) {
      throw new TypeError('Expected Array or iterable object of values, or keyed object: ' + value);
    }
    return seq;
  }

  function maybeIndexedSeqFromValue(value) {
    return isArrayLike(value) ? new ArraySeq(value) : isIterator(value) ? new IteratorSeq(value) : hasIterator(value) ? new IterableSeq(value) : undefined;
  }

  function seqIterate(seq, fn, reverse, useKeys) {
    var cache = seq._cache;
    if (cache) {
      var maxIndex = cache.length - 1;
      for (var ii = 0; ii <= maxIndex; ii++) {
        var entry = cache[reverse ? maxIndex - ii : ii];
        if (fn(entry[1], useKeys ? entry[0] : ii, seq) === false) {
          return ii + 1;
        }
      }
      return ii;
    }
    return seq.__iterateUncached(fn, reverse);
  }

  function seqIterator(seq, type, reverse, useKeys) {
    var cache = seq._cache;
    if (cache) {
      var maxIndex = cache.length - 1;
      var ii = 0;
      return new Iterator(function () {
        var entry = cache[reverse ? maxIndex - ii : ii];
        return ii++ > maxIndex ? iteratorDone() : iteratorValue(type, useKeys ? entry[0] : ii - 1, entry[1]);
      });
    }
    return seq.__iteratorUncached(type, reverse);
  }

  function fromJS(json, converter) {
    return converter ? fromJSWith(converter, json, '', { '': json }) : fromJSDefault(json);
  }

  function fromJSWith(converter, json, key, parentJSON) {
    if (Array.isArray(json)) {
      return converter.call(parentJSON, key, IndexedSeq(json).map(function (v, k) {
        return fromJSWith(converter, v, k, json);
      }));
    }
    if (isPlainObj(json)) {
      return converter.call(parentJSON, key, KeyedSeq(json).map(function (v, k) {
        return fromJSWith(converter, v, k, json);
      }));
    }
    return json;
  }

  function fromJSDefault(json) {
    if (Array.isArray(json)) {
      return IndexedSeq(json).map(fromJSDefault).toList();
    }
    if (isPlainObj(json)) {
      return KeyedSeq(json).map(fromJSDefault).toMap();
    }
    return json;
  }

  function isPlainObj(value) {
    return value && (value.constructor === Object || value.constructor === undefined);
  }

  function is(valueA, valueB) {
    if (valueA === valueB || valueA !== valueA && valueB !== valueB) {
      return true;
    }
    if (!valueA || !valueB) {
      return false;
    }
    if (typeof valueA.valueOf === 'function' && typeof valueB.valueOf === 'function') {
      valueA = valueA.valueOf();
      valueB = valueB.valueOf();
      if (valueA === valueB || valueA !== valueA && valueB !== valueB) {
        return true;
      }
      if (!valueA || !valueB) {
        return false;
      }
    }
    if (typeof valueA.equals === 'function' && typeof valueB.equals === 'function' && valueA.equals(valueB)) {
      return true;
    }
    return false;
  }

  function deepEqual(a, b) {
    if (a === b) {
      return true;
    }

    if (!isIterable(b) || a.size !== undefined && b.size !== undefined && a.size !== b.size || a.__hash !== undefined && b.__hash !== undefined && a.__hash !== b.__hash || isKeyed(a) !== isKeyed(b) || isIndexed(a) !== isIndexed(b) || isOrdered(a) !== isOrdered(b)) {
      return false;
    }

    if (a.size === 0 && b.size === 0) {
      return true;
    }

    var notAssociative = !isAssociative(a);

    if (isOrdered(a)) {
      var entries = a.entries();
      return b.every(function (v, k) {
        var entry = entries.next().value;
        return entry && is(entry[1], v) && (notAssociative || is(entry[0], k));
      }) && entries.next().done;
    }

    var flipped = false;

    if (a.size === undefined) {
      if (b.size === undefined) {
        if (typeof a.cacheResult === 'function') {
          a.cacheResult();
        }
      } else {
        flipped = true;
        var _ = a;
        a = b;
        b = _;
      }
    }

    var allEqual = true;
    var bSize = b.__iterate(function (v, k) {
      if (notAssociative ? !a.has(v) : flipped ? !is(v, a.get(k, NOT_SET)) : !is(a.get(k, NOT_SET), v)) {
        allEqual = false;
        return false;
      }
    });

    return allEqual && a.size === bSize;
  }

  createClass(Repeat, IndexedSeq);

  function Repeat(value, times) {
    if (!(this instanceof Repeat)) {
      return new Repeat(value, times);
    }
    this._value = value;
    this.size = times === undefined ? Infinity : Math.max(0, times);
    if (this.size === 0) {
      if (EMPTY_REPEAT) {
        return EMPTY_REPEAT;
      }
      EMPTY_REPEAT = this;
    }
  }

  Repeat.prototype.toString = function () {
    if (this.size === 0) {
      return 'Repeat []';
    }
    return 'Repeat [ ' + this._value + ' ' + this.size + ' times ]';
  };

  Repeat.prototype.get = function (index, notSetValue) {
    return this.has(index) ? this._value : notSetValue;
  };

  Repeat.prototype.includes = function (searchValue) {
    return is(this._value, searchValue);
  };

  Repeat.prototype.slice = function (begin, end) {
    var size = this.size;
    return wholeSlice(begin, end, size) ? this : new Repeat(this._value, resolveEnd(end, size) - resolveBegin(begin, size));
  };

  Repeat.prototype.reverse = function () {
    return this;
  };

  Repeat.prototype.indexOf = function (searchValue) {
    if (is(this._value, searchValue)) {
      return 0;
    }
    return -1;
  };

  Repeat.prototype.lastIndexOf = function (searchValue) {
    if (is(this._value, searchValue)) {
      return this.size;
    }
    return -1;
  };

  Repeat.prototype.__iterate = function (fn, reverse) {
    for (var ii = 0; ii < this.size; ii++) {
      if (fn(this._value, ii, this) === false) {
        return ii + 1;
      }
    }
    return ii;
  };

  Repeat.prototype.__iterator = function (type, reverse) {
    var this$0 = this;
    var ii = 0;
    return new Iterator(function () {
      return ii < this$0.size ? iteratorValue(type, ii++, this$0._value) : iteratorDone();
    });
  };

  Repeat.prototype.equals = function (other) {
    return other instanceof Repeat ? is(this._value, other._value) : deepEqual(other);
  };

  var EMPTY_REPEAT;

  function invariant(condition, error) {
    if (!condition) throw new Error(error);
  }

  createClass(Range, IndexedSeq);

  function Range(start, end, step) {
    if (!(this instanceof Range)) {
      return new Range(start, end, step);
    }
    invariant(step !== 0, 'Cannot step a Range by 0');
    start = start || 0;
    if (end === undefined) {
      end = Infinity;
    }
    step = step === undefined ? 1 : Math.abs(step);
    if (end < start) {
      step = -step;
    }
    this._start = start;
    this._end = end;
    this._step = step;
    this.size = Math.max(0, Math.ceil((end - start) / step - 1) + 1);
    if (this.size === 0) {
      if (EMPTY_RANGE) {
        return EMPTY_RANGE;
      }
      EMPTY_RANGE = this;
    }
  }

  Range.prototype.toString = function () {
    if (this.size === 0) {
      return 'Range []';
    }
    return 'Range [ ' + this._start + '...' + this._end + (this._step > 1 ? ' by ' + this._step : '') + ' ]';
  };

  Range.prototype.get = function (index, notSetValue) {
    return this.has(index) ? this._start + wrapIndex(this, index) * this._step : notSetValue;
  };

  Range.prototype.includes = function (searchValue) {
    var possibleIndex = (searchValue - this._start) / this._step;
    return possibleIndex >= 0 && possibleIndex < this.size && possibleIndex === Math.floor(possibleIndex);
  };

  Range.prototype.slice = function (begin, end) {
    if (wholeSlice(begin, end, this.size)) {
      return this;
    }
    begin = resolveBegin(begin, this.size);
    end = resolveEnd(end, this.size);
    if (end <= begin) {
      return new Range(0, 0);
    }
    return new Range(this.get(begin, this._end), this.get(end, this._end), this._step);
  };

  Range.prototype.indexOf = function (searchValue) {
    var offsetValue = searchValue - this._start;
    if (offsetValue % this._step === 0) {
      var index = offsetValue / this._step;
      if (index >= 0 && index < this.size) {
        return index;
      }
    }
    return -1;
  };

  Range.prototype.lastIndexOf = function (searchValue) {
    return this.indexOf(searchValue);
  };

  Range.prototype.__iterate = function (fn, reverse) {
    var maxIndex = this.size - 1;
    var step = this._step;
    var value = reverse ? this._start + maxIndex * step : this._start;
    for (var ii = 0; ii <= maxIndex; ii++) {
      if (fn(value, ii, this) === false) {
        return ii + 1;
      }
      value += reverse ? -step : step;
    }
    return ii;
  };

  Range.prototype.__iterator = function (type, reverse) {
    var maxIndex = this.size - 1;
    var step = this._step;
    var value = reverse ? this._start + maxIndex * step : this._start;
    var ii = 0;
    return new Iterator(function () {
      var v = value;
      value += reverse ? -step : step;
      return ii > maxIndex ? iteratorDone() : iteratorValue(type, ii++, v);
    });
  };

  Range.prototype.equals = function (other) {
    return other instanceof Range ? this._start === other._start && this._end === other._end && this._step === other._step : deepEqual(this, other);
  };

  var EMPTY_RANGE;

  createClass(Collection, Iterable);
  function Collection() {
    throw TypeError('Abstract');
  }

  createClass(KeyedCollection, Collection);function KeyedCollection() {}

  createClass(IndexedCollection, Collection);function IndexedCollection() {}

  createClass(SetCollection, Collection);function SetCollection() {}

  Collection.Keyed = KeyedCollection;
  Collection.Indexed = IndexedCollection;
  Collection.Set = SetCollection;

  var imul = typeof Math.imul === 'function' && Math.imul(0xffffffff, 2) === -2 ? Math.imul : function imul(a, b) {
    a = a | 0;
    b = b | 0;
    var c = a & 0xffff;
    var d = b & 0xffff;

    return c * d + ((a >>> 16) * d + c * (b >>> 16) << 16 >>> 0) | 0;
  };

  function smi(i32) {
    return i32 >>> 1 & 0x40000000 | i32 & 0xBFFFFFFF;
  }

  function hash(o) {
    if (o === false || o === null || o === undefined) {
      return 0;
    }
    if (typeof o.valueOf === 'function') {
      o = o.valueOf();
      if (o === false || o === null || o === undefined) {
        return 0;
      }
    }
    if (o === true) {
      return 1;
    }
    var type = typeof o;
    if (type === 'number') {
      var h = o | 0;
      if (h !== o) {
        h ^= o * 0xFFFFFFFF;
      }
      while (o > 0xFFFFFFFF) {
        o /= 0xFFFFFFFF;
        h ^= o;
      }
      return smi(h);
    }
    if (type === 'string') {
      return o.length > STRING_HASH_CACHE_MIN_STRLEN ? cachedHashString(o) : hashString(o);
    }
    if (typeof o.hashCode === 'function') {
      return o.hashCode();
    }
    if (type === 'object') {
      return hashJSObj(o);
    }
    if (typeof o.toString === 'function') {
      return hashString(o.toString());
    }
    throw new Error('Value type ' + type + ' cannot be hashed.');
  }

  function cachedHashString(string) {
    var hash = stringHashCache[string];
    if (hash === undefined) {
      hash = hashString(string);
      if (STRING_HASH_CACHE_SIZE === STRING_HASH_CACHE_MAX_SIZE) {
        STRING_HASH_CACHE_SIZE = 0;
        stringHashCache = {};
      }
      STRING_HASH_CACHE_SIZE++;
      stringHashCache[string] = hash;
    }
    return hash;
  }

  function hashString(string) {
    var hash = 0;
    for (var ii = 0; ii < string.length; ii++) {
      hash = 31 * hash + string.charCodeAt(ii) | 0;
    }
    return smi(hash);
  }

  function hashJSObj(obj) {
    var hash;
    if (usingWeakMap) {
      hash = weakMap.get(obj);
      if (hash !== undefined) {
        return hash;
      }
    }

    hash = obj[UID_HASH_KEY];
    if (hash !== undefined) {
      return hash;
    }

    if (!canDefineProperty) {
      hash = obj.propertyIsEnumerable && obj.propertyIsEnumerable[UID_HASH_KEY];
      if (hash !== undefined) {
        return hash;
      }

      hash = getIENodeHash(obj);
      if (hash !== undefined) {
        return hash;
      }
    }

    hash = ++objHashUID;
    if (objHashUID & 0x40000000) {
      objHashUID = 0;
    }

    if (usingWeakMap) {
      weakMap.set(obj, hash);
    } else if (isExtensible !== undefined && isExtensible(obj) === false) {
      throw new Error('Non-extensible objects are not allowed as keys.');
    } else if (canDefineProperty) {
      Object.defineProperty(obj, UID_HASH_KEY, {
        'enumerable': false,
        'configurable': false,
        'writable': false,
        'value': hash
      });
    } else if (obj.propertyIsEnumerable !== undefined && obj.propertyIsEnumerable === obj.constructor.prototype.propertyIsEnumerable) {
      obj.propertyIsEnumerable = function () {
        return this.constructor.prototype.propertyIsEnumerable.apply(this, arguments);
      };
      obj.propertyIsEnumerable[UID_HASH_KEY] = hash;
    } else if (obj.nodeType !== undefined) {
      obj[UID_HASH_KEY] = hash;
    } else {
      throw new Error('Unable to set a non-enumerable property on object.');
    }

    return hash;
  }

  var isExtensible = Object.isExtensible;

  var canDefineProperty = function () {
    try {
      Object.defineProperty({}, '@', {});
      return true;
    } catch (e) {
      return false;
    }
  }();

  function getIENodeHash(node) {
    if (node && node.nodeType > 0) {
      switch (node.nodeType) {
        case 1:
          return node.uniqueID;
        case 9:
          return node.documentElement && node.documentElement.uniqueID;
      }
    }
  }

  var usingWeakMap = typeof WeakMap === 'function';
  var weakMap;
  if (usingWeakMap) {
    weakMap = new WeakMap();
  }

  var objHashUID = 0;

  var UID_HASH_KEY = '__immutablehash__';
  if (typeof Symbol === 'function') {
    UID_HASH_KEY = Symbol(UID_HASH_KEY);
  }

  var STRING_HASH_CACHE_MIN_STRLEN = 16;
  var STRING_HASH_CACHE_MAX_SIZE = 255;
  var STRING_HASH_CACHE_SIZE = 0;
  var stringHashCache = {};

  function assertNotInfinite(size) {
    invariant(size !== Infinity, 'Cannot perform this action with an infinite size.');
  }

  createClass(Map, KeyedCollection);

  function Map(value) {
    return value === null || value === undefined ? emptyMap() : isMap(value) && !isOrdered(value) ? value : emptyMap().withMutations(function (map) {
      var iter = KeyedIterable(value);
      assertNotInfinite(iter.size);
      iter.forEach(function (v, k) {
        return map.set(k, v);
      });
    });
  }

  Map.prototype.toString = function () {
    return this.__toString('Map {', '}');
  };

  Map.prototype.get = function (k, notSetValue) {
    return this._root ? this._root.get(0, undefined, k, notSetValue) : notSetValue;
  };

  Map.prototype.set = function (k, v) {
    return updateMap(this, k, v);
  };

  Map.prototype.setIn = function (keyPath, v) {
    return this.updateIn(keyPath, NOT_SET, function () {
      return v;
    });
  };

  Map.prototype.remove = function (k) {
    return updateMap(this, k, NOT_SET);
  };

  Map.prototype.deleteIn = function (keyPath) {
    return this.updateIn(keyPath, function () {
      return NOT_SET;
    });
  };

  Map.prototype.update = function (k, notSetValue, updater) {
    return arguments.length === 1 ? k(this) : this.updateIn([k], notSetValue, updater);
  };

  Map.prototype.updateIn = function (keyPath, notSetValue, updater) {
    if (!updater) {
      updater = notSetValue;
      notSetValue = undefined;
    }
    var updatedValue = updateInDeepMap(this, forceIterator(keyPath), notSetValue, updater);
    return updatedValue === NOT_SET ? undefined : updatedValue;
  };

  Map.prototype.clear = function () {
    if (this.size === 0) {
      return this;
    }
    if (this.__ownerID) {
      this.size = 0;
      this._root = null;
      this.__hash = undefined;
      this.__altered = true;
      return this;
    }
    return emptyMap();
  };

  Map.prototype.merge = function () {
    return mergeIntoMapWith(this, undefined, arguments);
  };

  Map.prototype.mergeWith = function (merger) {
    var iters = SLICE$0.call(arguments, 1);
    return mergeIntoMapWith(this, merger, iters);
  };

  Map.prototype.mergeIn = function (keyPath) {
    var iters = SLICE$0.call(arguments, 1);
    return this.updateIn(keyPath, emptyMap(), function (m) {
      return typeof m.merge === 'function' ? m.merge.apply(m, iters) : iters[iters.length - 1];
    });
  };

  Map.prototype.mergeDeep = function () {
    return mergeIntoMapWith(this, deepMerger, arguments);
  };

  Map.prototype.mergeDeepWith = function (merger) {
    var iters = SLICE$0.call(arguments, 1);
    return mergeIntoMapWith(this, deepMergerWith(merger), iters);
  };

  Map.prototype.mergeDeepIn = function (keyPath) {
    var iters = SLICE$0.call(arguments, 1);
    return this.updateIn(keyPath, emptyMap(), function (m) {
      return typeof m.mergeDeep === 'function' ? m.mergeDeep.apply(m, iters) : iters[iters.length - 1];
    });
  };

  Map.prototype.sort = function (comparator) {
    return OrderedMap(sortFactory(this, comparator));
  };

  Map.prototype.sortBy = function (mapper, comparator) {
    return OrderedMap(sortFactory(this, comparator, mapper));
  };

  Map.prototype.withMutations = function (fn) {
    var mutable = this.asMutable();
    fn(mutable);
    return mutable.wasAltered() ? mutable.__ensureOwner(this.__ownerID) : this;
  };

  Map.prototype.asMutable = function () {
    return this.__ownerID ? this : this.__ensureOwner(new OwnerID());
  };

  Map.prototype.asImmutable = function () {
    return this.__ensureOwner();
  };

  Map.prototype.wasAltered = function () {
    return this.__altered;
  };

  Map.prototype.__iterator = function (type, reverse) {
    return new MapIterator(this, type, reverse);
  };

  Map.prototype.__iterate = function (fn, reverse) {
    var this$0 = this;
    var iterations = 0;
    this._root && this._root.iterate(function (entry) {
      iterations++;
      return fn(entry[1], entry[0], this$0);
    }, reverse);
    return iterations;
  };

  Map.prototype.__ensureOwner = function (ownerID) {
    if (ownerID === this.__ownerID) {
      return this;
    }
    if (!ownerID) {
      this.__ownerID = ownerID;
      this.__altered = false;
      return this;
    }
    return makeMap(this.size, this._root, ownerID, this.__hash);
  };

  function isMap(maybeMap) {
    return !!(maybeMap && maybeMap[IS_MAP_SENTINEL]);
  }

  Map.isMap = isMap;

  var IS_MAP_SENTINEL = '@@__IMMUTABLE_MAP__@@';

  var MapPrototype = Map.prototype;
  MapPrototype[IS_MAP_SENTINEL] = true;
  MapPrototype[DELETE] = MapPrototype.remove;
  MapPrototype.removeIn = MapPrototype.deleteIn;

  function ArrayMapNode(ownerID, entries) {
    this.ownerID = ownerID;
    this.entries = entries;
  }

  ArrayMapNode.prototype.get = function (shift, keyHash, key, notSetValue) {
    var entries = this.entries;
    for (var ii = 0, len = entries.length; ii < len; ii++) {
      if (is(key, entries[ii][0])) {
        return entries[ii][1];
      }
    }
    return notSetValue;
  };

  ArrayMapNode.prototype.update = function (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
    var removed = value === NOT_SET;

    var entries = this.entries;
    var idx = 0;
    for (var len = entries.length; idx < len; idx++) {
      if (is(key, entries[idx][0])) {
        break;
      }
    }
    var exists = idx < len;

    if (exists ? entries[idx][1] === value : removed) {
      return this;
    }

    SetRef(didAlter);
    (removed || !exists) && SetRef(didChangeSize);

    if (removed && entries.length === 1) {
      return;
    }

    if (!exists && !removed && entries.length >= MAX_ARRAY_MAP_SIZE) {
      return createNodes(ownerID, entries, key, value);
    }

    var isEditable = ownerID && ownerID === this.ownerID;
    var newEntries = isEditable ? entries : arrCopy(entries);

    if (exists) {
      if (removed) {
        idx === len - 1 ? newEntries.pop() : newEntries[idx] = newEntries.pop();
      } else {
        newEntries[idx] = [key, value];
      }
    } else {
      newEntries.push([key, value]);
    }

    if (isEditable) {
      this.entries = newEntries;
      return this;
    }

    return new ArrayMapNode(ownerID, newEntries);
  };

  function BitmapIndexedNode(ownerID, bitmap, nodes) {
    this.ownerID = ownerID;
    this.bitmap = bitmap;
    this.nodes = nodes;
  }

  BitmapIndexedNode.prototype.get = function (shift, keyHash, key, notSetValue) {
    if (keyHash === undefined) {
      keyHash = hash(key);
    }
    var bit = 1 << ((shift === 0 ? keyHash : keyHash >>> shift) & MASK);
    var bitmap = this.bitmap;
    return (bitmap & bit) === 0 ? notSetValue : this.nodes[popCount(bitmap & bit - 1)].get(shift + SHIFT, keyHash, key, notSetValue);
  };

  BitmapIndexedNode.prototype.update = function (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
    if (keyHash === undefined) {
      keyHash = hash(key);
    }
    var keyHashFrag = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;
    var bit = 1 << keyHashFrag;
    var bitmap = this.bitmap;
    var exists = (bitmap & bit) !== 0;

    if (!exists && value === NOT_SET) {
      return this;
    }

    var idx = popCount(bitmap & bit - 1);
    var nodes = this.nodes;
    var node = exists ? nodes[idx] : undefined;
    var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);

    if (newNode === node) {
      return this;
    }

    if (!exists && newNode && nodes.length >= MAX_BITMAP_INDEXED_SIZE) {
      return expandNodes(ownerID, nodes, bitmap, keyHashFrag, newNode);
    }

    if (exists && !newNode && nodes.length === 2 && isLeafNode(nodes[idx ^ 1])) {
      return nodes[idx ^ 1];
    }

    if (exists && newNode && nodes.length === 1 && isLeafNode(newNode)) {
      return newNode;
    }

    var isEditable = ownerID && ownerID === this.ownerID;
    var newBitmap = exists ? newNode ? bitmap : bitmap ^ bit : bitmap | bit;
    var newNodes = exists ? newNode ? setIn(nodes, idx, newNode, isEditable) : spliceOut(nodes, idx, isEditable) : spliceIn(nodes, idx, newNode, isEditable);

    if (isEditable) {
      this.bitmap = newBitmap;
      this.nodes = newNodes;
      return this;
    }

    return new BitmapIndexedNode(ownerID, newBitmap, newNodes);
  };

  function HashArrayMapNode(ownerID, count, nodes) {
    this.ownerID = ownerID;
    this.count = count;
    this.nodes = nodes;
  }

  HashArrayMapNode.prototype.get = function (shift, keyHash, key, notSetValue) {
    if (keyHash === undefined) {
      keyHash = hash(key);
    }
    var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;
    var node = this.nodes[idx];
    return node ? node.get(shift + SHIFT, keyHash, key, notSetValue) : notSetValue;
  };

  HashArrayMapNode.prototype.update = function (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
    if (keyHash === undefined) {
      keyHash = hash(key);
    }
    var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;
    var removed = value === NOT_SET;
    var nodes = this.nodes;
    var node = nodes[idx];

    if (removed && !node) {
      return this;
    }

    var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);
    if (newNode === node) {
      return this;
    }

    var newCount = this.count;
    if (!node) {
      newCount++;
    } else if (!newNode) {
      newCount--;
      if (newCount < MIN_HASH_ARRAY_MAP_SIZE) {
        return packNodes(ownerID, nodes, newCount, idx);
      }
    }

    var isEditable = ownerID && ownerID === this.ownerID;
    var newNodes = setIn(nodes, idx, newNode, isEditable);

    if (isEditable) {
      this.count = newCount;
      this.nodes = newNodes;
      return this;
    }

    return new HashArrayMapNode(ownerID, newCount, newNodes);
  };

  function HashCollisionNode(ownerID, keyHash, entries) {
    this.ownerID = ownerID;
    this.keyHash = keyHash;
    this.entries = entries;
  }

  HashCollisionNode.prototype.get = function (shift, keyHash, key, notSetValue) {
    var entries = this.entries;
    for (var ii = 0, len = entries.length; ii < len; ii++) {
      if (is(key, entries[ii][0])) {
        return entries[ii][1];
      }
    }
    return notSetValue;
  };

  HashCollisionNode.prototype.update = function (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
    if (keyHash === undefined) {
      keyHash = hash(key);
    }

    var removed = value === NOT_SET;

    if (keyHash !== this.keyHash) {
      if (removed) {
        return this;
      }
      SetRef(didAlter);
      SetRef(didChangeSize);
      return mergeIntoNode(this, ownerID, shift, keyHash, [key, value]);
    }

    var entries = this.entries;
    var idx = 0;
    for (var len = entries.length; idx < len; idx++) {
      if (is(key, entries[idx][0])) {
        break;
      }
    }
    var exists = idx < len;

    if (exists ? entries[idx][1] === value : removed) {
      return this;
    }

    SetRef(didAlter);
    (removed || !exists) && SetRef(didChangeSize);

    if (removed && len === 2) {
      return new ValueNode(ownerID, this.keyHash, entries[idx ^ 1]);
    }

    var isEditable = ownerID && ownerID === this.ownerID;
    var newEntries = isEditable ? entries : arrCopy(entries);

    if (exists) {
      if (removed) {
        idx === len - 1 ? newEntries.pop() : newEntries[idx] = newEntries.pop();
      } else {
        newEntries[idx] = [key, value];
      }
    } else {
      newEntries.push([key, value]);
    }

    if (isEditable) {
      this.entries = newEntries;
      return this;
    }

    return new HashCollisionNode(ownerID, this.keyHash, newEntries);
  };

  function ValueNode(ownerID, keyHash, entry) {
    this.ownerID = ownerID;
    this.keyHash = keyHash;
    this.entry = entry;
  }

  ValueNode.prototype.get = function (shift, keyHash, key, notSetValue) {
    return is(key, this.entry[0]) ? this.entry[1] : notSetValue;
  };

  ValueNode.prototype.update = function (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
    var removed = value === NOT_SET;
    var keyMatch = is(key, this.entry[0]);
    if (keyMatch ? value === this.entry[1] : removed) {
      return this;
    }

    SetRef(didAlter);

    if (removed) {
      SetRef(didChangeSize);
      return;
    }

    if (keyMatch) {
      if (ownerID && ownerID === this.ownerID) {
        this.entry[1] = value;
        return this;
      }
      return new ValueNode(ownerID, this.keyHash, [key, value]);
    }

    SetRef(didChangeSize);
    return mergeIntoNode(this, ownerID, shift, hash(key), [key, value]);
  };

  ArrayMapNode.prototype.iterate = HashCollisionNode.prototype.iterate = function (fn, reverse) {
    var entries = this.entries;
    for (var ii = 0, maxIndex = entries.length - 1; ii <= maxIndex; ii++) {
      if (fn(entries[reverse ? maxIndex - ii : ii]) === false) {
        return false;
      }
    }
  };

  BitmapIndexedNode.prototype.iterate = HashArrayMapNode.prototype.iterate = function (fn, reverse) {
    var nodes = this.nodes;
    for (var ii = 0, maxIndex = nodes.length - 1; ii <= maxIndex; ii++) {
      var node = nodes[reverse ? maxIndex - ii : ii];
      if (node && node.iterate(fn, reverse) === false) {
        return false;
      }
    }
  };

  ValueNode.prototype.iterate = function (fn, reverse) {
    return fn(this.entry);
  };

  createClass(MapIterator, Iterator);

  function MapIterator(map, type, reverse) {
    this._type = type;
    this._reverse = reverse;
    this._stack = map._root && mapIteratorFrame(map._root);
  }

  MapIterator.prototype.next = function () {
    var type = this._type;
    var stack = this._stack;
    while (stack) {
      var node = stack.node;
      var index = stack.index++;
      var maxIndex;
      if (node.entry) {
        if (index === 0) {
          return mapIteratorValue(type, node.entry);
        }
      } else if (node.entries) {
        maxIndex = node.entries.length - 1;
        if (index <= maxIndex) {
          return mapIteratorValue(type, node.entries[this._reverse ? maxIndex - index : index]);
        }
      } else {
        maxIndex = node.nodes.length - 1;
        if (index <= maxIndex) {
          var subNode = node.nodes[this._reverse ? maxIndex - index : index];
          if (subNode) {
            if (subNode.entry) {
              return mapIteratorValue(type, subNode.entry);
            }
            stack = this._stack = mapIteratorFrame(subNode, stack);
          }
          continue;
        }
      }
      stack = this._stack = this._stack.__prev;
    }
    return iteratorDone();
  };

  function mapIteratorValue(type, entry) {
    return iteratorValue(type, entry[0], entry[1]);
  }

  function mapIteratorFrame(node, prev) {
    return {
      node: node,
      index: 0,
      __prev: prev
    };
  }

  function makeMap(size, root, ownerID, hash) {
    var map = Object.create(MapPrototype);
    map.size = size;
    map._root = root;
    map.__ownerID = ownerID;
    map.__hash = hash;
    map.__altered = false;
    return map;
  }

  var EMPTY_MAP;
  function emptyMap() {
    return EMPTY_MAP || (EMPTY_MAP = makeMap(0));
  }

  function updateMap(map, k, v) {
    var newRoot;
    var newSize;
    if (!map._root) {
      if (v === NOT_SET) {
        return map;
      }
      newSize = 1;
      newRoot = new ArrayMapNode(map.__ownerID, [[k, v]]);
    } else {
      var didChangeSize = MakeRef(CHANGE_LENGTH);
      var didAlter = MakeRef(DID_ALTER);
      newRoot = updateNode(map._root, map.__ownerID, 0, undefined, k, v, didChangeSize, didAlter);
      if (!didAlter.value) {
        return map;
      }
      newSize = map.size + (didChangeSize.value ? v === NOT_SET ? -1 : 1 : 0);
    }
    if (map.__ownerID) {
      map.size = newSize;
      map._root = newRoot;
      map.__hash = undefined;
      map.__altered = true;
      return map;
    }
    return newRoot ? makeMap(newSize, newRoot) : emptyMap();
  }

  function updateNode(node, ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
    if (!node) {
      if (value === NOT_SET) {
        return node;
      }
      SetRef(didAlter);
      SetRef(didChangeSize);
      return new ValueNode(ownerID, keyHash, [key, value]);
    }
    return node.update(ownerID, shift, keyHash, key, value, didChangeSize, didAlter);
  }

  function isLeafNode(node) {
    return node.constructor === ValueNode || node.constructor === HashCollisionNode;
  }

  function mergeIntoNode(node, ownerID, shift, keyHash, entry) {
    if (node.keyHash === keyHash) {
      return new HashCollisionNode(ownerID, keyHash, [node.entry, entry]);
    }

    var idx1 = (shift === 0 ? node.keyHash : node.keyHash >>> shift) & MASK;
    var idx2 = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;

    var newNode;
    var nodes = idx1 === idx2 ? [mergeIntoNode(node, ownerID, shift + SHIFT, keyHash, entry)] : (newNode = new ValueNode(ownerID, keyHash, entry), idx1 < idx2 ? [node, newNode] : [newNode, node]);

    return new BitmapIndexedNode(ownerID, 1 << idx1 | 1 << idx2, nodes);
  }

  function createNodes(ownerID, entries, key, value) {
    if (!ownerID) {
      ownerID = new OwnerID();
    }
    var node = new ValueNode(ownerID, hash(key), [key, value]);
    for (var ii = 0; ii < entries.length; ii++) {
      var entry = entries[ii];
      node = node.update(ownerID, 0, undefined, entry[0], entry[1]);
    }
    return node;
  }

  function packNodes(ownerID, nodes, count, excluding) {
    var bitmap = 0;
    var packedII = 0;
    var packedNodes = new Array(count);
    for (var ii = 0, bit = 1, len = nodes.length; ii < len; ii++, bit <<= 1) {
      var node = nodes[ii];
      if (node !== undefined && ii !== excluding) {
        bitmap |= bit;
        packedNodes[packedII++] = node;
      }
    }
    return new BitmapIndexedNode(ownerID, bitmap, packedNodes);
  }

  function expandNodes(ownerID, nodes, bitmap, including, node) {
    var count = 0;
    var expandedNodes = new Array(SIZE);
    for (var ii = 0; bitmap !== 0; ii++, bitmap >>>= 1) {
      expandedNodes[ii] = bitmap & 1 ? nodes[count++] : undefined;
    }
    expandedNodes[including] = node;
    return new HashArrayMapNode(ownerID, count + 1, expandedNodes);
  }

  function mergeIntoMapWith(map, merger, iterables) {
    var iters = [];
    for (var ii = 0; ii < iterables.length; ii++) {
      var value = iterables[ii];
      var iter = KeyedIterable(value);
      if (!isIterable(value)) {
        iter = iter.map(function (v) {
          return fromJS(v);
        });
      }
      iters.push(iter);
    }
    return mergeIntoCollectionWith(map, merger, iters);
  }

  function deepMerger(existing, value, key) {
    return existing && existing.mergeDeep && isIterable(value) ? existing.mergeDeep(value) : is(existing, value) ? existing : value;
  }

  function deepMergerWith(merger) {
    return function (existing, value, key) {
      if (existing && existing.mergeDeepWith && isIterable(value)) {
        return existing.mergeDeepWith(merger, value);
      }
      var nextValue = merger(existing, value, key);
      return is(existing, nextValue) ? existing : nextValue;
    };
  }

  function mergeIntoCollectionWith(collection, merger, iters) {
    iters = iters.filter(function (x) {
      return x.size !== 0;
    });
    if (iters.length === 0) {
      return collection;
    }
    if (collection.size === 0 && !collection.__ownerID && iters.length === 1) {
      return collection.constructor(iters[0]);
    }
    return collection.withMutations(function (collection) {
      var mergeIntoMap = merger ? function (value, key) {
        collection.update(key, NOT_SET, function (existing) {
          return existing === NOT_SET ? value : merger(existing, value, key);
        });
      } : function (value, key) {
        collection.set(key, value);
      };
      for (var ii = 0; ii < iters.length; ii++) {
        iters[ii].forEach(mergeIntoMap);
      }
    });
  }

  function updateInDeepMap(existing, keyPathIter, notSetValue, updater) {
    var isNotSet = existing === NOT_SET;
    var step = keyPathIter.next();
    if (step.done) {
      var existingValue = isNotSet ? notSetValue : existing;
      var newValue = updater(existingValue);
      return newValue === existingValue ? existing : newValue;
    }
    invariant(isNotSet || existing && existing.set, 'invalid keyPath');
    var key = step.value;
    var nextExisting = isNotSet ? NOT_SET : existing.get(key, NOT_SET);
    var nextUpdated = updateInDeepMap(nextExisting, keyPathIter, notSetValue, updater);
    return nextUpdated === nextExisting ? existing : nextUpdated === NOT_SET ? existing.remove(key) : (isNotSet ? emptyMap() : existing).set(key, nextUpdated);
  }

  function popCount(x) {
    x = x - (x >> 1 & 0x55555555);
    x = (x & 0x33333333) + (x >> 2 & 0x33333333);
    x = x + (x >> 4) & 0x0f0f0f0f;
    x = x + (x >> 8);
    x = x + (x >> 16);
    return x & 0x7f;
  }

  function setIn(array, idx, val, canEdit) {
    var newArray = canEdit ? array : arrCopy(array);
    newArray[idx] = val;
    return newArray;
  }

  function spliceIn(array, idx, val, canEdit) {
    var newLen = array.length + 1;
    if (canEdit && idx + 1 === newLen) {
      array[idx] = val;
      return array;
    }
    var newArray = new Array(newLen);
    var after = 0;
    for (var ii = 0; ii < newLen; ii++) {
      if (ii === idx) {
        newArray[ii] = val;
        after = -1;
      } else {
        newArray[ii] = array[ii + after];
      }
    }
    return newArray;
  }

  function spliceOut(array, idx, canEdit) {
    var newLen = array.length - 1;
    if (canEdit && idx === newLen) {
      array.pop();
      return array;
    }
    var newArray = new Array(newLen);
    var after = 0;
    for (var ii = 0; ii < newLen; ii++) {
      if (ii === idx) {
        after = 1;
      }
      newArray[ii] = array[ii + after];
    }
    return newArray;
  }

  var MAX_ARRAY_MAP_SIZE = SIZE / 4;
  var MAX_BITMAP_INDEXED_SIZE = SIZE / 2;
  var MIN_HASH_ARRAY_MAP_SIZE = SIZE / 4;

  createClass(List, IndexedCollection);

  function List(value) {
    var empty = emptyList();
    if (value === null || value === undefined) {
      return empty;
    }
    if (isList(value)) {
      return value;
    }
    var iter = IndexedIterable(value);
    var size = iter.size;
    if (size === 0) {
      return empty;
    }
    assertNotInfinite(size);
    if (size > 0 && size < SIZE) {
      return makeList(0, size, SHIFT, null, new VNode(iter.toArray()));
    }
    return empty.withMutations(function (list) {
      list.setSize(size);
      iter.forEach(function (v, i) {
        return list.set(i, v);
      });
    });
  }

  List.of = function () {
    return this(arguments);
  };

  List.prototype.toString = function () {
    return this.__toString('List [', ']');
  };

  List.prototype.get = function (index, notSetValue) {
    index = wrapIndex(this, index);
    if (index >= 0 && index < this.size) {
      index += this._origin;
      var node = listNodeFor(this, index);
      return node && node.array[index & MASK];
    }
    return notSetValue;
  };

  List.prototype.set = function (index, value) {
    return updateList(this, index, value);
  };

  List.prototype.remove = function (index) {
    return !this.has(index) ? this : index === 0 ? this.shift() : index === this.size - 1 ? this.pop() : this.splice(index, 1);
  };

  List.prototype.insert = function (index, value) {
    return this.splice(index, 0, value);
  };

  List.prototype.clear = function () {
    if (this.size === 0) {
      return this;
    }
    if (this.__ownerID) {
      this.size = this._origin = this._capacity = 0;
      this._level = SHIFT;
      this._root = this._tail = null;
      this.__hash = undefined;
      this.__altered = true;
      return this;
    }
    return emptyList();
  };

  List.prototype.push = function () {
    var values = arguments;
    var oldSize = this.size;
    return this.withMutations(function (list) {
      setListBounds(list, 0, oldSize + values.length);
      for (var ii = 0; ii < values.length; ii++) {
        list.set(oldSize + ii, values[ii]);
      }
    });
  };

  List.prototype.pop = function () {
    return setListBounds(this, 0, -1);
  };

  List.prototype.unshift = function () {
    var values = arguments;
    return this.withMutations(function (list) {
      setListBounds(list, -values.length);
      for (var ii = 0; ii < values.length; ii++) {
        list.set(ii, values[ii]);
      }
    });
  };

  List.prototype.shift = function () {
    return setListBounds(this, 1);
  };

  List.prototype.merge = function () {
    return mergeIntoListWith(this, undefined, arguments);
  };

  List.prototype.mergeWith = function (merger) {
    var iters = SLICE$0.call(arguments, 1);
    return mergeIntoListWith(this, merger, iters);
  };

  List.prototype.mergeDeep = function () {
    return mergeIntoListWith(this, deepMerger, arguments);
  };

  List.prototype.mergeDeepWith = function (merger) {
    var iters = SLICE$0.call(arguments, 1);
    return mergeIntoListWith(this, deepMergerWith(merger), iters);
  };

  List.prototype.setSize = function (size) {
    return setListBounds(this, 0, size);
  };

  List.prototype.slice = function (begin, end) {
    var size = this.size;
    if (wholeSlice(begin, end, size)) {
      return this;
    }
    return setListBounds(this, resolveBegin(begin, size), resolveEnd(end, size));
  };

  List.prototype.__iterator = function (type, reverse) {
    var index = 0;
    var values = iterateList(this, reverse);
    return new Iterator(function () {
      var value = values();
      return value === DONE ? iteratorDone() : iteratorValue(type, index++, value);
    });
  };

  List.prototype.__iterate = function (fn, reverse) {
    var index = 0;
    var values = iterateList(this, reverse);
    var value;
    while ((value = values()) !== DONE) {
      if (fn(value, index++, this) === false) {
        break;
      }
    }
    return index;
  };

  List.prototype.__ensureOwner = function (ownerID) {
    if (ownerID === this.__ownerID) {
      return this;
    }
    if (!ownerID) {
      this.__ownerID = ownerID;
      return this;
    }
    return makeList(this._origin, this._capacity, this._level, this._root, this._tail, ownerID, this.__hash);
  };

  function isList(maybeList) {
    return !!(maybeList && maybeList[IS_LIST_SENTINEL]);
  }

  List.isList = isList;

  var IS_LIST_SENTINEL = '@@__IMMUTABLE_LIST__@@';

  var ListPrototype = List.prototype;
  ListPrototype[IS_LIST_SENTINEL] = true;
  ListPrototype[DELETE] = ListPrototype.remove;
  ListPrototype.setIn = MapPrototype.setIn;
  ListPrototype.deleteIn = ListPrototype.removeIn = MapPrototype.removeIn;
  ListPrototype.update = MapPrototype.update;
  ListPrototype.updateIn = MapPrototype.updateIn;
  ListPrototype.mergeIn = MapPrototype.mergeIn;
  ListPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;
  ListPrototype.withMutations = MapPrototype.withMutations;
  ListPrototype.asMutable = MapPrototype.asMutable;
  ListPrototype.asImmutable = MapPrototype.asImmutable;
  ListPrototype.wasAltered = MapPrototype.wasAltered;

  function VNode(array, ownerID) {
    this.array = array;
    this.ownerID = ownerID;
  }

  VNode.prototype.removeBefore = function (ownerID, level, index) {
    if (index === level ? 1 << level : 0 || this.array.length === 0) {
      return this;
    }
    var originIndex = index >>> level & MASK;
    if (originIndex >= this.array.length) {
      return new VNode([], ownerID);
    }
    var removingFirst = originIndex === 0;
    var newChild;
    if (level > 0) {
      var oldChild = this.array[originIndex];
      newChild = oldChild && oldChild.removeBefore(ownerID, level - SHIFT, index);
      if (newChild === oldChild && removingFirst) {
        return this;
      }
    }
    if (removingFirst && !newChild) {
      return this;
    }
    var editable = editableVNode(this, ownerID);
    if (!removingFirst) {
      for (var ii = 0; ii < originIndex; ii++) {
        editable.array[ii] = undefined;
      }
    }
    if (newChild) {
      editable.array[originIndex] = newChild;
    }
    return editable;
  };

  VNode.prototype.removeAfter = function (ownerID, level, index) {
    if (index === (level ? 1 << level : 0) || this.array.length === 0) {
      return this;
    }
    var sizeIndex = index - 1 >>> level & MASK;
    if (sizeIndex >= this.array.length) {
      return this;
    }

    var newChild;
    if (level > 0) {
      var oldChild = this.array[sizeIndex];
      newChild = oldChild && oldChild.removeAfter(ownerID, level - SHIFT, index);
      if (newChild === oldChild && sizeIndex === this.array.length - 1) {
        return this;
      }
    }

    var editable = editableVNode(this, ownerID);
    editable.array.splice(sizeIndex + 1);
    if (newChild) {
      editable.array[sizeIndex] = newChild;
    }
    return editable;
  };

  var DONE = {};

  function iterateList(list, reverse) {
    var left = list._origin;
    var right = list._capacity;
    var tailPos = getTailOffset(right);
    var tail = list._tail;

    return iterateNodeOrLeaf(list._root, list._level, 0);

    function iterateNodeOrLeaf(node, level, offset) {
      return level === 0 ? iterateLeaf(node, offset) : iterateNode(node, level, offset);
    }

    function iterateLeaf(node, offset) {
      var array = offset === tailPos ? tail && tail.array : node && node.array;
      var from = offset > left ? 0 : left - offset;
      var to = right - offset;
      if (to > SIZE) {
        to = SIZE;
      }
      return function () {
        if (from === to) {
          return DONE;
        }
        var idx = reverse ? --to : from++;
        return array && array[idx];
      };
    }

    function iterateNode(node, level, offset) {
      var values;
      var array = node && node.array;
      var from = offset > left ? 0 : left - offset >> level;
      var to = (right - offset >> level) + 1;
      if (to > SIZE) {
        to = SIZE;
      }
      return function () {
        do {
          if (values) {
            var value = values();
            if (value !== DONE) {
              return value;
            }
            values = null;
          }
          if (from === to) {
            return DONE;
          }
          var idx = reverse ? --to : from++;
          values = iterateNodeOrLeaf(array && array[idx], level - SHIFT, offset + (idx << level));
        } while (true);
      };
    }
  }

  function makeList(origin, capacity, level, root, tail, ownerID, hash) {
    var list = Object.create(ListPrototype);
    list.size = capacity - origin;
    list._origin = origin;
    list._capacity = capacity;
    list._level = level;
    list._root = root;
    list._tail = tail;
    list.__ownerID = ownerID;
    list.__hash = hash;
    list.__altered = false;
    return list;
  }

  var EMPTY_LIST;
  function emptyList() {
    return EMPTY_LIST || (EMPTY_LIST = makeList(0, 0, SHIFT));
  }

  function updateList(list, index, value) {
    index = wrapIndex(list, index);

    if (index !== index) {
      return list;
    }

    if (index >= list.size || index < 0) {
      return list.withMutations(function (list) {
        index < 0 ? setListBounds(list, index).set(0, value) : setListBounds(list, 0, index + 1).set(index, value);
      });
    }

    index += list._origin;

    var newTail = list._tail;
    var newRoot = list._root;
    var didAlter = MakeRef(DID_ALTER);
    if (index >= getTailOffset(list._capacity)) {
      newTail = updateVNode(newTail, list.__ownerID, 0, index, value, didAlter);
    } else {
      newRoot = updateVNode(newRoot, list.__ownerID, list._level, index, value, didAlter);
    }

    if (!didAlter.value) {
      return list;
    }

    if (list.__ownerID) {
      list._root = newRoot;
      list._tail = newTail;
      list.__hash = undefined;
      list.__altered = true;
      return list;
    }
    return makeList(list._origin, list._capacity, list._level, newRoot, newTail);
  }

  function updateVNode(node, ownerID, level, index, value, didAlter) {
    var idx = index >>> level & MASK;
    var nodeHas = node && idx < node.array.length;
    if (!nodeHas && value === undefined) {
      return node;
    }

    var newNode;

    if (level > 0) {
      var lowerNode = node && node.array[idx];
      var newLowerNode = updateVNode(lowerNode, ownerID, level - SHIFT, index, value, didAlter);
      if (newLowerNode === lowerNode) {
        return node;
      }
      newNode = editableVNode(node, ownerID);
      newNode.array[idx] = newLowerNode;
      return newNode;
    }

    if (nodeHas && node.array[idx] === value) {
      return node;
    }

    SetRef(didAlter);

    newNode = editableVNode(node, ownerID);
    if (value === undefined && idx === newNode.array.length - 1) {
      newNode.array.pop();
    } else {
      newNode.array[idx] = value;
    }
    return newNode;
  }

  function editableVNode(node, ownerID) {
    if (ownerID && node && ownerID === node.ownerID) {
      return node;
    }
    return new VNode(node ? node.array.slice() : [], ownerID);
  }

  function listNodeFor(list, rawIndex) {
    if (rawIndex >= getTailOffset(list._capacity)) {
      return list._tail;
    }
    if (rawIndex < 1 << list._level + SHIFT) {
      var node = list._root;
      var level = list._level;
      while (node && level > 0) {
        node = node.array[rawIndex >>> level & MASK];
        level -= SHIFT;
      }
      return node;
    }
  }

  function setListBounds(list, begin, end) {
    if (begin !== undefined) {
      begin = begin | 0;
    }
    if (end !== undefined) {
      end = end | 0;
    }
    var owner = list.__ownerID || new OwnerID();
    var oldOrigin = list._origin;
    var oldCapacity = list._capacity;
    var newOrigin = oldOrigin + begin;
    var newCapacity = end === undefined ? oldCapacity : end < 0 ? oldCapacity + end : oldOrigin + end;
    if (newOrigin === oldOrigin && newCapacity === oldCapacity) {
      return list;
    }

    if (newOrigin >= newCapacity) {
      return list.clear();
    }

    var newLevel = list._level;
    var newRoot = list._root;

    var offsetShift = 0;
    while (newOrigin + offsetShift < 0) {
      newRoot = new VNode(newRoot && newRoot.array.length ? [undefined, newRoot] : [], owner);
      newLevel += SHIFT;
      offsetShift += 1 << newLevel;
    }
    if (offsetShift) {
      newOrigin += offsetShift;
      oldOrigin += offsetShift;
      newCapacity += offsetShift;
      oldCapacity += offsetShift;
    }

    var oldTailOffset = getTailOffset(oldCapacity);
    var newTailOffset = getTailOffset(newCapacity);

    while (newTailOffset >= 1 << newLevel + SHIFT) {
      newRoot = new VNode(newRoot && newRoot.array.length ? [newRoot] : [], owner);
      newLevel += SHIFT;
    }

    var oldTail = list._tail;
    var newTail = newTailOffset < oldTailOffset ? listNodeFor(list, newCapacity - 1) : newTailOffset > oldTailOffset ? new VNode([], owner) : oldTail;

    if (oldTail && newTailOffset > oldTailOffset && newOrigin < oldCapacity && oldTail.array.length) {
      newRoot = editableVNode(newRoot, owner);
      var node = newRoot;
      for (var level = newLevel; level > SHIFT; level -= SHIFT) {
        var idx = oldTailOffset >>> level & MASK;
        node = node.array[idx] = editableVNode(node.array[idx], owner);
      }
      node.array[oldTailOffset >>> SHIFT & MASK] = oldTail;
    }

    if (newCapacity < oldCapacity) {
      newTail = newTail && newTail.removeAfter(owner, 0, newCapacity);
    }

    if (newOrigin >= newTailOffset) {
      newOrigin -= newTailOffset;
      newCapacity -= newTailOffset;
      newLevel = SHIFT;
      newRoot = null;
      newTail = newTail && newTail.removeBefore(owner, 0, newOrigin);
    } else if (newOrigin > oldOrigin || newTailOffset < oldTailOffset) {
      offsetShift = 0;

      while (newRoot) {
        var beginIndex = newOrigin >>> newLevel & MASK;
        if (beginIndex !== newTailOffset >>> newLevel & MASK) {
          break;
        }
        if (beginIndex) {
          offsetShift += (1 << newLevel) * beginIndex;
        }
        newLevel -= SHIFT;
        newRoot = newRoot.array[beginIndex];
      }

      if (newRoot && newOrigin > oldOrigin) {
        newRoot = newRoot.removeBefore(owner, newLevel, newOrigin - offsetShift);
      }
      if (newRoot && newTailOffset < oldTailOffset) {
        newRoot = newRoot.removeAfter(owner, newLevel, newTailOffset - offsetShift);
      }
      if (offsetShift) {
        newOrigin -= offsetShift;
        newCapacity -= offsetShift;
      }
    }

    if (list.__ownerID) {
      list.size = newCapacity - newOrigin;
      list._origin = newOrigin;
      list._capacity = newCapacity;
      list._level = newLevel;
      list._root = newRoot;
      list._tail = newTail;
      list.__hash = undefined;
      list.__altered = true;
      return list;
    }
    return makeList(newOrigin, newCapacity, newLevel, newRoot, newTail);
  }

  function mergeIntoListWith(list, merger, iterables) {
    var iters = [];
    var maxSize = 0;
    for (var ii = 0; ii < iterables.length; ii++) {
      var value = iterables[ii];
      var iter = IndexedIterable(value);
      if (iter.size > maxSize) {
        maxSize = iter.size;
      }
      if (!isIterable(value)) {
        iter = iter.map(function (v) {
          return fromJS(v);
        });
      }
      iters.push(iter);
    }
    if (maxSize > list.size) {
      list = list.setSize(maxSize);
    }
    return mergeIntoCollectionWith(list, merger, iters);
  }

  function getTailOffset(size) {
    return size < SIZE ? 0 : size - 1 >>> SHIFT << SHIFT;
  }

  createClass(OrderedMap, Map);

  function OrderedMap(value) {
    return value === null || value === undefined ? emptyOrderedMap() : isOrderedMap(value) ? value : emptyOrderedMap().withMutations(function (map) {
      var iter = KeyedIterable(value);
      assertNotInfinite(iter.size);
      iter.forEach(function (v, k) {
        return map.set(k, v);
      });
    });
  }

  OrderedMap.of = function () {
    return this(arguments);
  };

  OrderedMap.prototype.toString = function () {
    return this.__toString('OrderedMap {', '}');
  };

  OrderedMap.prototype.get = function (k, notSetValue) {
    var index = this._map.get(k);
    return index !== undefined ? this._list.get(index)[1] : notSetValue;
  };

  OrderedMap.prototype.clear = function () {
    if (this.size === 0) {
      return this;
    }
    if (this.__ownerID) {
      this.size = 0;
      this._map.clear();
      this._list.clear();
      return this;
    }
    return emptyOrderedMap();
  };

  OrderedMap.prototype.set = function (k, v) {
    return updateOrderedMap(this, k, v);
  };

  OrderedMap.prototype.remove = function (k) {
    return updateOrderedMap(this, k, NOT_SET);
  };

  OrderedMap.prototype.wasAltered = function () {
    return this._map.wasAltered() || this._list.wasAltered();
  };

  OrderedMap.prototype.__iterate = function (fn, reverse) {
    var this$0 = this;
    return this._list.__iterate(function (entry) {
      return entry && fn(entry[1], entry[0], this$0);
    }, reverse);
  };

  OrderedMap.prototype.__iterator = function (type, reverse) {
    return this._list.fromEntrySeq().__iterator(type, reverse);
  };

  OrderedMap.prototype.__ensureOwner = function (ownerID) {
    if (ownerID === this.__ownerID) {
      return this;
    }
    var newMap = this._map.__ensureOwner(ownerID);
    var newList = this._list.__ensureOwner(ownerID);
    if (!ownerID) {
      this.__ownerID = ownerID;
      this._map = newMap;
      this._list = newList;
      return this;
    }
    return makeOrderedMap(newMap, newList, ownerID, this.__hash);
  };

  function isOrderedMap(maybeOrderedMap) {
    return isMap(maybeOrderedMap) && isOrdered(maybeOrderedMap);
  }

  OrderedMap.isOrderedMap = isOrderedMap;

  OrderedMap.prototype[IS_ORDERED_SENTINEL] = true;
  OrderedMap.prototype[DELETE] = OrderedMap.prototype.remove;

  function makeOrderedMap(map, list, ownerID, hash) {
    var omap = Object.create(OrderedMap.prototype);
    omap.size = map ? map.size : 0;
    omap._map = map;
    omap._list = list;
    omap.__ownerID = ownerID;
    omap.__hash = hash;
    return omap;
  }

  var EMPTY_ORDERED_MAP;
  function emptyOrderedMap() {
    return EMPTY_ORDERED_MAP || (EMPTY_ORDERED_MAP = makeOrderedMap(emptyMap(), emptyList()));
  }

  function updateOrderedMap(omap, k, v) {
    var map = omap._map;
    var list = omap._list;
    var i = map.get(k);
    var has = i !== undefined;
    var newMap;
    var newList;
    if (v === NOT_SET) {
      if (!has) {
        return omap;
      }
      if (list.size >= SIZE && list.size >= map.size * 2) {
        newList = list.filter(function (entry, idx) {
          return entry !== undefined && i !== idx;
        });
        newMap = newList.toKeyedSeq().map(function (entry) {
          return entry[0];
        }).flip().toMap();
        if (omap.__ownerID) {
          newMap.__ownerID = newList.__ownerID = omap.__ownerID;
        }
      } else {
        newMap = map.remove(k);
        newList = i === list.size - 1 ? list.pop() : list.set(i, undefined);
      }
    } else {
      if (has) {
        if (v === list.get(i)[1]) {
          return omap;
        }
        newMap = map;
        newList = list.set(i, [k, v]);
      } else {
        newMap = map.set(k, list.size);
        newList = list.set(list.size, [k, v]);
      }
    }
    if (omap.__ownerID) {
      omap.size = newMap.size;
      omap._map = newMap;
      omap._list = newList;
      omap.__hash = undefined;
      return omap;
    }
    return makeOrderedMap(newMap, newList);
  }

  createClass(ToKeyedSequence, KeyedSeq);
  function ToKeyedSequence(indexed, useKeys) {
    this._iter = indexed;
    this._useKeys = useKeys;
    this.size = indexed.size;
  }

  ToKeyedSequence.prototype.get = function (key, notSetValue) {
    return this._iter.get(key, notSetValue);
  };

  ToKeyedSequence.prototype.has = function (key) {
    return this._iter.has(key);
  };

  ToKeyedSequence.prototype.valueSeq = function () {
    return this._iter.valueSeq();
  };

  ToKeyedSequence.prototype.reverse = function () {
    var this$0 = this;
    var reversedSequence = reverseFactory(this, true);
    if (!this._useKeys) {
      reversedSequence.valueSeq = function () {
        return this$0._iter.toSeq().reverse();
      };
    }
    return reversedSequence;
  };

  ToKeyedSequence.prototype.map = function (mapper, context) {
    var this$0 = this;
    var mappedSequence = mapFactory(this, mapper, context);
    if (!this._useKeys) {
      mappedSequence.valueSeq = function () {
        return this$0._iter.toSeq().map(mapper, context);
      };
    }
    return mappedSequence;
  };

  ToKeyedSequence.prototype.__iterate = function (fn, reverse) {
    var this$0 = this;
    var ii;
    return this._iter.__iterate(this._useKeys ? function (v, k) {
      return fn(v, k, this$0);
    } : (ii = reverse ? resolveSize(this) : 0, function (v) {
      return fn(v, reverse ? --ii : ii++, this$0);
    }), reverse);
  };

  ToKeyedSequence.prototype.__iterator = function (type, reverse) {
    if (this._useKeys) {
      return this._iter.__iterator(type, reverse);
    }
    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
    var ii = reverse ? resolveSize(this) : 0;
    return new Iterator(function () {
      var step = iterator.next();
      return step.done ? step : iteratorValue(type, reverse ? --ii : ii++, step.value, step);
    });
  };

  ToKeyedSequence.prototype[IS_ORDERED_SENTINEL] = true;

  createClass(ToIndexedSequence, IndexedSeq);
  function ToIndexedSequence(iter) {
    this._iter = iter;
    this.size = iter.size;
  }

  ToIndexedSequence.prototype.includes = function (value) {
    return this._iter.includes(value);
  };

  ToIndexedSequence.prototype.__iterate = function (fn, reverse) {
    var this$0 = this;
    var iterations = 0;
    return this._iter.__iterate(function (v) {
      return fn(v, iterations++, this$0);
    }, reverse);
  };

  ToIndexedSequence.prototype.__iterator = function (type, reverse) {
    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
    var iterations = 0;
    return new Iterator(function () {
      var step = iterator.next();
      return step.done ? step : iteratorValue(type, iterations++, step.value, step);
    });
  };

  createClass(ToSetSequence, SetSeq);
  function ToSetSequence(iter) {
    this._iter = iter;
    this.size = iter.size;
  }

  ToSetSequence.prototype.has = function (key) {
    return this._iter.includes(key);
  };

  ToSetSequence.prototype.__iterate = function (fn, reverse) {
    var this$0 = this;
    return this._iter.__iterate(function (v) {
      return fn(v, v, this$0);
    }, reverse);
  };

  ToSetSequence.prototype.__iterator = function (type, reverse) {
    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
    return new Iterator(function () {
      var step = iterator.next();
      return step.done ? step : iteratorValue(type, step.value, step.value, step);
    });
  };

  createClass(FromEntriesSequence, KeyedSeq);
  function FromEntriesSequence(entries) {
    this._iter = entries;
    this.size = entries.size;
  }

  FromEntriesSequence.prototype.entrySeq = function () {
    return this._iter.toSeq();
  };

  FromEntriesSequence.prototype.__iterate = function (fn, reverse) {
    var this$0 = this;
    return this._iter.__iterate(function (entry) {
      if (entry) {
        validateEntry(entry);
        var indexedIterable = isIterable(entry);
        return fn(indexedIterable ? entry.get(1) : entry[1], indexedIterable ? entry.get(0) : entry[0], this$0);
      }
    }, reverse);
  };

  FromEntriesSequence.prototype.__iterator = function (type, reverse) {
    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
    return new Iterator(function () {
      while (true) {
        var step = iterator.next();
        if (step.done) {
          return step;
        }
        var entry = step.value;

        if (entry) {
          validateEntry(entry);
          var indexedIterable = isIterable(entry);
          return iteratorValue(type, indexedIterable ? entry.get(0) : entry[0], indexedIterable ? entry.get(1) : entry[1], step);
        }
      }
    });
  };

  ToIndexedSequence.prototype.cacheResult = ToKeyedSequence.prototype.cacheResult = ToSetSequence.prototype.cacheResult = FromEntriesSequence.prototype.cacheResult = cacheResultThrough;

  function flipFactory(iterable) {
    var flipSequence = makeSequence(iterable);
    flipSequence._iter = iterable;
    flipSequence.size = iterable.size;
    flipSequence.flip = function () {
      return iterable;
    };
    flipSequence.reverse = function () {
      var reversedSequence = iterable.reverse.apply(this);
      reversedSequence.flip = function () {
        return iterable.reverse();
      };
      return reversedSequence;
    };
    flipSequence.has = function (key) {
      return iterable.includes(key);
    };
    flipSequence.includes = function (key) {
      return iterable.has(key);
    };
    flipSequence.cacheResult = cacheResultThrough;
    flipSequence.__iterateUncached = function (fn, reverse) {
      var this$0 = this;
      return iterable.__iterate(function (v, k) {
        return fn(k, v, this$0) !== false;
      }, reverse);
    };
    flipSequence.__iteratorUncached = function (type, reverse) {
      if (type === ITERATE_ENTRIES) {
        var iterator = iterable.__iterator(type, reverse);
        return new Iterator(function () {
          var step = iterator.next();
          if (!step.done) {
            var k = step.value[0];
            step.value[0] = step.value[1];
            step.value[1] = k;
          }
          return step;
        });
      }
      return iterable.__iterator(type === ITERATE_VALUES ? ITERATE_KEYS : ITERATE_VALUES, reverse);
    };
    return flipSequence;
  }

  function mapFactory(iterable, mapper, context) {
    var mappedSequence = makeSequence(iterable);
    mappedSequence.size = iterable.size;
    mappedSequence.has = function (key) {
      return iterable.has(key);
    };
    mappedSequence.get = function (key, notSetValue) {
      var v = iterable.get(key, NOT_SET);
      return v === NOT_SET ? notSetValue : mapper.call(context, v, key, iterable);
    };
    mappedSequence.__iterateUncached = function (fn, reverse) {
      var this$0 = this;
      return iterable.__iterate(function (v, k, c) {
        return fn(mapper.call(context, v, k, c), k, this$0) !== false;
      }, reverse);
    };
    mappedSequence.__iteratorUncached = function (type, reverse) {
      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
      return new Iterator(function () {
        var step = iterator.next();
        if (step.done) {
          return step;
        }
        var entry = step.value;
        var key = entry[0];
        return iteratorValue(type, key, mapper.call(context, entry[1], key, iterable), step);
      });
    };
    return mappedSequence;
  }

  function reverseFactory(iterable, useKeys) {
    var reversedSequence = makeSequence(iterable);
    reversedSequence._iter = iterable;
    reversedSequence.size = iterable.size;
    reversedSequence.reverse = function () {
      return iterable;
    };
    if (iterable.flip) {
      reversedSequence.flip = function () {
        var flipSequence = flipFactory(iterable);
        flipSequence.reverse = function () {
          return iterable.flip();
        };
        return flipSequence;
      };
    }
    reversedSequence.get = function (key, notSetValue) {
      return iterable.get(useKeys ? key : -1 - key, notSetValue);
    };
    reversedSequence.has = function (key) {
      return iterable.has(useKeys ? key : -1 - key);
    };
    reversedSequence.includes = function (value) {
      return iterable.includes(value);
    };
    reversedSequence.cacheResult = cacheResultThrough;
    reversedSequence.__iterate = function (fn, reverse) {
      var this$0 = this;
      return iterable.__iterate(function (v, k) {
        return fn(v, k, this$0);
      }, !reverse);
    };
    reversedSequence.__iterator = function (type, reverse) {
      return iterable.__iterator(type, !reverse);
    };
    return reversedSequence;
  }

  function filterFactory(iterable, predicate, context, useKeys) {
    var filterSequence = makeSequence(iterable);
    if (useKeys) {
      filterSequence.has = function (key) {
        var v = iterable.get(key, NOT_SET);
        return v !== NOT_SET && !!predicate.call(context, v, key, iterable);
      };
      filterSequence.get = function (key, notSetValue) {
        var v = iterable.get(key, NOT_SET);
        return v !== NOT_SET && predicate.call(context, v, key, iterable) ? v : notSetValue;
      };
    }
    filterSequence.__iterateUncached = function (fn, reverse) {
      var this$0 = this;
      var iterations = 0;
      iterable.__iterate(function (v, k, c) {
        if (predicate.call(context, v, k, c)) {
          iterations++;
          return fn(v, useKeys ? k : iterations - 1, this$0);
        }
      }, reverse);
      return iterations;
    };
    filterSequence.__iteratorUncached = function (type, reverse) {
      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
      var iterations = 0;
      return new Iterator(function () {
        while (true) {
          var step = iterator.next();
          if (step.done) {
            return step;
          }
          var entry = step.value;
          var key = entry[0];
          var value = entry[1];
          if (predicate.call(context, value, key, iterable)) {
            return iteratorValue(type, useKeys ? key : iterations++, value, step);
          }
        }
      });
    };
    return filterSequence;
  }

  function countByFactory(iterable, grouper, context) {
    var groups = Map().asMutable();
    iterable.__iterate(function (v, k) {
      groups.update(grouper.call(context, v, k, iterable), 0, function (a) {
        return a + 1;
      });
    });
    return groups.asImmutable();
  }

  function groupByFactory(iterable, grouper, context) {
    var isKeyedIter = isKeyed(iterable);
    var groups = (isOrdered(iterable) ? OrderedMap() : Map()).asMutable();
    iterable.__iterate(function (v, k) {
      groups.update(grouper.call(context, v, k, iterable), function (a) {
        return a = a || [], a.push(isKeyedIter ? [k, v] : v), a;
      });
    });
    var coerce = iterableClass(iterable);
    return groups.map(function (arr) {
      return reify(iterable, coerce(arr));
    });
  }

  function sliceFactory(iterable, begin, end, useKeys) {
    var originalSize = iterable.size;

    if (begin !== undefined) {
      begin = begin | 0;
    }
    if (end !== undefined) {
      end = end | 0;
    }

    if (wholeSlice(begin, end, originalSize)) {
      return iterable;
    }

    var resolvedBegin = resolveBegin(begin, originalSize);
    var resolvedEnd = resolveEnd(end, originalSize);

    if (resolvedBegin !== resolvedBegin || resolvedEnd !== resolvedEnd) {
      return sliceFactory(iterable.toSeq().cacheResult(), begin, end, useKeys);
    }

    var resolvedSize = resolvedEnd - resolvedBegin;
    var sliceSize;
    if (resolvedSize === resolvedSize) {
      sliceSize = resolvedSize < 0 ? 0 : resolvedSize;
    }

    var sliceSeq = makeSequence(iterable);

    sliceSeq.size = sliceSize === 0 ? sliceSize : iterable.size && sliceSize || undefined;

    if (!useKeys && isSeq(iterable) && sliceSize >= 0) {
      sliceSeq.get = function (index, notSetValue) {
        index = wrapIndex(this, index);
        return index >= 0 && index < sliceSize ? iterable.get(index + resolvedBegin, notSetValue) : notSetValue;
      };
    }

    sliceSeq.__iterateUncached = function (fn, reverse) {
      var this$0 = this;
      if (sliceSize === 0) {
        return 0;
      }
      if (reverse) {
        return this.cacheResult().__iterate(fn, reverse);
      }
      var skipped = 0;
      var isSkipping = true;
      var iterations = 0;
      iterable.__iterate(function (v, k) {
        if (!(isSkipping && (isSkipping = skipped++ < resolvedBegin))) {
          iterations++;
          return fn(v, useKeys ? k : iterations - 1, this$0) !== false && iterations !== sliceSize;
        }
      });
      return iterations;
    };

    sliceSeq.__iteratorUncached = function (type, reverse) {
      if (sliceSize !== 0 && reverse) {
        return this.cacheResult().__iterator(type, reverse);
      }

      var iterator = sliceSize !== 0 && iterable.__iterator(type, reverse);
      var skipped = 0;
      var iterations = 0;
      return new Iterator(function () {
        while (skipped++ < resolvedBegin) {
          iterator.next();
        }
        if (++iterations > sliceSize) {
          return iteratorDone();
        }
        var step = iterator.next();
        if (useKeys || type === ITERATE_VALUES) {
          return step;
        } else if (type === ITERATE_KEYS) {
          return iteratorValue(type, iterations - 1, undefined, step);
        } else {
          return iteratorValue(type, iterations - 1, step.value[1], step);
        }
      });
    };

    return sliceSeq;
  }

  function takeWhileFactory(iterable, predicate, context) {
    var takeSequence = makeSequence(iterable);
    takeSequence.__iterateUncached = function (fn, reverse) {
      var this$0 = this;
      if (reverse) {
        return this.cacheResult().__iterate(fn, reverse);
      }
      var iterations = 0;
      iterable.__iterate(function (v, k, c) {
        return predicate.call(context, v, k, c) && ++iterations && fn(v, k, this$0);
      });
      return iterations;
    };
    takeSequence.__iteratorUncached = function (type, reverse) {
      var this$0 = this;
      if (reverse) {
        return this.cacheResult().__iterator(type, reverse);
      }
      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
      var iterating = true;
      return new Iterator(function () {
        if (!iterating) {
          return iteratorDone();
        }
        var step = iterator.next();
        if (step.done) {
          return step;
        }
        var entry = step.value;
        var k = entry[0];
        var v = entry[1];
        if (!predicate.call(context, v, k, this$0)) {
          iterating = false;
          return iteratorDone();
        }
        return type === ITERATE_ENTRIES ? step : iteratorValue(type, k, v, step);
      });
    };
    return takeSequence;
  }

  function skipWhileFactory(iterable, predicate, context, useKeys) {
    var skipSequence = makeSequence(iterable);
    skipSequence.__iterateUncached = function (fn, reverse) {
      var this$0 = this;
      if (reverse) {
        return this.cacheResult().__iterate(fn, reverse);
      }
      var isSkipping = true;
      var iterations = 0;
      iterable.__iterate(function (v, k, c) {
        if (!(isSkipping && (isSkipping = predicate.call(context, v, k, c)))) {
          iterations++;
          return fn(v, useKeys ? k : iterations - 1, this$0);
        }
      });
      return iterations;
    };
    skipSequence.__iteratorUncached = function (type, reverse) {
      var this$0 = this;
      if (reverse) {
        return this.cacheResult().__iterator(type, reverse);
      }
      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
      var skipping = true;
      var iterations = 0;
      return new Iterator(function () {
        var step, k, v;
        do {
          step = iterator.next();
          if (step.done) {
            if (useKeys || type === ITERATE_VALUES) {
              return step;
            } else if (type === ITERATE_KEYS) {
              return iteratorValue(type, iterations++, undefined, step);
            } else {
              return iteratorValue(type, iterations++, step.value[1], step);
            }
          }
          var entry = step.value;
          k = entry[0];
          v = entry[1];
          skipping && (skipping = predicate.call(context, v, k, this$0));
        } while (skipping);
        return type === ITERATE_ENTRIES ? step : iteratorValue(type, k, v, step);
      });
    };
    return skipSequence;
  }

  function concatFactory(iterable, values) {
    var isKeyedIterable = isKeyed(iterable);
    var iters = [iterable].concat(values).map(function (v) {
      if (!isIterable(v)) {
        v = isKeyedIterable ? keyedSeqFromValue(v) : indexedSeqFromValue(Array.isArray(v) ? v : [v]);
      } else if (isKeyedIterable) {
        v = KeyedIterable(v);
      }
      return v;
    }).filter(function (v) {
      return v.size !== 0;
    });

    if (iters.length === 0) {
      return iterable;
    }

    if (iters.length === 1) {
      var singleton = iters[0];
      if (singleton === iterable || isKeyedIterable && isKeyed(singleton) || isIndexed(iterable) && isIndexed(singleton)) {
        return singleton;
      }
    }

    var concatSeq = new ArraySeq(iters);
    if (isKeyedIterable) {
      concatSeq = concatSeq.toKeyedSeq();
    } else if (!isIndexed(iterable)) {
      concatSeq = concatSeq.toSetSeq();
    }
    concatSeq = concatSeq.flatten(true);
    concatSeq.size = iters.reduce(function (sum, seq) {
      if (sum !== undefined) {
        var size = seq.size;
        if (size !== undefined) {
          return sum + size;
        }
      }
    }, 0);
    return concatSeq;
  }

  function flattenFactory(iterable, depth, useKeys) {
    var flatSequence = makeSequence(iterable);
    flatSequence.__iterateUncached = function (fn, reverse) {
      var iterations = 0;
      var stopped = false;
      function flatDeep(iter, currentDepth) {
        var this$0 = this;
        iter.__iterate(function (v, k) {
          if ((!depth || currentDepth < depth) && isIterable(v)) {
            flatDeep(v, currentDepth + 1);
          } else if (fn(v, useKeys ? k : iterations++, this$0) === false) {
            stopped = true;
          }
          return !stopped;
        }, reverse);
      }
      flatDeep(iterable, 0);
      return iterations;
    };
    flatSequence.__iteratorUncached = function (type, reverse) {
      var iterator = iterable.__iterator(type, reverse);
      var stack = [];
      var iterations = 0;
      return new Iterator(function () {
        while (iterator) {
          var step = iterator.next();
          if (step.done !== false) {
            iterator = stack.pop();
            continue;
          }
          var v = step.value;
          if (type === ITERATE_ENTRIES) {
            v = v[1];
          }
          if ((!depth || stack.length < depth) && isIterable(v)) {
            stack.push(iterator);
            iterator = v.__iterator(type, reverse);
          } else {
            return useKeys ? step : iteratorValue(type, iterations++, v, step);
          }
        }
        return iteratorDone();
      });
    };
    return flatSequence;
  }

  function flatMapFactory(iterable, mapper, context) {
    var coerce = iterableClass(iterable);
    return iterable.toSeq().map(function (v, k) {
      return coerce(mapper.call(context, v, k, iterable));
    }).flatten(true);
  }

  function interposeFactory(iterable, separator) {
    var interposedSequence = makeSequence(iterable);
    interposedSequence.size = iterable.size && iterable.size * 2 - 1;
    interposedSequence.__iterateUncached = function (fn, reverse) {
      var this$0 = this;
      var iterations = 0;
      iterable.__iterate(function (v, k) {
        return (!iterations || fn(separator, iterations++, this$0) !== false) && fn(v, iterations++, this$0) !== false;
      }, reverse);
      return iterations;
    };
    interposedSequence.__iteratorUncached = function (type, reverse) {
      var iterator = iterable.__iterator(ITERATE_VALUES, reverse);
      var iterations = 0;
      var step;
      return new Iterator(function () {
        if (!step || iterations % 2) {
          step = iterator.next();
          if (step.done) {
            return step;
          }
        }
        return iterations % 2 ? iteratorValue(type, iterations++, separator) : iteratorValue(type, iterations++, step.value, step);
      });
    };
    return interposedSequence;
  }

  function sortFactory(iterable, comparator, mapper) {
    if (!comparator) {
      comparator = defaultComparator;
    }
    var isKeyedIterable = isKeyed(iterable);
    var index = 0;
    var entries = iterable.toSeq().map(function (v, k) {
      return [k, v, index++, mapper ? mapper(v, k, iterable) : v];
    }).toArray();
    entries.sort(function (a, b) {
      return comparator(a[3], b[3]) || a[2] - b[2];
    }).forEach(isKeyedIterable ? function (v, i) {
      entries[i].length = 2;
    } : function (v, i) {
      entries[i] = v[1];
    });
    return isKeyedIterable ? KeyedSeq(entries) : isIndexed(iterable) ? IndexedSeq(entries) : SetSeq(entries);
  }

  function maxFactory(iterable, comparator, mapper) {
    if (!comparator) {
      comparator = defaultComparator;
    }
    if (mapper) {
      var entry = iterable.toSeq().map(function (v, k) {
        return [v, mapper(v, k, iterable)];
      }).reduce(function (a, b) {
        return maxCompare(comparator, a[1], b[1]) ? b : a;
      });
      return entry && entry[0];
    } else {
      return iterable.reduce(function (a, b) {
        return maxCompare(comparator, a, b) ? b : a;
      });
    }
  }

  function maxCompare(comparator, a, b) {
    var comp = comparator(b, a);

    return comp === 0 && b !== a && (b === undefined || b === null || b !== b) || comp > 0;
  }

  function zipWithFactory(keyIter, zipper, iters) {
    var zipSequence = makeSequence(keyIter);
    zipSequence.size = new ArraySeq(iters).map(function (i) {
      return i.size;
    }).min();

    zipSequence.__iterate = function (fn, reverse) {
      var iterator = this.__iterator(ITERATE_VALUES, reverse);
      var step;
      var iterations = 0;
      while (!(step = iterator.next()).done) {
        if (fn(step.value, iterations++, this) === false) {
          break;
        }
      }
      return iterations;
    };
    zipSequence.__iteratorUncached = function (type, reverse) {
      var iterators = iters.map(function (i) {
        return i = Iterable(i), getIterator(reverse ? i.reverse() : i);
      });
      var iterations = 0;
      var isDone = false;
      return new Iterator(function () {
        var steps;
        if (!isDone) {
          steps = iterators.map(function (i) {
            return i.next();
          });
          isDone = steps.some(function (s) {
            return s.done;
          });
        }
        if (isDone) {
          return iteratorDone();
        }
        return iteratorValue(type, iterations++, zipper.apply(null, steps.map(function (s) {
          return s.value;
        })));
      });
    };
    return zipSequence;
  }

  function reify(iter, seq) {
    return isSeq(iter) ? seq : iter.constructor(seq);
  }

  function validateEntry(entry) {
    if (entry !== Object(entry)) {
      throw new TypeError('Expected [K, V] tuple: ' + entry);
    }
  }

  function resolveSize(iter) {
    assertNotInfinite(iter.size);
    return ensureSize(iter);
  }

  function iterableClass(iterable) {
    return isKeyed(iterable) ? KeyedIterable : isIndexed(iterable) ? IndexedIterable : SetIterable;
  }

  function makeSequence(iterable) {
    return Object.create((isKeyed(iterable) ? KeyedSeq : isIndexed(iterable) ? IndexedSeq : SetSeq).prototype);
  }

  function cacheResultThrough() {
    if (this._iter.cacheResult) {
      this._iter.cacheResult();
      this.size = this._iter.size;
      return this;
    } else {
      return Seq.prototype.cacheResult.call(this);
    }
  }

  function defaultComparator(a, b) {
    return a > b ? 1 : a < b ? -1 : 0;
  }

  function forceIterator(keyPath) {
    var iter = getIterator(keyPath);
    if (!iter) {
      if (!isArrayLike(keyPath)) {
        throw new TypeError('Expected iterable or array-like: ' + keyPath);
      }
      iter = getIterator(Iterable(keyPath));
    }
    return iter;
  }

  createClass(Record, KeyedCollection);

  function Record(defaultValues, name) {
    var hasInitialized;

    var RecordType = function Record(values) {
      if (values instanceof RecordType) {
        return values;
      }
      if (!(this instanceof RecordType)) {
        return new RecordType(values);
      }
      if (!hasInitialized) {
        hasInitialized = true;
        var keys = Object.keys(defaultValues);
        setProps(RecordTypePrototype, keys);
        RecordTypePrototype.size = keys.length;
        RecordTypePrototype._name = name;
        RecordTypePrototype._keys = keys;
        RecordTypePrototype._defaultValues = defaultValues;
      }
      this._map = Map(values);
    };

    var RecordTypePrototype = RecordType.prototype = Object.create(RecordPrototype);
    RecordTypePrototype.constructor = RecordType;

    return RecordType;
  }

  Record.prototype.toString = function () {
    return this.__toString(recordName(this) + ' {', '}');
  };

  Record.prototype.has = function (k) {
    return this._defaultValues.hasOwnProperty(k);
  };

  Record.prototype.get = function (k, notSetValue) {
    if (!this.has(k)) {
      return notSetValue;
    }
    var defaultVal = this._defaultValues[k];
    return this._map ? this._map.get(k, defaultVal) : defaultVal;
  };

  Record.prototype.clear = function () {
    if (this.__ownerID) {
      this._map && this._map.clear();
      return this;
    }
    var RecordType = this.constructor;
    return RecordType._empty || (RecordType._empty = makeRecord(this, emptyMap()));
  };

  Record.prototype.set = function (k, v) {
    if (!this.has(k)) {
      throw new Error('Cannot set unknown key "' + k + '" on ' + recordName(this));
    }
    var newMap = this._map && this._map.set(k, v);
    if (this.__ownerID || newMap === this._map) {
      return this;
    }
    return makeRecord(this, newMap);
  };

  Record.prototype.remove = function (k) {
    if (!this.has(k)) {
      return this;
    }
    var newMap = this._map && this._map.remove(k);
    if (this.__ownerID || newMap === this._map) {
      return this;
    }
    return makeRecord(this, newMap);
  };

  Record.prototype.wasAltered = function () {
    return this._map.wasAltered();
  };

  Record.prototype.__iterator = function (type, reverse) {
    var this$0 = this;
    return KeyedIterable(this._defaultValues).map(function (_, k) {
      return this$0.get(k);
    }).__iterator(type, reverse);
  };

  Record.prototype.__iterate = function (fn, reverse) {
    var this$0 = this;
    return KeyedIterable(this._defaultValues).map(function (_, k) {
      return this$0.get(k);
    }).__iterate(fn, reverse);
  };

  Record.prototype.__ensureOwner = function (ownerID) {
    if (ownerID === this.__ownerID) {
      return this;
    }
    var newMap = this._map && this._map.__ensureOwner(ownerID);
    if (!ownerID) {
      this.__ownerID = ownerID;
      this._map = newMap;
      return this;
    }
    return makeRecord(this, newMap, ownerID);
  };

  var RecordPrototype = Record.prototype;
  RecordPrototype[DELETE] = RecordPrototype.remove;
  RecordPrototype.deleteIn = RecordPrototype.removeIn = MapPrototype.removeIn;
  RecordPrototype.merge = MapPrototype.merge;
  RecordPrototype.mergeWith = MapPrototype.mergeWith;
  RecordPrototype.mergeIn = MapPrototype.mergeIn;
  RecordPrototype.mergeDeep = MapPrototype.mergeDeep;
  RecordPrototype.mergeDeepWith = MapPrototype.mergeDeepWith;
  RecordPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;
  RecordPrototype.setIn = MapPrototype.setIn;
  RecordPrototype.update = MapPrototype.update;
  RecordPrototype.updateIn = MapPrototype.updateIn;
  RecordPrototype.withMutations = MapPrototype.withMutations;
  RecordPrototype.asMutable = MapPrototype.asMutable;
  RecordPrototype.asImmutable = MapPrototype.asImmutable;

  function makeRecord(likeRecord, map, ownerID) {
    var record = Object.create(Object.getPrototypeOf(likeRecord));
    record._map = map;
    record.__ownerID = ownerID;
    return record;
  }

  function recordName(record) {
    return record._name || record.constructor.name || 'Record';
  }

  function setProps(prototype, names) {
    try {
      names.forEach(setProp.bind(undefined, prototype));
    } catch (error) {}
  }

  function setProp(prototype, name) {
    Object.defineProperty(prototype, name, {
      get: function get() {
        return this.get(name);
      },
      set: function set(value) {
        invariant(this.__ownerID, 'Cannot set on an immutable record.');
        this.set(name, value);
      }
    });
  }

  createClass(Set, SetCollection);

  function Set(value) {
    return value === null || value === undefined ? emptySet() : isSet(value) && !isOrdered(value) ? value : emptySet().withMutations(function (set) {
      var iter = SetIterable(value);
      assertNotInfinite(iter.size);
      iter.forEach(function (v) {
        return set.add(v);
      });
    });
  }

  Set.of = function () {
    return this(arguments);
  };

  Set.fromKeys = function (value) {
    return this(KeyedIterable(value).keySeq());
  };

  Set.prototype.toString = function () {
    return this.__toString('Set {', '}');
  };

  Set.prototype.has = function (value) {
    return this._map.has(value);
  };

  Set.prototype.add = function (value) {
    return updateSet(this, this._map.set(value, true));
  };

  Set.prototype.remove = function (value) {
    return updateSet(this, this._map.remove(value));
  };

  Set.prototype.clear = function () {
    return updateSet(this, this._map.clear());
  };

  Set.prototype.union = function () {
    var iters = SLICE$0.call(arguments, 0);
    iters = iters.filter(function (x) {
      return x.size !== 0;
    });
    if (iters.length === 0) {
      return this;
    }
    if (this.size === 0 && !this.__ownerID && iters.length === 1) {
      return this.constructor(iters[0]);
    }
    return this.withMutations(function (set) {
      for (var ii = 0; ii < iters.length; ii++) {
        SetIterable(iters[ii]).forEach(function (value) {
          return set.add(value);
        });
      }
    });
  };

  Set.prototype.intersect = function () {
    var iters = SLICE$0.call(arguments, 0);
    if (iters.length === 0) {
      return this;
    }
    iters = iters.map(function (iter) {
      return SetIterable(iter);
    });
    var originalSet = this;
    return this.withMutations(function (set) {
      originalSet.forEach(function (value) {
        if (!iters.every(function (iter) {
          return iter.includes(value);
        })) {
          set.remove(value);
        }
      });
    });
  };

  Set.prototype.subtract = function () {
    var iters = SLICE$0.call(arguments, 0);
    if (iters.length === 0) {
      return this;
    }
    iters = iters.map(function (iter) {
      return SetIterable(iter);
    });
    var originalSet = this;
    return this.withMutations(function (set) {
      originalSet.forEach(function (value) {
        if (iters.some(function (iter) {
          return iter.includes(value);
        })) {
          set.remove(value);
        }
      });
    });
  };

  Set.prototype.merge = function () {
    return this.union.apply(this, arguments);
  };

  Set.prototype.mergeWith = function (merger) {
    var iters = SLICE$0.call(arguments, 1);
    return this.union.apply(this, iters);
  };

  Set.prototype.sort = function (comparator) {
    return OrderedSet(sortFactory(this, comparator));
  };

  Set.prototype.sortBy = function (mapper, comparator) {
    return OrderedSet(sortFactory(this, comparator, mapper));
  };

  Set.prototype.wasAltered = function () {
    return this._map.wasAltered();
  };

  Set.prototype.__iterate = function (fn, reverse) {
    var this$0 = this;
    return this._map.__iterate(function (_, k) {
      return fn(k, k, this$0);
    }, reverse);
  };

  Set.prototype.__iterator = function (type, reverse) {
    return this._map.map(function (_, k) {
      return k;
    }).__iterator(type, reverse);
  };

  Set.prototype.__ensureOwner = function (ownerID) {
    if (ownerID === this.__ownerID) {
      return this;
    }
    var newMap = this._map.__ensureOwner(ownerID);
    if (!ownerID) {
      this.__ownerID = ownerID;
      this._map = newMap;
      return this;
    }
    return this.__make(newMap, ownerID);
  };

  function isSet(maybeSet) {
    return !!(maybeSet && maybeSet[IS_SET_SENTINEL]);
  }

  Set.isSet = isSet;

  var IS_SET_SENTINEL = '@@__IMMUTABLE_SET__@@';

  var SetPrototype = Set.prototype;
  SetPrototype[IS_SET_SENTINEL] = true;
  SetPrototype[DELETE] = SetPrototype.remove;
  SetPrototype.mergeDeep = SetPrototype.merge;
  SetPrototype.mergeDeepWith = SetPrototype.mergeWith;
  SetPrototype.withMutations = MapPrototype.withMutations;
  SetPrototype.asMutable = MapPrototype.asMutable;
  SetPrototype.asImmutable = MapPrototype.asImmutable;

  SetPrototype.__empty = emptySet;
  SetPrototype.__make = makeSet;

  function updateSet(set, newMap) {
    if (set.__ownerID) {
      set.size = newMap.size;
      set._map = newMap;
      return set;
    }
    return newMap === set._map ? set : newMap.size === 0 ? set.__empty() : set.__make(newMap);
  }

  function makeSet(map, ownerID) {
    var set = Object.create(SetPrototype);
    set.size = map ? map.size : 0;
    set._map = map;
    set.__ownerID = ownerID;
    return set;
  }

  var EMPTY_SET;
  function emptySet() {
    return EMPTY_SET || (EMPTY_SET = makeSet(emptyMap()));
  }

  createClass(OrderedSet, Set);

  function OrderedSet(value) {
    return value === null || value === undefined ? emptyOrderedSet() : isOrderedSet(value) ? value : emptyOrderedSet().withMutations(function (set) {
      var iter = SetIterable(value);
      assertNotInfinite(iter.size);
      iter.forEach(function (v) {
        return set.add(v);
      });
    });
  }

  OrderedSet.of = function () {
    return this(arguments);
  };

  OrderedSet.fromKeys = function (value) {
    return this(KeyedIterable(value).keySeq());
  };

  OrderedSet.prototype.toString = function () {
    return this.__toString('OrderedSet {', '}');
  };

  function isOrderedSet(maybeOrderedSet) {
    return isSet(maybeOrderedSet) && isOrdered(maybeOrderedSet);
  }

  OrderedSet.isOrderedSet = isOrderedSet;

  var OrderedSetPrototype = OrderedSet.prototype;
  OrderedSetPrototype[IS_ORDERED_SENTINEL] = true;

  OrderedSetPrototype.__empty = emptyOrderedSet;
  OrderedSetPrototype.__make = makeOrderedSet;

  function makeOrderedSet(map, ownerID) {
    var set = Object.create(OrderedSetPrototype);
    set.size = map ? map.size : 0;
    set._map = map;
    set.__ownerID = ownerID;
    return set;
  }

  var EMPTY_ORDERED_SET;
  function emptyOrderedSet() {
    return EMPTY_ORDERED_SET || (EMPTY_ORDERED_SET = makeOrderedSet(emptyOrderedMap()));
  }

  createClass(Stack, IndexedCollection);

  function Stack(value) {
    return value === null || value === undefined ? emptyStack() : isStack(value) ? value : emptyStack().unshiftAll(value);
  }

  Stack.of = function () {
    return this(arguments);
  };

  Stack.prototype.toString = function () {
    return this.__toString('Stack [', ']');
  };

  Stack.prototype.get = function (index, notSetValue) {
    var head = this._head;
    index = wrapIndex(this, index);
    while (head && index--) {
      head = head.next;
    }
    return head ? head.value : notSetValue;
  };

  Stack.prototype.peek = function () {
    return this._head && this._head.value;
  };

  Stack.prototype.push = function () {
    if (arguments.length === 0) {
      return this;
    }
    var newSize = this.size + arguments.length;
    var head = this._head;
    for (var ii = arguments.length - 1; ii >= 0; ii--) {
      head = {
        value: arguments[ii],
        next: head
      };
    }
    if (this.__ownerID) {
      this.size = newSize;
      this._head = head;
      this.__hash = undefined;
      this.__altered = true;
      return this;
    }
    return makeStack(newSize, head);
  };

  Stack.prototype.pushAll = function (iter) {
    iter = IndexedIterable(iter);
    if (iter.size === 0) {
      return this;
    }
    assertNotInfinite(iter.size);
    var newSize = this.size;
    var head = this._head;
    iter.reverse().forEach(function (value) {
      newSize++;
      head = {
        value: value,
        next: head
      };
    });
    if (this.__ownerID) {
      this.size = newSize;
      this._head = head;
      this.__hash = undefined;
      this.__altered = true;
      return this;
    }
    return makeStack(newSize, head);
  };

  Stack.prototype.pop = function () {
    return this.slice(1);
  };

  Stack.prototype.unshift = function () {
    return this.push.apply(this, arguments);
  };

  Stack.prototype.unshiftAll = function (iter) {
    return this.pushAll(iter);
  };

  Stack.prototype.shift = function () {
    return this.pop.apply(this, arguments);
  };

  Stack.prototype.clear = function () {
    if (this.size === 0) {
      return this;
    }
    if (this.__ownerID) {
      this.size = 0;
      this._head = undefined;
      this.__hash = undefined;
      this.__altered = true;
      return this;
    }
    return emptyStack();
  };

  Stack.prototype.slice = function (begin, end) {
    if (wholeSlice(begin, end, this.size)) {
      return this;
    }
    var resolvedBegin = resolveBegin(begin, this.size);
    var resolvedEnd = resolveEnd(end, this.size);
    if (resolvedEnd !== this.size) {
      return IndexedCollection.prototype.slice.call(this, begin, end);
    }
    var newSize = this.size - resolvedBegin;
    var head = this._head;
    while (resolvedBegin--) {
      head = head.next;
    }
    if (this.__ownerID) {
      this.size = newSize;
      this._head = head;
      this.__hash = undefined;
      this.__altered = true;
      return this;
    }
    return makeStack(newSize, head);
  };

  Stack.prototype.__ensureOwner = function (ownerID) {
    if (ownerID === this.__ownerID) {
      return this;
    }
    if (!ownerID) {
      this.__ownerID = ownerID;
      this.__altered = false;
      return this;
    }
    return makeStack(this.size, this._head, ownerID, this.__hash);
  };

  Stack.prototype.__iterate = function (fn, reverse) {
    if (reverse) {
      return this.reverse().__iterate(fn);
    }
    var iterations = 0;
    var node = this._head;
    while (node) {
      if (fn(node.value, iterations++, this) === false) {
        break;
      }
      node = node.next;
    }
    return iterations;
  };

  Stack.prototype.__iterator = function (type, reverse) {
    if (reverse) {
      return this.reverse().__iterator(type);
    }
    var iterations = 0;
    var node = this._head;
    return new Iterator(function () {
      if (node) {
        var value = node.value;
        node = node.next;
        return iteratorValue(type, iterations++, value);
      }
      return iteratorDone();
    });
  };

  function isStack(maybeStack) {
    return !!(maybeStack && maybeStack[IS_STACK_SENTINEL]);
  }

  Stack.isStack = isStack;

  var IS_STACK_SENTINEL = '@@__IMMUTABLE_STACK__@@';

  var StackPrototype = Stack.prototype;
  StackPrototype[IS_STACK_SENTINEL] = true;
  StackPrototype.withMutations = MapPrototype.withMutations;
  StackPrototype.asMutable = MapPrototype.asMutable;
  StackPrototype.asImmutable = MapPrototype.asImmutable;
  StackPrototype.wasAltered = MapPrototype.wasAltered;

  function makeStack(size, head, ownerID, hash) {
    var map = Object.create(StackPrototype);
    map.size = size;
    map._head = head;
    map.__ownerID = ownerID;
    map.__hash = hash;
    map.__altered = false;
    return map;
  }

  var EMPTY_STACK;
  function emptyStack() {
    return EMPTY_STACK || (EMPTY_STACK = makeStack(0));
  }

  function mixin(ctor, methods) {
    var keyCopier = function keyCopier(key) {
      ctor.prototype[key] = methods[key];
    };
    Object.keys(methods).forEach(keyCopier);
    Object.getOwnPropertySymbols && Object.getOwnPropertySymbols(methods).forEach(keyCopier);
    return ctor;
  }

  Iterable.Iterator = Iterator;

  mixin(Iterable, {

    toArray: function toArray() {
      assertNotInfinite(this.size);
      var array = new Array(this.size || 0);
      this.valueSeq().__iterate(function (v, i) {
        array[i] = v;
      });
      return array;
    },

    toIndexedSeq: function toIndexedSeq() {
      return new ToIndexedSequence(this);
    },

    toJS: function toJS() {
      return this.toSeq().map(function (value) {
        return value && typeof value.toJS === 'function' ? value.toJS() : value;
      }).__toJS();
    },

    toJSON: function toJSON() {
      return this.toSeq().map(function (value) {
        return value && typeof value.toJSON === 'function' ? value.toJSON() : value;
      }).__toJS();
    },

    toKeyedSeq: function toKeyedSeq() {
      return new ToKeyedSequence(this, true);
    },

    toMap: function toMap() {
      return Map(this.toKeyedSeq());
    },

    toObject: function toObject() {
      assertNotInfinite(this.size);
      var object = {};
      this.__iterate(function (v, k) {
        object[k] = v;
      });
      return object;
    },

    toOrderedMap: function toOrderedMap() {
      return OrderedMap(this.toKeyedSeq());
    },

    toOrderedSet: function toOrderedSet() {
      return OrderedSet(isKeyed(this) ? this.valueSeq() : this);
    },

    toSet: function toSet() {
      return Set(isKeyed(this) ? this.valueSeq() : this);
    },

    toSetSeq: function toSetSeq() {
      return new ToSetSequence(this);
    },

    toSeq: function toSeq() {
      return isIndexed(this) ? this.toIndexedSeq() : isKeyed(this) ? this.toKeyedSeq() : this.toSetSeq();
    },

    toStack: function toStack() {
      return Stack(isKeyed(this) ? this.valueSeq() : this);
    },

    toList: function toList() {
      return List(isKeyed(this) ? this.valueSeq() : this);
    },

    toString: function toString() {
      return '[Iterable]';
    },

    __toString: function __toString(head, tail) {
      if (this.size === 0) {
        return head + tail;
      }
      return head + ' ' + this.toSeq().map(this.__toStringMapper).join(', ') + ' ' + tail;
    },

    concat: function concat() {
      var values = SLICE$0.call(arguments, 0);
      return reify(this, concatFactory(this, values));
    },

    includes: function includes(searchValue) {
      return this.some(function (value) {
        return is(value, searchValue);
      });
    },

    entries: function entries() {
      return this.__iterator(ITERATE_ENTRIES);
    },

    every: function every(predicate, context) {
      assertNotInfinite(this.size);
      var returnValue = true;
      this.__iterate(function (v, k, c) {
        if (!predicate.call(context, v, k, c)) {
          returnValue = false;
          return false;
        }
      });
      return returnValue;
    },

    filter: function filter(predicate, context) {
      return reify(this, filterFactory(this, predicate, context, true));
    },

    find: function find(predicate, context, notSetValue) {
      var entry = this.findEntry(predicate, context);
      return entry ? entry[1] : notSetValue;
    },

    findEntry: function findEntry(predicate, context) {
      var found;
      this.__iterate(function (v, k, c) {
        if (predicate.call(context, v, k, c)) {
          found = [k, v];
          return false;
        }
      });
      return found;
    },

    findLastEntry: function findLastEntry(predicate, context) {
      return this.toSeq().reverse().findEntry(predicate, context);
    },

    forEach: function forEach(sideEffect, context) {
      assertNotInfinite(this.size);
      return this.__iterate(context ? sideEffect.bind(context) : sideEffect);
    },

    join: function join(separator) {
      assertNotInfinite(this.size);
      separator = separator !== undefined ? '' + separator : ',';
      var joined = '';
      var isFirst = true;
      this.__iterate(function (v) {
        isFirst ? isFirst = false : joined += separator;
        joined += v !== null && v !== undefined ? v.toString() : '';
      });
      return joined;
    },

    keys: function keys() {
      return this.__iterator(ITERATE_KEYS);
    },

    map: function map(mapper, context) {
      return reify(this, mapFactory(this, mapper, context));
    },

    reduce: function reduce(reducer, initialReduction, context) {
      assertNotInfinite(this.size);
      var reduction;
      var useFirst;
      if (arguments.length < 2) {
        useFirst = true;
      } else {
        reduction = initialReduction;
      }
      this.__iterate(function (v, k, c) {
        if (useFirst) {
          useFirst = false;
          reduction = v;
        } else {
          reduction = reducer.call(context, reduction, v, k, c);
        }
      });
      return reduction;
    },

    reduceRight: function reduceRight(reducer, initialReduction, context) {
      var reversed = this.toKeyedSeq().reverse();
      return reversed.reduce.apply(reversed, arguments);
    },

    reverse: function reverse() {
      return reify(this, reverseFactory(this, true));
    },

    slice: function slice(begin, end) {
      return reify(this, sliceFactory(this, begin, end, true));
    },

    some: function some(predicate, context) {
      return !this.every(not(predicate), context);
    },

    sort: function sort(comparator) {
      return reify(this, sortFactory(this, comparator));
    },

    values: function values() {
      return this.__iterator(ITERATE_VALUES);
    },

    butLast: function butLast() {
      return this.slice(0, -1);
    },

    isEmpty: function isEmpty() {
      return this.size !== undefined ? this.size === 0 : !this.some(function () {
        return true;
      });
    },

    count: function count(predicate, context) {
      return ensureSize(predicate ? this.toSeq().filter(predicate, context) : this);
    },

    countBy: function countBy(grouper, context) {
      return countByFactory(this, grouper, context);
    },

    equals: function equals(other) {
      return deepEqual(this, other);
    },

    entrySeq: function entrySeq() {
      var iterable = this;
      if (iterable._cache) {
        return new ArraySeq(iterable._cache);
      }
      var entriesSequence = iterable.toSeq().map(entryMapper).toIndexedSeq();
      entriesSequence.fromEntrySeq = function () {
        return iterable.toSeq();
      };
      return entriesSequence;
    },

    filterNot: function filterNot(predicate, context) {
      return this.filter(not(predicate), context);
    },

    findLast: function findLast(predicate, context, notSetValue) {
      return this.toKeyedSeq().reverse().find(predicate, context, notSetValue);
    },

    first: function first() {
      return this.find(returnTrue);
    },

    flatMap: function flatMap(mapper, context) {
      return reify(this, flatMapFactory(this, mapper, context));
    },

    flatten: function flatten(depth) {
      return reify(this, flattenFactory(this, depth, true));
    },

    fromEntrySeq: function fromEntrySeq() {
      return new FromEntriesSequence(this);
    },

    get: function get(searchKey, notSetValue) {
      return this.find(function (_, key) {
        return is(key, searchKey);
      }, undefined, notSetValue);
    },

    getIn: function getIn(searchKeyPath, notSetValue) {
      var nested = this;

      var iter = forceIterator(searchKeyPath);
      var step;
      while (!(step = iter.next()).done) {
        var key = step.value;
        nested = nested && nested.get ? nested.get(key, NOT_SET) : NOT_SET;
        if (nested === NOT_SET) {
          return notSetValue;
        }
      }
      return nested;
    },

    groupBy: function groupBy(grouper, context) {
      return groupByFactory(this, grouper, context);
    },

    has: function has(searchKey) {
      return this.get(searchKey, NOT_SET) !== NOT_SET;
    },

    hasIn: function hasIn(searchKeyPath) {
      return this.getIn(searchKeyPath, NOT_SET) !== NOT_SET;
    },

    isSubset: function isSubset(iter) {
      iter = typeof iter.includes === 'function' ? iter : Iterable(iter);
      return this.every(function (value) {
        return iter.includes(value);
      });
    },

    isSuperset: function isSuperset(iter) {
      iter = typeof iter.isSubset === 'function' ? iter : Iterable(iter);
      return iter.isSubset(this);
    },

    keySeq: function keySeq() {
      return this.toSeq().map(keyMapper).toIndexedSeq();
    },

    last: function last() {
      return this.toSeq().reverse().first();
    },

    max: function max(comparator) {
      return maxFactory(this, comparator);
    },

    maxBy: function maxBy(mapper, comparator) {
      return maxFactory(this, comparator, mapper);
    },

    min: function min(comparator) {
      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator);
    },

    minBy: function minBy(mapper, comparator) {
      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator, mapper);
    },

    rest: function rest() {
      return this.slice(1);
    },

    skip: function skip(amount) {
      return this.slice(Math.max(0, amount));
    },

    skipLast: function skipLast(amount) {
      return reify(this, this.toSeq().reverse().skip(amount).reverse());
    },

    skipWhile: function skipWhile(predicate, context) {
      return reify(this, skipWhileFactory(this, predicate, context, true));
    },

    skipUntil: function skipUntil(predicate, context) {
      return this.skipWhile(not(predicate), context);
    },

    sortBy: function sortBy(mapper, comparator) {
      return reify(this, sortFactory(this, comparator, mapper));
    },

    take: function take(amount) {
      return this.slice(0, Math.max(0, amount));
    },

    takeLast: function takeLast(amount) {
      return reify(this, this.toSeq().reverse().take(amount).reverse());
    },

    takeWhile: function takeWhile(predicate, context) {
      return reify(this, takeWhileFactory(this, predicate, context));
    },

    takeUntil: function takeUntil(predicate, context) {
      return this.takeWhile(not(predicate), context);
    },

    valueSeq: function valueSeq() {
      return this.toIndexedSeq();
    },

    hashCode: function hashCode() {
      return this.__hash || (this.__hash = hashIterable(this));
    }

  });

  var IterablePrototype = Iterable.prototype;
  IterablePrototype[IS_ITERABLE_SENTINEL] = true;
  IterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.values;
  IterablePrototype.__toJS = IterablePrototype.toArray;
  IterablePrototype.__toStringMapper = quoteString;
  IterablePrototype.inspect = IterablePrototype.toSource = function () {
    return this.toString();
  };
  IterablePrototype.chain = IterablePrototype.flatMap;
  IterablePrototype.contains = IterablePrototype.includes;

  (function () {
    try {
      Object.defineProperty(IterablePrototype, 'length', {
        get: function get() {
          if (!Iterable.noLengthWarning) {
            var stack;
            try {
              throw new Error();
            } catch (error) {
              stack = error.stack;
            }
            if (stack.indexOf('_wrapObject') === -1) {
              console && console.warn && console.warn('iterable.length has been deprecated, ' + 'use iterable.size or iterable.count(). ' + 'This warning will become a silent error in a future version. ' + stack);
              return this.size;
            }
          }
        }
      });
    } catch (e) {}
  })();

  mixin(KeyedIterable, {

    flip: function flip() {
      return reify(this, flipFactory(this));
    },

    findKey: function findKey(predicate, context) {
      var entry = this.findEntry(predicate, context);
      return entry && entry[0];
    },

    findLastKey: function findLastKey(predicate, context) {
      return this.toSeq().reverse().findKey(predicate, context);
    },

    keyOf: function keyOf(searchValue) {
      return this.findKey(function (value) {
        return is(value, searchValue);
      });
    },

    lastKeyOf: function lastKeyOf(searchValue) {
      return this.findLastKey(function (value) {
        return is(value, searchValue);
      });
    },

    mapEntries: function mapEntries(mapper, context) {
      var this$0 = this;
      var iterations = 0;
      return reify(this, this.toSeq().map(function (v, k) {
        return mapper.call(context, [k, v], iterations++, this$0);
      }).fromEntrySeq());
    },

    mapKeys: function mapKeys(mapper, context) {
      var this$0 = this;
      return reify(this, this.toSeq().flip().map(function (k, v) {
        return mapper.call(context, k, v, this$0);
      }).flip());
    }

  });

  var KeyedIterablePrototype = KeyedIterable.prototype;
  KeyedIterablePrototype[IS_KEYED_SENTINEL] = true;
  KeyedIterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.entries;
  KeyedIterablePrototype.__toJS = IterablePrototype.toObject;
  KeyedIterablePrototype.__toStringMapper = function (v, k) {
    return JSON.stringify(k) + ': ' + quoteString(v);
  };

  mixin(IndexedIterable, {

    toKeyedSeq: function toKeyedSeq() {
      return new ToKeyedSequence(this, false);
    },

    filter: function filter(predicate, context) {
      return reify(this, filterFactory(this, predicate, context, false));
    },

    findIndex: function findIndex(predicate, context) {
      var entry = this.findEntry(predicate, context);
      return entry ? entry[0] : -1;
    },

    indexOf: function indexOf(searchValue) {
      var key = this.toKeyedSeq().keyOf(searchValue);
      return key === undefined ? -1 : key;
    },

    lastIndexOf: function lastIndexOf(searchValue) {
      var key = this.toKeyedSeq().reverse().keyOf(searchValue);
      return key === undefined ? -1 : key;
    },

    reverse: function reverse() {
      return reify(this, reverseFactory(this, false));
    },

    slice: function slice(begin, end) {
      return reify(this, sliceFactory(this, begin, end, false));
    },

    splice: function splice(index, removeNum) {
      var numArgs = arguments.length;
      removeNum = Math.max(removeNum | 0, 0);
      if (numArgs === 0 || numArgs === 2 && !removeNum) {
        return this;
      }

      index = resolveBegin(index, index < 0 ? this.count() : this.size);
      var spliced = this.slice(0, index);
      return reify(this, numArgs === 1 ? spliced : spliced.concat(arrCopy(arguments, 2), this.slice(index + removeNum)));
    },

    findLastIndex: function findLastIndex(predicate, context) {
      var key = this.toKeyedSeq().findLastKey(predicate, context);
      return key === undefined ? -1 : key;
    },

    first: function first() {
      return this.get(0);
    },

    flatten: function flatten(depth) {
      return reify(this, flattenFactory(this, depth, false));
    },

    get: function get(index, notSetValue) {
      index = wrapIndex(this, index);
      return index < 0 || this.size === Infinity || this.size !== undefined && index > this.size ? notSetValue : this.find(function (_, key) {
        return key === index;
      }, undefined, notSetValue);
    },

    has: function has(index) {
      index = wrapIndex(this, index);
      return index >= 0 && (this.size !== undefined ? this.size === Infinity || index < this.size : this.indexOf(index) !== -1);
    },

    interpose: function interpose(separator) {
      return reify(this, interposeFactory(this, separator));
    },

    interleave: function interleave() {
      var iterables = [this].concat(arrCopy(arguments));
      var zipped = zipWithFactory(this.toSeq(), IndexedSeq.of, iterables);
      var interleaved = zipped.flatten(true);
      if (zipped.size) {
        interleaved.size = zipped.size * iterables.length;
      }
      return reify(this, interleaved);
    },

    last: function last() {
      return this.get(-1);
    },

    skipWhile: function skipWhile(predicate, context) {
      return reify(this, skipWhileFactory(this, predicate, context, false));
    },

    zip: function zip() {
      var iterables = [this].concat(arrCopy(arguments));
      return reify(this, zipWithFactory(this, defaultZipper, iterables));
    },

    zipWith: function zipWith(zipper) {
      var iterables = arrCopy(arguments);
      iterables[0] = this;
      return reify(this, zipWithFactory(this, zipper, iterables));
    }

  });

  IndexedIterable.prototype[IS_INDEXED_SENTINEL] = true;
  IndexedIterable.prototype[IS_ORDERED_SENTINEL] = true;

  mixin(SetIterable, {

    get: function get(value, notSetValue) {
      return this.has(value) ? value : notSetValue;
    },

    includes: function includes(value) {
      return this.has(value);
    },

    keySeq: function keySeq() {
      return this.valueSeq();
    }

  });

  SetIterable.prototype.has = IterablePrototype.includes;

  mixin(KeyedSeq, KeyedIterable.prototype);
  mixin(IndexedSeq, IndexedIterable.prototype);
  mixin(SetSeq, SetIterable.prototype);

  mixin(KeyedCollection, KeyedIterable.prototype);
  mixin(IndexedCollection, IndexedIterable.prototype);
  mixin(SetCollection, SetIterable.prototype);

  function keyMapper(v, k) {
    return k;
  }

  function entryMapper(v, k) {
    return [k, v];
  }

  function not(predicate) {
    return function () {
      return !predicate.apply(this, arguments);
    };
  }

  function neg(predicate) {
    return function () {
      return -predicate.apply(this, arguments);
    };
  }

  function quoteString(value) {
    return typeof value === 'string' ? JSON.stringify(value) : value;
  }

  function defaultZipper() {
    return arrCopy(arguments);
  }

  function defaultNegComparator(a, b) {
    return a < b ? 1 : a > b ? -1 : 0;
  }

  function hashIterable(iterable) {
    if (iterable.size === Infinity) {
      return 0;
    }
    var ordered = isOrdered(iterable);
    var keyed = isKeyed(iterable);
    var h = ordered ? 1 : 0;
    var size = iterable.__iterate(keyed ? ordered ? function (v, k) {
      h = 31 * h + hashMerge(hash(v), hash(k)) | 0;
    } : function (v, k) {
      h = h + hashMerge(hash(v), hash(k)) | 0;
    } : ordered ? function (v) {
      h = 31 * h + hash(v) | 0;
    } : function (v) {
      h = h + hash(v) | 0;
    });
    return murmurHashOfSize(size, h);
  }

  function murmurHashOfSize(size, h) {
    h = imul(h, 0xCC9E2D51);
    h = imul(h << 15 | h >>> -15, 0x1B873593);
    h = imul(h << 13 | h >>> -13, 5);
    h = (h + 0xE6546B64 | 0) ^ size;
    h = imul(h ^ h >>> 16, 0x85EBCA6B);
    h = imul(h ^ h >>> 13, 0xC2B2AE35);
    h = smi(h ^ h >>> 16);
    return h;
  }

  function hashMerge(a, b) {
    return a ^ b + 0x9E3779B9 + (a << 6) + (a >> 2) | 0;
  }

  var Immutable = {

    Iterable: Iterable,

    Seq: Seq,
    Collection: Collection,
    Map: Map,
    OrderedMap: OrderedMap,
    List: List,
    Stack: Stack,
    Set: Set,
    OrderedSet: OrderedSet,

    Record: Record,
    Range: Range,
    Repeat: Repeat,

    is: is,
    fromJS: fromJS

  };

  return Immutable;
});
}, 635, null, "immutable/dist/immutable.js");
__d(/* NavigatorBreadcrumbNavigationBar */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native/Libraries/CustomComponents/Navigator/NavigatorBreadcrumbNavigationBar.js';
var NavigatorBreadcrumbNavigationBarStyles = require(637                                     ); // 637 = NavigatorBreadcrumbNavigationBarStyles
var NavigatorNavigationBarStylesAndroid = require(638                                  ); // 638 = NavigatorNavigationBarStylesAndroid
var NavigatorNavigationBarStylesIOS = require(640                              ); // 640 = NavigatorNavigationBarStylesIOS
var Platform = require(348       ); // 348 = Platform
var React = require(398    ); // 398 = React
var StyleSheet = require(421         ); // 421 = StyleSheet
var View = require(441   ); // 441 = View

var guid = require(538   ); // 538 = guid
var invariant = require(346                 ); // 346 = fbjs/lib/invariant

var _require = require(635        ), // 635 = immutable
    Map = _require.Map;

var Interpolators = NavigatorBreadcrumbNavigationBarStyles.Interpolators;
var NavigatorNavigationBarStyles = Platform.OS === 'android' ? NavigatorNavigationBarStylesAndroid : NavigatorNavigationBarStylesIOS;
var PropTypes = React.PropTypes;

var CRUMB_PROPS = Interpolators.map(function () {
  return { style: {} };
});
var ICON_PROPS = Interpolators.map(function () {
  return { style: {} };
});
var SEPARATOR_PROPS = Interpolators.map(function () {
  return { style: {} };
});
var TITLE_PROPS = Interpolators.map(function () {
  return { style: {} };
});
var RIGHT_BUTTON_PROPS = Interpolators.map(function () {
  return { style: {} };
});

function navStatePresentedIndex(navState) {
  if (navState.presentedIndex !== undefined) {
    return navState.presentedIndex;
  }

  return navState.observedTopOfStack;
}

function initStyle(index, presentedIndex) {
  return index === presentedIndex ? NavigatorBreadcrumbNavigationBarStyles.Center[index] : index < presentedIndex ? NavigatorBreadcrumbNavigationBarStyles.Left[index] : NavigatorBreadcrumbNavigationBarStyles.Right[index];
}

var NavigatorBreadcrumbNavigationBar = function (_React$Component) {
  babelHelpers.inherits(NavigatorBreadcrumbNavigationBar, _React$Component);

  function NavigatorBreadcrumbNavigationBar() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, NavigatorBreadcrumbNavigationBar);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = NavigatorBreadcrumbNavigationBar.__proto__ || Object.getPrototypeOf(NavigatorBreadcrumbNavigationBar)).call.apply(_ref, [this].concat(args))), _this), _this._getBreadcrumb = function (route, index) {
      var pointerEvents = _this.props.navState.routeStack.length <= 1 && index === 0 ? 'none' : 'auto';
      var navBarRouteMapper = _this.props.routeMapper;
      var firstStyles = initStyle(index, navStatePresentedIndex(_this.props.navState));

      var breadcrumbDescriptor = React.createElement(
        View,
        {
          key: 'crumb_' + index,
          pointerEvents: pointerEvents,
          ref: 'crumb_' + index,
          style: firstStyles.Crumb, __source: {
            fileName: _jsxFileName,
            lineNumber: 234
          }
        },
        React.createElement(
          View,
          { ref: 'icon_' + index, style: firstStyles.Icon, __source: {
              fileName: _jsxFileName,
              lineNumber: 239
            }
          },
          navBarRouteMapper.iconForRoute(route, _this.props.navigator)
        ),
        React.createElement(
          View,
          { ref: 'separator_' + index, style: firstStyles.Separator, __source: {
              fileName: _jsxFileName,
              lineNumber: 242
            }
          },
          navBarRouteMapper.separatorForRoute(route, _this.props.navigator)
        )
      );

      return breadcrumbDescriptor;
    }, _this._getTitle = function (route, index) {
      if (_this._descriptors.title.has(route)) {
        return _this._descriptors.title.get(route);
      }

      var titleContent = _this.props.routeMapper.titleContentForRoute(_this.props.navState.routeStack[index], _this.props.navigator);
      var firstStyles = initStyle(index, navStatePresentedIndex(_this.props.navState));

      var titleDescriptor = React.createElement(
        View,
        {
          key: 'title_' + index,
          ref: 'title_' + index,
          style: firstStyles.Title, __source: {
            fileName: _jsxFileName,
            lineNumber: 263
          }
        },
        titleContent
      );
      _this._descriptors.title = _this._descriptors.title.set(route, titleDescriptor);
      return titleDescriptor;
    }, _this._getRightButton = function (route, index) {
      if (_this._descriptors.right.has(route)) {
        return _this._descriptors.right.get(route);
      }
      var rightContent = _this.props.routeMapper.rightContentForRoute(_this.props.navState.routeStack[index], _this.props.navigator);
      if (!rightContent) {
        _this._descriptors.right = _this._descriptors.right.set(route, null);
        return null;
      }
      var firstStyles = initStyle(index, navStatePresentedIndex(_this.props.navState));
      var rightButtonDescriptor = React.createElement(
        View,
        {
          key: 'right_' + index,
          ref: 'right_' + index,
          style: firstStyles.RightItem, __source: {
            fileName: _jsxFileName,
            lineNumber: 288
          }
        },
        rightContent
      );
      _this._descriptors.right = _this._descriptors.right.set(route, rightButtonDescriptor);
      return rightButtonDescriptor;
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(NavigatorBreadcrumbNavigationBar, [{
    key: '_updateIndexProgress',
    value: function _updateIndexProgress(progress, index, fromIndex, toIndex) {
      var amount = toIndex > fromIndex ? progress : 1 - progress;
      var oldDistToCenter = index - fromIndex;
      var newDistToCenter = index - toIndex;
      var interpolate;
      invariant(Interpolators[index], 'Cannot find breadcrumb interpolators for ' + index);
      if (oldDistToCenter > 0 && newDistToCenter === 0 || newDistToCenter > 0 && oldDistToCenter === 0) {
        interpolate = Interpolators[index].RightToCenter;
      } else if (oldDistToCenter < 0 && newDistToCenter === 0 || newDistToCenter < 0 && oldDistToCenter === 0) {
        interpolate = Interpolators[index].CenterToLeft;
      } else if (oldDistToCenter === newDistToCenter) {
        interpolate = Interpolators[index].RightToCenter;
      } else {
        interpolate = Interpolators[index].RightToLeft;
      }

      if (interpolate.Crumb(CRUMB_PROPS[index].style, amount)) {
        this._setPropsIfExists('crumb_' + index, CRUMB_PROPS[index]);
      }
      if (interpolate.Icon(ICON_PROPS[index].style, amount)) {
        this._setPropsIfExists('icon_' + index, ICON_PROPS[index]);
      }
      if (interpolate.Separator(SEPARATOR_PROPS[index].style, amount)) {
        this._setPropsIfExists('separator_' + index, SEPARATOR_PROPS[index]);
      }
      if (interpolate.Title(TITLE_PROPS[index].style, amount)) {
        this._setPropsIfExists('title_' + index, TITLE_PROPS[index]);
      }
      var right = this.refs['right_' + index];

      var rightButtonStyle = RIGHT_BUTTON_PROPS[index].style;
      if (right && interpolate.RightItem(rightButtonStyle, amount)) {
        right.setNativeProps({
          style: rightButtonStyle,
          pointerEvents: rightButtonStyle.opacity === 0 ? 'none' : 'auto'
        });
      }
    }
  }, {
    key: 'updateProgress',
    value: function updateProgress(progress, fromIndex, toIndex) {
      var max = Math.max(fromIndex, toIndex);
      var min = Math.min(fromIndex, toIndex);
      for (var index = min; index <= max; index++) {
        this._updateIndexProgress(progress, index, fromIndex, toIndex);
      }
    }
  }, {
    key: 'onAnimationStart',
    value: function onAnimationStart(fromIndex, toIndex) {
      var max = Math.max(fromIndex, toIndex);
      var min = Math.min(fromIndex, toIndex);
      for (var index = min; index <= max; index++) {
        this._setRenderViewsToHardwareTextureAndroid(index, true);
      }
    }
  }, {
    key: 'onAnimationEnd',
    value: function onAnimationEnd() {
      var max = this.props.navState.routeStack.length - 1;
      for (var index = 0; index <= max; index++) {
        this._setRenderViewsToHardwareTextureAndroid(index, false);
      }
    }
  }, {
    key: '_setRenderViewsToHardwareTextureAndroid',
    value: function _setRenderViewsToHardwareTextureAndroid(index, renderToHardwareTexture) {
      var props = {
        renderToHardwareTextureAndroid: renderToHardwareTexture
      };

      this._setPropsIfExists('icon_' + index, props);
      this._setPropsIfExists('separator_' + index, props);
      this._setPropsIfExists('title_' + index, props);
      this._setPropsIfExists('right_' + index, props);
    }
  }, {
    key: 'componentWillMount',
    value: function componentWillMount() {
      this._reset();
    }
  }, {
    key: 'render',
    value: function render() {
      var navState = this.props.navState;
      var icons = navState && navState.routeStack.map(this._getBreadcrumb);
      var titles = navState.routeStack.map(this._getTitle);
      var buttons = navState.routeStack.map(this._getRightButton);

      return React.createElement(
        View,
        {
          key: this._key,
          style: [styles.breadCrumbContainer, this.props.style], __source: {
            fileName: _jsxFileName,
            lineNumber: 196
          }
        },
        titles,
        icons,
        buttons
      );
    }
  }, {
    key: 'immediatelyRefresh',
    value: function immediatelyRefresh() {
      this._reset();
      this.forceUpdate();
    }
  }, {
    key: '_reset',
    value: function _reset() {
      this._key = guid();
      this._descriptors = {
        title: new Map(),
        right: new Map()
      };
    }
  }, {
    key: '_setPropsIfExists',
    value: function _setPropsIfExists(ref, props) {
      var ref = this.refs[ref];
      ref && ref.setNativeProps(props);
    }
  }]);
  return NavigatorBreadcrumbNavigationBar;
}(React.Component);

NavigatorBreadcrumbNavigationBar.propTypes = {
  navigator: PropTypes.shape({
    push: PropTypes.func,
    pop: PropTypes.func,
    replace: PropTypes.func,
    popToRoute: PropTypes.func,
    popToTop: PropTypes.func
  }),
  routeMapper: PropTypes.shape({
    rightContentForRoute: PropTypes.func,
    titleContentForRoute: PropTypes.func,
    iconForRoute: PropTypes.func
  }),
  navState: React.PropTypes.shape({
    routeStack: React.PropTypes.arrayOf(React.PropTypes.object),
    presentedIndex: React.PropTypes.number
  }),
  style: View.propTypes.style
};
NavigatorBreadcrumbNavigationBar.Styles = NavigatorBreadcrumbNavigationBarStyles;


var styles = StyleSheet.create({
  breadCrumbContainer: {
    overflow: 'hidden',
    position: 'absolute',
    height: NavigatorNavigationBarStyles.General.TotalNavHeight,
    top: 0,
    left: 0,
    right: 0
  }
});

module.exports = NavigatorBreadcrumbNavigationBar;
}, 636, null, "NavigatorBreadcrumbNavigationBar");
__d(/* NavigatorBreadcrumbNavigationBarStyles */function(global, require, module, exports) {
'use strict';

var NavigatorNavigationBarStylesAndroid = require(638                                  ); // 638 = NavigatorNavigationBarStylesAndroid

var buildStyleInterpolator = require(639                     ); // 639 = buildStyleInterpolator
var merge = require(444    ); // 444 = merge

var NAV_BAR_HEIGHT = NavigatorNavigationBarStylesAndroid.General.NavBarHeight;

var SPACING = 8;
var ICON_WIDTH = 40;
var SEPARATOR_WIDTH = 9;
var CRUMB_WIDTH = ICON_WIDTH + SEPARATOR_WIDTH;
var NAV_ELEMENT_HEIGHT = NAV_BAR_HEIGHT;

var OPACITY_RATIO = 100;
var ICON_INACTIVE_OPACITY = 0.6;
var MAX_BREADCRUMBS = 10;

var CRUMB_BASE = {
  position: 'absolute',
  flexDirection: 'row',
  top: 0,
  width: CRUMB_WIDTH,
  height: NAV_ELEMENT_HEIGHT,
  backgroundColor: 'transparent'
};

var ICON_BASE = {
  width: ICON_WIDTH,
  height: NAV_ELEMENT_HEIGHT
};

var SEPARATOR_BASE = {
  width: SEPARATOR_WIDTH,
  height: NAV_ELEMENT_HEIGHT
};

var TITLE_BASE = {
  position: 'absolute',
  top: 0,
  height: NAV_ELEMENT_HEIGHT,
  backgroundColor: 'transparent',
  alignItems: 'flex-start'
};

var FIRST_TITLE_BASE = merge(TITLE_BASE, {
  left: 0,
  right: 0
});

var RIGHT_BUTTON_BASE = {
  position: 'absolute',
  top: 0,
  right: 0,
  overflow: 'hidden',
  opacity: 1,
  height: NAV_ELEMENT_HEIGHT,
  backgroundColor: 'transparent'
};

var LEFT = [];
var CENTER = [];
var RIGHT = [];
for (var i = 0; i < MAX_BREADCRUMBS; i++) {
  var crumbLeft = CRUMB_WIDTH * i + SPACING;
  LEFT[i] = {
    Crumb: merge(CRUMB_BASE, { left: crumbLeft }),
    Icon: merge(ICON_BASE, { opacity: ICON_INACTIVE_OPACITY }),
    Separator: merge(SEPARATOR_BASE, { opacity: 1 }),
    Title: merge(TITLE_BASE, { left: crumbLeft, opacity: 0 }),
    RightItem: merge(RIGHT_BUTTON_BASE, { opacity: 0 })
  };
  CENTER[i] = {
    Crumb: merge(CRUMB_BASE, { left: crumbLeft }),
    Icon: merge(ICON_BASE, { opacity: 1 }),
    Separator: merge(SEPARATOR_BASE, { opacity: 0 }),
    Title: merge(TITLE_BASE, {
      left: crumbLeft + ICON_WIDTH,
      opacity: 1
    }),
    RightItem: merge(RIGHT_BUTTON_BASE, { opacity: 1 })
  };
  var crumbRight = crumbLeft + 50;
  RIGHT[i] = {
    Crumb: merge(CRUMB_BASE, { left: crumbRight }),
    Icon: merge(ICON_BASE, { opacity: 0 }),
    Separator: merge(SEPARATOR_BASE, { opacity: 0 }),
    Title: merge(TITLE_BASE, {
      left: crumbRight + ICON_WIDTH,
      opacity: 0
    }),
    RightItem: merge(RIGHT_BUTTON_BASE, { opacity: 0 })
  };
}

CENTER[0] = {
  Crumb: merge(CRUMB_BASE, { left: SPACING + CRUMB_WIDTH }),
  Icon: merge(ICON_BASE, { opacity: 0 }),
  Separator: merge(SEPARATOR_BASE, { opacity: 0 }),
  Title: merge(FIRST_TITLE_BASE, { opacity: 1 }),
  RightItem: CENTER[0].RightItem
};
LEFT[0].Title = merge(FIRST_TITLE_BASE, { opacity: 0 });
RIGHT[0].Title = merge(FIRST_TITLE_BASE, { opacity: 0 });

var buildIndexSceneInterpolator = function buildIndexSceneInterpolator(startStyles, endStyles) {
  return {
    Crumb: buildStyleInterpolator({
      left: {
        type: 'linear',
        from: startStyles.Crumb.left,
        to: endStyles.Crumb.left,
        min: 0,
        max: 1,
        extrapolate: true
      }
    }),
    Icon: buildStyleInterpolator({
      opacity: {
        type: 'linear',
        from: startStyles.Icon.opacity,
        to: endStyles.Icon.opacity,
        min: 0,
        max: 1
      }
    }),
    Separator: buildStyleInterpolator({
      opacity: {
        type: 'linear',
        from: startStyles.Separator.opacity,
        to: endStyles.Separator.opacity,
        min: 0,
        max: 1
      }
    }),
    Title: buildStyleInterpolator({
      opacity: {
        type: 'linear',
        from: startStyles.Title.opacity,
        to: endStyles.Title.opacity,
        min: 0,
        max: 1
      },
      left: {
        type: 'linear',
        from: startStyles.Title.left,
        to: endStyles.Title.left,
        min: 0,
        max: 1,
        extrapolate: true
      }
    }),
    RightItem: buildStyleInterpolator({
      opacity: {
        type: 'linear',
        from: startStyles.RightItem.opacity,
        to: endStyles.RightItem.opacity,
        min: 0,
        max: 1,
        round: OPACITY_RATIO
      }
    })
  };
};

var Interpolators = CENTER.map(function (_, ii) {
  return {
    RightToCenter: buildIndexSceneInterpolator(RIGHT[ii], CENTER[ii]),

    CenterToLeft: buildIndexSceneInterpolator(CENTER[ii], LEFT[ii]),

    RightToLeft: buildIndexSceneInterpolator(RIGHT[ii], LEFT[ii])
  };
});

module.exports = {
  Interpolators: Interpolators,
  Left: LEFT,
  Center: CENTER,
  Right: RIGHT,
  IconWidth: ICON_WIDTH,
  IconHeight: NAV_BAR_HEIGHT,
  SeparatorWidth: SEPARATOR_WIDTH,
  SeparatorHeight: NAV_BAR_HEIGHT
};
}, 637, null, "NavigatorBreadcrumbNavigationBarStyles");
__d(/* NavigatorNavigationBarStylesAndroid */function(global, require, module, exports) {
'use strict';

var buildStyleInterpolator = require(639                     ); // 639 = buildStyleInterpolator
var merge = require(444    ); // 444 = merge

var NAV_BAR_HEIGHT = 56;
var TITLE_LEFT = 72;
var BUTTON_SIZE = 24;
var TOUCH_TARGT_SIZE = 48;
var BUTTON_HORIZONTAL_MARGIN = 16;

var BUTTON_EFFECTIVE_MARGIN = BUTTON_HORIZONTAL_MARGIN - (TOUCH_TARGT_SIZE - BUTTON_SIZE) / 2;
var NAV_ELEMENT_HEIGHT = NAV_BAR_HEIGHT;

var BASE_STYLES = {
  Title: {
    position: 'absolute',
    bottom: 0,
    left: 0,
    right: 0,
    alignItems: 'flex-start',
    height: NAV_ELEMENT_HEIGHT,
    backgroundColor: 'transparent',
    marginLeft: TITLE_LEFT
  },
  LeftButton: {
    position: 'absolute',
    top: 0,
    left: BUTTON_EFFECTIVE_MARGIN,
    overflow: 'hidden',
    height: NAV_ELEMENT_HEIGHT,
    backgroundColor: 'transparent'
  },
  RightButton: {
    position: 'absolute',
    top: 0,
    right: BUTTON_EFFECTIVE_MARGIN,
    overflow: 'hidden',
    alignItems: 'flex-end',
    height: NAV_ELEMENT_HEIGHT,
    backgroundColor: 'transparent'
  }
};

var Stages = {
  Left: {
    Title: merge(BASE_STYLES.Title, { opacity: 0 }),
    LeftButton: merge(BASE_STYLES.LeftButton, { opacity: 0 }),
    RightButton: merge(BASE_STYLES.RightButton, { opacity: 0 })
  },
  Center: {
    Title: merge(BASE_STYLES.Title, { opacity: 1 }),
    LeftButton: merge(BASE_STYLES.LeftButton, { opacity: 1 }),
    RightButton: merge(BASE_STYLES.RightButton, { opacity: 1 })
  },
  Right: {
    Title: merge(BASE_STYLES.Title, { opacity: 0 }),
    LeftButton: merge(BASE_STYLES.LeftButton, { opacity: 0 }),
    RightButton: merge(BASE_STYLES.RightButton, { opacity: 0 })
  }
};

var opacityRatio = 100;

function buildSceneInterpolators(startStyles, endStyles) {
  return {
    Title: buildStyleInterpolator({
      opacity: {
        type: 'linear',
        from: startStyles.Title.opacity,
        to: endStyles.Title.opacity,
        min: 0,
        max: 1
      },
      left: {
        type: 'linear',
        from: startStyles.Title.left,
        to: endStyles.Title.left,
        min: 0,
        max: 1,
        extrapolate: true
      }
    }),
    LeftButton: buildStyleInterpolator({
      opacity: {
        type: 'linear',
        from: startStyles.LeftButton.opacity,
        to: endStyles.LeftButton.opacity,
        min: 0,
        max: 1,
        round: opacityRatio
      },
      left: {
        type: 'linear',
        from: startStyles.LeftButton.left,
        to: endStyles.LeftButton.left,
        min: 0,
        max: 1
      }
    }),
    RightButton: buildStyleInterpolator({
      opacity: {
        type: 'linear',
        from: startStyles.RightButton.opacity,
        to: endStyles.RightButton.opacity,
        min: 0,
        max: 1,
        round: opacityRatio
      },
      left: {
        type: 'linear',
        from: startStyles.RightButton.left,
        to: endStyles.RightButton.left,
        min: 0,
        max: 1,
        extrapolate: true
      }
    })
  };
}

var Interpolators = {
  RightToCenter: buildSceneInterpolators(Stages.Right, Stages.Center),

  CenterToLeft: buildSceneInterpolators(Stages.Center, Stages.Left),

  RightToLeft: buildSceneInterpolators(Stages.Right, Stages.Left)
};

module.exports = {
  General: {
    NavBarHeight: NAV_BAR_HEIGHT,
    StatusBarHeight: 0,
    TotalNavHeight: NAV_BAR_HEIGHT
  },
  Interpolators: Interpolators,
  Stages: Stages
};
}, 638, null, "NavigatorNavigationBarStylesAndroid");
__d(/* buildStyleInterpolator */function(global, require, module, exports) {

var keyOf = require(620             ); // 620 = fbjs/lib/keyOf

var X_DIM = keyOf({ x: null });
var Y_DIM = keyOf({ y: null });
var Z_DIM = keyOf({ z: null });
var W_DIM = keyOf({ w: null });

var TRANSFORM_ROTATE_NAME = keyOf({ transformRotateRadians: null });

var ShouldAllocateReusableOperationVars = {
  transformRotateRadians: true,
  transformScale: true,
  transformTranslate: true
};

var InitialOperationField = {
  transformRotateRadians: [0, 0, 0, 1],
  transformTranslate: [0, 0, 0],
  transformScale: [1, 1, 1]
};

var ARGUMENT_NAMES_RE = /([^\s,]+)/g;

var inline = function inline(fnStr, replaceWithArgs) {
  var parameterNames = fnStr.slice(fnStr.indexOf('(') + 1, fnStr.indexOf(')')).match(ARGUMENT_NAMES_RE) || [];
  var replaceRegexStr = parameterNames.map(function (paramName) {
    return '\\b' + paramName + '\\b';
  }).join('|');
  var replaceRegex = new RegExp(replaceRegexStr, 'g');
  var fnBody = fnStr.substring(fnStr.indexOf('{') + 1, fnStr.lastIndexOf('}'));
  var newFnBody = fnBody.replace(replaceRegex, function (parameterName) {
    var indexInParameterNames = parameterNames.indexOf(parameterName);
    var replacementName = replaceWithArgs[indexInParameterNames];
    return replacementName;
  });
  return newFnBody.split('\n');
};

var MatrixOps = {
  unroll: 'function(matVar, m0, m1, m2, m3, m4, m5, m6, m7, m8, m9, m10, m11, m12, m13, m14, m15) {\n    m0 = matVar[0];\n    m1 = matVar[1];\n    m2 = matVar[2];\n    m3 = matVar[3];\n    m4 = matVar[4];\n    m5 = matVar[5];\n    m6 = matVar[6];\n    m7 = matVar[7];\n    m8 = matVar[8];\n    m9 = matVar[9];\n    m10 = matVar[10];\n    m11 = matVar[11];\n    m12 = matVar[12];\n    m13 = matVar[13];\n    m14 = matVar[14];\n    m15 = matVar[15];\n  }',

  matrixDiffers: 'function(retVar, matVar, m0, m1, m2, m3, m4, m5, m6, m7, m8, m9, m10, m11, m12, m13, m14, m15) {\n    retVar = retVar ||\n    m0 !== matVar[0] ||\n    m1 !== matVar[1] ||\n    m2 !== matVar[2] ||\n    m3 !== matVar[3] ||\n    m4 !== matVar[4] ||\n    m5 !== matVar[5] ||\n    m6 !== matVar[6] ||\n    m7 !== matVar[7] ||\n    m8 !== matVar[8] ||\n    m9 !== matVar[9] ||\n    m10 !== matVar[10] ||\n    m11 !== matVar[11] ||\n    m12 !== matVar[12] ||\n    m13 !== matVar[13] ||\n    m14 !== matVar[14] ||\n    m15 !== matVar[15];\n  }',

  transformScale: 'function(matVar, opVar) {\n    // Scaling matVar by opVar\n    var x = opVar[0];\n    var y = opVar[1];\n    var z = opVar[2];\n    matVar[0] = matVar[0] * x;\n    matVar[1] = matVar[1] * x;\n    matVar[2] = matVar[2] * x;\n    matVar[3] = matVar[3] * x;\n    matVar[4] = matVar[4] * y;\n    matVar[5] = matVar[5] * y;\n    matVar[6] = matVar[6] * y;\n    matVar[7] = matVar[7] * y;\n    matVar[8] = matVar[8] * z;\n    matVar[9] = matVar[9] * z;\n    matVar[10] = matVar[10] * z;\n    matVar[11] = matVar[11] * z;\n    matVar[12] = matVar[12];\n    matVar[13] = matVar[13];\n    matVar[14] = matVar[14];\n    matVar[15] = matVar[15];\n  }',

  transformTranslate: 'function(matVar, opVar) {\n    // Translating matVar by opVar\n    var x = opVar[0];\n    var y = opVar[1];\n    var z = opVar[2];\n    matVar[12] = matVar[0] * x + matVar[4] * y + matVar[8] * z + matVar[12];\n    matVar[13] = matVar[1] * x + matVar[5] * y + matVar[9] * z + matVar[13];\n    matVar[14] = matVar[2] * x + matVar[6] * y + matVar[10] * z + matVar[14];\n    matVar[15] = matVar[3] * x + matVar[7] * y + matVar[11] * z + matVar[15];\n  }',

  transformRotateRadians: 'function(matVar, q) {\n    // Rotating matVar by q\n    var xQuat = q[0], yQuat = q[1], zQuat = q[2], wQuat = q[3];\n    var x2Quat = xQuat + xQuat;\n    var y2Quat = yQuat + yQuat;\n    var z2Quat = zQuat + zQuat;\n    var xxQuat = xQuat * x2Quat;\n    var xyQuat = xQuat * y2Quat;\n    var xzQuat = xQuat * z2Quat;\n    var yyQuat = yQuat * y2Quat;\n    var yzQuat = yQuat * z2Quat;\n    var zzQuat = zQuat * z2Quat;\n    var wxQuat = wQuat * x2Quat;\n    var wyQuat = wQuat * y2Quat;\n    var wzQuat = wQuat * z2Quat;\n    // Step 1: Inlines the construction of a quaternion matrix (\'quatMat\')\n    var quatMat0 = 1 - (yyQuat + zzQuat);\n    var quatMat1 = xyQuat + wzQuat;\n    var quatMat2 = xzQuat - wyQuat;\n    var quatMat4 = xyQuat - wzQuat;\n    var quatMat5 = 1 - (xxQuat + zzQuat);\n    var quatMat6 = yzQuat + wxQuat;\n    var quatMat8 = xzQuat + wyQuat;\n    var quatMat9 = yzQuat - wxQuat;\n    var quatMat10 = 1 - (xxQuat + yyQuat);\n    // quatMat3/7/11/12/13/14 = 0, quatMat15 = 1\n\n    // Step 2: Inlines multiplication, takes advantage of constant quatMat cells\n    var a00 = matVar[0];\n    var a01 = matVar[1];\n    var a02 = matVar[2];\n    var a03 = matVar[3];\n    var a10 = matVar[4];\n    var a11 = matVar[5];\n    var a12 = matVar[6];\n    var a13 = matVar[7];\n    var a20 = matVar[8];\n    var a21 = matVar[9];\n    var a22 = matVar[10];\n    var a23 = matVar[11];\n\n    var b0  = quatMat0, b1 = quatMat1, b2 = quatMat2;\n    matVar[0] = b0 * a00 + b1 * a10 + b2 * a20;\n    matVar[1] = b0 * a01 + b1 * a11 + b2 * a21;\n    matVar[2] = b0 * a02 + b1 * a12 + b2 * a22;\n    matVar[3] = b0 * a03 + b1 * a13 + b2 * a23;\n    b0 = quatMat4; b1 = quatMat5; b2 = quatMat6;\n    matVar[4] = b0 * a00 + b1 * a10 + b2 * a20;\n    matVar[5] = b0 * a01 + b1 * a11 + b2 * a21;\n    matVar[6] = b0 * a02 + b1 * a12 + b2 * a22;\n    matVar[7] = b0 * a03 + b1 * a13 + b2 * a23;\n    b0 = quatMat8; b1 = quatMat9; b2 = quatMat10;\n    matVar[8] = b0 * a00 + b1 * a10 + b2 * a20;\n    matVar[9] = b0 * a01 + b1 * a11 + b2 * a21;\n    matVar[10] = b0 * a02 + b1 * a12 + b2 * a22;\n    matVar[11] = b0 * a03 + b1 * a13 + b2 * a23;\n  }'
};

var MatrixOpsInitial = {
  transformScale: 'function(matVar, opVar) {\n    // Scaling matVar known to be identity by opVar\n    matVar[0] = opVar[0];\n    matVar[1] = 0;\n    matVar[2] = 0;\n    matVar[3] = 0;\n    matVar[4] = 0;\n    matVar[5] = opVar[1];\n    matVar[6] = 0;\n    matVar[7] = 0;\n    matVar[8] = 0;\n    matVar[9] = 0;\n    matVar[10] = opVar[2];\n    matVar[11] = 0;\n    matVar[12] = 0;\n    matVar[13] = 0;\n    matVar[14] = 0;\n    matVar[15] = 1;\n  }',

  transformTranslate: 'function(matVar, opVar) {\n    // Translating matVar known to be identity by opVar;\n    matVar[0] = 1;\n    matVar[1] = 0;\n    matVar[2] = 0;\n    matVar[3] = 0;\n    matVar[4] = 0;\n    matVar[5] = 1;\n    matVar[6] = 0;\n    matVar[7] = 0;\n    matVar[8] = 0;\n    matVar[9] = 0;\n    matVar[10] = 1;\n    matVar[11] = 0;\n    matVar[12] = opVar[0];\n    matVar[13] = opVar[1];\n    matVar[14] = opVar[2];\n    matVar[15] = 1;\n  }',

  transformRotateRadians: 'function(matVar, q) {\n\n    // Rotating matVar which is known to be identity by q\n    var xQuat = q[0], yQuat = q[1], zQuat = q[2], wQuat = q[3];\n    var x2Quat = xQuat + xQuat;\n    var y2Quat = yQuat + yQuat;\n    var z2Quat = zQuat + zQuat;\n    var xxQuat = xQuat * x2Quat;\n    var xyQuat = xQuat * y2Quat;\n    var xzQuat = xQuat * z2Quat;\n    var yyQuat = yQuat * y2Quat;\n    var yzQuat = yQuat * z2Quat;\n    var zzQuat = zQuat * z2Quat;\n    var wxQuat = wQuat * x2Quat;\n    var wyQuat = wQuat * y2Quat;\n    var wzQuat = wQuat * z2Quat;\n    // Step 1: Inlines the construction of a quaternion matrix (\'quatMat\')\n    var quatMat0 = 1 - (yyQuat + zzQuat);\n    var quatMat1 = xyQuat + wzQuat;\n    var quatMat2 = xzQuat - wyQuat;\n    var quatMat4 = xyQuat - wzQuat;\n    var quatMat5 = 1 - (xxQuat + zzQuat);\n    var quatMat6 = yzQuat + wxQuat;\n    var quatMat8 = xzQuat + wyQuat;\n    var quatMat9 = yzQuat - wxQuat;\n    var quatMat10 = 1 - (xxQuat + yyQuat);\n    // quatMat3/7/11/12/13/14 = 0, quatMat15 = 1\n\n    // Step 2: Inlines the multiplication with identity matrix.\n    var b0  = quatMat0, b1 = quatMat1, b2 = quatMat2;\n    matVar[0] = b0;\n    matVar[1] = b1;\n    matVar[2] = b2;\n    matVar[3] = 0;\n    b0 = quatMat4; b1 = quatMat5; b2 = quatMat6;\n    matVar[4] = b0;\n    matVar[5] = b1;\n    matVar[6] = b2;\n    matVar[7] = 0;\n    b0 = quatMat8; b1 = quatMat9; b2 = quatMat10;\n    matVar[8] = b0;\n    matVar[9] = b1;\n    matVar[10] = b2;\n    matVar[11] = 0;\n    matVar[12] = 0;\n    matVar[13] = 0;\n    matVar[14] = 0;\n    matVar[15] = 1;\n  }'
};

var setNextValAndDetectChange = function setNextValAndDetectChange(name, tmpVarName) {
  return '  if (!didChange) {\n' + '    var prevVal = result.' + name + ';\n' + '    result.' + name + ' = ' + tmpVarName + ';\n' + '    didChange = didChange  || (' + tmpVarName + ' !== prevVal);\n' + '  } else {\n' + '    result.' + name + ' = ' + tmpVarName + ';\n' + '  }\n';
};

var computeNextValLinear = function computeNextValLinear(anim, from, to, tmpVarName) {
  var hasRoundRatio = 'round' in anim;
  var roundRatio = anim.round;
  var fn = '  ratio = (value - ' + anim.min + ') / ' + (anim.max - anim.min) + ';\n';
  if (!anim.extrapolate) {
    fn += '  ratio = ratio > 1 ? 1 : (ratio < 0 ? 0 : ratio);\n';
  }

  var roundOpen = hasRoundRatio ? 'Math.round(' + roundRatio + ' * ' : '';
  var roundClose = hasRoundRatio ? ') / ' + roundRatio : '';
  fn += '  ' + tmpVarName + ' = ' + roundOpen + '(' + from + ' * (1 - ratio) + ' + to + ' * ratio)' + roundClose + ';\n';
  return fn;
};

var computeNextValLinearScalar = function computeNextValLinearScalar(anim) {
  return computeNextValLinear(anim, anim.from, anim.to, 'nextScalarVal');
};

var computeNextValConstant = function computeNextValConstant(anim) {
  var constantExpression = JSON.stringify(anim.value);
  return '  nextScalarVal = ' + constantExpression + ';\n';
};

var computeNextValStep = function computeNextValStep(anim) {
  return '  nextScalarVal = value >= ' + (anim.threshold + ' ? ' + anim.to + ' : ' + anim.from) + ';\n';
};

var computeNextValIdentity = function computeNextValIdentity(anim) {
  return '  nextScalarVal = value;\n';
};

var operationVar = function operationVar(name) {
  return name + 'ReuseOp';
};

var createReusableOperationVars = function createReusableOperationVars(anims) {
  var ret = '';
  for (var name in anims) {
    if (ShouldAllocateReusableOperationVars[name]) {
      ret += 'var ' + operationVar(name) + ' = [];\n';
    }
  }
  return ret;
};

var newlines = function newlines(statements) {
  return '\n' + statements.join('\n') + '\n';
};

var computeNextMatrixOperationField = function computeNextMatrixOperationField(anim, name, dimension, index) {
  var fieldAccess = operationVar(name) + '[' + index + ']';
  if (anim.from[dimension] !== undefined && anim.to[dimension] !== undefined) {
    return '  ' + anim.from[dimension] !== anim.to[dimension] ? computeNextValLinear(anim, anim.from[dimension], anim.to[dimension], fieldAccess) : fieldAccess + ' = ' + anim.from[dimension] + ';';
  } else {
    return '  ' + fieldAccess + ' = ' + InitialOperationField[name][index] + ';';
  }
};

var unrolledVars = [];
for (var varIndex = 0; varIndex < 16; varIndex++) {
  unrolledVars.push('m' + varIndex);
}
var setNextMatrixAndDetectChange = function setNextMatrixAndDetectChange(orderedMatrixOperations) {
  var fn = ['  var transform = result.transform !== undefined ? ' + 'result.transform : (result.transform = [{ matrix: [] }]);' + '  var transformMatrix = transform[0].matrix;'];
  fn.push.apply(fn, inline(MatrixOps.unroll, ['transformMatrix'].concat(unrolledVars)));
  for (var i = 0; i < orderedMatrixOperations.length; i++) {
    var opName = orderedMatrixOperations[i];
    if (i === 0) {
      fn.push.apply(fn, inline(MatrixOpsInitial[opName], ['transformMatrix', operationVar(opName)]));
    } else {
      fn.push.apply(fn, inline(MatrixOps[opName], ['transformMatrix', operationVar(opName)]));
    }
  }
  fn.push.apply(fn, inline(MatrixOps.matrixDiffers, ['didChange', 'transformMatrix'].concat(unrolledVars)));
  return fn;
};

var InterpolateMatrix = {
  transformTranslate: true,
  transformRotateRadians: true,
  transformScale: true
};

var createFunctionString = function createFunctionString(anims) {
  var orderedMatrixOperations = [];

  var fn = 'return (function() {\n';
  fn += createReusableOperationVars(anims);
  fn += 'return function(result, value) {\n';
  fn += '  var didChange = false;\n';
  fn += '  var nextScalarVal;\n';
  fn += '  var ratio;\n';

  for (var name in anims) {
    var anim = anims[name];
    if (anim.type === 'linear') {
      if (InterpolateMatrix[name]) {
        orderedMatrixOperations.push(name);
        var setOperations = [computeNextMatrixOperationField(anim, name, X_DIM, 0), computeNextMatrixOperationField(anim, name, Y_DIM, 1), computeNextMatrixOperationField(anim, name, Z_DIM, 2)];
        if (name === TRANSFORM_ROTATE_NAME) {
          setOperations.push(computeNextMatrixOperationField(anim, name, W_DIM, 3));
        }
        fn += newlines(setOperations);
      } else {
        fn += computeNextValLinearScalar(anim, 'nextScalarVal');
        fn += setNextValAndDetectChange(name, 'nextScalarVal');
      }
    } else if (anim.type === 'constant') {
      fn += computeNextValConstant(anim);
      fn += setNextValAndDetectChange(name, 'nextScalarVal');
    } else if (anim.type === 'step') {
      fn += computeNextValStep(anim);
      fn += setNextValAndDetectChange(name, 'nextScalarVal');
    } else if (anim.type === 'identity') {
      fn += computeNextValIdentity(anim);
      fn += setNextValAndDetectChange(name, 'nextScalarVal');
    }
  }
  if (orderedMatrixOperations.length) {
    fn += newlines(setNextMatrixAndDetectChange(orderedMatrixOperations));
  }
  fn += '  return didChange;\n';
  fn += '};\n';
  fn += '})()';
  return fn;
};

var buildStyleInterpolator = function buildStyleInterpolator(anims) {
  var interpolator = null;
  function lazyStyleInterpolator(result, value) {
    if (interpolator === null) {
      interpolator = Function(createFunctionString(anims))();
    }
    return interpolator(result, value);
  }
  return lazyStyleInterpolator;
};

module.exports = buildStyleInterpolator;
}, 639, null, "buildStyleInterpolator");
__d(/* NavigatorNavigationBarStylesIOS */function(global, require, module, exports) {
'use strict';

var Dimensions = require(423         ); // 423 = Dimensions

var buildStyleInterpolator = require(639                     ); // 639 = buildStyleInterpolator
var merge = require(444    ); // 444 = merge

var SCREEN_WIDTH = Dimensions.get('window').width;
var NAV_BAR_HEIGHT = 44;
var STATUS_BAR_HEIGHT = 20;
var NAV_HEIGHT = NAV_BAR_HEIGHT + STATUS_BAR_HEIGHT;

var BASE_STYLES = {
  Title: {
    position: 'absolute',
    top: STATUS_BAR_HEIGHT,
    left: 0,
    right: 0,
    alignItems: 'center',
    height: NAV_BAR_HEIGHT,
    backgroundColor: 'transparent'
  },
  LeftButton: {
    position: 'absolute',
    top: STATUS_BAR_HEIGHT,
    left: 0,
    overflow: 'hidden',
    opacity: 1,
    height: NAV_BAR_HEIGHT,
    backgroundColor: 'transparent'
  },
  RightButton: {
    position: 'absolute',
    top: STATUS_BAR_HEIGHT,
    right: 0,
    overflow: 'hidden',
    opacity: 1,
    alignItems: 'flex-end',
    height: NAV_BAR_HEIGHT,
    backgroundColor: 'transparent'
  }
};

var Stages = {
  Left: {
    Title: merge(BASE_STYLES.Title, { left: -SCREEN_WIDTH / 2, opacity: 0 }),
    LeftButton: merge(BASE_STYLES.LeftButton, { left: 0, opacity: 0 }),
    RightButton: merge(BASE_STYLES.RightButton, { opacity: 0 })
  },
  Center: {
    Title: merge(BASE_STYLES.Title, { left: 0, opacity: 1 }),
    LeftButton: merge(BASE_STYLES.LeftButton, { left: 0, opacity: 1 }),
    RightButton: merge(BASE_STYLES.RightButton, { opacity: 1 })
  },
  Right: {
    Title: merge(BASE_STYLES.Title, { left: SCREEN_WIDTH / 2, opacity: 0 }),
    LeftButton: merge(BASE_STYLES.LeftButton, { left: 0, opacity: 0 }),
    RightButton: merge(BASE_STYLES.RightButton, { opacity: 0 })
  }
};

var opacityRatio = 100;

function buildSceneInterpolators(startStyles, endStyles) {
  return {
    Title: buildStyleInterpolator({
      opacity: {
        type: 'linear',
        from: startStyles.Title.opacity,
        to: endStyles.Title.opacity,
        min: 0,
        max: 1
      },
      left: {
        type: 'linear',
        from: startStyles.Title.left,
        to: endStyles.Title.left,
        min: 0,
        max: 1,
        extrapolate: true
      }
    }),
    LeftButton: buildStyleInterpolator({
      opacity: {
        type: 'linear',
        from: startStyles.LeftButton.opacity,
        to: endStyles.LeftButton.opacity,
        min: 0,
        max: 1,
        round: opacityRatio
      },
      left: {
        type: 'linear',
        from: startStyles.LeftButton.left,
        to: endStyles.LeftButton.left,
        min: 0,
        max: 1
      }
    }),
    RightButton: buildStyleInterpolator({
      opacity: {
        type: 'linear',
        from: startStyles.RightButton.opacity,
        to: endStyles.RightButton.opacity,
        min: 0,
        max: 1,
        round: opacityRatio
      },
      left: {
        type: 'linear',
        from: startStyles.RightButton.left,
        to: endStyles.RightButton.left,
        min: 0,
        max: 1,
        extrapolate: true
      }
    })
  };
}

var Interpolators = {
  RightToCenter: buildSceneInterpolators(Stages.Right, Stages.Center),

  CenterToLeft: buildSceneInterpolators(Stages.Center, Stages.Left),

  RightToLeft: buildSceneInterpolators(Stages.Right, Stages.Left)
};

module.exports = {
  General: {
    NavBarHeight: NAV_BAR_HEIGHT,
    StatusBarHeight: STATUS_BAR_HEIGHT,
    TotalNavHeight: NAV_HEIGHT
  },
  Interpolators: Interpolators,
  Stages: Stages
};
}, 640, null, "NavigatorNavigationBarStylesIOS");
__d(/* NavigatorNavigationBar */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native/Libraries/CustomComponents/Navigator/NavigatorNavigationBar.js';
var React = require(398    ); // 398 = React
var NavigatorNavigationBarStylesAndroid = require(638                                  ); // 638 = NavigatorNavigationBarStylesAndroid
var NavigatorNavigationBarStylesIOS = require(640                              ); // 640 = NavigatorNavigationBarStylesIOS
var Platform = require(348       ); // 348 = Platform
var StyleSheet = require(421         ); // 421 = StyleSheet
var View = require(441   ); // 441 = View

var guid = require(538   ); // 538 = guid

var _require = require(635        ), // 635 = immutable
    Map = _require.Map;

var COMPONENT_NAMES = ['Title', 'LeftButton', 'RightButton'];

var NavigatorNavigationBarStyles = Platform.OS === 'android' ? NavigatorNavigationBarStylesAndroid : NavigatorNavigationBarStylesIOS;

var navStatePresentedIndex = function navStatePresentedIndex(navState) {
  if (navState.presentedIndex !== undefined) {
    return navState.presentedIndex;
  }

  return navState.observedTopOfStack;
};

var NavigatorNavigationBar = function (_React$Component) {
  babelHelpers.inherits(NavigatorNavigationBar, _React$Component);

  function NavigatorNavigationBar() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, NavigatorNavigationBar);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = NavigatorNavigationBar.__proto__ || Object.getPrototypeOf(NavigatorNavigationBar)).call.apply(_ref, [this].concat(args))), _this), _this.immediatelyRefresh = function () {
      _this._reset();
      _this.forceUpdate();
    }, _this._reset = function () {
      _this._key = guid();
      _this._reusableProps = {};
      _this._components = {};
      _this._descriptors = {};

      COMPONENT_NAMES.forEach(function (componentName) {
        _this._components[componentName] = new Map();
        _this._descriptors[componentName] = new Map();
      });
    }, _this._getReusableProps = function (componentName, index) {
      var propStack = _this._reusableProps[componentName];
      if (!propStack) {
        propStack = _this._reusableProps[componentName] = [];
      }
      var props = propStack[index];
      if (!props) {
        props = propStack[index] = { style: {} };
      }
      return props;
    }, _this._updateIndexProgress = function (progress, index, fromIndex, toIndex) {
      var amount = toIndex > fromIndex ? progress : 1 - progress;
      var oldDistToCenter = index - fromIndex;
      var newDistToCenter = index - toIndex;
      var interpolate;
      if (oldDistToCenter > 0 && newDistToCenter === 0 || newDistToCenter > 0 && oldDistToCenter === 0) {
        interpolate = _this.props.navigationStyles.Interpolators.RightToCenter;
      } else if (oldDistToCenter < 0 && newDistToCenter === 0 || newDistToCenter < 0 && oldDistToCenter === 0) {
        interpolate = _this.props.navigationStyles.Interpolators.CenterToLeft;
      } else if (oldDistToCenter === newDistToCenter) {
        interpolate = _this.props.navigationStyles.Interpolators.RightToCenter;
      } else {
        interpolate = _this.props.navigationStyles.Interpolators.RightToLeft;
      }

      COMPONENT_NAMES.forEach(function (componentName) {
        var component = this._components[componentName].get(this.props.navState.routeStack[index]);
        var props = this._getReusableProps(componentName, index);
        if (component && interpolate[componentName](props.style, amount)) {
          props.pointerEvents = props.style.opacity === 0 ? 'none' : 'box-none';
          component.setNativeProps(props);
        }
      }, _this);
    }, _this.updateProgress = function (progress, fromIndex, toIndex) {
      var max = Math.max(fromIndex, toIndex);
      var min = Math.min(fromIndex, toIndex);
      for (var index = min; index <= max; index++) {
        _this._updateIndexProgress(progress, index, fromIndex, toIndex);
      }
    }, _this._getComponent = function (componentName, route, index) {
      if (_this._descriptors[componentName].includes(route)) {
        return _this._descriptors[componentName].get(route);
      }

      var rendered = null;

      var content = _this.props.routeMapper[componentName](_this.props.navState.routeStack[index], _this.props.navigator, index, _this.props.navState);
      if (!content) {
        return null;
      }

      var componentIsActive = index === navStatePresentedIndex(_this.props.navState);
      var initialStage = componentIsActive ? _this.props.navigationStyles.Stages.Center : _this.props.navigationStyles.Stages.Left;
      rendered = React.createElement(
        View,
        {
          ref: function ref(_ref2) {
            _this._components[componentName] = _this._components[componentName].set(route, _ref2);
          },
          pointerEvents: componentIsActive ? 'box-none' : 'none',
          style: initialStage[componentName], __source: {
            fileName: _jsxFileName,
            lineNumber: 196
          }
        },
        content
      );

      _this._descriptors[componentName] = _this._descriptors[componentName].set(route, rendered);
      return rendered;
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(NavigatorNavigationBar, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      this._reset();
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var navBarStyle = {
        height: this.props.navigationStyles.General.TotalNavHeight
      };
      var navState = this.props.navState;
      var components = navState.routeStack.map(function (route, index) {
        return COMPONENT_NAMES.map(function (componentName) {
          return _this2._getComponent(componentName, route, index);
        });
      });

      return React.createElement(
        View,
        {
          key: this._key,
          style: [styles.navBarContainer, navBarStyle, this.props.style], __source: {
            fileName: _jsxFileName,
            lineNumber: 166
          }
        },
        components
      );
    }
  }]);
  return NavigatorNavigationBar;
}(React.Component);

NavigatorNavigationBar.propTypes = {
  navigator: React.PropTypes.object,
  routeMapper: React.PropTypes.shape({
    Title: React.PropTypes.func.isRequired,
    LeftButton: React.PropTypes.func.isRequired,
    RightButton: React.PropTypes.func.isRequired
  }).isRequired,
  navState: React.PropTypes.shape({
    routeStack: React.PropTypes.arrayOf(React.PropTypes.object),
    presentedIndex: React.PropTypes.number
  }),
  navigationStyles: React.PropTypes.object,
  style: View.propTypes.style
};
NavigatorNavigationBar.Styles = NavigatorNavigationBarStyles;
NavigatorNavigationBar.StylesAndroid = NavigatorNavigationBarStylesAndroid;
NavigatorNavigationBar.StylesIOS = NavigatorNavigationBarStylesIOS;
NavigatorNavigationBar.defaultProps = {
  navigationStyles: NavigatorNavigationBarStyles
};


var styles = StyleSheet.create({
  navBarContainer: {
    position: 'absolute',
    top: 0,
    left: 0,
    right: 0,
    backgroundColor: 'transparent'
  }
});

module.exports = NavigatorNavigationBar;
}, 641, null, "NavigatorNavigationBar");
__d(/* NavigatorSceneConfigs */function(global, require, module, exports) {
'use strict';

var Dimensions = require(423         ); // 423 = Dimensions
var I18nManager = require(628          ); // 628 = I18nManager
var PixelRatio = require(422         ); // 422 = PixelRatio

var buildStyleInterpolator = require(639                     ); // 639 = buildStyleInterpolator

var IS_RTL = I18nManager.isRTL;

var SCREEN_WIDTH = Dimensions.get('window').width;
var SCREEN_HEIGHT = Dimensions.get('window').height;
var PIXEL_RATIO = PixelRatio.get();

var ToTheLeftIOS = {
  transformTranslate: {
    from: { x: 0, y: 0, z: 0 },
    to: { x: -SCREEN_WIDTH * 0.3, y: 0, z: 0 },
    min: 0,
    max: 1,
    type: 'linear',
    extrapolate: true,
    round: PIXEL_RATIO
  },
  opacity: {
    value: 1.0,
    type: 'constant'
  }
};

var ToTheRightIOS = babelHelpers.extends({}, ToTheLeftIOS, {
  transformTranslate: {
    from: { x: 0, y: 0, z: 0 },
    to: { x: SCREEN_WIDTH * 0.3, y: 0, z: 0 }
  }
});

var FadeToTheLeft = {
  transformTranslate: {
    from: { x: 0, y: 0, z: 0 },
    to: { x: -Math.round(SCREEN_WIDTH * 0.3), y: 0, z: 0 },
    min: 0,
    max: 1,
    type: 'linear',
    extrapolate: true,
    round: PIXEL_RATIO
  },

  transformScale: {
    from: { x: 1, y: 1, z: 1 },
    to: { x: 0.95, y: 0.95, z: 1 },
    min: 0,
    max: 1,
    type: 'linear',
    extrapolate: true
  },
  opacity: {
    from: 1,
    to: 0.3,
    min: 0,
    max: 1,
    type: 'linear',
    extrapolate: false,
    round: 100
  },
  translateX: {
    from: 0,
    to: -Math.round(SCREEN_WIDTH * 0.3),
    min: 0,
    max: 1,
    type: 'linear',
    extrapolate: true,
    round: PIXEL_RATIO
  },
  scaleX: {
    from: 1,
    to: 0.95,
    min: 0,
    max: 1,
    type: 'linear',
    extrapolate: true
  },
  scaleY: {
    from: 1,
    to: 0.95,
    min: 0,
    max: 1,
    type: 'linear',
    extrapolate: true
  }
};

var FadeToTheRight = babelHelpers.extends({}, FadeToTheLeft, {
  transformTranslate: {
    from: { x: 0, y: 0, z: 0 },
    to: { x: Math.round(SCREEN_WIDTH * 0.3), y: 0, z: 0 }
  },
  translateX: {
    from: 0,
    to: Math.round(SCREEN_WIDTH * 0.3)
  }
});

var FadeIn = {
  opacity: {
    from: 0,
    to: 1,
    min: 0.5,
    max: 1,
    type: 'linear',
    extrapolate: false,
    round: 100
  }
};

var FadeOut = {
  opacity: {
    from: 1,
    to: 0,
    min: 0,
    max: 0.5,
    type: 'linear',
    extrapolate: false,
    round: 100
  }
};

var ToTheLeft = {
  transformTranslate: {
    from: { x: 0, y: 0, z: 0 },
    to: { x: -SCREEN_WIDTH, y: 0, z: 0 },
    min: 0,
    max: 1,
    type: 'linear',
    extrapolate: true,
    round: PIXEL_RATIO
  },
  opacity: {
    value: 1.0,
    type: 'constant'
  },

  translateX: {
    from: 0,
    to: -SCREEN_WIDTH,
    min: 0,
    max: 1,
    type: 'linear',
    extrapolate: true,
    round: PIXEL_RATIO
  }
};

var ToTheRight = {
  transformTranslate: {
    from: { x: 0, y: 0, z: 0 },
    to: { x: SCREEN_WIDTH, y: 0, z: 0 },
    min: 0,
    max: 1,
    type: 'linear',
    extrapolate: true,
    round: PIXEL_RATIO
  },
  opacity: {
    value: 1.0,
    type: 'constant'
  },

  translateX: {
    from: 0,
    to: SCREEN_WIDTH,
    min: 0,
    max: 1,
    type: 'linear',
    extrapolate: true,
    round: PIXEL_RATIO
  }
};

var ToTheUp = {
  transformTranslate: {
    from: { x: 0, y: 0, z: 0 },
    to: { x: 0, y: -SCREEN_HEIGHT, z: 0 },
    min: 0,
    max: 1,
    type: 'linear',
    extrapolate: true,
    round: PIXEL_RATIO
  },
  opacity: {
    value: 1.0,
    type: 'constant'
  },
  translateY: {
    from: 0,
    to: -SCREEN_HEIGHT,
    min: 0,
    max: 1,
    type: 'linear',
    extrapolate: true,
    round: PIXEL_RATIO
  }
};

var ToTheDown = {
  transformTranslate: {
    from: { x: 0, y: 0, z: 0 },
    to: { x: 0, y: SCREEN_HEIGHT, z: 0 },
    min: 0,
    max: 1,
    type: 'linear',
    extrapolate: true,
    round: PIXEL_RATIO
  },
  opacity: {
    value: 1.0,
    type: 'constant'
  },
  translateY: {
    from: 0,
    to: SCREEN_HEIGHT,
    min: 0,
    max: 1,
    type: 'linear',
    extrapolate: true,
    round: PIXEL_RATIO
  }
};

var FromTheRight = {
  opacity: {
    value: 1.0,
    type: 'constant'
  },

  transformTranslate: {
    from: { x: SCREEN_WIDTH, y: 0, z: 0 },
    to: { x: 0, y: 0, z: 0 },
    min: 0,
    max: 1,
    type: 'linear',
    extrapolate: true,
    round: PIXEL_RATIO
  },

  translateX: {
    from: SCREEN_WIDTH,
    to: 0,
    min: 0,
    max: 1,
    type: 'linear',
    extrapolate: true,
    round: PIXEL_RATIO
  },

  scaleX: {
    value: 1,
    type: 'constant'
  },
  scaleY: {
    value: 1,
    type: 'constant'
  }
};

var FromTheLeft = babelHelpers.extends({}, FromTheRight, {
  transformTranslate: {
    from: { x: -SCREEN_WIDTH, y: 0, z: 0 },
    to: { x: 0, y: 0, z: 0 },
    min: 0,
    max: 1,
    type: 'linear',
    extrapolate: true,
    round: PIXEL_RATIO
  },
  translateX: {
    from: -SCREEN_WIDTH,
    to: 0,
    min: 0,
    max: 1,
    type: 'linear',
    extrapolate: true,
    round: PIXEL_RATIO
  }
});

var FromTheDown = babelHelpers.extends({}, FromTheRight, {
  transformTranslate: {
    from: { y: SCREEN_HEIGHT, x: 0, z: 0 },
    to: { x: 0, y: 0, z: 0 },
    min: 0,
    max: 1,
    type: 'linear',
    extrapolate: true,
    round: PIXEL_RATIO
  },
  translateY: {
    from: SCREEN_HEIGHT,
    to: 0,
    min: 0,
    max: 1,
    type: 'linear',
    extrapolate: true,
    round: PIXEL_RATIO
  }
});

var FromTheTop = babelHelpers.extends({}, FromTheRight, {
  transformTranslate: {
    from: { y: -SCREEN_HEIGHT, x: 0, z: 0 },
    to: { x: 0, y: 0, z: 0 },
    min: 0,
    max: 1,
    type: 'linear',
    extrapolate: true,
    round: PIXEL_RATIO
  },
  translateY: {
    from: -SCREEN_HEIGHT,
    to: 0,
    min: 0,
    max: 1,
    type: 'linear',
    extrapolate: true,
    round: PIXEL_RATIO
  }
});

var ToTheBack = {
  transformTranslate: {
    from: { x: 0, y: 0, z: 0 },
    to: { x: 0, y: 0, z: 0 },
    min: 0,
    max: 1,
    type: 'linear',
    extrapolate: true,
    round: PIXEL_RATIO
  },
  transformScale: {
    from: { x: 1, y: 1, z: 1 },
    to: { x: 0.95, y: 0.95, z: 1 },
    min: 0,
    max: 1,
    type: 'linear',
    extrapolate: true
  },
  opacity: {
    from: 1,
    to: 0.3,
    min: 0,
    max: 1,
    type: 'linear',
    extrapolate: false,
    round: 100
  },
  scaleX: {
    from: 1,
    to: 0.95,
    min: 0,
    max: 1,
    type: 'linear',
    extrapolate: true
  },
  scaleY: {
    from: 1,
    to: 0.95,
    min: 0,
    max: 1,
    type: 'linear',
    extrapolate: true
  }
};

var FromTheFront = {
  opacity: {
    value: 1.0,
    type: 'constant'
  },

  transformTranslate: {
    from: { x: 0, y: SCREEN_HEIGHT, z: 0 },
    to: { x: 0, y: 0, z: 0 },
    min: 0,
    max: 1,
    type: 'linear',
    extrapolate: true,
    round: PIXEL_RATIO
  },
  translateY: {
    from: SCREEN_HEIGHT,
    to: 0,
    min: 0,
    max: 1,
    type: 'linear',
    extrapolate: true,
    round: PIXEL_RATIO
  },
  scaleX: {
    value: 1,
    type: 'constant'
  },
  scaleY: {
    value: 1,
    type: 'constant'
  }
};

var ToTheBackAndroid = {
  opacity: {
    value: 1,
    type: 'constant'
  }
};

var FromTheFrontAndroid = {
  opacity: {
    from: 0,
    to: 1,
    min: 0.5,
    max: 1,
    type: 'linear',
    extrapolate: false,
    round: 100
  },
  transformTranslate: {
    from: { x: 0, y: 100, z: 0 },
    to: { x: 0, y: 0, z: 0 },
    min: 0,
    max: 1,
    type: 'linear',
    extrapolate: true,
    round: PIXEL_RATIO
  },
  translateY: {
    from: 100,
    to: 0,
    min: 0,
    max: 1,
    type: 'linear',
    extrapolate: true,
    round: PIXEL_RATIO
  }
};

var BaseOverswipeConfig = {
  frictionConstant: 1,
  frictionByDistance: 1.5
};

var BaseLeftToRightGesture = {
  isDetachable: false,

  gestureDetectMovement: 2,

  notMoving: 0.3,

  directionRatio: 0.66,

  snapVelocity: 2,

  edgeHitWidth: 30,

  stillCompletionRatio: 3 / 5,

  fullDistance: SCREEN_WIDTH,

  direction: 'left-to-right'

};

var BaseRightToLeftGesture = babelHelpers.extends({}, BaseLeftToRightGesture, {
  direction: 'right-to-left'
});

var BaseDownUpGesture = babelHelpers.extends({}, BaseLeftToRightGesture, {
  fullDistance: SCREEN_HEIGHT,
  direction: 'bottom-to-top'
});

var BaseUpDownGesture = babelHelpers.extends({}, BaseLeftToRightGesture, {
  fullDistance: SCREEN_HEIGHT,
  direction: 'top-to-bottom'
});

var directionMapping = {
  ToTheStartIOS: ToTheLeftIOS,
  ToTheEndIOS: ToTheRightIOS,
  FadeToTheStart: FadeToTheLeft,
  FadeToTheEnd: FadeToTheRight,
  ToTheStart: ToTheLeft,
  ToTheEnd: ToTheRight,
  FromTheStart: FromTheLeft,
  FromTheEnd: FromTheRight,
  BaseStartToEndGesture: BaseLeftToRightGesture,
  BaseEndToStartGesture: BaseRightToLeftGesture
};

if (IS_RTL) {
  directionMapping = {
    ToTheStartIOS: ToTheRightIOS,
    ToTheEndIOS: ToTheLeftIOS,
    FadeToTheStart: FadeToTheRight,
    FadeToTheEnd: FadeToTheLeft,
    ToTheStart: ToTheRight,
    ToTheEnd: ToTheLeft,
    FromTheStart: FromTheRight,
    FromTheEnd: FromTheLeft,
    BaseStartToEndGesture: BaseRightToLeftGesture,
    BaseEndToStartGesture: BaseLeftToRightGesture
  };
}

var BaseConfig = {
  gestures: {
    pop: directionMapping.BaseStartToEndGesture
  },

  springFriction: 26,
  springTension: 200,

  defaultTransitionVelocity: 1.5,

  animationInterpolators: {
    into: buildStyleInterpolator(directionMapping.FromTheEnd),
    out: buildStyleInterpolator(directionMapping.FadeToTheStart)
  }
};

var NavigatorSceneConfigs = {
  PushFromRight: babelHelpers.extends({}, BaseConfig, {
    animationInterpolators: {
      into: buildStyleInterpolator(directionMapping.FromTheEnd),
      out: buildStyleInterpolator(directionMapping.ToTheStartIOS)
    }
  }),
  PushFromLeft: babelHelpers.extends({}, BaseConfig, {
    animationInterpolators: {
      into: buildStyleInterpolator(directionMapping.FromTheStart),
      out: buildStyleInterpolator(directionMapping.ToTheEndIOS)
    }
  }),
  FloatFromRight: babelHelpers.extends({}, BaseConfig),
  FloatFromLeft: babelHelpers.extends({}, BaseConfig, {
    gestures: {
      pop: directionMapping.BaseEndToStartGesture
    },
    animationInterpolators: {
      into: buildStyleInterpolator(directionMapping.FromTheStart),
      out: buildStyleInterpolator(directionMapping.FadeToTheEnd)
    }
  }),
  FloatFromBottom: babelHelpers.extends({}, BaseConfig, {
    gestures: {
      pop: babelHelpers.extends({}, directionMapping.BaseStartToEndGesture, {
        edgeHitWidth: 150,
        direction: 'top-to-bottom',
        fullDistance: SCREEN_HEIGHT
      })
    },
    animationInterpolators: {
      into: buildStyleInterpolator(FromTheFront),
      out: buildStyleInterpolator(ToTheBack)
    }
  }),
  FloatFromBottomAndroid: babelHelpers.extends({}, BaseConfig, {
    gestures: null,
    defaultTransitionVelocity: 3,
    springFriction: 20,
    animationInterpolators: {
      into: buildStyleInterpolator(FromTheFrontAndroid),
      out: buildStyleInterpolator(ToTheBackAndroid)
    }
  }),
  FadeAndroid: babelHelpers.extends({}, BaseConfig, {
    gestures: null,
    animationInterpolators: {
      into: buildStyleInterpolator(FadeIn),
      out: buildStyleInterpolator(FadeOut)
    }
  }),
  SwipeFromLeft: babelHelpers.extends({}, BaseConfig, {
    gestures: {
      jumpBack: babelHelpers.extends({}, directionMapping.BaseEndToStartGesture, {
        overswipe: BaseOverswipeConfig,
        edgeHitWidth: null,
        isDetachable: true
      }),
      jumpForward: babelHelpers.extends({}, directionMapping.BaseStartToEndGesture, {
        overswipe: BaseOverswipeConfig,
        edgeHitWidth: null,
        isDetachable: true
      })
    },
    animationInterpolators: {
      into: buildStyleInterpolator(directionMapping.FromTheStart),
      out: buildStyleInterpolator(directionMapping.ToTheEnd)
    }
  }),
  HorizontalSwipeJump: babelHelpers.extends({}, BaseConfig, {
    gestures: {
      jumpBack: babelHelpers.extends({}, directionMapping.BaseStartToEndGesture, {
        overswipe: BaseOverswipeConfig,
        edgeHitWidth: null,
        isDetachable: true
      }),
      jumpForward: babelHelpers.extends({}, directionMapping.BaseEndToStartGesture, {
        overswipe: BaseOverswipeConfig,
        edgeHitWidth: null,
        isDetachable: true
      })
    },
    animationInterpolators: {
      into: buildStyleInterpolator(directionMapping.FromTheEnd),
      out: buildStyleInterpolator(directionMapping.ToTheStart)
    }
  }),
  HorizontalSwipeJumpFromRight: babelHelpers.extends({}, BaseConfig, {
    gestures: {
      jumpBack: babelHelpers.extends({}, directionMapping.BaseEndToStartGesture, {
        overswipe: BaseOverswipeConfig,
        edgeHitWidth: null,
        isDetachable: true
      }),
      jumpForward: babelHelpers.extends({}, directionMapping.BaseStartToEndGesture, {
        overswipe: BaseOverswipeConfig,
        edgeHitWidth: null,
        isDetachable: true
      }),
      pop: directionMapping.BaseEndToStartGesture
    },
    animationInterpolators: {
      into: buildStyleInterpolator(directionMapping.FromTheStart),
      out: buildStyleInterpolator(directionMapping.FadeToTheEnd)
    }
  }),
  HorizontalSwipeJumpFromLeft: babelHelpers.extends({}, BaseConfig, {
    gestures: {
      jumpBack: babelHelpers.extends({}, directionMapping.BaseEndToStartGesture, {
        overswipe: BaseOverswipeConfig,
        edgeHitWidth: null,
        isDetachable: true
      }),
      jumpForward: babelHelpers.extends({}, directionMapping.BaseStartToEndGesture, {
        overswipe: BaseOverswipeConfig,
        edgeHitWidth: null,
        isDetachable: true
      }),
      pop: directionMapping.BaseEndToStartGesture
    },
    animationInterpolators: {
      into: buildStyleInterpolator(directionMapping.FromTheStart),
      out: buildStyleInterpolator(directionMapping.ToTheEnd)
    }
  }),
  VerticalUpSwipeJump: babelHelpers.extends({}, BaseConfig, {
    gestures: {
      jumpBack: babelHelpers.extends({}, BaseUpDownGesture, {
        overswipe: BaseOverswipeConfig,
        edgeHitWidth: null,
        isDetachable: true
      }),
      jumpForward: babelHelpers.extends({}, BaseDownUpGesture, {
        overswipe: BaseOverswipeConfig,
        edgeHitWidth: null,
        isDetachable: true
      })
    },
    animationInterpolators: {
      into: buildStyleInterpolator(FromTheDown),
      out: buildStyleInterpolator(ToTheUp)
    }
  }),
  VerticalDownSwipeJump: babelHelpers.extends({}, BaseConfig, {
    gestures: {
      jumpBack: babelHelpers.extends({}, BaseDownUpGesture, {
        overswipe: BaseOverswipeConfig,
        edgeHitWidth: null,
        isDetachable: true
      }),
      jumpForward: babelHelpers.extends({}, BaseUpDownGesture, {
        overswipe: BaseOverswipeConfig,
        edgeHitWidth: null,
        isDetachable: true
      })
    },
    animationInterpolators: {
      into: buildStyleInterpolator(FromTheTop),
      out: buildStyleInterpolator(ToTheDown)
    }
  })
};

module.exports = NavigatorSceneConfigs;
}, 642, null, "NavigatorSceneConfigs");
__d(/* PanResponder */function(global, require, module, exports) {

'use strict';

var InteractionManager = require(575                   ); // 575 = ./InteractionManager
var TouchHistoryMath = require(644               ); // 644 = TouchHistoryMath

var currentCentroidXOfTouchesChangedAfter = TouchHistoryMath.currentCentroidXOfTouchesChangedAfter;
var currentCentroidYOfTouchesChangedAfter = TouchHistoryMath.currentCentroidYOfTouchesChangedAfter;
var previousCentroidXOfTouchesChangedAfter = TouchHistoryMath.previousCentroidXOfTouchesChangedAfter;
var previousCentroidYOfTouchesChangedAfter = TouchHistoryMath.previousCentroidYOfTouchesChangedAfter;
var currentCentroidX = TouchHistoryMath.currentCentroidX;
var currentCentroidY = TouchHistoryMath.currentCentroidY;

var PanResponder = {

  _initializeGestureState: function _initializeGestureState(gestureState) {
    gestureState.moveX = 0;
    gestureState.moveY = 0;
    gestureState.x0 = 0;
    gestureState.y0 = 0;
    gestureState.dx = 0;
    gestureState.dy = 0;
    gestureState.vx = 0;
    gestureState.vy = 0;
    gestureState.numberActiveTouches = 0;

    gestureState._accountsForMovesUpTo = 0;
  },

  _updateGestureStateOnMove: function _updateGestureStateOnMove(gestureState, touchHistory) {
    gestureState.numberActiveTouches = touchHistory.numberActiveTouches;
    gestureState.moveX = currentCentroidXOfTouchesChangedAfter(touchHistory, gestureState._accountsForMovesUpTo);
    gestureState.moveY = currentCentroidYOfTouchesChangedAfter(touchHistory, gestureState._accountsForMovesUpTo);
    var movedAfter = gestureState._accountsForMovesUpTo;
    var prevX = previousCentroidXOfTouchesChangedAfter(touchHistory, movedAfter);
    var x = currentCentroidXOfTouchesChangedAfter(touchHistory, movedAfter);
    var prevY = previousCentroidYOfTouchesChangedAfter(touchHistory, movedAfter);
    var y = currentCentroidYOfTouchesChangedAfter(touchHistory, movedAfter);
    var nextDX = gestureState.dx + (x - prevX);
    var nextDY = gestureState.dy + (y - prevY);

    var dt = touchHistory.mostRecentTimeStamp - gestureState._accountsForMovesUpTo;
    gestureState.vx = (nextDX - gestureState.dx) / dt;
    gestureState.vy = (nextDY - gestureState.dy) / dt;

    gestureState.dx = nextDX;
    gestureState.dy = nextDY;
    gestureState._accountsForMovesUpTo = touchHistory.mostRecentTimeStamp;
  },

  create: function create(config) {
    var interactionState = {
      handle: null
    };
    var gestureState = {
      stateID: Math.random()
    };
    PanResponder._initializeGestureState(gestureState);
    var panHandlers = {
      onStartShouldSetResponder: function onStartShouldSetResponder(e) {
        return config.onStartShouldSetPanResponder === undefined ? false : config.onStartShouldSetPanResponder(e, gestureState);
      },
      onMoveShouldSetResponder: function onMoveShouldSetResponder(e) {
        return config.onMoveShouldSetPanResponder === undefined ? false : config.onMoveShouldSetPanResponder(e, gestureState);
      },
      onStartShouldSetResponderCapture: function onStartShouldSetResponderCapture(e) {
        if (e.nativeEvent.touches.length === 1) {
          PanResponder._initializeGestureState(gestureState);
        }
        gestureState.numberActiveTouches = e.touchHistory.numberActiveTouches;
        return config.onStartShouldSetPanResponderCapture !== undefined ? config.onStartShouldSetPanResponderCapture(e, gestureState) : false;
      },

      onMoveShouldSetResponderCapture: function onMoveShouldSetResponderCapture(e) {
        var touchHistory = e.touchHistory;

        if (gestureState._accountsForMovesUpTo === touchHistory.mostRecentTimeStamp) {
          return false;
        }
        PanResponder._updateGestureStateOnMove(gestureState, touchHistory);
        return config.onMoveShouldSetPanResponderCapture ? config.onMoveShouldSetPanResponderCapture(e, gestureState) : false;
      },

      onResponderGrant: function onResponderGrant(e) {
        if (!interactionState.handle) {
          interactionState.handle = InteractionManager.createInteractionHandle();
        }
        gestureState.x0 = currentCentroidX(e.touchHistory);
        gestureState.y0 = currentCentroidY(e.touchHistory);
        gestureState.dx = 0;
        gestureState.dy = 0;
        if (config.onPanResponderGrant) {
          config.onPanResponderGrant(e, gestureState);
        }

        return config.onShouldBlockNativeResponder === undefined ? true : config.onShouldBlockNativeResponder();
      },

      onResponderReject: function onResponderReject(e) {
        clearInteractionHandle(interactionState, config.onPanResponderReject, e, gestureState);
      },

      onResponderRelease: function onResponderRelease(e) {
        clearInteractionHandle(interactionState, config.onPanResponderRelease, e, gestureState);
        PanResponder._initializeGestureState(gestureState);
      },

      onResponderStart: function onResponderStart(e) {
        var touchHistory = e.touchHistory;
        gestureState.numberActiveTouches = touchHistory.numberActiveTouches;
        if (config.onPanResponderStart) {
          config.onPanResponderStart(e, gestureState);
        }
      },

      onResponderMove: function onResponderMove(e) {
        var touchHistory = e.touchHistory;

        if (gestureState._accountsForMovesUpTo === touchHistory.mostRecentTimeStamp) {
          return;
        }

        PanResponder._updateGestureStateOnMove(gestureState, touchHistory);
        if (config.onPanResponderMove) {
          config.onPanResponderMove(e, gestureState);
        }
      },

      onResponderEnd: function onResponderEnd(e) {
        var touchHistory = e.touchHistory;
        gestureState.numberActiveTouches = touchHistory.numberActiveTouches;
        clearInteractionHandle(interactionState, config.onPanResponderEnd, e, gestureState);
      },

      onResponderTerminate: function onResponderTerminate(e) {
        clearInteractionHandle(interactionState, config.onPanResponderTerminate, e, gestureState);
        PanResponder._initializeGestureState(gestureState);
      },

      onResponderTerminationRequest: function onResponderTerminationRequest(e) {
        return config.onPanResponderTerminationRequest === undefined ? true : config.onPanResponderTerminationRequest(e, gestureState);
      }
    };
    return {
      panHandlers: panHandlers,
      getInteractionHandle: function getInteractionHandle() {
        return interactionState.handle;
      }
    };
  }
};

function clearInteractionHandle(interactionState, callback, event, gestureState) {
  if (interactionState.handle) {
    InteractionManager.clearInteractionHandle(interactionState.handle);
    interactionState.handle = null;
  }
  if (callback) {
    callback(event, gestureState);
  }
}

module.exports = PanResponder;
}, 643, null, "PanResponder");
__d(/* TouchHistoryMath */function(global, require, module, exports) {

'use strict';

var TouchHistoryMath = {
  centroidDimension: function centroidDimension(touchHistory, touchesChangedAfter, isXAxis, ofCurrent) {
    var touchBank = touchHistory.touchBank;
    var total = 0;
    var count = 0;

    var oneTouchData = touchHistory.numberActiveTouches === 1 ? touchHistory.touchBank[touchHistory.indexOfSingleActiveTouch] : null;

    if (oneTouchData !== null) {
      if (oneTouchData.touchActive && oneTouchData.currentTimeStamp > touchesChangedAfter) {
        total += ofCurrent && isXAxis ? oneTouchData.currentPageX : ofCurrent && !isXAxis ? oneTouchData.currentPageY : !ofCurrent && isXAxis ? oneTouchData.previousPageX : oneTouchData.previousPageY;
        count = 1;
      }
    } else {
      for (var i = 0; i < touchBank.length; i++) {
        var touchTrack = touchBank[i];
        if (touchTrack !== null && touchTrack !== undefined && touchTrack.touchActive && touchTrack.currentTimeStamp >= touchesChangedAfter) {
          var toAdd;
          if (ofCurrent && isXAxis) {
            toAdd = touchTrack.currentPageX;
          } else if (ofCurrent && !isXAxis) {
            toAdd = touchTrack.currentPageY;
          } else if (!ofCurrent && isXAxis) {
            toAdd = touchTrack.previousPageX;
          } else {
            toAdd = touchTrack.previousPageY;
          }
          total += toAdd;
          count++;
        }
      }
    }
    return count > 0 ? total / count : TouchHistoryMath.noCentroid;
  },

  currentCentroidXOfTouchesChangedAfter: function currentCentroidXOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
    return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, true, true);
  },

  currentCentroidYOfTouchesChangedAfter: function currentCentroidYOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
    return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, false, true);
  },

  previousCentroidXOfTouchesChangedAfter: function previousCentroidXOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
    return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, true, false);
  },

  previousCentroidYOfTouchesChangedAfter: function previousCentroidYOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
    return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, false, false);
  },

  currentCentroidX: function currentCentroidX(touchHistory) {
    return TouchHistoryMath.centroidDimension(touchHistory, 0, true, true);
  },

  currentCentroidY: function currentCentroidY(touchHistory) {
    return TouchHistoryMath.centroidDimension(touchHistory, 0, false, true);
  },

  noCentroid: -1
};

module.exports = TouchHistoryMath;
}, 644, null, "TouchHistoryMath");
__d(/* clamp */function(global, require, module, exports) {
'use strict';

function clamp(min, value, max) {
  if (value < min) {
    return min;
  }
  if (value > max) {
    return max;
  }
  return value;
}

module.exports = clamp;
}, 645, null, "clamp");
__d(/* rebound/rebound.js */function(global, require, module, exports) {

(function () {
  var rebound = {};
  var util = rebound.util = {};
  var concat = Array.prototype.concat;
  var slice = Array.prototype.slice;

  util.bind = function bind(func, context) {
    var args = slice.call(arguments, 2);
    return function () {
      func.apply(context, concat.call(args, slice.call(arguments)));
    };
  };

  util.extend = function extend(target, source) {
    for (var key in source) {
      if (source.hasOwnProperty(key)) {
        target[key] = source[key];
      }
    }
  };

  var SpringSystem = rebound.SpringSystem = function SpringSystem(looper) {
    this._springRegistry = {};
    this._activeSprings = [];
    this.listeners = [];
    this._idleSpringIndices = [];
    this.looper = looper || new AnimationLooper();
    this.looper.springSystem = this;
  };

  util.extend(SpringSystem.prototype, {

    _springRegistry: null,

    _isIdle: true,

    _lastTimeMillis: -1,

    _activeSprings: null,

    listeners: null,

    _idleSpringIndices: null,

    setLooper: function setLooper(looper) {
      this.looper = looper;
      looper.springSystem = this;
    },

    createSpring: function createSpring(tension, friction) {
      var springConfig;
      if (tension === undefined || friction === undefined) {
        springConfig = SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG;
      } else {
        springConfig = SpringConfig.fromOrigamiTensionAndFriction(tension, friction);
      }
      return this.createSpringWithConfig(springConfig);
    },

    createSpringWithBouncinessAndSpeed: function createSpringWithBouncinessAndSpeed(bounciness, speed) {
      var springConfig;
      if (bounciness === undefined || speed === undefined) {
        springConfig = SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG;
      } else {
        springConfig = SpringConfig.fromBouncinessAndSpeed(bounciness, speed);
      }
      return this.createSpringWithConfig(springConfig);
    },

    createSpringWithConfig: function createSpringWithConfig(springConfig) {
      var spring = new Spring(this);
      this.registerSpring(spring);
      spring.setSpringConfig(springConfig);
      return spring;
    },

    getIsIdle: function getIsIdle() {
      return this._isIdle;
    },

    getSpringById: function getSpringById(id) {
      return this._springRegistry[id];
    },

    getAllSprings: function getAllSprings() {
      var vals = [];
      for (var id in this._springRegistry) {
        if (this._springRegistry.hasOwnProperty(id)) {
          vals.push(this._springRegistry[id]);
        }
      }
      return vals;
    },

    registerSpring: function registerSpring(spring) {
      this._springRegistry[spring.getId()] = spring;
    },

    deregisterSpring: function deregisterSpring(spring) {
      removeFirst(this._activeSprings, spring);
      delete this._springRegistry[spring.getId()];
    },

    advance: function advance(time, deltaTime) {
      while (this._idleSpringIndices.length > 0) {
        this._idleSpringIndices.pop();
      }for (var i = 0, len = this._activeSprings.length; i < len; i++) {
        var spring = this._activeSprings[i];
        if (spring.systemShouldAdvance()) {
          spring.advance(time / 1000.0, deltaTime / 1000.0);
        } else {
          this._idleSpringIndices.push(this._activeSprings.indexOf(spring));
        }
      }
      while (this._idleSpringIndices.length > 0) {
        var idx = this._idleSpringIndices.pop();
        idx >= 0 && this._activeSprings.splice(idx, 1);
      }
    },

    loop: function loop(currentTimeMillis) {
      var listener;
      if (this._lastTimeMillis === -1) {
        this._lastTimeMillis = currentTimeMillis - 1;
      }
      var ellapsedMillis = currentTimeMillis - this._lastTimeMillis;
      this._lastTimeMillis = currentTimeMillis;

      var i = 0,
          len = this.listeners.length;
      for (i = 0; i < len; i++) {
        listener = this.listeners[i];
        listener.onBeforeIntegrate && listener.onBeforeIntegrate(this);
      }

      this.advance(currentTimeMillis, ellapsedMillis);
      if (this._activeSprings.length === 0) {
        this._isIdle = true;
        this._lastTimeMillis = -1;
      }

      for (i = 0; i < len; i++) {
        listener = this.listeners[i];
        listener.onAfterIntegrate && listener.onAfterIntegrate(this);
      }

      if (!this._isIdle) {
        this.looper.run();
      }
    },

    activateSpring: function activateSpring(springId) {
      var spring = this._springRegistry[springId];
      if (this._activeSprings.indexOf(spring) == -1) {
        this._activeSprings.push(spring);
      }
      if (this.getIsIdle()) {
        this._isIdle = false;
        this.looper.run();
      }
    },

    addListener: function addListener(listener) {
      this.listeners.push(listener);
    },

    removeListener: function removeListener(listener) {
      removeFirst(this.listeners, listener);
    },

    removeAllListeners: function removeAllListeners() {
      this.listeners = [];
    }

  });

  var Spring = rebound.Spring = function Spring(springSystem) {
    this._id = 's' + Spring._ID++;
    this._springSystem = springSystem;
    this.listeners = [];
    this._currentState = new PhysicsState();
    this._previousState = new PhysicsState();
    this._tempState = new PhysicsState();
  };

  util.extend(Spring, {
    _ID: 0,

    MAX_DELTA_TIME_SEC: 0.064,

    SOLVER_TIMESTEP_SEC: 0.001

  });

  util.extend(Spring.prototype, {

    _id: 0,

    _springConfig: null,

    _overshootClampingEnabled: false,

    _currentState: null,

    _previousState: null,

    _tempState: null,

    _startValue: 0,

    _endValue: 0,

    _wasAtRest: true,

    _restSpeedThreshold: 0.001,

    _displacementFromRestThreshold: 0.001,

    listeners: null,

    _timeAccumulator: 0,

    _springSystem: null,

    destroy: function destroy() {
      this.listeners = [];
      this.frames = [];
      this._springSystem.deregisterSpring(this);
    },

    getId: function getId() {
      return this._id;
    },

    setSpringConfig: function setSpringConfig(springConfig) {
      this._springConfig = springConfig;
      return this;
    },

    getSpringConfig: function getSpringConfig() {
      return this._springConfig;
    },

    setCurrentValue: function setCurrentValue(currentValue, skipSetAtRest) {
      this._startValue = currentValue;
      this._currentState.position = currentValue;
      if (!skipSetAtRest) {
        this.setAtRest();
      }
      this.notifyPositionUpdated(false, false);
      return this;
    },

    getStartValue: function getStartValue() {
      return this._startValue;
    },

    getCurrentValue: function getCurrentValue() {
      return this._currentState.position;
    },

    getCurrentDisplacementDistance: function getCurrentDisplacementDistance() {
      return this.getDisplacementDistanceForState(this._currentState);
    },

    getDisplacementDistanceForState: function getDisplacementDistanceForState(state) {
      return Math.abs(this._endValue - state.position);
    },

    setEndValue: function setEndValue(endValue) {
      if (this._endValue == endValue && this.isAtRest()) {
        return this;
      }
      this._startValue = this.getCurrentValue();
      this._endValue = endValue;
      this._springSystem.activateSpring(this.getId());
      for (var i = 0, len = this.listeners.length; i < len; i++) {
        var listener = this.listeners[i];
        var onChange = listener.onSpringEndStateChange;
        onChange && onChange(this);
      }
      return this;
    },

    getEndValue: function getEndValue() {
      return this._endValue;
    },

    setVelocity: function setVelocity(velocity) {
      if (velocity === this._currentState.velocity) {
        return this;
      }
      this._currentState.velocity = velocity;
      this._springSystem.activateSpring(this.getId());
      return this;
    },

    getVelocity: function getVelocity() {
      return this._currentState.velocity;
    },

    setRestSpeedThreshold: function setRestSpeedThreshold(restSpeedThreshold) {
      this._restSpeedThreshold = restSpeedThreshold;
      return this;
    },

    getRestSpeedThreshold: function getRestSpeedThreshold() {
      return this._restSpeedThreshold;
    },

    setRestDisplacementThreshold: function setRestDisplacementThreshold(displacementFromRestThreshold) {
      this._displacementFromRestThreshold = displacementFromRestThreshold;
    },

    getRestDisplacementThreshold: function getRestDisplacementThreshold() {
      return this._displacementFromRestThreshold;
    },

    setOvershootClampingEnabled: function setOvershootClampingEnabled(enabled) {
      this._overshootClampingEnabled = enabled;
      return this;
    },

    isOvershootClampingEnabled: function isOvershootClampingEnabled() {
      return this._overshootClampingEnabled;
    },

    isOvershooting: function isOvershooting() {
      var start = this._startValue;
      var end = this._endValue;
      return this._springConfig.tension > 0 && (start < end && this.getCurrentValue() > end || start > end && this.getCurrentValue() < end);
    },

    advance: function advance(time, realDeltaTime) {
      var isAtRest = this.isAtRest();

      if (isAtRest && this._wasAtRest) {
        return;
      }

      var adjustedDeltaTime = realDeltaTime;
      if (realDeltaTime > Spring.MAX_DELTA_TIME_SEC) {
        adjustedDeltaTime = Spring.MAX_DELTA_TIME_SEC;
      }

      this._timeAccumulator += adjustedDeltaTime;

      var tension = this._springConfig.tension,
          friction = this._springConfig.friction,
          position = this._currentState.position,
          velocity = this._currentState.velocity,
          tempPosition = this._tempState.position,
          tempVelocity = this._tempState.velocity,
          aVelocity,
          aAcceleration,
          bVelocity,
          bAcceleration,
          cVelocity,
          cAcceleration,
          dVelocity,
          dAcceleration,
          dxdt,
          dvdt;

      while (this._timeAccumulator >= Spring.SOLVER_TIMESTEP_SEC) {

        this._timeAccumulator -= Spring.SOLVER_TIMESTEP_SEC;

        if (this._timeAccumulator < Spring.SOLVER_TIMESTEP_SEC) {
          this._previousState.position = position;
          this._previousState.velocity = velocity;
        }

        aVelocity = velocity;
        aAcceleration = tension * (this._endValue - tempPosition) - friction * velocity;

        tempPosition = position + aVelocity * Spring.SOLVER_TIMESTEP_SEC * 0.5;
        tempVelocity = velocity + aAcceleration * Spring.SOLVER_TIMESTEP_SEC * 0.5;
        bVelocity = tempVelocity;
        bAcceleration = tension * (this._endValue - tempPosition) - friction * tempVelocity;

        tempPosition = position + bVelocity * Spring.SOLVER_TIMESTEP_SEC * 0.5;
        tempVelocity = velocity + bAcceleration * Spring.SOLVER_TIMESTEP_SEC * 0.5;
        cVelocity = tempVelocity;
        cAcceleration = tension * (this._endValue - tempPosition) - friction * tempVelocity;

        tempPosition = position + cVelocity * Spring.SOLVER_TIMESTEP_SEC * 0.5;
        tempVelocity = velocity + cAcceleration * Spring.SOLVER_TIMESTEP_SEC * 0.5;
        dVelocity = tempVelocity;
        dAcceleration = tension * (this._endValue - tempPosition) - friction * tempVelocity;

        dxdt = 1.0 / 6.0 * (aVelocity + 2.0 * (bVelocity + cVelocity) + dVelocity);
        dvdt = 1.0 / 6.0 * (aAcceleration + 2.0 * (bAcceleration + cAcceleration) + dAcceleration);

        position += dxdt * Spring.SOLVER_TIMESTEP_SEC;
        velocity += dvdt * Spring.SOLVER_TIMESTEP_SEC;
      }

      this._tempState.position = tempPosition;
      this._tempState.velocity = tempVelocity;

      this._currentState.position = position;
      this._currentState.velocity = velocity;

      if (this._timeAccumulator > 0) {
        this._interpolate(this._timeAccumulator / Spring.SOLVER_TIMESTEP_SEC);
      }

      if (this.isAtRest() || this._overshootClampingEnabled && this.isOvershooting()) {

        if (this._springConfig.tension > 0) {
          this._startValue = this._endValue;
          this._currentState.position = this._endValue;
        } else {
          this._endValue = this._currentState.position;
          this._startValue = this._endValue;
        }
        this.setVelocity(0);
        isAtRest = true;
      }

      var notifyActivate = false;
      if (this._wasAtRest) {
        this._wasAtRest = false;
        notifyActivate = true;
      }

      var notifyAtRest = false;
      if (isAtRest) {
        this._wasAtRest = true;
        notifyAtRest = true;
      }

      this.notifyPositionUpdated(notifyActivate, notifyAtRest);
    },

    notifyPositionUpdated: function notifyPositionUpdated(notifyActivate, notifyAtRest) {
      for (var i = 0, len = this.listeners.length; i < len; i++) {
        var listener = this.listeners[i];
        if (notifyActivate && listener.onSpringActivate) {
          listener.onSpringActivate(this);
        }

        if (listener.onSpringUpdate) {
          listener.onSpringUpdate(this);
        }

        if (notifyAtRest && listener.onSpringAtRest) {
          listener.onSpringAtRest(this);
        }
      }
    },

    systemShouldAdvance: function systemShouldAdvance() {
      return !this.isAtRest() || !this.wasAtRest();
    },

    wasAtRest: function wasAtRest() {
      return this._wasAtRest;
    },

    isAtRest: function isAtRest() {
      return Math.abs(this._currentState.velocity) < this._restSpeedThreshold && (this.getDisplacementDistanceForState(this._currentState) <= this._displacementFromRestThreshold || this._springConfig.tension === 0);
    },

    setAtRest: function setAtRest() {
      this._endValue = this._currentState.position;
      this._tempState.position = this._currentState.position;
      this._currentState.velocity = 0;
      return this;
    },

    _interpolate: function _interpolate(alpha) {
      this._currentState.position = this._currentState.position * alpha + this._previousState.position * (1 - alpha);
      this._currentState.velocity = this._currentState.velocity * alpha + this._previousState.velocity * (1 - alpha);
    },

    getListeners: function getListeners() {
      return this.listeners;
    },

    addListener: function addListener(newListener) {
      this.listeners.push(newListener);
      return this;
    },

    removeListener: function removeListener(listenerToRemove) {
      removeFirst(this.listeners, listenerToRemove);
      return this;
    },

    removeAllListeners: function removeAllListeners() {
      this.listeners = [];
      return this;
    },

    currentValueIsApproximately: function currentValueIsApproximately(value) {
      return Math.abs(this.getCurrentValue() - value) <= this.getRestDisplacementThreshold();
    }

  });

  var PhysicsState = function PhysicsState() {};

  util.extend(PhysicsState.prototype, {
    position: 0,
    velocity: 0
  });

  var SpringConfig = rebound.SpringConfig = function SpringConfig(tension, friction) {
    this.tension = tension;
    this.friction = friction;
  };

  var AnimationLooper = rebound.AnimationLooper = function AnimationLooper() {
    this.springSystem = null;
    var _this = this;
    var _run = function _run() {
      _this.springSystem.loop(Date.now());
    };

    this.run = function () {
      util.onFrame(_run);
    };
  };

  rebound.SimulationLooper = function SimulationLooper(timestep) {
    this.springSystem = null;
    var time = 0;
    var running = false;
    timestep = timestep || 16.667;

    this.run = function () {
      if (running) {
        return;
      }
      running = true;
      while (!this.springSystem.getIsIdle()) {
        this.springSystem.loop(time += timestep);
      }
      running = false;
    };
  };

  rebound.SteppingSimulationLooper = function (timestep) {
    this.springSystem = null;
    var time = 0;

    this.run = function () {};

    this.step = function (timestep) {
      this.springSystem.loop(time += timestep);
    };
  };

  var OrigamiValueConverter = rebound.OrigamiValueConverter = {
    tensionFromOrigamiValue: function tensionFromOrigamiValue(oValue) {
      return (oValue - 30.0) * 3.62 + 194.0;
    },

    origamiValueFromTension: function origamiValueFromTension(tension) {
      return (tension - 194.0) / 3.62 + 30.0;
    },

    frictionFromOrigamiValue: function frictionFromOrigamiValue(oValue) {
      return (oValue - 8.0) * 3.0 + 25.0;
    },

    origamiFromFriction: function origamiFromFriction(friction) {
      return (friction - 25.0) / 3.0 + 8.0;
    }
  };

  var BouncyConversion = rebound.BouncyConversion = function (bounciness, speed) {
    this.bounciness = bounciness;
    this.speed = speed;
    var b = this.normalize(bounciness / 1.7, 0, 20.0);
    b = this.projectNormal(b, 0.0, 0.8);
    var s = this.normalize(speed / 1.7, 0, 20.0);
    this.bouncyTension = this.projectNormal(s, 0.5, 200);
    this.bouncyFriction = this.quadraticOutInterpolation(b, this.b3Nobounce(this.bouncyTension), 0.01);
  };

  util.extend(BouncyConversion.prototype, {

    normalize: function normalize(value, startValue, endValue) {
      return (value - startValue) / (endValue - startValue);
    },

    projectNormal: function projectNormal(n, start, end) {
      return start + n * (end - start);
    },

    linearInterpolation: function linearInterpolation(t, start, end) {
      return t * end + (1.0 - t) * start;
    },

    quadraticOutInterpolation: function quadraticOutInterpolation(t, start, end) {
      return this.linearInterpolation(2 * t - t * t, start, end);
    },

    b3Friction1: function b3Friction1(x) {
      return 0.0007 * Math.pow(x, 3) - 0.031 * Math.pow(x, 2) + 0.64 * x + 1.28;
    },

    b3Friction2: function b3Friction2(x) {
      return 0.000044 * Math.pow(x, 3) - 0.006 * Math.pow(x, 2) + 0.36 * x + 2.;
    },

    b3Friction3: function b3Friction3(x) {
      return 0.00000045 * Math.pow(x, 3) - 0.000332 * Math.pow(x, 2) + 0.1078 * x + 5.84;
    },

    b3Nobounce: function b3Nobounce(tension) {
      var friction = 0;
      if (tension <= 18) {
        friction = this.b3Friction1(tension);
      } else if (tension > 18 && tension <= 44) {
        friction = this.b3Friction2(tension);
      } else {
        friction = this.b3Friction3(tension);
      }
      return friction;
    }
  });

  util.extend(SpringConfig, {
    fromOrigamiTensionAndFriction: function fromOrigamiTensionAndFriction(tension, friction) {
      return new SpringConfig(OrigamiValueConverter.tensionFromOrigamiValue(tension), OrigamiValueConverter.frictionFromOrigamiValue(friction));
    },

    fromBouncinessAndSpeed: function fromBouncinessAndSpeed(bounciness, speed) {
      var bouncyConversion = new rebound.BouncyConversion(bounciness, speed);
      return this.fromOrigamiTensionAndFriction(bouncyConversion.bouncyTension, bouncyConversion.bouncyFriction);
    },

    coastingConfigWithOrigamiFriction: function coastingConfigWithOrigamiFriction(friction) {
      return new SpringConfig(0, OrigamiValueConverter.frictionFromOrigamiValue(friction));
    }
  });

  SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG = SpringConfig.fromOrigamiTensionAndFriction(40, 7);

  util.extend(SpringConfig.prototype, { friction: 0, tension: 0 });

  var colorCache = {};
  util.hexToRGB = function (color) {
    if (colorCache[color]) {
      return colorCache[color];
    }
    color = color.replace('#', '');
    if (color.length === 3) {
      color = color[0] + color[0] + color[1] + color[1] + color[2] + color[2];
    }
    var parts = color.match(/.{2}/g);

    var ret = {
      r: parseInt(parts[0], 16),
      g: parseInt(parts[1], 16),
      b: parseInt(parts[2], 16)
    };

    colorCache[color] = ret;
    return ret;
  };

  util.rgbToHex = function (r, g, b) {
    r = r.toString(16);
    g = g.toString(16);
    b = b.toString(16);
    r = r.length < 2 ? '0' + r : r;
    g = g.length < 2 ? '0' + g : g;
    b = b.length < 2 ? '0' + b : b;
    return '#' + r + g + b;
  };

  var MathUtil = rebound.MathUtil = {
    mapValueInRange: function mapValueInRange(value, fromLow, fromHigh, toLow, toHigh) {
      var fromRangeSize = fromHigh - fromLow;
      var toRangeSize = toHigh - toLow;
      var valueScale = (value - fromLow) / fromRangeSize;
      return toLow + valueScale * toRangeSize;
    },

    interpolateColor: function interpolateColor(val, startColor, endColor, fromLow, fromHigh, asRGB) {
      fromLow = fromLow === undefined ? 0 : fromLow;
      fromHigh = fromHigh === undefined ? 1 : fromHigh;
      startColor = util.hexToRGB(startColor);
      endColor = util.hexToRGB(endColor);
      var r = Math.floor(util.mapValueInRange(val, fromLow, fromHigh, startColor.r, endColor.r));
      var g = Math.floor(util.mapValueInRange(val, fromLow, fromHigh, startColor.g, endColor.g));
      var b = Math.floor(util.mapValueInRange(val, fromLow, fromHigh, startColor.b, endColor.b));
      if (asRGB) {
        return 'rgb(' + r + ',' + g + ',' + b + ')';
      } else {
        return util.rgbToHex(r, g, b);
      }
    },

    degreesToRadians: function degreesToRadians(deg) {
      return deg * Math.PI / 180;
    },

    radiansToDegrees: function radiansToDegrees(rad) {
      return rad * 180 / Math.PI;
    }

  };

  util.extend(util, MathUtil);

  function removeFirst(array, item) {
    var idx = array.indexOf(item);
    idx != -1 && array.splice(idx, 1);
  }

  var _onFrame;
  if (typeof window !== 'undefined') {
    _onFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.msRequestAnimationFrame || window.oRequestAnimationFrame || function (callback) {
      window.setTimeout(callback, 1000 / 60);
    };
  }
  if (!_onFrame && typeof process !== 'undefined' && process.title === 'node') {
    _onFrame = setImmediate;
  }

  util.onFrame = function onFrame(func) {
    return _onFrame(func);
  };

  if (typeof exports != 'undefined') {
    util.extend(exports, rebound);
  } else if (typeof window != 'undefined') {
    window.rebound = rebound;
  }
})();
}, 646, null, "rebound/rebound.js");
__d(/* NavigatorIOS */function(global, require, module, exports) {
'use strict';

module.exports = require(451                ); // 451 = UnimplementedView
}, 647, null, "NavigatorIOS");
__d(/* Picker */function(global, require, module, exports) {

'use strict';

var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native/Libraries/Components/Picker/Picker.js',
    _class,
    _temp;

var ColorPropType = require(338            ); // 338 = ColorPropType
var PickerIOS = require(649        ); // 649 = PickerIOS
var PickerAndroid = require(650            ); // 650 = PickerAndroid
var Platform = require(348       ); // 348 = Platform
var React = require(398    ); // 398 = React
var StyleSheetPropType = require(448                 ); // 448 = StyleSheetPropType
var TextStylePropTypes = require(433                 ); // 433 = TextStylePropTypes
var UnimplementedView = require(451                ); // 451 = UnimplementedView
var View = require(441   ); // 441 = View
var ViewStylePropTypes = require(434                 ); // 434 = ViewStylePropTypes

var itemStylePropType = StyleSheetPropType(TextStylePropTypes);

var pickerStyleType = StyleSheetPropType(babelHelpers.extends({}, ViewStylePropTypes, {
  color: ColorPropType
}));

var MODE_DIALOG = 'dialog';
var MODE_DROPDOWN = 'dropdown';

var Picker = function (_React$Component) {
  babelHelpers.inherits(Picker, _React$Component);

  function Picker() {
    babelHelpers.classCallCheck(this, Picker);
    return babelHelpers.possibleConstructorReturn(this, (Picker.__proto__ || Object.getPrototypeOf(Picker)).apply(this, arguments));
  }

  babelHelpers.createClass(Picker, [{
    key: 'render',
    value: function render() {
      if (Platform.OS === 'ios') {
        return React.createElement(
          PickerIOS,
          babelHelpers.extends({}, this.props, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 119
            }
          }),
          this.props.children
        );
      } else if (Platform.OS === 'android') {
        return React.createElement(
          PickerAndroid,
          babelHelpers.extends({}, this.props, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 122
            }
          }),
          this.props.children
        );
      } else {
        return React.createElement(UnimplementedView, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 124
          }
        });
      }
    }
  }]);
  return Picker;
}(React.Component);

Picker.MODE_DIALOG = MODE_DIALOG;
Picker.MODE_DROPDOWN = MODE_DROPDOWN;
Picker.defaultProps = {
  mode: MODE_DIALOG
};
Picker.propTypes = babelHelpers.extends({}, View.propTypes, {
  style: pickerStyleType,

  selectedValue: React.PropTypes.any,

  onValueChange: React.PropTypes.func,

  enabled: React.PropTypes.bool,

  mode: React.PropTypes.oneOf(['dialog', 'dropdown']),

  itemStyle: itemStylePropType,

  prompt: React.PropTypes.string,

  testID: React.PropTypes.string
});

Picker.Item = (_temp = _class = function (_React$Component2) {
  babelHelpers.inherits(_class, _React$Component2);

  function _class() {
    babelHelpers.classCallCheck(this, _class);
    return babelHelpers.possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));
  }

  babelHelpers.createClass(_class, [{
    key: 'render',
    value: function render() {
      throw null;
    }
  }]);
  return _class;
}(React.Component), _class.propTypes = {
  label: React.PropTypes.string.isRequired,

  value: React.PropTypes.any,

  color: ColorPropType,

  testID: React.PropTypes.string
}, _temp);

module.exports = Picker;
}, 648, null, "Picker");
__d(/* PickerIOS */function(global, require, module, exports) {
'use strict';

module.exports = require(451                ); // 451 = UnimplementedView
}, 649, null, "PickerIOS");
__d(/* PickerAndroid */function(global, require, module, exports) {

'use strict';

var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native/Libraries/Components/Picker/PickerAndroid.android.js';
var ColorPropType = require(338            ); // 338 = ColorPropType
var React = require(398    ); // 398 = React
var StyleSheet = require(421         ); // 421 = StyleSheet
var StyleSheetPropType = require(448                 ); // 448 = StyleSheetPropType
var View = require(441   ); // 441 = View
var ViewStylePropTypes = require(434                 ); // 434 = ViewStylePropTypes

var processColor = require(436           ); // 436 = processColor
var requireNativeComponent = require(450                     ); // 450 = requireNativeComponent

var ReactPropTypes = React.PropTypes;

var REF_PICKER = 'picker';
var MODE_DROPDOWN = 'dropdown';

var pickerStyleType = StyleSheetPropType(babelHelpers.extends({}, ViewStylePropTypes, {
  color: ColorPropType
}));

var PickerAndroid = function (_React$Component) {
  babelHelpers.inherits(PickerAndroid, _React$Component);

  function PickerAndroid(props, context) {
    babelHelpers.classCallCheck(this, PickerAndroid);

    var _this = babelHelpers.possibleConstructorReturn(this, (PickerAndroid.__proto__ || Object.getPrototypeOf(PickerAndroid)).call(this, props, context));

    _initialiseProps.call(_this);

    var state = _this._stateFromProps(props);

    _this.state = babelHelpers.extends({}, state, {
      initialSelectedIndex: state.selectedIndex
    });
    return _this;
  }

  babelHelpers.createClass(PickerAndroid, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      this.setState(this._stateFromProps(nextProps));
    }
  }, {
    key: 'render',
    value: function render() {
      var Picker = this.props.mode === MODE_DROPDOWN ? DropdownPicker : DialogPicker;

      var nativeProps = {
        enabled: this.props.enabled,
        items: this.state.items,
        mode: this.props.mode,
        onSelect: this._onChange,
        prompt: this.props.prompt,
        selected: this.state.initialSelectedIndex,
        testID: this.props.testID,
        style: [styles.pickerAndroid, this.props.style],
        accessibilityLabel: this.props.accessibilityLabel
      };

      return React.createElement(Picker, babelHelpers.extends({ ref: REF_PICKER }, nativeProps, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 112
        }
      }));
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      this._lastNativePosition = this.state.initialSelectedIndex;
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      if (this.refs[REF_PICKER] && this.state.selectedIndex !== this._lastNativePosition) {
        this.refs[REF_PICKER].setNativeProps({ selected: this.state.selectedIndex });
        this._lastNativePosition = this.state.selectedIndex;
      }
    }
  }]);
  return PickerAndroid;
}(React.Component);

PickerAndroid.propTypes = babelHelpers.extends({}, View.propTypes, {
  style: pickerStyleType,
  selectedValue: React.PropTypes.any,
  enabled: ReactPropTypes.bool,
  mode: ReactPropTypes.oneOf(['dialog', 'dropdown']),
  onValueChange: ReactPropTypes.func,
  prompt: ReactPropTypes.string,
  testID: ReactPropTypes.string
});

var _initialiseProps = function _initialiseProps() {
  var _this2 = this;

  this._stateFromProps = function (props) {
    var selectedIndex = 0;
    var items = React.Children.map(props.children, function (child, index) {
      if (child.props.value === props.selectedValue) {
        selectedIndex = index;
      }
      var childProps = {
        value: child.props.value,
        label: child.props.label
      };
      if (child.props.color) {
        childProps.color = processColor(child.props.color);
      }
      return childProps;
    });
    return { selectedIndex: selectedIndex, items: items };
  };

  this._onChange = function (event) {
    if (_this2.props.onValueChange) {
      var position = event.nativeEvent.position;
      if (position >= 0) {
        var value = _this2.props.children[position].props.value;
        _this2.props.onValueChange(value, position);
      } else {
        _this2.props.onValueChange(null, position);
      }
    }
    _this2._lastNativePosition = event.nativeEvent.position;
    _this2.forceUpdate();
  };
};

var styles = StyleSheet.create({
  pickerAndroid: {
    height: 50
  }
});

var cfg = {
  nativeOnly: {
    items: true,
    selected: true
  }
};

var DropdownPicker = requireNativeComponent('AndroidDropdownPicker', PickerAndroid, cfg);
var DialogPicker = requireNativeComponent('AndroidDialogPicker', PickerAndroid, cfg);

module.exports = PickerAndroid;
}, 650, null, "PickerAndroid");
__d(/* ProgressBarAndroid */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native/Libraries/Components/ProgressBarAndroid/ProgressBarAndroid.android.js';
var NativeMethodsMixin = require(341                 ); // 341 = NativeMethodsMixin
var React = require(398    ); // 398 = React
var View = require(441   ); // 441 = View
var ColorPropType = require(338            ); // 338 = ColorPropType

var requireNativeComponent = require(450                     ); // 450 = requireNativeComponent

var ReactPropTypes = React.PropTypes;

var STYLE_ATTRIBUTES = ['Horizontal', 'Normal', 'Small', 'Large', 'Inverse', 'SmallInverse', 'LargeInverse'];

var indeterminateType = function indeterminateType(props, propName, componentName) {
  var checker = function checker() {
    var indeterminate = props[propName];
    var styleAttr = props.styleAttr;
    if (!indeterminate && styleAttr !== 'Horizontal') {
      return new Error('indeterminate=false is only valid for styleAttr=Horizontal');
    }
  };

  return ReactPropTypes.bool(props, propName, componentName) || checker();
};

var ProgressBarAndroid = React.createClass({
  displayName: 'ProgressBarAndroid',

  propTypes: babelHelpers.extends({}, View.propTypes, {
    styleAttr: ReactPropTypes.oneOf(STYLE_ATTRIBUTES),

    indeterminate: indeterminateType,

    progress: ReactPropTypes.number,

    color: ColorPropType,

    testID: ReactPropTypes.string
  }),

  getDefaultProps: function getDefaultProps() {
    return {
      styleAttr: 'Normal',
      indeterminate: true
    };
  },

  mixins: [NativeMethodsMixin],

  componentDidMount: function componentDidMount() {
    if (this.props.indeterminate && this.props.styleAttr !== 'Horizontal') {
      console.warn('Circular indeterminate `ProgressBarAndroid`' + 'is deprecated. Use `ActivityIndicator` instead.');
    }
  },

  render: function render() {
    return React.createElement(AndroidProgressBar, babelHelpers.extends({}, this.props, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 120
      }
    }));
  }
});

var AndroidProgressBar = requireNativeComponent('AndroidProgressBar', ProgressBarAndroid, { nativeOnly: { animating: true } });

module.exports = ProgressBarAndroid;
}, 651, null, "ProgressBarAndroid");
__d(/* ProgressViewIOS */function(global, require, module, exports) {

'use strict';

var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native/Libraries/Components/ProgressViewIOS/ProgressViewIOS.android.js';
var React = require(398    ); // 398 = React
var StyleSheet = require(421         ); // 421 = StyleSheet
var Text = require(505   ); // 505 = Text
var View = require(441   ); // 441 = View

var DummyProgressViewIOS = function (_React$Component) {
  babelHelpers.inherits(DummyProgressViewIOS, _React$Component);

  function DummyProgressViewIOS() {
    babelHelpers.classCallCheck(this, DummyProgressViewIOS);
    return babelHelpers.possibleConstructorReturn(this, (DummyProgressViewIOS.__proto__ || Object.getPrototypeOf(DummyProgressViewIOS)).apply(this, arguments));
  }

  babelHelpers.createClass(DummyProgressViewIOS, [{
    key: 'render',
    value: function render() {
      return React.createElement(
        View,
        { style: [styles.dummy, this.props.style], __source: {
            fileName: _jsxFileName,
            lineNumber: 23
          }
        },
        React.createElement(
          Text,
          { style: styles.text, __source: {
              fileName: _jsxFileName,
              lineNumber: 24
            }
          },
          'ProgressViewIOS is not supported on this platform!'
        )
      );
    }
  }]);
  return DummyProgressViewIOS;
}(React.Component);

var styles = StyleSheet.create({
  dummy: {
    width: 120,
    height: 20,
    backgroundColor: '#ffbcbc',
    borderWidth: 1,
    borderColor: 'red',
    alignItems: 'center',
    justifyContent: 'center'
  },
  text: {
    color: '#333333',
    margin: 5,
    fontSize: 10
  }
});

module.exports = DummyProgressViewIOS;
}, 652, null, "ProgressViewIOS");
__d(/* SegmentedControlIOS */function(global, require, module, exports) {

'use strict';

var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native/Libraries/Components/SegmentedControlIOS/SegmentedControlIOS.android.js';
var React = require(398    ); // 398 = React
var StyleSheet = require(421         ); // 421 = StyleSheet
var Text = require(505   ); // 505 = Text
var View = require(441   ); // 441 = View

var DummySegmentedControlIOS = function (_React$Component) {
  babelHelpers.inherits(DummySegmentedControlIOS, _React$Component);

  function DummySegmentedControlIOS() {
    babelHelpers.classCallCheck(this, DummySegmentedControlIOS);
    return babelHelpers.possibleConstructorReturn(this, (DummySegmentedControlIOS.__proto__ || Object.getPrototypeOf(DummySegmentedControlIOS)).apply(this, arguments));
  }

  babelHelpers.createClass(DummySegmentedControlIOS, [{
    key: 'render',
    value: function render() {
      return React.createElement(
        View,
        { style: [styles.dummy, this.props.style], __source: {
            fileName: _jsxFileName,
            lineNumber: 23
          }
        },
        React.createElement(
          Text,
          { style: styles.text, __source: {
              fileName: _jsxFileName,
              lineNumber: 24
            }
          },
          'SegmentedControlIOS is not supported on this platform!'
        )
      );
    }
  }]);
  return DummySegmentedControlIOS;
}(React.Component);

var styles = StyleSheet.create({
  dummy: {
    width: 120,
    height: 50,
    backgroundColor: '#ffbcbc',
    borderWidth: 1,
    borderColor: 'red',
    alignItems: 'center',
    justifyContent: 'center'
  },
  text: {
    color: '#333333',
    margin: 5,
    fontSize: 10
  }
});

module.exports = DummySegmentedControlIOS;
}, 653, null, "SegmentedControlIOS");
__d(/* Slider */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native/Libraries/Components/Slider/Slider.js';
var Image = require(585    ); // 585 = Image
var ColorPropType = require(338            ); // 338 = ColorPropType
var NativeMethodsMixin = require(341                 ); // 341 = NativeMethodsMixin
var ReactNativeViewAttributes = require(447                        ); // 447 = ReactNativeViewAttributes
var Platform = require(348       ); // 348 = Platform
var React = require(398    ); // 398 = React
var StyleSheet = require(421         ); // 421 = StyleSheet
var View = require(441   ); // 441 = View

var requireNativeComponent = require(450                     ); // 450 = requireNativeComponent

var PropTypes = React.PropTypes;

var Slider = React.createClass({
  displayName: 'Slider',

  mixins: [NativeMethodsMixin],

  propTypes: babelHelpers.extends({}, View.propTypes, {
    style: View.propTypes.style,

    value: PropTypes.number,

    step: PropTypes.number,

    minimumValue: PropTypes.number,

    maximumValue: PropTypes.number,

    minimumTrackTintColor: ColorPropType,

    maximumTrackTintColor: ColorPropType,

    disabled: PropTypes.bool,

    trackImage: Image.propTypes.source,

    minimumTrackImage: Image.propTypes.source,

    maximumTrackImage: Image.propTypes.source,

    thumbImage: Image.propTypes.source,

    thumbTintColor: ColorPropType,

    onValueChange: PropTypes.func,

    onSlidingComplete: PropTypes.func,

    testID: PropTypes.string
  }),

  getDefaultProps: function getDefaultProps() {
    return {
      disabled: false,
      value: 0,
      minimumValue: 0,
      maximumValue: 1,
      step: 0
    };
  },

  viewConfig: {
    uiViewClassName: 'RCTSlider',
    validAttributes: babelHelpers.extends({}, ReactNativeViewAttributes.RCTView, {
      value: true
    })
  },

  render: function render() {
    var _props = this.props,
        style = _props.style,
        onValueChange = _props.onValueChange,
        onSlidingComplete = _props.onSlidingComplete,
        props = babelHelpers.objectWithoutProperties(_props, ['style', 'onValueChange', 'onSlidingComplete']);

    props.style = [styles.slider, style];

    props.onValueChange = onValueChange && function (event) {
      var userEvent = true;
      if (Platform.OS === 'android') {
        userEvent = event.nativeEvent.fromUser;
      }
      onValueChange && userEvent && onValueChange(event.nativeEvent.value);
    };

    props.onChange = props.onValueChange;

    props.onSlidingComplete = onSlidingComplete && function (event) {
      onSlidingComplete && onSlidingComplete(event.nativeEvent.value);
    };

    return React.createElement(RCTSlider, babelHelpers.extends({}, props, {
      enabled: !this.props.disabled,
      onStartShouldSetResponder: function onStartShouldSetResponder() {
        return true;
      },
      onResponderTerminationRequest: function onResponderTerminationRequest() {
        return false;
      },
      __source: {
        fileName: _jsxFileName,
        lineNumber: 177
      }
    }));
  }
});

var styles = void 0;
if (Platform.OS === 'ios') {
  styles = StyleSheet.create({
    slider: {
      height: 40
    }
  });
} else {
  styles = StyleSheet.create({
    slider: {}
  });
}

var options = {};
if (Platform.OS === 'android') {
  options = {
    nativeOnly: {
      enabled: true
    }
  };
}
var RCTSlider = requireNativeComponent('RCTSlider', Slider, options);

module.exports = Slider;
}, 654, null, "Slider");
__d(/* SnapshotViewIOS */function(global, require, module, exports) {
'use strict';

module.exports = require(451                ); // 451 = UnimplementedView
}, 655, null, "SnapshotViewIOS");
__d(/* Switch */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native/Libraries/Components/Switch/Switch.js';
var ColorPropType = require(338            ); // 338 = ColorPropType
var NativeMethodsMixin = require(341                 ); // 341 = NativeMethodsMixin
var Platform = require(348       ); // 348 = Platform
var React = require(398    ); // 398 = React
var StyleSheet = require(421         ); // 421 = StyleSheet
var View = require(441   ); // 441 = View

var requireNativeComponent = require(450                     ); // 450 = requireNativeComponent

var PropTypes = React.PropTypes;

var Switch = React.createClass({
  displayName: 'Switch',

  propTypes: babelHelpers.extends({}, View.propTypes, {
    value: PropTypes.bool,

    disabled: PropTypes.bool,

    onValueChange: PropTypes.func,

    testID: PropTypes.string,

    tintColor: ColorPropType,

    onTintColor: ColorPropType,

    thumbTintColor: ColorPropType
  }),

  getDefaultProps: function getDefaultProps() {
    return {
      value: false,
      disabled: false
    };
  },

  mixins: [NativeMethodsMixin],

  _rctSwitch: {},
  _onChange: function _onChange(event) {
    if (Platform.OS === 'android') {
      this._rctSwitch.setNativeProps({ on: this.props.value });
    } else {
      this._rctSwitch.setNativeProps({ value: this.props.value });
    }

    this.props.onChange && this.props.onChange(event);
    this.props.onValueChange && this.props.onValueChange(event.nativeEvent.value);
  },

  render: function render() {
    var _this = this;

    var props = babelHelpers.extends({}, this.props);
    props.onStartShouldSetResponder = function () {
      return true;
    };
    props.onResponderTerminationRequest = function () {
      return false;
    };
    if (Platform.OS === 'android') {
      props.enabled = !this.props.disabled;
      props.on = this.props.value;
      props.style = this.props.style;
      props.trackTintColor = this.props.value ? this.props.onTintColor : this.props.tintColor;
    } else if (Platform.OS === 'ios') {
      props.style = [styles.rctSwitchIOS, this.props.style];
    }
    return React.createElement(RCTSwitch, babelHelpers.extends({}, props, {
      ref: function ref(_ref) {
        _this._rctSwitch = _ref;
      },
      onChange: this._onChange,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 111
      }
    }));
  }
});

var styles = StyleSheet.create({
  rctSwitchIOS: {
    height: 31,
    width: 51
  }
});

if (Platform.OS === 'android') {
  var RCTSwitch = requireNativeComponent('AndroidSwitch', Switch, {
    nativeOnly: {
      onChange: true,
      on: true,
      enabled: true,
      trackTintColor: true
    }
  });
} else {
  var RCTSwitch = requireNativeComponent('RCTSwitch', Switch, {
    nativeOnly: {
      onChange: true
    }
  });
}

module.exports = Switch;
}, 656, null, "Switch");
__d(/* RefreshControl */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native/Libraries/Components/RefreshControl/RefreshControl.js';
var ColorPropType = require(338            ); // 338 = ColorPropType
var NativeMethodsMixin = require(341                 ); // 341 = NativeMethodsMixin
var Platform = require(348       ); // 348 = Platform
var React = require(398    ); // 398 = React
var View = require(441   ); // 441 = View

var requireNativeComponent = require(450                     ); // 450 = requireNativeComponent

if (Platform.OS === 'android') {
  var RefreshLayoutConsts = require(395        ).AndroidSwipeRefreshLayout.Constants; // 395 = UIManager
} else {
  var RefreshLayoutConsts = { SIZE: {} };
}

var RefreshControl = React.createClass({
  displayName: 'RefreshControl',

  statics: {
    SIZE: RefreshLayoutConsts.SIZE
  },

  mixins: [NativeMethodsMixin],

  propTypes: babelHelpers.extends({}, View.propTypes, {
    onRefresh: React.PropTypes.func,

    refreshing: React.PropTypes.bool.isRequired,

    tintColor: ColorPropType,

    titleColor: ColorPropType,

    title: React.PropTypes.string,

    enabled: React.PropTypes.bool,

    colors: React.PropTypes.arrayOf(ColorPropType),

    progressBackgroundColor: ColorPropType,

    size: React.PropTypes.oneOf([RefreshLayoutConsts.SIZE.DEFAULT, RefreshLayoutConsts.SIZE.LARGE]),

    progressViewOffset: React.PropTypes.number
  }),

  _nativeRef: null,
  _lastNativeRefreshing: false,

  componentDidMount: function componentDidMount() {
    this._lastNativeRefreshing = this.props.refreshing;
  },
  componentDidUpdate: function componentDidUpdate(prevProps) {
    if (this.props.refreshing !== prevProps.refreshing) {
      this._lastNativeRefreshing = this.props.refreshing;
    } else if (this.props.refreshing !== this._lastNativeRefreshing) {
      this._nativeRef.setNativeProps({ refreshing: this.props.refreshing });
      this._lastNativeRefreshing = this.props.refreshing;
    }
  },
  render: function render() {
    var _this = this;

    return React.createElement(NativeRefreshControl, babelHelpers.extends({}, this.props, {
      ref: function ref(_ref) {
        _this._nativeRef = _ref;
      },
      onRefresh: this._onRefresh,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 153
      }
    }));
  },
  _onRefresh: function _onRefresh() {
    this._lastNativeRefreshing = true;

    this.props.onRefresh && this.props.onRefresh();

    this.forceUpdate();
  }
});

if (Platform.OS === 'ios') {
  var NativeRefreshControl = requireNativeComponent('RCTRefreshControl', RefreshControl);
} else if (Platform.OS === 'android') {
  var NativeRefreshControl = requireNativeComponent('AndroidSwipeRefreshLayout', RefreshControl);
}

module.exports = RefreshControl;
}, 657, null, "RefreshControl");
__d(/* SwipeableListView */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native/Libraries/Experimental/SwipeableRow/SwipeableListView.js';
var ListView = require(599       ); // 599 = ListView
var React = require(398    ); // 398 = React
var SwipeableListViewDataSource = require(659                          ); // 659 = SwipeableListViewDataSource
var SwipeableRow = require(660           ); // 660 = SwipeableRow

var PropTypes = React.PropTypes;

var SwipeableListView = function (_React$Component) {
  babelHelpers.inherits(SwipeableListView, _React$Component);
  babelHelpers.createClass(SwipeableListView, null, [{
    key: 'getNewDataSource',
    value: function getNewDataSource() {
      return new SwipeableListViewDataSource({
        getRowData: function getRowData(data, sectionID, rowID) {
          return data[sectionID][rowID];
        },
        getSectionHeaderData: function getSectionHeaderData(data, sectionID) {
          return data[sectionID];
        },
        rowHasChanged: function rowHasChanged(row1, row2) {
          return row1 !== row2;
        },
        sectionHeaderHasChanged: function sectionHeaderHasChanged(s1, s2) {
          return s1 !== s2;
        }
      });
    }
  }]);

  function SwipeableListView(props, context) {
    babelHelpers.classCallCheck(this, SwipeableListView);

    var _this = babelHelpers.possibleConstructorReturn(this, (SwipeableListView.__proto__ || Object.getPrototypeOf(SwipeableListView)).call(this, props, context));

    _this._listViewRef = null;
    _this._shouldBounceFirstRowOnMount = false;

    _this._onScroll = function (e) {
      if (_this.props.dataSource.getOpenRowID()) {
        _this.setState({
          dataSource: _this.state.dataSource.setOpenRowID(null)
        });
      }
      _this.props.onScroll && _this.props.onScroll(e);
    };

    _this._getMaxSwipeDistance = function (rowData, sectionID, rowID) {
      if (typeof _this.props.maxSwipeDistance === 'function') {
        return _this.props.maxSwipeDistance(rowData, sectionID, rowID);
      }

      return _this.props.maxSwipeDistance;
    };

    _this._renderRow = function (rowData, sectionID, rowID) {
      var slideoutView = _this.props.renderQuickActions(rowData, sectionID, rowID);

      if (!slideoutView) {
        return _this.props.renderRow(rowData, sectionID, rowID);
      }

      var shouldBounceOnMount = false;
      if (_this._shouldBounceFirstRowOnMount) {
        _this._shouldBounceFirstRowOnMount = false;
        shouldBounceOnMount = rowID === _this.props.dataSource.getFirstRowID();
      }

      return React.createElement(
        SwipeableRow,
        {
          slideoutView: slideoutView,
          isOpen: rowData.id === _this.props.dataSource.getOpenRowID(),
          maxSwipeDistance: _this._getMaxSwipeDistance(rowData, sectionID, rowID),
          key: rowID,
          onOpen: function onOpen() {
            return _this._onOpen(rowData.id);
          },
          onClose: function onClose() {
            return _this._onClose(rowData.id);
          },
          onSwipeEnd: function onSwipeEnd() {
            return _this._setListViewScrollable(true);
          },
          onSwipeStart: function onSwipeStart() {
            return _this._setListViewScrollable(false);
          },
          shouldBounceOnMount: shouldBounceOnMount, __source: {
            fileName: _jsxFileName,
            lineNumber: 193
          }
        },
        _this.props.renderRow(rowData, sectionID, rowID)
      );
    };

    _this._shouldBounceFirstRowOnMount = _this.props.bounceFirstRowOnMount;
    _this.state = {
      dataSource: _this.props.dataSource
    };
    return _this;
  }

  babelHelpers.createClass(SwipeableListView, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (this.state.dataSource.getDataSource() !== nextProps.dataSource.getDataSource()) {
        this.setState({
          dataSource: nextProps.dataSource
        });
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      return React.createElement(ListView, babelHelpers.extends({}, this.props, {
        ref: function ref(_ref) {
          _this2._listViewRef = _ref;
        },
        dataSource: this.state.dataSource.getDataSource(),
        onScroll: this._onScroll,
        renderRow: this._renderRow,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 126
        }
      }));
    }
  }, {
    key: '_setListViewScrollable',
    value: function _setListViewScrollable(value) {
      if (this._listViewRef && typeof this._listViewRef.setNativeProps === 'function') {
        this._listViewRef.setNativeProps({
          scrollEnabled: value
        });
      }
    }
  }, {
    key: 'getScrollResponder',
    value: function getScrollResponder() {
      if (this._listViewRef && typeof this._listViewRef.getScrollResponder === 'function') {
        return this._listViewRef.getScrollResponder();
      }
    }
  }, {
    key: '_onOpen',
    value: function _onOpen(rowID) {
      this.setState({
        dataSource: this.state.dataSource.setOpenRowID(rowID)
      });
    }
  }, {
    key: '_onClose',
    value: function _onClose(rowID) {
      this.setState({
        dataSource: this.state.dataSource.setOpenRowID(null)
      });
    }
  }]);
  return SwipeableListView;
}(React.Component);

SwipeableListView.propTypes = {
  bounceFirstRowOnMount: PropTypes.bool.isRequired,

  dataSource: PropTypes.instanceOf(SwipeableListViewDataSource).isRequired,

  maxSwipeDistance: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,

  renderRow: PropTypes.func.isRequired,

  renderQuickActions: PropTypes.func.isRequired
};
SwipeableListView.defaultProps = {
  bounceFirstRowOnMount: false,
  renderQuickActions: function renderQuickActions() {
    return null;
  }
};


module.exports = SwipeableListView;
}, 658, null, "SwipeableListView");
__d(/* SwipeableListViewDataSource */function(global, require, module, exports) {
'use strict';

var ListViewDataSource = require(600                 ); // 600 = ListViewDataSource

var SwipeableListViewDataSource = function () {
  function SwipeableListViewDataSource(params) {
    var _this = this;

    babelHelpers.classCallCheck(this, SwipeableListViewDataSource);

    this._dataSource = new ListViewDataSource({
      getRowData: params.getRowData,
      getSectionHeaderData: params.getSectionHeaderData,
      rowHasChanged: function rowHasChanged(row1, row2) {
        return row1.id !== _this._previousOpenRowID && row2.id === _this._openRowID || row1.id === _this._previousOpenRowID && row2.id !== _this._openRowID || params.rowHasChanged(row1, row2);
      },
      sectionHeaderHasChanged: params.sectionHeaderHasChanged
    });
  }

  babelHelpers.createClass(SwipeableListViewDataSource, [{
    key: 'cloneWithRowsAndSections',
    value: function cloneWithRowsAndSections(dataBlob, sectionIdentities, rowIdentities) {
      this._dataSource = this._dataSource.cloneWithRowsAndSections(dataBlob, sectionIdentities, rowIdentities);

      this._dataBlob = dataBlob;
      this.rowIdentities = this._dataSource.rowIdentities;
      this.sectionIdentities = this._dataSource.sectionIdentities;

      return this;
    }
  }, {
    key: 'getDataSource',
    value: function getDataSource() {
      return this._dataSource;
    }
  }, {
    key: 'getOpenRowID',
    value: function getOpenRowID() {
      return this._openRowID;
    }
  }, {
    key: 'getFirstRowID',
    value: function getFirstRowID() {
      if (this.rowIdentities) {
        return this.rowIdentities[0] && this.rowIdentities[0][0];
      }
      return Object.keys(this._dataBlob)[0];
    }
  }, {
    key: 'setOpenRowID',
    value: function setOpenRowID(rowID) {
      this._previousOpenRowID = this._openRowID;
      this._openRowID = rowID;

      this._dataSource = this._dataSource.cloneWithRowsAndSections(this._dataBlob, this.sectionIdentities, this.rowIdentities);

      return this;
    }
  }]);
  return SwipeableListViewDataSource;
}();

module.exports = SwipeableListViewDataSource;
}, 659, null, "SwipeableListViewDataSource");
__d(/* SwipeableRow */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native/Libraries/Experimental/SwipeableRow/SwipeableRow.js';
var Animated = require(573       ); // 573 = Animated
var PanResponder = require(643           ); // 643 = PanResponder
var I18nManager = require(628          ); // 628 = I18nManager
var React = require(398    ); // 398 = React
var StyleSheet = require(421         ); // 421 = StyleSheet
var TimerMixin = require(570                ); // 570 = react-timer-mixin
var View = require(441   ); // 441 = View

var PropTypes = React.PropTypes;


var emptyFunction = require(336                     ); // 336 = fbjs/lib/emptyFunction

var IS_RTL = I18nManager.isRTL;

var CLOSED_LEFT_POSITION = 0;

var HORIZONTAL_SWIPE_DISTANCE_THRESHOLD = 10;

var HORIZONTAL_FULL_SWIPE_SPEED_THRESHOLD = 0.3;

var SLOW_SPEED_SWIPE_FACTOR = 4;

var SWIPE_DURATION = 300;

var ON_MOUNT_BOUNCE_DELAY = 700;
var ON_MOUNT_BOUNCE_DURATION = 400;

var RIGHT_SWIPE_BOUNCE_BACK_DISTANCE = 30;
var RIGHT_SWIPE_BOUNCE_BACK_DURATION = 300;

var RIGHT_SWIPE_THRESHOLD = 30 * SLOW_SPEED_SWIPE_FACTOR;

var SwipeableRow = React.createClass({
  displayName: 'SwipeableRow',

  _panResponder: {},
  _previousLeft: CLOSED_LEFT_POSITION,

  mixins: [TimerMixin],

  propTypes: {
    children: PropTypes.any,
    isOpen: PropTypes.bool,
    maxSwipeDistance: PropTypes.number.isRequired,
    onOpen: PropTypes.func.isRequired,
    onClose: PropTypes.func.isRequired,
    onSwipeEnd: PropTypes.func.isRequired,
    onSwipeStart: PropTypes.func.isRequired,

    shouldBounceOnMount: PropTypes.bool,

    slideoutView: PropTypes.node.isRequired,

    swipeThreshold: PropTypes.number.isRequired
  },

  getInitialState: function getInitialState() {
    return {
      currentLeft: new Animated.Value(this._previousLeft),

      isSwipeableViewRendered: false,
      rowHeight: null
    };
  },
  getDefaultProps: function getDefaultProps() {
    return {
      isOpen: false,
      maxSwipeDistance: 0,
      onOpen: emptyFunction,
      onClose: emptyFunction,
      onSwipeEnd: emptyFunction,
      onSwipeStart: emptyFunction,
      swipeThreshold: 30
    };
  },
  componentWillMount: function componentWillMount() {
    this._panResponder = PanResponder.create({
      onMoveShouldSetPanResponderCapture: this._handleMoveShouldSetPanResponderCapture,
      onPanResponderGrant: this._handlePanResponderGrant,
      onPanResponderMove: this._handlePanResponderMove,
      onPanResponderRelease: this._handlePanResponderEnd,
      onPanResponderTerminationRequest: this._onPanResponderTerminationRequest,
      onPanResponderTerminate: this._handlePanResponderEnd,
      onShouldBlockNativeResponder: function onShouldBlockNativeResponder(event, gestureState) {
        return false;
      }
    });
  },
  componentDidMount: function componentDidMount() {
    var _this = this;

    if (this.props.shouldBounceOnMount) {
      this.setTimeout(function () {
        _this._animateBounceBack(ON_MOUNT_BOUNCE_DURATION);
      }, ON_MOUNT_BOUNCE_DELAY);
    }
  },
  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    if (this.props.isOpen && !nextProps.isOpen) {
      this._animateToClosedPosition();
    }
  },
  shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState) {
    if (this.props.shouldBounceOnMount && !nextProps.shouldBounceOnMount) {
      return false;
    }

    return true;
  },
  render: function render() {
    var slideOutView = void 0;
    if (this.state.isSwipeableViewRendered) {
      slideOutView = React.createElement(
        View,
        { style: [styles.slideOutContainer, { height: this.state.rowHeight }], __source: {
            fileName: _jsxFileName,
            lineNumber: 179
          }
        },
        this.props.slideoutView
      );
    }

    var swipeableView = React.createElement(
      Animated.View,
      {
        onLayout: this._onSwipeableViewLayout,
        style: [styles.swipeableContainer, {
          transform: [{ translateX: this.state.currentLeft }]
        }], __source: {
          fileName: _jsxFileName,
          lineNumber: 190
        }
      },
      this.props.children
    );

    return React.createElement(
      View,
      babelHelpers.extends({}, this._panResponder.panHandlers, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 203
        }
      }),
      slideOutView,
      swipeableView
    );
  },
  _onSwipeableViewLayout: function _onSwipeableViewLayout(event) {
    this.setState({
      isSwipeableViewRendered: true,
      rowHeight: event.nativeEvent.layout.height
    });
  },
  _handleMoveShouldSetPanResponderCapture: function _handleMoveShouldSetPanResponderCapture(event, gestureState) {
    return gestureState.dy < 10 && this._isValidSwipe(gestureState);
  },
  _handlePanResponderGrant: function _handlePanResponderGrant(event, gestureState) {},
  _handlePanResponderMove: function _handlePanResponderMove(event, gestureState) {
    if (this._isSwipingExcessivelyRightFromClosedPosition(gestureState)) {
      return;
    }

    this.props.onSwipeStart();

    if (this._isSwipingRightFromClosed(gestureState)) {
      this._swipeSlowSpeed(gestureState);
    } else {
      this._swipeFullSpeed(gestureState);
    }
  },
  _isSwipingRightFromClosed: function _isSwipingRightFromClosed(gestureState) {
    var gestureStateDx = IS_RTL ? -gestureState.dx : gestureState.dx;
    return this._previousLeft === CLOSED_LEFT_POSITION && gestureStateDx > 0;
  },
  _swipeFullSpeed: function _swipeFullSpeed(gestureState) {
    this.state.currentLeft.setValue(this._previousLeft + gestureState.dx);
  },
  _swipeSlowSpeed: function _swipeSlowSpeed(gestureState) {
    this.state.currentLeft.setValue(this._previousLeft + gestureState.dx / SLOW_SPEED_SWIPE_FACTOR);
  },
  _isSwipingExcessivelyRightFromClosedPosition: function _isSwipingExcessivelyRightFromClosedPosition(gestureState) {
    var gestureStateDx = IS_RTL ? -gestureState.dx : gestureState.dx;
    return this._isSwipingRightFromClosed(gestureState) && gestureStateDx > RIGHT_SWIPE_THRESHOLD;
  },
  _onPanResponderTerminationRequest: function _onPanResponderTerminationRequest(event, gestureState) {
    return false;
  },
  _animateTo: function _animateTo(toValue) {
    var _this2 = this;

    var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : SWIPE_DURATION;
    var callback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : emptyFunction;

    Animated.timing(this.state.currentLeft, {
      duration: duration,
      toValue: toValue
    }).start(function () {
      _this2._previousLeft = toValue;
      callback();
    });
  },
  _animateToOpenPosition: function _animateToOpenPosition() {
    var maxSwipeDistance = IS_RTL ? -this.props.maxSwipeDistance : this.props.maxSwipeDistance;
    this._animateTo(-maxSwipeDistance);
  },
  _animateToOpenPositionWith: function _animateToOpenPositionWith(speed, distMoved) {
    speed = speed > HORIZONTAL_FULL_SWIPE_SPEED_THRESHOLD ? speed : HORIZONTAL_FULL_SWIPE_SPEED_THRESHOLD;

    var duration = Math.abs((this.props.maxSwipeDistance - Math.abs(distMoved)) / speed);
    var maxSwipeDistance = IS_RTL ? -this.props.maxSwipeDistance : this.props.maxSwipeDistance;
    this._animateTo(-maxSwipeDistance, duration);
  },
  _animateToClosedPosition: function _animateToClosedPosition() {
    var duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SWIPE_DURATION;

    this._animateTo(CLOSED_LEFT_POSITION, duration);
  },
  _animateToClosedPositionDuringBounce: function _animateToClosedPositionDuringBounce() {
    this._animateToClosedPosition(RIGHT_SWIPE_BOUNCE_BACK_DURATION);
  },
  _animateBounceBack: function _animateBounceBack(duration) {
    var swipeBounceBackDistance = IS_RTL ? -RIGHT_SWIPE_BOUNCE_BACK_DISTANCE : RIGHT_SWIPE_BOUNCE_BACK_DISTANCE;
    this._animateTo(-swipeBounceBackDistance, duration, this._animateToClosedPositionDuringBounce);
  },
  _isValidSwipe: function _isValidSwipe(gestureState) {
    return Math.abs(gestureState.dx) > HORIZONTAL_SWIPE_DISTANCE_THRESHOLD;
  },
  _shouldAnimateRemainder: function _shouldAnimateRemainder(gestureState) {
    return Math.abs(gestureState.dx) > this.props.swipeThreshold || gestureState.vx > HORIZONTAL_FULL_SWIPE_SPEED_THRESHOLD;
  },
  _handlePanResponderEnd: function _handlePanResponderEnd(event, gestureState) {
    var horizontalDistance = IS_RTL ? -gestureState.dx : gestureState.dx;
    if (this._isSwipingRightFromClosed(gestureState)) {
      this.props.onOpen();
      this._animateBounceBack(RIGHT_SWIPE_BOUNCE_BACK_DURATION);
    } else if (this._shouldAnimateRemainder(gestureState)) {
      if (horizontalDistance < 0) {
        this.props.onOpen();
        this._animateToOpenPositionWith(gestureState.vx, horizontalDistance);
      } else {
        this.props.onClose();
        this._animateToClosedPosition();
      }
    } else {
      if (this._previousLeft === CLOSED_LEFT_POSITION) {
        this._animateToClosedPosition();
      } else {
        this._animateToOpenPosition();
      }
    }

    this.props.onSwipeEnd();
  }
});

var styles = StyleSheet.create({
  slideOutContainer: {
    bottom: 0,
    left: 0,
    position: 'absolute',
    right: 0,
    top: 0
  },
  swipeableContainer: {
    flex: 1
  }
});

module.exports = SwipeableRow;
}, 660, null, "SwipeableRow");
__d(/* TabBarIOS */function(global, require, module, exports) {

'use strict';

var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native/Libraries/Components/TabBarIOS/TabBarIOS.android.js';
var React = require(398    ); // 398 = React
var View = require(441   ); // 441 = View
var StyleSheet = require(421         ); // 421 = StyleSheet

var DummyTabBarIOS = function (_React$Component) {
  babelHelpers.inherits(DummyTabBarIOS, _React$Component);

  function DummyTabBarIOS() {
    babelHelpers.classCallCheck(this, DummyTabBarIOS);
    return babelHelpers.possibleConstructorReturn(this, (DummyTabBarIOS.__proto__ || Object.getPrototypeOf(DummyTabBarIOS)).apply(this, arguments));
  }

  babelHelpers.createClass(DummyTabBarIOS, [{
    key: 'render',
    value: function render() {
      return React.createElement(
        View,
        { style: [this.props.style, styles.tabGroup], __source: {
            fileName: _jsxFileName,
            lineNumber: 21
          }
        },
        this.props.children
      );
    }
  }]);
  return DummyTabBarIOS;
}(React.Component);

var styles = StyleSheet.create({
  tabGroup: {
    flex: 1
  }
});

module.exports = DummyTabBarIOS;
}, 661, null, "TabBarIOS");
__d(/* TextInput */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native/Libraries/Components/TextInput/TextInput.js';
var ColorPropType = require(338            ); // 338 = ColorPropType
var DocumentSelectionState = require(663                     ); // 663 = DocumentSelectionState
var EventEmitter = require(375           ); // 375 = EventEmitter
var NativeMethodsMixin = require(341                 ); // 341 = NativeMethodsMixin
var Platform = require(348       ); // 348 = Platform
var React = require(398    ); // 398 = React
var ReactNative = require(513          ); // 513 = ReactNative
var StyleSheet = require(421         ); // 421 = StyleSheet
var Text = require(505   ); // 505 = Text
var TextInputState = require(347             ); // 347 = TextInputState
var TimerMixin = require(570                ); // 570 = react-timer-mixin
var TouchableWithoutFeedback = require(569                       ); // 569 = TouchableWithoutFeedback
var UIManager = require(395        ); // 395 = UIManager
var View = require(441   ); // 441 = View
var warning = require(335               ); // 335 = fbjs/lib/warning

var emptyFunction = require(336                     ); // 336 = fbjs/lib/emptyFunction
var invariant = require(346                 ); // 346 = fbjs/lib/invariant
var requireNativeComponent = require(450                     ); // 450 = requireNativeComponent

var PropTypes = React.PropTypes;

var onlyMultiline = {
  onTextInput: true,
  children: true
};

if (Platform.OS === 'android') {
  var AndroidTextInput = requireNativeComponent('AndroidTextInput', null);
} else if (Platform.OS === 'ios') {
  var RCTTextView = requireNativeComponent('RCTTextView', null);
  var RCTTextField = requireNativeComponent('RCTTextField', null);
}

var DataDetectorTypes = ['phoneNumber', 'link', 'address', 'calendarEvent', 'none', 'all'];

var TextInput = React.createClass({
  displayName: 'TextInput',

  statics: {
    State: TextInputState
  },

  propTypes: babelHelpers.extends({}, View.propTypes, {
    autoCapitalize: PropTypes.oneOf(['none', 'sentences', 'words', 'characters']),

    autoCorrect: PropTypes.bool,

    spellCheck: PropTypes.bool,

    autoFocus: PropTypes.bool,

    editable: PropTypes.bool,

    keyboardType: PropTypes.oneOf(['default', 'email-address', 'numeric', 'phone-pad', 'ascii-capable', 'numbers-and-punctuation', 'url', 'number-pad', 'name-phone-pad', 'decimal-pad', 'twitter', 'web-search']),

    keyboardAppearance: PropTypes.oneOf(['default', 'light', 'dark']),

    returnKeyType: PropTypes.oneOf(['done', 'go', 'next', 'search', 'send', 'none', 'previous', 'default', 'emergency-call', 'google', 'join', 'route', 'yahoo']),

    returnKeyLabel: PropTypes.string,

    maxLength: PropTypes.number,

    numberOfLines: PropTypes.number,

    disableFullscreenUI: PropTypes.bool,

    enablesReturnKeyAutomatically: PropTypes.bool,

    multiline: PropTypes.bool,

    textBreakStrategy: React.PropTypes.oneOf(['simple', 'highQuality', 'balanced']),

    onBlur: PropTypes.func,

    onFocus: PropTypes.func,

    onChange: PropTypes.func,

    onChangeText: PropTypes.func,

    onContentSizeChange: PropTypes.func,

    onEndEditing: PropTypes.func,

    onSelectionChange: PropTypes.func,

    onSubmitEditing: PropTypes.func,

    onKeyPress: PropTypes.func,

    onLayout: PropTypes.func,

    onScroll: PropTypes.func,

    placeholder: PropTypes.node,

    placeholderTextColor: ColorPropType,

    secureTextEntry: PropTypes.bool,

    selectionColor: ColorPropType,

    selectionState: PropTypes.instanceOf(DocumentSelectionState),

    selection: PropTypes.shape({
      start: PropTypes.number.isRequired,
      end: PropTypes.number
    }),

    value: PropTypes.string,

    defaultValue: PropTypes.node,

    clearButtonMode: PropTypes.oneOf(['never', 'while-editing', 'unless-editing', 'always']),

    clearTextOnFocus: PropTypes.bool,

    selectTextOnFocus: PropTypes.bool,

    blurOnSubmit: PropTypes.bool,

    style: Text.propTypes.style,

    underlineColorAndroid: ColorPropType,

    inlineImageLeft: PropTypes.string,

    inlineImagePadding: PropTypes.number,

    dataDetectorTypes: PropTypes.oneOfType([PropTypes.oneOf(DataDetectorTypes), PropTypes.arrayOf(PropTypes.oneOf(DataDetectorTypes))])
  }),

  mixins: [NativeMethodsMixin, TimerMixin],

  viewConfig: Platform.OS === 'ios' && RCTTextField ? RCTTextField.viewConfig : Platform.OS === 'android' && AndroidTextInput ? AndroidTextInput.viewConfig : {},

  isFocused: function isFocused() {
    return TextInputState.currentlyFocusedField() === ReactNative.findNodeHandle(this._inputRef);
  },

  contextTypes: {
    onFocusRequested: React.PropTypes.func,
    focusEmitter: React.PropTypes.instanceOf(EventEmitter)
  },

  _inputRef: undefined,
  _focusSubscription: undefined,
  _lastNativeText: undefined,
  _lastNativeSelection: undefined,

  componentDidMount: function componentDidMount() {
    var _this = this;

    this._lastNativeText = this.props.value;
    if (!this.context.focusEmitter) {
      if (this.props.autoFocus) {
        this.requestAnimationFrame(this.focus);
      }
      return;
    }
    this._focusSubscription = this.context.focusEmitter.addListener('focus', function (el) {
      if (_this === el) {
        _this.requestAnimationFrame(_this.focus);
      } else if (_this.isFocused()) {
        _this.blur();
      }
    });
    if (this.props.autoFocus) {
      this.context.onFocusRequested(this);
    }
  },

  componentWillUnmount: function componentWillUnmount() {
    this._focusSubscription && this._focusSubscription.remove();
    if (this.isFocused()) {
      this.blur();
    }
  },

  getChildContext: function getChildContext() {
    return { isInAParentText: true };
  },

  childContextTypes: {
    isInAParentText: React.PropTypes.bool
  },

  clear: function clear() {
    this.setNativeProps({ text: '' });
  },

  render: function render() {
    if (Platform.OS === 'ios') {
      return this._renderIOS();
    } else if (Platform.OS === 'android') {
      return this._renderAndroid();
    }
  },

  _getText: function _getText() {
    return typeof this.props.value === 'string' ? this.props.value : typeof this.props.defaultValue === 'string' ? this.props.defaultValue : '';
  },

  _setNativeRef: function _setNativeRef(ref) {
    this._inputRef = ref;
  },

  _renderIOS: function _renderIOS() {
    var textContainer;

    var props = babelHelpers.extends({}, this.props);
    props.style = [styles.input, this.props.style];

    if (props.selection && props.selection.end == null) {
      props.selection = { start: props.selection.start, end: props.selection.start };
    }

    if (!props.multiline) {
      if (__DEV__) {
        for (var propKey in onlyMultiline) {
          if (props[propKey]) {
            var error = new Error('TextInput prop `' + propKey + '` is only supported with multiline.');
            warning(false, '%s', error.stack);
          }
        }
      }
      textContainer = React.createElement(RCTTextField, babelHelpers.extends({
        ref: this._setNativeRef
      }, props, {
        onFocus: this._onFocus,
        onBlur: this._onBlur,
        onChange: this._onChange,
        onSelectionChange: this._onSelectionChange,
        onSelectionChangeShouldSetResponder: emptyFunction.thatReturnsTrue,
        text: this._getText(),
        __source: {
          fileName: _jsxFileName,
          lineNumber: 652
        }
      }));
    } else {
      var children = props.children;
      var childCount = 0;
      React.Children.forEach(children, function () {
        return ++childCount;
      });
      invariant(!(props.value && childCount), 'Cannot specify both value and children.');
      if (childCount >= 1) {
        children = React.createElement(
          Text,
          { style: props.style, __source: {
              fileName: _jsxFileName,
              lineNumber: 671
            }
          },
          children
        );
      }
      if (props.inputView) {
        children = [children, props.inputView];
      }
      textContainer = React.createElement(RCTTextView, babelHelpers.extends({
        ref: this._setNativeRef
      }, props, {
        children: children,
        onFocus: this._onFocus,
        onBlur: this._onBlur,
        onChange: this._onChange,
        onContentSizeChange: this.props.onContentSizeChange,
        onSelectionChange: this._onSelectionChange,
        onTextInput: this._onTextInput,
        onSelectionChangeShouldSetResponder: emptyFunction.thatReturnsTrue,
        text: this._getText(),
        dataDetectorTypes: this.props.dataDetectorTypes,
        onScroll: this._onScroll,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 677
        }
      }));
    }

    return React.createElement(
      TouchableWithoutFeedback,
      {
        onLayout: props.onLayout,
        onPress: this._onPress,
        rejectResponderTermination: true,
        accessible: props.accessible,
        accessibilityLabel: props.accessibilityLabel,
        accessibilityTraits: props.accessibilityTraits,
        testID: props.testID, __source: {
          fileName: _jsxFileName,
          lineNumber: 695
        }
      },
      textContainer
    );
  },

  _renderAndroid: function _renderAndroid() {
    var props = babelHelpers.extends({}, this.props);
    props.style = [this.props.style];
    props.autoCapitalize = UIManager.AndroidTextInput.Constants.AutoCapitalizationType[this.props.autoCapitalize];
    var children = this.props.children;
    var childCount = 0;
    React.Children.forEach(children, function () {
      return ++childCount;
    });
    invariant(!(this.props.value && childCount), 'Cannot specify both value and children.');
    if (childCount > 1) {
      children = React.createElement(
        Text,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 721
          }
        },
        children
      );
    }

    if (props.selection && props.selection.end == null) {
      props.selection = { start: props.selection.start, end: props.selection.start };
    }

    var textContainer = React.createElement(AndroidTextInput, babelHelpers.extends({
      ref: this._setNativeRef
    }, props, {
      mostRecentEventCount: 0,
      onFocus: this._onFocus,
      onBlur: this._onBlur,
      onChange: this._onChange,
      onSelectionChange: this._onSelectionChange,
      onTextInput: this._onTextInput,
      text: this._getText(),
      children: children,
      disableFullscreenUI: this.props.disableFullscreenUI,
      textBreakStrategy: this.props.textBreakStrategy,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 729
      }
    }));

    return React.createElement(
      TouchableWithoutFeedback,
      {
        onLayout: this.props.onLayout,
        onPress: this._onPress,
        accessible: this.props.accessible,
        accessibilityLabel: this.props.accessibilityLabel,
        accessibilityComponentType: this.props.accessibilityComponentType,
        testID: this.props.testID, __source: {
          fileName: _jsxFileName,
          lineNumber: 745
        }
      },
      textContainer
    );
  },

  _onFocus: function _onFocus(event) {
    if (this.props.onFocus) {
      this.props.onFocus(event);
    }

    if (this.props.selectionState) {
      this.props.selectionState.focus();
    }
  },

  _onPress: function _onPress(event) {
    if (this.props.editable || this.props.editable === undefined) {
      this.focus();
    }
  },

  _onChange: function _onChange(event) {
    if (this._inputRef) {
      this._inputRef.setNativeProps({
        mostRecentEventCount: event.nativeEvent.eventCount
      });
    }

    var text = event.nativeEvent.text;
    this.props.onChange && this.props.onChange(event);
    this.props.onChangeText && this.props.onChangeText(text);

    if (!this._inputRef) {
      return;
    }

    this._lastNativeText = text;
    this.forceUpdate();
  },

  _onSelectionChange: function _onSelectionChange(event) {
    this.props.onSelectionChange && this.props.onSelectionChange(event);

    if (!this._inputRef) {
      return;
    }

    this._lastNativeSelection = event.nativeEvent.selection;

    if (this.props.selection || this.props.selectionState) {
      this.forceUpdate();
    }
  },

  componentDidUpdate: function componentDidUpdate() {
    var nativeProps = {};

    if (this._lastNativeText !== this.props.value && typeof this.props.value === 'string') {
      nativeProps.text = this.props.value;
    }

    var selection = this.props.selection;

    if (this._lastNativeSelection && selection && (this._lastNativeSelection.start !== selection.start || this._lastNativeSelection.end !== selection.end)) {
      nativeProps.selection = this.props.selection;
    }

    if (Object.keys(nativeProps).length > 0 && this._inputRef) {
      this._inputRef.setNativeProps(nativeProps);
    }

    if (this.props.selectionState && selection) {
      this.props.selectionState.update(selection.start, selection.end);
    }
  },

  _onBlur: function _onBlur(event) {
    this.blur();
    if (this.props.onBlur) {
      this.props.onBlur(event);
    }

    if (this.props.selectionState) {
      this.props.selectionState.blur();
    }
  },

  _onTextInput: function _onTextInput(event) {
    this.props.onTextInput && this.props.onTextInput(event);
  },

  _onScroll: function _onScroll(event) {
    this.props.onScroll && this.props.onScroll(event);
  }
});

var styles = StyleSheet.create({
  input: {
    alignSelf: 'stretch'
  }
});

module.exports = TextInput;
}, 662, null, "TextInput");
__d(/* DocumentSelectionState */function(global, require, module, exports) {

'use strict';

var mixInEventEmitter = require(664                ); // 664 = mixInEventEmitter

var DocumentSelectionState = function () {
  function DocumentSelectionState(anchor, focus) {
    babelHelpers.classCallCheck(this, DocumentSelectionState);

    this._anchorOffset = anchor;
    this._focusOffset = focus;
    this._hasFocus = false;
  }

  babelHelpers.createClass(DocumentSelectionState, [{
    key: 'update',
    value: function update(anchor, focus) {
      if (this._anchorOffset !== anchor || this._focusOffset !== focus) {
        this._anchorOffset = anchor;
        this._focusOffset = focus;
        this.emit('update');
      }
    }
  }, {
    key: 'constrainLength',
    value: function constrainLength(maxLength) {
      this.update(Math.min(this._anchorOffset, maxLength), Math.min(this._focusOffset, maxLength));
    }
  }, {
    key: 'focus',
    value: function focus() {
      if (!this._hasFocus) {
        this._hasFocus = true;
        this.emit('focus');
      }
    }
  }, {
    key: 'blur',
    value: function blur() {
      if (this._hasFocus) {
        this._hasFocus = false;
        this.emit('blur');
      }
    }
  }, {
    key: 'hasFocus',
    value: function hasFocus() {
      return this._hasFocus;
    }
  }, {
    key: 'isCollapsed',
    value: function isCollapsed() {
      return this._anchorOffset === this._focusOffset;
    }
  }, {
    key: 'isBackward',
    value: function isBackward() {
      return this._anchorOffset > this._focusOffset;
    }
  }, {
    key: 'getAnchorOffset',
    value: function getAnchorOffset() {
      return this._hasFocus ? this._anchorOffset : null;
    }
  }, {
    key: 'getFocusOffset',
    value: function getFocusOffset() {
      return this._hasFocus ? this._focusOffset : null;
    }
  }, {
    key: 'getStartOffset',
    value: function getStartOffset() {
      return this._hasFocus ? Math.min(this._anchorOffset, this._focusOffset) : null;
    }
  }, {
    key: 'getEndOffset',
    value: function getEndOffset() {
      return this._hasFocus ? Math.max(this._anchorOffset, this._focusOffset) : null;
    }
  }, {
    key: 'overlaps',
    value: function overlaps(start, end) {
      return this.hasFocus() && this.getStartOffset() <= end && start <= this.getEndOffset();
    }
  }]);
  return DocumentSelectionState;
}();

mixInEventEmitter(DocumentSelectionState, {
  'blur': true,
  'focus': true,
  'update': true
});

module.exports = DocumentSelectionState;
}, 663, null, "DocumentSelectionState");
__d(/* mixInEventEmitter */function(global, require, module, exports) {
'use strict';

var EventEmitter = require(375           ); // 375 = EventEmitter
var EventEmitterWithHolding = require(665                      ); // 665 = EventEmitterWithHolding
var EventHolder = require(666          ); // 666 = EventHolder
var EventValidator = require(667             ); // 667 = EventValidator

var copyProperties = require(668             ); // 668 = copyProperties
var invariant = require(346                 ); // 346 = fbjs/lib/invariant
var keyOf = require(620             ); // 620 = fbjs/lib/keyOf

var TYPES_KEY = keyOf({ __types: true });

function mixInEventEmitter(cls, types) {
  invariant(types, 'Must supply set of valid event types');

  var target = cls.prototype || cls;

  invariant(!target.__eventEmitter, 'An active emitter is already mixed in');

  var ctor = cls.constructor;
  if (ctor) {
    invariant(ctor === Object || ctor === Function, 'Mix EventEmitter into a class, not an instance');
  }

  if (target.hasOwnProperty(TYPES_KEY)) {
    copyProperties(target.__types, types);
  } else if (target.__types) {
    target.__types = copyProperties({}, target.__types, types);
  } else {
    target.__types = types;
  }
  copyProperties(target, EventEmitterMixin);
}

var EventEmitterMixin = {
  emit: function emit(eventType, a, b, c, d, e, _) {
    return this.__getEventEmitter().emit(eventType, a, b, c, d, e, _);
  },

  emitAndHold: function emitAndHold(eventType, a, b, c, d, e, _) {
    return this.__getEventEmitter().emitAndHold(eventType, a, b, c, d, e, _);
  },

  addListener: function addListener(eventType, listener, context) {
    return this.__getEventEmitter().addListener(eventType, listener, context);
  },

  once: function once(eventType, listener, context) {
    return this.__getEventEmitter().once(eventType, listener, context);
  },

  addRetroactiveListener: function addRetroactiveListener(eventType, listener, context) {
    return this.__getEventEmitter().addRetroactiveListener(eventType, listener, context);
  },

  addListenerMap: function addListenerMap(listenerMap, context) {
    return this.__getEventEmitter().addListenerMap(listenerMap, context);
  },

  addRetroactiveListenerMap: function addRetroactiveListenerMap(listenerMap, context) {
    return this.__getEventEmitter().addListenerMap(listenerMap, context);
  },

  removeAllListeners: function removeAllListeners() {
    this.__getEventEmitter().removeAllListeners();
  },

  removeCurrentListener: function removeCurrentListener() {
    this.__getEventEmitter().removeCurrentListener();
  },

  releaseHeldEventType: function releaseHeldEventType(eventType) {
    this.__getEventEmitter().releaseHeldEventType(eventType);
  },

  __getEventEmitter: function __getEventEmitter() {
    if (!this.__eventEmitter) {
      var emitter = new EventEmitter();
      emitter = EventValidator.addValidation(emitter, this.__types);

      var holder = new EventHolder();
      this.__eventEmitter = new EventEmitterWithHolding(emitter, holder);
    }
    return this.__eventEmitter;
  }
};

module.exports = mixInEventEmitter;
}, 664, null, "mixInEventEmitter");
__d(/* EventEmitterWithHolding */function(global, require, module, exports) {
'use strict';

var EventEmitterWithHolding = function () {
  function EventEmitterWithHolding(emitter, holder) {
    babelHelpers.classCallCheck(this, EventEmitterWithHolding);

    this._emitter = emitter;
    this._eventHolder = holder;
    this._currentEventToken = null;
    this._emittingHeldEvents = false;
  }

  babelHelpers.createClass(EventEmitterWithHolding, [{
    key: 'addListener',
    value: function addListener(eventType, listener, context) {
      return this._emitter.addListener(eventType, listener, context);
    }
  }, {
    key: 'once',
    value: function once(eventType, listener, context) {
      return this._emitter.once(eventType, listener, context);
    }
  }, {
    key: 'addRetroactiveListener',
    value: function addRetroactiveListener(eventType, listener, context) {
      var subscription = this._emitter.addListener(eventType, listener, context);

      this._emittingHeldEvents = true;
      this._eventHolder.emitToListener(eventType, listener, context);
      this._emittingHeldEvents = false;

      return subscription;
    }
  }, {
    key: 'removeAllListeners',
    value: function removeAllListeners(eventType) {
      this._emitter.removeAllListeners(eventType);
    }
  }, {
    key: 'removeCurrentListener',
    value: function removeCurrentListener() {
      this._emitter.removeCurrentListener();
    }
  }, {
    key: 'listeners',
    value: function listeners(eventType) {
      return this._emitter.listeners(eventType);
    }
  }, {
    key: 'emit',
    value: function emit(eventType) {
      var _emitter;

      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      (_emitter = this._emitter).emit.apply(_emitter, [eventType].concat(babelHelpers.toConsumableArray(args)));
    }
  }, {
    key: 'emitAndHold',
    value: function emitAndHold(eventType) {
      var _eventHolder, _emitter2;

      for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
        args[_key2 - 1] = arguments[_key2];
      }

      this._currentEventToken = (_eventHolder = this._eventHolder).holdEvent.apply(_eventHolder, [eventType].concat(babelHelpers.toConsumableArray(args)));
      (_emitter2 = this._emitter).emit.apply(_emitter2, [eventType].concat(babelHelpers.toConsumableArray(args)));
      this._currentEventToken = null;
    }
  }, {
    key: 'releaseCurrentEvent',
    value: function releaseCurrentEvent() {
      if (this._currentEventToken) {
        this._eventHolder.releaseEvent(this._currentEventToken);
      } else if (this._emittingHeldEvents) {
        this._eventHolder.releaseCurrentEvent();
      }
    }
  }, {
    key: 'releaseHeldEventType',
    value: function releaseHeldEventType(eventType) {
      this._eventHolder.releaseEventType(eventType);
    }
  }]);
  return EventEmitterWithHolding;
}();

module.exports = EventEmitterWithHolding;
}, 665, null, "EventEmitterWithHolding");
__d(/* EventHolder */function(global, require, module, exports) {
'use strict';

var invariant = require(346                 ); // 346 = fbjs/lib/invariant

var EventHolder = function () {
  function EventHolder() {
    babelHelpers.classCallCheck(this, EventHolder);

    this._heldEvents = {};
    this._currentEventKey = null;
  }

  babelHelpers.createClass(EventHolder, [{
    key: 'holdEvent',
    value: function holdEvent(eventType) {
      this._heldEvents[eventType] = this._heldEvents[eventType] || [];
      var eventsOfType = this._heldEvents[eventType];
      var key = {
        eventType: eventType,
        index: eventsOfType.length
      };

      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      eventsOfType.push(args);
      return key;
    }
  }, {
    key: 'emitToListener',
    value: function emitToListener(eventType, listener, context) {
      var _this = this;

      var eventsOfType = this._heldEvents[eventType];
      if (!eventsOfType) {
        return;
      }
      var origEventKey = this._currentEventKey;
      eventsOfType.forEach(function (eventHeld, index) {
        if (!eventHeld) {
          return;
        }
        _this._currentEventKey = {
          eventType: eventType,
          index: index
        };
        listener.apply(context, eventHeld);
      });
      this._currentEventKey = origEventKey;
    }
  }, {
    key: 'releaseCurrentEvent',
    value: function releaseCurrentEvent() {
      invariant(this._currentEventKey !== null, 'Not in an emitting cycle; there is no current event');
      this._currentEventKey && this.releaseEvent(this._currentEventKey);
    }
  }, {
    key: 'releaseEvent',
    value: function releaseEvent(token) {
      delete this._heldEvents[token.eventType][token.index];
    }
  }, {
    key: 'releaseEventType',
    value: function releaseEventType(type) {
      this._heldEvents[type] = [];
    }
  }]);
  return EventHolder;
}();

module.exports = EventHolder;
}, 666, null, "EventHolder");
__d(/* EventValidator */function(global, require, module, exports) {
'use strict';

var copyProperties = require(668             ); // 668 = copyProperties

var EventValidator = {
  addValidation: function addValidation(emitter, types) {
    var eventTypes = Object.keys(types);
    var emitterWithValidation = Object.create(emitter);

    copyProperties(emitterWithValidation, {
      emit: function emit(type, a, b, c, d, e, _) {
        assertAllowsEventType(type, eventTypes);
        return emitter.emit.call(this, type, a, b, c, d, e, _);
      }
    });

    return emitterWithValidation;
  }
};

function assertAllowsEventType(type, allowedTypes) {
  if (allowedTypes.indexOf(type) === -1) {
    throw new TypeError(errorMessageFor(type, allowedTypes));
  }
}

function errorMessageFor(type, allowedTypes) {
  var message = 'Unknown event type "' + type + '". ';
  if (__DEV__) {
    message += recommendationFor(type, allowedTypes);
  }
  message += 'Known event types: ' + allowedTypes.join(', ') + '.';
  return message;
}

if (__DEV__) {
  var recommendationFor = function recommendationFor(type, allowedTypes) {
    var closestTypeRecommendation = closestTypeFor(type, allowedTypes);
    if (isCloseEnough(closestTypeRecommendation, type)) {
      return 'Did you mean "' + closestTypeRecommendation.type + '"? ';
    } else {
      return '';
    }
  };

  var closestTypeFor = function closestTypeFor(type, allowedTypes) {
    var typeRecommendations = allowedTypes.map(typeRecommendationFor.bind(this, type));
    return typeRecommendations.sort(recommendationSort)[0];
  };

  var typeRecommendationFor = function typeRecommendationFor(type, recomendedType) {
    return {
      type: recomendedType,
      distance: damerauLevenshteinDistance(type, recomendedType)
    };
  };

  var recommendationSort = function recommendationSort(recommendationA, recommendationB) {
    if (recommendationA.distance < recommendationB.distance) {
      return -1;
    } else if (recommendationA.distance > recommendationB.distance) {
      return 1;
    } else {
      return 0;
    }
  };

  var isCloseEnough = function isCloseEnough(closestType, actualType) {
    return closestType.distance / actualType.length < 0.334;
  };

  var damerauLevenshteinDistance = function damerauLevenshteinDistance(a, b) {
    var i = void 0,
        j = void 0;
    var d = [];

    for (i = 0; i <= a.length; i++) {
      d[i] = [i];
    }

    for (j = 1; j <= b.length; j++) {
      d[0][j] = j;
    }

    for (i = 1; i <= a.length; i++) {
      for (j = 1; j <= b.length; j++) {
        var cost = a.charAt(i - 1) === b.charAt(j - 1) ? 0 : 1;

        d[i][j] = Math.min(d[i - 1][j] + 1, d[i][j - 1] + 1, d[i - 1][j - 1] + cost);

        if (i > 1 && j > 1 && a.charAt(i - 1) === b.charAt(j - 2) && a.charAt(i - 2) === b.charAt(j - 1)) {
          d[i][j] = Math.min(d[i][j], d[i - 2][j - 2] + cost);
        }
      }
    }

    return d[a.length][b.length];
  };
}

module.exports = EventValidator;
}, 667, null, "EventValidator");
__d(/* copyProperties */function(global, require, module, exports) {
'use strict';

function copyProperties(obj, a, b, c, d, e, f) {
  obj = obj || {};

  if (__DEV__) {
    if (f) {
      throw new Error('Too many arguments passed to copyProperties');
    }
  }

  var args = [a, b, c, d, e];
  var ii = 0,
      v;
  while (args[ii]) {
    v = args[ii++];
    for (var k in v) {
      obj[k] = v[k];
    }

    if (v.hasOwnProperty && v.hasOwnProperty('toString') && typeof v.toString !== 'undefined' && obj.toString !== v.toString) {
      obj.toString = v.toString;
    }
  }

  return obj;
}

module.exports = copyProperties;
}, 668, null, "copyProperties");
__d(/* ToolbarAndroid */function(global, require, module, exports) {

'use strict';

var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native/Libraries/Components/ToolbarAndroid/ToolbarAndroid.android.js';
var Image = require(585    ); // 585 = Image
var NativeMethodsMixin = require(341                 ); // 341 = NativeMethodsMixin
var React = require(398    ); // 398 = React
var ReactNativeViewAttributes = require(447                        ); // 447 = ReactNativeViewAttributes
var UIManager = require(395        ); // 395 = UIManager
var View = require(441   ); // 441 = View
var ColorPropType = require(338            ); // 338 = ColorPropType

var requireNativeComponent = require(450                     ); // 450 = requireNativeComponent
var resolveAssetSource = require(493                 ); // 493 = resolveAssetSource

var ReactPropTypes = React.PropTypes;

var optionalImageSource = ReactPropTypes.oneOfType([Image.propTypes.source, ReactPropTypes.oneOf([])]);

var ToolbarAndroid = React.createClass({
  displayName: 'ToolbarAndroid',

  mixins: [NativeMethodsMixin],

  propTypes: babelHelpers.extends({}, View.propTypes, {
    actions: ReactPropTypes.arrayOf(ReactPropTypes.shape({
      title: ReactPropTypes.string.isRequired,
      icon: optionalImageSource,
      show: ReactPropTypes.oneOf(['always', 'ifRoom', 'never']),
      showWithText: ReactPropTypes.bool
    })),

    logo: optionalImageSource,

    navIcon: optionalImageSource,

    onActionSelected: ReactPropTypes.func,

    onIconClicked: ReactPropTypes.func,

    overflowIcon: optionalImageSource,

    subtitle: ReactPropTypes.string,

    subtitleColor: ColorPropType,

    title: ReactPropTypes.string,

    titleColor: ColorPropType,

    contentInsetStart: ReactPropTypes.number,

    contentInsetEnd: ReactPropTypes.number,

    rtl: ReactPropTypes.bool,

    testID: ReactPropTypes.string
  }),

  render: function render() {
    var nativeProps = babelHelpers.extends({}, this.props);
    if (this.props.logo) {
      nativeProps.logo = resolveAssetSource(this.props.logo);
    }
    if (this.props.navIcon) {
      nativeProps.navIcon = resolveAssetSource(this.props.navIcon);
    }
    if (this.props.overflowIcon) {
      nativeProps.overflowIcon = resolveAssetSource(this.props.overflowIcon);
    }
    if (this.props.actions) {
      var nativeActions = [];
      for (var i = 0; i < this.props.actions.length; i++) {
        var action = babelHelpers.extends({}, this.props.actions[i]);
        if (action.icon) {
          action.icon = resolveAssetSource(action.icon);
        }
        if (action.show) {
          action.show = UIManager.ToolbarAndroid.Constants.ShowAsAction[action.show];
        }
        nativeActions.push(action);
      }
      nativeProps.nativeActions = nativeActions;
    }

    return React.createElement(NativeToolbar, babelHelpers.extends({ onSelect: this._onSelect }, nativeProps, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 195
      }
    }));
  },

  _onSelect: function _onSelect(event) {
    var position = event.nativeEvent.position;
    if (position === -1) {
      this.props.onIconClicked && this.props.onIconClicked();
    } else {
      this.props.onActionSelected && this.props.onActionSelected(position);
    }
  }
});

var NativeToolbar = requireNativeComponent('ToolbarAndroid', ToolbarAndroid, {
  nativeOnly: {
    nativeActions: true
  }
});

module.exports = ToolbarAndroid;
}, 669, null, "ToolbarAndroid");
__d(/* ViewPagerAndroid */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native/Libraries/Components/ViewPager/ViewPagerAndroid.android.js';
var React = require(398    ); // 398 = React
var ReactNative = require(513          ); // 513 = ReactNative
var UIManager = require(395        ); // 395 = UIManager
var View = require(441   ); // 441 = View

var dismissKeyboard = require(382              ); // 382 = dismissKeyboard
var requireNativeComponent = require(450                     ); // 450 = requireNativeComponent

var ReactPropTypes = React.PropTypes;

var VIEWPAGER_REF = 'viewPager';

var ViewPagerAndroid = function (_React$Component) {
  babelHelpers.inherits(ViewPagerAndroid, _React$Component);

  function ViewPagerAndroid() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, ViewPagerAndroid);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = ViewPagerAndroid.__proto__ || Object.getPrototypeOf(ViewPagerAndroid)).call.apply(_ref, [this].concat(args))), _this), _this.getInnerViewNode = function () {
      return _this.refs[VIEWPAGER_REF].getInnerViewNode();
    }, _this._childrenWithOverridenStyle = function () {
      return React.Children.map(_this.props.children, function (child) {
        if (!child) {
          return null;
        }
        var newProps = babelHelpers.extends({}, child.props, {
          style: [child.props.style, {
            position: 'absolute',
            left: 0,
            top: 0,
            right: 0,
            bottom: 0,
            width: undefined,
            height: undefined
          }],
          collapsable: false
        });
        if (child.type && child.type.displayName && child.type.displayName !== 'RCTView' && child.type.displayName !== 'View') {
          console.warn('Each ViewPager child must be a <View>. Was ' + child.type.displayName);
        }
        return React.createElement(child.type, newProps);
      });
    }, _this._onPageScroll = function (e) {
      if (_this.props.onPageScroll) {
        _this.props.onPageScroll(e);
      }
      if (_this.props.keyboardDismissMode === 'on-drag') {
        dismissKeyboard();
      }
    }, _this._onPageScrollStateChanged = function (e) {
      if (_this.props.onPageScrollStateChanged) {
        _this.props.onPageScrollStateChanged(e.nativeEvent.pageScrollState);
      }
    }, _this._onPageSelected = function (e) {
      if (_this.props.onPageSelected) {
        _this.props.onPageSelected(e);
      }
    }, _this.setPage = function (selectedPage) {
      UIManager.dispatchViewManagerCommand(ReactNative.findNodeHandle(_this), UIManager.AndroidViewPager.Commands.setPage, [selectedPage]);
    }, _this.setPageWithoutAnimation = function (selectedPage) {
      UIManager.dispatchViewManagerCommand(ReactNative.findNodeHandle(_this), UIManager.AndroidViewPager.Commands.setPageWithoutAnimation, [selectedPage]);
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(ViewPagerAndroid, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      if (this.props.initialPage != null) {
        this.setPageWithoutAnimation(this.props.initialPage);
      }
    }
  }, {
    key: 'render',
    value: function render() {
      return React.createElement(NativeAndroidViewPager, babelHelpers.extends({}, this.props, {
        ref: VIEWPAGER_REF,
        style: this.props.style,
        onPageScroll: this._onPageScroll,
        onPageScrollStateChanged: this._onPageScrollStateChanged,
        onPageSelected: this._onPageSelected,
        children: this._childrenWithOverridenStyle(),
        __source: {
          fileName: _jsxFileName,
          lineNumber: 231
        }
      }));
    }
  }]);
  return ViewPagerAndroid;
}(React.Component);

ViewPagerAndroid.propTypes = babelHelpers.extends({}, View.propTypes, {
  initialPage: ReactPropTypes.number,

  onPageScroll: ReactPropTypes.func,

  onPageScrollStateChanged: ReactPropTypes.func,

  onPageSelected: ReactPropTypes.func,

  pageMargin: ReactPropTypes.number,

  keyboardDismissMode: ReactPropTypes.oneOf(['none', 'on-drag']),

  scrollEnabled: ReactPropTypes.bool
});


var NativeAndroidViewPager = requireNativeComponent('AndroidViewPager', ViewPagerAndroid);

module.exports = ViewPagerAndroid;
}, 670, null, "ViewPagerAndroid");
__d(/* WebView */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native/Libraries/Components/WebView/WebView.android.js';
var EdgeInsetsPropType = require(442                 ); // 442 = EdgeInsetsPropType
var ActivityIndicator = require(337                ); // 337 = ActivityIndicator
var React = require(398    ); // 398 = React
var ReactNative = require(513          ); // 513 = ReactNative
var StyleSheet = require(421         ); // 421 = StyleSheet
var UIManager = require(395        ); // 395 = UIManager
var View = require(441   ); // 441 = View

var deprecatedPropType = require(431                 ); // 431 = deprecatedPropType
var keyMirror = require(427                 ); // 427 = fbjs/lib/keyMirror
var requireNativeComponent = require(450                     ); // 450 = requireNativeComponent
var resolveAssetSource = require(493                 ); // 493 = resolveAssetSource

var PropTypes = React.PropTypes;

var RCT_WEBVIEW_REF = 'webview';

var WebViewState = keyMirror({
  IDLE: null,
  LOADING: null,
  ERROR: null
});

var defaultRenderLoading = function defaultRenderLoading() {
  return React.createElement(
    View,
    { style: styles.loadingView, __source: {
        fileName: _jsxFileName,
        lineNumber: 37
      }
    },
    React.createElement(ActivityIndicator, {
      style: styles.loadingProgressBar,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 38
      }
    })
  );
};

var WebView = function (_React$Component) {
  babelHelpers.inherits(WebView, _React$Component);

  function WebView() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, WebView);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = WebView.__proto__ || Object.getPrototypeOf(WebView)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      viewState: WebViewState.IDLE,
      lastErrorEvent: null,
      startInLoadingState: true
    }, _this.goForward = function () {
      UIManager.dispatchViewManagerCommand(_this.getWebViewHandle(), UIManager.RCTWebView.Commands.goForward, null);
    }, _this.goBack = function () {
      UIManager.dispatchViewManagerCommand(_this.getWebViewHandle(), UIManager.RCTWebView.Commands.goBack, null);
    }, _this.reload = function () {
      UIManager.dispatchViewManagerCommand(_this.getWebViewHandle(), UIManager.RCTWebView.Commands.reload, null);
    }, _this.stopLoading = function () {
      UIManager.dispatchViewManagerCommand(_this.getWebViewHandle(), UIManager.RCTWebView.Commands.stopLoading, null);
    }, _this.postMessage = function (data) {
      UIManager.dispatchViewManagerCommand(_this.getWebViewHandle(), UIManager.RCTWebView.Commands.postMessage, [String(data)]);
    }, _this.injectJavaScript = function (data) {
      UIManager.dispatchViewManagerCommand(_this.getWebViewHandle(), UIManager.RCTWebView.Commands.injectJavaScript, [data]);
    }, _this.updateNavigationState = function (event) {
      if (_this.props.onNavigationStateChange) {
        _this.props.onNavigationStateChange(event.nativeEvent);
      }
    }, _this.getWebViewHandle = function () {
      return ReactNative.findNodeHandle(_this.refs[RCT_WEBVIEW_REF]);
    }, _this.onLoadingStart = function (event) {
      var onLoadStart = _this.props.onLoadStart;
      onLoadStart && onLoadStart(event);
      _this.updateNavigationState(event);
    }, _this.onLoadingError = function (event) {
      event.persist();var _this$props = _this.props,
          onError = _this$props.onError,
          onLoadEnd = _this$props.onLoadEnd;

      onError && onError(event);
      onLoadEnd && onLoadEnd(event);
      console.warn('Encountered an error loading page', event.nativeEvent);

      _this.setState({
        lastErrorEvent: event.nativeEvent,
        viewState: WebViewState.ERROR
      });
    }, _this.onLoadingFinish = function (event) {
      var _this$props2 = _this.props,
          onLoad = _this$props2.onLoad,
          onLoadEnd = _this$props2.onLoadEnd;

      onLoad && onLoad(event);
      onLoadEnd && onLoadEnd(event);
      _this.setState({
        viewState: WebViewState.IDLE
      });
      _this.updateNavigationState(event);
    }, _this.onMessage = function (event) {
      var onMessage = _this.props.onMessage;

      onMessage && onMessage(event);
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(WebView, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      if (this.props.startInLoadingState) {
        this.setState({ viewState: WebViewState.LOADING });
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var otherView = null;

      if (this.state.viewState === WebViewState.LOADING) {
        otherView = (this.props.renderLoading || defaultRenderLoading)();
      } else if (this.state.viewState === WebViewState.ERROR) {
        var errorEvent = this.state.lastErrorEvent;
        otherView = this.props.renderError && this.props.renderError(errorEvent.domain, errorEvent.code, errorEvent.description);
      } else if (this.state.viewState !== WebViewState.IDLE) {
        console.error('RCTWebView invalid state encountered: ' + this.state.loading);
      }

      var webViewStyles = [styles.container, this.props.style];
      if (this.state.viewState === WebViewState.LOADING || this.state.viewState === WebViewState.ERROR) {
        webViewStyles.push(styles.hidden);
      }

      var source = this.props.source || {};
      if (this.props.html) {
        source.html = this.props.html;
      } else if (this.props.url) {
        source.uri = this.props.url;
      }

      if (source.method === 'POST' && source.headers) {
        console.warn('WebView: `source.headers` is not supported when using POST.');
      } else if (source.method === 'GET' && source.body) {
        console.warn('WebView: `source.body` is not supported when using GET.');
      }

      var webView = React.createElement(RCTWebView, {
        ref: RCT_WEBVIEW_REF,
        key: 'webViewKey',
        style: webViewStyles,
        source: resolveAssetSource(source),
        scalesPageToFit: this.props.scalesPageToFit,
        injectedJavaScript: this.props.injectedJavaScript,
        userAgent: this.props.userAgent,
        javaScriptEnabled: this.props.javaScriptEnabled,
        domStorageEnabled: this.props.domStorageEnabled,
        messagingEnabled: typeof this.props.onMessage === 'function',
        onMessage: this.onMessage,
        contentInset: this.props.contentInset,
        automaticallyAdjustContentInsets: this.props.automaticallyAdjustContentInsets,
        onContentSizeChange: this.props.onContentSizeChange,
        onLoadingStart: this.onLoadingStart,
        onLoadingFinish: this.onLoadingFinish,
        onLoadingError: this.onLoadingError,
        testID: this.props.testID,
        mediaPlaybackRequiresUserAction: this.props.mediaPlaybackRequiresUserAction,
        allowUniversalAccessFromFileURLs: this.props.allowUniversalAccessFromFileURLs,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 218
        }
      });

      return React.createElement(
        View,
        { style: styles.container, __source: {
            fileName: _jsxFileName,
            lineNumber: 242
          }
        },
        webView,
        otherView
      );
    }
  }]);
  return WebView;
}(React.Component);

WebView.propTypes = babelHelpers.extends({}, View.propTypes, {
  renderError: PropTypes.func,
  renderLoading: PropTypes.func,
  onLoad: PropTypes.func,
  onLoadEnd: PropTypes.func,
  onLoadStart: PropTypes.func,
  onError: PropTypes.func,
  automaticallyAdjustContentInsets: PropTypes.bool,
  contentInset: EdgeInsetsPropType,
  onNavigationStateChange: PropTypes.func,
  onMessage: PropTypes.func,
  onContentSizeChange: PropTypes.func,
  startInLoadingState: PropTypes.bool,
  style: View.propTypes.style,

  html: deprecatedPropType(PropTypes.string, 'Use the `source` prop instead.'),

  url: deprecatedPropType(PropTypes.string, 'Use the `source` prop instead.'),

  source: PropTypes.oneOfType([PropTypes.shape({
    uri: PropTypes.string,

    method: PropTypes.oneOf(['GET', 'POST']),

    headers: PropTypes.object,

    body: PropTypes.string
  }), PropTypes.shape({
    html: PropTypes.string,

    baseUrl: PropTypes.string
  }), PropTypes.number]),

  javaScriptEnabled: PropTypes.bool,

  domStorageEnabled: PropTypes.bool,

  injectedJavaScript: PropTypes.string,

  scalesPageToFit: PropTypes.bool,

  userAgent: PropTypes.string,

  testID: PropTypes.string,

  mediaPlaybackRequiresUserAction: PropTypes.bool,

  allowUniversalAccessFromFileURLs: PropTypes.bool
});
WebView.defaultProps = {
  javaScriptEnabled: true,
  scalesPageToFit: true
};


var RCTWebView = requireNativeComponent('RCTWebView', WebView, {
  nativeOnly: {
    messagingEnabled: PropTypes.bool
  }
});

var styles = StyleSheet.create({
  container: {
    flex: 1
  },
  hidden: {
    height: 0,
    flex: 0 },
  loadingView: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center'
  },
  loadingProgressBar: {
    height: 20
  }
});

module.exports = WebView;
}, 671, null, "WebView");
__d(/* ActionSheetIOS */function(global, require, module, exports) {
'use strict';

var RCTActionSheetManager = require(349            ).ActionSheetManager; // 349 = NativeModules

var invariant = require(346                 ); // 346 = fbjs/lib/invariant
var processColor = require(436           ); // 436 = processColor

var ActionSheetIOS = {
  showActionSheetWithOptions: function showActionSheetWithOptions(options, callback) {
    invariant(typeof options === 'object' && options !== null, 'Options must be a valid object');
    invariant(typeof callback === 'function', 'Must provide a valid callback');
    RCTActionSheetManager.showActionSheetWithOptions(babelHelpers.extends({}, options, { tintColor: processColor(options.tintColor) }), callback);
  },
  showShareActionSheetWithOptions: function showShareActionSheetWithOptions(options, failureCallback, successCallback) {
    invariant(typeof options === 'object' && options !== null, 'Options must be a valid object');
    invariant(typeof failureCallback === 'function', 'Must provide a valid failureCallback');
    invariant(typeof successCallback === 'function', 'Must provide a valid successCallback');
    RCTActionSheetManager.showShareActionSheetWithOptions(babelHelpers.extends({}, options, { tintColor: processColor(options.tintColor) }), failureCallback, successCallback);
  }
};

module.exports = ActionSheetIOS;
}, 672, null, "ActionSheetIOS");
__d(/* AdSupportIOS */function(global, require, module, exports) {
'use strict';

var AdSupport = require(349            ).AdSupport; // 349 = NativeModules

module.exports = {
  getAdvertisingId: function getAdvertisingId(onSuccess, onFailure) {
    AdSupport.getAdvertisingId(onSuccess, onFailure);
  },

  getAdvertisingTrackingEnabled: function getAdvertisingTrackingEnabled(onSuccess, onFailure) {
    AdSupport.getAdvertisingTrackingEnabled(onSuccess, onFailure);
  }
};
}, 673, null, "AdSupportIOS");
__d(/* AppRegistry */function(global, require, module, exports) {
'use strict';

var BatchedBridge = require(350            ); // 350 = BatchedBridge
var BugReporting = require(675           ); // 675 = BugReporting
var ReactNative = require(513          ); // 513 = ReactNative

var infoLog = require(577      ); // 577 = infoLog
var invariant = require(346                 ); // 346 = fbjs/lib/invariant
var renderApplication = require(678                ); // 678 = renderApplication

var _require = require(349            ), // 349 = NativeModules
    HeadlessJsTaskSupport = _require.HeadlessJsTaskSupport;

if (__DEV__) {
  require(680               ); // 680 = RCTRenderingPerf
}

var runnables = {};
var runCount = 1;
var tasks = new Map();

var AppRegistry = {
  registerConfig: function registerConfig(config) {
    for (var i = 0; i < config.length; ++i) {
      var appConfig = config[i];
      if (appConfig.run) {
        AppRegistry.registerRunnable(appConfig.appKey, appConfig.run);
      } else {
        invariant(appConfig.component, 'No component provider passed in');
        AppRegistry.registerComponent(appConfig.appKey, appConfig.component);
      }
    }
  },

  registerComponent: function registerComponent(appKey, getComponentFunc) {
    runnables[appKey] = {
      run: function run(appParameters) {
        return renderApplication(getComponentFunc(), appParameters.initialProps, appParameters.rootTag);
      }
    };
    return appKey;
  },

  registerRunnable: function registerRunnable(appKey, func) {
    runnables[appKey] = { run: func };
    return appKey;
  },

  getAppKeys: function getAppKeys() {
    return Object.keys(runnables);
  },

  runApplication: function runApplication(appKey, appParameters) {
    var msg = 'Running application "' + appKey + '" with appParams: ' + JSON.stringify(appParameters) + '. ' + '__DEV__ === ' + String(__DEV__) + ', development-level warning are ' + (__DEV__ ? 'ON' : 'OFF') + ', performance optimizations are ' + (__DEV__ ? 'OFF' : 'ON');
    infoLog(msg);
    BugReporting.addSource('AppRegistry.runApplication' + runCount++, function () {
      return msg;
    });
    invariant(runnables[appKey] && runnables[appKey].run, 'Application ' + appKey + ' has not been registered. This ' + 'is either due to a require() error during initialization ' + 'or failure to call AppRegistry.registerComponent.');
    runnables[appKey].run(appParameters);
  },

  unmountApplicationComponentAtRootTag: function unmountApplicationComponentAtRootTag(rootTag) {
    ReactNative.unmountComponentAtNodeAndRemoveContainer(rootTag);
  },

  registerHeadlessTask: function registerHeadlessTask(taskKey, task) {
    if (tasks.has(taskKey)) {
      console.warn('registerHeadlessTask called multiple times for same key \'' + taskKey + '\'');
    }
    tasks.set(taskKey, task);
  },

  startHeadlessTask: function startHeadlessTask(taskId, taskKey, data) {
    var taskProvider = tasks.get(taskKey);
    if (!taskProvider) {
      throw new Error('No task registered for key ' + taskKey);
    }
    taskProvider()(data).then(function () {
      return HeadlessJsTaskSupport.notifyTaskFinished(taskId);
    }).catch(function (reason) {
      console.error(reason);
      HeadlessJsTaskSupport.notifyTaskFinished(taskId);
    });
  }

};

BatchedBridge.registerCallableModule('AppRegistry', AppRegistry);

module.exports = AppRegistry;
}, 674, null, "AppRegistry");
__d(/* BugReporting */function(global, require, module, exports) {
'use strict';

var RCTDeviceEventEmitter = require(379                    ); // 379 = RCTDeviceEventEmitter
var Map = require(536  ); // 536 = Map
var infoLog = require(577      ); // 577 = infoLog

function defaultExtras() {
  BugReporting.addFileSource('react_hierarchy.txt', function () {
    return require(676            )(); // 676 = dumpReactTree
  });
}

var BugReporting = function () {
  function BugReporting() {
    babelHelpers.classCallCheck(this, BugReporting);
  }

  babelHelpers.createClass(BugReporting, null, [{
    key: '_maybeInit',
    value: function _maybeInit() {
      if (!BugReporting._subscription) {
        BugReporting._subscription = RCTDeviceEventEmitter.addListener('collectBugExtraData', BugReporting.collectExtraData, null);
        defaultExtras();
      }
    }
  }, {
    key: 'addSource',
    value: function addSource(key, callback) {
      return this._addSource(key, callback, BugReporting._extraSources);
    }
  }, {
    key: 'addFileSource',
    value: function addFileSource(key, callback) {
      return this._addSource(key, callback, BugReporting._fileSources);
    }
  }, {
    key: '_addSource',
    value: function _addSource(key, callback, source) {
      BugReporting._maybeInit();
      if (source.has(key)) {
        console.warn('BugReporting.add* called multiple times for same key \'' + key + '\'');
      }
      source.set(key, callback);
      return { remove: function remove() {
          source.delete(key);
        } };
    }
  }, {
    key: 'collectExtraData',
    value: function collectExtraData() {
      var extraData = {};
      for (var _iterator = BugReporting._extraSources, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === 'function' ? Symbol.iterator : '@@iterator']();;) {
        var _ref3;

        if (_isArray) {
          if (_i >= _iterator.length) break;
          _ref3 = _iterator[_i++];
        } else {
          _i = _iterator.next();
          if (_i.done) break;
          _ref3 = _i.value;
        }

        var _ref = _ref3;

        var _ref2 = babelHelpers.slicedToArray(_ref, 2);

        var _key = _ref2[0];
        var callback = _ref2[1];

        extraData[_key] = callback();
      }
      var fileData = {};
      for (var _iterator2 = BugReporting._fileSources, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[typeof Symbol === 'function' ? Symbol.iterator : '@@iterator']();;) {
        var _ref6;

        if (_isArray2) {
          if (_i2 >= _iterator2.length) break;
          _ref6 = _iterator2[_i2++];
        } else {
          _i2 = _iterator2.next();
          if (_i2.done) break;
          _ref6 = _i2.value;
        }

        var _ref4 = _ref6;

        var _ref5 = babelHelpers.slicedToArray(_ref4, 2);

        var _key2 = _ref5[0];
        var _callback = _ref5[1];

        fileData[_key2] = _callback();
      }
      infoLog('BugReporting extraData:', extraData);
      var BugReportingNativeModule = require(349            ).BugReporting; // 349 = NativeModules
      BugReportingNativeModule && BugReportingNativeModule.setExtraData && BugReportingNativeModule.setExtraData(extraData, fileData);

      return { extras: extraData, files: fileData };
    }
  }]);
  return BugReporting;
}();

BugReporting._extraSources = new Map();
BugReporting._fileSources = new Map();
BugReporting._subscription = null;


module.exports = BugReporting;
}, 675, null, "BugReporting");
__d(/* dumpReactTree */function(global, require, module, exports) {
'use strict';

var ReactNativeMount = require(543               ); // 543 = ReactNativeMount
var getReactData = require(677           ); // 677 = getReactData

var INDENTATION_SIZE = 2;
var MAX_DEPTH = 2;
var MAX_STRING_LENGTH = 50;

function dumpReactTree() {
  try {
    return getReactTree();
  } catch (e) {
    return 'Failed to dump react tree: ' + e;
  }
}

function getReactTree() {
  var output = '';
  var rootIds = Object.getOwnPropertyNames(ReactNativeMount._instancesByContainerID);
  for (var _iterator = rootIds, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === 'function' ? Symbol.iterator : '@@iterator']();;) {
    var _ref;

    if (_isArray) {
      if (_i >= _iterator.length) break;
      _ref = _iterator[_i++];
    } else {
      _i = _iterator.next();
      if (_i.done) break;
      _ref = _i.value;
    }

    var rootId = _ref;

    var instance = ReactNativeMount._instancesByContainerID[rootId];
    output += '============ Root ID: ' + rootId + ' ============\n';
    output += dumpNode(instance, 0);
    output += '============ End root ID: ' + rootId + ' ============\n';
  }
  return output;
}

function dumpNode(node, identation) {
  var data = getReactData(node);
  if (data.nodeType === 'Text') {
    return indent(identation) + data.text + '\n';
  } else if (data.nodeType === 'Empty') {
    return '';
  }
  var output = indent(identation) + ('<' + data.name);
  if (data.nodeType === 'Composite') {
    for (var _iterator2 = Object.getOwnPropertyNames(data.props || {}), _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[typeof Symbol === 'function' ? Symbol.iterator : '@@iterator']();;) {
      var _ref2;

      if (_isArray2) {
        if (_i2 >= _iterator2.length) break;
        _ref2 = _iterator2[_i2++];
      } else {
        _i2 = _iterator2.next();
        if (_i2.done) break;
        _ref2 = _i2.value;
      }

      var propName = _ref2;

      if (isNormalProp(propName)) {
        try {
          var value = convertValue(data.props[propName]);
          if (value) {
            output += ' ' + propName + '=' + value;
          }
        } catch (e) {
          var message = '[Failed to get property: ' + e + ']';
          output += ' ' + propName + '=' + message;
        }
      }
    }
  }
  var childOutput = '';
  for (var _iterator3 = data.children || [], _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[typeof Symbol === 'function' ? Symbol.iterator : '@@iterator']();;) {
    var _ref3;

    if (_isArray3) {
      if (_i3 >= _iterator3.length) break;
      _ref3 = _iterator3[_i3++];
    } else {
      _i3 = _iterator3.next();
      if (_i3.done) break;
      _ref3 = _i3.value;
    }

    var child = _ref3;

    childOutput += dumpNode(child, identation + 1);
  }

  if (childOutput) {
    output += '>\n' + childOutput + indent(identation) + ('</' + data.name + '>\n');
  } else {
    output += ' />\n';
  }

  return output;
}

function isNormalProp(name) {
  switch (name) {
    case 'children':
    case 'key':
    case 'ref':
      return false;
    default:
      return true;
  }
}

function convertObject(object, depth) {
  if (depth >= MAX_DEPTH) {
    return '[...omitted]';
  }
  var output = '{';
  var first = true;
  for (var _iterator4 = Object.getOwnPropertyNames(object), _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : _iterator4[typeof Symbol === 'function' ? Symbol.iterator : '@@iterator']();;) {
    var _ref4;

    if (_isArray4) {
      if (_i4 >= _iterator4.length) break;
      _ref4 = _iterator4[_i4++];
    } else {
      _i4 = _iterator4.next();
      if (_i4.done) break;
      _ref4 = _i4.value;
    }

    var key = _ref4;

    if (!first) {
      output += ', ';
    }

    output += key + ': ' + convertValue(object[key], depth + 1);
    first = false;
  }
  return output + '}';
}

function convertValue(value) {
  var depth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

  if (!value) {
    return null;
  }

  switch (typeof value) {
    case 'string':
      return JSON.stringify(possiblyEllipsis(value).replace('\n', '\\n'));
    case 'boolean':
    case 'number':
      return JSON.stringify(value);
    case 'function':
      return '[function]';
    case 'object':
      return convertObject(value, depth);
    default:
      return null;
  }
}

function possiblyEllipsis(value) {
  if (value.length > MAX_STRING_LENGTH) {
    return value.slice(0, MAX_STRING_LENGTH) + '...';
  } else {
    return value;
  }
}

function indent(size) {
  return ' '.repeat(size * INDENTATION_SIZE);
}

module.exports = dumpReactTree;
}, 676, null, "dumpReactTree");
__d(/* getReactData */function(global, require, module, exports) {
'use strict';

function getData(element) {
  var children = null;
  var props = null;
  var state = null;
  var context = null;
  var updater = null;
  var name = null;
  var type = null;
  var text = null;
  var publicInstance = null;
  var nodeType = 'Native';

  if (typeof element !== 'object') {
    nodeType = 'Text';
    text = element + '';
  } else if (element._currentElement === null || element._currentElement === false) {
    nodeType = 'Empty';
  } else if (element._renderedComponent) {
    nodeType = 'NativeWrapper';
    children = [element._renderedComponent];
    props = element._instance.props;
    state = element._instance.state;
    context = element._instance.context;
    if (context && Object.keys(context).length === 0) {
      context = null;
    }
  } else if (element._renderedChildren) {
    children = childrenList(element._renderedChildren);
  } else if (element._currentElement && element._currentElement.props) {
    children = element._currentElement.props.children;
  }

  if (!props && element._currentElement && element._currentElement.props) {
    props = element._currentElement.props;
  }

  if (element._currentElement != null) {
    type = element._currentElement.type;
    if (typeof type === 'string') {
      name = type;
    } else if (element.getName) {
      nodeType = 'Composite';
      name = element.getName();

      if (element._renderedComponent && element._currentElement.props === element._renderedComponent._currentElement) {
        nodeType = 'Wrapper';
      }
      if (name === null) {
        name = 'No display name';
      }
    } else if (element._stringText) {
      nodeType = 'Text';
      text = element._stringText;
    } else {
      name = type.displayName || type.name || 'Unknown';
    }
  }

  if (element._instance) {
    var inst = element._instance;
    updater = {
      setState: inst.setState && inst.setState.bind(inst),
      forceUpdate: inst.forceUpdate && inst.forceUpdate.bind(inst),
      setInProps: inst.forceUpdate && setInProps.bind(null, element),
      setInState: inst.forceUpdate && setInState.bind(null, inst),
      setInContext: inst.forceUpdate && setInContext.bind(null, inst)
    };
    publicInstance = inst;

    if (inst._renderedChildren) {
      children = childrenList(inst._renderedChildren);
    }
  }

  return {
    nodeType: nodeType,
    type: type,
    name: name,
    props: props,
    state: state,
    context: context,
    children: children,
    text: text,
    updater: updater,
    publicInstance: publicInstance
  };
}

function setInProps(internalInst, path, value) {
  var element = internalInst._currentElement;
  internalInst._currentElement = babelHelpers.extends({}, element, {
    props: copyWithSet(element.props, path, value)
  });
  internalInst._instance.forceUpdate();
}

function setInState(inst, path, value) {
  setIn(inst.state, path, value);
  inst.forceUpdate();
}

function setInContext(inst, path, value) {
  setIn(inst.context, path, value);
  inst.forceUpdate();
}

function setIn(obj, path, value) {
  var last = path.pop();
  var parent = path.reduce(function (obj_, attr) {
    return obj_ ? obj_[attr] : null;
  }, obj);
  if (parent) {
    parent[last] = value;
  }
}

function childrenList(children) {
  var res = [];
  for (var name in children) {
    res.push(children[name]);
  }
  return res;
}

function copyWithSetImpl(obj, path, idx, value) {
  if (idx >= path.length) {
    return value;
  }
  var key = path[idx];
  var updated = Array.isArray(obj) ? obj.slice() : babelHelpers.extends({}, obj);

  updated[key] = copyWithSetImpl(obj[key], path, idx + 1, value);
  return updated;
}

function copyWithSet(obj, path, value) {
  return copyWithSetImpl(obj, path, 0, value);
}

module.exports = getData;
}, 677, null, "getReactData");
__d(/* renderApplication */function(global, require, module, exports) {

'use strict';

var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native/Libraries/ReactNative/renderApplication.js';
var AppContainer = require(607           ); // 607 = AppContainer
var React = require(398    ); // 398 = React
var ReactNative = require(513          ); // 513 = ReactNative

var invariant = require(346                 ); // 346 = fbjs/lib/invariant

require(679          ); // 679 = BackAndroid

function renderApplication(RootComponent, initialProps, rootTag) {
  invariant(rootTag, 'Expect to have a valid rootTag, instead got ', rootTag);
  ReactNative.render(React.createElement(
    AppContainer,
    { rootTag: rootTag, __source: {
        fileName: _jsxFileName,
        lineNumber: 34
      }
    },
    React.createElement(RootComponent, babelHelpers.extends({}, initialProps, {
      rootTag: rootTag,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 35
      }
    }))
  ), rootTag);
}

module.exports = renderApplication;
}, 678, null, "renderApplication");
__d(/* BackAndroid */function(global, require, module, exports) {

'use strict';

var DeviceEventManager = require(349            ).DeviceEventManager; // 349 = NativeModules
var RCTDeviceEventEmitter = require(379                    ); // 379 = RCTDeviceEventEmitter

var DEVICE_BACK_EVENT = 'hardwareBackPress';

var _backPressSubscriptions = new Set();

RCTDeviceEventEmitter.addListener(DEVICE_BACK_EVENT, function () {
  var backPressSubscriptions = new Set(_backPressSubscriptions);
  var invokeDefault = true;
  var subscriptions = [].concat(babelHelpers.toConsumableArray(backPressSubscriptions)).reverse();
  for (var i = 0; i < subscriptions.length; ++i) {
    if (subscriptions[i]()) {
      invokeDefault = false;
      break;
    }
  }

  if (invokeDefault) {
    BackAndroid.exitApp();
  }
});

var BackAndroid = {

  exitApp: function exitApp() {
    DeviceEventManager.invokeDefaultBackPressHandler();
  },

  addEventListener: function addEventListener(eventName, handler) {
    _backPressSubscriptions.add(handler);
    return {
      remove: function remove() {
        return BackAndroid.removeEventListener(eventName, handler);
      }
    };
  },

  removeEventListener: function removeEventListener(eventName, handler) {
    _backPressSubscriptions.delete(handler);
  }

};

module.exports = BackAndroid;
}, 679, null, "BackAndroid");
__d(/* RCTRenderingPerf */function(global, require, module, exports) {
'use strict';

var ReactDebugTool = require(358             ); // 358 = ReactDebugTool
var ReactPerf = require(681        ); // 681 = ReactPerf

var invariant = require(346                 ); // 346 = fbjs/lib/invariant
var performanceNow = require(362                      ); // 362 = fbjs/lib/performanceNow

var perfModules = [];
var enabled = false;
var lastRenderStartTime = 0;
var totalRenderDuration = 0;

var RCTRenderingPerfDevtool = {
  onBeginLifeCycleTimer: function onBeginLifeCycleTimer(debugID, timerType) {
    if (timerType === 'render') {
      lastRenderStartTime = performanceNow();
    }
  },
  onEndLifeCycleTimer: function onEndLifeCycleTimer(debugID, timerType) {
    if (timerType === 'render') {
      var lastRenderDuration = performanceNow() - lastRenderStartTime;
      totalRenderDuration += lastRenderDuration;
    }
  }
};

var RCTRenderingPerf = {
  toggle: function toggle() {
    console.log('Render perfomance measurements enabled');
    enabled = true;
  },

  start: function start() {
    if (!enabled) {
      return;
    }

    ReactPerf.start();
    ReactDebugTool.addHook(RCTRenderingPerfDevtool);
    perfModules.forEach(function (module) {
      return module.start();
    });
  },

  stop: function stop() {
    if (!enabled) {
      return;
    }

    ReactPerf.stop();
    ReactPerf.printInclusive();
    ReactPerf.printWasted();
    ReactDebugTool.removeHook(RCTRenderingPerfDevtool);

    console.log('Total time spent in render(): ' + totalRenderDuration.toFixed(2) + ' ms');
    lastRenderStartTime = 0;
    totalRenderDuration = 0;

    perfModules.forEach(function (module) {
      return module.stop();
    });
  },

  register: function register(module) {
    invariant(typeof module.start === 'function', 'Perf module should have start() function');
    invariant(typeof module.stop === 'function', 'Perf module should have stop() function');
    perfModules.push(module);
  }
};

module.exports = RCTRenderingPerf;
}, 680, null, "RCTRenderingPerf");
__d(/* ReactPerf */function(global, require, module, exports) {

'use strict';

var ReactDebugTool = require(358             ); // 358 = ReactDebugTool
var warning = require(335               ); // 335 = fbjs/lib/warning
var alreadyWarned = false;

function roundFloat(val) {
  var base = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;

  var n = Math.pow(10, base);
  return Math.floor(val * n) / n;
}

function consoleTable(table) {
  console.table(table);
}

function warnInProduction() {
  if (alreadyWarned) {
    return;
  }
  alreadyWarned = true;
  if (typeof console !== 'undefined') {
    console.error('ReactPerf is not supported in the production builds of React. ' + 'To collect measurements, please use the development build of React instead.');
  }
}

function getLastMeasurements() {
  if (!__DEV__) {
    warnInProduction();
    return [];
  }

  return ReactDebugTool.getFlushHistory();
}

function getExclusive() {
  var flushHistory = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getLastMeasurements();

  if (!__DEV__) {
    warnInProduction();
    return [];
  }

  var aggregatedStats = {};
  var affectedIDs = {};

  function updateAggregatedStats(treeSnapshot, instanceID, timerType, applyUpdate) {
    var displayName = treeSnapshot[instanceID].displayName;

    var key = displayName;
    var stats = aggregatedStats[key];
    if (!stats) {
      affectedIDs[key] = {};
      stats = aggregatedStats[key] = {
        key: key,
        instanceCount: 0,
        counts: {},
        durations: {},
        totalDuration: 0
      };
    }
    if (!stats.durations[timerType]) {
      stats.durations[timerType] = 0;
    }
    if (!stats.counts[timerType]) {
      stats.counts[timerType] = 0;
    }
    affectedIDs[key][instanceID] = true;
    applyUpdate(stats);
  }

  flushHistory.forEach(function (flush) {
    var measurements = flush.measurements,
        treeSnapshot = flush.treeSnapshot;

    measurements.forEach(function (measurement) {
      var duration = measurement.duration,
          instanceID = measurement.instanceID,
          timerType = measurement.timerType;

      updateAggregatedStats(treeSnapshot, instanceID, timerType, function (stats) {
        stats.totalDuration += duration;
        stats.durations[timerType] += duration;
        stats.counts[timerType]++;
      });
    });
  });

  return Object.keys(aggregatedStats).map(function (key) {
    return babelHelpers.extends({}, aggregatedStats[key], {
      instanceCount: Object.keys(affectedIDs[key]).length
    });
  }).sort(function (a, b) {
    return b.totalDuration - a.totalDuration;
  });
}

function getInclusive() {
  var flushHistory = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getLastMeasurements();

  if (!__DEV__) {
    warnInProduction();
    return [];
  }

  var aggregatedStats = {};
  var affectedIDs = {};

  function updateAggregatedStats(treeSnapshot, instanceID, applyUpdate) {
    var _treeSnapshot$instanc = treeSnapshot[instanceID],
        displayName = _treeSnapshot$instanc.displayName,
        ownerID = _treeSnapshot$instanc.ownerID;

    var owner = treeSnapshot[ownerID];
    var key = (owner ? owner.displayName + ' > ' : '') + displayName;
    var stats = aggregatedStats[key];
    if (!stats) {
      affectedIDs[key] = {};
      stats = aggregatedStats[key] = {
        key: key,
        instanceCount: 0,
        inclusiveRenderDuration: 0,
        renderCount: 0
      };
    }
    affectedIDs[key][instanceID] = true;
    applyUpdate(stats);
  }

  var isCompositeByID = {};
  flushHistory.forEach(function (flush) {
    var measurements = flush.measurements;

    measurements.forEach(function (measurement) {
      var instanceID = measurement.instanceID,
          timerType = measurement.timerType;

      if (timerType !== 'render') {
        return;
      }
      isCompositeByID[instanceID] = true;
    });
  });

  flushHistory.forEach(function (flush) {
    var measurements = flush.measurements,
        treeSnapshot = flush.treeSnapshot;

    measurements.forEach(function (measurement) {
      var duration = measurement.duration,
          instanceID = measurement.instanceID,
          timerType = measurement.timerType;

      if (timerType !== 'render') {
        return;
      }
      updateAggregatedStats(treeSnapshot, instanceID, function (stats) {
        stats.renderCount++;
      });
      var nextParentID = instanceID;
      while (nextParentID) {
        if (isCompositeByID[nextParentID]) {
          updateAggregatedStats(treeSnapshot, nextParentID, function (stats) {
            stats.inclusiveRenderDuration += duration;
          });
        }
        nextParentID = treeSnapshot[nextParentID].parentID;
      }
    });
  });

  return Object.keys(aggregatedStats).map(function (key) {
    return babelHelpers.extends({}, aggregatedStats[key], {
      instanceCount: Object.keys(affectedIDs[key]).length
    });
  }).sort(function (a, b) {
    return b.inclusiveRenderDuration - a.inclusiveRenderDuration;
  });
}

function getWasted() {
  var flushHistory = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getLastMeasurements();

  if (!__DEV__) {
    warnInProduction();
    return [];
  }

  var aggregatedStats = {};
  var affectedIDs = {};

  function updateAggregatedStats(treeSnapshot, instanceID, applyUpdate) {
    var _treeSnapshot$instanc2 = treeSnapshot[instanceID],
        displayName = _treeSnapshot$instanc2.displayName,
        ownerID = _treeSnapshot$instanc2.ownerID;

    var owner = treeSnapshot[ownerID];
    var key = (owner ? owner.displayName + ' > ' : '') + displayName;
    var stats = aggregatedStats[key];
    if (!stats) {
      affectedIDs[key] = {};
      stats = aggregatedStats[key] = {
        key: key,
        instanceCount: 0,
        inclusiveRenderDuration: 0,
        renderCount: 0
      };
    }
    affectedIDs[key][instanceID] = true;
    applyUpdate(stats);
  }

  flushHistory.forEach(function (flush) {
    var measurements = flush.measurements,
        treeSnapshot = flush.treeSnapshot,
        operations = flush.operations;

    var isDefinitelyNotWastedByID = {};

    operations.forEach(function (operation) {
      var instanceID = operation.instanceID;

      var nextParentID = instanceID;
      while (nextParentID) {
        isDefinitelyNotWastedByID[nextParentID] = true;
        nextParentID = treeSnapshot[nextParentID].parentID;
      }
    });

    var renderedCompositeIDs = {};
    measurements.forEach(function (measurement) {
      var instanceID = measurement.instanceID,
          timerType = measurement.timerType;

      if (timerType !== 'render') {
        return;
      }
      renderedCompositeIDs[instanceID] = true;
    });

    measurements.forEach(function (measurement) {
      var duration = measurement.duration,
          instanceID = measurement.instanceID,
          timerType = measurement.timerType;

      if (timerType !== 'render') {
        return;
      }

      var updateCount = treeSnapshot[instanceID].updateCount;

      if (isDefinitelyNotWastedByID[instanceID] || updateCount === 0) {
        return;
      }

      updateAggregatedStats(treeSnapshot, instanceID, function (stats) {
        stats.renderCount++;
      });

      var nextParentID = instanceID;
      while (nextParentID) {
        var isWasted = renderedCompositeIDs[nextParentID] && !isDefinitelyNotWastedByID[nextParentID];
        if (isWasted) {
          updateAggregatedStats(treeSnapshot, nextParentID, function (stats) {
            stats.inclusiveRenderDuration += duration;
          });
        }
        nextParentID = treeSnapshot[nextParentID].parentID;
      }
    });
  });

  return Object.keys(aggregatedStats).map(function (key) {
    return babelHelpers.extends({}, aggregatedStats[key], {
      instanceCount: Object.keys(affectedIDs[key]).length
    });
  }).sort(function (a, b) {
    return b.inclusiveRenderDuration - a.inclusiveRenderDuration;
  });
}

function getOperations() {
  var flushHistory = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getLastMeasurements();

  if (!__DEV__) {
    warnInProduction();
    return [];
  }

  var stats = [];
  flushHistory.forEach(function (flush, flushIndex) {
    var operations = flush.operations,
        treeSnapshot = flush.treeSnapshot;

    operations.forEach(function (operation) {
      var instanceID = operation.instanceID,
          type = operation.type,
          payload = operation.payload;
      var _treeSnapshot$instanc3 = treeSnapshot[instanceID],
          displayName = _treeSnapshot$instanc3.displayName,
          ownerID = _treeSnapshot$instanc3.ownerID;

      var owner = treeSnapshot[ownerID];
      var key = (owner ? owner.displayName + ' > ' : '') + displayName;

      stats.push({
        flushIndex: flushIndex,
        instanceID: instanceID,
        key: key,
        type: type,
        ownerID: ownerID,
        payload: payload
      });
    });
  });
  return stats;
}

function printExclusive(flushHistory) {
  if (!__DEV__) {
    warnInProduction();
    return;
  }

  var stats = getExclusive(flushHistory);
  var table = stats.map(function (item) {
    var key = item.key,
        instanceCount = item.instanceCount,
        totalDuration = item.totalDuration;

    var renderCount = item.counts.render || 0;
    var renderDuration = item.durations.render || 0;
    return {
      'Component': key,
      'Total time (ms)': roundFloat(totalDuration),
      'Instance count': instanceCount,
      'Total render time (ms)': roundFloat(renderDuration),
      'Average render time (ms)': renderCount ? roundFloat(renderDuration / renderCount) : undefined,
      'Render count': renderCount,
      'Total lifecycle time (ms)': roundFloat(totalDuration - renderDuration)
    };
  });
  consoleTable(table);
}

function printInclusive(flushHistory) {
  if (!__DEV__) {
    warnInProduction();
    return;
  }

  var stats = getInclusive(flushHistory);
  var table = stats.map(function (item) {
    var key = item.key,
        instanceCount = item.instanceCount,
        inclusiveRenderDuration = item.inclusiveRenderDuration,
        renderCount = item.renderCount;

    return {
      'Owner > Component': key,
      'Inclusive render time (ms)': roundFloat(inclusiveRenderDuration),
      'Instance count': instanceCount,
      'Render count': renderCount
    };
  });
  consoleTable(table);
}

function printWasted(flushHistory) {
  if (!__DEV__) {
    warnInProduction();
    return;
  }

  var stats = getWasted(flushHistory);
  var table = stats.map(function (item) {
    var key = item.key,
        instanceCount = item.instanceCount,
        inclusiveRenderDuration = item.inclusiveRenderDuration,
        renderCount = item.renderCount;

    return {
      'Owner > Component': key,
      'Inclusive wasted time (ms)': roundFloat(inclusiveRenderDuration),
      'Instance count': instanceCount,
      'Render count': renderCount
    };
  });
  consoleTable(table);
}

function printOperations(flushHistory) {
  if (!__DEV__) {
    warnInProduction();
    return;
  }

  var stats = getOperations(flushHistory);
  var table = stats.map(function (stat) {
    return {
      'Owner > Node': stat.key,
      'Operation': stat.type,
      'Payload': typeof stat.payload === 'object' ? JSON.stringify(stat.payload) : stat.payload,
      'Flush index': stat.flushIndex,
      'Owner Component ID': stat.ownerID,
      'DOM Component ID': stat.instanceID
    };
  });
  consoleTable(table);
}

var warnedAboutPrintDOM = false;
function printDOM(measurements) {
  warning(warnedAboutPrintDOM, '`ReactPerf.printDOM(...)` is deprecated. Use ' + '`ReactPerf.printOperations(...)` instead.');
  warnedAboutPrintDOM = true;
  return printOperations(measurements);
}

var warnedAboutGetMeasurementsSummaryMap = false;
function getMeasurementsSummaryMap(measurements) {
  warning(warnedAboutGetMeasurementsSummaryMap, '`ReactPerf.getMeasurementsSummaryMap(...)` is deprecated. Use ' + '`ReactPerf.getWasted(...)` instead.');
  warnedAboutGetMeasurementsSummaryMap = true;
  return getWasted(measurements);
}

function start() {
  if (!__DEV__) {
    warnInProduction();
    return;
  }

  ReactDebugTool.beginProfiling();
}

function stop() {
  if (!__DEV__) {
    warnInProduction();
    return;
  }

  ReactDebugTool.endProfiling();
}

function isRunning() {
  if (!__DEV__) {
    warnInProduction();
    return false;
  }

  return ReactDebugTool.isProfiling();
}

var ReactPerfAnalysis = {
  getLastMeasurements: getLastMeasurements,
  getExclusive: getExclusive,
  getInclusive: getInclusive,
  getWasted: getWasted,
  getOperations: getOperations,
  printExclusive: printExclusive,
  printInclusive: printInclusive,
  printWasted: printWasted,
  printOperations: printOperations,
  start: start,
  stop: stop,
  isRunning: isRunning,

  printDOM: printDOM,
  getMeasurementsSummaryMap: getMeasurementsSummaryMap
};

module.exports = ReactPerfAnalysis;
}, 681, null, "ReactPerf");
__d(/* AsyncStorage */function(global, require, module, exports) {
'use strict';

var NativeModules = require(349            ); // 349 = NativeModules
var RCTAsyncSQLiteStorage = NativeModules.AsyncSQLiteDBStorage;
var RCTAsyncRocksDBStorage = NativeModules.AsyncRocksDBStorage;
var RCTAsyncFileStorage = NativeModules.AsyncLocalStorage;

var RCTAsyncStorage = RCTAsyncRocksDBStorage || RCTAsyncSQLiteStorage || RCTAsyncFileStorage;

var AsyncStorage = {
  _getRequests: [],
  _getKeys: [],
  _immediate: null,

  getItem: function getItem(key, callback) {
    return new Promise(function (resolve, reject) {
      RCTAsyncStorage.multiGet([key], function (errors, result) {
        var value = result && result[0] && result[0][1] ? result[0][1] : null;
        var errs = convertErrors(errors);
        callback && callback(errs && errs[0], value);
        if (errs) {
          reject(errs[0]);
        } else {
          resolve(value);
        }
      });
    });
  },

  setItem: function setItem(key, value, callback) {
    return new Promise(function (resolve, reject) {
      RCTAsyncStorage.multiSet([[key, value]], function (errors) {
        var errs = convertErrors(errors);
        callback && callback(errs && errs[0]);
        if (errs) {
          reject(errs[0]);
        } else {
          resolve(null);
        }
      });
    });
  },

  removeItem: function removeItem(key, callback) {
    return new Promise(function (resolve, reject) {
      RCTAsyncStorage.multiRemove([key], function (errors) {
        var errs = convertErrors(errors);
        callback && callback(errs && errs[0]);
        if (errs) {
          reject(errs[0]);
        } else {
          resolve(null);
        }
      });
    });
  },

  mergeItem: function mergeItem(key, value, callback) {
    return new Promise(function (resolve, reject) {
      RCTAsyncStorage.multiMerge([[key, value]], function (errors) {
        var errs = convertErrors(errors);
        callback && callback(errs && errs[0]);
        if (errs) {
          reject(errs[0]);
        } else {
          resolve(null);
        }
      });
    });
  },

  clear: function clear(callback) {
    return new Promise(function (resolve, reject) {
      RCTAsyncStorage.clear(function (error) {
        callback && callback(convertError(error));
        if (error && convertError(error)) {
          reject(convertError(error));
        } else {
          resolve(null);
        }
      });
    });
  },

  getAllKeys: function getAllKeys(callback) {
    return new Promise(function (resolve, reject) {
      RCTAsyncStorage.getAllKeys(function (error, keys) {
        callback && callback(convertError(error), keys);
        if (error) {
          reject(convertError(error));
        } else {
          resolve(keys);
        }
      });
    });
  },

  flushGetRequests: function flushGetRequests() {
    var getRequests = this._getRequests;
    var getKeys = this._getKeys;

    this._getRequests = [];
    this._getKeys = [];

    RCTAsyncStorage.multiGet(getKeys, function (errors, result) {
      var map = {};
      result && result.forEach(function (_ref) {
        var _ref2 = babelHelpers.slicedToArray(_ref, 2),
            key = _ref2[0],
            value = _ref2[1];

        map[key] = value;return value;
      });
      var reqLength = getRequests.length;
      for (var i = 0; i < reqLength; i++) {
        var request = getRequests[i];
        var requestKeys = request.keys;
        var requestResult = requestKeys.map(function (key) {
          return [key, map[key]];
        });
        request.callback && request.callback(null, requestResult);
        request.resolve && request.resolve(requestResult);
      }
    });
  },

  multiGet: function multiGet(keys, callback) {
    var _this = this;

    if (!this._immediate) {
      this._immediate = setImmediate(function () {
        _this._immediate = null;
        _this.flushGetRequests();
      });
    }

    var getRequest = {
      keys: keys,
      callback: callback,

      keyIndex: this._getKeys.length,
      resolve: null,
      reject: null
    };

    var promiseResult = new Promise(function (resolve, reject) {
      getRequest.resolve = resolve;
      getRequest.reject = reject;
    });

    this._getRequests.push(getRequest);

    keys.forEach(function (key) {
      if (_this._getKeys.indexOf(key) === -1) {
        _this._getKeys.push(key);
      }
    });

    return promiseResult;
  },

  multiSet: function multiSet(keyValuePairs, callback) {
    return new Promise(function (resolve, reject) {
      RCTAsyncStorage.multiSet(keyValuePairs, function (errors) {
        var error = convertErrors(errors);
        callback && callback(error);
        if (error) {
          reject(error);
        } else {
          resolve(null);
        }
      });
    });
  },

  multiRemove: function multiRemove(keys, callback) {
    return new Promise(function (resolve, reject) {
      RCTAsyncStorage.multiRemove(keys, function (errors) {
        var error = convertErrors(errors);
        callback && callback(error);
        if (error) {
          reject(error);
        } else {
          resolve(null);
        }
      });
    });
  },

  multiMerge: function multiMerge(keyValuePairs, callback) {
    return new Promise(function (resolve, reject) {
      RCTAsyncStorage.multiMerge(keyValuePairs, function (errors) {
        var error = convertErrors(errors);
        callback && callback(error);
        if (error) {
          reject(error);
        } else {
          resolve(null);
        }
      });
    });
  }
};

if (!RCTAsyncStorage.multiMerge) {
  delete AsyncStorage.mergeItem;
  delete AsyncStorage.multiMerge;
}

function convertErrors(errs) {
  if (!errs) {
    return null;
  }
  return (Array.isArray(errs) ? errs : [errs]).map(function (e) {
    return convertError(e);
  });
}

function convertError(error) {
  if (!error) {
    return null;
  }
  var out = new Error(error.message);
  out.key = error.key;
  return out;
}

module.exports = AsyncStorage;
}, 682, null, "AsyncStorage");
__d(/* CameraRoll */function(global, require, module, exports) {
'use strict';

var ReactPropTypes = require(398    ).PropTypes; // 398 = React
var RCTCameraRollManager = require(349            ).CameraRollManager; // 349 = NativeModules

var createStrictShapeTypeChecker = require(443                           ); // 443 = createStrictShapeTypeChecker
var deepFreezeAndThrowOnMutationInDev = require(368                                ); // 368 = deepFreezeAndThrowOnMutationInDev
var invariant = require(346                 ); // 346 = fbjs/lib/invariant

var GROUP_TYPES_OPTIONS = ['Album', 'All', 'Event', 'Faces', 'Library', 'PhotoStream', 'SavedPhotos'];

var ASSET_TYPE_OPTIONS = ['All', 'Videos', 'Photos'];

deepFreezeAndThrowOnMutationInDev(GROUP_TYPES_OPTIONS);
deepFreezeAndThrowOnMutationInDev(ASSET_TYPE_OPTIONS);

var getPhotosParamChecker = createStrictShapeTypeChecker({
  first: ReactPropTypes.number.isRequired,

  after: ReactPropTypes.string,

  groupTypes: ReactPropTypes.oneOf(GROUP_TYPES_OPTIONS),

  groupName: ReactPropTypes.string,

  assetType: ReactPropTypes.oneOf(ASSET_TYPE_OPTIONS),

  mimeTypes: ReactPropTypes.arrayOf(ReactPropTypes.string)
});

var getPhotosReturnChecker = createStrictShapeTypeChecker({
  edges: ReactPropTypes.arrayOf(createStrictShapeTypeChecker({
    node: createStrictShapeTypeChecker({
      type: ReactPropTypes.string.isRequired,
      group_name: ReactPropTypes.string.isRequired,
      image: createStrictShapeTypeChecker({
        uri: ReactPropTypes.string.isRequired,
        height: ReactPropTypes.number.isRequired,
        width: ReactPropTypes.number.isRequired,
        isStored: ReactPropTypes.bool
      }).isRequired,
      timestamp: ReactPropTypes.number.isRequired,
      location: createStrictShapeTypeChecker({
        latitude: ReactPropTypes.number,
        longitude: ReactPropTypes.number,
        altitude: ReactPropTypes.number,
        heading: ReactPropTypes.number,
        speed: ReactPropTypes.number
      })
    }).isRequired
  })).isRequired,
  page_info: createStrictShapeTypeChecker({
    has_next_page: ReactPropTypes.bool.isRequired,
    start_cursor: ReactPropTypes.string,
    end_cursor: ReactPropTypes.string
  }).isRequired
});

var CameraRoll = function () {
  function CameraRoll() {
    babelHelpers.classCallCheck(this, CameraRoll);
  }

  babelHelpers.createClass(CameraRoll, null, [{
    key: 'saveImageWithTag',
    value: function saveImageWithTag(tag) {
      console.warn('CameraRoll.saveImageWithTag is deprecated. Use CameraRoll.saveToCameraRoll instead');
      return this.saveToCameraRoll(tag, 'photo');
    }
  }, {
    key: 'saveToCameraRoll',
    value: function saveToCameraRoll(tag, type) {
      invariant(typeof tag === 'string', 'CameraRoll.saveToCameraRoll must be a valid string.');

      invariant(type === 'photo' || type === 'video' || type === undefined, 'The second argument to saveToCameraRoll must be \'photo\' or \'video\'. You passed ' + type);

      var mediaType = 'photo';
      if (type) {
        mediaType = type;
      } else if (['mov', 'mp4'].indexOf(tag.split('.').slice(-1)[0]) >= 0) {
        mediaType = 'video';
      }

      return RCTCameraRollManager.saveToCameraRoll(tag, mediaType);
    }
  }, {
    key: 'getPhotos',
    value: function getPhotos(params) {
      if (__DEV__) {
        getPhotosParamChecker({ params: params }, 'params', 'CameraRoll.getPhotos');
      }
      if (arguments.length > 1) {
        console.warn('CameraRoll.getPhotos(tag, success, error) is deprecated.  Use the returned Promise instead');
        var successCallback = arguments[1];
        if (__DEV__) {
          var callback = arguments[1];
          successCallback = function successCallback(response) {
            getPhotosReturnChecker({ response: response }, 'response', 'CameraRoll.getPhotos callback');
            callback(response);
          };
        }
        var errorCallback = arguments[2] || function () {};
        RCTCameraRollManager.getPhotos(params).then(successCallback, errorCallback);
      }

      return RCTCameraRollManager.getPhotos(params);
    }
  }]);
  return CameraRoll;
}();

CameraRoll.GroupTypesOptions = GROUP_TYPES_OPTIONS;
CameraRoll.AssetTypeOptions = ASSET_TYPE_OPTIONS;

module.exports = CameraRoll;
}, 683, null, "CameraRoll");
__d(/* Clipboard */function(global, require, module, exports) {
'use strict';

var Clipboard = require(349            ).Clipboard; // 349 = NativeModules

module.exports = {
  getString: function getString() {
    return Clipboard.getString();
  },
  setString: function setString(content) {
    Clipboard.setString(content);
  }
};
}, 684, null, "Clipboard");
__d(/* DatePickerAndroid */function(global, require, module, exports) {
'use strict';

var DatePickerModule = require(349            ).DatePickerAndroid; // 349 = NativeModules

function _toMillis(options, key) {
  var dateVal = options[key];

  if (typeof dateVal === 'object' && typeof dateVal.getMonth === 'function') {
    options[key] = dateVal.getTime();
  }
}

var DatePickerAndroid = function () {
  function DatePickerAndroid() {
    babelHelpers.classCallCheck(this, DatePickerAndroid);
  }

  babelHelpers.createClass(DatePickerAndroid, null, [{
    key: 'open',
    value: function open(options) {
      var optionsMs;
      return regeneratorRuntime.async(function open$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              optionsMs = options;

              if (optionsMs) {
                _toMillis(options, 'date');
                _toMillis(options, 'minDate');
                _toMillis(options, 'maxDate');
              }
              return _context.abrupt('return', DatePickerModule.open(options));

            case 3:
            case 'end':
              return _context.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: 'dateSetAction',
    get: function get() {
      return 'dateSetAction';
    }
  }, {
    key: 'dismissedAction',
    get: function get() {
      return 'dismissedAction';
    }
  }]);
  return DatePickerAndroid;
}();

module.exports = DatePickerAndroid;
}, 685, null, "DatePickerAndroid");
__d(/* ImagePickerIOS */function(global, require, module, exports) {
'use strict';

var RCTImagePicker = require(349            ).ImagePickerIOS; // 349 = NativeModules

var ImagePickerIOS = {
  canRecordVideos: function canRecordVideos(callback) {
    return RCTImagePicker.canRecordVideos(callback);
  },
  canUseCamera: function canUseCamera(callback) {
    return RCTImagePicker.canUseCamera(callback);
  },
  openCameraDialog: function openCameraDialog(config, successCallback, cancelCallback) {
    config = babelHelpers.extends({
      videoMode: false
    }, config);
    return RCTImagePicker.openCameraDialog(config, successCallback, cancelCallback);
  },
  openSelectDialog: function openSelectDialog(config, successCallback, cancelCallback) {
    config = babelHelpers.extends({
      showImages: true,
      showVideos: false
    }, config);
    return RCTImagePicker.openSelectDialog(config, successCallback, cancelCallback);
  }
};

module.exports = ImagePickerIOS;
}, 686, null, "ImagePickerIOS");
__d(/* Linking */function(global, require, module, exports) {
'use strict';

var NativeEventEmitter = require(374                 ); // 374 = NativeEventEmitter
var NativeModules = require(349            ); // 349 = NativeModules
var Platform = require(348       ); // 348 = Platform

var invariant = require(346                 ); // 346 = fbjs/lib/invariant

var LinkingManager = Platform.OS === 'android' ? NativeModules.IntentAndroid : NativeModules.LinkingManager;

var Linking = function (_NativeEventEmitter) {
  babelHelpers.inherits(Linking, _NativeEventEmitter);

  function Linking() {
    babelHelpers.classCallCheck(this, Linking);
    return babelHelpers.possibleConstructorReturn(this, (Linking.__proto__ || Object.getPrototypeOf(Linking)).call(this, LinkingManager));
  }

  babelHelpers.createClass(Linking, [{
    key: 'addEventListener',
    value: function addEventListener(type, handler) {
      this.addListener(type, handler);
    }
  }, {
    key: 'removeEventListener',
    value: function removeEventListener(type, handler) {
      this.removeListener(type, handler);
    }
  }, {
    key: 'openURL',
    value: function openURL(url) {
      this._validateURL(url);
      return LinkingManager.openURL(url);
    }
  }, {
    key: 'canOpenURL',
    value: function canOpenURL(url) {
      this._validateURL(url);
      return LinkingManager.canOpenURL(url);
    }
  }, {
    key: 'getInitialURL',
    value: function getInitialURL() {
      return LinkingManager.getInitialURL();
    }
  }, {
    key: '_validateURL',
    value: function _validateURL(url) {
      invariant(typeof url === 'string', 'Invalid URL: should be a string. Was: ' + url);
      invariant(url, 'Invalid URL: cannot be empty');
    }
  }]);
  return Linking;
}(NativeEventEmitter);

module.exports = new Linking();
}, 687, null, "Linking");
__d(/* NavigationExperimental */function(global, require, module, exports) {
'use strict';

var NavigationCard = require(689             ); // 689 = NavigationCard
var NavigationCardStack = require(698                  ); // 698 = NavigationCardStack
var NavigationHeader = require(701               ); // 701 = NavigationHeader
var NavigationPropTypes = require(697                  ); // 697 = NavigationPropTypes
var NavigationStateUtils = require(708                   ); // 708 = NavigationStateUtils
var NavigationTransitioner = require(699                     ); // 699 = NavigationTransitioner

var NavigationExperimental = {
  StateUtils: NavigationStateUtils,

  Transitioner: NavigationTransitioner,

  Card: NavigationCard,
  CardStack: NavigationCardStack,
  Header: NavigationHeader,

  PropTypes: NavigationPropTypes
};

module.exports = NavigationExperimental;
}, 688, null, "NavigationExperimental");
__d(/* NavigationCard */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native/Libraries/CustomComponents/NavigationExperimental/NavigationCard.js';
var Animated = require(573       ); // 573 = Animated
var NavigationCardStackPanResponder = require(690                              ); // 690 = NavigationCardStackPanResponder
var NavigationCardStackStyleInterpolator = require(692                                   ); // 692 = NavigationCardStackStyleInterpolator
var NavigationPagerPanResponder = require(693                          ); // 693 = NavigationPagerPanResponder
var NavigationPagerStyleInterpolator = require(694                               ); // 694 = NavigationPagerStyleInterpolator
var NavigationPointerEventsContainer = require(695                               ); // 695 = NavigationPointerEventsContainer
var NavigationPropTypes = require(697                  ); // 697 = NavigationPropTypes
var React = require(398    ); // 398 = React
var StyleSheet = require(421         ); // 421 = StyleSheet

var PropTypes = React.PropTypes;

var NavigationCard = function (_React$Component) {
  babelHelpers.inherits(NavigationCard, _React$Component);

  function NavigationCard() {
    babelHelpers.classCallCheck(this, NavigationCard);
    return babelHelpers.possibleConstructorReturn(this, (NavigationCard.__proto__ || Object.getPrototypeOf(NavigationCard)).apply(this, arguments));
  }

  babelHelpers.createClass(NavigationCard, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          panHandlers = _props.panHandlers,
          pointerEvents = _props.pointerEvents,
          renderScene = _props.renderScene,
          style = _props.style,
          props = babelHelpers.objectWithoutProperties(_props, ['panHandlers', 'pointerEvents', 'renderScene', 'style']);


      var viewStyle = style === undefined ? NavigationCardStackStyleInterpolator.forHorizontal(props) : style;

      var viewPanHandlers = panHandlers === undefined ? NavigationCardStackPanResponder.forHorizontal(babelHelpers.extends({}, props, {
        onNavigateBack: this.props.onNavigateBack
      })) : panHandlers;

      return React.createElement(
        Animated.View,
        babelHelpers.extends({}, viewPanHandlers, {
          pointerEvents: pointerEvents,
          ref: this.props.onComponentRef,
          style: [styles.main, viewStyle], __source: {
            fileName: _jsxFileName,
            lineNumber: 99
          }
        }),
        renderScene(props)
      );
    }
  }]);
  return NavigationCard;
}(React.Component);

NavigationCard.propTypes = babelHelpers.extends({}, NavigationPropTypes.SceneRendererProps, {
  onComponentRef: PropTypes.func.isRequired,
  onNavigateBack: PropTypes.func,
  panHandlers: NavigationPropTypes.panHandlers,
  pointerEvents: PropTypes.string.isRequired,
  renderScene: PropTypes.func.isRequired,
  style: PropTypes.any
});


var styles = StyleSheet.create({
  main: {
    backgroundColor: '#E9E9EF',
    bottom: 0,
    left: 0,
    position: 'absolute',
    right: 0,
    shadowColor: 'black',
    shadowOffset: { width: 0, height: 0 },
    shadowOpacity: 0.4,
    shadowRadius: 10,
    top: 0
  }
});

NavigationCard = NavigationPointerEventsContainer.create(NavigationCard);

NavigationCard.CardStackPanResponder = NavigationCardStackPanResponder;
NavigationCard.CardStackStyleInterpolator = NavigationCardStackStyleInterpolator;
NavigationCard.PagerPanResponder = NavigationPagerPanResponder;
NavigationCard.PagerStyleInterpolator = NavigationPagerStyleInterpolator;

module.exports = NavigationCard;
}, 689, null, "NavigationCard");
__d(/* NavigationCardStackPanResponder */function(global, require, module, exports) {
'use strict';

var Animated = require(573       ); // 573 = Animated
var I18nManager = require(628          ); // 628 = I18nManager
var NavigationAbstractPanResponder = require(691                             ); // 691 = NavigationAbstractPanResponder

var clamp = require(645    ); // 645 = clamp

var emptyFunction = function emptyFunction() {};

var ANIMATION_DURATION = 250;

var POSITION_THRESHOLD = 1 / 3;

var RESPOND_THRESHOLD = 15;

var DISTANCE_THRESHOLD = 100;

var Directions = {
  'HORIZONTAL': 'horizontal',
  'VERTICAL': 'vertical'
};

var NavigationCardStackPanResponder = function (_NavigationAbstractPa) {
  babelHelpers.inherits(NavigationCardStackPanResponder, _NavigationAbstractPa);

  function NavigationCardStackPanResponder(direction, props) {
    babelHelpers.classCallCheck(this, NavigationCardStackPanResponder);

    var _this = babelHelpers.possibleConstructorReturn(this, (NavigationCardStackPanResponder.__proto__ || Object.getPrototypeOf(NavigationCardStackPanResponder)).call(this));

    _this._isResponding = false;
    _this._isVertical = direction === Directions.VERTICAL;
    _this._props = props;
    _this._startValue = 0;

    _this._addNativeListener(_this._props.layout.width);
    _this._addNativeListener(_this._props.layout.height);
    _this._addNativeListener(_this._props.position);
    return _this;
  }

  babelHelpers.createClass(NavigationCardStackPanResponder, [{
    key: 'onMoveShouldSetPanResponder',
    value: function onMoveShouldSetPanResponder(event, gesture) {
      var props = this._props;

      if (props.navigationState.index !== props.scene.index) {
        return false;
      }

      var layout = props.layout;
      var isVertical = this._isVertical;
      var index = props.navigationState.index;
      var currentDragDistance = gesture[isVertical ? 'dy' : 'dx'];
      var currentDragPosition = gesture[isVertical ? 'moveY' : 'moveX'];
      var maxDragDistance = isVertical ? layout.height.__getValue() : layout.width.__getValue();

      var positionMax = isVertical ? props.gestureResponseDistance : props.gestureResponseDistance || 30;

      if (positionMax != null && currentDragPosition > positionMax) {
        return false;
      }

      return Math.abs(currentDragDistance) > RESPOND_THRESHOLD && maxDragDistance > 0 && index > 0;
    }
  }, {
    key: 'onPanResponderGrant',
    value: function onPanResponderGrant() {
      var _this2 = this;

      this._isResponding = false;
      this._props.position.stopAnimation(function (value) {
        _this2._isResponding = true;
        _this2._startValue = value;
      });
    }
  }, {
    key: 'onPanResponderMove',
    value: function onPanResponderMove(event, gesture) {
      if (!this._isResponding) {
        return;
      }

      var props = this._props;
      var layout = props.layout;
      var isVertical = this._isVertical;
      var axis = isVertical ? 'dy' : 'dx';
      var index = props.navigationState.index;
      var distance = isVertical ? layout.height.__getValue() : layout.width.__getValue();
      var currentValue = I18nManager.isRTL && axis === 'dx' ? this._startValue + gesture[axis] / distance : this._startValue - gesture[axis] / distance;

      var value = clamp(index - 1, currentValue, index);

      props.position.setValue(value);
    }
  }, {
    key: 'onPanResponderRelease',
    value: function onPanResponderRelease(event, gesture) {
      var _this3 = this;

      if (!this._isResponding) {
        return;
      }

      this._isResponding = false;

      var props = this._props;
      var isVertical = this._isVertical;
      var axis = isVertical ? 'dy' : 'dx';
      var index = props.navigationState.index;
      var distance = I18nManager.isRTL && axis === 'dx' ? -gesture[axis] : gesture[axis];

      props.position.stopAnimation(function (value) {
        _this3._reset();

        if (!props.onNavigateBack) {
          return;
        }

        if (distance > DISTANCE_THRESHOLD || value <= index - POSITION_THRESHOLD) {
          props.onNavigateBack();
        }
      });
    }
  }, {
    key: 'onPanResponderTerminate',
    value: function onPanResponderTerminate() {
      this._isResponding = false;
      this._reset();
    }
  }, {
    key: '_reset',
    value: function _reset() {
      var props = this._props;
      Animated.timing(props.position, {
        toValue: props.navigationState.index,
        duration: ANIMATION_DURATION,
        useNativeDriver: props.position.__isNative
      }).start();
    }
  }, {
    key: '_addNativeListener',
    value: function _addNativeListener(animatedValue) {
      if (!animatedValue.__isNative) {
        return;
      }

      if (Object.keys(animatedValue._listeners).length === 0) {
        animatedValue.addListener(emptyFunction);
      }
    }
  }]);
  return NavigationCardStackPanResponder;
}(NavigationAbstractPanResponder);

function createPanHandlers(direction, props) {
  var responder = new NavigationCardStackPanResponder(direction, props);
  return responder.panHandlers;
}

function forHorizontal(props) {
  return createPanHandlers(Directions.HORIZONTAL, props);
}

function forVertical(props) {
  return createPanHandlers(Directions.VERTICAL, props);
}

module.exports = {
  ANIMATION_DURATION: ANIMATION_DURATION,
  DISTANCE_THRESHOLD: DISTANCE_THRESHOLD,
  POSITION_THRESHOLD: POSITION_THRESHOLD,
  RESPOND_THRESHOLD: RESPOND_THRESHOLD,

  Directions: Directions,

  forHorizontal: forHorizontal,
  forVertical: forVertical
};
}, 690, null, "NavigationCardStackPanResponder");
__d(/* NavigationAbstractPanResponder */function(global, require, module, exports) {
'use strict';

var PanResponder = require(643           ); // 643 = PanResponder

var invariant = require(346                 ); // 346 = fbjs/lib/invariant

var EmptyPanHandlers = {
  onMoveShouldSetPanResponder: null,
  onPanResponderGrant: null,
  onPanResponderMove: null,
  onPanResponderRelease: null,
  onPanResponderTerminate: null
};

var NavigationAbstractPanResponder = function NavigationAbstractPanResponder() {
  var _this = this;

  babelHelpers.classCallCheck(this, NavigationAbstractPanResponder);

  var config = {};
  Object.keys(EmptyPanHandlers).forEach(function (name) {
    var fn = _this[name];

    invariant(typeof fn === 'function', 'subclass of `NavigationAbstractPanResponder` must implement method %s', name);

    config[name] = fn.bind(_this);
  }, this);

  this.panHandlers = PanResponder.create(config).panHandlers;
};

module.exports = NavigationAbstractPanResponder;
}, 691, null, "NavigationAbstractPanResponder");
__d(/* NavigationCardStackStyleInterpolator */function(global, require, module, exports) {
'use strict';

var I18nManager = require(628          ); // 628 = I18nManager

function forInitial(props) {
  var navigationState = props.navigationState,
      scene = props.scene;


  var focused = navigationState.index === scene.index;
  var opacity = focused ? 1 : 0;

  var translate = focused ? 0 : 1000000;
  return {
    opacity: opacity,
    transform: [{ translateX: translate }, { translateY: translate }]
  };
}

function forHorizontal(props) {
  var layout = props.layout,
      position = props.position,
      scene = props.scene;


  if (!layout.isMeasured) {
    return forInitial(props);
  }

  var index = scene.index;
  var inputRange = [index - 1, index, index + 0.99, index + 1];
  var width = layout.initWidth;
  var outputRange = I18nManager.isRTL ? [-width, 0, 10, 10] : [width, 0, -10, -10];

  var opacity = position.interpolate({
    inputRange: inputRange,
    outputRange: [1, 1, 0.3, 0]
  });

  var scale = position.interpolate({
    inputRange: inputRange,
    outputRange: [1, 1, 0.95, 0.95]
  });

  var translateY = 0;
  var translateX = position.interpolate({
    inputRange: inputRange,
    outputRange: outputRange
  });

  return {
    opacity: opacity,
    transform: [{ scale: scale }, { translateX: translateX }, { translateY: translateY }]
  };
}

function forVertical(props) {
  var layout = props.layout,
      position = props.position,
      scene = props.scene;


  if (!layout.isMeasured) {
    return forInitial(props);
  }

  var index = scene.index;
  var inputRange = [index - 1, index, index + 0.99, index + 1];
  var height = layout.initHeight;

  var opacity = position.interpolate({
    inputRange: inputRange,
    outputRange: [1, 1, 0.3, 0]
  });

  var scale = position.interpolate({
    inputRange: inputRange,
    outputRange: [1, 1, 0.95, 0.95]
  });

  var translateX = 0;
  var translateY = position.interpolate({
    inputRange: inputRange,
    outputRange: [height, 0, -10, -10]
  });

  return {
    opacity: opacity,
    transform: [{ scale: scale }, { translateX: translateX }, { translateY: translateY }]
  };
}

function canUseNativeDriver(isVertical) {

  return true;
}

module.exports = {
  forHorizontal: forHorizontal,
  forVertical: forVertical,
  canUseNativeDriver: canUseNativeDriver
};
}, 692, null, "NavigationCardStackStyleInterpolator");
__d(/* NavigationPagerPanResponder */function(global, require, module, exports) {
'use strict';

var Animated = require(573       ); // 573 = Animated
var NavigationAbstractPanResponder = require(691                             ); // 691 = NavigationAbstractPanResponder
var NavigationCardStackPanResponder = require(690                              ); // 690 = NavigationCardStackPanResponder
var I18nManager = require(628          ); // 628 = I18nManager

var clamp = require(645    ); // 645 = clamp

var ANIMATION_DURATION = NavigationCardStackPanResponder.ANIMATION_DURATION,
    POSITION_THRESHOLD = NavigationCardStackPanResponder.POSITION_THRESHOLD,
    RESPOND_THRESHOLD = NavigationCardStackPanResponder.RESPOND_THRESHOLD,
    Directions = NavigationCardStackPanResponder.Directions;

var DISTANCE_THRESHOLD = 50;

var VELOCITY_THRESHOLD = 1.5;

var NavigationPagerPanResponder = function (_NavigationAbstractPa) {
  babelHelpers.inherits(NavigationPagerPanResponder, _NavigationAbstractPa);

  function NavigationPagerPanResponder(direction, props) {
    babelHelpers.classCallCheck(this, NavigationPagerPanResponder);

    var _this = babelHelpers.possibleConstructorReturn(this, (NavigationPagerPanResponder.__proto__ || Object.getPrototypeOf(NavigationPagerPanResponder)).call(this));

    _this._isResponding = false;
    _this._isVertical = direction === Directions.VERTICAL;
    _this._props = props;
    _this._startValue = 0;
    return _this;
  }

  babelHelpers.createClass(NavigationPagerPanResponder, [{
    key: 'onMoveShouldSetPanResponder',
    value: function onMoveShouldSetPanResponder(event, gesture) {
      var props = this._props;

      if (props.navigationState.index !== props.scene.index) {
        return false;
      }

      var layout = props.layout;
      var isVertical = this._isVertical;
      var axis = isVertical ? 'dy' : 'dx';
      var index = props.navigationState.index;
      var distance = isVertical ? layout.height.__getValue() : layout.width.__getValue();

      return Math.abs(gesture[axis]) > RESPOND_THRESHOLD && distance > 0 && index >= 0;
    }
  }, {
    key: 'onPanResponderGrant',
    value: function onPanResponderGrant() {
      var _this2 = this;

      this._isResponding = false;
      this._props.position.stopAnimation(function (value) {
        _this2._isResponding = true;
        _this2._startValue = value;
      });
    }
  }, {
    key: 'onPanResponderMove',
    value: function onPanResponderMove(event, gesture) {
      if (!this._isResponding) {
        return;
      }

      var _props = this._props,
          layout = _props.layout,
          navigationState = _props.navigationState,
          position = _props.position,
          scenes = _props.scenes;


      var isVertical = this._isVertical;
      var axis = isVertical ? 'dy' : 'dx';
      var index = navigationState.index;
      var distance = isVertical ? layout.height.__getValue() : layout.width.__getValue();
      var currentValue = I18nManager.isRTL && axis === 'dx' ? this._startValue + gesture[axis] / distance : this._startValue - gesture[axis] / distance;

      var prevIndex = Math.max(0, index - 1);

      var nextIndex = Math.min(index + 1, scenes.length - 1);

      var value = clamp(prevIndex, currentValue, nextIndex);

      position.setValue(value);
    }
  }, {
    key: 'onPanResponderRelease',
    value: function onPanResponderRelease(event, gesture) {
      var _this3 = this;

      if (!this._isResponding) {
        return;
      }

      this._isResponding = false;

      var _props2 = this._props,
          navigationState = _props2.navigationState,
          onNavigateBack = _props2.onNavigateBack,
          onNavigateForward = _props2.onNavigateForward,
          position = _props2.position;


      var isVertical = this._isVertical;
      var axis = isVertical ? 'dy' : 'dx';
      var velocityAxis = isVertical ? 'vy' : 'vx';
      var index = navigationState.index;
      var distance = I18nManager.isRTL && axis === 'dx' ? -gesture[axis] : gesture[axis];
      var moveSpeed = I18nManager.isRTL && velocityAxis === 'vx' ? -gesture[velocityAxis] : gesture[velocityAxis];

      position.stopAnimation(function (value) {
        _this3._reset();
        if (distance > DISTANCE_THRESHOLD || value <= index - POSITION_THRESHOLD || moveSpeed > VELOCITY_THRESHOLD) {
          onNavigateBack && onNavigateBack();
          return;
        }

        if (distance < -DISTANCE_THRESHOLD || value >= index + POSITION_THRESHOLD || moveSpeed < -VELOCITY_THRESHOLD) {
          onNavigateForward && onNavigateForward();
        }
      });
    }
  }, {
    key: 'onPanResponderTerminate',
    value: function onPanResponderTerminate() {
      this._isResponding = false;
      this._reset();
    }
  }, {
    key: '_reset',
    value: function _reset() {
      var props = this._props;
      Animated.timing(props.position, {
        toValue: props.navigationState.index,
        duration: ANIMATION_DURATION
      }).start();
    }
  }]);
  return NavigationPagerPanResponder;
}(NavigationAbstractPanResponder);

function createPanHandlers(direction, props) {
  var responder = new NavigationPagerPanResponder(direction, props);
  return responder.panHandlers;
}

function forHorizontal(props) {
  return createPanHandlers(Directions.HORIZONTAL, props);
}

module.exports = {
  forHorizontal: forHorizontal
};
}, 693, null, "NavigationPagerPanResponder");
__d(/* NavigationPagerStyleInterpolator */function(global, require, module, exports) {
'use strict';

var I18nManager = require(628          ); // 628 = I18nManager

function forInitial(props) {
  var navigationState = props.navigationState,
      scene = props.scene;


  var focused = navigationState.index === scene.index;
  var opacity = focused ? 1 : 0;

  var dir = scene.index > navigationState.index ? 1 : -1;
  var translate = focused ? 0 : 1000000 * dir;
  return {
    opacity: opacity,
    transform: [{ translateX: translate }, { translateY: translate }]
  };
}

function forHorizontal(props) {
  var layout = props.layout,
      position = props.position,
      scene = props.scene;


  if (!layout.isMeasured) {
    return forInitial(props);
  }

  var index = scene.index;
  var inputRange = [index - 1, index, index + 1];
  var width = layout.initWidth;
  var outputRange = I18nManager.isRTL ? [-width, 0, width] : [width, 0, -width];

  var translateX = position.interpolate({
    inputRange: inputRange,
    outputRange: outputRange
  });

  return {
    opacity: 1,
    shadowColor: 'transparent',
    shadowRadius: 0,
    transform: [{ scale: 1 }, { translateX: translateX }, { translateY: 0 }]
  };
}

module.exports = {
  forHorizontal: forHorizontal
};
}, 694, null, "NavigationPagerStyleInterpolator");
__d(/* NavigationPointerEventsContainer */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native/Libraries/CustomComponents/NavigationExperimental/NavigationPointerEventsContainer.js';
var React = require(398    ); // 398 = React
var NavigationAnimatedValueSubscription = require(696                                  ); // 696 = NavigationAnimatedValueSubscription

var invariant = require(346                 ); // 346 = fbjs/lib/invariant

var MIN_POSITION_OFFSET = 0.01;

function create(Component) {
  var Container = function (_React$Component) {
    babelHelpers.inherits(Container, _React$Component);

    function Container(props, context) {
      babelHelpers.classCallCheck(this, Container);

      var _this = babelHelpers.possibleConstructorReturn(this, (Container.__proto__ || Object.getPrototypeOf(Container)).call(this, props, context));

      _this._pointerEvents = _this._computePointerEvents();
      return _this;
    }

    babelHelpers.createClass(Container, [{
      key: 'componentWillMount',
      value: function componentWillMount() {
        this._onPositionChange = this._onPositionChange.bind(this);
        this._onComponentRef = this._onComponentRef.bind(this);
      }
    }, {
      key: 'componentDidMount',
      value: function componentDidMount() {
        this._bindPosition(this.props);
      }
    }, {
      key: 'componentWillUnmount',
      value: function componentWillUnmount() {
        this._positionListener && this._positionListener.remove();
      }
    }, {
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(nextProps) {
        this._bindPosition(nextProps);
      }
    }, {
      key: 'render',
      value: function render() {
        this._pointerEvents = this._computePointerEvents();
        return React.createElement(Component, babelHelpers.extends({}, this.props, {
          pointerEvents: this._pointerEvents,
          onComponentRef: this._onComponentRef,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 92
          }
        }));
      }
    }, {
      key: '_onComponentRef',
      value: function _onComponentRef(component) {
        this._component = component;
        if (component) {
          invariant(typeof component.setNativeProps === 'function', 'component must implement method `setNativeProps`');
        }
      }
    }, {
      key: '_bindPosition',
      value: function _bindPosition(props) {
        this._positionListener && this._positionListener.remove();
        this._positionListener = new NavigationAnimatedValueSubscription(props.position, this._onPositionChange);
      }
    }, {
      key: '_onPositionChange',
      value: function _onPositionChange() {
        if (this._component) {
          var pointerEvents = this._computePointerEvents();
          if (this._pointerEvents !== pointerEvents) {
            this._pointerEvents = pointerEvents;
            this._component.setNativeProps({ pointerEvents: pointerEvents });
          }
        }
      }
    }, {
      key: '_computePointerEvents',
      value: function _computePointerEvents() {
        var _props = this.props,
            navigationState = _props.navigationState,
            position = _props.position,
            scene = _props.scene;


        if (scene.isStale || navigationState.index !== scene.index) {
          return scene.index > navigationState.index ? 'box-only' : 'none';
        }

        var offset = position.__getAnimatedValue() - navigationState.index;
        if (Math.abs(offset) > MIN_POSITION_OFFSET) {
          return 'box-only';
        }

        return 'auto';
      }
    }]);
    return Container;
  }(React.Component);

  return Container;
}

module.exports = {
  create: create
};
}, 695, null, "NavigationPointerEventsContainer");
__d(/* NavigationAnimatedValueSubscription */function(global, require, module, exports) {
'use strict';

var NavigationAnimatedValueSubscription = function () {
  function NavigationAnimatedValueSubscription(value, callback) {
    babelHelpers.classCallCheck(this, NavigationAnimatedValueSubscription);

    this._value = value;
    this._token = value.addListener(callback);
  }

  babelHelpers.createClass(NavigationAnimatedValueSubscription, [{
    key: 'remove',
    value: function remove() {
      this._value.removeListener(this._token);
    }
  }]);
  return NavigationAnimatedValueSubscription;
}();

module.exports = NavigationAnimatedValueSubscription;
}, 696, null, "NavigationAnimatedValueSubscription");
__d(/* NavigationPropTypes */function(global, require, module, exports) {
'use strict';

var Animated = require(573       ); // 573 = Animated
var React = require(398    ); // 398 = React

var PropTypes = React.PropTypes;

var action = PropTypes.shape({
  type: PropTypes.string.isRequired
});

var animatedValue = PropTypes.instanceOf(Animated.Value);

var navigationRoute = PropTypes.shape({
  key: PropTypes.string.isRequired
});

var navigationState = PropTypes.shape({
  index: PropTypes.number.isRequired,
  routes: PropTypes.arrayOf(navigationRoute)
});

var layout = PropTypes.shape({
  height: animatedValue,
  initHeight: PropTypes.number.isRequired,
  initWidth: PropTypes.number.isRequired,
  isMeasured: PropTypes.bool.isRequired,
  width: animatedValue
});

var scene = PropTypes.shape({
  index: PropTypes.number.isRequired,
  isActive: PropTypes.bool.isRequired,
  isStale: PropTypes.bool.isRequired,
  key: PropTypes.string.isRequired,
  route: navigationRoute.isRequired
});

var SceneRendererProps = {
  layout: layout.isRequired,
  navigationState: navigationState.isRequired,
  position: animatedValue.isRequired,
  progress: animatedValue.isRequired,
  scene: scene.isRequired,
  scenes: PropTypes.arrayOf(scene).isRequired
};

var SceneRenderer = PropTypes.shape(SceneRendererProps);

var panHandlers = PropTypes.shape({
  onMoveShouldSetResponder: PropTypes.func.isRequired,
  onMoveShouldSetResponderCapture: PropTypes.func.isRequired,
  onResponderEnd: PropTypes.func.isRequired,
  onResponderGrant: PropTypes.func.isRequired,
  onResponderMove: PropTypes.func.isRequired,
  onResponderReject: PropTypes.func.isRequired,
  onResponderRelease: PropTypes.func.isRequired,
  onResponderStart: PropTypes.func.isRequired,
  onResponderTerminate: PropTypes.func.isRequired,
  onResponderTerminationRequest: PropTypes.func.isRequired,
  onStartShouldSetResponder: PropTypes.func.isRequired,
  onStartShouldSetResponderCapture: PropTypes.func.isRequired
});

function extractSceneRendererProps(props) {
  return {
    layout: props.layout,
    navigationState: props.navigationState,
    position: props.position,
    progress: props.progress,
    scene: props.scene,
    scenes: props.scenes
  };
}

module.exports = {
  extractSceneRendererProps: extractSceneRendererProps,

  SceneRendererProps: SceneRendererProps,

  SceneRenderer: SceneRenderer,
  action: action,
  navigationState: navigationState,
  navigationRoute: navigationRoute,
  panHandlers: panHandlers
};
}, 697, null, "NavigationPropTypes");
__d(/* NavigationCardStack */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native/Libraries/CustomComponents/NavigationExperimental/NavigationCardStack.js';
var NativeAnimatedModule = require(349            ).NativeAnimatedModule; // 349 = NativeModules
var NavigationCard = require(689             ); // 689 = NavigationCard
var NavigationCardStackPanResponder = require(690                              ); // 690 = NavigationCardStackPanResponder
var NavigationCardStackStyleInterpolator = require(692                                   ); // 692 = NavigationCardStackStyleInterpolator
var NavigationPropTypes = require(697                  ); // 697 = NavigationPropTypes
var NavigationTransitioner = require(699                     ); // 699 = NavigationTransitioner
var React = require(398    ); // 398 = React
var StyleSheet = require(421         ); // 421 = StyleSheet
var View = require(441   ); // 441 = View

var PropTypes = React.PropTypes;
var Directions = NavigationCardStackPanResponder.Directions;

var NavigationCardStack = function (_React$Component) {
  babelHelpers.inherits(NavigationCardStack, _React$Component);

  function NavigationCardStack(props, context) {
    babelHelpers.classCallCheck(this, NavigationCardStack);

    var _this = babelHelpers.possibleConstructorReturn(this, (NavigationCardStack.__proto__ || Object.getPrototypeOf(NavigationCardStack)).call(this, props, context));

    _this._configureTransition = function () {
      var isVertical = _this.props.direction === 'vertical';
      var animationConfig = {};
      if (!!NativeAnimatedModule && !_this.props.enableGestures && NavigationCardStackStyleInterpolator.canUseNativeDriver(isVertical)) {
        animationConfig.useNativeDriver = true;
      }
      return animationConfig;
    };

    return _this;
  }

  babelHelpers.createClass(NavigationCardStack, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      this._render = this._render.bind(this);
      this._renderScene = this._renderScene.bind(this);
    }
  }, {
    key: 'render',
    value: function render() {
      return React.createElement(NavigationTransitioner, {
        configureTransition: this._configureTransition,
        navigationState: this.props.navigationState,
        render: this._render,
        style: this.props.style,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 229
        }
      });
    }
  }, {
    key: '_render',
    value: function _render(props) {
      var _this2 = this;

      var renderHeader = this.props.renderHeader;


      var header = renderHeader ? React.createElement(
        View,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 261
          }
        },
        renderHeader(props)
      ) : null;

      var scenes = props.scenes.map(function (scene) {
        return _this2._renderScene(babelHelpers.extends({}, props, {
          scene: scene
        }));
      });

      return React.createElement(
        View,
        { style: styles.container, __source: {
            fileName: _jsxFileName,
            lineNumber: 271
          }
        },
        React.createElement(
          View,
          {
            style: [styles.scenes, this.props.scenesStyle], __source: {
              fileName: _jsxFileName,
              lineNumber: 272
            }
          },
          scenes
        ),
        header
      );
    }
  }, {
    key: '_renderScene',
    value: function _renderScene(props) {
      var isVertical = this.props.direction === 'vertical';

      var interpolator = this.props.cardStyleInterpolator || (isVertical ? NavigationCardStackStyleInterpolator.forVertical : NavigationCardStackStyleInterpolator.forHorizontal);

      var style = interpolator(props);

      var panHandlers = null;

      if (this.props.enableGestures) {
        var panHandlersProps = babelHelpers.extends({}, props, {
          onNavigateBack: this.props.onNavigateBack,
          gestureResponseDistance: this.props.gestureResponseDistance
        });
        panHandlers = isVertical ? NavigationCardStackPanResponder.forVertical(panHandlersProps) : NavigationCardStackPanResponder.forHorizontal(panHandlersProps);
      }

      return React.createElement(NavigationCard, babelHelpers.extends({}, props, {
        key: 'card_' + props.scene.key,
        panHandlers: panHandlers,
        renderScene: this.props.renderScene,
        style: [style, this.props.cardStyle],
        __source: {
          fileName: _jsxFileName,
          lineNumber: 304
        }
      }));
    }
  }]);
  return NavigationCardStack;
}(React.Component);

NavigationCardStack.propTypes = {
  cardStyle: PropTypes.any,

  direction: PropTypes.oneOf([Directions.HORIZONTAL, Directions.VERTICAL]),

  gestureResponseDistance: PropTypes.number,

  cardStyleInterpolator: PropTypes.func,

  enableGestures: PropTypes.bool,

  navigationState: NavigationPropTypes.navigationState.isRequired,

  onNavigateBack: PropTypes.func,

  renderHeader: PropTypes.func,

  renderScene: PropTypes.func.isRequired,

  style: View.propTypes.style,

  scenesStyle: View.propTypes.style
};
NavigationCardStack.defaultProps = {
  direction: Directions.HORIZONTAL,
  enableGestures: true
};


var styles = StyleSheet.create({
  container: {
    flex: 1,

    flexDirection: 'column-reverse'
  },
  scenes: {
    flex: 1
  }
});

module.exports = NavigationCardStack;
}, 698, null, "NavigationCardStack");
__d(/* NavigationTransitioner */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native/Libraries/NavigationExperimental/NavigationTransitioner.js';
var Animated = require(573       ); // 573 = Animated
var Easing = require(583     ); // 583 = Easing
var NavigationPropTypes = require(697                  ); // 697 = NavigationPropTypes
var NavigationScenesReducer = require(700                      ); // 700 = NavigationScenesReducer
var React = require(398    ); // 398 = React
var StyleSheet = require(421         ); // 421 = StyleSheet
var View = require(441   ); // 441 = View

var invariant = require(346                 ); // 346 = fbjs/lib/invariant

var PropTypes = React.PropTypes;


var DefaultTransitionSpec = {
  duration: 250,
  easing: Easing.inOut(Easing.ease),
  timing: Animated.timing
};

var NavigationTransitioner = function (_React$Component) {
  babelHelpers.inherits(NavigationTransitioner, _React$Component);

  function NavigationTransitioner(props, context) {
    babelHelpers.classCallCheck(this, NavigationTransitioner);

    var _this = babelHelpers.possibleConstructorReturn(this, (NavigationTransitioner.__proto__ || Object.getPrototypeOf(NavigationTransitioner)).call(this, props, context));

    var layout = {
      height: new Animated.Value(0),
      initHeight: 0,
      initWidth: 0,
      isMeasured: false,
      width: new Animated.Value(0)
    };

    _this.state = {
      layout: layout,
      position: new Animated.Value(_this.props.navigationState.index),
      progress: new Animated.Value(1),
      scenes: NavigationScenesReducer([], _this.props.navigationState)
    };

    _this._prevTransitionProps = null;
    _this._transitionProps = buildTransitionProps(props, _this.state);
    _this._isMounted = false;
    return _this;
  }

  babelHelpers.createClass(NavigationTransitioner, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      this._onLayout = this._onLayout.bind(this);
      this._onTransitionEnd = this._onTransitionEnd.bind(this);
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      this._isMounted = true;
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this._isMounted = false;
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var _this2 = this;

      var nextScenes = NavigationScenesReducer(this.state.scenes, nextProps.navigationState, this.props.navigationState);

      if (nextScenes === this.state.scenes) {
        return;
      }

      var nextState = babelHelpers.extends({}, this.state, {
        scenes: nextScenes
      });

      var position = nextState.position,
          progress = nextState.progress;


      progress.setValue(0);

      this._prevTransitionProps = this._transitionProps;
      this._transitionProps = buildTransitionProps(nextProps, nextState);

      var transitionUserSpec = nextProps.configureTransition ? nextProps.configureTransition(this._transitionProps, this._prevTransitionProps) : null;

      var transitionSpec = babelHelpers.extends({}, DefaultTransitionSpec, transitionUserSpec);

      var timing = transitionSpec.timing;

      delete transitionSpec.timing;

      var animations = [timing(progress, babelHelpers.extends({}, transitionSpec, {
        toValue: 1
      }))];

      if (nextProps.navigationState.index !== this.props.navigationState.index) {
        animations.push(timing(position, babelHelpers.extends({}, transitionSpec, {
          toValue: nextProps.navigationState.index
        })));
      }

      this.setState(nextState, function () {
        nextProps.onTransitionStart && nextProps.onTransitionStart(_this2._transitionProps, _this2._prevTransitionProps);
        Animated.parallel(animations).start(_this2._onTransitionEnd);
      });
    }
  }, {
    key: 'render',
    value: function render() {
      return React.createElement(
        View,
        {
          onLayout: this._onLayout,
          style: [styles.main, this.props.style], __source: {
            fileName: _jsxFileName,
            lineNumber: 192
          }
        },
        this.props.render(this._transitionProps, this._prevTransitionProps)
      );
    }
  }, {
    key: '_onLayout',
    value: function _onLayout(event) {
      var _event$nativeEvent$la = event.nativeEvent.layout,
          height = _event$nativeEvent$la.height,
          width = _event$nativeEvent$la.width;

      if (this.state.layout.initWidth === width && this.state.layout.initHeight === height) {
        return;
      }
      var layout = babelHelpers.extends({}, this.state.layout, {
        initHeight: height,
        initWidth: width,
        isMeasured: true
      });

      layout.height.setValue(height);
      layout.width.setValue(width);

      var nextState = babelHelpers.extends({}, this.state, {
        layout: layout
      });

      this._transitionProps = buildTransitionProps(this.props, nextState);
      this.setState(nextState);
    }
  }, {
    key: '_onTransitionEnd',
    value: function _onTransitionEnd() {
      var _this3 = this;

      if (!this._isMounted) {
        return;
      }

      var prevTransitionProps = this._prevTransitionProps;
      this._prevTransitionProps = null;

      var nextState = babelHelpers.extends({}, this.state, {
        scenes: this.state.scenes.filter(isSceneNotStale)
      });

      this._transitionProps = buildTransitionProps(this.props, nextState);

      this.setState(nextState, function () {
        _this3.props.onTransitionEnd && _this3.props.onTransitionEnd(_this3._transitionProps, prevTransitionProps);
      });
    }
  }]);
  return NavigationTransitioner;
}(React.Component);

NavigationTransitioner.propTypes = {
  configureTransition: PropTypes.func,
  navigationState: NavigationPropTypes.navigationState.isRequired,
  onTransitionEnd: PropTypes.func,
  onTransitionStart: PropTypes.func,
  render: PropTypes.func.isRequired
};


function buildTransitionProps(props, state) {
  var navigationState = props.navigationState;
  var layout = state.layout,
      position = state.position,
      progress = state.progress,
      scenes = state.scenes;


  var scene = scenes.find(isSceneActive);

  invariant(scene, 'No active scene when building navigation transition props.');

  return {
    layout: layout,
    navigationState: navigationState,
    position: position,
    progress: progress,
    scenes: scenes,
    scene: scene
  };
}

function isSceneNotStale(scene) {
  return !scene.isStale;
}

function isSceneActive(scene) {
  return scene.isActive;
}

var styles = StyleSheet.create({
  main: {
    flex: 1
  }
});

module.exports = NavigationTransitioner;
}, 699, null, "NavigationTransitioner");
__d(/* NavigationScenesReducer */function(global, require, module, exports) {
'use strict';

var invariant = require(346                 ); // 346 = fbjs/lib/invariant
var shallowEqual = require(482                    ); // 482 = fbjs/lib/shallowEqual

var SCENE_KEY_PREFIX = 'scene_';

function compareKey(one, two) {
  var delta = one.length - two.length;
  if (delta > 0) {
    return 1;
  }
  if (delta < 0) {
    return -1;
  }
  return one > two ? 1 : -1;
}

function compareScenes(one, two) {
  if (one.index > two.index) {
    return 1;
  }
  if (one.index < two.index) {
    return -1;
  }

  return compareKey(one.key, two.key);
}

function areScenesShallowEqual(one, two) {
  return one.key === two.key && one.index === two.index && one.isStale === two.isStale && one.isActive === two.isActive && areRoutesShallowEqual(one.route, two.route);
}

function areRoutesShallowEqual(one, two) {
  if (!one || !two) {
    return one === two;
  }

  if (one.key !== two.key) {
    return false;
  }

  return shallowEqual(one, two);
}

function NavigationScenesReducer(scenes, nextState, prevState) {
  if (prevState === nextState) {
    return scenes;
  }

  var prevScenes = new Map();
  var freshScenes = new Map();
  var staleScenes = new Map();

  scenes.forEach(function (scene) {
    var key = scene.key;

    if (scene.isStale) {
      staleScenes.set(key, scene);
    }
    prevScenes.set(key, scene);
  });

  var nextKeys = new Set();
  nextState.routes.forEach(function (route, index) {
    var key = SCENE_KEY_PREFIX + route.key;
    var scene = {
      index: index,
      isActive: false,
      isStale: false,
      key: key,
      route: route
    };
    invariant(!nextKeys.has(key), 'navigationState.routes[' + index + '].key "' + key + '" conflicts with ' + 'another route!');
    nextKeys.add(key);

    if (staleScenes.has(key)) {
      staleScenes.delete(key);
    }
    freshScenes.set(key, scene);
  });

  if (prevState) {
    prevState.routes.forEach(function (route, index) {
      var key = SCENE_KEY_PREFIX + route.key;
      if (freshScenes.has(key)) {
        return;
      }
      staleScenes.set(key, {
        index: index,
        isActive: false,
        isStale: true,
        key: key,
        route: route
      });
    });
  }

  var nextScenes = [];

  var mergeScene = function mergeScene(nextScene) {
    var key = nextScene.key;

    var prevScene = prevScenes.has(key) ? prevScenes.get(key) : null;
    if (prevScene && areScenesShallowEqual(prevScene, nextScene)) {
      nextScenes.push(prevScene);
    } else {
      nextScenes.push(nextScene);
    }
  };

  staleScenes.forEach(mergeScene);
  freshScenes.forEach(mergeScene);

  nextScenes.sort(compareScenes);

  var activeScenesCount = 0;
  nextScenes.forEach(function (scene, ii) {
    var isActive = !scene.isStale && scene.index === nextState.index;
    if (isActive !== scene.isActive) {
      nextScenes[ii] = babelHelpers.extends({}, scene, {
        isActive: isActive
      });
    }
    if (isActive) {
      activeScenesCount++;
    }
  });

  invariant(activeScenesCount === 1, 'there should always be only one scene active, not %s.', activeScenesCount);

  if (nextScenes.length !== scenes.length) {
    return nextScenes;
  }

  if (nextScenes.some(function (scene, index) {
    return !areScenesShallowEqual(scenes[index], scene);
  })) {
    return nextScenes;
  }

  return scenes;
}

module.exports = NavigationScenesReducer;
}, 700, null, "NavigationScenesReducer");
__d(/* NavigationHeader */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native/Libraries/CustomComponents/NavigationExperimental/NavigationHeader.js';
var NavigationHeaderBackButton = require(702                         ); // 702 = NavigationHeaderBackButton
var NavigationHeaderStyleInterpolator = require(704                                ); // 704 = NavigationHeaderStyleInterpolator
var NavigationHeaderTitle = require(705                    ); // 705 = NavigationHeaderTitle
var NavigationPropTypes = require(697                  ); // 697 = NavigationPropTypes
var React = require(398    ); // 398 = React
var ReactComponentWithPureRenderMixin = require(706                                          ); // 706 = react/lib/ReactComponentWithPureRenderMixin
var ReactNative = require(334           ); // 334 = react-native
var TVEventHandler = require(509             ); // 509 = TVEventHandler

var Animated = ReactNative.Animated,
    Platform = ReactNative.Platform,
    StyleSheet = ReactNative.StyleSheet,
    View = ReactNative.View;


var APPBAR_HEIGHT = Platform.OS === 'ios' ? 44 : 56;
var STATUSBAR_HEIGHT = Platform.OS === 'ios' ? 20 : 0;
var PropTypes = React.PropTypes;

var NavigationHeader = function (_React$Component) {
  babelHelpers.inherits(NavigationHeader, _React$Component);

  function NavigationHeader() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, NavigationHeader);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = NavigationHeader.__proto__ || Object.getPrototypeOf(NavigationHeader)).call.apply(_ref, [this].concat(args))), _this), _this._renderLeft = function (props) {
      return _this._renderSubView(props, 'left', _this.props.renderLeftComponent, NavigationHeaderStyleInterpolator.forLeft);
    }, _this._renderTitle = function (props) {
      return _this._renderSubView(props, 'title', _this.props.renderTitleComponent, NavigationHeaderStyleInterpolator.forCenter);
    }, _this._renderRight = function (props) {
      return _this._renderSubView(props, 'right', _this.props.renderRightComponent, NavigationHeaderStyleInterpolator.forRight);
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(NavigationHeader, [{
    key: 'shouldComponentUpdate',
    value: function shouldComponentUpdate(nextProps, nextState) {
      return ReactComponentWithPureRenderMixin.shouldComponentUpdate.call(this, nextProps, nextState);
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      this._tvEventHandler = new TVEventHandler();
      this._tvEventHandler.enable(this, function (cmp, evt) {
        if (evt && evt.eventType === 'menu') {
          cmp.props.onNavigateBack && cmp.props.onNavigateBack();
        }
      });
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      if (this._tvEventHandler) {
        this._tvEventHandler.disable();
        delete this._tvEventHandler;
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          scenes = _props.scenes,
          style = _props.style,
          viewProps = _props.viewProps;


      var scenesProps = scenes.map(function (scene) {
        var props = NavigationPropTypes.extractSceneRendererProps(_this2.props);
        props.scene = scene;
        return props;
      });

      var barHeight = this.props.statusBarHeight instanceof Animated.Value ? Animated.add(this.props.statusBarHeight, new Animated.Value(APPBAR_HEIGHT)) : APPBAR_HEIGHT + this.props.statusBarHeight;

      return React.createElement(
        Animated.View,
        babelHelpers.extends({ style: [styles.appbar, { height: barHeight }, style]
        }, viewProps, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 164
          }
        }),
        scenesProps.map(this._renderLeft, this),
        scenesProps.map(this._renderTitle, this),
        scenesProps.map(this._renderRight, this)
      );
    }
  }, {
    key: '_renderSubView',
    value: function _renderSubView(props, name, renderer, styleInterpolator) {
      var scene = props.scene,
          navigationState = props.navigationState;
      var index = scene.index,
          isStale = scene.isStale,
          key = scene.key;


      var offset = navigationState.index - index;

      if (Math.abs(offset) > 2) {
        return null;
      }

      var subViewProps = babelHelpers.extends({}, props, { onNavigateBack: this.props.onNavigateBack });
      var subView = renderer(subViewProps);
      if (subView === null) {
        return null;
      }

      var pointerEvents = offset !== 0 || isStale ? 'none' : 'box-none';
      return React.createElement(
        Animated.View,
        {
          pointerEvents: pointerEvents,
          key: name + '_' + key,
          style: [styles[name], { marginTop: this.props.statusBarHeight }, styleInterpolator(props)], __source: {
            fileName: _jsxFileName,
            lineNumber: 238
          }
        },
        subView
      );
    }
  }]);
  return NavigationHeader;
}(React.Component);

NavigationHeader.defaultProps = {

  renderTitleComponent: function renderTitleComponent(props) {
    var title = String(props.scene.route.title || '');
    return React.createElement(
      NavigationHeaderTitle,
      {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 92
        }
      },
      title
    );
  },

  renderLeftComponent: function renderLeftComponent(props) {
    if (props.scene.index === 0 || !props.onNavigateBack) {
      return null;
    }
    return React.createElement(NavigationHeaderBackButton, {
      onPress: props.onNavigateBack,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 100
      }
    });
  },

  renderRightComponent: function renderRightComponent(props) {
    return null;
  },

  statusBarHeight: STATUSBAR_HEIGHT
};
NavigationHeader.propTypes = babelHelpers.extends({}, NavigationPropTypes.SceneRendererProps, {
  onNavigateBack: PropTypes.func,
  renderLeftComponent: PropTypes.func,
  renderRightComponent: PropTypes.func,
  renderTitleComponent: PropTypes.func,
  style: View.propTypes.style,
  statusBarHeight: PropTypes.number,
  viewProps: PropTypes.shape(View.propTypes)
});
NavigationHeader.HEIGHT = APPBAR_HEIGHT + STATUSBAR_HEIGHT;
NavigationHeader.Title = NavigationHeaderTitle;
NavigationHeader.BackButton = NavigationHeaderBackButton;


var styles = StyleSheet.create({
  appbar: {
    alignItems: 'center',
    backgroundColor: Platform.OS === 'ios' ? '#EFEFF2' : '#FFF',
    borderBottomColor: 'rgba(0, 0, 0, .15)',
    borderBottomWidth: Platform.OS === 'ios' ? StyleSheet.hairlineWidth : 0,
    elevation: 4,
    flexDirection: 'row',
    justifyContent: 'flex-start'
  },

  title: {
    bottom: 0,
    left: APPBAR_HEIGHT,
    position: 'absolute',
    right: APPBAR_HEIGHT,
    top: 0
  },

  left: {
    bottom: 0,
    left: 0,
    position: 'absolute',
    top: 0
  },

  right: {
    bottom: 0,
    position: 'absolute',
    right: 0,
    top: 0
  }
});

module.exports = NavigationHeader;
}, 701, null, "NavigationHeader");
__d(/* NavigationHeaderBackButton */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native/Libraries/CustomComponents/NavigationExperimental/NavigationHeaderBackButton.js';
var React = require(604    ); // 604 = react
var ReactNative = require(334           ); // 334 = react-native

var I18nManager = ReactNative.I18nManager,
    Image = ReactNative.Image,
    Platform = ReactNative.Platform,
    StyleSheet = ReactNative.StyleSheet,
    TouchableOpacity = ReactNative.TouchableOpacity;


var NavigationHeaderBackButton = function NavigationHeaderBackButton(props) {
  return React.createElement(
    TouchableOpacity,
    { style: [styles.buttonContainer, props.style], onPress: props.onPress, __source: {
        fileName: _jsxFileName,
        lineNumber: 44
      }
    },
    React.createElement(Image, { style: [styles.button, props.imageStyle], source: require(703                     ), __source: { // 703 = ./assets/back-icon.png
        fileName: _jsxFileName,
        lineNumber: 45
      }
    })
  );
};

NavigationHeaderBackButton.propTypes = {
  onPress: React.PropTypes.func.isRequired
};

var styles = StyleSheet.create({
  buttonContainer: {
    flex: 1,
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'center'
  },
  button: {
    height: 24,
    width: 24,
    margin: Platform.OS === 'ios' ? 10 : 16,
    resizeMode: 'contain',
    transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }]
  }
});

module.exports = NavigationHeaderBackButton;
}, 702, null, "NavigationHeaderBackButton");
__d(/* react-native/Libraries/CustomComponents/NavigationExperimental/assets/back-icon.png */function(global, require, module, exports) {module.exports = require(494                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/node_modules/react-native/Libraries/CustomComponents/NavigationExperimental/assets","width":24,"height":24,"scales":[1,1.5,2,3,4],"hash":"a364dc7a784101f7c8f6791c7b4514ce","name":"back-icon","type":"png"}); // 494 = react-native/Libraries/Image/AssetRegistry
}, 703, null, "react-native/Libraries/CustomComponents/NavigationExperimental/assets/back-icon.png");
__d(/* NavigationHeaderStyleInterpolator */function(global, require, module, exports) {
'use strict';

var I18nManager = require(628          ); // 628 = I18nManager

function forLeft(props) {
  var position = props.position,
      scene = props.scene;
  var index = scene.index;

  return {
    opacity: position.interpolate({
      inputRange: [index - 1, index, index + 1],
      outputRange: [0, 1, 0]
    })
  };
}

function forCenter(props) {
  var position = props.position,
      scene = props.scene;
  var index = scene.index;

  return {
    opacity: position.interpolate({
      inputRange: [index - 1, index, index + 1],
      outputRange: [0, 1, 0]
    }),
    transform: [{
      translateX: position.interpolate({
        inputRange: [index - 1, index + 1],
        outputRange: I18nManager.isRTL ? [-200, 200] : [200, -200]
      })
    }]
  };
}

function forRight(props) {
  var position = props.position,
      scene = props.scene;
  var index = scene.index;

  return {
    opacity: position.interpolate({
      inputRange: [index - 1, index, index + 1],
      outputRange: [0, 1, 0]
    })
  };
}

module.exports = {
  forCenter: forCenter,
  forLeft: forLeft,
  forRight: forRight
};
}, 704, null, "NavigationHeaderStyleInterpolator");
__d(/* NavigationHeaderTitle */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native/Libraries/CustomComponents/NavigationExperimental/NavigationHeaderTitle.js';
var React = require(604    ); // 604 = react
var ReactNative = require(334           ); // 334 = react-native

var Platform = ReactNative.Platform,
    StyleSheet = ReactNative.StyleSheet,
    View = ReactNative.View,
    Text = ReactNative.Text;


var NavigationHeaderTitle = function NavigationHeaderTitle(_ref) {
  var children = _ref.children,
      style = _ref.style,
      textStyle = _ref.textStyle,
      viewProps = _ref.viewProps;
  return React.createElement(
    View,
    babelHelpers.extends({ style: [styles.title, style] }, viewProps, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 53
      }
    }),
    React.createElement(
      Text,
      { style: [styles.titleText, textStyle], __source: {
          fileName: _jsxFileName,
          lineNumber: 54
        }
      },
      children
    )
  );
};

var styles = StyleSheet.create({
  title: {
    flex: 1,
    flexDirection: 'row',
    alignItems: 'center',
    marginHorizontal: 16
  },

  titleText: {
    flex: 1,
    fontSize: 18,
    fontWeight: '500',
    color: 'rgba(0, 0, 0, .9)',
    textAlign: Platform.OS === 'ios' ? 'center' : 'left'
  }
});

NavigationHeaderTitle.propTypes = {
  children: React.PropTypes.node.isRequired,
  style: View.propTypes.style,
  textStyle: Text.propTypes.style
};

module.exports = NavigationHeaderTitle;
}, 705, null, "NavigationHeaderTitle");
__d(/* react/lib/ReactComponentWithPureRenderMixin.js */function(global, require, module, exports) {

'use strict';

var shallowCompare = require(707               ); // 707 = ./shallowCompare

var ReactComponentWithPureRenderMixin = {
  shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState) {
    return shallowCompare(this, nextProps, nextState);
  }
};

module.exports = ReactComponentWithPureRenderMixin;
}, 706, null, "react/lib/ReactComponentWithPureRenderMixin.js");
__d(/* react/lib/shallowCompare.js */function(global, require, module, exports) {

'use strict';

var shallowEqual = require(482                    ); // 482 = fbjs/lib/shallowEqual

function shallowCompare(instance, nextProps, nextState) {
  return !shallowEqual(instance.props, nextProps) || !shallowEqual(instance.state, nextState);
}

module.exports = shallowCompare;
}, 707, null, "react/lib/shallowCompare.js");
__d(/* NavigationStateUtils */function(global, require, module, exports) {
'use strict';

var invariant = require(346                 ); // 346 = fbjs/lib/invariant

var NavigationStateUtils = {
  get: function get(state, key) {
    return state.routes.find(function (route) {
      return route.key === key;
    }) || null;
  },
  indexOf: function indexOf(state, key) {
    return state.routes.map(function (route) {
      return route.key;
    }).indexOf(key);
  },
  has: function has(state, key) {
    return !!state.routes.some(function (route) {
      return route.key === key;
    });
  },
  push: function push(state, route) {
    invariant(NavigationStateUtils.indexOf(state, route.key) === -1, 'should not push route with duplicated key %s', route.key);

    var routes = state.routes.slice();
    routes.push(route);

    return babelHelpers.extends({}, state, {
      index: routes.length - 1,
      routes: routes
    });
  },
  pop: function pop(state) {
    if (state.index <= 0) {
      return state;
    }
    var routes = state.routes.slice(0, -1);
    return babelHelpers.extends({}, state, {
      index: routes.length - 1,
      routes: routes
    });
  },
  jumpToIndex: function jumpToIndex(state, index) {
    if (index === state.index) {
      return state;
    }

    invariant(!!state.routes[index], 'invalid index %s to jump to', index);

    return babelHelpers.extends({}, state, {
      index: index
    });
  },
  jumpTo: function jumpTo(state, key) {
    var index = NavigationStateUtils.indexOf(state, key);
    return NavigationStateUtils.jumpToIndex(state, index);
  },
  back: function back(state) {
    var index = state.index - 1;
    var route = state.routes[index];
    return route ? NavigationStateUtils.jumpToIndex(state, index) : state;
  },
  forward: function forward(state) {
    var index = state.index + 1;
    var route = state.routes[index];
    return route ? NavigationStateUtils.jumpToIndex(state, index) : state;
  },
  replaceAt: function replaceAt(state, key, route) {
    var index = NavigationStateUtils.indexOf(state, key);
    return NavigationStateUtils.replaceAtIndex(state, index, route);
  },
  replaceAtIndex: function replaceAtIndex(state, index, route) {
    invariant(!!state.routes[index], 'invalid index %s for replacing route %s', index, route.key);

    if (state.routes[index] === route) {
      return state;
    }

    var routes = state.routes.slice();
    routes[index] = route;

    return babelHelpers.extends({}, state, {
      index: index,
      routes: routes
    });
  },
  reset: function reset(state, routes, index) {
    invariant(routes.length && Array.isArray(routes), 'invalid routes to replace');

    var nextIndex = index === undefined ? routes.length - 1 : index;

    if (state.routes.length === routes.length && state.index === nextIndex) {
      var compare = function compare(route, ii) {
        return routes[ii] === route;
      };
      if (state.routes.every(compare)) {
        return state;
      }
    }

    invariant(!!routes[nextIndex], 'invalid index %s to reset', nextIndex);

    return babelHelpers.extends({}, state, {
      index: nextIndex,
      routes: routes
    });
  }
};

module.exports = NavigationStateUtils;
}, 708, null, "NavigationStateUtils");
__d(/* NetInfo */function(global, require, module, exports) {
'use strict';

var Map = require(536  ); // 536 = Map
var NativeEventEmitter = require(374                 ); // 374 = NativeEventEmitter
var NativeModules = require(349            ); // 349 = NativeModules
var Platform = require(348       ); // 348 = Platform
var RCTNetInfo = NativeModules.NetInfo;

var NetInfoEventEmitter = new NativeEventEmitter(RCTNetInfo);

var DEVICE_CONNECTIVITY_EVENT = 'networkStatusDidChange';

var _subscriptions = new Map();

var _isConnected = void 0;
if (Platform.OS === 'ios') {
  _isConnected = function _isConnected(reachability) {
    return reachability !== 'none' && reachability !== 'unknown';
  };
} else if (Platform.OS === 'android') {
  _isConnected = function _isConnected(connectionType) {
    return connectionType !== 'NONE' && connectionType !== 'UNKNOWN';
  };
}

var _isConnectedSubscriptions = new Map();

var NetInfo = {
  addEventListener: function addEventListener(eventName, handler) {
    var listener = NetInfoEventEmitter.addListener(DEVICE_CONNECTIVITY_EVENT, function (appStateData) {
      handler(appStateData.network_info);
    });
    _subscriptions.set(handler, listener);
    return {
      remove: function remove() {
        return NetInfo.removeEventListener(eventName, handler);
      }
    };
  },
  removeEventListener: function removeEventListener(eventName, handler) {
    var listener = _subscriptions.get(handler);
    if (!listener) {
      return;
    }
    listener.remove();
    _subscriptions.delete(handler);
  },
  fetch: function fetch() {
    return RCTNetInfo.getCurrentConnectivity().then(function (resp) {
      return resp.network_info;
    });
  },

  isConnected: {
    addEventListener: function addEventListener(eventName, handler) {
      var listener = function listener(connection) {
        handler(_isConnected(connection));
      };
      _isConnectedSubscriptions.set(handler, listener);
      NetInfo.addEventListener(eventName, listener);
      return {
        remove: function remove() {
          return NetInfo.isConnected.removeEventListener(eventName, handler);
        }
      };
    },
    removeEventListener: function removeEventListener(eventName, handler) {
      var listener = _isConnectedSubscriptions.get(handler);
      NetInfo.removeEventListener(eventName, listener);
      _isConnectedSubscriptions.delete(handler);
    },
    fetch: function fetch() {
      return NetInfo.fetch().then(function (connection) {
        return _isConnected(connection);
      });
    }
  },

  isConnectionExpensive: function isConnectionExpensive() {
    return Platform.OS === 'android' ? RCTNetInfo.isConnectionMetered() : Promise.reject(new Error('Currently not supported on iOS'));
  }
};

module.exports = NetInfo;
}, 709, null, "NetInfo");
__d(/* PermissionsAndroid */function(global, require, module, exports) {
'use strict';

var DialogManagerAndroid = require(349            ).DialogManagerAndroid; // 349 = NativeModules
var Permissions = require(349            ).PermissionsAndroid; // 349 = NativeModules

var PermissionsAndroid = function () {
  function PermissionsAndroid() {
    babelHelpers.classCallCheck(this, PermissionsAndroid);

    this.PERMISSIONS = {
      READ_CALENDAR: 'android.permission.READ_CALENDAR',
      WRITE_CALENDAR: 'android.permission.WRITE_CALENDAR',
      CAMERA: 'android.permission.CAMERA',
      READ_CONTACTS: 'android.permission.READ_CONTACTS',
      WRITE_CONTACTS: 'android.permission.WRITE_CONTACTS',
      GET_ACCOUNTS: 'android.permission.GET_ACCOUNTS',
      ACCESS_FINE_LOCATION: 'android.permission.ACCESS_FINE_LOCATION',
      ACCESS_COARSE_LOCATION: 'android.permission.ACCESS_COARSE_LOCATION',
      RECORD_AUDIO: 'android.permission.RECORD_AUDIO',
      READ_PHONE_STATE: 'android.permission.READ_PHONE_STATE',
      CALL_PHONE: 'android.permission.CALL_PHONE',
      READ_CALL_LOG: 'android.permission.READ_CALL_LOG',
      WRITE_CALL_LOG: 'android.permission.WRITE_CALL_LOG',
      ADD_VOICEMAIL: 'com.android.voicemail.permission.ADD_VOICEMAIL',
      USE_SIP: 'android.permission.USE_SIP',
      PROCESS_OUTGOING_CALLS: 'android.permission.PROCESS_OUTGOING_CALLS',
      BODY_SENSORS: 'android.permission.BODY_SENSORS',
      SEND_SMS: 'android.permission.SEND_SMS',
      RECEIVE_SMS: 'android.permission.RECEIVE_SMS',
      READ_SMS: 'android.permission.READ_SMS',
      RECEIVE_WAP_PUSH: 'android.permission.RECEIVE_WAP_PUSH',
      RECEIVE_MMS: 'android.permission.RECEIVE_MMS',
      READ_EXTERNAL_STORAGE: 'android.permission.READ_EXTERNAL_STORAGE',
      WRITE_EXTERNAL_STORAGE: 'android.permission.WRITE_EXTERNAL_STORAGE'
    };

    this.RESULTS = {
      GRANTED: 'granted',
      DENIED: 'denied',
      NEVER_ASK_AGAIN: 'never_ask_again'
    };
  }

  babelHelpers.createClass(PermissionsAndroid, [{
    key: 'checkPermission',
    value: function checkPermission(permission) {
      console.warn('"PermissionsAndroid.checkPermission" is deprecated. Use "PermissionsAndroid.check" instead');
      return Permissions.checkPermission(permission);
    }
  }, {
    key: 'check',
    value: function check(permission) {
      return Permissions.checkPermission(permission);
    }
  }, {
    key: 'requestPermission',
    value: function requestPermission(permission, rationale) {
      var response;
      return regeneratorRuntime.async(function requestPermission$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              console.warn('"PermissionsAndroid.requestPermission" is deprecated. Use "PermissionsAndroid.request" instead');
              _context.next = 3;
              return regeneratorRuntime.awrap(this.request(permission, rationale));

            case 3:
              response = _context.sent;
              return _context.abrupt('return', response === this.RESULTS.GRANTED);

            case 5:
            case 'end':
              return _context.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: 'request',
    value: function request(permission, rationale) {
      var shouldShowRationale;
      return regeneratorRuntime.async(function request$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              if (!rationale) {
                _context2.next = 6;
                break;
              }

              _context2.next = 3;
              return regeneratorRuntime.awrap(Permissions.shouldShowRequestPermissionRationale(permission));

            case 3:
              shouldShowRationale = _context2.sent;

              if (!shouldShowRationale) {
                _context2.next = 6;
                break;
              }

              return _context2.abrupt('return', new Promise(function (resolve, reject) {
                DialogManagerAndroid.showAlert(rationale, function () {
                  return reject(new Error('Error showing rationale'));
                }, function () {
                  return resolve(Permissions.requestPermission(permission));
                });
              }));

            case 6:
              return _context2.abrupt('return', Permissions.requestPermission(permission));

            case 7:
            case 'end':
              return _context2.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: 'requestMultiple',
    value: function requestMultiple(permissions) {
      return Permissions.requestMultiplePermissions(permissions);
    }
  }]);
  return PermissionsAndroid;
}();

PermissionsAndroid = new PermissionsAndroid();

module.exports = PermissionsAndroid;
}, 710, null, "PermissionsAndroid");
__d(/* PushNotificationIOS */function(global, require, module, exports) {
'use strict';

var NativeEventEmitter = require(374                 ); // 374 = NativeEventEmitter
var RCTPushNotificationManager = require(349            ).PushNotificationManager; // 349 = NativeModules
var invariant = require(346                 ); // 346 = fbjs/lib/invariant

var PushNotificationEmitter = new NativeEventEmitter(RCTPushNotificationManager);

var _notifHandlers = new Map();

var DEVICE_NOTIF_EVENT = 'remoteNotificationReceived';
var NOTIF_REGISTER_EVENT = 'remoteNotificationsRegistered';
var NOTIF_REGISTRATION_ERROR_EVENT = 'remoteNotificationRegistrationError';
var DEVICE_LOCAL_NOTIF_EVENT = 'localNotificationReceived';

var PushNotificationIOS = function () {
  babelHelpers.createClass(PushNotificationIOS, null, [{
    key: 'presentLocalNotification',
    value: function presentLocalNotification(details) {
      RCTPushNotificationManager.presentLocalNotification(details);
    }
  }, {
    key: 'scheduleLocalNotification',
    value: function scheduleLocalNotification(details) {
      RCTPushNotificationManager.scheduleLocalNotification(details);
    }
  }, {
    key: 'cancelAllLocalNotifications',
    value: function cancelAllLocalNotifications() {
      RCTPushNotificationManager.cancelAllLocalNotifications();
    }
  }, {
    key: 'setApplicationIconBadgeNumber',
    value: function setApplicationIconBadgeNumber(number) {
      RCTPushNotificationManager.setApplicationIconBadgeNumber(number);
    }
  }, {
    key: 'getApplicationIconBadgeNumber',
    value: function getApplicationIconBadgeNumber(callback) {
      RCTPushNotificationManager.getApplicationIconBadgeNumber(callback);
    }
  }, {
    key: 'cancelLocalNotifications',
    value: function cancelLocalNotifications(userInfo) {
      RCTPushNotificationManager.cancelLocalNotifications(userInfo);
    }
  }, {
    key: 'getScheduledLocalNotifications',
    value: function getScheduledLocalNotifications(callback) {
      RCTPushNotificationManager.getScheduledLocalNotifications(callback);
    }
  }, {
    key: 'addEventListener',
    value: function addEventListener(type, handler) {
      invariant(type === 'notification' || type === 'register' || type === 'registrationError' || type === 'localNotification', 'PushNotificationIOS only supports `notification`, `register`, `registrationError`, and `localNotification` events');
      var listener;
      if (type === 'notification') {
        listener = PushNotificationEmitter.addListener(DEVICE_NOTIF_EVENT, function (notifData) {
          handler(new PushNotificationIOS(notifData));
        });
      } else if (type === 'localNotification') {
        listener = PushNotificationEmitter.addListener(DEVICE_LOCAL_NOTIF_EVENT, function (notifData) {
          handler(new PushNotificationIOS(notifData));
        });
      } else if (type === 'register') {
        listener = PushNotificationEmitter.addListener(NOTIF_REGISTER_EVENT, function (registrationInfo) {
          handler(registrationInfo.deviceToken);
        });
      } else if (type === 'registrationError') {
        listener = PushNotificationEmitter.addListener(NOTIF_REGISTRATION_ERROR_EVENT, function (errorInfo) {
          handler(errorInfo);
        });
      }
      _notifHandlers.set(type, listener);
    }
  }, {
    key: 'removeEventListener',
    value: function removeEventListener(type, handler) {
      invariant(type === 'notification' || type === 'register' || type === 'registrationError' || type === 'localNotification', 'PushNotificationIOS only supports `notification`, `register`, `registrationError`, and `localNotification` events');
      var listener = _notifHandlers.get(type);
      if (!listener) {
        return;
      }
      listener.remove();
      _notifHandlers.delete(type);
    }
  }, {
    key: 'requestPermissions',
    value: function requestPermissions(permissions) {
      var requestedPermissions = {};
      if (permissions) {
        requestedPermissions = {
          alert: !!permissions.alert,
          badge: !!permissions.badge,
          sound: !!permissions.sound
        };
      } else {
        requestedPermissions = {
          alert: true,
          badge: true,
          sound: true
        };
      }
      return RCTPushNotificationManager.requestPermissions(requestedPermissions);
    }
  }, {
    key: 'abandonPermissions',
    value: function abandonPermissions() {
      RCTPushNotificationManager.abandonPermissions();
    }
  }, {
    key: 'checkPermissions',
    value: function checkPermissions(callback) {
      invariant(typeof callback === 'function', 'Must provide a valid callback');
      RCTPushNotificationManager.checkPermissions(callback);
    }
  }, {
    key: 'getInitialNotification',
    value: function getInitialNotification() {
      return RCTPushNotificationManager.getInitialNotification().then(function (notification) {
        return notification && new PushNotificationIOS(notification);
      });
    }
  }]);

  function PushNotificationIOS(nativeNotif) {
    var _this = this;

    babelHelpers.classCallCheck(this, PushNotificationIOS);

    this._data = {};
    this._remoteNotificationCompleteCalllbackCalled = false;
    this._isRemote = nativeNotif.remote;
    if (this._isRemote) {
      this._notificationId = nativeNotif.notificationId;
    }

    if (nativeNotif.remote) {
      Object.keys(nativeNotif).forEach(function (notifKey) {
        var notifVal = nativeNotif[notifKey];
        if (notifKey === 'aps') {
          _this._alert = notifVal.alert;
          _this._sound = notifVal.sound;
          _this._badgeCount = notifVal.badge;
        } else {
          _this._data[notifKey] = notifVal;
        }
      });
    } else {
      this._badgeCount = nativeNotif.applicationIconBadgeNumber;
      this._sound = nativeNotif.soundName;
      this._alert = nativeNotif.alertBody;
      this._data = nativeNotif.userInfo;
    }
  }

  babelHelpers.createClass(PushNotificationIOS, [{
    key: 'finish',
    value: function finish(fetchResult) {
      if (!this._isRemote || !this._notificationId || this._remoteNotificationCompleteCalllbackCalled) {
        return;
      }
      this._remoteNotificationCompleteCalllbackCalled = true;

      RCTPushNotificationManager.onFinishRemoteNotification(this._notificationId, fetchResult);
    }
  }, {
    key: 'getMessage',
    value: function getMessage() {
      return this._alert;
    }
  }, {
    key: 'getSound',
    value: function getSound() {
      return this._sound;
    }
  }, {
    key: 'getAlert',
    value: function getAlert() {
      return this._alert;
    }
  }, {
    key: 'getBadgeCount',
    value: function getBadgeCount() {
      return this._badgeCount;
    }
  }, {
    key: 'getData',
    value: function getData() {
      return this._data;
    }
  }]);
  return PushNotificationIOS;
}();

PushNotificationIOS.FetchResult = {
  NewData: 'UIBackgroundFetchResultNewData',
  NoData: 'UIBackgroundFetchResultNoData',
  ResultFailed: 'UIBackgroundFetchResultFailed'
};


module.exports = PushNotificationIOS;
}, 711, null, "PushNotificationIOS");
__d(/* Settings */function(global, require, module, exports) {
'use strict';

var Settings = {
  get: function get(key) {
    console.warn('Settings is not yet supported on Android');
    return null;
  },
  set: function set(settings) {
    console.warn('Settings is not yet supported on Android');
  },
  watchKeys: function watchKeys(keys, callback) {
    console.warn('Settings is not yet supported on Android');
    return -1;
  },
  clearWatch: function clearWatch(watchId) {
    console.warn('Settings is not yet supported on Android');
  }
};

module.exports = Settings;
}, 712, null, "Settings");
__d(/* Share */function(global, require, module, exports) {
'use strict';

var Platform = require(348       ); // 348 = Platform

var _require = require(349            ), // 349 = NativeModules
    ActionSheetManager = _require.ActionSheetManager,
    ShareModule = _require.ShareModule;

var invariant = require(346                 ); // 346 = fbjs/lib/invariant
var processColor = require(436           ); // 436 = processColor

var Share = function () {
  function Share() {
    babelHelpers.classCallCheck(this, Share);
  }

  babelHelpers.createClass(Share, null, [{
    key: 'share',
    value: function share(content) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      invariant(typeof content === 'object' && content !== null, 'Content to share must be a valid object');
      invariant(typeof content.url === 'string' || typeof content.message === 'string', 'At least one of URL and message is required');
      invariant(typeof options === 'object' && options !== null, 'Options must be a valid object');

      if (Platform.OS === 'android') {
        invariant(!content.title || typeof content.title === 'string', 'Invalid title: title should be a string.');
        return ShareModule.share(content, options.dialogTitle);
      } else if (Platform.OS === 'ios') {
        return new Promise(function (resolve, reject) {
          ActionSheetManager.showShareActionSheetWithOptions(babelHelpers.extends({}, content, options, { tintColor: processColor(options.tintColor) }), function (error) {
            return reject(error);
          }, function (success, activityType) {
            if (success) {
              resolve({
                'action': 'sharedAction',
                'activityType': activityType
              });
            } else {
              resolve({
                'action': 'dismissedAction'
              });
            }
          });
        });
      } else {
        return Promise.reject(new Error('Unsupported platform'));
      }
    }
  }, {
    key: 'sharedAction',
    get: function get() {
      return 'sharedAction';
    }
  }, {
    key: 'dismissedAction',
    get: function get() {
      return 'dismissedAction';
    }
  }]);
  return Share;
}();

module.exports = Share;
}, 713, null, "Share");
__d(/* TimePickerAndroid */function(global, require, module, exports) {
'use strict';

var TimePickerModule = require(349            ).TimePickerAndroid; // 349 = NativeModules

var TimePickerAndroid = function () {
  function TimePickerAndroid() {
    babelHelpers.classCallCheck(this, TimePickerAndroid);
  }

  babelHelpers.createClass(TimePickerAndroid, null, [{
    key: 'open',
    value: function open(options) {
      return regeneratorRuntime.async(function open$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              return _context.abrupt('return', TimePickerModule.open(options));

            case 1:
            case 'end':
              return _context.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: 'timeSetAction',
    get: function get() {
      return 'timeSetAction';
    }
  }, {
    key: 'dismissedAction',
    get: function get() {
      return 'dismissedAction';
    }
  }]);
  return TimePickerAndroid;
}();

module.exports = TimePickerAndroid;
}, 714, null, "TimePickerAndroid");
__d(/* Vibration */function(global, require, module, exports) {
'use strict';

var RCTVibration = require(349            ).Vibration; // 349 = NativeModules
var Platform = require(348       ); // 348 = Platform

var _vibrating = false;
var _id = 0;

function vibrateByPattern(pattern) {
  var repeat = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  if (_vibrating) {
    return;
  }
  _vibrating = true;
  if (pattern[0] === 0) {
    RCTVibration.vibrate();
    pattern = pattern.slice(1);
  }
  if (pattern.length === 0) {
    _vibrating = false;
    return;
  }
  setTimeout(function () {
    return vibrateScheduler(++_id, pattern, repeat, 1);
  }, pattern[0]);
}

function vibrateScheduler(id, pattern, repeat, nextIndex) {
  if (!_vibrating || id !== _id) {
    return;
  }
  RCTVibration.vibrate();
  if (nextIndex >= pattern.length) {
    if (repeat) {
      nextIndex = 0;
    } else {
      _vibrating = false;
      return;
    }
  }
  setTimeout(function () {
    return vibrateScheduler(id, pattern, repeat, nextIndex + 1);
  }, pattern[nextIndex]);
}

var Vibration = {
  vibrate: function vibrate() {
    var pattern = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 400;
    var repeat = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

    if (Platform.OS === 'android') {
      if (typeof pattern === 'number') {
        RCTVibration.vibrate(pattern);
      } else if (Array.isArray(pattern)) {
        RCTVibration.vibrateByPattern(pattern, repeat ? 0 : -1);
      } else {
        throw new Error('Vibration pattern should be a number or array');
      }
    } else {
      if (_vibrating) {
        return;
      }
      if (typeof pattern === 'number') {
        RCTVibration.vibrate();
      } else if (Array.isArray(pattern)) {
        vibrateByPattern(pattern, repeat);
      } else {
        throw new Error('Vibration pattern should be a number or array');
      }
    }
  },

  cancel: function cancel() {
    if (Platform.OS === 'ios') {
      _vibrating = false;
    } else {
      RCTVibration.cancel();
    }
  }
};

module.exports = Vibration;
}, 715, null, "Vibration");
__d(/* VibrationIOS */function(global, require, module, exports) {
'use strict';

var warning = require(335               ); // 335 = fbjs/lib/warning

var VibrationIOS = {
  vibrate: function vibrate() {
    warning('VibrationIOS is not supported on this platform!');
  }
};

module.exports = VibrationIOS;
}, 716, null, "VibrationIOS");
__d(/* react/lib/LinkedStateMixin.js */function(global, require, module, exports) {

'use strict';

var ReactLink = require(718          ); // 718 = ./ReactLink
var ReactStateSetters = require(719                  ); // 719 = ./ReactStateSetters

var LinkedStateMixin = {
  linkState: function linkState(key) {
    return new ReactLink(this.state[key], ReactStateSetters.createStateKeySetter(this, key));
  }
};

module.exports = LinkedStateMixin;
}, 717, null, "react/lib/LinkedStateMixin.js");
__d(/* react/lib/ReactLink.js */function(global, require, module, exports) {

'use strict';

var React = require(399      ); // 399 = ./React

function ReactLink(value, requestChange) {
  this.value = value;
  this.requestChange = requestChange;
}

function createLinkTypeChecker(linkType) {
  var shapes = {
    value: linkType === undefined ? React.PropTypes.any.isRequired : linkType.isRequired,
    requestChange: React.PropTypes.func.isRequired
  };
  return React.PropTypes.shape(shapes);
}

ReactLink.PropTypes = {
  link: createLinkTypeChecker
};

module.exports = ReactLink;
}, 718, null, "react/lib/ReactLink.js");
__d(/* react/lib/ReactStateSetters.js */function(global, require, module, exports) {

'use strict';

var ReactStateSetters = {
  createStateSetter: function createStateSetter(component, funcReturningState) {
    return function (a, b, c, d, e, f) {
      var partialState = funcReturningState.call(component, a, b, c, d, e, f);
      if (partialState) {
        component.setState(partialState);
      }
    };
  },

  createStateKeySetter: function createStateKeySetter(component, key) {
    var cache = component.__keySetters || (component.__keySetters = {});
    return cache[key] || (cache[key] = _createStateKeySetter(component, key));
  }
};

function _createStateKeySetter(component, key) {
  var partialState = {};
  return function stateKeySetter(value) {
    partialState[key] = value;
    component.setState(partialState);
  };
}

ReactStateSetters.Mixin = {
  createStateSetter: function createStateSetter(funcReturningState) {
    return ReactStateSetters.createStateSetter(this, funcReturningState);
  },

  createStateKeySetter: function createStateKeySetter(key) {
    return ReactStateSetters.createStateKeySetter(this, key);
  }
};

module.exports = ReactStateSetters;
}, 719, null, "react/lib/ReactStateSetters.js");
__d(/* react/lib/ReactFragment.js */function(global, require, module, exports) {

'use strict';

var _prodInvariant = require(356                   ); // 356 = ./reactProdInvariant

var ReactChildren = require(401              ); // 401 = ./ReactChildren
var ReactElement = require(403             ); // 403 = ./ReactElement

var emptyFunction = require(336                     ); // 336 = fbjs/lib/emptyFunction
var invariant = require(346                 ); // 346 = fbjs/lib/invariant
var warning = require(335               ); // 335 = fbjs/lib/warning

var numericPropertyRegex = /^\d+$/;

var warnedAboutNumeric = false;

var ReactFragment = {
  create: function create(object) {
    if (typeof object !== 'object' || !object || Array.isArray(object)) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'React.addons.createFragment only accepts a single object. Got: %s', object) : void 0;
      return object;
    }
    if (ReactElement.isValidElement(object)) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'React.addons.createFragment does not accept a ReactElement ' + 'without a wrapper object.') : void 0;
      return object;
    }

    !(object.nodeType !== 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'React.addons.createFragment(...): Encountered an invalid child; DOM elements are not valid children of React components.') : _prodInvariant('0') : void 0;

    var result = [];

    for (var key in object) {
      if (process.env.NODE_ENV !== 'production') {
        if (!warnedAboutNumeric && numericPropertyRegex.test(key)) {
          process.env.NODE_ENV !== 'production' ? warning(false, 'React.addons.createFragment(...): Child objects should have ' + 'non-numeric keys so ordering is preserved.') : void 0;
          warnedAboutNumeric = true;
        }
      }
      ReactChildren.mapIntoWithKeyPrefixInternal(object[key], result, key, emptyFunction.thatReturnsArgument);
    }

    return result;
  }
};

module.exports = ReactFragment;
}, 720, null, "react/lib/ReactFragment.js");
__d(/* react/lib/update.js */function(global, require, module, exports) {

'use strict';

var _prodInvariant = require(356                   ), // 356 = ./reactProdInvariant
    _assign = require(400            ); // 400 = object-assign

var invariant = require(346                 ); // 346 = fbjs/lib/invariant
var hasOwnProperty = {}.hasOwnProperty;

function shallowCopy(x) {
  if (Array.isArray(x)) {
    return x.concat();
  } else if (x && typeof x === 'object') {
    return _assign(new x.constructor(), x);
  } else {
    return x;
  }
}

var COMMAND_PUSH = '$push';
var COMMAND_UNSHIFT = '$unshift';
var COMMAND_SPLICE = '$splice';
var COMMAND_SET = '$set';
var COMMAND_MERGE = '$merge';
var COMMAND_APPLY = '$apply';

var ALL_COMMANDS_LIST = [COMMAND_PUSH, COMMAND_UNSHIFT, COMMAND_SPLICE, COMMAND_SET, COMMAND_MERGE, COMMAND_APPLY];

var ALL_COMMANDS_SET = {};

ALL_COMMANDS_LIST.forEach(function (command) {
  ALL_COMMANDS_SET[command] = true;
});

function invariantArrayCase(value, spec, command) {
  !Array.isArray(value) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'update(): expected target of %s to be an array; got %s.', command, value) : _prodInvariant('1', command, value) : void 0;
  var specValue = spec[command];
  !Array.isArray(specValue) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'update(): expected spec of %s to be an array; got %s. Did you forget to wrap your parameter in an array?', command, specValue) : _prodInvariant('2', command, specValue) : void 0;
}

function update(value, spec) {
  !(typeof spec === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'update(): You provided a key path to update() that did not contain one of %s. Did you forget to include {%s: ...}?', ALL_COMMANDS_LIST.join(', '), COMMAND_SET) : _prodInvariant('3', ALL_COMMANDS_LIST.join(', '), COMMAND_SET) : void 0;

  if (hasOwnProperty.call(spec, COMMAND_SET)) {
    !(Object.keys(spec).length === 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot have more than one key in an object with %s', COMMAND_SET) : _prodInvariant('4', COMMAND_SET) : void 0;

    return spec[COMMAND_SET];
  }

  var nextValue = shallowCopy(value);

  if (hasOwnProperty.call(spec, COMMAND_MERGE)) {
    var mergeObj = spec[COMMAND_MERGE];
    !(mergeObj && typeof mergeObj === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'update(): %s expects a spec of type \'object\'; got %s', COMMAND_MERGE, mergeObj) : _prodInvariant('5', COMMAND_MERGE, mergeObj) : void 0;
    !(nextValue && typeof nextValue === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'update(): %s expects a target of type \'object\'; got %s', COMMAND_MERGE, nextValue) : _prodInvariant('6', COMMAND_MERGE, nextValue) : void 0;
    _assign(nextValue, spec[COMMAND_MERGE]);
  }

  if (hasOwnProperty.call(spec, COMMAND_PUSH)) {
    invariantArrayCase(value, spec, COMMAND_PUSH);
    spec[COMMAND_PUSH].forEach(function (item) {
      nextValue.push(item);
    });
  }

  if (hasOwnProperty.call(spec, COMMAND_UNSHIFT)) {
    invariantArrayCase(value, spec, COMMAND_UNSHIFT);
    spec[COMMAND_UNSHIFT].forEach(function (item) {
      nextValue.unshift(item);
    });
  }

  if (hasOwnProperty.call(spec, COMMAND_SPLICE)) {
    !Array.isArray(value) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected %s target to be an array; got %s', COMMAND_SPLICE, value) : _prodInvariant('7', COMMAND_SPLICE, value) : void 0;
    !Array.isArray(spec[COMMAND_SPLICE]) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'update(): expected spec of %s to be an array of arrays; got %s. Did you forget to wrap your parameters in an array?', COMMAND_SPLICE, spec[COMMAND_SPLICE]) : _prodInvariant('8', COMMAND_SPLICE, spec[COMMAND_SPLICE]) : void 0;
    spec[COMMAND_SPLICE].forEach(function (args) {
      !Array.isArray(args) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'update(): expected spec of %s to be an array of arrays; got %s. Did you forget to wrap your parameters in an array?', COMMAND_SPLICE, spec[COMMAND_SPLICE]) : _prodInvariant('8', COMMAND_SPLICE, spec[COMMAND_SPLICE]) : void 0;
      nextValue.splice.apply(nextValue, args);
    });
  }

  if (hasOwnProperty.call(spec, COMMAND_APPLY)) {
    !(typeof spec[COMMAND_APPLY] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'update(): expected spec of %s to be a function; got %s.', COMMAND_APPLY, spec[COMMAND_APPLY]) : _prodInvariant('9', COMMAND_APPLY, spec[COMMAND_APPLY]) : void 0;
    nextValue = spec[COMMAND_APPLY](nextValue);
  }

  for (var k in spec) {
    if (!(ALL_COMMANDS_SET.hasOwnProperty(k) && ALL_COMMANDS_SET[k])) {
      nextValue[k] = update(value[k], spec[k]);
    }
  }

  return nextValue;
}

module.exports = update;
}, 721, null, "react/lib/update.js");
__d(/* throwOnWrongReactAPI */function(global, require, module, exports) {

'use strict';

function throwOnWrongReactAPI(key) {
  throw new Error('Seems you\'re trying to access \'ReactNative.' + key + '\' from the \'react-native\' package. Perhaps you meant to access \'React.' + key + '\' from the \'react\' package instead?\n\nFor example, instead of:\n\n  import React, { Component, View } from \'react-native\';\n\nYou should now do:\n\n  import React, { Component } from \'react\';\n  import { View } from \'react-native\';\n\nCheck the release notes on how to upgrade your code - https://github.com/facebook/react-native/releases/tag/v0.25.1\n');
}

module.exports = throwOnWrongReactAPI;
}, 722, null, "throwOnWrongReactAPI");
__d(/* prop-types/index.js */function(global, require, module, exports) {

if (process.env.NODE_ENV !== 'production') {
  var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && (typeof Symbol === 'function' ? Symbol.for : '@@for') && (typeof Symbol === 'function' ? Symbol.for : '@@for')('react.element') || 0xeac7;

  var isValidElement = function isValidElement(object) {
    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
  };

  var throwOnDirectAccess = true;
  module.exports = require(724                        )(isValidElement, throwOnDirectAccess); // 724 = ./factoryWithTypeCheckers
} else {
  module.exports = require(727                         )(); // 727 = ./factoryWithThrowingShims
}
}, 723, null, "prop-types/index.js");
__d(/* prop-types/factoryWithTypeCheckers.js */function(global, require, module, exports) {

'use strict';

var emptyFunction = require(336                     ); // 336 = fbjs/lib/emptyFunction
var invariant = require(346                 ); // 346 = fbjs/lib/invariant
var warning = require(335               ); // 335 = fbjs/lib/warning
var assign = require(400            ); // 400 = object-assign

var ReactPropTypesSecret = require(725                         ); // 725 = ./lib/ReactPropTypesSecret
var checkPropTypes = require(726               ); // 726 = ./checkPropTypes

module.exports = function (isValidElement, throwOnDirectAccess) {
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && (typeof Symbol === 'function' ? Symbol.iterator : '@@iterator');
  var FAUX_ITERATOR_SYMBOL = '@@iterator';
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  var ANONYMOUS = '<<anonymous>>';

  var ReactPropTypes = {
    array: createPrimitiveTypeChecker('array'),
    bool: createPrimitiveTypeChecker('boolean'),
    func: createPrimitiveTypeChecker('function'),
    number: createPrimitiveTypeChecker('number'),
    object: createPrimitiveTypeChecker('object'),
    string: createPrimitiveTypeChecker('string'),
    symbol: createPrimitiveTypeChecker('symbol'),

    any: createAnyTypeChecker(),
    arrayOf: createArrayOfTypeChecker,
    element: createElementTypeChecker(),
    instanceOf: createInstanceTypeChecker,
    node: createNodeChecker(),
    objectOf: createObjectOfTypeChecker,
    oneOf: createEnumTypeChecker,
    oneOfType: createUnionTypeChecker,
    shape: createShapeTypeChecker,
    exact: createStrictShapeTypeChecker
  };

  function is(x, y) {
    if (x === y) {
      return x !== 0 || 1 / x === 1 / y;
    } else {
      return x !== x && y !== y;
    }
  }

  function PropTypeError(message) {
    this.message = message;
    this.stack = '';
  }

  PropTypeError.prototype = Error.prototype;

  function createChainableTypeChecker(validate) {
    if (process.env.NODE_ENV !== 'production') {
      var manualPropTypeCallCache = {};
      var manualPropTypeWarningCount = 0;
    }
    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
      componentName = componentName || ANONYMOUS;
      propFullName = propFullName || propName;

      if (secret !== ReactPropTypesSecret) {
        if (throwOnDirectAccess) {
          invariant(false, 'Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use `PropTypes.checkPropTypes()` to call them. ' + 'Read more at http://fb.me/use-check-prop-types');
        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {
          var cacheKey = componentName + ':' + propName;
          if (!manualPropTypeCallCache[cacheKey] && manualPropTypeWarningCount < 3) {
            warning(false, 'You are manually calling a React.PropTypes validation ' + 'function for the `%s` prop on `%s`. This is deprecated ' + 'and will throw in the standalone `prop-types` package. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.', propFullName, componentName);
            manualPropTypeCallCache[cacheKey] = true;
            manualPropTypeWarningCount++;
          }
        }
      }
      if (props[propName] == null) {
        if (isRequired) {
          if (props[propName] === null) {
            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
          }
          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
        }
        return null;
      } else {
        return validate(props, propName, componentName, location, propFullName);
      }
    }

    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);

    return chainedCheckType;
  }

  function createPrimitiveTypeChecker(expectedType) {
    function validate(props, propName, componentName, location, propFullName, secret) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== expectedType) {
        var preciseType = getPreciseType(propValue);

        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createAnyTypeChecker() {
    return createChainableTypeChecker(emptyFunction.thatReturnsNull);
  }

  function createArrayOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
      }
      var propValue = props[propName];
      if (!Array.isArray(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
      }
      for (var i = 0; i < propValue.length; i++) {
        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
        if (error instanceof Error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!isValidElement(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createInstanceTypeChecker(expectedClass) {
    function validate(props, propName, componentName, location, propFullName) {
      if (!(props[propName] instanceof expectedClass)) {
        var expectedClassName = expectedClass.name || ANONYMOUS;
        var actualClassName = getClassName(props[propName]);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createEnumTypeChecker(expectedValues) {
    if (!Array.isArray(expectedValues)) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;
      return emptyFunction.thatReturnsNull;
    }

    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      for (var i = 0; i < expectedValues.length; i++) {
        if (is(propValue, expectedValues[i])) {
          return null;
        }
      }

      var valuesString = JSON.stringify(expectedValues);
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createObjectOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
      }
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
      }
      for (var key in propValue) {
        if (propValue.hasOwnProperty(key)) {
          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
          if (error instanceof Error) {
            return error;
          }
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createUnionTypeChecker(arrayOfTypeCheckers) {
    if (!Array.isArray(arrayOfTypeCheckers)) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
      return emptyFunction.thatReturnsNull;
    }

    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (typeof checker !== 'function') {
        warning(false, 'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' + 'received %s at index %s.', getPostfixForTypeWarning(checker), i);
        return emptyFunction.thatReturnsNull;
      }
    }

    function validate(props, propName, componentName, location, propFullName) {
      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];
        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
          return null;
        }
      }

      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createNodeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!isNode(props[propName])) {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      for (var key in shapeTypes) {
        var checker = shapeTypes[key];
        if (!checker) {
          continue;
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createStrictShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }

      var allKeys = assign({}, props[propName], shapeTypes);
      for (var key in allKeys) {
        var checker = shapeTypes[key];
        if (!checker) {
          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' + '\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function isNode(propValue) {
    switch (typeof propValue) {
      case 'number':
      case 'string':
      case 'undefined':
        return true;
      case 'boolean':
        return !propValue;
      case 'object':
        if (Array.isArray(propValue)) {
          return propValue.every(isNode);
        }
        if (propValue === null || isValidElement(propValue)) {
          return true;
        }

        var iteratorFn = getIteratorFn(propValue);
        if (iteratorFn) {
          var iterator = iteratorFn.call(propValue);
          var step;
          if (iteratorFn !== propValue.entries) {
            while (!(step = iterator.next()).done) {
              if (!isNode(step.value)) {
                return false;
              }
            }
          } else {
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                if (!isNode(entry[1])) {
                  return false;
                }
              }
            }
          }
        } else {
          return false;
        }

        return true;
      default:
        return false;
    }
  }

  function isSymbol(propType, propValue) {
    if (propType === 'symbol') {
      return true;
    }

    if (propValue['@@toStringTag'] === 'Symbol') {
      return true;
    }

    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
      return true;
    }

    return false;
  }

  function getPropType(propValue) {
    var propType = typeof propValue;
    if (Array.isArray(propValue)) {
      return 'array';
    }
    if (propValue instanceof RegExp) {
      return 'object';
    }
    if (isSymbol(propType, propValue)) {
      return 'symbol';
    }
    return propType;
  }

  function getPreciseType(propValue) {
    if (typeof propValue === 'undefined' || propValue === null) {
      return '' + propValue;
    }
    var propType = getPropType(propValue);
    if (propType === 'object') {
      if (propValue instanceof Date) {
        return 'date';
      } else if (propValue instanceof RegExp) {
        return 'regexp';
      }
    }
    return propType;
  }

  function getPostfixForTypeWarning(value) {
    var type = getPreciseType(value);
    switch (type) {
      case 'array':
      case 'object':
        return 'an ' + type;
      case 'boolean':
      case 'date':
      case 'regexp':
        return 'a ' + type;
      default:
        return type;
    }
  }

  function getClassName(propValue) {
    if (!propValue.constructor || !propValue.constructor.name) {
      return ANONYMOUS;
    }
    return propValue.constructor.name;
  }

  ReactPropTypes.checkPropTypes = checkPropTypes;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};
}, 724, null, "prop-types/factoryWithTypeCheckers.js");
__d(/* prop-types/lib/ReactPropTypesSecret.js */function(global, require, module, exports) {

'use strict';

var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;
}, 725, null, "prop-types/lib/ReactPropTypesSecret.js");
__d(/* prop-types/checkPropTypes.js */function(global, require, module, exports) {

'use strict';

if (process.env.NODE_ENV !== 'production') {
  var invariant = require(346                 ); // 346 = fbjs/lib/invariant
  var warning = require(335               ); // 335 = fbjs/lib/warning
  var ReactPropTypesSecret = require(725                         ); // 725 = ./lib/ReactPropTypesSecret
  var loggedTypeFailures = {};
}

function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
  if (process.env.NODE_ENV !== 'production') {
    for (var typeSpecName in typeSpecs) {
      if (typeSpecs.hasOwnProperty(typeSpecName)) {
        var error;

        try {
          invariant(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'the `prop-types` package, but received `%s`.', componentName || 'React class', location, typeSpecName, typeof typeSpecs[typeSpecName]);
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
          error = ex;
        }
        warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error);
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          loggedTypeFailures[error.message] = true;

          var stack = getStack ? getStack() : '';

          warning(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');
        }
      }
    }
  }
}

module.exports = checkPropTypes;
}, 726, null, "prop-types/checkPropTypes.js");
__d(/* prop-types/factoryWithThrowingShims.js */function(global, require, module, exports) {

'use strict';

var emptyFunction = require(336                     ); // 336 = fbjs/lib/emptyFunction
var invariant = require(346                 ); // 346 = fbjs/lib/invariant
var ReactPropTypesSecret = require(725                         ); // 725 = ./lib/ReactPropTypesSecret

module.exports = function () {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret) {
      return;
    }
    invariant(false, 'Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use PropTypes.checkPropTypes() to call them. ' + 'Read more at http://fb.me/use-check-prop-types');
  };
  shim.isRequired = shim;
  function getShim() {
    return shim;
  };

  var ReactPropTypes = {
    array: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,

    any: shim,
    arrayOf: getShim,
    element: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim,
    exact: getShim
  };

  ReactPropTypes.checkPropTypes = emptyFunction;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};
}, 727, null, "prop-types/factoryWithThrowingShims.js");
__d(/* mitt/dist/mitt.js */function(global, require, module, exports) {function n(n) {
  return n = n || Object.create(null), { on: function on(c, e) {
      (n[c] || (n[c] = [])).push(e);
    }, off: function off(c, e) {
      n[c] && n[c].splice(n[c].indexOf(e) >>> 0, 1);
    }, emit: function emit(c, e) {
      (n[c] || []).slice().map(function (n) {
        n(e);
      }), (n["*"] || []).slice().map(function (n) {
        n(c, e);
      });
    } };
}module.exports = n;
}, 728, null, "mitt/dist/mitt.js");
__d(/* reactotron-core-client/dist/index.js */function(global, require, module, exports) {'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault(ex) {
  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;
}

var R = require(730    ); // 730 = ramda
var R__default = _interopDefault(R);
var RS = require(1048        ); // 1048 = ramdasauce
var RS__default = _interopDefault(RS);

var isIoValid = function isIoValid(io) {
  return !R__default.isNil(io);
};
var isHostValid = R__default.allPass([R__default.complement(RS__default.isNilOrEmpty), R__default.is(String)]);
var isPortValid = R__default.allPass([R__default.complement(R__default.isNil), R__default.is(Number), RS__default.isWithin(1, 65535)]);
var onCommandValid = function onCommandValid(fn) {
  return typeof fn === 'function';
};

var validate = function validate(options) {
  var io = options.io,
      host = options.host,
      port = options.port,
      onCommand = options.onCommand;

  if (!isIoValid(io)) throw new Error('invalid io function');
  if (!isHostValid(host)) throw new Error('invalid host');
  if (!isPortValid(port)) throw new Error('invalid port');
  if (!onCommandValid(onCommand)) throw new Error('invalid onCommand handler');
};

var logger = function logger() {
  return function (reactotron) {
    return {
      features: {
        log: function log(message) {
          var important = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
          return reactotron.send('log', { level: 'debug', message: message }, !!important);
        },
        debug: function debug(message) {
          var important = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
          return reactotron.send('log', { level: 'debug', message: message }, !!important);
        },
        warn: function warn(message) {
          return reactotron.send('log', { level: 'warn', message: message }, true);
        },
        error: function error(message, stack) {
          return reactotron.send('log', { level: 'error', message: message, stack: stack }, true);
        }
      }
    };
  };
};

var image = function image() {
  return function (reactotron) {
    return {
      features: {
        image: function image(_ref) {
          var uri = _ref.uri,
              preview = _ref.preview,
              filename = _ref.filename,
              width = _ref.width,
              height = _ref.height,
              caption = _ref.caption;
          return reactotron.send('image', { uri: uri, preview: preview, filename: filename, width: width, height: height, caption: caption });
        }
      }
    };
  };
};

var benchmark = function benchmark() {
  return function (reactotron) {
    var startTimer = reactotron.startTimer;

    var benchmark = function benchmark(title) {
      var steps = [];
      var elapsed = startTimer();
      var step = function step(stepTitle) {
        var previousTime = R.length(steps) === 0 ? 0 : R.last(steps).time;
        var nextTime = elapsed();
        steps.push({ title: stepTitle, time: nextTime, delta: nextTime - previousTime });
      };
      steps.push({ title: title, time: 0, delta: 0 });
      var stop = function stop(stopTitle) {
        step(stopTitle);
        reactotron.send('benchmark.report', { title: title, steps: steps });
      };
      return { step: step, stop: stop, last: stop };
    };

    return {
      features: { benchmark: benchmark }
    };
  };
};

var stateResponses = function stateResponses() {
  return function (reactotron) {
    return {
      features: {
        stateActionComplete: function stateActionComplete(name, action) {
          var important = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
          return reactotron.send('state.action.complete', { name: name, action: action }, !!important);
        },

        stateValuesResponse: function stateValuesResponse(path, value) {
          var valid = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
          return reactotron.send('state.values.response', { path: path, value: value, valid: valid });
        },

        stateKeysResponse: function stateKeysResponse(path, keys) {
          var valid = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
          return reactotron.send('state.keys.response', { path: path, keys: keys, valid: valid });
        },

        stateValuesChange: function stateValuesChange(changes) {
          return reactotron.send('state.values.change', { changes: changes });
        },

        stateBackupResponse: function stateBackupResponse(state) {
          return reactotron.send('state.backup.response', { state: state });
        }
      }
    };
  };
};

var apiResponse = function apiResponse() {
  return function (reactotron) {
    return {
      features: {
        apiResponse: function apiResponse(request, response, duration) {
          var ok = response && response.status && RS.isWithin(200, 299, response.status);
          var important = !ok;
          reactotron.send('api.response', { request: request, response: response, duration: duration }, important);
        }
      }
    };
  };
};

var clear = function clear() {
  return function (reactotron) {
    return {
      features: {
        clear: function clear() {
          return reactotron.send('clear');
        }
      }
    };
  };
};

var _typeof = typeof Symbol === "function" && typeof (typeof Symbol === 'function' ? Symbol.iterator : '@@iterator') === "symbol" ? function (obj) {
  return typeof obj;
} : function (obj) {
  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== (typeof Symbol === 'function' ? Symbol.prototype : '@@prototype') ? "symbol" : typeof obj;
};

var classCallCheck = function classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

var createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

var UNDEFINED = '~~~ undefined ~~~';
var NULL = '~~~ null ~~~';
var FALSE = '~~~ false ~~~';
var ZERO = '~~~ zero ~~~';
var EMPTY_STRING = '~~~ empty string ~~~';
var CIRCULAR = '~~~ Circular Reference ~~~';
var ANONYMOUS = '~~~ anonymous function ~~~';
var INFINITY = '~~~ Infinity ~~~';
var NEGATIVE_INFINITY = '~~~ -Infinity ~~~';

function getFunctionName(fn) {
  var n = fn.name;
  if (n === null || n === undefined || n === '') {
    return ANONYMOUS;
  } else {
    return '~~~ ' + n + '() ~~~';
  }
}

function serialize(source) {
  var stack = [];
  var keys = [];

  function serializer(replacer) {
    return function (key, value) {
      if (value === true) return true;

      if (value === Infinity) return INFINITY;
      if (value === -Infinity) return NEGATIVE_INFINITY;
      if (value === 0) return ZERO;

      if (value === undefined) return UNDEFINED;
      if (value === null) return NULL;
      if (value === false) return FALSE;

      if (value === -0) return ZERO;
      if (value === '') return EMPTY_STRING;

      switch (typeof value === 'undefined' ? 'undefined' : _typeof(value)) {
        case 'string':
          return value;
        case 'number':
          return value;
        case 'function':
          return getFunctionName(value);
      }

      if (stack.length > 0) {
        var thisPos = stack.indexOf(this);
        ~thisPos ? stack.splice(thisPos + 1) : stack.push(this);
        ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key);
        if (~stack.indexOf(value)) value = CIRCULAR;
      } else {
        stack.push(value);
      }

      return replacer == null ? value : replacer.call(this, key, value);
    };
  }

  return JSON.stringify(source, serializer(null));
}

var hasHirezNodeTimer = false && (typeof process === 'undefined' ? 'undefined' : _typeof(process)) === 'object' && process && process.hrtime && typeof process.hrtime === 'function';

var defaultPerformanceNow = function defaultPerformanceNow() {
  return Date.now();
};

var nativePerformance = typeof window !== 'undefined' && window && (window.performance || window.msPerformance || window.webkitPerformance);

var performanceNow = defaultPerformanceNow;

var delta = function delta(started) {
  return performanceNow() - started;
};

if (hasHirezNodeTimer) {
  performanceNow = process.hrtime;
  delta = function delta(started) {
    return performanceNow(started)[1] / 1000000;
  };
} else if (global.nativePerformanceNow) {
  performanceNow = global.nativePerformanceNow;
} else if (nativePerformance) {
  performanceNow = function performanceNow() {
    return nativePerformance.now && nativePerformance.now();
  };
}

var start = function start() {
  var started = performanceNow();
  return function () {
    return delta(started);
  };
};

var CorePlugins = [image(), logger(), benchmark(), stateResponses(), apiResponse(), clear()];

var DEFAULTS = {
  io: null,
  host: 'localhost',
  port: 9090,
  name: 'reactotron-core-client',
  secure: false,
  plugins: CorePlugins,
  safeRecursion: true,
  onCommand: function onCommand(cmd) {
    return null;
  },
  onConnect: function onConnect() {
    return null;
  },
  onDisconnect: function onDisconnect() {
    return null;
  },
  socketIoProperties: {
    reconnection: true,
    reconnectionDelay: 2000,
    reconnectionDelayMax: 5000,
    reconnectionAttempts: 5
  } };

var isReservedFeature = R__default.contains(R__default.__, ['options', 'connected', 'socket', 'plugins', 'configure', 'connect', 'send', 'use', 'startTimer']);

var Client = function () {
  function Client() {
    classCallCheck(this, Client);
    this.options = R__default.merge({}, DEFAULTS);
    this.connected = false;
    this.socket = null;
    this.plugins = [];

    this.startTimer = function () {
      return start();
    };

    this.send = this.send.bind(this);
  }

  createClass(Client, [{
    key: 'configure',
    value: function configure() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      var newOptions = R__default.merge(this.options, options);
      validate(newOptions);
      this.options = newOptions;

      if (R__default.has('length', this.options.plugins)) {
        R__default.forEach(this.use.bind(this), this.options.plugins);
      }

      return this;
    }

  }, {
    key: 'connect',
    value: function connect() {
      var _this = this;

      this.connected = true;
      var _options = this.options,
          io = _options.io,
          secure = _options.secure,
          host = _options.host,
          port = _options.port,
          name = _options.name,
          userAgent = _options.userAgent,
          environment = _options.environment,
          reactotronVersion = _options.reactotronVersion,
          socketIoProperties = _options.socketIoProperties;
      var _options2 = this.options,
          onCommand = _options2.onCommand,
          onConnect = _options2.onConnect,
          onDisconnect = _options2.onDisconnect;

      var protocol = secure ? 'wss' : 'ws';
      var socket = io(protocol + '://' + host + ':' + port, _extends({
        jsonp: false,
        transports: ['websocket', 'polling']
      }, socketIoProperties));

      socket.on('connect', function () {
        onConnect && onConnect();

        R__default.forEach(function (plugin) {
          return plugin.onConnect && plugin.onConnect();
        }, _this.plugins);

        _this.send('client.intro', { host: host, port: port, name: name, userAgent: userAgent, reactotronVersion: reactotronVersion, environment: environment });
      });

      socket.on('disconnect', function () {
        onDisconnect && onDisconnect();

        R__default.forEach(function (plugin) {
          return plugin.onDisconnect && plugin.onDisconnect();
        }, _this.plugins);
      });

      socket.on('command', function (command) {
        onCommand && onCommand(command);

        R__default.forEach(function (plugin) {
          return plugin.onCommand && plugin.onCommand(command);
        }, _this.plugins);
      });

      this.socket = socket;

      return this;
    }

  }, {
    key: 'send',
    value: function send(type) {
      var payload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var important = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

      if (!this.socket) return;

      var actualPayload = this.options.safeRecursion ? JSON.parse(serialize(payload)) : payload;

      this.socket.emit('command', {
        type: type,
        payload: actualPayload,
        important: !!important
      });
    }

  }, {
    key: 'display',
    value: function display() {
      var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var name = config.name,
          value = config.value,
          preview = config.preview,
          image$$1 = config.image,
          _config$important = config.important,
          important = _config$important === undefined ? false : _config$important;

      var payload = {
        name: name,
        value: value || null,
        preview: preview || null,
        image: image$$1 || null
      };
      this.send('display', payload, important);
    }

  }, {
    key: 'reportError',
    value: function reportError(error) {
      this.error(error);
    }

  }, {
    key: 'use',
    value: function use(pluginCreator) {
      var _this2 = this;

      if (typeof pluginCreator !== 'function') throw new Error('plugins must be a function');

      var plugin = pluginCreator.bind(this)(this);

      if (!R__default.is(Object, plugin)) throw new Error('plugins must return an object');

      if (plugin.features) {
        if (!R__default.is(Object, plugin.features)) throw new Error('features must be an object');

        var inject = function inject(key) {
          var featureFunction = plugin.features[key];

          if (typeof featureFunction !== 'function') {
            throw new Error('feature ' + key + ' is not a function');
          }

          if (isReservedFeature(key)) throw new Error('feature ' + key + ' is a reserved name');

          _this2[key] = featureFunction;
        };

        R__default.forEach(inject, R__default.keys(plugin.features));
      }

      this.plugins.push(plugin);

      plugin.onPlugin && typeof plugin.onPlugin === 'function' && plugin.onPlugin.bind(this)(this);

      return this;
    }
  }]);
  return Client;
}();

var createClient = function createClient(options) {
  var client = new Client();
  client.configure(options);
  return client;
};

exports.CorePlugins = CorePlugins;
exports.Client = Client;
exports.createClient = createClient;
exports.start = start;
}, 729, null, "reactotron-core-client/dist/index.js");
__d(/* ramda/index.js */function(global, require, module, exports) {module.exports = {
  F: require(731      ), // 731 = ./src/F
  T: require(735      ), // 735 = ./src/T
  __: require(736       ), // 736 = ./src/__
  add: require(737        ), // 737 = ./src/add
  addIndex: require(739             ), // 739 = ./src/addIndex
  adjust: require(744           ), // 744 = ./src/adjust
  all: require(746        ), // 746 = ./src/all
  allPass: require(753            ), // 753 = ./src/allPass
  always: require(732           ), // 732 = ./src/always
  and: require(769        ), // 769 = ./src/and
  any: require(770        ), // 770 = ./src/any
  anyPass: require(772            ), // 772 = ./src/anyPass
  ap: require(773       ), // 773 = ./src/ap
  aperture: require(774             ), // 774 = ./src/aperture
  append: require(777           ), // 777 = ./src/append
  apply: require(778          ), // 778 = ./src/apply
  applySpec: require(779              ), // 779 = ./src/applySpec
  ascend: require(781           ), // 781 = ./src/ascend
  assoc: require(782          ), // 782 = ./src/assoc
  assocPath: require(783              ), // 783 = ./src/assocPath
  binary: require(786           ), // 786 = ./src/binary
  bind: require(762         ), // 762 = ./src/bind
  both: require(788         ), // 788 = ./src/both
  call: require(792         ), // 792 = ./src/call
  chain: require(794          ), // 794 = ./src/chain
  clamp: require(799          ), // 799 = ./src/clamp
  clone: require(800          ), // 800 = ./src/clone
  comparator: require(804               ), // 804 = ./src/comparator
  complement: require(805               ), // 805 = ./src/complement
  compose: require(807            ), // 807 = ./src/compose
  composeK: require(814             ), // 814 = ./src/composeK
  composeP: require(815             ), // 815 = ./src/composeP
  concat: require(818           ), // 818 = ./src/concat
  cond: require(836         ), // 836 = ./src/cond
  construct: require(837              ), // 837 = ./src/construct
  constructN: require(838               ), // 838 = ./src/constructN
  contains: require(839             ), // 839 = ./src/contains
  converge: require(840             ), // 840 = ./src/converge
  countBy: require(841            ), // 841 = ./src/countBy
  curry: require(793          ), // 793 = ./src/curry
  curryN: require(741           ), // 741 = ./src/curryN
  dec: require(844        ), // 844 = ./src/dec
  defaultTo: require(845              ), // 845 = ./src/defaultTo
  descend: require(846            ), // 846 = ./src/descend
  difference: require(847               ), // 847 = ./src/difference
  differenceWith: require(848                   ), // 848 = ./src/differenceWith
  dissoc: require(850           ), // 850 = ./src/dissoc
  dissocPath: require(851               ), // 851 = ./src/dissocPath
  divide: require(854           ), // 854 = ./src/divide
  drop: require(855         ), // 855 = ./src/drop
  dropLast: require(857             ), // 857 = ./src/dropLast
  dropLastWhile: require(862                  ), // 862 = ./src/dropLastWhile
  dropRepeats: require(865                ), // 865 = ./src/dropRepeats
  dropRepeatsWith: require(867                    ), // 867 = ./src/dropRepeatsWith
  dropWhile: require(870              ), // 870 = ./src/dropWhile
  either: require(872           ), // 872 = ./src/either
  empty: require(874          ), // 874 = ./src/empty
  endsWith: require(875             ), // 875 = ./src/endsWith
  eqBy: require(877         ), // 877 = ./src/eqBy
  eqProps: require(878            ), // 878 = ./src/eqProps
  equals: require(823           ), // 823 = ./src/equals
  evolve: require(879           ), // 879 = ./src/evolve
  filter: require(832           ), // 832 = ./src/filter
  find: require(880         ), // 880 = ./src/find
  findIndex: require(882              ), // 882 = ./src/findIndex
  findLast: require(884             ), // 884 = ./src/findLast
  findLastIndex: require(886                  ), // 886 = ./src/findLastIndex
  flatten: require(888            ), // 888 = ./src/flatten
  flip: require(889         ), // 889 = ./src/flip
  forEach: require(890            ), // 890 = ./src/forEach
  forEachObjIndexed: require(891                      ), // 891 = ./src/forEachObjIndexed
  fromPairs: require(892              ), // 892 = ./src/fromPairs
  groupBy: require(893            ), // 893 = ./src/groupBy
  groupWith: require(894              ), // 894 = ./src/groupWith
  gt: require(895       ), // 895 = ./src/gt
  gte: require(896        ), // 896 = ./src/gte
  has: require(897        ), // 897 = ./src/has
  hasIn: require(898          ), // 898 = ./src/hasIn
  head: require(899         ), // 899 = ./src/head
  identical: require(827              ), // 827 = ./src/identical
  identity: require(900             ), // 900 = ./src/identity
  ifElse: require(902           ), // 902 = ./src/ifElse
  inc: require(903        ), // 903 = ./src/inc
  indexBy: require(904            ), // 904 = ./src/indexBy
  indexOf: require(905            ), // 905 = ./src/indexOf
  init: require(906         ), // 906 = ./src/init
  innerJoin: require(907              ), // 907 = ./src/innerJoin
  insert: require(908           ), // 908 = ./src/insert
  insertAll: require(909              ), // 909 = ./src/insertAll
  intersection: require(910                 ), // 910 = ./src/intersection
  intersectionWith: require(914                     ), // 914 = ./src/intersectionWith
  intersperse: require(916                ), // 916 = ./src/intersperse
  into: require(917         ), // 917 = ./src/into
  invert: require(922           ), // 922 = ./src/invert
  invertObj: require(923              ), // 923 = ./src/invertObj
  invoker: require(924            ), // 924 = ./src/invoker
  is: require(925       ), // 925 = ./src/is
  isEmpty: require(926            ), // 926 = ./src/isEmpty
  isNil: require(785          ), // 785 = ./src/isNil
  join: require(927         ), // 927 = ./src/join
  juxt: require(928         ), // 928 = ./src/juxt
  keys: require(764         ), // 764 = ./src/keys
  keysIn: require(929           ), // 929 = ./src/keysIn
  last: require(868         ), // 868 = ./src/last
  lastIndexOf: require(930                ), // 930 = ./src/lastIndexOf
  length: require(931           ), // 931 = ./src/length
  lens: require(933         ), // 933 = ./src/lens
  lensIndex: require(934              ), // 934 = ./src/lensIndex
  lensPath: require(935             ), // 935 = ./src/lensPath
  lensProp: require(937             ), // 937 = ./src/lensProp
  lift: require(790         ), // 790 = ./src/lift
  liftN: require(791          ), // 791 = ./src/liftN
  lt: require(938       ), // 938 = ./src/lt
  lte: require(939        ), // 939 = ./src/lte
  map: require(756        ), // 756 = ./src/map
  mapAccum: require(940             ), // 940 = ./src/mapAccum
  mapAccumRight: require(941                  ), // 941 = ./src/mapAccumRight
  mapObjIndexed: require(942                  ), // 942 = ./src/mapObjIndexed
  match: require(943          ), // 943 = ./src/match
  mathMod: require(944            ), // 944 = ./src/mathMod
  max: require(754        ), // 754 = ./src/max
  maxBy: require(945          ), // 945 = ./src/maxBy
  mean: require(946         ), // 946 = ./src/mean
  median: require(948           ), // 948 = ./src/median
  memoize: require(949            ), // 949 = ./src/memoize
  memoizeWith: require(950                ), // 950 = ./src/memoizeWith
  merge: require(951          ), // 951 = ./src/merge
  mergeAll: require(952             ), // 952 = ./src/mergeAll
  mergeDeepLeft: require(953                  ), // 953 = ./src/mergeDeepLeft
  mergeDeepRight: require(956                   ), // 956 = ./src/mergeDeepRight
  mergeDeepWith: require(957                  ), // 957 = ./src/mergeDeepWith
  mergeDeepWithKey: require(954                     ), // 954 = ./src/mergeDeepWithKey
  mergeWith: require(958              ), // 958 = ./src/mergeWith
  mergeWithKey: require(955                 ), // 955 = ./src/mergeWithKey
  min: require(959        ), // 959 = ./src/min
  minBy: require(960          ), // 960 = ./src/minBy
  modulo: require(961           ), // 961 = ./src/modulo
  multiply: require(962             ), // 962 = ./src/multiply
  nAry: require(787         ), // 787 = ./src/nAry
  negate: require(963           ), // 963 = ./src/negate
  none: require(964         ), // 964 = ./src/none
  not: require(806        ), // 806 = ./src/not
  nth: require(869        ), // 869 = ./src/nth
  nthArg: require(965           ), // 965 = ./src/nthArg
  o: require(966      ), // 966 = ./src/o
  objOf: require(921          ), // 921 = ./src/objOf
  of: require(967       ), // 967 = ./src/of
  omit: require(969         ), // 969 = ./src/omit
  once: require(970         ), // 970 = ./src/once
  or: require(873       ), // 873 = ./src/or
  over: require(971         ), // 971 = ./src/over
  pair: require(972         ), // 972 = ./src/pair
  partial: require(973            ), // 973 = ./src/partial
  partialRight: require(975                 ), // 975 = ./src/partialRight
  partition: require(976              ), // 976 = ./src/partition
  path: require(936         ), // 936 = ./src/path
  pathEq: require(977           ), // 977 = ./src/pathEq
  pathOr: require(978           ), // 978 = ./src/pathOr
  pathSatisfies: require(979                  ), // 979 = ./src/pathSatisfies
  pick: require(980         ), // 980 = ./src/pick
  pickAll: require(981            ), // 981 = ./src/pickAll
  pickBy: require(982           ), // 982 = ./src/pickBy
  pipe: require(808         ), // 808 = ./src/pipe
  pipeK: require(983          ), // 983 = ./src/pipeK
  pipeP: require(816          ), // 816 = ./src/pipeP
  pluck: require(755          ), // 755 = ./src/pluck
  prepend: require(984            ), // 984 = ./src/prepend
  product: require(985            ), // 985 = ./src/product
  project: require(986            ), // 986 = ./src/project
  prop: require(767         ), // 767 = ./src/prop
  propEq: require(988           ), // 988 = ./src/propEq
  propIs: require(989           ), // 989 = ./src/propIs
  propOr: require(990           ), // 990 = ./src/propOr
  propSatisfies: require(991                  ), // 991 = ./src/propSatisfies
  props: require(992          ), // 992 = ./src/props
  range: require(993          ), // 993 = ./src/range
  reduce: require(768           ), // 768 = ./src/reduce
  reduceBy: require(842             ), // 842 = ./src/reduceBy
  reduceRight: require(994                ), // 994 = ./src/reduceRight
  reduceWhile: require(995                ), // 995 = ./src/reduceWhile
  reduced: require(996            ), // 996 = ./src/reduced
  reject: require(830           ), // 830 = ./src/reject
  remove: require(852           ), // 852 = ./src/remove
  repeat: require(997           ), // 997 = ./src/repeat
  replace: require(999            ), // 999 = ./src/replace
  reverse: require(813            ), // 813 = ./src/reverse
  scan: require(1000        ), // 1000 = ./src/scan
  sequence: require(1001            ), // 1001 = ./src/sequence
  set: require(1002       ), // 1002 = ./src/set
  slice: require(812          ), // 812 = ./src/slice
  sort: require(1003        ), // 1003 = ./src/sort
  sortBy: require(1004          ), // 1004 = ./src/sortBy
  sortWith: require(1005            ), // 1005 = ./src/sortWith
  split: require(1006         ), // 1006 = ./src/split
  splitAt: require(1007           ), // 1007 = ./src/splitAt
  splitEvery: require(1008              ), // 1008 = ./src/splitEvery
  splitWhen: require(1009             ), // 1009 = ./src/splitWhen
  startsWith: require(1010              ), // 1010 = ./src/startsWith
  subtract: require(1011            ), // 1011 = ./src/subtract
  sum: require(947        ), // 947 = ./src/sum
  symmetricDifference: require(1012                       ), // 1012 = ./src/symmetricDifference
  symmetricDifferenceWith: require(1013                           ), // 1013 = ./src/symmetricDifferenceWith
  tail: require(810         ), // 810 = ./src/tail
  take: require(859         ), // 859 = ./src/take
  takeLast: require(876             ), // 876 = ./src/takeLast
  takeLastWhile: require(1014                 ), // 1014 = ./src/takeLastWhile
  takeWhile: require(1015             ), // 1015 = ./src/takeWhile
  tap: require(1017       ), // 1017 = ./src/tap
  test: require(1018        ), // 1018 = ./src/test
  times: require(998          ), // 998 = ./src/times
  toLower: require(1020           ), // 1020 = ./src/toLower
  toPairs: require(1021           ), // 1021 = ./src/toPairs
  toPairsIn: require(1022             ), // 1022 = ./src/toPairsIn
  toString: require(819             ), // 819 = ./src/toString
  toUpper: require(1023           ), // 1023 = ./src/toUpper
  transduce: require(1024             ), // 1024 = ./src/transduce
  transpose: require(1025             ), // 1025 = ./src/transpose
  traverse: require(1026            ), // 1026 = ./src/traverse
  trim: require(1027        ), // 1027 = ./src/trim
  tryCatch: require(1028            ), // 1028 = ./src/tryCatch
  type: require(803         ), // 803 = ./src/type
  unapply: require(1029           ), // 1029 = ./src/unapply
  unary: require(1030         ), // 1030 = ./src/unary
  uncurryN: require(1031            ), // 1031 = ./src/uncurryN
  unfold: require(1032          ), // 1032 = ./src/unfold
  union: require(1033         ), // 1033 = ./src/union
  unionWith: require(1034             ), // 1034 = ./src/unionWith
  uniq: require(911         ), // 911 = ./src/uniq
  uniqBy: require(912           ), // 912 = ./src/uniqBy
  uniqWith: require(915             ), // 915 = ./src/uniqWith
  unless: require(1035          ), // 1035 = ./src/unless
  unnest: require(1036          ), // 1036 = ./src/unnest
  until: require(1037         ), // 1037 = ./src/until
  update: require(853           ), // 853 = ./src/update
  useWith: require(987            ), // 987 = ./src/useWith
  values: require(780           ), // 780 = ./src/values
  valuesIn: require(1038            ), // 1038 = ./src/valuesIn
  view: require(1039        ), // 1039 = ./src/view
  when: require(1040        ), // 1040 = ./src/when
  where: require(1041         ), // 1041 = ./src/where
  whereEq: require(1042           ), // 1042 = ./src/whereEq
  without: require(1043           ), // 1043 = ./src/without
  xprod: require(1044         ), // 1044 = ./src/xprod
  zip: require(1045       ), // 1045 = ./src/zip
  zipObj: require(1046          ), // 1046 = ./src/zipObj
  zipWith: require(1047           ) // 1047 = ./src/zipWith
};
}, 730, null, "ramda/index.js");
__d(/* ramda/src/F.js */function(global, require, module, exports) {var always = require(732       ); // 732 = ./always

module.exports = always(false);
}, 731, null, "ramda/src/F.js");
__d(/* ramda/src/always.js */function(global, require, module, exports) {var _curry1 = require(733                 ); // 733 = ./internal/_curry1

module.exports = _curry1(function always(val) {
  return function () {
    return val;
  };
});
}, 732, null, "ramda/src/always.js");
__d(/* ramda/src/internal/_curry1.js */function(global, require, module, exports) {var _isPlaceholder = require(734               ); // 734 = ./_isPlaceholder

module.exports = function _curry1(fn) {
  return function f1(a) {
    if (arguments.length === 0 || _isPlaceholder(a)) {
      return f1;
    } else {
      return fn.apply(this, arguments);
    }
  };
};
}, 733, null, "ramda/src/internal/_curry1.js");
__d(/* ramda/src/internal/_isPlaceholder.js */function(global, require, module, exports) {module.exports = function _isPlaceholder(a) {
       return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;
};
}, 734, null, "ramda/src/internal/_isPlaceholder.js");
__d(/* ramda/src/T.js */function(global, require, module, exports) {var always = require(732       ); // 732 = ./always

module.exports = always(true);
}, 735, null, "ramda/src/T.js");
__d(/* ramda/src/__.js */function(global, require, module, exports) {
module.exports = { '@@functional/placeholder': true };
}, 736, null, "ramda/src/__.js");
__d(/* ramda/src/add.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2

module.exports = _curry2(function add(a, b) {
  return Number(a) + Number(b);
});
}, 737, null, "ramda/src/add.js");
__d(/* ramda/src/internal/_curry2.js */function(global, require, module, exports) {var _curry1 = require(733        ); // 733 = ./_curry1
var _isPlaceholder = require(734               ); // 734 = ./_isPlaceholder

module.exports = function _curry2(fn) {
  return function f2(a, b) {
    switch (arguments.length) {
      case 0:
        return f2;
      case 1:
        return _isPlaceholder(a) ? f2 : _curry1(function (_b) {
          return fn(a, _b);
        });
      default:
        return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {
          return fn(_a, b);
        }) : _isPlaceholder(b) ? _curry1(function (_b) {
          return fn(a, _b);
        }) : fn(a, b);
    }
  };
};
}, 738, null, "ramda/src/internal/_curry2.js");
__d(/* ramda/src/addIndex.js */function(global, require, module, exports) {var _concat = require(740                 ); // 740 = ./internal/_concat
var _curry1 = require(733                 ); // 733 = ./internal/_curry1
var curryN = require(741       ); // 741 = ./curryN

module.exports = _curry1(function addIndex(fn) {
  return curryN(fn.length, function () {
    var idx = 0;
    var origFn = arguments[0];
    var list = arguments[arguments.length - 1];
    var args = Array.prototype.slice.call(arguments, 0);
    args[0] = function () {
      var result = origFn.apply(this, _concat(arguments, [idx, list]));
      idx += 1;
      return result;
    };
    return fn.apply(this, args);
  });
});
}, 739, null, "ramda/src/addIndex.js");
__d(/* ramda/src/internal/_concat.js */function(global, require, module, exports) {
module.exports = function _concat(set1, set2) {
  set1 = set1 || [];
  set2 = set2 || [];
  var idx;
  var len1 = set1.length;
  var len2 = set2.length;
  var result = [];

  idx = 0;
  while (idx < len1) {
    result[result.length] = set1[idx];
    idx += 1;
  }
  idx = 0;
  while (idx < len2) {
    result[result.length] = set2[idx];
    idx += 1;
  }
  return result;
};
}, 740, null, "ramda/src/internal/_concat.js");
__d(/* ramda/src/curryN.js */function(global, require, module, exports) {var _arity = require(742                ); // 742 = ./internal/_arity
var _curry1 = require(733                 ); // 733 = ./internal/_curry1
var _curry2 = require(738                 ); // 738 = ./internal/_curry2
var _curryN = require(743                 ); // 743 = ./internal/_curryN

module.exports = _curry2(function curryN(length, fn) {
  if (length === 1) {
    return _curry1(fn);
  }
  return _arity(length, _curryN(length, [], fn));
});
}, 741, null, "ramda/src/curryN.js");
__d(/* ramda/src/internal/_arity.js */function(global, require, module, exports) {module.exports = function _arity(n, fn) {
  switch (n) {
    case 0:
      return function () {
        return fn.apply(this, arguments);
      };
    case 1:
      return function (a0) {
        return fn.apply(this, arguments);
      };
    case 2:
      return function (a0, a1) {
        return fn.apply(this, arguments);
      };
    case 3:
      return function (a0, a1, a2) {
        return fn.apply(this, arguments);
      };
    case 4:
      return function (a0, a1, a2, a3) {
        return fn.apply(this, arguments);
      };
    case 5:
      return function (a0, a1, a2, a3, a4) {
        return fn.apply(this, arguments);
      };
    case 6:
      return function (a0, a1, a2, a3, a4, a5) {
        return fn.apply(this, arguments);
      };
    case 7:
      return function (a0, a1, a2, a3, a4, a5, a6) {
        return fn.apply(this, arguments);
      };
    case 8:
      return function (a0, a1, a2, a3, a4, a5, a6, a7) {
        return fn.apply(this, arguments);
      };
    case 9:
      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {
        return fn.apply(this, arguments);
      };
    case 10:
      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {
        return fn.apply(this, arguments);
      };
    default:
      throw new Error('First argument to _arity must be a non-negative integer no greater than ten');
  }
};
}, 742, null, "ramda/src/internal/_arity.js");
__d(/* ramda/src/internal/_curryN.js */function(global, require, module, exports) {var _arity = require(742       ); // 742 = ./_arity
var _isPlaceholder = require(734               ); // 734 = ./_isPlaceholder

module.exports = function _curryN(length, received, fn) {
  return function () {
    var combined = [];
    var argsIdx = 0;
    var left = length;
    var combinedIdx = 0;
    while (combinedIdx < received.length || argsIdx < arguments.length) {
      var result;
      if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {
        result = received[combinedIdx];
      } else {
        result = arguments[argsIdx];
        argsIdx += 1;
      }
      combined[combinedIdx] = result;
      if (!_isPlaceholder(result)) {
        left -= 1;
      }
      combinedIdx += 1;
    }
    return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));
  };
};
}, 743, null, "ramda/src/internal/_curryN.js");
__d(/* ramda/src/adjust.js */function(global, require, module, exports) {var _concat = require(740                 ); // 740 = ./internal/_concat
var _curry3 = require(745                 ); // 745 = ./internal/_curry3

module.exports = _curry3(function adjust(fn, idx, list) {
  if (idx >= list.length || idx < -list.length) {
    return list;
  }
  var start = idx < 0 ? list.length : 0;
  var _idx = start + idx;
  var _list = _concat(list);
  _list[_idx] = fn(list[_idx]);
  return _list;
});
}, 744, null, "ramda/src/adjust.js");
__d(/* ramda/src/internal/_curry3.js */function(global, require, module, exports) {var _curry1 = require(733        ); // 733 = ./_curry1
var _curry2 = require(738        ); // 738 = ./_curry2
var _isPlaceholder = require(734               ); // 734 = ./_isPlaceholder

module.exports = function _curry3(fn) {
  return function f3(a, b, c) {
    switch (arguments.length) {
      case 0:
        return f3;
      case 1:
        return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {
          return fn(a, _b, _c);
        });
      case 2:
        return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {
          return fn(_a, b, _c);
        }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {
          return fn(a, _b, _c);
        }) : _curry1(function (_c) {
          return fn(a, b, _c);
        });
      default:
        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {
          return fn(_a, _b, c);
        }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {
          return fn(_a, b, _c);
        }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {
          return fn(a, _b, _c);
        }) : _isPlaceholder(a) ? _curry1(function (_a) {
          return fn(_a, b, c);
        }) : _isPlaceholder(b) ? _curry1(function (_b) {
          return fn(a, _b, c);
        }) : _isPlaceholder(c) ? _curry1(function (_c) {
          return fn(a, b, _c);
        }) : fn(a, b, c);
    }
  };
};
}, 745, null, "ramda/src/internal/_curry3.js");
__d(/* ramda/src/all.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2
var _dispatchable = require(747                       ); // 747 = ./internal/_dispatchable
var _xall = require(750               ); // 750 = ./internal/_xall

module.exports = _curry2(_dispatchable(['all'], _xall, function all(fn, list) {
  var idx = 0;
  while (idx < list.length) {
    if (!fn(list[idx])) {
      return false;
    }
    idx += 1;
  }
  return true;
}));
}, 746, null, "ramda/src/all.js");
__d(/* ramda/src/internal/_dispatchable.js */function(global, require, module, exports) {var _isArray = require(748         ); // 748 = ./_isArray
var _isTransformer = require(749               ); // 749 = ./_isTransformer

module.exports = function _dispatchable(methodNames, xf, fn) {
  return function () {
    if (arguments.length === 0) {
      return fn();
    }
    var args = Array.prototype.slice.call(arguments, 0);
    var obj = args.pop();
    if (!_isArray(obj)) {
      var idx = 0;
      while (idx < methodNames.length) {
        if (typeof obj[methodNames[idx]] === 'function') {
          return obj[methodNames[idx]].apply(obj, args);
        }
        idx += 1;
      }
      if (_isTransformer(obj)) {
        var transducer = xf.apply(null, args);
        return transducer(obj);
      }
    }
    return fn.apply(this, arguments);
  };
};
}, 747, null, "ramda/src/internal/_dispatchable.js");
__d(/* ramda/src/internal/_isArray.js */function(global, require, module, exports) {
module.exports = Array.isArray || function _isArray(val) {
  return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';
};
}, 748, null, "ramda/src/internal/_isArray.js");
__d(/* ramda/src/internal/_isTransformer.js */function(global, require, module, exports) {module.exports = function _isTransformer(obj) {
  return typeof obj['@@transducer/step'] === 'function';
};
}, 749, null, "ramda/src/internal/_isTransformer.js");
__d(/* ramda/src/internal/_xall.js */function(global, require, module, exports) {var _curry2 = require(738        ); // 738 = ./_curry2
var _reduced = require(751         ); // 751 = ./_reduced
var _xfBase = require(752        ); // 752 = ./_xfBase

module.exports = function () {
  function XAll(f, xf) {
    this.xf = xf;
    this.f = f;
    this.all = true;
  }
  XAll.prototype['@@transducer/init'] = _xfBase.init;
  XAll.prototype['@@transducer/result'] = function (result) {
    if (this.all) {
      result = this.xf['@@transducer/step'](result, true);
    }
    return this.xf['@@transducer/result'](result);
  };
  XAll.prototype['@@transducer/step'] = function (result, input) {
    if (!this.f(input)) {
      this.all = false;
      result = _reduced(this.xf['@@transducer/step'](result, false));
    }
    return result;
  };

  return _curry2(function _xall(f, xf) {
    return new XAll(f, xf);
  });
}();
}, 750, null, "ramda/src/internal/_xall.js");
__d(/* ramda/src/internal/_reduced.js */function(global, require, module, exports) {module.exports = function _reduced(x) {
  return x && x['@@transducer/reduced'] ? x : {
    '@@transducer/value': x,
    '@@transducer/reduced': true
  };
};
}, 751, null, "ramda/src/internal/_reduced.js");
__d(/* ramda/src/internal/_xfBase.js */function(global, require, module, exports) {module.exports = {
  init: function init() {
    return this.xf['@@transducer/init']();
  },
  result: function result(_result) {
    return this.xf['@@transducer/result'](_result);
  }
};
}, 752, null, "ramda/src/internal/_xfBase.js");
__d(/* ramda/src/allPass.js */function(global, require, module, exports) {var _curry1 = require(733                 ); // 733 = ./internal/_curry1
var curryN = require(741       ); // 741 = ./curryN
var max = require(754    ); // 754 = ./max
var pluck = require(755      ); // 755 = ./pluck
var reduce = require(768       ); // 768 = ./reduce

module.exports = _curry1(function allPass(preds) {
  return curryN(reduce(max, 0, pluck('length', preds)), function () {
    var idx = 0;
    var len = preds.length;
    while (idx < len) {
      if (!preds[idx].apply(this, arguments)) {
        return false;
      }
      idx += 1;
    }
    return true;
  });
});
}, 753, null, "ramda/src/allPass.js");
__d(/* ramda/src/max.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2

module.exports = _curry2(function max(a, b) {
  return b > a ? b : a;
});
}, 754, null, "ramda/src/max.js");
__d(/* ramda/src/pluck.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2
var map = require(756    ); // 756 = ./map
var prop = require(767     ); // 767 = ./prop

module.exports = _curry2(function pluck(p, list) {
  return map(prop(p), list);
});
}, 755, null, "ramda/src/pluck.js");
__d(/* ramda/src/map.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2
var _dispatchable = require(747                       ); // 747 = ./internal/_dispatchable
var _map = require(757              ); // 757 = ./internal/_map
var _reduce = require(758                 ); // 758 = ./internal/_reduce
var _xmap = require(763               ); // 763 = ./internal/_xmap
var curryN = require(741       ); // 741 = ./curryN
var keys = require(764     ); // 764 = ./keys

module.exports = _curry2(_dispatchable(['fantasy-land/map', 'map'], _xmap, function map(fn, functor) {
  switch (Object.prototype.toString.call(functor)) {
    case '[object Function]':
      return curryN(functor.length, function () {
        return fn.call(this, functor.apply(this, arguments));
      });
    case '[object Object]':
      return _reduce(function (acc, key) {
        acc[key] = fn(functor[key]);
        return acc;
      }, {}, keys(functor));
    default:
      return _map(fn, functor);
  }
}));
}, 756, null, "ramda/src/map.js");
__d(/* ramda/src/internal/_map.js */function(global, require, module, exports) {module.exports = function _map(fn, functor) {
  var idx = 0;
  var len = functor.length;
  var result = Array(len);
  while (idx < len) {
    result[idx] = fn(functor[idx]);
    idx += 1;
  }
  return result;
};
}, 757, null, "ramda/src/internal/_map.js");
__d(/* ramda/src/internal/_reduce.js */function(global, require, module, exports) {var _isArrayLike = require(759             ); // 759 = ./_isArrayLike
var _xwrap = require(761       ); // 761 = ./_xwrap
var bind = require(762      ); // 762 = ../bind

module.exports = function () {
  function _arrayReduce(xf, acc, list) {
    var idx = 0;
    var len = list.length;
    while (idx < len) {
      acc = xf['@@transducer/step'](acc, list[idx]);
      if (acc && acc['@@transducer/reduced']) {
        acc = acc['@@transducer/value'];
        break;
      }
      idx += 1;
    }
    return xf['@@transducer/result'](acc);
  }

  function _iterableReduce(xf, acc, iter) {
    var step = iter.next();
    while (!step.done) {
      acc = xf['@@transducer/step'](acc, step.value);
      if (acc && acc['@@transducer/reduced']) {
        acc = acc['@@transducer/value'];
        break;
      }
      step = iter.next();
    }
    return xf['@@transducer/result'](acc);
  }

  function _methodReduce(xf, acc, obj, methodName) {
    return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));
  }

  var symIterator = typeof Symbol !== 'undefined' ? typeof Symbol === 'function' ? Symbol.iterator : '@@iterator' : '@@iterator';
  return function _reduce(fn, acc, list) {
    if (typeof fn === 'function') {
      fn = _xwrap(fn);
    }
    if (_isArrayLike(list)) {
      return _arrayReduce(fn, acc, list);
    }
    if (typeof list['fantasy-land/reduce'] === 'function') {
      return _methodReduce(fn, acc, list, 'fantasy-land/reduce');
    }
    if (list[symIterator] != null) {
      return _iterableReduce(fn, acc, list[symIterator]());
    }
    if (typeof list.next === 'function') {
      return _iterableReduce(fn, acc, list);
    }
    if (typeof list.reduce === 'function') {
      return _methodReduce(fn, acc, list, 'reduce');
    }

    throw new TypeError('reduce: list must be array or iterable');
  };
}();
}, 758, null, "ramda/src/internal/_reduce.js");
__d(/* ramda/src/internal/_isArrayLike.js */function(global, require, module, exports) {var _curry1 = require(733        ); // 733 = ./_curry1
var _isArray = require(748         ); // 748 = ./_isArray
var _isString = require(760          ); // 760 = ./_isString

module.exports = _curry1(function isArrayLike(x) {
  if (_isArray(x)) {
    return true;
  }
  if (!x) {
    return false;
  }
  if (typeof x !== 'object') {
    return false;
  }
  if (_isString(x)) {
    return false;
  }
  if (x.nodeType === 1) {
    return !!x.length;
  }
  if (x.length === 0) {
    return true;
  }
  if (x.length > 0) {
    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);
  }
  return false;
});
}, 759, null, "ramda/src/internal/_isArrayLike.js");
__d(/* ramda/src/internal/_isString.js */function(global, require, module, exports) {module.exports = function _isString(x) {
  return Object.prototype.toString.call(x) === '[object String]';
};
}, 760, null, "ramda/src/internal/_isString.js");
__d(/* ramda/src/internal/_xwrap.js */function(global, require, module, exports) {module.exports = function () {
  function XWrap(fn) {
    this.f = fn;
  }
  XWrap.prototype['@@transducer/init'] = function () {
    throw new Error('init not implemented on XWrap');
  };
  XWrap.prototype['@@transducer/result'] = function (acc) {
    return acc;
  };
  XWrap.prototype['@@transducer/step'] = function (acc, x) {
    return this.f(acc, x);
  };

  return function _xwrap(fn) {
    return new XWrap(fn);
  };
}();
}, 761, null, "ramda/src/internal/_xwrap.js");
__d(/* ramda/src/bind.js */function(global, require, module, exports) {var _arity = require(742                ); // 742 = ./internal/_arity
var _curry2 = require(738                 ); // 738 = ./internal/_curry2

module.exports = _curry2(function bind(fn, thisObj) {
  return _arity(fn.length, function () {
    return fn.apply(thisObj, arguments);
  });
});
}, 762, null, "ramda/src/bind.js");
__d(/* ramda/src/internal/_xmap.js */function(global, require, module, exports) {var _curry2 = require(738        ); // 738 = ./_curry2
var _xfBase = require(752        ); // 752 = ./_xfBase

module.exports = function () {
  function XMap(f, xf) {
    this.xf = xf;
    this.f = f;
  }
  XMap.prototype['@@transducer/init'] = _xfBase.init;
  XMap.prototype['@@transducer/result'] = _xfBase.result;
  XMap.prototype['@@transducer/step'] = function (result, input) {
    return this.xf['@@transducer/step'](result, this.f(input));
  };

  return _curry2(function _xmap(f, xf) {
    return new XMap(f, xf);
  });
}();
}, 763, null, "ramda/src/internal/_xmap.js");
__d(/* ramda/src/keys.js */function(global, require, module, exports) {var _curry1 = require(733                 ); // 733 = ./internal/_curry1
var _has = require(765              ); // 765 = ./internal/_has
var _isArguments = require(766                      ); // 766 = ./internal/_isArguments

module.exports = function () {
  var hasEnumBug = !{ toString: null }.propertyIsEnumerable('toString');
  var nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];

  var hasArgsEnumBug = function () {
    'use strict';

    return arguments.propertyIsEnumerable('length');
  }();

  var contains = function contains(list, item) {
    var idx = 0;
    while (idx < list.length) {
      if (list[idx] === item) {
        return true;
      }
      idx += 1;
    }
    return false;
  };

  return typeof Object.keys === 'function' && !hasArgsEnumBug ? _curry1(function keys(obj) {
    return Object(obj) !== obj ? [] : Object.keys(obj);
  }) : _curry1(function keys(obj) {
    if (Object(obj) !== obj) {
      return [];
    }
    var prop, nIdx;
    var ks = [];
    var checkArgsLength = hasArgsEnumBug && _isArguments(obj);
    for (prop in obj) {
      if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {
        ks[ks.length] = prop;
      }
    }
    if (hasEnumBug) {
      nIdx = nonEnumerableProps.length - 1;
      while (nIdx >= 0) {
        prop = nonEnumerableProps[nIdx];
        if (_has(prop, obj) && !contains(ks, prop)) {
          ks[ks.length] = prop;
        }
        nIdx -= 1;
      }
    }
    return ks;
  });
}();
}, 764, null, "ramda/src/keys.js");
__d(/* ramda/src/internal/_has.js */function(global, require, module, exports) {module.exports = function _has(prop, obj) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
};
}, 765, null, "ramda/src/internal/_has.js");
__d(/* ramda/src/internal/_isArguments.js */function(global, require, module, exports) {var _has = require(765     ); // 765 = ./_has

module.exports = function () {
  var toString = Object.prototype.toString;
  return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {
    return toString.call(x) === '[object Arguments]';
  } : function _isArguments(x) {
    return _has('callee', x);
  };
}();
}, 766, null, "ramda/src/internal/_isArguments.js");
__d(/* ramda/src/prop.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2

module.exports = _curry2(function prop(p, obj) {
  return obj[p];
});
}, 767, null, "ramda/src/prop.js");
__d(/* ramda/src/reduce.js */function(global, require, module, exports) {var _curry3 = require(745                 ); // 745 = ./internal/_curry3
var _reduce = require(758                 ); // 758 = ./internal/_reduce

module.exports = _curry3(_reduce);
}, 768, null, "ramda/src/reduce.js");
__d(/* ramda/src/and.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2

module.exports = _curry2(function and(a, b) {
  return a && b;
});
}, 769, null, "ramda/src/and.js");
__d(/* ramda/src/any.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2
var _dispatchable = require(747                       ); // 747 = ./internal/_dispatchable
var _xany = require(771               ); // 771 = ./internal/_xany

module.exports = _curry2(_dispatchable(['any'], _xany, function any(fn, list) {
  var idx = 0;
  while (idx < list.length) {
    if (fn(list[idx])) {
      return true;
    }
    idx += 1;
  }
  return false;
}));
}, 770, null, "ramda/src/any.js");
__d(/* ramda/src/internal/_xany.js */function(global, require, module, exports) {var _curry2 = require(738        ); // 738 = ./_curry2
var _reduced = require(751         ); // 751 = ./_reduced
var _xfBase = require(752        ); // 752 = ./_xfBase

module.exports = function () {
  function XAny(f, xf) {
    this.xf = xf;
    this.f = f;
    this.any = false;
  }
  XAny.prototype['@@transducer/init'] = _xfBase.init;
  XAny.prototype['@@transducer/result'] = function (result) {
    if (!this.any) {
      result = this.xf['@@transducer/step'](result, false);
    }
    return this.xf['@@transducer/result'](result);
  };
  XAny.prototype['@@transducer/step'] = function (result, input) {
    if (this.f(input)) {
      this.any = true;
      result = _reduced(this.xf['@@transducer/step'](result, true));
    }
    return result;
  };

  return _curry2(function _xany(f, xf) {
    return new XAny(f, xf);
  });
}();
}, 771, null, "ramda/src/internal/_xany.js");
__d(/* ramda/src/anyPass.js */function(global, require, module, exports) {var _curry1 = require(733                 ); // 733 = ./internal/_curry1
var curryN = require(741       ); // 741 = ./curryN
var max = require(754    ); // 754 = ./max
var pluck = require(755      ); // 755 = ./pluck
var reduce = require(768       ); // 768 = ./reduce

module.exports = _curry1(function anyPass(preds) {
  return curryN(reduce(max, 0, pluck('length', preds)), function () {
    var idx = 0;
    var len = preds.length;
    while (idx < len) {
      if (preds[idx].apply(this, arguments)) {
        return true;
      }
      idx += 1;
    }
    return false;
  });
});
}, 772, null, "ramda/src/anyPass.js");
__d(/* ramda/src/ap.js */function(global, require, module, exports) {var _concat = require(740                 ); // 740 = ./internal/_concat
var _curry2 = require(738                 ); // 738 = ./internal/_curry2
var _reduce = require(758                 ); // 758 = ./internal/_reduce
var map = require(756    ); // 756 = ./map

module.exports = _curry2(function ap(applyF, applyX) {
  return typeof applyX['fantasy-land/ap'] === 'function' ? applyX['fantasy-land/ap'](applyF) : typeof applyF.ap === 'function' ? applyF.ap(applyX) : typeof applyF === 'function' ? function (x) {
    return applyF(x)(applyX(x));
  } : _reduce(function (acc, f) {
    return _concat(acc, map(f, applyX));
  }, [], applyF);
});
}, 773, null, "ramda/src/ap.js");
__d(/* ramda/src/aperture.js */function(global, require, module, exports) {var _aperture = require(775                   ); // 775 = ./internal/_aperture
var _curry2 = require(738                 ); // 738 = ./internal/_curry2
var _dispatchable = require(747                       ); // 747 = ./internal/_dispatchable
var _xaperture = require(776                    ); // 776 = ./internal/_xaperture

module.exports = _curry2(_dispatchable([], _xaperture, _aperture));
}, 774, null, "ramda/src/aperture.js");
__d(/* ramda/src/internal/_aperture.js */function(global, require, module, exports) {module.exports = function _aperture(n, list) {
  var idx = 0;
  var limit = list.length - (n - 1);
  var acc = new Array(limit >= 0 ? limit : 0);
  while (idx < limit) {
    acc[idx] = Array.prototype.slice.call(list, idx, idx + n);
    idx += 1;
  }
  return acc;
};
}, 775, null, "ramda/src/internal/_aperture.js");
__d(/* ramda/src/internal/_xaperture.js */function(global, require, module, exports) {var _concat = require(740        ); // 740 = ./_concat
var _curry2 = require(738        ); // 738 = ./_curry2
var _xfBase = require(752        ); // 752 = ./_xfBase

module.exports = function () {
  function XAperture(n, xf) {
    this.xf = xf;
    this.pos = 0;
    this.full = false;
    this.acc = new Array(n);
  }
  XAperture.prototype['@@transducer/init'] = _xfBase.init;
  XAperture.prototype['@@transducer/result'] = function (result) {
    this.acc = null;
    return this.xf['@@transducer/result'](result);
  };
  XAperture.prototype['@@transducer/step'] = function (result, input) {
    this.store(input);
    return this.full ? this.xf['@@transducer/step'](result, this.getCopy()) : result;
  };
  XAperture.prototype.store = function (input) {
    this.acc[this.pos] = input;
    this.pos += 1;
    if (this.pos === this.acc.length) {
      this.pos = 0;
      this.full = true;
    }
  };
  XAperture.prototype.getCopy = function () {
    return _concat(Array.prototype.slice.call(this.acc, this.pos), Array.prototype.slice.call(this.acc, 0, this.pos));
  };

  return _curry2(function _xaperture(n, xf) {
    return new XAperture(n, xf);
  });
}();
}, 776, null, "ramda/src/internal/_xaperture.js");
__d(/* ramda/src/append.js */function(global, require, module, exports) {var _concat = require(740                 ); // 740 = ./internal/_concat
var _curry2 = require(738                 ); // 738 = ./internal/_curry2

module.exports = _curry2(function append(el, list) {
  return _concat(list, [el]);
});
}, 777, null, "ramda/src/append.js");
__d(/* ramda/src/apply.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2

module.exports = _curry2(function apply(fn, args) {
  return fn.apply(this, args);
});
}, 778, null, "ramda/src/apply.js");
__d(/* ramda/src/applySpec.js */function(global, require, module, exports) {var _curry1 = require(733                 ); // 733 = ./internal/_curry1
var apply = require(778      ); // 778 = ./apply
var curryN = require(741       ); // 741 = ./curryN
var map = require(756    ); // 756 = ./map
var max = require(754    ); // 754 = ./max
var pluck = require(755      ); // 755 = ./pluck
var reduce = require(768       ); // 768 = ./reduce
var values = require(780       ); // 780 = ./values

module.exports = _curry1(function applySpec(spec) {
  spec = map(function (v) {
    return typeof v == 'function' ? v : applySpec(v);
  }, spec);
  return curryN(reduce(max, 0, pluck('length', values(spec))), function () {
    var args = arguments;
    return map(function (f) {
      return apply(f, args);
    }, spec);
  });
});
}, 779, null, "ramda/src/applySpec.js");
__d(/* ramda/src/values.js */function(global, require, module, exports) {var _curry1 = require(733                 ); // 733 = ./internal/_curry1
var keys = require(764     ); // 764 = ./keys

module.exports = _curry1(function values(obj) {
  var props = keys(obj);
  var len = props.length;
  var vals = [];
  var idx = 0;
  while (idx < len) {
    vals[idx] = obj[props[idx]];
    idx += 1;
  }
  return vals;
});
}, 780, null, "ramda/src/values.js");
__d(/* ramda/src/ascend.js */function(global, require, module, exports) {var _curry3 = require(745                 ); // 745 = ./internal/_curry3

module.exports = _curry3(function ascend(fn, a, b) {
  var aa = fn(a);
  var bb = fn(b);
  return aa < bb ? -1 : aa > bb ? 1 : 0;
});
}, 781, null, "ramda/src/ascend.js");
__d(/* ramda/src/assoc.js */function(global, require, module, exports) {var _curry3 = require(745                 ); // 745 = ./internal/_curry3

module.exports = _curry3(function assoc(prop, val, obj) {
  var result = {};
  for (var p in obj) {
    result[p] = obj[p];
  }
  result[prop] = val;
  return result;
});
}, 782, null, "ramda/src/assoc.js");
__d(/* ramda/src/assocPath.js */function(global, require, module, exports) {var _curry3 = require(745                 ); // 745 = ./internal/_curry3
var _has = require(765              ); // 765 = ./internal/_has
var _isArray = require(748                  ); // 748 = ./internal/_isArray
var _isInteger = require(784                    ); // 784 = ./internal/_isInteger
var assoc = require(782      ); // 782 = ./assoc
var isNil = require(785      ); // 785 = ./isNil

module.exports = _curry3(function assocPath(path, val, obj) {
  if (path.length === 0) {
    return val;
  }
  var idx = path[0];
  if (path.length > 1) {
    var nextObj = !isNil(obj) && _has(idx, obj) ? obj[idx] : _isInteger(path[1]) ? [] : {};
    val = assocPath(Array.prototype.slice.call(path, 1), val, nextObj);
  }
  if (_isInteger(idx) && _isArray(obj)) {
    var arr = [].concat(obj);
    arr[idx] = val;
    return arr;
  } else {
    return assoc(idx, val, obj);
  }
});
}, 783, null, "ramda/src/assocPath.js");
__d(/* ramda/src/internal/_isInteger.js */function(global, require, module, exports) {
module.exports = Number.isInteger || function _isInteger(n) {
  return n << 0 === n;
};
}, 784, null, "ramda/src/internal/_isInteger.js");
__d(/* ramda/src/isNil.js */function(global, require, module, exports) {var _curry1 = require(733                 ); // 733 = ./internal/_curry1

module.exports = _curry1(function isNil(x) {
  return x == null;
});
}, 785, null, "ramda/src/isNil.js");
__d(/* ramda/src/binary.js */function(global, require, module, exports) {var _curry1 = require(733                 ); // 733 = ./internal/_curry1
var nAry = require(787     ); // 787 = ./nAry

module.exports = _curry1(function binary(fn) {
  return nAry(2, fn);
});
}, 786, null, "ramda/src/binary.js");
__d(/* ramda/src/nAry.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2

module.exports = _curry2(function nAry(n, fn) {
  switch (n) {
    case 0:
      return function () {
        return fn.call(this);
      };
    case 1:
      return function (a0) {
        return fn.call(this, a0);
      };
    case 2:
      return function (a0, a1) {
        return fn.call(this, a0, a1);
      };
    case 3:
      return function (a0, a1, a2) {
        return fn.call(this, a0, a1, a2);
      };
    case 4:
      return function (a0, a1, a2, a3) {
        return fn.call(this, a0, a1, a2, a3);
      };
    case 5:
      return function (a0, a1, a2, a3, a4) {
        return fn.call(this, a0, a1, a2, a3, a4);
      };
    case 6:
      return function (a0, a1, a2, a3, a4, a5) {
        return fn.call(this, a0, a1, a2, a3, a4, a5);
      };
    case 7:
      return function (a0, a1, a2, a3, a4, a5, a6) {
        return fn.call(this, a0, a1, a2, a3, a4, a5, a6);
      };
    case 8:
      return function (a0, a1, a2, a3, a4, a5, a6, a7) {
        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7);
      };
    case 9:
      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {
        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8);
      };
    case 10:
      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {
        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);
      };
    default:
      throw new Error('First argument to nAry must be a non-negative integer no greater than ten');
  }
});
}, 787, null, "ramda/src/nAry.js");
__d(/* ramda/src/both.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2
var _isFunction = require(789                     ); // 789 = ./internal/_isFunction
var and = require(769    ); // 769 = ./and
var lift = require(790     ); // 790 = ./lift

module.exports = _curry2(function both(f, g) {
  return _isFunction(f) ? function _both() {
    return f.apply(this, arguments) && g.apply(this, arguments);
  } : lift(and)(f, g);
});
}, 788, null, "ramda/src/both.js");
__d(/* ramda/src/internal/_isFunction.js */function(global, require, module, exports) {module.exports = function _isFunction(x) {
  return Object.prototype.toString.call(x) === '[object Function]';
};
}, 789, null, "ramda/src/internal/_isFunction.js");
__d(/* ramda/src/lift.js */function(global, require, module, exports) {var _curry1 = require(733                 ); // 733 = ./internal/_curry1
var liftN = require(791      ); // 791 = ./liftN

module.exports = _curry1(function lift(fn) {
  return liftN(fn.length, fn);
});
}, 790, null, "ramda/src/lift.js");
__d(/* ramda/src/liftN.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2
var _reduce = require(758                 ); // 758 = ./internal/_reduce
var ap = require(773   ); // 773 = ./ap
var curryN = require(741       ); // 741 = ./curryN
var map = require(756    ); // 756 = ./map

module.exports = _curry2(function liftN(arity, fn) {
  var lifted = curryN(arity, fn);
  return curryN(arity, function () {
    return _reduce(ap, map(lifted, arguments[0]), Array.prototype.slice.call(arguments, 1));
  });
});
}, 791, null, "ramda/src/liftN.js");
__d(/* ramda/src/call.js */function(global, require, module, exports) {var curry = require(793      ); // 793 = ./curry

module.exports = curry(function call(fn) {
  return fn.apply(this, Array.prototype.slice.call(arguments, 1));
});
}, 792, null, "ramda/src/call.js");
__d(/* ramda/src/curry.js */function(global, require, module, exports) {var _curry1 = require(733                 ); // 733 = ./internal/_curry1
var curryN = require(741       ); // 741 = ./curryN

module.exports = _curry1(function curry(fn) {
  return curryN(fn.length, fn);
});
}, 793, null, "ramda/src/curry.js");
__d(/* ramda/src/chain.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2
var _dispatchable = require(747                       ); // 747 = ./internal/_dispatchable
var _makeFlat = require(795                   ); // 795 = ./internal/_makeFlat
var _xchain = require(796                 ); // 796 = ./internal/_xchain
var map = require(756    ); // 756 = ./map

module.exports = _curry2(_dispatchable(['fantasy-land/chain', 'chain'], _xchain, function chain(fn, monad) {
  if (typeof monad === 'function') {
    return function (x) {
      return fn(monad(x))(x);
    };
  }
  return _makeFlat(false)(map(fn, monad));
}));
}, 794, null, "ramda/src/chain.js");
__d(/* ramda/src/internal/_makeFlat.js */function(global, require, module, exports) {var _isArrayLike = require(759             ); // 759 = ./_isArrayLike

module.exports = function _makeFlat(recursive) {
  return function flatt(list) {
    var value, jlen, j;
    var result = [];
    var idx = 0;
    var ilen = list.length;

    while (idx < ilen) {
      if (_isArrayLike(list[idx])) {
        value = recursive ? flatt(list[idx]) : list[idx];
        j = 0;
        jlen = value.length;
        while (j < jlen) {
          result[result.length] = value[j];
          j += 1;
        }
      } else {
        result[result.length] = list[idx];
      }
      idx += 1;
    }
    return result;
  };
};
}, 795, null, "ramda/src/internal/_makeFlat.js");
__d(/* ramda/src/internal/_xchain.js */function(global, require, module, exports) {var _curry2 = require(738        ); // 738 = ./_curry2
var _flatCat = require(797         ); // 797 = ./_flatCat
var map = require(756     ); // 756 = ../map

module.exports = _curry2(function _xchain(f, xf) {
  return map(f, _flatCat(xf));
});
}, 796, null, "ramda/src/internal/_xchain.js");
__d(/* ramda/src/internal/_flatCat.js */function(global, require, module, exports) {var _forceReduced = require(798              ); // 798 = ./_forceReduced
var _isArrayLike = require(759             ); // 759 = ./_isArrayLike
var _reduce = require(758        ); // 758 = ./_reduce
var _xfBase = require(752        ); // 752 = ./_xfBase

module.exports = function () {
  var preservingReduced = function preservingReduced(xf) {
    return {
      '@@transducer/init': _xfBase.init,
      '@@transducer/result': function transducerResult(result) {
        return xf['@@transducer/result'](result);
      },
      '@@transducer/step': function transducerStep(result, input) {
        var ret = xf['@@transducer/step'](result, input);
        return ret['@@transducer/reduced'] ? _forceReduced(ret) : ret;
      }
    };
  };

  return function _xcat(xf) {
    var rxf = preservingReduced(xf);
    return {
      '@@transducer/init': _xfBase.init,
      '@@transducer/result': function transducerResult(result) {
        return rxf['@@transducer/result'](result);
      },
      '@@transducer/step': function transducerStep(result, input) {
        return !_isArrayLike(input) ? _reduce(rxf, result, [input]) : _reduce(rxf, result, input);
      }
    };
  };
}();
}, 797, null, "ramda/src/internal/_flatCat.js");
__d(/* ramda/src/internal/_forceReduced.js */function(global, require, module, exports) {module.exports = function _forceReduced(x) {
  return {
    '@@transducer/value': x,
    '@@transducer/reduced': true
  };
};
}, 798, null, "ramda/src/internal/_forceReduced.js");
__d(/* ramda/src/clamp.js */function(global, require, module, exports) {var _curry3 = require(745                 ); // 745 = ./internal/_curry3

module.exports = _curry3(function clamp(min, max, value) {
  if (min > max) {
    throw new Error('min must not be greater than max in clamp(min, max, value)');
  }
  return value < min ? min : value > max ? max : value;
});
}, 799, null, "ramda/src/clamp.js");
__d(/* ramda/src/clone.js */function(global, require, module, exports) {var _clone = require(801                ); // 801 = ./internal/_clone
var _curry1 = require(733                 ); // 733 = ./internal/_curry1

module.exports = _curry1(function clone(value) {
  return value != null && typeof value.clone === 'function' ? value.clone() : _clone(value, [], [], true);
});
}, 800, null, "ramda/src/clone.js");
__d(/* ramda/src/internal/_clone.js */function(global, require, module, exports) {var _cloneRegExp = require(802             ); // 802 = ./_cloneRegExp
var type = require(803      ); // 803 = ../type

module.exports = function _clone(value, refFrom, refTo, deep) {
  var copy = function copy(copiedValue) {
    var len = refFrom.length;
    var idx = 0;
    while (idx < len) {
      if (value === refFrom[idx]) {
        return refTo[idx];
      }
      idx += 1;
    }
    refFrom[idx + 1] = value;
    refTo[idx + 1] = copiedValue;
    for (var key in value) {
      copiedValue[key] = deep ? _clone(value[key], refFrom, refTo, true) : value[key];
    }
    return copiedValue;
  };
  switch (type(value)) {
    case 'Object':
      return copy({});
    case 'Array':
      return copy([]);
    case 'Date':
      return new Date(value.valueOf());
    case 'RegExp':
      return _cloneRegExp(value);
    default:
      return value;
  }
};
}, 801, null, "ramda/src/internal/_clone.js");
__d(/* ramda/src/internal/_cloneRegExp.js */function(global, require, module, exports) {module.exports = function _cloneRegExp(pattern) {
                                  return new RegExp(pattern.source, (pattern.global ? 'g' : '') + (pattern.ignoreCase ? 'i' : '') + (pattern.multiline ? 'm' : '') + (pattern.sticky ? 'y' : '') + (pattern.unicode ? 'u' : ''));
};
}, 802, null, "ramda/src/internal/_cloneRegExp.js");
__d(/* ramda/src/type.js */function(global, require, module, exports) {var _curry1 = require(733                 ); // 733 = ./internal/_curry1

module.exports = _curry1(function type(val) {
  return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);
});
}, 803, null, "ramda/src/type.js");
__d(/* ramda/src/comparator.js */function(global, require, module, exports) {var _curry1 = require(733                 ); // 733 = ./internal/_curry1

module.exports = _curry1(function comparator(pred) {
  return function (a, b) {
    return pred(a, b) ? -1 : pred(b, a) ? 1 : 0;
  };
});
}, 804, null, "ramda/src/comparator.js");
__d(/* ramda/src/complement.js */function(global, require, module, exports) {var lift = require(790     ); // 790 = ./lift
var not = require(806    ); // 806 = ./not

module.exports = lift(not);
}, 805, null, "ramda/src/complement.js");
__d(/* ramda/src/not.js */function(global, require, module, exports) {var _curry1 = require(733                 ); // 733 = ./internal/_curry1

module.exports = _curry1(function not(a) {
  return !a;
});
}, 806, null, "ramda/src/not.js");
__d(/* ramda/src/compose.js */function(global, require, module, exports) {var pipe = require(808     ); // 808 = ./pipe
var reverse = require(813        ); // 813 = ./reverse

module.exports = function compose() {
  if (arguments.length === 0) {
    throw new Error('compose requires at least one argument');
  }
  return pipe.apply(this, reverse(arguments));
};
}, 807, null, "ramda/src/compose.js");
__d(/* ramda/src/pipe.js */function(global, require, module, exports) {var _arity = require(742                ); // 742 = ./internal/_arity
var _pipe = require(809               ); // 809 = ./internal/_pipe
var reduce = require(768       ); // 768 = ./reduce
var tail = require(810     ); // 810 = ./tail

module.exports = function pipe() {
  if (arguments.length === 0) {
    throw new Error('pipe requires at least one argument');
  }
  return _arity(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));
};
}, 808, null, "ramda/src/pipe.js");
__d(/* ramda/src/internal/_pipe.js */function(global, require, module, exports) {module.exports = function _pipe(f, g) {
  return function () {
    return g.call(this, f.apply(this, arguments));
  };
};
}, 809, null, "ramda/src/internal/_pipe.js");
__d(/* ramda/src/tail.js */function(global, require, module, exports) {var _checkForMethod = require(811                         ); // 811 = ./internal/_checkForMethod
var _curry1 = require(733                 ); // 733 = ./internal/_curry1
var slice = require(812      ); // 812 = ./slice

module.exports = _curry1(_checkForMethod('tail', slice(1, Infinity)));
}, 810, null, "ramda/src/tail.js");
__d(/* ramda/src/internal/_checkForMethod.js */function(global, require, module, exports) {var _isArray = require(748         ); // 748 = ./_isArray

module.exports = function _checkForMethod(methodname, fn) {
  return function () {
    var length = arguments.length;
    if (length === 0) {
      return fn();
    }
    var obj = arguments[length - 1];
    return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));
  };
};
}, 811, null, "ramda/src/internal/_checkForMethod.js");
__d(/* ramda/src/slice.js */function(global, require, module, exports) {var _checkForMethod = require(811                         ); // 811 = ./internal/_checkForMethod
var _curry3 = require(745                 ); // 745 = ./internal/_curry3

module.exports = _curry3(_checkForMethod('slice', function slice(fromIndex, toIndex, list) {
  return Array.prototype.slice.call(list, fromIndex, toIndex);
}));
}, 812, null, "ramda/src/slice.js");
__d(/* ramda/src/reverse.js */function(global, require, module, exports) {var _curry1 = require(733                 ); // 733 = ./internal/_curry1
var _isString = require(760                   ); // 760 = ./internal/_isString

module.exports = _curry1(function reverse(list) {
  return _isString(list) ? list.split('').reverse().join('') : Array.prototype.slice.call(list, 0).reverse();
});
}, 813, null, "ramda/src/reverse.js");
__d(/* ramda/src/composeK.js */function(global, require, module, exports) {var chain = require(794      ); // 794 = ./chain
var compose = require(807        ); // 807 = ./compose
var map = require(756    ); // 756 = ./map

module.exports = function composeK() {
  if (arguments.length === 0) {
    throw new Error('composeK requires at least one argument');
  }
  var init = Array.prototype.slice.call(arguments);
  var last = init.pop();
  return compose(compose.apply(this, map(chain, init)), last);
};
}, 814, null, "ramda/src/composeK.js");
__d(/* ramda/src/composeP.js */function(global, require, module, exports) {var pipeP = require(816      ); // 816 = ./pipeP
var reverse = require(813        ); // 813 = ./reverse

module.exports = function composeP() {
  if (arguments.length === 0) {
    throw new Error('composeP requires at least one argument');
  }
  return pipeP.apply(this, reverse(arguments));
};
}, 815, null, "ramda/src/composeP.js");
__d(/* ramda/src/pipeP.js */function(global, require, module, exports) {var _arity = require(742                ); // 742 = ./internal/_arity
var _pipeP = require(817                ); // 817 = ./internal/_pipeP
var reduce = require(768       ); // 768 = ./reduce
var tail = require(810     ); // 810 = ./tail

module.exports = function pipeP() {
  if (arguments.length === 0) {
    throw new Error('pipeP requires at least one argument');
  }
  return _arity(arguments[0].length, reduce(_pipeP, arguments[0], tail(arguments)));
};
}, 816, null, "ramda/src/pipeP.js");
__d(/* ramda/src/internal/_pipeP.js */function(global, require, module, exports) {module.exports = function _pipeP(f, g) {
  return function () {
    var ctx = this;
    return f.apply(ctx, arguments).then(function (x) {
      return g.call(ctx, x);
    });
  };
};
}, 817, null, "ramda/src/internal/_pipeP.js");
__d(/* ramda/src/concat.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2
var _isArray = require(748                  ); // 748 = ./internal/_isArray
var _isFunction = require(789                     ); // 789 = ./internal/_isFunction
var _isString = require(760                   ); // 760 = ./internal/_isString
var toString = require(819         ); // 819 = ./toString

module.exports = _curry2(function concat(a, b) {
  if (_isArray(a)) {
    if (_isArray(b)) {
      return a.concat(b);
    }
    throw new TypeError(toString(b) + ' is not an array');
  }
  if (_isString(a)) {
    if (_isString(b)) {
      return a + b;
    }
    throw new TypeError(toString(b) + ' is not a string');
  }
  if (a != null && _isFunction(a['fantasy-land/concat'])) {
    return a['fantasy-land/concat'](b);
  }
  if (a != null && _isFunction(a.concat)) {
    return a.concat(b);
  }
  throw new TypeError(toString(a) + ' does not have a method named "concat" or "fantasy-land/concat"');
});
}, 818, null, "ramda/src/concat.js");
__d(/* ramda/src/toString.js */function(global, require, module, exports) {var _curry1 = require(733                 ); // 733 = ./internal/_curry1
var _toString = require(820                   ); // 820 = ./internal/_toString

module.exports = _curry1(function toString(val) {
  return _toString(val, []);
});
}, 819, null, "ramda/src/toString.js");
__d(/* ramda/src/internal/_toString.js */function(global, require, module, exports) {var _contains = require(821          ); // 821 = ./_contains
var _map = require(757     ); // 757 = ./_map
var _quote = require(828       ); // 828 = ./_quote
var _toISOString = require(829             ); // 829 = ./_toISOString
var keys = require(764      ); // 764 = ../keys
var reject = require(830        ); // 830 = ../reject

module.exports = function _toString(x, seen) {
  var recur = function recur(y) {
    var xs = seen.concat([x]);
    return _contains(y, xs) ? '<Circular>' : _toString(y, xs);
  };

  var mapPairs = function mapPairs(obj, keys) {
    return _map(function (k) {
      return _quote(k) + ': ' + recur(obj[k]);
    }, keys.slice().sort());
  };

  switch (Object.prototype.toString.call(x)) {
    case '[object Arguments]':
      return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';
    case '[object Array]':
      return '[' + _map(recur, x).concat(mapPairs(x, reject(function (k) {
        return (/^\d+$/.test(k)
        );
      }, keys(x)))).join(', ') + ']';
    case '[object Boolean]':
      return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();
    case '[object Date]':
      return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';
    case '[object Null]':
      return 'null';
    case '[object Number]':
      return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);
    case '[object String]':
      return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);
    case '[object Undefined]':
      return 'undefined';
    default:
      if (typeof x.toString === 'function') {
        var repr = x.toString();
        if (repr !== '[object Object]') {
          return repr;
        }
      }
      return '{' + mapPairs(x, keys(x)).join(', ') + '}';
  }
};
}, 820, null, "ramda/src/internal/_toString.js");
__d(/* ramda/src/internal/_contains.js */function(global, require, module, exports) {var _indexOf = require(822         ); // 822 = ./_indexOf

module.exports = function _contains(a, list) {
  return _indexOf(list, a, 0) >= 0;
};
}, 821, null, "ramda/src/internal/_contains.js");
__d(/* ramda/src/internal/_indexOf.js */function(global, require, module, exports) {var equals = require(823        ); // 823 = ../equals

module.exports = function _indexOf(list, a, idx) {
  var inf, item;

  if (typeof list.indexOf === 'function') {
    switch (typeof a) {
      case 'number':
        if (a === 0) {
          inf = 1 / a;
          while (idx < list.length) {
            item = list[idx];
            if (item === 0 && 1 / item === inf) {
              return idx;
            }
            idx += 1;
          }
          return -1;
        } else if (a !== a) {
          while (idx < list.length) {
            item = list[idx];
            if (typeof item === 'number' && item !== item) {
              return idx;
            }
            idx += 1;
          }
          return -1;
        }

        return list.indexOf(a, idx);

      case 'string':
      case 'boolean':
      case 'function':
      case 'undefined':
        return list.indexOf(a, idx);

      case 'object':
        if (a === null) {
          return list.indexOf(a, idx);
        }
    }
  }

  while (idx < list.length) {
    if (equals(list[idx], a)) {
      return idx;
    }
    idx += 1;
  }
  return -1;
};
}, 822, null, "ramda/src/internal/_indexOf.js");
__d(/* ramda/src/equals.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2
var _equals = require(824                 ); // 824 = ./internal/_equals

module.exports = _curry2(function equals(a, b) {
  return _equals(a, b, [], []);
});
}, 823, null, "ramda/src/equals.js");
__d(/* ramda/src/internal/_equals.js */function(global, require, module, exports) {var _arrayFromIterator = require(825                   ); // 825 = ./_arrayFromIterator
var _functionName = require(826              ); // 826 = ./_functionName
var _has = require(765     ); // 765 = ./_has
var identical = require(827           ); // 827 = ../identical
var keys = require(764      ); // 764 = ../keys
var type = require(803      ); // 803 = ../type

module.exports = function _equals(a, b, stackA, stackB) {
  if (identical(a, b)) {
    return true;
  }

  if (type(a) !== type(b)) {
    return false;
  }

  if (a == null || b == null) {
    return false;
  }

  if (typeof a['fantasy-land/equals'] === 'function' || typeof b['fantasy-land/equals'] === 'function') {
    return typeof a['fantasy-land/equals'] === 'function' && a['fantasy-land/equals'](b) && typeof b['fantasy-land/equals'] === 'function' && b['fantasy-land/equals'](a);
  }

  if (typeof a.equals === 'function' || typeof b.equals === 'function') {
    return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);
  }

  switch (type(a)) {
    case 'Arguments':
    case 'Array':
    case 'Object':
      if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {
        return a === b;
      }
      break;
    case 'Boolean':
    case 'Number':
    case 'String':
      if (!(typeof a === typeof b && identical(a.valueOf(), b.valueOf()))) {
        return false;
      }
      break;
    case 'Date':
      if (!identical(a.valueOf(), b.valueOf())) {
        return false;
      }
      break;
    case 'Error':
      return a.name === b.name && a.message === b.message;
    case 'RegExp':
      if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {
        return false;
      }
      break;
    case 'Map':
    case 'Set':
      if (!_equals(_arrayFromIterator(a.entries()), _arrayFromIterator(b.entries()), stackA, stackB)) {
        return false;
      }
      break;
    case 'Int8Array':
    case 'Uint8Array':
    case 'Uint8ClampedArray':
    case 'Int16Array':
    case 'Uint16Array':
    case 'Int32Array':
    case 'Uint32Array':
    case 'Float32Array':
    case 'Float64Array':
      break;
    case 'ArrayBuffer':
      break;
    default:
      return false;
  }

  var keysA = keys(a);
  if (keysA.length !== keys(b).length) {
    return false;
  }

  var idx = stackA.length - 1;
  while (idx >= 0) {
    if (stackA[idx] === a) {
      return stackB[idx] === b;
    }
    idx -= 1;
  }

  stackA.push(a);
  stackB.push(b);
  idx = keysA.length - 1;
  while (idx >= 0) {
    var key = keysA[idx];
    if (!(_has(key, b) && _equals(b[key], a[key], stackA, stackB))) {
      return false;
    }
    idx -= 1;
  }
  stackA.pop();
  stackB.pop();
  return true;
};
}, 824, null, "ramda/src/internal/_equals.js");
__d(/* ramda/src/internal/_arrayFromIterator.js */function(global, require, module, exports) {module.exports = function _arrayFromIterator(iter) {
  var list = [];
  var next;
  while (!(next = iter.next()).done) {
    list.push(next.value);
  }
  return list;
};
}, 825, null, "ramda/src/internal/_arrayFromIterator.js");
__d(/* ramda/src/internal/_functionName.js */function(global, require, module, exports) {module.exports = function _functionName(f) {
  var match = String(f).match(/^function (\w*)/);
  return match == null ? '' : match[1];
};
}, 826, null, "ramda/src/internal/_functionName.js");
__d(/* ramda/src/identical.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2

module.exports = _curry2(function identical(a, b) {
  if (a === b) {
    return a !== 0 || 1 / a === 1 / b;
  } else {
    return a !== a && b !== b;
  }
});
}, 827, null, "ramda/src/identical.js");
__d(/* ramda/src/internal/_quote.js */function(global, require, module, exports) {module.exports = function _quote(s) {
  var escaped = s.replace(/\\/g, '\\\\').replace(/[\b]/g, '\\b').replace(/\f/g, '\\f').replace(/\n/g, '\\n').replace(/\r/g, '\\r').replace(/\t/g, '\\t').replace(/\v/g, '\\v').replace(/\0/g, '\\0');

  return '"' + escaped.replace(/"/g, '\\"') + '"';
};
}, 828, null, "ramda/src/internal/_quote.js");
__d(/* ramda/src/internal/_toISOString.js */function(global, require, module, exports) {
module.exports = function () {
  var pad = function pad(n) {
    return (n < 10 ? '0' : '') + n;
  };

  return typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {
    return d.toISOString();
  } : function _toISOString(d) {
    return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';
  };
}();
}, 829, null, "ramda/src/internal/_toISOString.js");
__d(/* ramda/src/reject.js */function(global, require, module, exports) {var _complement = require(831                     ); // 831 = ./internal/_complement
var _curry2 = require(738                 ); // 738 = ./internal/_curry2
var filter = require(832       ); // 832 = ./filter

module.exports = _curry2(function reject(pred, filterable) {
  return filter(_complement(pred), filterable);
});
}, 830, null, "ramda/src/reject.js");
__d(/* ramda/src/internal/_complement.js */function(global, require, module, exports) {module.exports = function _complement(f) {
  return function () {
    return !f.apply(this, arguments);
  };
};
}, 831, null, "ramda/src/internal/_complement.js");
__d(/* ramda/src/filter.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2
var _dispatchable = require(747                       ); // 747 = ./internal/_dispatchable
var _filter = require(833                 ); // 833 = ./internal/_filter
var _isObject = require(834                   ); // 834 = ./internal/_isObject
var _reduce = require(758                 ); // 758 = ./internal/_reduce
var _xfilter = require(835                  ); // 835 = ./internal/_xfilter
var keys = require(764     ); // 764 = ./keys

module.exports = _curry2(_dispatchable(['filter'], _xfilter, function (pred, filterable) {
  return _isObject(filterable) ? _reduce(function (acc, key) {
    if (pred(filterable[key])) {
      acc[key] = filterable[key];
    }
    return acc;
  }, {}, keys(filterable)) : _filter(pred, filterable);
}));
}, 832, null, "ramda/src/filter.js");
__d(/* ramda/src/internal/_filter.js */function(global, require, module, exports) {module.exports = function _filter(fn, list) {
  var idx = 0;
  var len = list.length;
  var result = [];

  while (idx < len) {
    if (fn(list[idx])) {
      result[result.length] = list[idx];
    }
    idx += 1;
  }
  return result;
};
}, 833, null, "ramda/src/internal/_filter.js");
__d(/* ramda/src/internal/_isObject.js */function(global, require, module, exports) {module.exports = function _isObject(x) {
  return Object.prototype.toString.call(x) === '[object Object]';
};
}, 834, null, "ramda/src/internal/_isObject.js");
__d(/* ramda/src/internal/_xfilter.js */function(global, require, module, exports) {var _curry2 = require(738        ); // 738 = ./_curry2
var _xfBase = require(752        ); // 752 = ./_xfBase

module.exports = function () {
  function XFilter(f, xf) {
    this.xf = xf;
    this.f = f;
  }
  XFilter.prototype['@@transducer/init'] = _xfBase.init;
  XFilter.prototype['@@transducer/result'] = _xfBase.result;
  XFilter.prototype['@@transducer/step'] = function (result, input) {
    return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;
  };

  return _curry2(function _xfilter(f, xf) {
    return new XFilter(f, xf);
  });
}();
}, 835, null, "ramda/src/internal/_xfilter.js");
__d(/* ramda/src/cond.js */function(global, require, module, exports) {var _arity = require(742                ); // 742 = ./internal/_arity
var _curry1 = require(733                 ); // 733 = ./internal/_curry1
var map = require(756    ); // 756 = ./map
var max = require(754    ); // 754 = ./max
var reduce = require(768       ); // 768 = ./reduce

module.exports = _curry1(function cond(pairs) {
  var arity = reduce(max, 0, map(function (pair) {
    return pair[0].length;
  }, pairs));
  return _arity(arity, function () {
    var idx = 0;
    while (idx < pairs.length) {
      if (pairs[idx][0].apply(this, arguments)) {
        return pairs[idx][1].apply(this, arguments);
      }
      idx += 1;
    }
  });
});
}, 836, null, "ramda/src/cond.js");
__d(/* ramda/src/construct.js */function(global, require, module, exports) {var _curry1 = require(733                 ); // 733 = ./internal/_curry1
var constructN = require(838           ); // 838 = ./constructN

module.exports = _curry1(function construct(Fn) {
  return constructN(Fn.length, Fn);
});
}, 837, null, "ramda/src/construct.js");
__d(/* ramda/src/constructN.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2
var curry = require(793      ); // 793 = ./curry
var nAry = require(787     ); // 787 = ./nAry

module.exports = _curry2(function constructN(n, Fn) {
  if (n > 10) {
    throw new Error('Constructor with greater than ten arguments');
  }
  if (n === 0) {
    return function () {
      return new Fn();
    };
  }
  return curry(nAry(n, function ($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {
    switch (arguments.length) {
      case 1:
        return new Fn($0);
      case 2:
        return new Fn($0, $1);
      case 3:
        return new Fn($0, $1, $2);
      case 4:
        return new Fn($0, $1, $2, $3);
      case 5:
        return new Fn($0, $1, $2, $3, $4);
      case 6:
        return new Fn($0, $1, $2, $3, $4, $5);
      case 7:
        return new Fn($0, $1, $2, $3, $4, $5, $6);
      case 8:
        return new Fn($0, $1, $2, $3, $4, $5, $6, $7);
      case 9:
        return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8);
      case 10:
        return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8, $9);
    }
  }));
});
}, 838, null, "ramda/src/constructN.js");
__d(/* ramda/src/contains.js */function(global, require, module, exports) {var _contains = require(821                   ); // 821 = ./internal/_contains
var _curry2 = require(738                 ); // 738 = ./internal/_curry2

module.exports = _curry2(_contains);
}, 839, null, "ramda/src/contains.js");
__d(/* ramda/src/converge.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2
var _map = require(757              ); // 757 = ./internal/_map
var curryN = require(741       ); // 741 = ./curryN
var max = require(754    ); // 754 = ./max
var pluck = require(755      ); // 755 = ./pluck
var reduce = require(768       ); // 768 = ./reduce

module.exports = _curry2(function converge(after, fns) {
  return curryN(reduce(max, 0, pluck('length', fns)), function () {
    var args = arguments;
    var context = this;
    return after.apply(context, _map(function (fn) {
      return fn.apply(context, args);
    }, fns));
  });
});
}, 840, null, "ramda/src/converge.js");
__d(/* ramda/src/countBy.js */function(global, require, module, exports) {var reduceBy = require(842         ); // 842 = ./reduceBy

module.exports = reduceBy(function (acc, elem) {
  return acc + 1;
}, 0);
}, 841, null, "ramda/src/countBy.js");
__d(/* ramda/src/reduceBy.js */function(global, require, module, exports) {var _curryN = require(743                 ); // 743 = ./internal/_curryN
var _dispatchable = require(747                       ); // 747 = ./internal/_dispatchable
var _has = require(765              ); // 765 = ./internal/_has
var _reduce = require(758                 ); // 758 = ./internal/_reduce
var _xreduceBy = require(843                    ); // 843 = ./internal/_xreduceBy

module.exports = _curryN(4, [], _dispatchable([], _xreduceBy, function reduceBy(valueFn, valueAcc, keyFn, list) {
  return _reduce(function (acc, elt) {
    var key = keyFn(elt);
    acc[key] = valueFn(_has(key, acc) ? acc[key] : valueAcc, elt);
    return acc;
  }, {}, list);
}));
}, 842, null, "ramda/src/reduceBy.js");
__d(/* ramda/src/internal/_xreduceBy.js */function(global, require, module, exports) {var _curryN = require(743        ); // 743 = ./_curryN
var _has = require(765     ); // 765 = ./_has
var _xfBase = require(752        ); // 752 = ./_xfBase

module.exports = function () {
  function XReduceBy(valueFn, valueAcc, keyFn, xf) {
    this.valueFn = valueFn;
    this.valueAcc = valueAcc;
    this.keyFn = keyFn;
    this.xf = xf;
    this.inputs = {};
  }
  XReduceBy.prototype['@@transducer/init'] = _xfBase.init;
  XReduceBy.prototype['@@transducer/result'] = function (result) {
    var key;
    for (key in this.inputs) {
      if (_has(key, this.inputs)) {
        result = this.xf['@@transducer/step'](result, this.inputs[key]);
        if (result['@@transducer/reduced']) {
          result = result['@@transducer/value'];
          break;
        }
      }
    }
    this.inputs = null;
    return this.xf['@@transducer/result'](result);
  };
  XReduceBy.prototype['@@transducer/step'] = function (result, input) {
    var key = this.keyFn(input);
    this.inputs[key] = this.inputs[key] || [key, this.valueAcc];
    this.inputs[key][1] = this.valueFn(this.inputs[key][1], input);
    return result;
  };

  return _curryN(4, [], function _xreduceBy(valueFn, valueAcc, keyFn, xf) {
    return new XReduceBy(valueFn, valueAcc, keyFn, xf);
  });
}();
}, 843, null, "ramda/src/internal/_xreduceBy.js");
__d(/* ramda/src/dec.js */function(global, require, module, exports) {var add = require(737    ); // 737 = ./add

module.exports = add(-1);
}, 844, null, "ramda/src/dec.js");
__d(/* ramda/src/defaultTo.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2

module.exports = _curry2(function defaultTo(d, v) {
  return v == null || v !== v ? d : v;
});
}, 845, null, "ramda/src/defaultTo.js");
__d(/* ramda/src/descend.js */function(global, require, module, exports) {var _curry3 = require(745                 ); // 745 = ./internal/_curry3

module.exports = _curry3(function descend(fn, a, b) {
  var aa = fn(a);
  var bb = fn(b);
  return aa > bb ? -1 : aa < bb ? 1 : 0;
});
}, 846, null, "ramda/src/descend.js");
__d(/* ramda/src/difference.js */function(global, require, module, exports) {var _contains = require(821                   ); // 821 = ./internal/_contains
var _curry2 = require(738                 ); // 738 = ./internal/_curry2

module.exports = _curry2(function difference(first, second) {
  var out = [];
  var idx = 0;
  var firstLen = first.length;
  while (idx < firstLen) {
    if (!_contains(first[idx], second) && !_contains(first[idx], out)) {
      out[out.length] = first[idx];
    }
    idx += 1;
  }
  return out;
});
}, 847, null, "ramda/src/difference.js");
__d(/* ramda/src/differenceWith.js */function(global, require, module, exports) {var _containsWith = require(849                       ); // 849 = ./internal/_containsWith
var _curry3 = require(745                 ); // 745 = ./internal/_curry3

module.exports = _curry3(function differenceWith(pred, first, second) {
  var out = [];
  var idx = 0;
  var firstLen = first.length;
  while (idx < firstLen) {
    if (!_containsWith(pred, first[idx], second) && !_containsWith(pred, first[idx], out)) {
      out.push(first[idx]);
    }
    idx += 1;
  }
  return out;
});
}, 848, null, "ramda/src/differenceWith.js");
__d(/* ramda/src/internal/_containsWith.js */function(global, require, module, exports) {module.exports = function _containsWith(pred, x, list) {
  var idx = 0;
  var len = list.length;

  while (idx < len) {
    if (pred(x, list[idx])) {
      return true;
    }
    idx += 1;
  }
  return false;
};
}, 849, null, "ramda/src/internal/_containsWith.js");
__d(/* ramda/src/dissoc.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2

module.exports = _curry2(function dissoc(prop, obj) {
  var result = {};
  for (var p in obj) {
    result[p] = obj[p];
  }
  delete result[prop];
  return result;
});
}, 850, null, "ramda/src/dissoc.js");
__d(/* ramda/src/dissocPath.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2
var _isInteger = require(784                    ); // 784 = ./internal/_isInteger
var assoc = require(782      ); // 782 = ./assoc
var dissoc = require(850       ); // 850 = ./dissoc
var remove = require(852       ); // 852 = ./remove
var update = require(853       ); // 853 = ./update

module.exports = _curry2(function dissocPath(path, obj) {
  switch (path.length) {
    case 0:
      return obj;
    case 1:
      return _isInteger(path[0]) ? remove(path[0], 1, obj) : dissoc(path[0], obj);
    default:
      var head = path[0];
      var tail = Array.prototype.slice.call(path, 1);
      if (obj[head] == null) {
        return obj;
      } else if (_isInteger(path[0])) {
        return update(head, dissocPath(tail, obj[head]), obj);
      } else {
        return assoc(head, dissocPath(tail, obj[head]), obj);
      }
  }
});
}, 851, null, "ramda/src/dissocPath.js");
__d(/* ramda/src/remove.js */function(global, require, module, exports) {var _curry3 = require(745                 ); // 745 = ./internal/_curry3

module.exports = _curry3(function remove(start, count, list) {
  var result = Array.prototype.slice.call(list, 0);
  result.splice(start, count);
  return result;
});
}, 852, null, "ramda/src/remove.js");
__d(/* ramda/src/update.js */function(global, require, module, exports) {var _curry3 = require(745                 ); // 745 = ./internal/_curry3
var adjust = require(744       ); // 744 = ./adjust
var always = require(732       ); // 732 = ./always

module.exports = _curry3(function update(idx, x, list) {
  return adjust(always(x), idx, list);
});
}, 853, null, "ramda/src/update.js");
__d(/* ramda/src/divide.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2

module.exports = _curry2(function divide(a, b) {
  return a / b;
});
}, 854, null, "ramda/src/divide.js");
__d(/* ramda/src/drop.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2
var _dispatchable = require(747                       ); // 747 = ./internal/_dispatchable
var _xdrop = require(856                ); // 856 = ./internal/_xdrop
var slice = require(812      ); // 812 = ./slice

module.exports = _curry2(_dispatchable(['drop'], _xdrop, function drop(n, xs) {
  return slice(Math.max(0, n), Infinity, xs);
}));
}, 855, null, "ramda/src/drop.js");
__d(/* ramda/src/internal/_xdrop.js */function(global, require, module, exports) {var _curry2 = require(738        ); // 738 = ./_curry2
var _xfBase = require(752        ); // 752 = ./_xfBase

module.exports = function () {
  function XDrop(n, xf) {
    this.xf = xf;
    this.n = n;
  }
  XDrop.prototype['@@transducer/init'] = _xfBase.init;
  XDrop.prototype['@@transducer/result'] = _xfBase.result;
  XDrop.prototype['@@transducer/step'] = function (result, input) {
    if (this.n > 0) {
      this.n -= 1;
      return result;
    }
    return this.xf['@@transducer/step'](result, input);
  };

  return _curry2(function _xdrop(n, xf) {
    return new XDrop(n, xf);
  });
}();
}, 856, null, "ramda/src/internal/_xdrop.js");
__d(/* ramda/src/dropLast.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2
var _dispatchable = require(747                       ); // 747 = ./internal/_dispatchable
var _dropLast = require(858                   ); // 858 = ./internal/_dropLast
var _xdropLast = require(861                    ); // 861 = ./internal/_xdropLast

module.exports = _curry2(_dispatchable([], _xdropLast, _dropLast));
}, 857, null, "ramda/src/dropLast.js");
__d(/* ramda/src/internal/_dropLast.js */function(global, require, module, exports) {var take = require(859      ); // 859 = ../take

module.exports = function dropLast(n, xs) {
  return take(n < xs.length ? xs.length - n : 0, xs);
};
}, 858, null, "ramda/src/internal/_dropLast.js");
__d(/* ramda/src/take.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2
var _dispatchable = require(747                       ); // 747 = ./internal/_dispatchable
var _xtake = require(860                ); // 860 = ./internal/_xtake
var slice = require(812      ); // 812 = ./slice

module.exports = _curry2(_dispatchable(['take'], _xtake, function take(n, xs) {
  return slice(0, n < 0 ? Infinity : n, xs);
}));
}, 859, null, "ramda/src/take.js");
__d(/* ramda/src/internal/_xtake.js */function(global, require, module, exports) {var _curry2 = require(738        ); // 738 = ./_curry2
var _reduced = require(751         ); // 751 = ./_reduced
var _xfBase = require(752        ); // 752 = ./_xfBase

module.exports = function () {
  function XTake(n, xf) {
    this.xf = xf;
    this.n = n;
    this.i = 0;
  }
  XTake.prototype['@@transducer/init'] = _xfBase.init;
  XTake.prototype['@@transducer/result'] = _xfBase.result;
  XTake.prototype['@@transducer/step'] = function (result, input) {
    this.i += 1;
    var ret = this.n === 0 ? result : this.xf['@@transducer/step'](result, input);
    return this.n >= 0 && this.i >= this.n ? _reduced(ret) : ret;
  };

  return _curry2(function _xtake(n, xf) {
    return new XTake(n, xf);
  });
}();
}, 860, null, "ramda/src/internal/_xtake.js");
__d(/* ramda/src/internal/_xdropLast.js */function(global, require, module, exports) {var _curry2 = require(738        ); // 738 = ./_curry2
var _xfBase = require(752        ); // 752 = ./_xfBase

module.exports = function () {
  function XDropLast(n, xf) {
    this.xf = xf;
    this.pos = 0;
    this.full = false;
    this.acc = new Array(n);
  }
  XDropLast.prototype['@@transducer/init'] = _xfBase.init;
  XDropLast.prototype['@@transducer/result'] = function (result) {
    this.acc = null;
    return this.xf['@@transducer/result'](result);
  };
  XDropLast.prototype['@@transducer/step'] = function (result, input) {
    if (this.full) {
      result = this.xf['@@transducer/step'](result, this.acc[this.pos]);
    }
    this.store(input);
    return result;
  };
  XDropLast.prototype.store = function (input) {
    this.acc[this.pos] = input;
    this.pos += 1;
    if (this.pos === this.acc.length) {
      this.pos = 0;
      this.full = true;
    }
  };

  return _curry2(function _xdropLast(n, xf) {
    return new XDropLast(n, xf);
  });
}();
}, 861, null, "ramda/src/internal/_xdropLast.js");
__d(/* ramda/src/dropLastWhile.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2
var _dispatchable = require(747                       ); // 747 = ./internal/_dispatchable
var _dropLastWhile = require(863                        ); // 863 = ./internal/_dropLastWhile
var _xdropLastWhile = require(864                         ); // 864 = ./internal/_xdropLastWhile

module.exports = _curry2(_dispatchable([], _xdropLastWhile, _dropLastWhile));
}, 862, null, "ramda/src/dropLastWhile.js");
__d(/* ramda/src/internal/_dropLastWhile.js */function(global, require, module, exports) {module.exports = function dropLastWhile(pred, list) {
  var idx = list.length - 1;
  while (idx >= 0 && pred(list[idx])) {
    idx -= 1;
  }
  return Array.prototype.slice.call(list, 0, idx + 1);
};
}, 863, null, "ramda/src/internal/_dropLastWhile.js");
__d(/* ramda/src/internal/_xdropLastWhile.js */function(global, require, module, exports) {var _curry2 = require(738        ); // 738 = ./_curry2
var _reduce = require(758        ); // 758 = ./_reduce
var _xfBase = require(752        ); // 752 = ./_xfBase

module.exports = function () {
  function XDropLastWhile(fn, xf) {
    this.f = fn;
    this.retained = [];
    this.xf = xf;
  }
  XDropLastWhile.prototype['@@transducer/init'] = _xfBase.init;
  XDropLastWhile.prototype['@@transducer/result'] = function (result) {
    this.retained = null;
    return this.xf['@@transducer/result'](result);
  };
  XDropLastWhile.prototype['@@transducer/step'] = function (result, input) {
    return this.f(input) ? this.retain(result, input) : this.flush(result, input);
  };
  XDropLastWhile.prototype.flush = function (result, input) {
    result = _reduce(this.xf['@@transducer/step'], result, this.retained);
    this.retained = [];
    return this.xf['@@transducer/step'](result, input);
  };
  XDropLastWhile.prototype.retain = function (result, input) {
    this.retained.push(input);
    return result;
  };

  return _curry2(function _xdropLastWhile(fn, xf) {
    return new XDropLastWhile(fn, xf);
  });
}();
}, 864, null, "ramda/src/internal/_xdropLastWhile.js");
__d(/* ramda/src/dropRepeats.js */function(global, require, module, exports) {var _curry1 = require(733                 ); // 733 = ./internal/_curry1
var _dispatchable = require(747                       ); // 747 = ./internal/_dispatchable
var _xdropRepeatsWith = require(866                           ); // 866 = ./internal/_xdropRepeatsWith
var dropRepeatsWith = require(867                ); // 867 = ./dropRepeatsWith
var equals = require(823       ); // 823 = ./equals

module.exports = _curry1(_dispatchable([], _xdropRepeatsWith(equals), dropRepeatsWith(equals)));
}, 865, null, "ramda/src/dropRepeats.js");
__d(/* ramda/src/internal/_xdropRepeatsWith.js */function(global, require, module, exports) {var _curry2 = require(738        ); // 738 = ./_curry2
var _xfBase = require(752        ); // 752 = ./_xfBase

module.exports = function () {
  function XDropRepeatsWith(pred, xf) {
    this.xf = xf;
    this.pred = pred;
    this.lastValue = undefined;
    this.seenFirstValue = false;
  }

  XDropRepeatsWith.prototype['@@transducer/init'] = _xfBase.init;
  XDropRepeatsWith.prototype['@@transducer/result'] = _xfBase.result;
  XDropRepeatsWith.prototype['@@transducer/step'] = function (result, input) {
    var sameAsLast = false;
    if (!this.seenFirstValue) {
      this.seenFirstValue = true;
    } else if (this.pred(this.lastValue, input)) {
      sameAsLast = true;
    }
    this.lastValue = input;
    return sameAsLast ? result : this.xf['@@transducer/step'](result, input);
  };

  return _curry2(function _xdropRepeatsWith(pred, xf) {
    return new XDropRepeatsWith(pred, xf);
  });
}();
}, 866, null, "ramda/src/internal/_xdropRepeatsWith.js");
__d(/* ramda/src/dropRepeatsWith.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2
var _dispatchable = require(747                       ); // 747 = ./internal/_dispatchable
var _xdropRepeatsWith = require(866                           ); // 866 = ./internal/_xdropRepeatsWith
var last = require(868     ); // 868 = ./last

module.exports = _curry2(_dispatchable([], _xdropRepeatsWith, function dropRepeatsWith(pred, list) {
  var result = [];
  var idx = 1;
  var len = list.length;
  if (len !== 0) {
    result[0] = list[0];
    while (idx < len) {
      if (!pred(last(result), list[idx])) {
        result[result.length] = list[idx];
      }
      idx += 1;
    }
  }
  return result;
}));
}, 867, null, "ramda/src/dropRepeatsWith.js");
__d(/* ramda/src/last.js */function(global, require, module, exports) {var nth = require(869    ); // 869 = ./nth

module.exports = nth(-1);
}, 868, null, "ramda/src/last.js");
__d(/* ramda/src/nth.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2
var _isString = require(760                   ); // 760 = ./internal/_isString

module.exports = _curry2(function nth(offset, list) {
  var idx = offset < 0 ? list.length + offset : offset;
  return _isString(list) ? list.charAt(idx) : list[idx];
});
}, 869, null, "ramda/src/nth.js");
__d(/* ramda/src/dropWhile.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2
var _dispatchable = require(747                       ); // 747 = ./internal/_dispatchable
var _xdropWhile = require(871                     ); // 871 = ./internal/_xdropWhile

module.exports = _curry2(_dispatchable(['dropWhile'], _xdropWhile, function dropWhile(pred, list) {
  var idx = 0;
  var len = list.length;
  while (idx < len && pred(list[idx])) {
    idx += 1;
  }
  return Array.prototype.slice.call(list, idx);
}));
}, 870, null, "ramda/src/dropWhile.js");
__d(/* ramda/src/internal/_xdropWhile.js */function(global, require, module, exports) {var _curry2 = require(738        ); // 738 = ./_curry2
var _xfBase = require(752        ); // 752 = ./_xfBase

module.exports = function () {
  function XDropWhile(f, xf) {
    this.xf = xf;
    this.f = f;
  }
  XDropWhile.prototype['@@transducer/init'] = _xfBase.init;
  XDropWhile.prototype['@@transducer/result'] = _xfBase.result;
  XDropWhile.prototype['@@transducer/step'] = function (result, input) {
    if (this.f) {
      if (this.f(input)) {
        return result;
      }
      this.f = null;
    }
    return this.xf['@@transducer/step'](result, input);
  };

  return _curry2(function _xdropWhile(f, xf) {
    return new XDropWhile(f, xf);
  });
}();
}, 871, null, "ramda/src/internal/_xdropWhile.js");
__d(/* ramda/src/either.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2
var _isFunction = require(789                     ); // 789 = ./internal/_isFunction
var lift = require(790     ); // 790 = ./lift
var or = require(873   ); // 873 = ./or

module.exports = _curry2(function either(f, g) {
  return _isFunction(f) ? function _either() {
    return f.apply(this, arguments) || g.apply(this, arguments);
  } : lift(or)(f, g);
});
}, 872, null, "ramda/src/either.js");
__d(/* ramda/src/or.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2

module.exports = _curry2(function or(a, b) {
  return a || b;
});
}, 873, null, "ramda/src/or.js");
__d(/* ramda/src/empty.js */function(global, require, module, exports) {var _curry1 = require(733                 ); // 733 = ./internal/_curry1
var _isArguments = require(766                      ); // 766 = ./internal/_isArguments
var _isArray = require(748                  ); // 748 = ./internal/_isArray
var _isObject = require(834                   ); // 834 = ./internal/_isObject
var _isString = require(760                   ); // 760 = ./internal/_isString

module.exports = _curry1(function empty(x) {
  return x != null && typeof x['fantasy-land/empty'] === 'function' ? x['fantasy-land/empty']() : x != null && x.constructor != null && typeof x.constructor['fantasy-land/empty'] === 'function' ? x.constructor['fantasy-land/empty']() : x != null && typeof x.empty === 'function' ? x.empty() : x != null && x.constructor != null && typeof x.constructor.empty === 'function' ? x.constructor.empty() : _isArray(x) ? [] : _isString(x) ? '' : _isObject(x) ? {} : _isArguments(x) ? function () {
    return arguments;
  }() : void 0;
});
}, 874, null, "ramda/src/empty.js");
__d(/* ramda/src/endsWith.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2
var equals = require(823       ); // 823 = ./equals
var takeLast = require(876         ); // 876 = ./takeLast

module.exports = _curry2(function (suffix, list) {
  return equals(takeLast(suffix.length, list), suffix);
});
}, 875, null, "ramda/src/endsWith.js");
__d(/* ramda/src/takeLast.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2
var drop = require(855     ); // 855 = ./drop

module.exports = _curry2(function takeLast(n, xs) {
  return drop(n >= 0 ? xs.length - n : 0, xs);
});
}, 876, null, "ramda/src/takeLast.js");
__d(/* ramda/src/eqBy.js */function(global, require, module, exports) {var _curry3 = require(745                 ); // 745 = ./internal/_curry3
var equals = require(823       ); // 823 = ./equals

module.exports = _curry3(function eqBy(f, x, y) {
  return equals(f(x), f(y));
});
}, 877, null, "ramda/src/eqBy.js");
__d(/* ramda/src/eqProps.js */function(global, require, module, exports) {var _curry3 = require(745                 ); // 745 = ./internal/_curry3
var equals = require(823       ); // 823 = ./equals

module.exports = _curry3(function eqProps(prop, obj1, obj2) {
  return equals(obj1[prop], obj2[prop]);
});
}, 878, null, "ramda/src/eqProps.js");
__d(/* ramda/src/evolve.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2

module.exports = _curry2(function evolve(transformations, object) {
  var result = {};
  var transformation, key, type;
  for (key in object) {
    transformation = transformations[key];
    type = typeof transformation;
    result[key] = type === 'function' ? transformation(object[key]) : transformation && type === 'object' ? evolve(transformation, object[key]) : object[key];
  }
  return result;
});
}, 879, null, "ramda/src/evolve.js");
__d(/* ramda/src/find.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2
var _dispatchable = require(747                       ); // 747 = ./internal/_dispatchable
var _xfind = require(881                ); // 881 = ./internal/_xfind

module.exports = _curry2(_dispatchable(['find'], _xfind, function find(fn, list) {
  var idx = 0;
  var len = list.length;
  while (idx < len) {
    if (fn(list[idx])) {
      return list[idx];
    }
    idx += 1;
  }
}));
}, 880, null, "ramda/src/find.js");
__d(/* ramda/src/internal/_xfind.js */function(global, require, module, exports) {var _curry2 = require(738        ); // 738 = ./_curry2
var _reduced = require(751         ); // 751 = ./_reduced
var _xfBase = require(752        ); // 752 = ./_xfBase

module.exports = function () {
  function XFind(f, xf) {
    this.xf = xf;
    this.f = f;
    this.found = false;
  }
  XFind.prototype['@@transducer/init'] = _xfBase.init;
  XFind.prototype['@@transducer/result'] = function (result) {
    if (!this.found) {
      result = this.xf['@@transducer/step'](result, void 0);
    }
    return this.xf['@@transducer/result'](result);
  };
  XFind.prototype['@@transducer/step'] = function (result, input) {
    if (this.f(input)) {
      this.found = true;
      result = _reduced(this.xf['@@transducer/step'](result, input));
    }
    return result;
  };

  return _curry2(function _xfind(f, xf) {
    return new XFind(f, xf);
  });
}();
}, 881, null, "ramda/src/internal/_xfind.js");
__d(/* ramda/src/findIndex.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2
var _dispatchable = require(747                       ); // 747 = ./internal/_dispatchable
var _xfindIndex = require(883                     ); // 883 = ./internal/_xfindIndex

module.exports = _curry2(_dispatchable([], _xfindIndex, function findIndex(fn, list) {
  var idx = 0;
  var len = list.length;
  while (idx < len) {
    if (fn(list[idx])) {
      return idx;
    }
    idx += 1;
  }
  return -1;
}));
}, 882, null, "ramda/src/findIndex.js");
__d(/* ramda/src/internal/_xfindIndex.js */function(global, require, module, exports) {var _curry2 = require(738        ); // 738 = ./_curry2
var _reduced = require(751         ); // 751 = ./_reduced
var _xfBase = require(752        ); // 752 = ./_xfBase

module.exports = function () {
  function XFindIndex(f, xf) {
    this.xf = xf;
    this.f = f;
    this.idx = -1;
    this.found = false;
  }
  XFindIndex.prototype['@@transducer/init'] = _xfBase.init;
  XFindIndex.prototype['@@transducer/result'] = function (result) {
    if (!this.found) {
      result = this.xf['@@transducer/step'](result, -1);
    }
    return this.xf['@@transducer/result'](result);
  };
  XFindIndex.prototype['@@transducer/step'] = function (result, input) {
    this.idx += 1;
    if (this.f(input)) {
      this.found = true;
      result = _reduced(this.xf['@@transducer/step'](result, this.idx));
    }
    return result;
  };

  return _curry2(function _xfindIndex(f, xf) {
    return new XFindIndex(f, xf);
  });
}();
}, 883, null, "ramda/src/internal/_xfindIndex.js");
__d(/* ramda/src/findLast.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2
var _dispatchable = require(747                       ); // 747 = ./internal/_dispatchable
var _xfindLast = require(885                    ); // 885 = ./internal/_xfindLast

module.exports = _curry2(_dispatchable([], _xfindLast, function findLast(fn, list) {
  var idx = list.length - 1;
  while (idx >= 0) {
    if (fn(list[idx])) {
      return list[idx];
    }
    idx -= 1;
  }
}));
}, 884, null, "ramda/src/findLast.js");
__d(/* ramda/src/internal/_xfindLast.js */function(global, require, module, exports) {var _curry2 = require(738        ); // 738 = ./_curry2
var _xfBase = require(752        ); // 752 = ./_xfBase

module.exports = function () {
  function XFindLast(f, xf) {
    this.xf = xf;
    this.f = f;
  }
  XFindLast.prototype['@@transducer/init'] = _xfBase.init;
  XFindLast.prototype['@@transducer/result'] = function (result) {
    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.last));
  };
  XFindLast.prototype['@@transducer/step'] = function (result, input) {
    if (this.f(input)) {
      this.last = input;
    }
    return result;
  };

  return _curry2(function _xfindLast(f, xf) {
    return new XFindLast(f, xf);
  });
}();
}, 885, null, "ramda/src/internal/_xfindLast.js");
__d(/* ramda/src/findLastIndex.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2
var _dispatchable = require(747                       ); // 747 = ./internal/_dispatchable
var _xfindLastIndex = require(887                         ); // 887 = ./internal/_xfindLastIndex

module.exports = _curry2(_dispatchable([], _xfindLastIndex, function findLastIndex(fn, list) {
  var idx = list.length - 1;
  while (idx >= 0) {
    if (fn(list[idx])) {
      return idx;
    }
    idx -= 1;
  }
  return -1;
}));
}, 886, null, "ramda/src/findLastIndex.js");
__d(/* ramda/src/internal/_xfindLastIndex.js */function(global, require, module, exports) {var _curry2 = require(738        ); // 738 = ./_curry2
var _xfBase = require(752        ); // 752 = ./_xfBase

module.exports = function () {
  function XFindLastIndex(f, xf) {
    this.xf = xf;
    this.f = f;
    this.idx = -1;
    this.lastIdx = -1;
  }
  XFindLastIndex.prototype['@@transducer/init'] = _xfBase.init;
  XFindLastIndex.prototype['@@transducer/result'] = function (result) {
    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.lastIdx));
  };
  XFindLastIndex.prototype['@@transducer/step'] = function (result, input) {
    this.idx += 1;
    if (this.f(input)) {
      this.lastIdx = this.idx;
    }
    return result;
  };

  return _curry2(function _xfindLastIndex(f, xf) {
    return new XFindLastIndex(f, xf);
  });
}();
}, 887, null, "ramda/src/internal/_xfindLastIndex.js");
__d(/* ramda/src/flatten.js */function(global, require, module, exports) {var _curry1 = require(733                 ); // 733 = ./internal/_curry1
var _makeFlat = require(795                   ); // 795 = ./internal/_makeFlat

module.exports = _curry1(_makeFlat(true));
}, 888, null, "ramda/src/flatten.js");
__d(/* ramda/src/flip.js */function(global, require, module, exports) {var _curry1 = require(733                 ); // 733 = ./internal/_curry1
var curry = require(793      ); // 793 = ./curry

module.exports = _curry1(function flip(fn) {
  return curry(function (a, b) {
    var args = Array.prototype.slice.call(arguments, 0);
    args[0] = b;
    args[1] = a;
    return fn.apply(this, args);
  });
});
}, 889, null, "ramda/src/flip.js");
__d(/* ramda/src/forEach.js */function(global, require, module, exports) {var _checkForMethod = require(811                         ); // 811 = ./internal/_checkForMethod
var _curry2 = require(738                 ); // 738 = ./internal/_curry2

module.exports = _curry2(_checkForMethod('forEach', function forEach(fn, list) {
  var len = list.length;
  var idx = 0;
  while (idx < len) {
    fn(list[idx]);
    idx += 1;
  }
  return list;
}));
}, 890, null, "ramda/src/forEach.js");
__d(/* ramda/src/forEachObjIndexed.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2
var keys = require(764     ); // 764 = ./keys

module.exports = _curry2(function forEachObjIndexed(fn, obj) {
  var keyList = keys(obj);
  var idx = 0;
  while (idx < keyList.length) {
    var key = keyList[idx];
    fn(obj[key], key, obj);
    idx += 1;
  }
  return obj;
});
}, 891, null, "ramda/src/forEachObjIndexed.js");
__d(/* ramda/src/fromPairs.js */function(global, require, module, exports) {var _curry1 = require(733                 ); // 733 = ./internal/_curry1

module.exports = _curry1(function fromPairs(pairs) {
  var result = {};
  var idx = 0;
  while (idx < pairs.length) {
    result[pairs[idx][0]] = pairs[idx][1];
    idx += 1;
  }
  return result;
});
}, 892, null, "ramda/src/fromPairs.js");
__d(/* ramda/src/groupBy.js */function(global, require, module, exports) {var _checkForMethod = require(811                         ); // 811 = ./internal/_checkForMethod
var _curry2 = require(738                 ); // 738 = ./internal/_curry2
var reduceBy = require(842         ); // 842 = ./reduceBy

module.exports = _curry2(_checkForMethod('groupBy', reduceBy(function (acc, item) {
  if (acc == null) {
    acc = [];
  }
  acc.push(item);
  return acc;
}, null)));
}, 893, null, "ramda/src/groupBy.js");
__d(/* ramda/src/groupWith.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2

module.exports = _curry2(function (fn, list) {
  var res = [];
  var idx = 0;
  var len = list.length;
  while (idx < len) {
    var nextidx = idx + 1;
    while (nextidx < len && fn(list[nextidx - 1], list[nextidx])) {
      nextidx += 1;
    }
    res.push(list.slice(idx, nextidx));
    idx = nextidx;
  }
  return res;
});
}, 894, null, "ramda/src/groupWith.js");
__d(/* ramda/src/gt.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2

module.exports = _curry2(function gt(a, b) {
  return a > b;
});
}, 895, null, "ramda/src/gt.js");
__d(/* ramda/src/gte.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2

module.exports = _curry2(function gte(a, b) {
  return a >= b;
});
}, 896, null, "ramda/src/gte.js");
__d(/* ramda/src/has.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2
var _has = require(765              ); // 765 = ./internal/_has

module.exports = _curry2(_has);
}, 897, null, "ramda/src/has.js");
__d(/* ramda/src/hasIn.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2

module.exports = _curry2(function hasIn(prop, obj) {
  return prop in obj;
});
}, 898, null, "ramda/src/hasIn.js");
__d(/* ramda/src/head.js */function(global, require, module, exports) {var nth = require(869    ); // 869 = ./nth

module.exports = nth(0);
}, 899, null, "ramda/src/head.js");
__d(/* ramda/src/identity.js */function(global, require, module, exports) {var _curry1 = require(733                 ); // 733 = ./internal/_curry1
var _identity = require(901                   ); // 901 = ./internal/_identity

module.exports = _curry1(_identity);
}, 900, null, "ramda/src/identity.js");
__d(/* ramda/src/internal/_identity.js */function(global, require, module, exports) {module.exports = function _identity(x) {
  return x;
};
}, 901, null, "ramda/src/internal/_identity.js");
__d(/* ramda/src/ifElse.js */function(global, require, module, exports) {var _curry3 = require(745                 ); // 745 = ./internal/_curry3
var curryN = require(741       ); // 741 = ./curryN

module.exports = _curry3(function ifElse(condition, onTrue, onFalse) {
  return curryN(Math.max(condition.length, onTrue.length, onFalse.length), function _ifElse() {
    return condition.apply(this, arguments) ? onTrue.apply(this, arguments) : onFalse.apply(this, arguments);
  });
});
}, 902, null, "ramda/src/ifElse.js");
__d(/* ramda/src/inc.js */function(global, require, module, exports) {var add = require(737    ); // 737 = ./add

module.exports = add(1);
}, 903, null, "ramda/src/inc.js");
__d(/* ramda/src/indexBy.js */function(global, require, module, exports) {var reduceBy = require(842         ); // 842 = ./reduceBy

module.exports = reduceBy(function (acc, elem) {
  return elem;
}, null);
}, 904, null, "ramda/src/indexBy.js");
__d(/* ramda/src/indexOf.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2
var _indexOf = require(822                  ); // 822 = ./internal/_indexOf
var _isArray = require(748                  ); // 748 = ./internal/_isArray

module.exports = _curry2(function indexOf(target, xs) {
  return typeof xs.indexOf === 'function' && !_isArray(xs) ? xs.indexOf(target) : _indexOf(xs, target, 0);
});
}, 905, null, "ramda/src/indexOf.js");
__d(/* ramda/src/init.js */function(global, require, module, exports) {var slice = require(812      ); // 812 = ./slice

module.exports = slice(0, -1);
}, 906, null, "ramda/src/init.js");
__d(/* ramda/src/innerJoin.js */function(global, require, module, exports) {var _containsWith = require(849                       ); // 849 = ./internal/_containsWith
var _curry3 = require(745                 ); // 745 = ./internal/_curry3
var _filter = require(833                 ); // 833 = ./internal/_filter

module.exports = _curry3(function innerJoin(pred, xs, ys) {
  return _filter(function (x) {
    return _containsWith(pred, x, ys);
  }, xs);
});
}, 907, null, "ramda/src/innerJoin.js");
__d(/* ramda/src/insert.js */function(global, require, module, exports) {var _curry3 = require(745                 ); // 745 = ./internal/_curry3

module.exports = _curry3(function insert(idx, elt, list) {
  idx = idx < list.length && idx >= 0 ? idx : list.length;
  var result = Array.prototype.slice.call(list, 0);
  result.splice(idx, 0, elt);
  return result;
});
}, 908, null, "ramda/src/insert.js");
__d(/* ramda/src/insertAll.js */function(global, require, module, exports) {var _curry3 = require(745                 ); // 745 = ./internal/_curry3

module.exports = _curry3(function insertAll(idx, elts, list) {
  idx = idx < list.length && idx >= 0 ? idx : list.length;
  return [].concat(Array.prototype.slice.call(list, 0, idx), elts, Array.prototype.slice.call(list, idx));
});
}, 909, null, "ramda/src/insertAll.js");
__d(/* ramda/src/intersection.js */function(global, require, module, exports) {var _contains = require(821                   ); // 821 = ./internal/_contains
var _curry2 = require(738                 ); // 738 = ./internal/_curry2
var _filter = require(833                 ); // 833 = ./internal/_filter
var flip = require(889     ); // 889 = ./flip
var uniq = require(911     ); // 911 = ./uniq

module.exports = _curry2(function intersection(list1, list2) {
  var lookupList, filteredList;
  if (list1.length > list2.length) {
    lookupList = list1;
    filteredList = list2;
  } else {
    lookupList = list2;
    filteredList = list1;
  }
  return uniq(_filter(flip(_contains)(lookupList), filteredList));
});
}, 910, null, "ramda/src/intersection.js");
__d(/* ramda/src/uniq.js */function(global, require, module, exports) {var identity = require(900         ); // 900 = ./identity
var uniqBy = require(912       ); // 912 = ./uniqBy

module.exports = uniqBy(identity);
}, 911, null, "ramda/src/uniq.js");
__d(/* ramda/src/uniqBy.js */function(global, require, module, exports) {var _Set = require(913              ); // 913 = ./internal/_Set
var _curry2 = require(738                 ); // 738 = ./internal/_curry2

module.exports = _curry2(function uniqBy(fn, list) {
  var set = new _Set();
  var result = [];
  var idx = 0;
  var appliedItem, item;

  while (idx < list.length) {
    item = list[idx];
    appliedItem = fn(item);
    if (set.add(appliedItem)) {
      result.push(item);
    }
    idx += 1;
  }
  return result;
});
}, 912, null, "ramda/src/uniqBy.js");
__d(/* ramda/src/internal/_Set.js */function(global, require, module, exports) {var _contains = require(821          ); // 821 = ./_contains

module.exports = function () {
  function _Set() {
    this._nativeSet = typeof Set === 'function' ? new Set() : null;
    this._items = {};
  }

  _Set.prototype.add = function (item) {
    return !hasOrAdd(item, true, this);
  };

  _Set.prototype.has = function (item) {
    return hasOrAdd(item, false, this);
  };

  function hasOrAdd(item, shouldAdd, set) {
    var type = typeof item;
    var prevSize, newSize;
    switch (type) {
      case 'string':
      case 'number':
        if (item === 0 && 1 / item === -Infinity) {
          if (set._items['-0']) {
            return true;
          } else {
            if (shouldAdd) {
              set._items['-0'] = true;
            }
            return false;
          }
        }

        if (set._nativeSet !== null) {
          if (shouldAdd) {
            prevSize = set._nativeSet.size;
            set._nativeSet.add(item);
            newSize = set._nativeSet.size;
            return newSize === prevSize;
          } else {
            return set._nativeSet.has(item);
          }
        } else {
          if (!(type in set._items)) {
            if (shouldAdd) {
              set._items[type] = {};
              set._items[type][item] = true;
            }
            return false;
          } else if (item in set._items[type]) {
            return true;
          } else {
            if (shouldAdd) {
              set._items[type][item] = true;
            }
            return false;
          }
        }

      case 'boolean':
        if (type in set._items) {
          var bIdx = item ? 1 : 0;
          if (set._items[type][bIdx]) {
            return true;
          } else {
            if (shouldAdd) {
              set._items[type][bIdx] = true;
            }
            return false;
          }
        } else {
          if (shouldAdd) {
            set._items[type] = item ? [false, true] : [true, false];
          }
          return false;
        }

      case 'function':
        if (set._nativeSet !== null) {
          if (shouldAdd) {
            prevSize = set._nativeSet.size;
            set._nativeSet.add(item);
            newSize = set._nativeSet.size;
            return newSize === prevSize;
          } else {
            return set._nativeSet.has(item);
          }
        } else {
          if (!(type in set._items)) {
            if (shouldAdd) {
              set._items[type] = [item];
            }
            return false;
          }
          if (!_contains(item, set._items[type])) {
            if (shouldAdd) {
              set._items[type].push(item);
            }
            return false;
          }
          return true;
        }

      case 'undefined':
        if (set._items[type]) {
          return true;
        } else {
          if (shouldAdd) {
            set._items[type] = true;
          }
          return false;
        }

      case 'object':
        if (item === null) {
          if (!set._items['null']) {
            if (shouldAdd) {
              set._items['null'] = true;
            }
            return false;
          }
          return true;
        }

      default:
        type = Object.prototype.toString.call(item);
        if (!(type in set._items)) {
          if (shouldAdd) {
            set._items[type] = [item];
          }
          return false;
        }

        if (!_contains(item, set._items[type])) {
          if (shouldAdd) {
            set._items[type].push(item);
          }
          return false;
        }
        return true;
    }
  }
  return _Set;
}();
}, 913, null, "ramda/src/internal/_Set.js");
__d(/* ramda/src/intersectionWith.js */function(global, require, module, exports) {var _containsWith = require(849                       ); // 849 = ./internal/_containsWith
var _curry3 = require(745                 ); // 745 = ./internal/_curry3
var uniqWith = require(915         ); // 915 = ./uniqWith

module.exports = _curry3(function intersectionWith(pred, list1, list2) {
  var lookupList, filteredList;
  if (list1.length > list2.length) {
    lookupList = list1;
    filteredList = list2;
  } else {
    lookupList = list2;
    filteredList = list1;
  }
  var results = [];
  var idx = 0;
  while (idx < filteredList.length) {
    if (_containsWith(pred, filteredList[idx], lookupList)) {
      results[results.length] = filteredList[idx];
    }
    idx += 1;
  }
  return uniqWith(pred, results);
});
}, 914, null, "ramda/src/intersectionWith.js");
__d(/* ramda/src/uniqWith.js */function(global, require, module, exports) {var _containsWith = require(849                       ); // 849 = ./internal/_containsWith
var _curry2 = require(738                 ); // 738 = ./internal/_curry2

module.exports = _curry2(function uniqWith(pred, list) {
  var idx = 0;
  var len = list.length;
  var result = [];
  var item;
  while (idx < len) {
    item = list[idx];
    if (!_containsWith(pred, item, result)) {
      result[result.length] = item;
    }
    idx += 1;
  }
  return result;
});
}, 915, null, "ramda/src/uniqWith.js");
__d(/* ramda/src/intersperse.js */function(global, require, module, exports) {var _checkForMethod = require(811                         ); // 811 = ./internal/_checkForMethod
var _curry2 = require(738                 ); // 738 = ./internal/_curry2

module.exports = _curry2(_checkForMethod('intersperse', function intersperse(separator, list) {
  var out = [];
  var idx = 0;
  var length = list.length;
  while (idx < length) {
    if (idx === length - 1) {
      out.push(list[idx]);
    } else {
      out.push(list[idx], separator);
    }
    idx += 1;
  }
  return out;
}));
}, 916, null, "ramda/src/intersperse.js");
__d(/* ramda/src/into.js */function(global, require, module, exports) {var _clone = require(801                ); // 801 = ./internal/_clone
var _curry3 = require(745                 ); // 745 = ./internal/_curry3
var _isTransformer = require(749                        ); // 749 = ./internal/_isTransformer
var _reduce = require(758                 ); // 758 = ./internal/_reduce
var _stepCat = require(918                  ); // 918 = ./internal/_stepCat

module.exports = _curry3(function into(acc, xf, list) {
  return _isTransformer(acc) ? _reduce(xf(acc), acc['@@transducer/init'](), list) : _reduce(xf(_stepCat(acc)), _clone(acc, [], [], false), list);
});
}, 917, null, "ramda/src/into.js");
__d(/* ramda/src/internal/_stepCat.js */function(global, require, module, exports) {var _assign = require(919        ); // 919 = ./_assign
var _identity = require(901          ); // 901 = ./_identity
var _isArrayLike = require(759             ); // 759 = ./_isArrayLike
var _isTransformer = require(749               ); // 749 = ./_isTransformer
var objOf = require(921       ); // 921 = ../objOf

module.exports = function () {
  var _stepCatArray = {
    '@@transducer/init': Array,
    '@@transducer/step': function transducerStep(xs, x) {
      xs.push(x);
      return xs;
    },
    '@@transducer/result': _identity
  };
  var _stepCatString = {
    '@@transducer/init': String,
    '@@transducer/step': function transducerStep(a, b) {
      return a + b;
    },
    '@@transducer/result': _identity
  };
  var _stepCatObject = {
    '@@transducer/init': Object,
    '@@transducer/step': function transducerStep(result, input) {
      return _assign(result, _isArrayLike(input) ? objOf(input[0], input[1]) : input);
    },
    '@@transducer/result': _identity
  };

  return function _stepCat(obj) {
    if (_isTransformer(obj)) {
      return obj;
    }
    if (_isArrayLike(obj)) {
      return _stepCatArray;
    }
    if (typeof obj === 'string') {
      return _stepCatString;
    }
    if (typeof obj === 'object') {
      return _stepCatObject;
    }
    throw new Error('Cannot create transformer for ' + obj);
  };
}();
}, 918, null, "ramda/src/internal/_stepCat.js");
__d(/* ramda/src/internal/_assign.js */function(global, require, module, exports) {var _objectAssign = require(920              ); // 920 = ./_objectAssign

module.exports = typeof Object.assign === 'function' ? Object.assign : _objectAssign;
}, 919, null, "ramda/src/internal/_assign.js");
__d(/* ramda/src/internal/_objectAssign.js */function(global, require, module, exports) {var _has = require(765     ); // 765 = ./_has

module.exports = function _objectAssign(target) {
  if (target == null) {
    throw new TypeError('Cannot convert undefined or null to object');
  }

  var output = Object(target);
  var idx = 1;
  var length = arguments.length;
  while (idx < length) {
    var source = arguments[idx];
    if (source != null) {
      for (var nextKey in source) {
        if (_has(nextKey, source)) {
          output[nextKey] = source[nextKey];
        }
      }
    }
    idx += 1;
  }
  return output;
};
}, 920, null, "ramda/src/internal/_objectAssign.js");
__d(/* ramda/src/objOf.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2

module.exports = _curry2(function objOf(key, val) {
  var obj = {};
  obj[key] = val;
  return obj;
});
}, 921, null, "ramda/src/objOf.js");
__d(/* ramda/src/invert.js */function(global, require, module, exports) {var _curry1 = require(733                 ); // 733 = ./internal/_curry1
var _has = require(765              ); // 765 = ./internal/_has
var keys = require(764     ); // 764 = ./keys

module.exports = _curry1(function invert(obj) {
  var props = keys(obj);
  var len = props.length;
  var idx = 0;
  var out = {};

  while (idx < len) {
    var key = props[idx];
    var val = obj[key];
    var list = _has(val, out) ? out[val] : out[val] = [];
    list[list.length] = key;
    idx += 1;
  }
  return out;
});
}, 922, null, "ramda/src/invert.js");
__d(/* ramda/src/invertObj.js */function(global, require, module, exports) {var _curry1 = require(733                 ); // 733 = ./internal/_curry1
var keys = require(764     ); // 764 = ./keys

module.exports = _curry1(function invertObj(obj) {
  var props = keys(obj);
  var len = props.length;
  var idx = 0;
  var out = {};

  while (idx < len) {
    var key = props[idx];
    out[obj[key]] = key;
    idx += 1;
  }
  return out;
});
}, 923, null, "ramda/src/invertObj.js");
__d(/* ramda/src/invoker.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2
var _isFunction = require(789                     ); // 789 = ./internal/_isFunction
var curryN = require(741       ); // 741 = ./curryN
var toString = require(819         ); // 819 = ./toString

module.exports = _curry2(function invoker(arity, method) {
  return curryN(arity + 1, function () {
    var target = arguments[arity];
    if (target != null && _isFunction(target[method])) {
      return target[method].apply(target, Array.prototype.slice.call(arguments, 0, arity));
    }
    throw new TypeError(toString(target) + ' does not have a method named "' + method + '"');
  });
});
}, 924, null, "ramda/src/invoker.js");
__d(/* ramda/src/is.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2

module.exports = _curry2(function is(Ctor, val) {
  return val != null && val.constructor === Ctor || val instanceof Ctor;
});
}, 925, null, "ramda/src/is.js");
__d(/* ramda/src/isEmpty.js */function(global, require, module, exports) {var _curry1 = require(733                 ); // 733 = ./internal/_curry1
var empty = require(874      ); // 874 = ./empty
var equals = require(823       ); // 823 = ./equals

module.exports = _curry1(function isEmpty(x) {
  return x != null && equals(x, empty(x));
});
}, 926, null, "ramda/src/isEmpty.js");
__d(/* ramda/src/join.js */function(global, require, module, exports) {var invoker = require(924        ); // 924 = ./invoker

module.exports = invoker(1, 'join');
}, 927, null, "ramda/src/join.js");
__d(/* ramda/src/juxt.js */function(global, require, module, exports) {var _curry1 = require(733                 ); // 733 = ./internal/_curry1
var converge = require(840         ); // 840 = ./converge

module.exports = _curry1(function juxt(fns) {
  return converge(function () {
    return Array.prototype.slice.call(arguments, 0);
  }, fns);
});
}, 928, null, "ramda/src/juxt.js");
__d(/* ramda/src/keysIn.js */function(global, require, module, exports) {var _curry1 = require(733                 ); // 733 = ./internal/_curry1

module.exports = _curry1(function keysIn(obj) {
  var prop;
  var ks = [];
  for (prop in obj) {
    ks[ks.length] = prop;
  }
  return ks;
});
}, 929, null, "ramda/src/keysIn.js");
__d(/* ramda/src/lastIndexOf.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2
var _isArray = require(748                  ); // 748 = ./internal/_isArray
var equals = require(823       ); // 823 = ./equals

module.exports = _curry2(function lastIndexOf(target, xs) {
  if (typeof xs.lastIndexOf === 'function' && !_isArray(xs)) {
    return xs.lastIndexOf(target);
  } else {
    var idx = xs.length - 1;
    while (idx >= 0) {
      if (equals(xs[idx], target)) {
        return idx;
      }
      idx -= 1;
    }
    return -1;
  }
});
}, 930, null, "ramda/src/lastIndexOf.js");
__d(/* ramda/src/length.js */function(global, require, module, exports) {var _curry1 = require(733                 ); // 733 = ./internal/_curry1
var _isNumber = require(932                   ); // 932 = ./internal/_isNumber

module.exports = _curry1(function length(list) {
  return list != null && _isNumber(list.length) ? list.length : NaN;
});
}, 931, null, "ramda/src/length.js");
__d(/* ramda/src/internal/_isNumber.js */function(global, require, module, exports) {module.exports = function _isNumber(x) {
  return Object.prototype.toString.call(x) === '[object Number]';
};
}, 932, null, "ramda/src/internal/_isNumber.js");
__d(/* ramda/src/lens.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2
var map = require(756    ); // 756 = ./map

module.exports = _curry2(function lens(getter, setter) {
  return function (toFunctorFn) {
    return function (target) {
      return map(function (focus) {
        return setter(focus, target);
      }, toFunctorFn(getter(target)));
    };
  };
});
}, 933, null, "ramda/src/lens.js");
__d(/* ramda/src/lensIndex.js */function(global, require, module, exports) {var _curry1 = require(733                 ); // 733 = ./internal/_curry1
var lens = require(933     ); // 933 = ./lens
var nth = require(869    ); // 869 = ./nth
var update = require(853       ); // 853 = ./update

module.exports = _curry1(function lensIndex(n) {
  return lens(nth(n), update(n));
});
}, 934, null, "ramda/src/lensIndex.js");
__d(/* ramda/src/lensPath.js */function(global, require, module, exports) {var _curry1 = require(733                 ); // 733 = ./internal/_curry1
var assocPath = require(783          ); // 783 = ./assocPath
var lens = require(933     ); // 933 = ./lens
var path = require(936     ); // 936 = ./path

module.exports = _curry1(function lensPath(p) {
  return lens(path(p), assocPath(p));
});
}, 935, null, "ramda/src/lensPath.js");
__d(/* ramda/src/path.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2

module.exports = _curry2(function path(paths, obj) {
  var val = obj;
  var idx = 0;
  while (idx < paths.length) {
    if (val == null) {
      return;
    }
    val = val[paths[idx]];
    idx += 1;
  }
  return val;
});
}, 936, null, "ramda/src/path.js");
__d(/* ramda/src/lensProp.js */function(global, require, module, exports) {var _curry1 = require(733                 ); // 733 = ./internal/_curry1
var assoc = require(782      ); // 782 = ./assoc
var lens = require(933     ); // 933 = ./lens
var prop = require(767     ); // 767 = ./prop

module.exports = _curry1(function lensProp(k) {
  return lens(prop(k), assoc(k));
});
}, 937, null, "ramda/src/lensProp.js");
__d(/* ramda/src/lt.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2

module.exports = _curry2(function lt(a, b) {
  return a < b;
});
}, 938, null, "ramda/src/lt.js");
__d(/* ramda/src/lte.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2

module.exports = _curry2(function lte(a, b) {
  return a <= b;
});
}, 939, null, "ramda/src/lte.js");
__d(/* ramda/src/mapAccum.js */function(global, require, module, exports) {var _curry3 = require(745                 ); // 745 = ./internal/_curry3

module.exports = _curry3(function mapAccum(fn, acc, list) {
  var idx = 0;
  var len = list.length;
  var result = [];
  var tuple = [acc];
  while (idx < len) {
    tuple = fn(tuple[0], list[idx]);
    result[idx] = tuple[1];
    idx += 1;
  }
  return [tuple[0], result];
});
}, 940, null, "ramda/src/mapAccum.js");
__d(/* ramda/src/mapAccumRight.js */function(global, require, module, exports) {var _curry3 = require(745                 ); // 745 = ./internal/_curry3

module.exports = _curry3(function mapAccumRight(fn, acc, list) {
  var idx = list.length - 1;
  var result = [];
  var tuple = [acc];
  while (idx >= 0) {
    tuple = fn(list[idx], tuple[0]);
    result[idx] = tuple[1];
    idx -= 1;
  }
  return [result, tuple[0]];
});
}, 941, null, "ramda/src/mapAccumRight.js");
__d(/* ramda/src/mapObjIndexed.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2
var _reduce = require(758                 ); // 758 = ./internal/_reduce
var keys = require(764     ); // 764 = ./keys

module.exports = _curry2(function mapObjIndexed(fn, obj) {
  return _reduce(function (acc, key) {
    acc[key] = fn(obj[key], key, obj);
    return acc;
  }, {}, keys(obj));
});
}, 942, null, "ramda/src/mapObjIndexed.js");
__d(/* ramda/src/match.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2

module.exports = _curry2(function match(rx, str) {
  return str.match(rx) || [];
});
}, 943, null, "ramda/src/match.js");
__d(/* ramda/src/mathMod.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2
var _isInteger = require(784                    ); // 784 = ./internal/_isInteger

module.exports = _curry2(function mathMod(m, p) {
  if (!_isInteger(m)) {
    return NaN;
  }
  if (!_isInteger(p) || p < 1) {
    return NaN;
  }
  return (m % p + p) % p;
});
}, 944, null, "ramda/src/mathMod.js");
__d(/* ramda/src/maxBy.js */function(global, require, module, exports) {var _curry3 = require(745                 ); // 745 = ./internal/_curry3

module.exports = _curry3(function maxBy(f, a, b) {
  return f(b) > f(a) ? b : a;
});
}, 945, null, "ramda/src/maxBy.js");
__d(/* ramda/src/mean.js */function(global, require, module, exports) {var _curry1 = require(733                 ); // 733 = ./internal/_curry1
var sum = require(947    ); // 947 = ./sum

module.exports = _curry1(function mean(list) {
  return sum(list) / list.length;
});
}, 946, null, "ramda/src/mean.js");
__d(/* ramda/src/sum.js */function(global, require, module, exports) {var add = require(737    ); // 737 = ./add
var reduce = require(768       ); // 768 = ./reduce

module.exports = reduce(add, 0);
}, 947, null, "ramda/src/sum.js");
__d(/* ramda/src/median.js */function(global, require, module, exports) {var _curry1 = require(733                 ); // 733 = ./internal/_curry1
var mean = require(946     ); // 946 = ./mean

module.exports = _curry1(function median(list) {
  var len = list.length;
  if (len === 0) {
    return NaN;
  }
  var width = 2 - len % 2;
  var idx = (len - width) / 2;
  return mean(Array.prototype.slice.call(list, 0).sort(function (a, b) {
    return a < b ? -1 : a > b ? 1 : 0;
  }).slice(idx, idx + width));
});
}, 948, null, "ramda/src/median.js");
__d(/* ramda/src/memoize.js */function(global, require, module, exports) {var memoizeWith = require(950            ); // 950 = ./memoizeWith
var toString = require(819         ); // 819 = ./toString

module.exports = memoizeWith(function () {
  return toString(arguments);
});
}, 949, null, "ramda/src/memoize.js");
__d(/* ramda/src/memoizeWith.js */function(global, require, module, exports) {var _arity = require(742                ); // 742 = ./internal/_arity
var _curry2 = require(738                 ); // 738 = ./internal/_curry2
var _has = require(765              ); // 765 = ./internal/_has

module.exports = _curry2(function memoizeWith(mFn, fn) {
  var cache = {};
  return _arity(fn.length, function () {
    var key = mFn.apply(this, arguments);
    if (!_has(key, cache)) {
      cache[key] = fn.apply(this, arguments);
    }
    return cache[key];
  });
});
}, 950, null, "ramda/src/memoizeWith.js");
__d(/* ramda/src/merge.js */function(global, require, module, exports) {var _assign = require(919                 ); // 919 = ./internal/_assign
var _curry2 = require(738                 ); // 738 = ./internal/_curry2

module.exports = _curry2(function merge(l, r) {
  return _assign({}, l, r);
});
}, 951, null, "ramda/src/merge.js");
__d(/* ramda/src/mergeAll.js */function(global, require, module, exports) {var _assign = require(919                 ); // 919 = ./internal/_assign
var _curry1 = require(733                 ); // 733 = ./internal/_curry1

module.exports = _curry1(function mergeAll(list) {
  return _assign.apply(null, [{}].concat(list));
});
}, 952, null, "ramda/src/mergeAll.js");
__d(/* ramda/src/mergeDeepLeft.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2
var mergeDeepWithKey = require(954                 ); // 954 = ./mergeDeepWithKey

module.exports = _curry2(function mergeDeepLeft(lObj, rObj) {
  return mergeDeepWithKey(function (k, lVal, rVal) {
    return lVal;
  }, lObj, rObj);
});
}, 953, null, "ramda/src/mergeDeepLeft.js");
__d(/* ramda/src/mergeDeepWithKey.js */function(global, require, module, exports) {var _curry3 = require(745                 ); // 745 = ./internal/_curry3
var _isObject = require(834                   ); // 834 = ./internal/_isObject
var mergeWithKey = require(955             ); // 955 = ./mergeWithKey

module.exports = _curry3(function mergeDeepWithKey(fn, lObj, rObj) {
  return mergeWithKey(function (k, lVal, rVal) {
    if (_isObject(lVal) && _isObject(rVal)) {
      return mergeDeepWithKey(fn, lVal, rVal);
    } else {
      return fn(k, lVal, rVal);
    }
  }, lObj, rObj);
});
}, 954, null, "ramda/src/mergeDeepWithKey.js");
__d(/* ramda/src/mergeWithKey.js */function(global, require, module, exports) {var _curry3 = require(745                 ); // 745 = ./internal/_curry3
var _has = require(765              ); // 765 = ./internal/_has

module.exports = _curry3(function mergeWithKey(fn, l, r) {
  var result = {};
  var k;

  for (k in l) {
    if (_has(k, l)) {
      result[k] = _has(k, r) ? fn(k, l[k], r[k]) : l[k];
    }
  }

  for (k in r) {
    if (_has(k, r) && !_has(k, result)) {
      result[k] = r[k];
    }
  }

  return result;
});
}, 955, null, "ramda/src/mergeWithKey.js");
__d(/* ramda/src/mergeDeepRight.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2
var mergeDeepWithKey = require(954                 ); // 954 = ./mergeDeepWithKey

module.exports = _curry2(function mergeDeepRight(lObj, rObj) {
  return mergeDeepWithKey(function (k, lVal, rVal) {
    return rVal;
  }, lObj, rObj);
});
}, 956, null, "ramda/src/mergeDeepRight.js");
__d(/* ramda/src/mergeDeepWith.js */function(global, require, module, exports) {var _curry3 = require(745                 ); // 745 = ./internal/_curry3
var mergeDeepWithKey = require(954                 ); // 954 = ./mergeDeepWithKey

module.exports = _curry3(function mergeDeepWith(fn, lObj, rObj) {
  return mergeDeepWithKey(function (k, lVal, rVal) {
    return fn(lVal, rVal);
  }, lObj, rObj);
});
}, 957, null, "ramda/src/mergeDeepWith.js");
__d(/* ramda/src/mergeWith.js */function(global, require, module, exports) {var _curry3 = require(745                 ); // 745 = ./internal/_curry3
var mergeWithKey = require(955             ); // 955 = ./mergeWithKey

module.exports = _curry3(function mergeWith(fn, l, r) {
  return mergeWithKey(function (_, _l, _r) {
    return fn(_l, _r);
  }, l, r);
});
}, 958, null, "ramda/src/mergeWith.js");
__d(/* ramda/src/min.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2

module.exports = _curry2(function min(a, b) {
  return b < a ? b : a;
});
}, 959, null, "ramda/src/min.js");
__d(/* ramda/src/minBy.js */function(global, require, module, exports) {var _curry3 = require(745                 ); // 745 = ./internal/_curry3

module.exports = _curry3(function minBy(f, a, b) {
  return f(b) < f(a) ? b : a;
});
}, 960, null, "ramda/src/minBy.js");
__d(/* ramda/src/modulo.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2

module.exports = _curry2(function modulo(a, b) {
  return a % b;
});
}, 961, null, "ramda/src/modulo.js");
__d(/* ramda/src/multiply.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2

module.exports = _curry2(function multiply(a, b) {
  return a * b;
});
}, 962, null, "ramda/src/multiply.js");
__d(/* ramda/src/negate.js */function(global, require, module, exports) {var _curry1 = require(733                 ); // 733 = ./internal/_curry1

module.exports = _curry1(function negate(n) {
  return -n;
});
}, 963, null, "ramda/src/negate.js");
__d(/* ramda/src/none.js */function(global, require, module, exports) {var _complement = require(831                     ); // 831 = ./internal/_complement
var _curry2 = require(738                 ); // 738 = ./internal/_curry2
var _dispatchable = require(747                       ); // 747 = ./internal/_dispatchable
var _xany = require(771               ); // 771 = ./internal/_xany
var any = require(770    ); // 770 = ./any

module.exports = _curry2(_complement(_dispatchable(['any'], _xany, any)));
}, 964, null, "ramda/src/none.js");
__d(/* ramda/src/nthArg.js */function(global, require, module, exports) {var _curry1 = require(733                 ); // 733 = ./internal/_curry1
var curryN = require(741       ); // 741 = ./curryN
var nth = require(869    ); // 869 = ./nth

module.exports = _curry1(function nthArg(n) {
  var arity = n < 0 ? 1 : n + 1;
  return curryN(arity, function () {
    return nth(n, arguments);
  });
});
}, 965, null, "ramda/src/nthArg.js");
__d(/* ramda/src/o.js */function(global, require, module, exports) {var _curry3 = require(745                 ); // 745 = ./internal/_curry3

module.exports = _curry3(function o(f, g, x) {
  return f(g(x));
});
}, 966, null, "ramda/src/o.js");
__d(/* ramda/src/of.js */function(global, require, module, exports) {var _curry1 = require(733                 ); // 733 = ./internal/_curry1
var _of = require(968             ); // 968 = ./internal/_of

module.exports = _curry1(_of);
}, 967, null, "ramda/src/of.js");
__d(/* ramda/src/internal/_of.js */function(global, require, module, exports) {module.exports = function _of(x) {
  return [x];
};
}, 968, null, "ramda/src/internal/_of.js");
__d(/* ramda/src/omit.js */function(global, require, module, exports) {var _contains = require(821                   ); // 821 = ./internal/_contains
var _curry2 = require(738                 ); // 738 = ./internal/_curry2

module.exports = _curry2(function omit(names, obj) {
  var result = {};
  for (var prop in obj) {
    if (!_contains(prop, names)) {
      result[prop] = obj[prop];
    }
  }
  return result;
});
}, 969, null, "ramda/src/omit.js");
__d(/* ramda/src/once.js */function(global, require, module, exports) {var _arity = require(742                ); // 742 = ./internal/_arity
var _curry1 = require(733                 ); // 733 = ./internal/_curry1

module.exports = _curry1(function once(fn) {
  var called = false;
  var result;
  return _arity(fn.length, function () {
    if (called) {
      return result;
    }
    called = true;
    result = fn.apply(this, arguments);
    return result;
  });
});
}, 970, null, "ramda/src/once.js");
__d(/* ramda/src/over.js */function(global, require, module, exports) {var _curry3 = require(745                 ); // 745 = ./internal/_curry3

module.exports = function () {
  var Identity = function Identity(x) {
    return { value: x, map: function map(f) {
        return Identity(f(x));
      } };
  };

  return _curry3(function over(lens, f, x) {
    return lens(function (y) {
      return Identity(f(y));
    })(x).value;
  });
}();
}, 971, null, "ramda/src/over.js");
__d(/* ramda/src/pair.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2

module.exports = _curry2(function pair(fst, snd) {
  return [fst, snd];
});
}, 972, null, "ramda/src/pair.js");
__d(/* ramda/src/partial.js */function(global, require, module, exports) {var _concat = require(740                 ); // 740 = ./internal/_concat
var _createPartialApplicator = require(974                                  ); // 974 = ./internal/_createPartialApplicator

module.exports = _createPartialApplicator(_concat);
}, 973, null, "ramda/src/partial.js");
__d(/* ramda/src/internal/_createPartialApplicator.js */function(global, require, module, exports) {var _arity = require(742       ); // 742 = ./_arity
var _curry2 = require(738        ); // 738 = ./_curry2

module.exports = function _createPartialApplicator(concat) {
  return _curry2(function (fn, args) {
    return _arity(Math.max(0, fn.length - args.length), function () {
      return fn.apply(this, concat(args, arguments));
    });
  });
};
}, 974, null, "ramda/src/internal/_createPartialApplicator.js");
__d(/* ramda/src/partialRight.js */function(global, require, module, exports) {var _concat = require(740                 ); // 740 = ./internal/_concat
var _createPartialApplicator = require(974                                  ); // 974 = ./internal/_createPartialApplicator
var flip = require(889     ); // 889 = ./flip

module.exports = _createPartialApplicator(flip(_concat));
}, 975, null, "ramda/src/partialRight.js");
__d(/* ramda/src/partition.js */function(global, require, module, exports) {var filter = require(832       ); // 832 = ./filter
var juxt = require(928     ); // 928 = ./juxt
var reject = require(830       ); // 830 = ./reject

module.exports = juxt([filter, reject]);
}, 976, null, "ramda/src/partition.js");
__d(/* ramda/src/pathEq.js */function(global, require, module, exports) {var _curry3 = require(745                 ); // 745 = ./internal/_curry3
var equals = require(823       ); // 823 = ./equals
var path = require(936     ); // 936 = ./path

module.exports = _curry3(function pathEq(_path, val, obj) {
  return equals(path(_path, obj), val);
});
}, 977, null, "ramda/src/pathEq.js");
__d(/* ramda/src/pathOr.js */function(global, require, module, exports) {var _curry3 = require(745                 ); // 745 = ./internal/_curry3
var defaultTo = require(845          ); // 845 = ./defaultTo
var path = require(936     ); // 936 = ./path

module.exports = _curry3(function pathOr(d, p, obj) {
  return defaultTo(d, path(p, obj));
});
}, 978, null, "ramda/src/pathOr.js");
__d(/* ramda/src/pathSatisfies.js */function(global, require, module, exports) {var _curry3 = require(745                 ); // 745 = ./internal/_curry3
var path = require(936     ); // 936 = ./path

module.exports = _curry3(function pathSatisfies(pred, propPath, obj) {
  return propPath.length > 0 && pred(path(propPath, obj));
});
}, 979, null, "ramda/src/pathSatisfies.js");
__d(/* ramda/src/pick.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2

module.exports = _curry2(function pick(names, obj) {
  var result = {};
  var idx = 0;
  while (idx < names.length) {
    if (names[idx] in obj) {
      result[names[idx]] = obj[names[idx]];
    }
    idx += 1;
  }
  return result;
});
}, 980, null, "ramda/src/pick.js");
__d(/* ramda/src/pickAll.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2

module.exports = _curry2(function pickAll(names, obj) {
  var result = {};
  var idx = 0;
  var len = names.length;
  while (idx < len) {
    var name = names[idx];
    result[name] = obj[name];
    idx += 1;
  }
  return result;
});
}, 981, null, "ramda/src/pickAll.js");
__d(/* ramda/src/pickBy.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2

module.exports = _curry2(function pickBy(test, obj) {
  var result = {};
  for (var prop in obj) {
    if (test(obj[prop], prop, obj)) {
      result[prop] = obj[prop];
    }
  }
  return result;
});
}, 982, null, "ramda/src/pickBy.js");
__d(/* ramda/src/pipeK.js */function(global, require, module, exports) {var composeK = require(814         ); // 814 = ./composeK
var reverse = require(813        ); // 813 = ./reverse

module.exports = function pipeK() {
  if (arguments.length === 0) {
    throw new Error('pipeK requires at least one argument');
  }
  return composeK.apply(this, reverse(arguments));
};
}, 983, null, "ramda/src/pipeK.js");
__d(/* ramda/src/prepend.js */function(global, require, module, exports) {var _concat = require(740                 ); // 740 = ./internal/_concat
var _curry2 = require(738                 ); // 738 = ./internal/_curry2

module.exports = _curry2(function prepend(el, list) {
  return _concat([el], list);
});
}, 984, null, "ramda/src/prepend.js");
__d(/* ramda/src/product.js */function(global, require, module, exports) {var multiply = require(962         ); // 962 = ./multiply
var reduce = require(768       ); // 768 = ./reduce

module.exports = reduce(multiply, 1);
}, 985, null, "ramda/src/product.js");
__d(/* ramda/src/project.js */function(global, require, module, exports) {var _map = require(757              ); // 757 = ./internal/_map
var identity = require(900         ); // 900 = ./identity
var pickAll = require(981        ); // 981 = ./pickAll
var useWith = require(987        ); // 987 = ./useWith

module.exports = useWith(_map, [pickAll, identity]);
}, 986, null, "ramda/src/project.js");
__d(/* ramda/src/useWith.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2
var curryN = require(741       ); // 741 = ./curryN

module.exports = _curry2(function useWith(fn, transformers) {
  return curryN(transformers.length, function () {
    var args = [];
    var idx = 0;
    while (idx < transformers.length) {
      args.push(transformers[idx].call(this, arguments[idx]));
      idx += 1;
    }
    return fn.apply(this, args.concat(Array.prototype.slice.call(arguments, transformers.length)));
  });
});
}, 987, null, "ramda/src/useWith.js");
__d(/* ramda/src/propEq.js */function(global, require, module, exports) {var _curry3 = require(745                 ); // 745 = ./internal/_curry3
var equals = require(823       ); // 823 = ./equals

module.exports = _curry3(function propEq(name, val, obj) {
  return equals(val, obj[name]);
});
}, 988, null, "ramda/src/propEq.js");
__d(/* ramda/src/propIs.js */function(global, require, module, exports) {var _curry3 = require(745                 ); // 745 = ./internal/_curry3
var is = require(925   ); // 925 = ./is

module.exports = _curry3(function propIs(type, name, obj) {
  return is(type, obj[name]);
});
}, 989, null, "ramda/src/propIs.js");
__d(/* ramda/src/propOr.js */function(global, require, module, exports) {var _curry3 = require(745                 ); // 745 = ./internal/_curry3
var _has = require(765              ); // 765 = ./internal/_has

module.exports = _curry3(function propOr(val, p, obj) {
  return obj != null && _has(p, obj) ? obj[p] : val;
});
}, 990, null, "ramda/src/propOr.js");
__d(/* ramda/src/propSatisfies.js */function(global, require, module, exports) {var _curry3 = require(745                 ); // 745 = ./internal/_curry3

module.exports = _curry3(function propSatisfies(pred, name, obj) {
  return pred(obj[name]);
});
}, 991, null, "ramda/src/propSatisfies.js");
__d(/* ramda/src/props.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2

module.exports = _curry2(function props(ps, obj) {
  var len = ps.length;
  var out = [];
  var idx = 0;

  while (idx < len) {
    out[idx] = obj[ps[idx]];
    idx += 1;
  }

  return out;
});
}, 992, null, "ramda/src/props.js");
__d(/* ramda/src/range.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2
var _isNumber = require(932                   ); // 932 = ./internal/_isNumber

module.exports = _curry2(function range(from, to) {
  if (!(_isNumber(from) && _isNumber(to))) {
    throw new TypeError('Both arguments to range must be numbers');
  }
  var result = [];
  var n = from;
  while (n < to) {
    result.push(n);
    n += 1;
  }
  return result;
});
}, 993, null, "ramda/src/range.js");
__d(/* ramda/src/reduceRight.js */function(global, require, module, exports) {var _curry3 = require(745                 ); // 745 = ./internal/_curry3

module.exports = _curry3(function reduceRight(fn, acc, list) {
  var idx = list.length - 1;
  while (idx >= 0) {
    acc = fn(list[idx], acc);
    idx -= 1;
  }
  return acc;
});
}, 994, null, "ramda/src/reduceRight.js");
__d(/* ramda/src/reduceWhile.js */function(global, require, module, exports) {var _curryN = require(743                 ); // 743 = ./internal/_curryN
var _reduce = require(758                 ); // 758 = ./internal/_reduce
var _reduced = require(751                  ); // 751 = ./internal/_reduced

module.exports = _curryN(4, [], function _reduceWhile(pred, fn, a, list) {
  return _reduce(function (acc, x) {
    return pred(acc, x) ? fn(acc, x) : _reduced(acc);
  }, a, list);
});
}, 995, null, "ramda/src/reduceWhile.js");
__d(/* ramda/src/reduced.js */function(global, require, module, exports) {var _curry1 = require(733                 ); // 733 = ./internal/_curry1
var _reduced = require(751                  ); // 751 = ./internal/_reduced

module.exports = _curry1(_reduced);
}, 996, null, "ramda/src/reduced.js");
__d(/* ramda/src/repeat.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2
var always = require(732       ); // 732 = ./always
var times = require(998      ); // 998 = ./times

module.exports = _curry2(function repeat(value, n) {
  return times(always(value), n);
});
}, 997, null, "ramda/src/repeat.js");
__d(/* ramda/src/times.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2

module.exports = _curry2(function times(fn, n) {
  var len = Number(n);
  var idx = 0;
  var list;

  if (len < 0 || isNaN(len)) {
    throw new RangeError('n must be a non-negative number');
  }
  list = new Array(len);
  while (idx < len) {
    list[idx] = fn(idx);
    idx += 1;
  }
  return list;
});
}, 998, null, "ramda/src/times.js");
__d(/* ramda/src/replace.js */function(global, require, module, exports) {var _curry3 = require(745                 ); // 745 = ./internal/_curry3

module.exports = _curry3(function replace(regex, replacement, str) {
  return str.replace(regex, replacement);
});
}, 999, null, "ramda/src/replace.js");
__d(/* ramda/src/scan.js */function(global, require, module, exports) {var _curry3 = require(745                 ); // 745 = ./internal/_curry3

module.exports = _curry3(function scan(fn, acc, list) {
  var idx = 0;
  var len = list.length;
  var result = [acc];
  while (idx < len) {
    acc = fn(acc, list[idx]);
    result[idx + 1] = acc;
    idx += 1;
  }
  return result;
});
}, 1000, null, "ramda/src/scan.js");
__d(/* ramda/src/sequence.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2
var ap = require(773   ); // 773 = ./ap
var map = require(756    ); // 756 = ./map
var prepend = require(984        ); // 984 = ./prepend
var reduceRight = require(994            ); // 994 = ./reduceRight

module.exports = _curry2(function sequence(of, traversable) {
  return typeof traversable.sequence === 'function' ? traversable.sequence(of) : reduceRight(function (x, acc) {
    return ap(map(prepend, x), acc);
  }, of([]), traversable);
});
}, 1001, null, "ramda/src/sequence.js");
__d(/* ramda/src/set.js */function(global, require, module, exports) {var _curry3 = require(745                 ); // 745 = ./internal/_curry3
var always = require(732       ); // 732 = ./always
var over = require(971     ); // 971 = ./over

module.exports = _curry3(function set(lens, v, x) {
  return over(lens, always(v), x);
});
}, 1002, null, "ramda/src/set.js");
__d(/* ramda/src/sort.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2

module.exports = _curry2(function sort(comparator, list) {
  return Array.prototype.slice.call(list, 0).sort(comparator);
});
}, 1003, null, "ramda/src/sort.js");
__d(/* ramda/src/sortBy.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2

module.exports = _curry2(function sortBy(fn, list) {
  return Array.prototype.slice.call(list, 0).sort(function (a, b) {
    var aa = fn(a);
    var bb = fn(b);
    return aa < bb ? -1 : aa > bb ? 1 : 0;
  });
});
}, 1004, null, "ramda/src/sortBy.js");
__d(/* ramda/src/sortWith.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2

module.exports = _curry2(function sortWith(fns, list) {
  return Array.prototype.slice.call(list, 0).sort(function (a, b) {
    var result = 0;
    var i = 0;
    while (result === 0 && i < fns.length) {
      result = fns[i](a, b);
      i += 1;
    }
    return result;
  });
});
}, 1005, null, "ramda/src/sortWith.js");
__d(/* ramda/src/split.js */function(global, require, module, exports) {var invoker = require(924        ); // 924 = ./invoker

module.exports = invoker(1, 'split');
}, 1006, null, "ramda/src/split.js");
__d(/* ramda/src/splitAt.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2
var length = require(931       ); // 931 = ./length
var slice = require(812      ); // 812 = ./slice

module.exports = _curry2(function splitAt(index, array) {
  return [slice(0, index, array), slice(index, length(array), array)];
});
}, 1007, null, "ramda/src/splitAt.js");
__d(/* ramda/src/splitEvery.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2
var slice = require(812      ); // 812 = ./slice

module.exports = _curry2(function splitEvery(n, list) {
  if (n <= 0) {
    throw new Error('First argument to splitEvery must be a positive integer');
  }
  var result = [];
  var idx = 0;
  while (idx < list.length) {
    result.push(slice(idx, idx += n, list));
  }
  return result;
});
}, 1008, null, "ramda/src/splitEvery.js");
__d(/* ramda/src/splitWhen.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2

module.exports = _curry2(function splitWhen(pred, list) {
  var idx = 0;
  var len = list.length;
  var prefix = [];

  while (idx < len && !pred(list[idx])) {
    prefix.push(list[idx]);
    idx += 1;
  }

  return [prefix, Array.prototype.slice.call(list, idx)];
});
}, 1009, null, "ramda/src/splitWhen.js");
__d(/* ramda/src/startsWith.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2
var equals = require(823       ); // 823 = ./equals
var take = require(859     ); // 859 = ./take

module.exports = _curry2(function (prefix, list) {
  return equals(take(prefix.length, list), prefix);
});
}, 1010, null, "ramda/src/startsWith.js");
__d(/* ramda/src/subtract.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2

module.exports = _curry2(function subtract(a, b) {
  return Number(a) - Number(b);
});
}, 1011, null, "ramda/src/subtract.js");
__d(/* ramda/src/symmetricDifference.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2
var concat = require(818       ); // 818 = ./concat
var difference = require(847           ); // 847 = ./difference

module.exports = _curry2(function symmetricDifference(list1, list2) {
  return concat(difference(list1, list2), difference(list2, list1));
});
}, 1012, null, "ramda/src/symmetricDifference.js");
__d(/* ramda/src/symmetricDifferenceWith.js */function(global, require, module, exports) {var _curry3 = require(745                 ); // 745 = ./internal/_curry3
var concat = require(818       ); // 818 = ./concat
var differenceWith = require(848               ); // 848 = ./differenceWith

module.exports = _curry3(function symmetricDifferenceWith(pred, list1, list2) {
  return concat(differenceWith(pred, list1, list2), differenceWith(pred, list2, list1));
});
}, 1013, null, "ramda/src/symmetricDifferenceWith.js");
__d(/* ramda/src/takeLastWhile.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2

module.exports = _curry2(function takeLastWhile(fn, list) {
  var idx = list.length - 1;
  while (idx >= 0 && fn(list[idx])) {
    idx -= 1;
  }
  return Array.prototype.slice.call(list, idx + 1);
});
}, 1014, null, "ramda/src/takeLastWhile.js");
__d(/* ramda/src/takeWhile.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2
var _dispatchable = require(747                       ); // 747 = ./internal/_dispatchable
var _xtakeWhile = require(1016                    ); // 1016 = ./internal/_xtakeWhile

module.exports = _curry2(_dispatchable(['takeWhile'], _xtakeWhile, function takeWhile(fn, list) {
  var idx = 0;
  var len = list.length;
  while (idx < len && fn(list[idx])) {
    idx += 1;
  }
  return Array.prototype.slice.call(list, 0, idx);
}));
}, 1015, null, "ramda/src/takeWhile.js");
__d(/* ramda/src/internal/_xtakeWhile.js */function(global, require, module, exports) {var _curry2 = require(738        ); // 738 = ./_curry2
var _reduced = require(751         ); // 751 = ./_reduced
var _xfBase = require(752        ); // 752 = ./_xfBase

module.exports = function () {
  function XTakeWhile(f, xf) {
    this.xf = xf;
    this.f = f;
  }
  XTakeWhile.prototype['@@transducer/init'] = _xfBase.init;
  XTakeWhile.prototype['@@transducer/result'] = _xfBase.result;
  XTakeWhile.prototype['@@transducer/step'] = function (result, input) {
    return this.f(input) ? this.xf['@@transducer/step'](result, input) : _reduced(result);
  };

  return _curry2(function _xtakeWhile(f, xf) {
    return new XTakeWhile(f, xf);
  });
}();
}, 1016, null, "ramda/src/internal/_xtakeWhile.js");
__d(/* ramda/src/tap.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2

module.exports = _curry2(function tap(fn, x) {
  fn(x);
  return x;
});
}, 1017, null, "ramda/src/tap.js");
__d(/* ramda/src/test.js */function(global, require, module, exports) {var _cloneRegExp = require(802                      ); // 802 = ./internal/_cloneRegExp
var _curry2 = require(738                 ); // 738 = ./internal/_curry2
var _isRegExp = require(1019                  ); // 1019 = ./internal/_isRegExp
var toString = require(819         ); // 819 = ./toString

module.exports = _curry2(function test(pattern, str) {
  if (!_isRegExp(pattern)) {
    throw new TypeError('‘test’ requires a value of type RegExp as its first argument; received ' + toString(pattern));
  }
  return _cloneRegExp(pattern).test(str);
});
}, 1018, null, "ramda/src/test.js");
__d(/* ramda/src/internal/_isRegExp.js */function(global, require, module, exports) {module.exports = function _isRegExp(x) {
  return Object.prototype.toString.call(x) === '[object RegExp]';
};
}, 1019, null, "ramda/src/internal/_isRegExp.js");
__d(/* ramda/src/toLower.js */function(global, require, module, exports) {var invoker = require(924        ); // 924 = ./invoker

module.exports = invoker(0, 'toLowerCase');
}, 1020, null, "ramda/src/toLower.js");
__d(/* ramda/src/toPairs.js */function(global, require, module, exports) {var _curry1 = require(733                 ); // 733 = ./internal/_curry1
var _has = require(765              ); // 765 = ./internal/_has

module.exports = _curry1(function toPairs(obj) {
  var pairs = [];
  for (var prop in obj) {
    if (_has(prop, obj)) {
      pairs[pairs.length] = [prop, obj[prop]];
    }
  }
  return pairs;
});
}, 1021, null, "ramda/src/toPairs.js");
__d(/* ramda/src/toPairsIn.js */function(global, require, module, exports) {var _curry1 = require(733                 ); // 733 = ./internal/_curry1

module.exports = _curry1(function toPairsIn(obj) {
  var pairs = [];
  for (var prop in obj) {
    pairs[pairs.length] = [prop, obj[prop]];
  }
  return pairs;
});
}, 1022, null, "ramda/src/toPairsIn.js");
__d(/* ramda/src/toUpper.js */function(global, require, module, exports) {var invoker = require(924        ); // 924 = ./invoker

module.exports = invoker(0, 'toUpperCase');
}, 1023, null, "ramda/src/toUpper.js");
__d(/* ramda/src/transduce.js */function(global, require, module, exports) {var _reduce = require(758                 ); // 758 = ./internal/_reduce
var _xwrap = require(761                ); // 761 = ./internal/_xwrap
var curryN = require(741       ); // 741 = ./curryN

module.exports = curryN(4, function transduce(xf, fn, acc, list) {
  return _reduce(xf(typeof fn === 'function' ? _xwrap(fn) : fn), acc, list);
});
}, 1024, null, "ramda/src/transduce.js");
__d(/* ramda/src/transpose.js */function(global, require, module, exports) {var _curry1 = require(733                 ); // 733 = ./internal/_curry1

module.exports = _curry1(function transpose(outerlist) {
  var i = 0;
  var result = [];
  while (i < outerlist.length) {
    var innerlist = outerlist[i];
    var j = 0;
    while (j < innerlist.length) {
      if (typeof result[j] === 'undefined') {
        result[j] = [];
      }
      result[j].push(innerlist[j]);
      j += 1;
    }
    i += 1;
  }
  return result;
});
}, 1025, null, "ramda/src/transpose.js");
__d(/* ramda/src/traverse.js */function(global, require, module, exports) {var _curry3 = require(745                 ); // 745 = ./internal/_curry3
var map = require(756    ); // 756 = ./map
var sequence = require(1001        ); // 1001 = ./sequence

module.exports = _curry3(function traverse(of, f, traversable) {
  return typeof traversable['fantasy-land/traverse'] === 'function' ? traversable['fantasy-land/traverse'](f, of) : sequence(of, map(f, traversable));
});
}, 1026, null, "ramda/src/traverse.js");
__d(/* ramda/src/trim.js */function(global, require, module, exports) {var _curry1 = require(733                 ); // 733 = ./internal/_curry1

module.exports = function () {
  var ws = '\t\n\x0B\f\r \xA0\u1680\u180E\u2000\u2001\u2002\u2003' + '\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028' + '\u2029\uFEFF';
  var zeroWidth = '\u200B';
  var hasProtoTrim = typeof String.prototype.trim === 'function';
  if (!hasProtoTrim || ws.trim() || !zeroWidth.trim()) {
    return _curry1(function trim(str) {
      var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');
      var endRx = new RegExp('[' + ws + '][' + ws + ']*$');
      return str.replace(beginRx, '').replace(endRx, '');
    });
  } else {
    return _curry1(function trim(str) {
      return str.trim();
    });
  }
}();
}, 1027, null, "ramda/src/trim.js");
__d(/* ramda/src/tryCatch.js */function(global, require, module, exports) {var _arity = require(742                ); // 742 = ./internal/_arity
var _concat = require(740                 ); // 740 = ./internal/_concat
var _curry2 = require(738                 ); // 738 = ./internal/_curry2

module.exports = _curry2(function _tryCatch(tryer, catcher) {
  return _arity(tryer.length, function () {
    try {
      return tryer.apply(this, arguments);
    } catch (e) {
      return catcher.apply(this, _concat([e], arguments));
    }
  });
});
}, 1028, null, "ramda/src/tryCatch.js");
__d(/* ramda/src/unapply.js */function(global, require, module, exports) {var _curry1 = require(733                 ); // 733 = ./internal/_curry1

module.exports = _curry1(function unapply(fn) {
  return function () {
    return fn(Array.prototype.slice.call(arguments, 0));
  };
});
}, 1029, null, "ramda/src/unapply.js");
__d(/* ramda/src/unary.js */function(global, require, module, exports) {var _curry1 = require(733                 ); // 733 = ./internal/_curry1
var nAry = require(787     ); // 787 = ./nAry

module.exports = _curry1(function unary(fn) {
  return nAry(1, fn);
});
}, 1030, null, "ramda/src/unary.js");
__d(/* ramda/src/uncurryN.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2
var curryN = require(741       ); // 741 = ./curryN

module.exports = _curry2(function uncurryN(depth, fn) {
  return curryN(depth, function () {
    var currentDepth = 1;
    var value = fn;
    var idx = 0;
    var endIdx;
    while (currentDepth <= depth && typeof value === 'function') {
      endIdx = currentDepth === depth ? arguments.length : idx + value.length;
      value = value.apply(this, Array.prototype.slice.call(arguments, idx, endIdx));
      currentDepth += 1;
      idx = endIdx;
    }
    return value;
  });
});
}, 1031, null, "ramda/src/uncurryN.js");
__d(/* ramda/src/unfold.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2

module.exports = _curry2(function unfold(fn, seed) {
  var pair = fn(seed);
  var result = [];
  while (pair && pair.length) {
    result[result.length] = pair[0];
    pair = fn(pair[1]);
  }
  return result;
});
}, 1032, null, "ramda/src/unfold.js");
__d(/* ramda/src/union.js */function(global, require, module, exports) {var _concat = require(740                 ); // 740 = ./internal/_concat
var _curry2 = require(738                 ); // 738 = ./internal/_curry2
var compose = require(807        ); // 807 = ./compose
var uniq = require(911     ); // 911 = ./uniq

module.exports = _curry2(compose(uniq, _concat));
}, 1033, null, "ramda/src/union.js");
__d(/* ramda/src/unionWith.js */function(global, require, module, exports) {var _concat = require(740                 ); // 740 = ./internal/_concat
var _curry3 = require(745                 ); // 745 = ./internal/_curry3
var uniqWith = require(915         ); // 915 = ./uniqWith

module.exports = _curry3(function unionWith(pred, list1, list2) {
  return uniqWith(pred, _concat(list1, list2));
});
}, 1034, null, "ramda/src/unionWith.js");
__d(/* ramda/src/unless.js */function(global, require, module, exports) {var _curry3 = require(745                 ); // 745 = ./internal/_curry3

module.exports = _curry3(function unless(pred, whenFalseFn, x) {
  return pred(x) ? x : whenFalseFn(x);
});
}, 1035, null, "ramda/src/unless.js");
__d(/* ramda/src/unnest.js */function(global, require, module, exports) {var _identity = require(901                   ); // 901 = ./internal/_identity
var chain = require(794      ); // 794 = ./chain

module.exports = chain(_identity);
}, 1036, null, "ramda/src/unnest.js");
__d(/* ramda/src/until.js */function(global, require, module, exports) {var _curry3 = require(745                 ); // 745 = ./internal/_curry3

module.exports = _curry3(function until(pred, fn, init) {
  var val = init;
  while (!pred(val)) {
    val = fn(val);
  }
  return val;
});
}, 1037, null, "ramda/src/until.js");
__d(/* ramda/src/valuesIn.js */function(global, require, module, exports) {var _curry1 = require(733                 ); // 733 = ./internal/_curry1

module.exports = _curry1(function valuesIn(obj) {
  var prop;
  var vs = [];
  for (prop in obj) {
    vs[vs.length] = obj[prop];
  }
  return vs;
});
}, 1038, null, "ramda/src/valuesIn.js");
__d(/* ramda/src/view.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2

module.exports = function () {
  var Const = function Const(x) {
    return { value: x, 'fantasy-land/map': function fantasyLandMap() {
        return this;
      } };
  };

  return _curry2(function view(lens, x) {
    return lens(Const)(x).value;
  });
}();
}, 1039, null, "ramda/src/view.js");
__d(/* ramda/src/when.js */function(global, require, module, exports) {var _curry3 = require(745                 ); // 745 = ./internal/_curry3

module.exports = _curry3(function when(pred, whenTrueFn, x) {
  return pred(x) ? whenTrueFn(x) : x;
});
}, 1040, null, "ramda/src/when.js");
__d(/* ramda/src/where.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2
var _has = require(765              ); // 765 = ./internal/_has

module.exports = _curry2(function where(spec, testObj) {
  for (var prop in spec) {
    if (_has(prop, spec) && !spec[prop](testObj[prop])) {
      return false;
    }
  }
  return true;
});
}, 1041, null, "ramda/src/where.js");
__d(/* ramda/src/whereEq.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2
var equals = require(823       ); // 823 = ./equals
var map = require(756    ); // 756 = ./map
var where = require(1041     ); // 1041 = ./where

module.exports = _curry2(function whereEq(spec, testObj) {
  return where(map(equals, spec), testObj);
});
}, 1042, null, "ramda/src/whereEq.js");
__d(/* ramda/src/without.js */function(global, require, module, exports) {var _contains = require(821                   ); // 821 = ./internal/_contains
var _curry2 = require(738                 ); // 738 = ./internal/_curry2
var flip = require(889     ); // 889 = ./flip
var reject = require(830       ); // 830 = ./reject

module.exports = _curry2(function (xs, list) {
  return reject(flip(_contains)(xs), list);
});
}, 1043, null, "ramda/src/without.js");
__d(/* ramda/src/xprod.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2

module.exports = _curry2(function xprod(a, b) {
  var idx = 0;
  var ilen = a.length;
  var j;
  var jlen = b.length;
  var result = [];
  while (idx < ilen) {
    j = 0;
    while (j < jlen) {
      result[result.length] = [a[idx], b[j]];
      j += 1;
    }
    idx += 1;
  }
  return result;
});
}, 1044, null, "ramda/src/xprod.js");
__d(/* ramda/src/zip.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2

module.exports = _curry2(function zip(a, b) {
  var rv = [];
  var idx = 0;
  var len = Math.min(a.length, b.length);
  while (idx < len) {
    rv[idx] = [a[idx], b[idx]];
    idx += 1;
  }
  return rv;
});
}, 1045, null, "ramda/src/zip.js");
__d(/* ramda/src/zipObj.js */function(global, require, module, exports) {var _curry2 = require(738                 ); // 738 = ./internal/_curry2

module.exports = _curry2(function zipObj(keys, values) {
  var idx = 0;
  var len = Math.min(keys.length, values.length);
  var out = {};
  while (idx < len) {
    out[keys[idx]] = values[idx];
    idx += 1;
  }
  return out;
});
}, 1046, null, "ramda/src/zipObj.js");
__d(/* ramda/src/zipWith.js */function(global, require, module, exports) {var _curry3 = require(745                 ); // 745 = ./internal/_curry3

module.exports = _curry3(function zipWith(fn, a, b) {
  var rv = [];
  var idx = 0;
  var len = Math.min(a.length, b.length);
  while (idx < len) {
    rv[idx] = fn(a[idx], b[idx]);
    idx += 1;
  }
  return rv;
});
}, 1047, null, "ramda/src/zipWith.js");
__d(/* ramdasauce/dist/ramdasauce.js */function(global, require, module, exports) {"use strict";
function _interopDefault(r) {
  return r && "object" == typeof r && "default" in r ? r.default : r;
}var curry = _interopDefault(require(1049             )), // 1049 = ramda/src/curry
    cond = _interopDefault(require(1056            )), // 1056 = ramda/src/cond
    isNil = _interopDefault(require(1075             )), // 1075 = ramda/src/isNil
    identity = _interopDefault(require(1076                )), // 1076 = ramda/src/identity
    is = _interopDefault(require(1078          )), // 1078 = ramda/src/is
    T = _interopDefault(require(1079         )), // 1079 = ramda/src/T
    gte = _interopDefault(require(1081           )), // 1081 = ramda/src/gte
    complement = _interopDefault(require(1082                  )), // 1082 = ramda/src/complement
    eqProps = _interopDefault(require(1088               )), // 1088 = ramda/src/eqProps
    isEmpty = _interopDefault(require(1095               )), // 1095 = ramda/src/isEmpty
    anyPass = _interopDefault(require(1098               )), // 1098 = ramda/src/anyPass
    pipe = _interopDefault(require(1101            )), // 1101 = ramda/src/pipe
    toPairs = _interopDefault(require(1106               )), // 1106 = ramda/src/toPairs
    map = _interopDefault(require(1057           )), // 1057 = ramda/src/map
    adjust = _interopDefault(require(1107              )), // 1107 = ramda/src/adjust
    fromPairs = _interopDefault(require(1108                 )), // 1108 = ramda/src/fromPairs
    range = _interopDefault(require(1109             )), // 1109 = ramda/src/range
    split = _interopDefault(require(1111             )), // 1111 = ramda/src/split
    path = _interopDefault(require(1125            )), // 1125 = ramda/src/path
    newStartsWith = _interopDefault(require(1126                  )), // 1126 = ramda/src/startsWith
    newEndsWith = _interopDefault(require(1130                )), // 1130 = ramda/src/endsWith
    find = _interopDefault(require(1134            )), // 1134 = ramda/src/find
    propEq = _interopDefault(require(1136              )), // 1136 = ramda/src/propEq
    findIndex = _interopDefault(require(1137                 )), // 1137 = ramda/src/findIndex
    log = function log(r) {
  return console.log(r), r;
},
    trace = curry(function (r, e) {
  return console.log(r), e;
}),
    toNumber = cond([[isNil, identity], [is(Number), identity], [T, function (r) {
  return Number(r);
}]]),
    toDate = function toDate(r) {
  return cond([[isNil, identity], [is(Object), identity], [T, function (r) {
    return new Date(r);
  }]])(r);
},
    isWithin = curry(function (r, e, t) {
  var i = is(Number);return i(r) && i(e) && i(t) && gte(t, r) && gte(e, t);
}),
    isNotWithin = complement(isWithin),
    eqLength = eqProps("length"),
    random = function random(r, e) {
  return Math.floor(Math.random() * (e - r + 1)) + r;
},
    sample = function sample(r) {
  if (isNil(r) || isEmpty(r)) return null;var e = r.length - 1;return r[random(0, e)];
},
    isNilOrEmpty = anyPass([isNil, isEmpty]),
    isNotNil = complement(isNil),
    isUndefined = function isUndefined(r) {
  return void 0 === r;
},
    mapKeys = curry(function (r, e) {
  return pipe(toPairs, map(adjust(r, 0)), fromPairs)(e);
}),
    rangeStep = curry(function (r, e, t) {
  return 0 === r ? null : r > 0 && t < e ? null : r < 0 && t > e ? null : map(function (t) {
    return e + r * t;
  }, range(0, 1 + (t - e) / r >>> 0));
}),
    dotPath = curry(function (r, e) {
  return path(split(".", r), e);
}),
    startsWith = curry(function (r, e) {
  return newStartsWith(r, e);
}),
    endsWith = curry(function (r, e) {
  return newEndsWith(r, e);
}),
    findByProp = curry(function (r, e, t) {
  return find(propEq(r, e))(t);
}),
    findIndexByProp = curry(function (r, e, t) {
  return findIndex(propEq(r, e))(t);
}),
    Ramdasauce = { log: log, trace: trace, toNumber: toNumber, toDate: toDate, isWithin: isWithin, isNotWithin: isNotWithin, eqLength: eqLength, random: random, sample: sample, isNilOrEmpty: isNilOrEmpty, isNotNil: isNotNil, isUndefined: isUndefined, mapKeys: mapKeys, rangeStep: rangeStep, dotPath: dotPath, startsWith: startsWith, endsWith: endsWith, findByProp: findByProp, findIndexByProp: findIndexByProp };module.exports = Ramdasauce, module.exports = Ramdasauce;
}, 1048, null, "ramdasauce/dist/ramdasauce.js");
__d(/* ramda/src/curry.js */function(global, require, module, exports) {var _curry1 = require(1050                ); // 1050 = ./internal/_curry1
var curryN = require(1052      ); // 1052 = ./curryN

module.exports = _curry1(function curry(fn) {
  return curryN(fn.length, fn);
});
}, 1049, null, "ramda/src/curry.js");
__d(/* ramda/src/internal/_curry1.js */function(global, require, module, exports) {var _isPlaceholder = require(1051              ); // 1051 = ./_isPlaceholder

module.exports = function _curry1(fn) {
  return function f1(a) {
    if (arguments.length === 0 || _isPlaceholder(a)) {
      return f1;
    } else {
      return fn.apply(this, arguments);
    }
  };
};
}, 1050, null, "ramda/src/internal/_curry1.js");
__d(/* ramda/src/internal/_isPlaceholder.js */function(global, require, module, exports) {module.exports = function _isPlaceholder(a) {
       return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;
};
}, 1051, null, "ramda/src/internal/_isPlaceholder.js");
__d(/* ramda/src/curryN.js */function(global, require, module, exports) {var _arity = require(1053               ); // 1053 = ./internal/_arity
var _curry1 = require(1050                ); // 1050 = ./internal/_curry1
var _curry2 = require(1054                ); // 1054 = ./internal/_curry2
var _curryN = require(1055                ); // 1055 = ./internal/_curryN

module.exports = _curry2(function curryN(length, fn) {
  if (length === 1) {
    return _curry1(fn);
  }
  return _arity(length, _curryN(length, [], fn));
});
}, 1052, null, "ramda/src/curryN.js");
__d(/* ramda/src/internal/_arity.js */function(global, require, module, exports) {module.exports = function _arity(n, fn) {
  switch (n) {
    case 0:
      return function () {
        return fn.apply(this, arguments);
      };
    case 1:
      return function (a0) {
        return fn.apply(this, arguments);
      };
    case 2:
      return function (a0, a1) {
        return fn.apply(this, arguments);
      };
    case 3:
      return function (a0, a1, a2) {
        return fn.apply(this, arguments);
      };
    case 4:
      return function (a0, a1, a2, a3) {
        return fn.apply(this, arguments);
      };
    case 5:
      return function (a0, a1, a2, a3, a4) {
        return fn.apply(this, arguments);
      };
    case 6:
      return function (a0, a1, a2, a3, a4, a5) {
        return fn.apply(this, arguments);
      };
    case 7:
      return function (a0, a1, a2, a3, a4, a5, a6) {
        return fn.apply(this, arguments);
      };
    case 8:
      return function (a0, a1, a2, a3, a4, a5, a6, a7) {
        return fn.apply(this, arguments);
      };
    case 9:
      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {
        return fn.apply(this, arguments);
      };
    case 10:
      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {
        return fn.apply(this, arguments);
      };
    default:
      throw new Error('First argument to _arity must be a non-negative integer no greater than ten');
  }
};
}, 1053, null, "ramda/src/internal/_arity.js");
__d(/* ramda/src/internal/_curry2.js */function(global, require, module, exports) {var _curry1 = require(1050       ); // 1050 = ./_curry1
var _isPlaceholder = require(1051              ); // 1051 = ./_isPlaceholder

module.exports = function _curry2(fn) {
  return function f2(a, b) {
    switch (arguments.length) {
      case 0:
        return f2;
      case 1:
        return _isPlaceholder(a) ? f2 : _curry1(function (_b) {
          return fn(a, _b);
        });
      default:
        return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {
          return fn(_a, b);
        }) : _isPlaceholder(b) ? _curry1(function (_b) {
          return fn(a, _b);
        }) : fn(a, b);
    }
  };
};
}, 1054, null, "ramda/src/internal/_curry2.js");
__d(/* ramda/src/internal/_curryN.js */function(global, require, module, exports) {var _arity = require(1053      ); // 1053 = ./_arity
var _isPlaceholder = require(1051              ); // 1051 = ./_isPlaceholder

module.exports = function _curryN(length, received, fn) {
  return function () {
    var combined = [];
    var argsIdx = 0;
    var left = length;
    var combinedIdx = 0;
    while (combinedIdx < received.length || argsIdx < arguments.length) {
      var result;
      if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {
        result = received[combinedIdx];
      } else {
        result = arguments[argsIdx];
        argsIdx += 1;
      }
      combined[combinedIdx] = result;
      if (!_isPlaceholder(result)) {
        left -= 1;
      }
      combinedIdx += 1;
    }
    return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));
  };
};
}, 1055, null, "ramda/src/internal/_curryN.js");
__d(/* ramda/src/cond.js */function(global, require, module, exports) {var _arity = require(1053               ); // 1053 = ./internal/_arity
var _curry1 = require(1050                ); // 1050 = ./internal/_curry1
var map = require(1057   ); // 1057 = ./map
var max = require(1072   ); // 1072 = ./max
var reduce = require(1073      ); // 1073 = ./reduce

module.exports = _curry1(function cond(pairs) {
  var arity = reduce(max, 0, map(function (pair) {
    return pair[0].length;
  }, pairs));
  return _arity(arity, function () {
    var idx = 0;
    while (idx < pairs.length) {
      if (pairs[idx][0].apply(this, arguments)) {
        return pairs[idx][1].apply(this, arguments);
      }
      idx += 1;
    }
  });
});
}, 1056, null, "ramda/src/cond.js");
__d(/* ramda/src/map.js */function(global, require, module, exports) {var _curry2 = require(1054                ); // 1054 = ./internal/_curry2
var _dispatchable = require(1058                      ); // 1058 = ./internal/_dispatchable
var _map = require(1061             ); // 1061 = ./internal/_map
var _reduce = require(1062                ); // 1062 = ./internal/_reduce
var _xmap = require(1067              ); // 1067 = ./internal/_xmap
var curryN = require(1052      ); // 1052 = ./curryN
var keys = require(1069    ); // 1069 = ./keys

module.exports = _curry2(_dispatchable(['fantasy-land/map', 'map'], _xmap, function map(fn, functor) {
  switch (Object.prototype.toString.call(functor)) {
    case '[object Function]':
      return curryN(functor.length, function () {
        return fn.call(this, functor.apply(this, arguments));
      });
    case '[object Object]':
      return _reduce(function (acc, key) {
        acc[key] = fn(functor[key]);
        return acc;
      }, {}, keys(functor));
    default:
      return _map(fn, functor);
  }
}));
}, 1057, null, "ramda/src/map.js");
__d(/* ramda/src/internal/_dispatchable.js */function(global, require, module, exports) {var _isArray = require(1059        ); // 1059 = ./_isArray
var _isTransformer = require(1060              ); // 1060 = ./_isTransformer

module.exports = function _dispatchable(methodNames, xf, fn) {
  return function () {
    if (arguments.length === 0) {
      return fn();
    }
    var args = Array.prototype.slice.call(arguments, 0);
    var obj = args.pop();
    if (!_isArray(obj)) {
      var idx = 0;
      while (idx < methodNames.length) {
        if (typeof obj[methodNames[idx]] === 'function') {
          return obj[methodNames[idx]].apply(obj, args);
        }
        idx += 1;
      }
      if (_isTransformer(obj)) {
        var transducer = xf.apply(null, args);
        return transducer(obj);
      }
    }
    return fn.apply(this, arguments);
  };
};
}, 1058, null, "ramda/src/internal/_dispatchable.js");
__d(/* ramda/src/internal/_isArray.js */function(global, require, module, exports) {
module.exports = Array.isArray || function _isArray(val) {
  return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';
};
}, 1059, null, "ramda/src/internal/_isArray.js");
__d(/* ramda/src/internal/_isTransformer.js */function(global, require, module, exports) {module.exports = function _isTransformer(obj) {
  return typeof obj['@@transducer/step'] === 'function';
};
}, 1060, null, "ramda/src/internal/_isTransformer.js");
__d(/* ramda/src/internal/_map.js */function(global, require, module, exports) {module.exports = function _map(fn, functor) {
  var idx = 0;
  var len = functor.length;
  var result = Array(len);
  while (idx < len) {
    result[idx] = fn(functor[idx]);
    idx += 1;
  }
  return result;
};
}, 1061, null, "ramda/src/internal/_map.js");
__d(/* ramda/src/internal/_reduce.js */function(global, require, module, exports) {var _isArrayLike = require(1063            ); // 1063 = ./_isArrayLike
var _xwrap = require(1065      ); // 1065 = ./_xwrap
var bind = require(1066     ); // 1066 = ../bind

module.exports = function () {
  function _arrayReduce(xf, acc, list) {
    var idx = 0;
    var len = list.length;
    while (idx < len) {
      acc = xf['@@transducer/step'](acc, list[idx]);
      if (acc && acc['@@transducer/reduced']) {
        acc = acc['@@transducer/value'];
        break;
      }
      idx += 1;
    }
    return xf['@@transducer/result'](acc);
  }

  function _iterableReduce(xf, acc, iter) {
    var step = iter.next();
    while (!step.done) {
      acc = xf['@@transducer/step'](acc, step.value);
      if (acc && acc['@@transducer/reduced']) {
        acc = acc['@@transducer/value'];
        break;
      }
      step = iter.next();
    }
    return xf['@@transducer/result'](acc);
  }

  function _methodReduce(xf, acc, obj, methodName) {
    return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));
  }

  var symIterator = typeof Symbol !== 'undefined' ? typeof Symbol === 'function' ? Symbol.iterator : '@@iterator' : '@@iterator';
  return function _reduce(fn, acc, list) {
    if (typeof fn === 'function') {
      fn = _xwrap(fn);
    }
    if (_isArrayLike(list)) {
      return _arrayReduce(fn, acc, list);
    }
    if (typeof list['fantasy-land/reduce'] === 'function') {
      return _methodReduce(fn, acc, list, 'fantasy-land/reduce');
    }
    if (list[symIterator] != null) {
      return _iterableReduce(fn, acc, list[symIterator]());
    }
    if (typeof list.next === 'function') {
      return _iterableReduce(fn, acc, list);
    }
    if (typeof list.reduce === 'function') {
      return _methodReduce(fn, acc, list, 'reduce');
    }

    throw new TypeError('reduce: list must be array or iterable');
  };
}();
}, 1062, null, "ramda/src/internal/_reduce.js");
__d(/* ramda/src/internal/_isArrayLike.js */function(global, require, module, exports) {var _curry1 = require(1050       ); // 1050 = ./_curry1
var _isArray = require(1059        ); // 1059 = ./_isArray
var _isString = require(1064         ); // 1064 = ./_isString

module.exports = _curry1(function isArrayLike(x) {
  if (_isArray(x)) {
    return true;
  }
  if (!x) {
    return false;
  }
  if (typeof x !== 'object') {
    return false;
  }
  if (_isString(x)) {
    return false;
  }
  if (x.nodeType === 1) {
    return !!x.length;
  }
  if (x.length === 0) {
    return true;
  }
  if (x.length > 0) {
    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);
  }
  return false;
});
}, 1063, null, "ramda/src/internal/_isArrayLike.js");
__d(/* ramda/src/internal/_isString.js */function(global, require, module, exports) {module.exports = function _isString(x) {
  return Object.prototype.toString.call(x) === '[object String]';
};
}, 1064, null, "ramda/src/internal/_isString.js");
__d(/* ramda/src/internal/_xwrap.js */function(global, require, module, exports) {module.exports = function () {
  function XWrap(fn) {
    this.f = fn;
  }
  XWrap.prototype['@@transducer/init'] = function () {
    throw new Error('init not implemented on XWrap');
  };
  XWrap.prototype['@@transducer/result'] = function (acc) {
    return acc;
  };
  XWrap.prototype['@@transducer/step'] = function (acc, x) {
    return this.f(acc, x);
  };

  return function _xwrap(fn) {
    return new XWrap(fn);
  };
}();
}, 1065, null, "ramda/src/internal/_xwrap.js");
__d(/* ramda/src/bind.js */function(global, require, module, exports) {var _arity = require(1053               ); // 1053 = ./internal/_arity
var _curry2 = require(1054                ); // 1054 = ./internal/_curry2

module.exports = _curry2(function bind(fn, thisObj) {
  return _arity(fn.length, function () {
    return fn.apply(thisObj, arguments);
  });
});
}, 1066, null, "ramda/src/bind.js");
__d(/* ramda/src/internal/_xmap.js */function(global, require, module, exports) {var _curry2 = require(1054       ); // 1054 = ./_curry2
var _xfBase = require(1068       ); // 1068 = ./_xfBase

module.exports = function () {
  function XMap(f, xf) {
    this.xf = xf;
    this.f = f;
  }
  XMap.prototype['@@transducer/init'] = _xfBase.init;
  XMap.prototype['@@transducer/result'] = _xfBase.result;
  XMap.prototype['@@transducer/step'] = function (result, input) {
    return this.xf['@@transducer/step'](result, this.f(input));
  };

  return _curry2(function _xmap(f, xf) {
    return new XMap(f, xf);
  });
}();
}, 1067, null, "ramda/src/internal/_xmap.js");
__d(/* ramda/src/internal/_xfBase.js */function(global, require, module, exports) {module.exports = {
  init: function init() {
    return this.xf['@@transducer/init']();
  },
  result: function result(_result) {
    return this.xf['@@transducer/result'](_result);
  }
};
}, 1068, null, "ramda/src/internal/_xfBase.js");
__d(/* ramda/src/keys.js */function(global, require, module, exports) {var _curry1 = require(1050                ); // 1050 = ./internal/_curry1
var _has = require(1070             ); // 1070 = ./internal/_has
var _isArguments = require(1071                     ); // 1071 = ./internal/_isArguments

module.exports = function () {
  var hasEnumBug = !{ toString: null }.propertyIsEnumerable('toString');
  var nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];

  var hasArgsEnumBug = function () {
    'use strict';

    return arguments.propertyIsEnumerable('length');
  }();

  var contains = function contains(list, item) {
    var idx = 0;
    while (idx < list.length) {
      if (list[idx] === item) {
        return true;
      }
      idx += 1;
    }
    return false;
  };

  return typeof Object.keys === 'function' && !hasArgsEnumBug ? _curry1(function keys(obj) {
    return Object(obj) !== obj ? [] : Object.keys(obj);
  }) : _curry1(function keys(obj) {
    if (Object(obj) !== obj) {
      return [];
    }
    var prop, nIdx;
    var ks = [];
    var checkArgsLength = hasArgsEnumBug && _isArguments(obj);
    for (prop in obj) {
      if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {
        ks[ks.length] = prop;
      }
    }
    if (hasEnumBug) {
      nIdx = nonEnumerableProps.length - 1;
      while (nIdx >= 0) {
        prop = nonEnumerableProps[nIdx];
        if (_has(prop, obj) && !contains(ks, prop)) {
          ks[ks.length] = prop;
        }
        nIdx -= 1;
      }
    }
    return ks;
  });
}();
}, 1069, null, "ramda/src/keys.js");
__d(/* ramda/src/internal/_has.js */function(global, require, module, exports) {module.exports = function _has(prop, obj) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
};
}, 1070, null, "ramda/src/internal/_has.js");
__d(/* ramda/src/internal/_isArguments.js */function(global, require, module, exports) {var _has = require(1070    ); // 1070 = ./_has

module.exports = function () {
  var toString = Object.prototype.toString;
  return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {
    return toString.call(x) === '[object Arguments]';
  } : function _isArguments(x) {
    return _has('callee', x);
  };
}();
}, 1071, null, "ramda/src/internal/_isArguments.js");
__d(/* ramda/src/max.js */function(global, require, module, exports) {var _curry2 = require(1054                ); // 1054 = ./internal/_curry2

module.exports = _curry2(function max(a, b) {
  return b > a ? b : a;
});
}, 1072, null, "ramda/src/max.js");
__d(/* ramda/src/reduce.js */function(global, require, module, exports) {var _curry3 = require(1074                ); // 1074 = ./internal/_curry3
var _reduce = require(1062                ); // 1062 = ./internal/_reduce

module.exports = _curry3(_reduce);
}, 1073, null, "ramda/src/reduce.js");
__d(/* ramda/src/internal/_curry3.js */function(global, require, module, exports) {var _curry1 = require(1050       ); // 1050 = ./_curry1
var _curry2 = require(1054       ); // 1054 = ./_curry2
var _isPlaceholder = require(1051              ); // 1051 = ./_isPlaceholder

module.exports = function _curry3(fn) {
  return function f3(a, b, c) {
    switch (arguments.length) {
      case 0:
        return f3;
      case 1:
        return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {
          return fn(a, _b, _c);
        });
      case 2:
        return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {
          return fn(_a, b, _c);
        }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {
          return fn(a, _b, _c);
        }) : _curry1(function (_c) {
          return fn(a, b, _c);
        });
      default:
        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {
          return fn(_a, _b, c);
        }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {
          return fn(_a, b, _c);
        }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {
          return fn(a, _b, _c);
        }) : _isPlaceholder(a) ? _curry1(function (_a) {
          return fn(_a, b, c);
        }) : _isPlaceholder(b) ? _curry1(function (_b) {
          return fn(a, _b, c);
        }) : _isPlaceholder(c) ? _curry1(function (_c) {
          return fn(a, b, _c);
        }) : fn(a, b, c);
    }
  };
};
}, 1074, null, "ramda/src/internal/_curry3.js");
__d(/* ramda/src/isNil.js */function(global, require, module, exports) {var _curry1 = require(1050                ); // 1050 = ./internal/_curry1

module.exports = _curry1(function isNil(x) {
  return x == null;
});
}, 1075, null, "ramda/src/isNil.js");
__d(/* ramda/src/identity.js */function(global, require, module, exports) {var _curry1 = require(1050                ); // 1050 = ./internal/_curry1
var _identity = require(1077                  ); // 1077 = ./internal/_identity

module.exports = _curry1(_identity);
}, 1076, null, "ramda/src/identity.js");
__d(/* ramda/src/internal/_identity.js */function(global, require, module, exports) {module.exports = function _identity(x) {
  return x;
};
}, 1077, null, "ramda/src/internal/_identity.js");
__d(/* ramda/src/is.js */function(global, require, module, exports) {var _curry2 = require(1054                ); // 1054 = ./internal/_curry2

module.exports = _curry2(function is(Ctor, val) {
  return val != null && val.constructor === Ctor || val instanceof Ctor;
});
}, 1078, null, "ramda/src/is.js");
__d(/* ramda/src/T.js */function(global, require, module, exports) {var always = require(1080      ); // 1080 = ./always

module.exports = always(true);
}, 1079, null, "ramda/src/T.js");
__d(/* ramda/src/always.js */function(global, require, module, exports) {var _curry1 = require(1050                ); // 1050 = ./internal/_curry1

module.exports = _curry1(function always(val) {
  return function () {
    return val;
  };
});
}, 1080, null, "ramda/src/always.js");
__d(/* ramda/src/gte.js */function(global, require, module, exports) {var _curry2 = require(1054                ); // 1054 = ./internal/_curry2

module.exports = _curry2(function gte(a, b) {
  return a >= b;
});
}, 1081, null, "ramda/src/gte.js");
__d(/* ramda/src/complement.js */function(global, require, module, exports) {var lift = require(1083    ); // 1083 = ./lift
var not = require(1087   ); // 1087 = ./not

module.exports = lift(not);
}, 1082, null, "ramda/src/complement.js");
__d(/* ramda/src/lift.js */function(global, require, module, exports) {var _curry1 = require(1050                ); // 1050 = ./internal/_curry1
var liftN = require(1084     ); // 1084 = ./liftN

module.exports = _curry1(function lift(fn) {
  return liftN(fn.length, fn);
});
}, 1083, null, "ramda/src/lift.js");
__d(/* ramda/src/liftN.js */function(global, require, module, exports) {var _curry2 = require(1054                ); // 1054 = ./internal/_curry2
var _reduce = require(1062                ); // 1062 = ./internal/_reduce
var ap = require(1085  ); // 1085 = ./ap
var curryN = require(1052      ); // 1052 = ./curryN
var map = require(1057   ); // 1057 = ./map

module.exports = _curry2(function liftN(arity, fn) {
  var lifted = curryN(arity, fn);
  return curryN(arity, function () {
    return _reduce(ap, map(lifted, arguments[0]), Array.prototype.slice.call(arguments, 1));
  });
});
}, 1084, null, "ramda/src/liftN.js");
__d(/* ramda/src/ap.js */function(global, require, module, exports) {var _concat = require(1086                ); // 1086 = ./internal/_concat
var _curry2 = require(1054                ); // 1054 = ./internal/_curry2
var _reduce = require(1062                ); // 1062 = ./internal/_reduce
var map = require(1057   ); // 1057 = ./map

module.exports = _curry2(function ap(applyF, applyX) {
  return typeof applyX['fantasy-land/ap'] === 'function' ? applyX['fantasy-land/ap'](applyF) : typeof applyF.ap === 'function' ? applyF.ap(applyX) : typeof applyF === 'function' ? function (x) {
    return applyF(x)(applyX(x));
  } : _reduce(function (acc, f) {
    return _concat(acc, map(f, applyX));
  }, [], applyF);
});
}, 1085, null, "ramda/src/ap.js");
__d(/* ramda/src/internal/_concat.js */function(global, require, module, exports) {
module.exports = function _concat(set1, set2) {
  set1 = set1 || [];
  set2 = set2 || [];
  var idx;
  var len1 = set1.length;
  var len2 = set2.length;
  var result = [];

  idx = 0;
  while (idx < len1) {
    result[result.length] = set1[idx];
    idx += 1;
  }
  idx = 0;
  while (idx < len2) {
    result[result.length] = set2[idx];
    idx += 1;
  }
  return result;
};
}, 1086, null, "ramda/src/internal/_concat.js");
__d(/* ramda/src/not.js */function(global, require, module, exports) {var _curry1 = require(1050                ); // 1050 = ./internal/_curry1

module.exports = _curry1(function not(a) {
  return !a;
});
}, 1087, null, "ramda/src/not.js");
__d(/* ramda/src/eqProps.js */function(global, require, module, exports) {var _curry3 = require(1074                ); // 1074 = ./internal/_curry3
var equals = require(1089      ); // 1089 = ./equals

module.exports = _curry3(function eqProps(prop, obj1, obj2) {
  return equals(obj1[prop], obj2[prop]);
});
}, 1088, null, "ramda/src/eqProps.js");
__d(/* ramda/src/equals.js */function(global, require, module, exports) {var _curry2 = require(1054                ); // 1054 = ./internal/_curry2
var _equals = require(1090                ); // 1090 = ./internal/_equals

module.exports = _curry2(function equals(a, b) {
  return _equals(a, b, [], []);
});
}, 1089, null, "ramda/src/equals.js");
__d(/* ramda/src/internal/_equals.js */function(global, require, module, exports) {var _arrayFromIterator = require(1091                  ); // 1091 = ./_arrayFromIterator
var _functionName = require(1092             ); // 1092 = ./_functionName
var _has = require(1070    ); // 1070 = ./_has
var identical = require(1093          ); // 1093 = ../identical
var keys = require(1069     ); // 1069 = ../keys
var type = require(1094     ); // 1094 = ../type

module.exports = function _equals(a, b, stackA, stackB) {
  if (identical(a, b)) {
    return true;
  }

  if (type(a) !== type(b)) {
    return false;
  }

  if (a == null || b == null) {
    return false;
  }

  if (typeof a['fantasy-land/equals'] === 'function' || typeof b['fantasy-land/equals'] === 'function') {
    return typeof a['fantasy-land/equals'] === 'function' && a['fantasy-land/equals'](b) && typeof b['fantasy-land/equals'] === 'function' && b['fantasy-land/equals'](a);
  }

  if (typeof a.equals === 'function' || typeof b.equals === 'function') {
    return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);
  }

  switch (type(a)) {
    case 'Arguments':
    case 'Array':
    case 'Object':
      if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {
        return a === b;
      }
      break;
    case 'Boolean':
    case 'Number':
    case 'String':
      if (!(typeof a === typeof b && identical(a.valueOf(), b.valueOf()))) {
        return false;
      }
      break;
    case 'Date':
      if (!identical(a.valueOf(), b.valueOf())) {
        return false;
      }
      break;
    case 'Error':
      return a.name === b.name && a.message === b.message;
    case 'RegExp':
      if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {
        return false;
      }
      break;
    case 'Map':
    case 'Set':
      if (!_equals(_arrayFromIterator(a.entries()), _arrayFromIterator(b.entries()), stackA, stackB)) {
        return false;
      }
      break;
    case 'Int8Array':
    case 'Uint8Array':
    case 'Uint8ClampedArray':
    case 'Int16Array':
    case 'Uint16Array':
    case 'Int32Array':
    case 'Uint32Array':
    case 'Float32Array':
    case 'Float64Array':
      break;
    case 'ArrayBuffer':
      break;
    default:
      return false;
  }

  var keysA = keys(a);
  if (keysA.length !== keys(b).length) {
    return false;
  }

  var idx = stackA.length - 1;
  while (idx >= 0) {
    if (stackA[idx] === a) {
      return stackB[idx] === b;
    }
    idx -= 1;
  }

  stackA.push(a);
  stackB.push(b);
  idx = keysA.length - 1;
  while (idx >= 0) {
    var key = keysA[idx];
    if (!(_has(key, b) && _equals(b[key], a[key], stackA, stackB))) {
      return false;
    }
    idx -= 1;
  }
  stackA.pop();
  stackB.pop();
  return true;
};
}, 1090, null, "ramda/src/internal/_equals.js");
__d(/* ramda/src/internal/_arrayFromIterator.js */function(global, require, module, exports) {module.exports = function _arrayFromIterator(iter) {
  var list = [];
  var next;
  while (!(next = iter.next()).done) {
    list.push(next.value);
  }
  return list;
};
}, 1091, null, "ramda/src/internal/_arrayFromIterator.js");
__d(/* ramda/src/internal/_functionName.js */function(global, require, module, exports) {module.exports = function _functionName(f) {
  var match = String(f).match(/^function (\w*)/);
  return match == null ? '' : match[1];
};
}, 1092, null, "ramda/src/internal/_functionName.js");
__d(/* ramda/src/identical.js */function(global, require, module, exports) {var _curry2 = require(1054                ); // 1054 = ./internal/_curry2

module.exports = _curry2(function identical(a, b) {
  if (a === b) {
    return a !== 0 || 1 / a === 1 / b;
  } else {
    return a !== a && b !== b;
  }
});
}, 1093, null, "ramda/src/identical.js");
__d(/* ramda/src/type.js */function(global, require, module, exports) {var _curry1 = require(1050                ); // 1050 = ./internal/_curry1

module.exports = _curry1(function type(val) {
  return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);
});
}, 1094, null, "ramda/src/type.js");
__d(/* ramda/src/isEmpty.js */function(global, require, module, exports) {var _curry1 = require(1050                ); // 1050 = ./internal/_curry1
var empty = require(1096     ); // 1096 = ./empty
var equals = require(1089      ); // 1089 = ./equals

module.exports = _curry1(function isEmpty(x) {
  return x != null && equals(x, empty(x));
});
}, 1095, null, "ramda/src/isEmpty.js");
__d(/* ramda/src/empty.js */function(global, require, module, exports) {var _curry1 = require(1050                ); // 1050 = ./internal/_curry1
var _isArguments = require(1071                     ); // 1071 = ./internal/_isArguments
var _isArray = require(1059                 ); // 1059 = ./internal/_isArray
var _isObject = require(1097                  ); // 1097 = ./internal/_isObject
var _isString = require(1064                  ); // 1064 = ./internal/_isString

module.exports = _curry1(function empty(x) {
  return x != null && typeof x['fantasy-land/empty'] === 'function' ? x['fantasy-land/empty']() : x != null && x.constructor != null && typeof x.constructor['fantasy-land/empty'] === 'function' ? x.constructor['fantasy-land/empty']() : x != null && typeof x.empty === 'function' ? x.empty() : x != null && x.constructor != null && typeof x.constructor.empty === 'function' ? x.constructor.empty() : _isArray(x) ? [] : _isString(x) ? '' : _isObject(x) ? {} : _isArguments(x) ? function () {
    return arguments;
  }() : void 0;
});
}, 1096, null, "ramda/src/empty.js");
__d(/* ramda/src/internal/_isObject.js */function(global, require, module, exports) {module.exports = function _isObject(x) {
  return Object.prototype.toString.call(x) === '[object Object]';
};
}, 1097, null, "ramda/src/internal/_isObject.js");
__d(/* ramda/src/anyPass.js */function(global, require, module, exports) {var _curry1 = require(1050                ); // 1050 = ./internal/_curry1
var curryN = require(1052      ); // 1052 = ./curryN
var max = require(1072   ); // 1072 = ./max
var pluck = require(1099     ); // 1099 = ./pluck
var reduce = require(1073      ); // 1073 = ./reduce

module.exports = _curry1(function anyPass(preds) {
  return curryN(reduce(max, 0, pluck('length', preds)), function () {
    var idx = 0;
    var len = preds.length;
    while (idx < len) {
      if (preds[idx].apply(this, arguments)) {
        return true;
      }
      idx += 1;
    }
    return false;
  });
});
}, 1098, null, "ramda/src/anyPass.js");
__d(/* ramda/src/pluck.js */function(global, require, module, exports) {var _curry2 = require(1054                ); // 1054 = ./internal/_curry2
var map = require(1057   ); // 1057 = ./map
var prop = require(1100    ); // 1100 = ./prop

module.exports = _curry2(function pluck(p, list) {
  return map(prop(p), list);
});
}, 1099, null, "ramda/src/pluck.js");
__d(/* ramda/src/prop.js */function(global, require, module, exports) {var _curry2 = require(1054                ); // 1054 = ./internal/_curry2

module.exports = _curry2(function prop(p, obj) {
  return obj[p];
});
}, 1100, null, "ramda/src/prop.js");
__d(/* ramda/src/pipe.js */function(global, require, module, exports) {var _arity = require(1053               ); // 1053 = ./internal/_arity
var _pipe = require(1102              ); // 1102 = ./internal/_pipe
var reduce = require(1073      ); // 1073 = ./reduce
var tail = require(1103    ); // 1103 = ./tail

module.exports = function pipe() {
  if (arguments.length === 0) {
    throw new Error('pipe requires at least one argument');
  }
  return _arity(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));
};
}, 1101, null, "ramda/src/pipe.js");
__d(/* ramda/src/internal/_pipe.js */function(global, require, module, exports) {module.exports = function _pipe(f, g) {
  return function () {
    return g.call(this, f.apply(this, arguments));
  };
};
}, 1102, null, "ramda/src/internal/_pipe.js");
__d(/* ramda/src/tail.js */function(global, require, module, exports) {var _checkForMethod = require(1104                        ); // 1104 = ./internal/_checkForMethod
var _curry1 = require(1050                ); // 1050 = ./internal/_curry1
var slice = require(1105     ); // 1105 = ./slice

module.exports = _curry1(_checkForMethod('tail', slice(1, Infinity)));
}, 1103, null, "ramda/src/tail.js");
__d(/* ramda/src/internal/_checkForMethod.js */function(global, require, module, exports) {var _isArray = require(1059        ); // 1059 = ./_isArray

module.exports = function _checkForMethod(methodname, fn) {
  return function () {
    var length = arguments.length;
    if (length === 0) {
      return fn();
    }
    var obj = arguments[length - 1];
    return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));
  };
};
}, 1104, null, "ramda/src/internal/_checkForMethod.js");
__d(/* ramda/src/slice.js */function(global, require, module, exports) {var _checkForMethod = require(1104                        ); // 1104 = ./internal/_checkForMethod
var _curry3 = require(1074                ); // 1074 = ./internal/_curry3

module.exports = _curry3(_checkForMethod('slice', function slice(fromIndex, toIndex, list) {
  return Array.prototype.slice.call(list, fromIndex, toIndex);
}));
}, 1105, null, "ramda/src/slice.js");
__d(/* ramda/src/toPairs.js */function(global, require, module, exports) {var _curry1 = require(1050                ); // 1050 = ./internal/_curry1
var _has = require(1070             ); // 1070 = ./internal/_has

module.exports = _curry1(function toPairs(obj) {
  var pairs = [];
  for (var prop in obj) {
    if (_has(prop, obj)) {
      pairs[pairs.length] = [prop, obj[prop]];
    }
  }
  return pairs;
});
}, 1106, null, "ramda/src/toPairs.js");
__d(/* ramda/src/adjust.js */function(global, require, module, exports) {var _concat = require(1086                ); // 1086 = ./internal/_concat
var _curry3 = require(1074                ); // 1074 = ./internal/_curry3

module.exports = _curry3(function adjust(fn, idx, list) {
  if (idx >= list.length || idx < -list.length) {
    return list;
  }
  var start = idx < 0 ? list.length : 0;
  var _idx = start + idx;
  var _list = _concat(list);
  _list[_idx] = fn(list[_idx]);
  return _list;
});
}, 1107, null, "ramda/src/adjust.js");
__d(/* ramda/src/fromPairs.js */function(global, require, module, exports) {var _curry1 = require(1050                ); // 1050 = ./internal/_curry1

module.exports = _curry1(function fromPairs(pairs) {
  var result = {};
  var idx = 0;
  while (idx < pairs.length) {
    result[pairs[idx][0]] = pairs[idx][1];
    idx += 1;
  }
  return result;
});
}, 1108, null, "ramda/src/fromPairs.js");
__d(/* ramda/src/range.js */function(global, require, module, exports) {var _curry2 = require(1054                ); // 1054 = ./internal/_curry2
var _isNumber = require(1110                  ); // 1110 = ./internal/_isNumber

module.exports = _curry2(function range(from, to) {
  if (!(_isNumber(from) && _isNumber(to))) {
    throw new TypeError('Both arguments to range must be numbers');
  }
  var result = [];
  var n = from;
  while (n < to) {
    result.push(n);
    n += 1;
  }
  return result;
});
}, 1109, null, "ramda/src/range.js");
__d(/* ramda/src/internal/_isNumber.js */function(global, require, module, exports) {module.exports = function _isNumber(x) {
  return Object.prototype.toString.call(x) === '[object Number]';
};
}, 1110, null, "ramda/src/internal/_isNumber.js");
__d(/* ramda/src/split.js */function(global, require, module, exports) {var invoker = require(1112       ); // 1112 = ./invoker

module.exports = invoker(1, 'split');
}, 1111, null, "ramda/src/split.js");
__d(/* ramda/src/invoker.js */function(global, require, module, exports) {var _curry2 = require(1054                ); // 1054 = ./internal/_curry2
var _isFunction = require(1113                    ); // 1113 = ./internal/_isFunction
var curryN = require(1052      ); // 1052 = ./curryN
var toString = require(1114        ); // 1114 = ./toString

module.exports = _curry2(function invoker(arity, method) {
  return curryN(arity + 1, function () {
    var target = arguments[arity];
    if (target != null && _isFunction(target[method])) {
      return target[method].apply(target, Array.prototype.slice.call(arguments, 0, arity));
    }
    throw new TypeError(toString(target) + ' does not have a method named "' + method + '"');
  });
});
}, 1112, null, "ramda/src/invoker.js");
__d(/* ramda/src/internal/_isFunction.js */function(global, require, module, exports) {module.exports = function _isFunction(x) {
  return Object.prototype.toString.call(x) === '[object Function]';
};
}, 1113, null, "ramda/src/internal/_isFunction.js");
__d(/* ramda/src/toString.js */function(global, require, module, exports) {var _curry1 = require(1050                ); // 1050 = ./internal/_curry1
var _toString = require(1115                  ); // 1115 = ./internal/_toString

module.exports = _curry1(function toString(val) {
  return _toString(val, []);
});
}, 1114, null, "ramda/src/toString.js");
__d(/* ramda/src/internal/_toString.js */function(global, require, module, exports) {var _contains = require(1116         ); // 1116 = ./_contains
var _map = require(1061    ); // 1061 = ./_map
var _quote = require(1118      ); // 1118 = ./_quote
var _toISOString = require(1119            ); // 1119 = ./_toISOString
var keys = require(1069     ); // 1069 = ../keys
var reject = require(1120       ); // 1120 = ../reject

module.exports = function _toString(x, seen) {
  var recur = function recur(y) {
    var xs = seen.concat([x]);
    return _contains(y, xs) ? '<Circular>' : _toString(y, xs);
  };

  var mapPairs = function mapPairs(obj, keys) {
    return _map(function (k) {
      return _quote(k) + ': ' + recur(obj[k]);
    }, keys.slice().sort());
  };

  switch (Object.prototype.toString.call(x)) {
    case '[object Arguments]':
      return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';
    case '[object Array]':
      return '[' + _map(recur, x).concat(mapPairs(x, reject(function (k) {
        return (/^\d+$/.test(k)
        );
      }, keys(x)))).join(', ') + ']';
    case '[object Boolean]':
      return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();
    case '[object Date]':
      return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';
    case '[object Null]':
      return 'null';
    case '[object Number]':
      return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);
    case '[object String]':
      return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);
    case '[object Undefined]':
      return 'undefined';
    default:
      if (typeof x.toString === 'function') {
        var repr = x.toString();
        if (repr !== '[object Object]') {
          return repr;
        }
      }
      return '{' + mapPairs(x, keys(x)).join(', ') + '}';
  }
};
}, 1115, null, "ramda/src/internal/_toString.js");
__d(/* ramda/src/internal/_contains.js */function(global, require, module, exports) {var _indexOf = require(1117        ); // 1117 = ./_indexOf

module.exports = function _contains(a, list) {
  return _indexOf(list, a, 0) >= 0;
};
}, 1116, null, "ramda/src/internal/_contains.js");
__d(/* ramda/src/internal/_indexOf.js */function(global, require, module, exports) {var equals = require(1089       ); // 1089 = ../equals

module.exports = function _indexOf(list, a, idx) {
  var inf, item;

  if (typeof list.indexOf === 'function') {
    switch (typeof a) {
      case 'number':
        if (a === 0) {
          inf = 1 / a;
          while (idx < list.length) {
            item = list[idx];
            if (item === 0 && 1 / item === inf) {
              return idx;
            }
            idx += 1;
          }
          return -1;
        } else if (a !== a) {
          while (idx < list.length) {
            item = list[idx];
            if (typeof item === 'number' && item !== item) {
              return idx;
            }
            idx += 1;
          }
          return -1;
        }

        return list.indexOf(a, idx);

      case 'string':
      case 'boolean':
      case 'function':
      case 'undefined':
        return list.indexOf(a, idx);

      case 'object':
        if (a === null) {
          return list.indexOf(a, idx);
        }
    }
  }

  while (idx < list.length) {
    if (equals(list[idx], a)) {
      return idx;
    }
    idx += 1;
  }
  return -1;
};
}, 1117, null, "ramda/src/internal/_indexOf.js");
__d(/* ramda/src/internal/_quote.js */function(global, require, module, exports) {module.exports = function _quote(s) {
  var escaped = s.replace(/\\/g, '\\\\').replace(/[\b]/g, '\\b').replace(/\f/g, '\\f').replace(/\n/g, '\\n').replace(/\r/g, '\\r').replace(/\t/g, '\\t').replace(/\v/g, '\\v').replace(/\0/g, '\\0');

  return '"' + escaped.replace(/"/g, '\\"') + '"';
};
}, 1118, null, "ramda/src/internal/_quote.js");
__d(/* ramda/src/internal/_toISOString.js */function(global, require, module, exports) {
module.exports = function () {
  var pad = function pad(n) {
    return (n < 10 ? '0' : '') + n;
  };

  return typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {
    return d.toISOString();
  } : function _toISOString(d) {
    return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';
  };
}();
}, 1119, null, "ramda/src/internal/_toISOString.js");
__d(/* ramda/src/reject.js */function(global, require, module, exports) {var _complement = require(1121                    ); // 1121 = ./internal/_complement
var _curry2 = require(1054                ); // 1054 = ./internal/_curry2
var filter = require(1122      ); // 1122 = ./filter

module.exports = _curry2(function reject(pred, filterable) {
  return filter(_complement(pred), filterable);
});
}, 1120, null, "ramda/src/reject.js");
__d(/* ramda/src/internal/_complement.js */function(global, require, module, exports) {module.exports = function _complement(f) {
  return function () {
    return !f.apply(this, arguments);
  };
};
}, 1121, null, "ramda/src/internal/_complement.js");
__d(/* ramda/src/filter.js */function(global, require, module, exports) {var _curry2 = require(1054                ); // 1054 = ./internal/_curry2
var _dispatchable = require(1058                      ); // 1058 = ./internal/_dispatchable
var _filter = require(1123                ); // 1123 = ./internal/_filter
var _isObject = require(1097                  ); // 1097 = ./internal/_isObject
var _reduce = require(1062                ); // 1062 = ./internal/_reduce
var _xfilter = require(1124                 ); // 1124 = ./internal/_xfilter
var keys = require(1069    ); // 1069 = ./keys

module.exports = _curry2(_dispatchable(['filter'], _xfilter, function (pred, filterable) {
  return _isObject(filterable) ? _reduce(function (acc, key) {
    if (pred(filterable[key])) {
      acc[key] = filterable[key];
    }
    return acc;
  }, {}, keys(filterable)) : _filter(pred, filterable);
}));
}, 1122, null, "ramda/src/filter.js");
__d(/* ramda/src/internal/_filter.js */function(global, require, module, exports) {module.exports = function _filter(fn, list) {
  var idx = 0;
  var len = list.length;
  var result = [];

  while (idx < len) {
    if (fn(list[idx])) {
      result[result.length] = list[idx];
    }
    idx += 1;
  }
  return result;
};
}, 1123, null, "ramda/src/internal/_filter.js");
__d(/* ramda/src/internal/_xfilter.js */function(global, require, module, exports) {var _curry2 = require(1054       ); // 1054 = ./_curry2
var _xfBase = require(1068       ); // 1068 = ./_xfBase

module.exports = function () {
  function XFilter(f, xf) {
    this.xf = xf;
    this.f = f;
  }
  XFilter.prototype['@@transducer/init'] = _xfBase.init;
  XFilter.prototype['@@transducer/result'] = _xfBase.result;
  XFilter.prototype['@@transducer/step'] = function (result, input) {
    return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;
  };

  return _curry2(function _xfilter(f, xf) {
    return new XFilter(f, xf);
  });
}();
}, 1124, null, "ramda/src/internal/_xfilter.js");
__d(/* ramda/src/path.js */function(global, require, module, exports) {var _curry2 = require(1054                ); // 1054 = ./internal/_curry2

module.exports = _curry2(function path(paths, obj) {
  var val = obj;
  var idx = 0;
  while (idx < paths.length) {
    if (val == null) {
      return;
    }
    val = val[paths[idx]];
    idx += 1;
  }
  return val;
});
}, 1125, null, "ramda/src/path.js");
__d(/* ramda/src/startsWith.js */function(global, require, module, exports) {var _curry2 = require(1054                ); // 1054 = ./internal/_curry2
var equals = require(1089      ); // 1089 = ./equals
var take = require(1127    ); // 1127 = ./take

module.exports = _curry2(function (prefix, list) {
  return equals(take(prefix.length, list), prefix);
});
}, 1126, null, "ramda/src/startsWith.js");
__d(/* ramda/src/take.js */function(global, require, module, exports) {var _curry2 = require(1054                ); // 1054 = ./internal/_curry2
var _dispatchable = require(1058                      ); // 1058 = ./internal/_dispatchable
var _xtake = require(1128               ); // 1128 = ./internal/_xtake
var slice = require(1105     ); // 1105 = ./slice

module.exports = _curry2(_dispatchable(['take'], _xtake, function take(n, xs) {
  return slice(0, n < 0 ? Infinity : n, xs);
}));
}, 1127, null, "ramda/src/take.js");
__d(/* ramda/src/internal/_xtake.js */function(global, require, module, exports) {var _curry2 = require(1054       ); // 1054 = ./_curry2
var _reduced = require(1129        ); // 1129 = ./_reduced
var _xfBase = require(1068       ); // 1068 = ./_xfBase

module.exports = function () {
  function XTake(n, xf) {
    this.xf = xf;
    this.n = n;
    this.i = 0;
  }
  XTake.prototype['@@transducer/init'] = _xfBase.init;
  XTake.prototype['@@transducer/result'] = _xfBase.result;
  XTake.prototype['@@transducer/step'] = function (result, input) {
    this.i += 1;
    var ret = this.n === 0 ? result : this.xf['@@transducer/step'](result, input);
    return this.n >= 0 && this.i >= this.n ? _reduced(ret) : ret;
  };

  return _curry2(function _xtake(n, xf) {
    return new XTake(n, xf);
  });
}();
}, 1128, null, "ramda/src/internal/_xtake.js");
__d(/* ramda/src/internal/_reduced.js */function(global, require, module, exports) {module.exports = function _reduced(x) {
  return x && x['@@transducer/reduced'] ? x : {
    '@@transducer/value': x,
    '@@transducer/reduced': true
  };
};
}, 1129, null, "ramda/src/internal/_reduced.js");
__d(/* ramda/src/endsWith.js */function(global, require, module, exports) {var _curry2 = require(1054                ); // 1054 = ./internal/_curry2
var equals = require(1089      ); // 1089 = ./equals
var takeLast = require(1131        ); // 1131 = ./takeLast

module.exports = _curry2(function (suffix, list) {
  return equals(takeLast(suffix.length, list), suffix);
});
}, 1130, null, "ramda/src/endsWith.js");
__d(/* ramda/src/takeLast.js */function(global, require, module, exports) {var _curry2 = require(1054                ); // 1054 = ./internal/_curry2
var drop = require(1132    ); // 1132 = ./drop

module.exports = _curry2(function takeLast(n, xs) {
  return drop(n >= 0 ? xs.length - n : 0, xs);
});
}, 1131, null, "ramda/src/takeLast.js");
__d(/* ramda/src/drop.js */function(global, require, module, exports) {var _curry2 = require(1054                ); // 1054 = ./internal/_curry2
var _dispatchable = require(1058                      ); // 1058 = ./internal/_dispatchable
var _xdrop = require(1133               ); // 1133 = ./internal/_xdrop
var slice = require(1105     ); // 1105 = ./slice

module.exports = _curry2(_dispatchable(['drop'], _xdrop, function drop(n, xs) {
  return slice(Math.max(0, n), Infinity, xs);
}));
}, 1132, null, "ramda/src/drop.js");
__d(/* ramda/src/internal/_xdrop.js */function(global, require, module, exports) {var _curry2 = require(1054       ); // 1054 = ./_curry2
var _xfBase = require(1068       ); // 1068 = ./_xfBase

module.exports = function () {
  function XDrop(n, xf) {
    this.xf = xf;
    this.n = n;
  }
  XDrop.prototype['@@transducer/init'] = _xfBase.init;
  XDrop.prototype['@@transducer/result'] = _xfBase.result;
  XDrop.prototype['@@transducer/step'] = function (result, input) {
    if (this.n > 0) {
      this.n -= 1;
      return result;
    }
    return this.xf['@@transducer/step'](result, input);
  };

  return _curry2(function _xdrop(n, xf) {
    return new XDrop(n, xf);
  });
}();
}, 1133, null, "ramda/src/internal/_xdrop.js");
__d(/* ramda/src/find.js */function(global, require, module, exports) {var _curry2 = require(1054                ); // 1054 = ./internal/_curry2
var _dispatchable = require(1058                      ); // 1058 = ./internal/_dispatchable
var _xfind = require(1135               ); // 1135 = ./internal/_xfind

module.exports = _curry2(_dispatchable(['find'], _xfind, function find(fn, list) {
  var idx = 0;
  var len = list.length;
  while (idx < len) {
    if (fn(list[idx])) {
      return list[idx];
    }
    idx += 1;
  }
}));
}, 1134, null, "ramda/src/find.js");
__d(/* ramda/src/internal/_xfind.js */function(global, require, module, exports) {var _curry2 = require(1054       ); // 1054 = ./_curry2
var _reduced = require(1129        ); // 1129 = ./_reduced
var _xfBase = require(1068       ); // 1068 = ./_xfBase

module.exports = function () {
  function XFind(f, xf) {
    this.xf = xf;
    this.f = f;
    this.found = false;
  }
  XFind.prototype['@@transducer/init'] = _xfBase.init;
  XFind.prototype['@@transducer/result'] = function (result) {
    if (!this.found) {
      result = this.xf['@@transducer/step'](result, void 0);
    }
    return this.xf['@@transducer/result'](result);
  };
  XFind.prototype['@@transducer/step'] = function (result, input) {
    if (this.f(input)) {
      this.found = true;
      result = _reduced(this.xf['@@transducer/step'](result, input));
    }
    return result;
  };

  return _curry2(function _xfind(f, xf) {
    return new XFind(f, xf);
  });
}();
}, 1135, null, "ramda/src/internal/_xfind.js");
__d(/* ramda/src/propEq.js */function(global, require, module, exports) {var _curry3 = require(1074                ); // 1074 = ./internal/_curry3
var equals = require(1089      ); // 1089 = ./equals

module.exports = _curry3(function propEq(name, val, obj) {
  return equals(val, obj[name]);
});
}, 1136, null, "ramda/src/propEq.js");
__d(/* ramda/src/findIndex.js */function(global, require, module, exports) {var _curry2 = require(1054                ); // 1054 = ./internal/_curry2
var _dispatchable = require(1058                      ); // 1058 = ./internal/_dispatchable
var _xfindIndex = require(1138                    ); // 1138 = ./internal/_xfindIndex

module.exports = _curry2(_dispatchable([], _xfindIndex, function findIndex(fn, list) {
  var idx = 0;
  var len = list.length;
  while (idx < len) {
    if (fn(list[idx])) {
      return idx;
    }
    idx += 1;
  }
  return -1;
}));
}, 1137, null, "ramda/src/findIndex.js");
__d(/* ramda/src/internal/_xfindIndex.js */function(global, require, module, exports) {var _curry2 = require(1054       ); // 1054 = ./_curry2
var _reduced = require(1129        ); // 1129 = ./_reduced
var _xfBase = require(1068       ); // 1068 = ./_xfBase

module.exports = function () {
  function XFindIndex(f, xf) {
    this.xf = xf;
    this.f = f;
    this.idx = -1;
    this.found = false;
  }
  XFindIndex.prototype['@@transducer/init'] = _xfBase.init;
  XFindIndex.prototype['@@transducer/result'] = function (result) {
    if (!this.found) {
      result = this.xf['@@transducer/step'](result, -1);
    }
    return this.xf['@@transducer/result'](result);
  };
  XFindIndex.prototype['@@transducer/step'] = function (result, input) {
    this.idx += 1;
    if (this.f(input)) {
      this.found = true;
      result = _reduced(this.xf['@@transducer/step'](result, this.idx));
    }
    return result;
  };

  return _curry2(function _xfindIndex(f, xf) {
    return new XFindIndex(f, xf);
  });
}();
}, 1138, null, "ramda/src/internal/_xfindIndex.js");
__d(/* rn-host-detect/index.js */function(global, require, module, exports) {'use strict';

function getByRemoteConfig(hostname) {
  var remoteModuleConfig = typeof window !== 'undefined' && window.__fbBatchedBridgeConfig && window.__fbBatchedBridgeConfig.remoteModuleConfig;
  if (!Array.isArray(remoteModuleConfig) || hostname !== 'localhost' && hostname !== '127.0.0.1') return hostname;

  var constants = (remoteModuleConfig.find(getConstants) || [])[1];
  if (constants) {
    var serverHost = constants.ServerHost || hostname;
    return serverHost.split(':')[0];
  }
  return hostname;
}

function getConstants(config) {
  return config && (config[0] === 'AndroidConstants' || config[0] === 'PlatformConstants');
}

module.exports = function (hostname) {
  if (typeof __fbBatchedBridge !== 'object' || hostname !== 'localhost' && hostname !== '127.0.0.1') {
    return hostname;
  }
  hostname = getByRemoteConfig(hostname);
  var originalWarn = console.warn;
  console.warn = function () {
    if (arguments[0] && arguments[0].indexOf('Requiring module \'NativeModules\' by name') > -1) return;
    return originalWarn.apply(console, arguments);
  };

  var NativeModules;
  var PlatformConstants;
  var AndroidConstants;
  if (typeof window === 'undefined' || !window.__DEV__ || typeof window.require !== 'function') {
    return hostname;
  }
  NativeModules = window.require('NativeModules');
  console.warn = originalWarn;
  if (!NativeModules || !NativeModules.PlatformConstants && !NativeModules.AndroidConstants) {
    return hostname;
  }
  PlatformConstants = NativeModules.PlatformConstants;
  AndroidConstants = NativeModules.AndroidConstants;

  var serverHost = (PlatformConstants ? PlatformConstants.ServerHost : AndroidConstants.ServerHost) || hostname;
  return serverHost.split(':')[0];
};
}, 1139, null, "rn-host-detect/index.js");
__d(/* socket.io-client/dist/socket.io.js */function(global, require, module, exports) {(function webpackUniversalModuleDefinition(root, factory) {
	if (typeof exports === 'object' && typeof module === 'object') module.exports = factory();else if (typeof define === 'function' && define.amd) define([], factory);else if (typeof exports === 'object') exports["io"] = factory();else root["io"] = factory();
})(this, function () {
	return function (modules) {
		var installedModules = {};

		function __webpack_require__(moduleId) {
			if (installedModules[moduleId]) return installedModules[moduleId].exports;

			var module = installedModules[moduleId] = { exports: {},
				id: moduleId,
				loaded: false
			};

			modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

			module.loaded = true;

			return module.exports;
		}

		__webpack_require__.m = modules;

		__webpack_require__.c = installedModules;

		__webpack_require__.p = "";

		return __webpack_require__(0);
	}([function (module, exports, __webpack_require__) {

		'use strict';

		var _typeof = typeof Symbol === "function" && typeof (typeof Symbol === 'function' ? Symbol.iterator : '@@iterator') === "symbol" ? function (obj) {
			return typeof obj;
		} : function (obj) {
			return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== (typeof Symbol === 'function' ? Symbol.prototype : '@@prototype') ? "symbol" : typeof obj;
		};

		var url = __webpack_require__(1);
		var parser = __webpack_require__(7);
		var Manager = __webpack_require__(17);
		var debug = __webpack_require__(3)('socket.io-client');

		module.exports = exports = lookup;

		var cache = exports.managers = {};

		function lookup(uri, opts) {
			if ((typeof uri === 'undefined' ? 'undefined' : _typeof(uri)) === 'object') {
				opts = uri;
				uri = undefined;
			}

			opts = opts || {};

			var parsed = url(uri);
			var source = parsed.source;
			var id = parsed.id;
			var path = parsed.path;
			var sameNamespace = cache[id] && path in cache[id].nsps;
			var newConnection = opts.forceNew || opts['force new connection'] || false === opts.multiplex || sameNamespace;

			var io;

			if (newConnection) {
				debug('ignoring socket cache for %s', source);
				io = Manager(source, opts);
			} else {
				if (!cache[id]) {
					debug('new io instance for %s', source);
					cache[id] = Manager(source, opts);
				}
				io = cache[id];
			}
			if (parsed.query && !opts.query) {
				opts.query = parsed.query;
			} else if (opts && 'object' === _typeof(opts.query)) {
				opts.query = encodeQueryString(opts.query);
			}
			return io.socket(parsed.path, opts);
		}

		function encodeQueryString(obj) {
			var str = [];
			for (var p in obj) {
				if (obj.hasOwnProperty(p)) {
					str.push(encodeURIComponent(p) + '=' + encodeURIComponent(obj[p]));
				}
			}
			return str.join('&');
		}


		exports.protocol = parser.protocol;

		exports.connect = lookup;

		exports.Manager = __webpack_require__(17);
		exports.Socket = __webpack_require__(44);
	}, function (module, exports, __webpack_require__) {
		(function (global) {
			'use strict';

			var parseuri = __webpack_require__(2);
			var debug = __webpack_require__(3)('socket.io-client:url');

			module.exports = url;

			function url(uri, loc) {
				var obj = uri;

				loc = loc || global.location;
				if (null == uri) uri = loc.protocol + '//' + loc.host;

				if ('string' === typeof uri) {
					if ('/' === uri.charAt(0)) {
						if ('/' === uri.charAt(1)) {
							uri = loc.protocol + uri;
						} else {
							uri = loc.host + uri;
						}
					}

					if (!/^(https?|wss?):\/\//.test(uri)) {
						debug('protocol-less url %s', uri);
						if ('undefined' !== typeof loc) {
							uri = loc.protocol + '//' + uri;
						} else {
							uri = 'https://' + uri;
						}
					}

					debug('parse %s', uri);
					obj = parseuri(uri);
				}

				if (!obj.port) {
					if (/^(http|ws)$/.test(obj.protocol)) {
						obj.port = '80';
					} else if (/^(http|ws)s$/.test(obj.protocol)) {
						obj.port = '443';
					}
				}

				obj.path = obj.path || '/';

				var ipv6 = obj.host.indexOf(':') !== -1;
				var host = ipv6 ? '[' + obj.host + ']' : obj.host;

				obj.id = obj.protocol + '://' + host + ':' + obj.port;

				obj.href = obj.protocol + '://' + host + (loc && loc.port === obj.port ? '' : ':' + obj.port);

				return obj;
			}
		}).call(exports, function () {
			return this;
		}());
	}, function (module, exports) {

		var re = /^(?:(?![^:@]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/;

		var parts = ['source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'];

		module.exports = function parseuri(str) {
			var src = str,
			    b = str.indexOf('['),
			    e = str.indexOf(']');

			if (b != -1 && e != -1) {
				str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);
			}

			var m = re.exec(str || ''),
			    uri = {},
			    i = 14;

			while (i--) {
				uri[parts[i]] = m[i] || '';
			}

			if (b != -1 && e != -1) {
				uri.source = src;
				uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');
				uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');
				uri.ipv6uri = true;
			}

			return uri;
		};
	}, function (module, exports, __webpack_require__) {
		(function (process) {

			exports = module.exports = __webpack_require__(5);
			exports.log = log;
			exports.formatArgs = formatArgs;
			exports.save = save;
			exports.load = load;
			exports.useColors = useColors;
			exports.storage = 'undefined' != typeof chrome && 'undefined' != typeof chrome.storage ? chrome.storage.local : localstorage();

			exports.colors = ['lightseagreen', 'forestgreen', 'goldenrod', 'dodgerblue', 'darkorchid', 'crimson'];

			function useColors() {
				return typeof document !== 'undefined' && 'WebkitAppearance' in document.documentElement.style || window.console && (console.firebug || console.exception && console.table) || navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31;
			}

			exports.formatters.j = function (v) {
				try {
					return JSON.stringify(v);
				} catch (err) {
					return '[UnexpectedJSONParseError]: ' + err.message;
				}
			};

			function formatArgs() {
				var args = arguments;
				var useColors = this.useColors;

				args[0] = (useColors ? '%c' : '') + this.namespace + (useColors ? ' %c' : ' ') + args[0] + (useColors ? '%c ' : ' ') + '+' + exports.humanize(this.diff);

				if (!useColors) return args;

				var c = 'color: ' + this.color;
				args = [args[0], c, 'color: inherit'].concat(Array.prototype.slice.call(args, 1));

				var index = 0;
				var lastC = 0;
				args[0].replace(/%[a-z%]/g, function (match) {
					if ('%%' === match) return;
					index++;
					if ('%c' === match) {
						lastC = index;
					}
				});

				args.splice(lastC, 0, c);
				return args;
			}

			function log() {
				return 'object' === typeof console && console.log && Function.prototype.apply.call(console.log, console, arguments);
			}

			function save(namespaces) {
				try {
					if (null == namespaces) {
						exports.storage.removeItem('debug');
					} else {
						exports.storage.debug = namespaces;
					}
				} catch (e) {}
			}

			function load() {
				var r;
				try {
					return exports.storage.debug;
				} catch (e) {}

				if (typeof process !== 'undefined' && 'env' in process) {
					return process.env.DEBUG;
				}
			}

			exports.enable(load());

			function localstorage() {
				try {
					return window.localStorage;
				} catch (e) {}
			}
		}).call(exports, __webpack_require__(4));
	}, function (module, exports) {
		var process = module.exports = {};

		var cachedSetTimeout;
		var cachedClearTimeout;

		function defaultSetTimout() {
			throw new Error('setTimeout has not been defined');
		}
		function defaultClearTimeout() {
			throw new Error('clearTimeout has not been defined');
		}
		(function () {
			try {
				if (typeof setTimeout === 'function') {
					cachedSetTimeout = setTimeout;
				} else {
					cachedSetTimeout = defaultSetTimout;
				}
			} catch (e) {
				cachedSetTimeout = defaultSetTimout;
			}
			try {
				if (typeof clearTimeout === 'function') {
					cachedClearTimeout = clearTimeout;
				} else {
					cachedClearTimeout = defaultClearTimeout;
				}
			} catch (e) {
				cachedClearTimeout = defaultClearTimeout;
			}
		})();
		function runTimeout(fun) {
			if (cachedSetTimeout === setTimeout) {
				return setTimeout(fun, 0);
			}

			if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
				cachedSetTimeout = setTimeout;
				return setTimeout(fun, 0);
			}
			try {
				return cachedSetTimeout(fun, 0);
			} catch (e) {
				try {
					return cachedSetTimeout.call(null, fun, 0);
				} catch (e) {
					return cachedSetTimeout.call(this, fun, 0);
				}
			}
		}
		function runClearTimeout(marker) {
			if (cachedClearTimeout === clearTimeout) {
				return clearTimeout(marker);
			}

			if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
				cachedClearTimeout = clearTimeout;
				return clearTimeout(marker);
			}
			try {
				return cachedClearTimeout(marker);
			} catch (e) {
				try {
					return cachedClearTimeout.call(null, marker);
				} catch (e) {
					return cachedClearTimeout.call(this, marker);
				}
			}
		}
		var queue = [];
		var draining = false;
		var currentQueue;
		var queueIndex = -1;

		function cleanUpNextTick() {
			if (!draining || !currentQueue) {
				return;
			}
			draining = false;
			if (currentQueue.length) {
				queue = currentQueue.concat(queue);
			} else {
				queueIndex = -1;
			}
			if (queue.length) {
				drainQueue();
			}
		}

		function drainQueue() {
			if (draining) {
				return;
			}
			var timeout = runTimeout(cleanUpNextTick);
			draining = true;

			var len = queue.length;
			while (len) {
				currentQueue = queue;
				queue = [];
				while (++queueIndex < len) {
					if (currentQueue) {
						currentQueue[queueIndex].run();
					}
				}
				queueIndex = -1;
				len = queue.length;
			}
			currentQueue = null;
			draining = false;
			runClearTimeout(timeout);
		}

		process.nextTick = function (fun) {
			var args = new Array(arguments.length - 1);
			if (arguments.length > 1) {
				for (var i = 1; i < arguments.length; i++) {
					args[i - 1] = arguments[i];
				}
			}
			queue.push(new Item(fun, args));
			if (queue.length === 1 && !draining) {
				runTimeout(drainQueue);
			}
		};

		function Item(fun, array) {
			this.fun = fun;
			this.array = array;
		}
		Item.prototype.run = function () {
			this.fun.apply(null, this.array);
		};
		process.title = 'browser';
		process.browser = true;
		process.env = {};
		process.argv = [];
		process.version = '';
		process.versions = {};

		function noop() {}

		process.on = noop;
		process.addListener = noop;
		process.once = noop;
		process.off = noop;
		process.removeListener = noop;
		process.removeAllListeners = noop;
		process.emit = noop;

		process.binding = function (name) {
			throw new Error('process.binding is not supported');
		};

		process.cwd = function () {
			return '/';
		};
		process.chdir = function (dir) {
			throw new Error('process.chdir is not supported');
		};
		process.umask = function () {
			return 0;
		};
	}, function (module, exports, __webpack_require__) {

		exports = module.exports = debug.debug = debug;
		exports.coerce = coerce;
		exports.disable = disable;
		exports.enable = enable;
		exports.enabled = enabled;
		exports.humanize = __webpack_require__(6);

		exports.names = [];
		exports.skips = [];

		exports.formatters = {};

		var prevColor = 0;

		var prevTime;

		function selectColor() {
			return exports.colors[prevColor++ % exports.colors.length];
		}

		function debug(namespace) {
			function disabled() {}
			disabled.enabled = false;

			function enabled() {

				var self = enabled;

				var curr = +new Date();
				var ms = curr - (prevTime || curr);
				self.diff = ms;
				self.prev = prevTime;
				self.curr = curr;
				prevTime = curr;

				if (null == self.useColors) self.useColors = exports.useColors();
				if (null == self.color && self.useColors) self.color = selectColor();

				var args = new Array(arguments.length);
				for (var i = 0; i < args.length; i++) {
					args[i] = arguments[i];
				}

				args[0] = exports.coerce(args[0]);

				if ('string' !== typeof args[0]) {
					args = ['%o'].concat(args);
				}

				var index = 0;
				args[0] = args[0].replace(/%([a-z%])/g, function (match, format) {
					if (match === '%%') return match;
					index++;
					var formatter = exports.formatters[format];
					if ('function' === typeof formatter) {
						var val = args[index];
						match = formatter.call(self, val);

						args.splice(index, 1);
						index--;
					}
					return match;
				});

				args = exports.formatArgs.apply(self, args);

				var logFn = enabled.log || exports.log || console.log.bind(console);
				logFn.apply(self, args);
			}
			enabled.enabled = true;

			var fn = exports.enabled(namespace) ? enabled : disabled;

			fn.namespace = namespace;

			return fn;
		}

		function enable(namespaces) {
			exports.save(namespaces);

			var split = (namespaces || '').split(/[\s,]+/);
			var len = split.length;

			for (var i = 0; i < len; i++) {
				if (!split[i]) continue;
				namespaces = split[i].replace(/[\\^$+?.()|[\]{}]/g, '\\$&').replace(/\*/g, '.*?');
				if (namespaces[0] === '-') {
					exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));
				} else {
					exports.names.push(new RegExp('^' + namespaces + '$'));
				}
			}
		}

		function disable() {
			exports.enable('');
		}

		function enabled(name) {
			var i, len;
			for (i = 0, len = exports.skips.length; i < len; i++) {
				if (exports.skips[i].test(name)) {
					return false;
				}
			}
			for (i = 0, len = exports.names.length; i < len; i++) {
				if (exports.names[i].test(name)) {
					return true;
				}
			}
			return false;
		}

		function coerce(val) {
			if (val instanceof Error) return val.stack || val.message;
			return val;
		}
	}, function (module, exports) {

		var s = 1000;
		var m = s * 60;
		var h = m * 60;
		var d = h * 24;
		var y = d * 365.25;

		module.exports = function (val, options) {
			options = options || {};
			var type = typeof val;
			if (type === 'string' && val.length > 0) {
				return parse(val);
			} else if (type === 'number' && isNaN(val) === false) {
				return options.long ? fmtLong(val) : fmtShort(val);
			}
			throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val));
		};

		function parse(str) {
			str = String(str);
			if (str.length > 10000) {
				return;
			}
			var match = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);
			if (!match) {
				return;
			}
			var n = parseFloat(match[1]);
			var type = (match[2] || 'ms').toLowerCase();
			switch (type) {
				case 'years':
				case 'year':
				case 'yrs':
				case 'yr':
				case 'y':
					return n * y;
				case 'days':
				case 'day':
				case 'd':
					return n * d;
				case 'hours':
				case 'hour':
				case 'hrs':
				case 'hr':
				case 'h':
					return n * h;
				case 'minutes':
				case 'minute':
				case 'mins':
				case 'min':
				case 'm':
					return n * m;
				case 'seconds':
				case 'second':
				case 'secs':
				case 'sec':
				case 's':
					return n * s;
				case 'milliseconds':
				case 'millisecond':
				case 'msecs':
				case 'msec':
				case 'ms':
					return n;
				default:
					return undefined;
			}
		}

		function fmtShort(ms) {
			if (ms >= d) {
				return Math.round(ms / d) + 'd';
			}
			if (ms >= h) {
				return Math.round(ms / h) + 'h';
			}
			if (ms >= m) {
				return Math.round(ms / m) + 'm';
			}
			if (ms >= s) {
				return Math.round(ms / s) + 's';
			}
			return ms + 'ms';
		}

		function fmtLong(ms) {
			return plural(ms, d, 'day') || plural(ms, h, 'hour') || plural(ms, m, 'minute') || plural(ms, s, 'second') || ms + ' ms';
		}

		function plural(ms, n, name) {
			if (ms < n) {
				return;
			}
			if (ms < n * 1.5) {
				return Math.floor(ms / n) + ' ' + name;
			}
			return Math.ceil(ms / n) + ' ' + name + 's';
		}
	}, function (module, exports, __webpack_require__) {

		var debug = __webpack_require__(8)('socket.io-parser');
		var json = __webpack_require__(11);
		var Emitter = __webpack_require__(13);
		var binary = __webpack_require__(14);
		var isBuf = __webpack_require__(16);

		exports.protocol = 4;

		exports.types = ['CONNECT', 'DISCONNECT', 'EVENT', 'ACK', 'ERROR', 'BINARY_EVENT', 'BINARY_ACK'];

		exports.CONNECT = 0;

		exports.DISCONNECT = 1;

		exports.EVENT = 2;

		exports.ACK = 3;

		exports.ERROR = 4;

		exports.BINARY_EVENT = 5;

		exports.BINARY_ACK = 6;

		exports.Encoder = Encoder;

		exports.Decoder = Decoder;

		function Encoder() {}

		Encoder.prototype.encode = function (obj, callback) {
			debug('encoding packet %j', obj);

			if (exports.BINARY_EVENT == obj.type || exports.BINARY_ACK == obj.type) {
				encodeAsBinary(obj, callback);
			} else {
				var encoding = encodeAsString(obj);
				callback([encoding]);
			}
		};

		function encodeAsString(obj) {
			var str = '';
			var nsp = false;

			str += obj.type;

			if (exports.BINARY_EVENT == obj.type || exports.BINARY_ACK == obj.type) {
				str += obj.attachments;
				str += '-';
			}

			if (obj.nsp && '/' != obj.nsp) {
				nsp = true;
				str += obj.nsp;
			}

			if (null != obj.id) {
				if (nsp) {
					str += ',';
					nsp = false;
				}
				str += obj.id;
			}

			if (null != obj.data) {
				if (nsp) str += ',';
				str += json.stringify(obj.data);
			}

			debug('encoded %j as %s', obj, str);
			return str;
		}

		function encodeAsBinary(obj, callback) {

			function writeEncoding(bloblessData) {
				var deconstruction = binary.deconstructPacket(bloblessData);
				var pack = encodeAsString(deconstruction.packet);
				var buffers = deconstruction.buffers;

				buffers.unshift(pack);
				callback(buffers);
			}

			binary.removeBlobs(obj, writeEncoding);
		}

		function Decoder() {
			this.reconstructor = null;
		}

		Emitter(Decoder.prototype);

		Decoder.prototype.add = function (obj) {
			var packet;
			if ('string' == typeof obj) {
				packet = decodeString(obj);
				if (exports.BINARY_EVENT == packet.type || exports.BINARY_ACK == packet.type) {
					this.reconstructor = new BinaryReconstructor(packet);

					if (this.reconstructor.reconPack.attachments === 0) {
						this.emit('decoded', packet);
					}
				} else {
					this.emit('decoded', packet);
				}
			} else if (isBuf(obj) || obj.base64) {
				if (!this.reconstructor) {
					throw new Error('got binary data when not reconstructing a packet');
				} else {
					packet = this.reconstructor.takeBinaryData(obj);
					if (packet) {
						this.reconstructor = null;
						this.emit('decoded', packet);
					}
				}
			} else {
				throw new Error('Unknown type: ' + obj);
			}
		};

		function decodeString(str) {
			var p = {};
			var i = 0;

			p.type = Number(str.charAt(0));
			if (null == exports.types[p.type]) return error();

			if (exports.BINARY_EVENT == p.type || exports.BINARY_ACK == p.type) {
				var buf = '';
				while (str.charAt(++i) != '-') {
					buf += str.charAt(i);
					if (i == str.length) break;
				}
				if (buf != Number(buf) || str.charAt(i) != '-') {
					throw new Error('Illegal attachments');
				}
				p.attachments = Number(buf);
			}

			if ('/' == str.charAt(i + 1)) {
				p.nsp = '';
				while (++i) {
					var c = str.charAt(i);
					if (',' == c) break;
					p.nsp += c;
					if (i == str.length) break;
				}
			} else {
				p.nsp = '/';
			}

			var next = str.charAt(i + 1);
			if ('' !== next && Number(next) == next) {
				p.id = '';
				while (++i) {
					var c = str.charAt(i);
					if (null == c || Number(c) != c) {
						--i;
						break;
					}
					p.id += str.charAt(i);
					if (i == str.length) break;
				}
				p.id = Number(p.id);
			}

			if (str.charAt(++i)) {
				p = tryParse(p, str.substr(i));
			}

			debug('decoded %s as %j', str, p);
			return p;
		}

		function tryParse(p, str) {
			try {
				p.data = json.parse(str);
			} catch (e) {
				return error();
			}
			return p;
		};

		Decoder.prototype.destroy = function () {
			if (this.reconstructor) {
				this.reconstructor.finishedReconstruction();
			}
		};

		function BinaryReconstructor(packet) {
			this.reconPack = packet;
			this.buffers = [];
		}

		BinaryReconstructor.prototype.takeBinaryData = function (binData) {
			this.buffers.push(binData);
			if (this.buffers.length == this.reconPack.attachments) {
				var packet = binary.reconstructPacket(this.reconPack, this.buffers);
				this.finishedReconstruction();
				return packet;
			}
			return null;
		};

		BinaryReconstructor.prototype.finishedReconstruction = function () {
			this.reconPack = null;
			this.buffers = [];
		};

		function error(data) {
			return {
				type: exports.ERROR,
				data: 'parser error'
			};
		}
	}, function (module, exports, __webpack_require__) {

		exports = module.exports = __webpack_require__(9);
		exports.log = log;
		exports.formatArgs = formatArgs;
		exports.save = save;
		exports.load = load;
		exports.useColors = useColors;
		exports.storage = 'undefined' != typeof chrome && 'undefined' != typeof chrome.storage ? chrome.storage.local : localstorage();

		exports.colors = ['lightseagreen', 'forestgreen', 'goldenrod', 'dodgerblue', 'darkorchid', 'crimson'];

		function useColors() {
			return 'WebkitAppearance' in document.documentElement.style || window.console && (console.firebug || console.exception && console.table) || navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31;
		}

		exports.formatters.j = function (v) {
			return JSON.stringify(v);
		};

		function formatArgs() {
			var args = arguments;
			var useColors = this.useColors;

			args[0] = (useColors ? '%c' : '') + this.namespace + (useColors ? ' %c' : ' ') + args[0] + (useColors ? '%c ' : ' ') + '+' + exports.humanize(this.diff);

			if (!useColors) return args;

			var c = 'color: ' + this.color;
			args = [args[0], c, 'color: inherit'].concat(Array.prototype.slice.call(args, 1));

			var index = 0;
			var lastC = 0;
			args[0].replace(/%[a-z%]/g, function (match) {
				if ('%%' === match) return;
				index++;
				if ('%c' === match) {
					lastC = index;
				}
			});

			args.splice(lastC, 0, c);
			return args;
		}

		function log() {
			return 'object' === typeof console && console.log && Function.prototype.apply.call(console.log, console, arguments);
		}

		function save(namespaces) {
			try {
				if (null == namespaces) {
					exports.storage.removeItem('debug');
				} else {
					exports.storage.debug = namespaces;
				}
			} catch (e) {}
		}

		function load() {
			var r;
			try {
				r = exports.storage.debug;
			} catch (e) {}
			return r;
		}

		exports.enable(load());

		function localstorage() {
			try {
				return window.localStorage;
			} catch (e) {}
		}
	}, function (module, exports, __webpack_require__) {

		exports = module.exports = debug;
		exports.coerce = coerce;
		exports.disable = disable;
		exports.enable = enable;
		exports.enabled = enabled;
		exports.humanize = __webpack_require__(10);

		exports.names = [];
		exports.skips = [];

		exports.formatters = {};

		var prevColor = 0;

		var prevTime;

		function selectColor() {
			return exports.colors[prevColor++ % exports.colors.length];
		}

		function debug(namespace) {
			function disabled() {}
			disabled.enabled = false;

			function enabled() {

				var self = enabled;

				var curr = +new Date();
				var ms = curr - (prevTime || curr);
				self.diff = ms;
				self.prev = prevTime;
				self.curr = curr;
				prevTime = curr;

				if (null == self.useColors) self.useColors = exports.useColors();
				if (null == self.color && self.useColors) self.color = selectColor();

				var args = Array.prototype.slice.call(arguments);

				args[0] = exports.coerce(args[0]);

				if ('string' !== typeof args[0]) {
					args = ['%o'].concat(args);
				}

				var index = 0;
				args[0] = args[0].replace(/%([a-z%])/g, function (match, format) {
					if (match === '%%') return match;
					index++;
					var formatter = exports.formatters[format];
					if ('function' === typeof formatter) {
						var val = args[index];
						match = formatter.call(self, val);

						args.splice(index, 1);
						index--;
					}
					return match;
				});

				if ('function' === typeof exports.formatArgs) {
					args = exports.formatArgs.apply(self, args);
				}
				var logFn = enabled.log || exports.log || console.log.bind(console);
				logFn.apply(self, args);
			}
			enabled.enabled = true;

			var fn = exports.enabled(namespace) ? enabled : disabled;

			fn.namespace = namespace;

			return fn;
		}

		function enable(namespaces) {
			exports.save(namespaces);

			var split = (namespaces || '').split(/[\s,]+/);
			var len = split.length;

			for (var i = 0; i < len; i++) {
				if (!split[i]) continue;
				namespaces = split[i].replace(/\*/g, '.*?');
				if (namespaces[0] === '-') {
					exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));
				} else {
					exports.names.push(new RegExp('^' + namespaces + '$'));
				}
			}
		}

		function disable() {
			exports.enable('');
		}

		function enabled(name) {
			var i, len;
			for (i = 0, len = exports.skips.length; i < len; i++) {
				if (exports.skips[i].test(name)) {
					return false;
				}
			}
			for (i = 0, len = exports.names.length; i < len; i++) {
				if (exports.names[i].test(name)) {
					return true;
				}
			}
			return false;
		}

		function coerce(val) {
			if (val instanceof Error) return val.stack || val.message;
			return val;
		}
	}, function (module, exports) {

		var s = 1000;
		var m = s * 60;
		var h = m * 60;
		var d = h * 24;
		var y = d * 365.25;

		module.exports = function (val, options) {
			options = options || {};
			if ('string' == typeof val) return parse(val);
			return options.long ? long(val) : short(val);
		};

		function parse(str) {
			str = '' + str;
			if (str.length > 10000) return;
			var match = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);
			if (!match) return;
			var n = parseFloat(match[1]);
			var type = (match[2] || 'ms').toLowerCase();
			switch (type) {
				case 'years':
				case 'year':
				case 'yrs':
				case 'yr':
				case 'y':
					return n * y;
				case 'days':
				case 'day':
				case 'd':
					return n * d;
				case 'hours':
				case 'hour':
				case 'hrs':
				case 'hr':
				case 'h':
					return n * h;
				case 'minutes':
				case 'minute':
				case 'mins':
				case 'min':
				case 'm':
					return n * m;
				case 'seconds':
				case 'second':
				case 'secs':
				case 'sec':
				case 's':
					return n * s;
				case 'milliseconds':
				case 'millisecond':
				case 'msecs':
				case 'msec':
				case 'ms':
					return n;
			}
		}

		function short(ms) {
			if (ms >= d) return Math.round(ms / d) + 'd';
			if (ms >= h) return Math.round(ms / h) + 'h';
			if (ms >= m) return Math.round(ms / m) + 'm';
			if (ms >= s) return Math.round(ms / s) + 's';
			return ms + 'ms';
		}

		function long(ms) {
			return plural(ms, d, 'day') || plural(ms, h, 'hour') || plural(ms, m, 'minute') || plural(ms, s, 'second') || ms + ' ms';
		}

		function plural(ms, n, name) {
			if (ms < n) return;
			if (ms < n * 1.5) return Math.floor(ms / n) + ' ' + name;
			return Math.ceil(ms / n) + ' ' + name + 's';
		}
	}, function (module, exports, __webpack_require__) {
		(function (module, global) {
			var define = false;

			;(function () {
				var isLoader = typeof define === "function" && define.amd;

				var objectTypes = {
					"function": true,
					"object": true
				};

				var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;

				var root = objectTypes[typeof window] && window || this,
				    freeGlobal = freeExports && objectTypes[typeof module] && module && !module.nodeType && typeof global == "object" && global;

				if (freeGlobal && (freeGlobal["global"] === freeGlobal || freeGlobal["window"] === freeGlobal || freeGlobal["self"] === freeGlobal)) {
					root = freeGlobal;
				}

				function runInContext(context, exports) {
					context || (context = root["Object"]());
					exports || (exports = root["Object"]());

					var Number = context["Number"] || root["Number"],
					    String = context["String"] || root["String"],
					    Object = context["Object"] || root["Object"],
					    Date = context["Date"] || root["Date"],
					    SyntaxError = context["SyntaxError"] || root["SyntaxError"],
					    TypeError = context["TypeError"] || root["TypeError"],
					    Math = context["Math"] || root["Math"],
					    nativeJSON = context["JSON"] || root["JSON"];

					if (typeof nativeJSON == "object" && nativeJSON) {
						exports.stringify = nativeJSON.stringify;
						exports.parse = nativeJSON.parse;
					}

					var objectProto = Object.prototype,
					    getClass = objectProto.toString,
					    _isProperty,
					    _forEach,
					    undef;

					var isExtended = new Date(-3509827334573292);
					try {
						isExtended = isExtended.getUTCFullYear() == -109252 && isExtended.getUTCMonth() === 0 && isExtended.getUTCDate() === 1 && isExtended.getUTCHours() == 10 && isExtended.getUTCMinutes() == 37 && isExtended.getUTCSeconds() == 6 && isExtended.getUTCMilliseconds() == 708;
					} catch (exception) {}

					function has(name) {
						if (has[name] !== undef) {
							return has[name];
						}
						var isSupported;
						if (name == "bug-string-char-index") {
							isSupported = "a"[0] != "a";
						} else if (name == "json") {
							isSupported = has("json-stringify") && has("json-parse");
						} else {
							var value,
							    serialized = '{"a":[1,true,false,null,"\\u0000\\b\\n\\f\\r\\t"]}';

							if (name == "json-stringify") {
								var stringify = exports.stringify,
								    stringifySupported = typeof stringify == "function" && isExtended;
								if (stringifySupported) {
									(value = function value() {
										return 1;
									}).toJSON = value;
									try {
										stringifySupported = stringify(0) === "0" && stringify(new Number()) === "0" && stringify(new String()) == '""' && stringify(getClass) === undef && stringify(undef) === undef && stringify() === undef && stringify(value) === "1" && stringify([value]) == "[1]" && stringify([undef]) == "[null]" && stringify(null) == "null" && stringify([undef, getClass, null]) == "[null,null,null]" && stringify({ "a": [value, true, false, null, "\x00\b\n\f\r\t"] }) == serialized && stringify(null, value) === "1" && stringify([1, 2], null, 1) == "[\n 1,\n 2\n]" && stringify(new Date(-8.64e15)) == '"-271821-04-20T00:00:00.000Z"' && stringify(new Date(8.64e15)) == '"+275760-09-13T00:00:00.000Z"' && stringify(new Date(-621987552e5)) == '"-000001-01-01T00:00:00.000Z"' && stringify(new Date(-1)) == '"1969-12-31T23:59:59.999Z"';
									} catch (exception) {
										stringifySupported = false;
									}
								}
								isSupported = stringifySupported;
							}

							if (name == "json-parse") {
								var parse = exports.parse;
								if (typeof parse == "function") {
									try {
										if (parse("0") === 0 && !parse(false)) {
											value = parse(serialized);
											var parseSupported = value["a"].length == 5 && value["a"][0] === 1;
											if (parseSupported) {
												try {
													parseSupported = !parse('"\t"');
												} catch (exception) {}
												if (parseSupported) {
													try {
														parseSupported = parse("01") !== 1;
													} catch (exception) {}
												}
												if (parseSupported) {
													try {
														parseSupported = parse("1.") !== 1;
													} catch (exception) {}
												}
											}
										}
									} catch (exception) {
										parseSupported = false;
									}
								}
								isSupported = parseSupported;
							}
						}
						return has[name] = !!isSupported;
					}

					if (!has("json")) {
						var functionClass = "[object Function]",
						    dateClass = "[object Date]",
						    numberClass = "[object Number]",
						    stringClass = "[object String]",
						    arrayClass = "[object Array]",
						    booleanClass = "[object Boolean]";

						var charIndexBuggy = has("bug-string-char-index");

						if (!isExtended) {
							var floor = Math.floor;

							var Months = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];

							var getDay = function getDay(year, month) {
								return Months[month] + 365 * (year - 1970) + floor((year - 1969 + (month = +(month > 1))) / 4) - floor((year - 1901 + month) / 100) + floor((year - 1601 + month) / 400);
							};
						}

						if (!(_isProperty = objectProto.hasOwnProperty)) {
							_isProperty = function isProperty(property) {
								var members = {},
								    constructor;
								if ((members.__proto__ = null, members.__proto__ = {
									"toString": 1
								}, members).toString != getClass) {
									_isProperty = function isProperty(property) {
										var original = this.__proto__,
										    result = property in (this.__proto__ = null, this);

										this.__proto__ = original;
										return result;
									};
								} else {
									constructor = members.constructor;

									_isProperty = function isProperty(property) {
										var parent = (this.constructor || constructor).prototype;
										return property in this && !(property in parent && this[property] === parent[property]);
									};
								}
								members = null;
								return _isProperty.call(this, property);
							};
						}

						_forEach = function forEach(object, callback) {
							var size = 0,
							    Properties,
							    members,
							    property;

							(Properties = function Properties() {
								this.valueOf = 0;
							}).prototype.valueOf = 0;

							members = new Properties();
							for (property in members) {
								if (_isProperty.call(members, property)) {
									size++;
								}
							}
							Properties = members = null;

							if (!size) {
								members = ["valueOf", "toString", "toLocaleString", "propertyIsEnumerable", "isPrototypeOf", "hasOwnProperty", "constructor"];

								_forEach = function forEach(object, callback) {
									var isFunction = getClass.call(object) == functionClass,
									    property,
									    length;
									var hasProperty = !isFunction && typeof object.constructor != "function" && objectTypes[typeof object.hasOwnProperty] && object.hasOwnProperty || _isProperty;
									for (property in object) {
										if (!(isFunction && property == "prototype") && hasProperty.call(object, property)) {
											callback(property);
										}
									}

									for (length = members.length; property = members[--length]; hasProperty.call(object, property) && callback(property)) {}
								};
							} else if (size == 2) {
								_forEach = function forEach(object, callback) {
									var members = {},
									    isFunction = getClass.call(object) == functionClass,
									    property;
									for (property in object) {
										if (!(isFunction && property == "prototype") && !_isProperty.call(members, property) && (members[property] = 1) && _isProperty.call(object, property)) {
											callback(property);
										}
									}
								};
							} else {
								_forEach = function forEach(object, callback) {
									var isFunction = getClass.call(object) == functionClass,
									    property,
									    isConstructor;
									for (property in object) {
										if (!(isFunction && property == "prototype") && _isProperty.call(object, property) && !(isConstructor = property === "constructor")) {
											callback(property);
										}
									}

									if (isConstructor || _isProperty.call(object, property = "constructor")) {
										callback(property);
									}
								};
							}
							return _forEach(object, callback);
						};

						if (!has("json-stringify")) {
							var Escapes = {
								92: "\\\\",
								34: '\\"',
								8: "\\b",
								12: "\\f",
								10: "\\n",
								13: "\\r",
								9: "\\t"
							};

							var leadingZeroes = "000000";
							var toPaddedString = function toPaddedString(width, value) {
								return (leadingZeroes + (value || 0)).slice(-width);
							};

							var unicodePrefix = '\\u00';
							var quote = function quote(value) {
								var result = '"',
								    index = 0,
								    length = value.length,
								    useCharIndex = !charIndexBuggy || length > 10;
								var symbols = useCharIndex && (charIndexBuggy ? value.split("") : value);
								for (; index < length; index++) {
									var charCode = value.charCodeAt(index);

									switch (charCode) {
										case 8:case 9:case 10:case 12:case 13:case 34:case 92:
											result += Escapes[charCode];
											break;
										default:
											if (charCode < 32) {
												result += unicodePrefix + toPaddedString(2, charCode.toString(16));
												break;
											}
											result += useCharIndex ? symbols[index] : value.charAt(index);
									}
								}
								return result + '"';
							};

							var serialize = function serialize(property, object, callback, properties, whitespace, indentation, stack) {
								var value, className, year, month, date, time, hours, minutes, seconds, milliseconds, results, element, index, length, prefix, result;
								try {
									value = object[property];
								} catch (exception) {}
								if (typeof value == "object" && value) {
									className = getClass.call(value);
									if (className == dateClass && !_isProperty.call(value, "toJSON")) {
										if (value > -1 / 0 && value < 1 / 0) {
											if (getDay) {
												date = floor(value / 864e5);
												for (year = floor(date / 365.2425) + 1970 - 1; getDay(year + 1, 0) <= date; year++) {}
												for (month = floor((date - getDay(year, 0)) / 30.42); getDay(year, month + 1) <= date; month++) {}
												date = 1 + date - getDay(year, month);

												time = (value % 864e5 + 864e5) % 864e5;

												hours = floor(time / 36e5) % 24;
												minutes = floor(time / 6e4) % 60;
												seconds = floor(time / 1e3) % 60;
												milliseconds = time % 1e3;
											} else {
												year = value.getUTCFullYear();
												month = value.getUTCMonth();
												date = value.getUTCDate();
												hours = value.getUTCHours();
												minutes = value.getUTCMinutes();
												seconds = value.getUTCSeconds();
												milliseconds = value.getUTCMilliseconds();
											}

											value = (year <= 0 || year >= 1e4 ? (year < 0 ? "-" : "+") + toPaddedString(6, year < 0 ? -year : year) : toPaddedString(4, year)) + "-" + toPaddedString(2, month + 1) + "-" + toPaddedString(2, date) + "T" + toPaddedString(2, hours) + ":" + toPaddedString(2, minutes) + ":" + toPaddedString(2, seconds) + "." + toPaddedString(3, milliseconds) + "Z";
										} else {
											value = null;
										}
									} else if (typeof value.toJSON == "function" && (className != numberClass && className != stringClass && className != arrayClass || _isProperty.call(value, "toJSON"))) {
										value = value.toJSON(property);
									}
								}
								if (callback) {
									value = callback.call(object, property, value);
								}
								if (value === null) {
									return "null";
								}
								className = getClass.call(value);
								if (className == booleanClass) {
									return "" + value;
								} else if (className == numberClass) {
									return value > -1 / 0 && value < 1 / 0 ? "" + value : "null";
								} else if (className == stringClass) {
									return quote("" + value);
								}

								if (typeof value == "object") {
									for (length = stack.length; length--;) {
										if (stack[length] === value) {
											throw TypeError();
										}
									}

									stack.push(value);
									results = [];

									prefix = indentation;
									indentation += whitespace;
									if (className == arrayClass) {
										for (index = 0, length = value.length; index < length; index++) {
											element = serialize(index, value, callback, properties, whitespace, indentation, stack);
											results.push(element === undef ? "null" : element);
										}
										result = results.length ? whitespace ? "[\n" + indentation + results.join(",\n" + indentation) + "\n" + prefix + "]" : "[" + results.join(",") + "]" : "[]";
									} else {
										_forEach(properties || value, function (property) {
											var element = serialize(property, value, callback, properties, whitespace, indentation, stack);
											if (element !== undef) {
												results.push(quote(property) + ":" + (whitespace ? " " : "") + element);
											}
										});
										result = results.length ? whitespace ? "{\n" + indentation + results.join(",\n" + indentation) + "\n" + prefix + "}" : "{" + results.join(",") + "}" : "{}";
									}

									stack.pop();
									return result;
								}
							};

							exports.stringify = function (source, filter, width) {
								var whitespace, callback, properties, className;
								if (objectTypes[typeof filter] && filter) {
									if ((className = getClass.call(filter)) == functionClass) {
										callback = filter;
									} else if (className == arrayClass) {
										properties = {};
										for (var index = 0, length = filter.length, value; index < length; value = filter[index++], (className = getClass.call(value), className == stringClass || className == numberClass) && (properties[value] = 1)) {}
									}
								}
								if (width) {
									if ((className = getClass.call(width)) == numberClass) {
										if ((width -= width % 1) > 0) {
											for (whitespace = "", width > 10 && (width = 10); whitespace.length < width; whitespace += " ") {}
										}
									} else if (className == stringClass) {
										whitespace = width.length <= 10 ? width : width.slice(0, 10);
									}
								}

								return serialize("", (value = {}, value[""] = source, value), callback, properties, whitespace, "", []);
							};
						}

						if (!has("json-parse")) {
							var fromCharCode = String.fromCharCode;

							var Unescapes = {
								92: "\\",
								34: '"',
								47: "/",
								98: "\b",
								116: "\t",
								110: "\n",
								102: "\f",
								114: "\r"
							};

							var Index, Source;

							var abort = function abort() {
								Index = Source = null;
								throw SyntaxError();
							};

							var lex = function lex() {
								var source = Source,
								    length = source.length,
								    value,
								    begin,
								    position,
								    isSigned,
								    charCode;
								while (Index < length) {
									charCode = source.charCodeAt(Index);
									switch (charCode) {
										case 9:case 10:case 13:case 32:
											Index++;
											break;
										case 123:case 125:case 91:case 93:case 58:case 44:
											value = charIndexBuggy ? source.charAt(Index) : source[Index];
											Index++;
											return value;
										case 34:
											for (value = "@", Index++; Index < length;) {
												charCode = source.charCodeAt(Index);
												if (charCode < 32) {
													abort();
												} else if (charCode == 92) {
													charCode = source.charCodeAt(++Index);
													switch (charCode) {
														case 92:case 34:case 47:case 98:case 116:case 110:case 102:case 114:
															value += Unescapes[charCode];
															Index++;
															break;
														case 117:
															begin = ++Index;
															for (position = Index + 4; Index < position; Index++) {
																charCode = source.charCodeAt(Index);

																if (!(charCode >= 48 && charCode <= 57 || charCode >= 97 && charCode <= 102 || charCode >= 65 && charCode <= 70)) {
																	abort();
																}
															}

															value += fromCharCode("0x" + source.slice(begin, Index));
															break;
														default:
															abort();
													}
												} else {
													if (charCode == 34) {
														break;
													}
													charCode = source.charCodeAt(Index);
													begin = Index;

													while (charCode >= 32 && charCode != 92 && charCode != 34) {
														charCode = source.charCodeAt(++Index);
													}

													value += source.slice(begin, Index);
												}
											}
											if (source.charCodeAt(Index) == 34) {
												Index++;
												return value;
											}

											abort();
										default:
											begin = Index;

											if (charCode == 45) {
												isSigned = true;
												charCode = source.charCodeAt(++Index);
											}

											if (charCode >= 48 && charCode <= 57) {
												if (charCode == 48 && (charCode = source.charCodeAt(Index + 1), charCode >= 48 && charCode <= 57)) {
													abort();
												}
												isSigned = false;

												for (; Index < length && (charCode = source.charCodeAt(Index), charCode >= 48 && charCode <= 57); Index++) {}

												if (source.charCodeAt(Index) == 46) {
													position = ++Index;

													for (; position < length && (charCode = source.charCodeAt(position), charCode >= 48 && charCode <= 57); position++) {}
													if (position == Index) {
														abort();
													}
													Index = position;
												}

												charCode = source.charCodeAt(Index);
												if (charCode == 101 || charCode == 69) {
													charCode = source.charCodeAt(++Index);

													if (charCode == 43 || charCode == 45) {
														Index++;
													}

													for (position = Index; position < length && (charCode = source.charCodeAt(position), charCode >= 48 && charCode <= 57); position++) {}
													if (position == Index) {
														abort();
													}
													Index = position;
												}

												return +source.slice(begin, Index);
											}

											if (isSigned) {
												abort();
											}

											if (source.slice(Index, Index + 4) == "true") {
												Index += 4;
												return true;
											} else if (source.slice(Index, Index + 5) == "false") {
												Index += 5;
												return false;
											} else if (source.slice(Index, Index + 4) == "null") {
												Index += 4;
												return null;
											}

											abort();
									}
								}

								return "$";
							};

							var get = function get(value) {
								var results, hasMembers;
								if (value == "$") {
									abort();
								}
								if (typeof value == "string") {
									if ((charIndexBuggy ? value.charAt(0) : value[0]) == "@") {
										return value.slice(1);
									}

									if (value == "[") {
										results = [];
										for (;; hasMembers || (hasMembers = true)) {
											value = lex();

											if (value == "]") {
												break;
											}

											if (hasMembers) {
												if (value == ",") {
													value = lex();
													if (value == "]") {
														abort();
													}
												} else {
													abort();
												}
											}

											if (value == ",") {
												abort();
											}
											results.push(get(value));
										}
										return results;
									} else if (value == "{") {
										results = {};
										for (;; hasMembers || (hasMembers = true)) {
											value = lex();

											if (value == "}") {
												break;
											}

											if (hasMembers) {
												if (value == ",") {
													value = lex();
													if (value == "}") {
														abort();
													}
												} else {
													abort();
												}
											}

											if (value == "," || typeof value != "string" || (charIndexBuggy ? value.charAt(0) : value[0]) != "@" || lex() != ":") {
												abort();
											}
											results[value.slice(1)] = get(lex());
										}
										return results;
									}

									abort();
								}
								return value;
							};

							var update = function update(source, property, callback) {
								var element = walk(source, property, callback);
								if (element === undef) {
									delete source[property];
								} else {
									source[property] = element;
								}
							};

							var walk = function walk(source, property, callback) {
								var value = source[property],
								    length;
								if (typeof value == "object" && value) {
									if (getClass.call(value) == arrayClass) {
										for (length = value.length; length--;) {
											update(value, length, callback);
										}
									} else {
										_forEach(value, function (property) {
											update(value, property, callback);
										});
									}
								}
								return callback.call(source, property, value);
							};

							exports.parse = function (source, callback) {
								var result, value;
								Index = 0;
								Source = "" + source;
								result = get(lex());

								if (lex() != "$") {
									abort();
								}

								Index = Source = null;
								return callback && getClass.call(callback) == functionClass ? walk((value = {}, value[""] = result, value), "", callback) : result;
							};
						}
					}

					exports["runInContext"] = runInContext;
					return exports;
				}

				if (freeExports && !isLoader) {
					runInContext(root, freeExports);
				} else {
					var nativeJSON = root.JSON,
					    previousJSON = root["JSON3"],
					    isRestored = false;

					var JSON3 = runInContext(root, root["JSON3"] = {
						"noConflict": function noConflict() {
							if (!isRestored) {
								isRestored = true;
								root.JSON = nativeJSON;
								root["JSON3"] = previousJSON;
								nativeJSON = previousJSON = null;
							}
							return JSON3;
						}
					});

					root.JSON = {
						"parse": JSON3.parse,
						"stringify": JSON3.stringify
					};
				}

				if (isLoader) {
					define(function () {
						return JSON3;
					});
				}
			}).call(this);
		}).call(exports, __webpack_require__(12)(module), function () {
			return this;
		}());
	}, function (module, exports) {

		module.exports = function (module) {
			if (!module.webpackPolyfill) {
				module.deprecate = function () {};
				module.paths = [];

				module.children = [];
				module.webpackPolyfill = 1;
			}
			return module;
		};
	}, function (module, exports) {

		module.exports = Emitter;

		function Emitter(obj) {
			if (obj) return mixin(obj);
		};

		function mixin(obj) {
			for (var key in Emitter.prototype) {
				obj[key] = Emitter.prototype[key];
			}
			return obj;
		}

		Emitter.prototype.on = Emitter.prototype.addEventListener = function (event, fn) {
			this._callbacks = this._callbacks || {};
			(this._callbacks[event] = this._callbacks[event] || []).push(fn);
			return this;
		};

		Emitter.prototype.once = function (event, fn) {
			var self = this;
			this._callbacks = this._callbacks || {};

			function on() {
				self.off(event, on);
				fn.apply(this, arguments);
			}

			on.fn = fn;
			this.on(event, on);
			return this;
		};

		Emitter.prototype.off = Emitter.prototype.removeListener = Emitter.prototype.removeAllListeners = Emitter.prototype.removeEventListener = function (event, fn) {
			this._callbacks = this._callbacks || {};

			if (0 == arguments.length) {
				this._callbacks = {};
				return this;
			}

			var callbacks = this._callbacks[event];
			if (!callbacks) return this;

			if (1 == arguments.length) {
				delete this._callbacks[event];
				return this;
			}

			var cb;
			for (var i = 0; i < callbacks.length; i++) {
				cb = callbacks[i];
				if (cb === fn || cb.fn === fn) {
					callbacks.splice(i, 1);
					break;
				}
			}
			return this;
		};

		Emitter.prototype.emit = function (event) {
			this._callbacks = this._callbacks || {};
			var args = [].slice.call(arguments, 1),
			    callbacks = this._callbacks[event];

			if (callbacks) {
				callbacks = callbacks.slice(0);
				for (var i = 0, len = callbacks.length; i < len; ++i) {
					callbacks[i].apply(this, args);
				}
			}

			return this;
		};

		Emitter.prototype.listeners = function (event) {
			this._callbacks = this._callbacks || {};
			return this._callbacks[event] || [];
		};

		Emitter.prototype.hasListeners = function (event) {
			return !!this.listeners(event).length;
		};
	}, function (module, exports, __webpack_require__) {
		(function (global) {

			var isArray = __webpack_require__(15);
			var isBuf = __webpack_require__(16);

			exports.deconstructPacket = function (packet) {
				var buffers = [];
				var packetData = packet.data;

				function _deconstructPacket(data) {
					if (!data) return data;

					if (isBuf(data)) {
						var placeholder = { _placeholder: true, num: buffers.length };
						buffers.push(data);
						return placeholder;
					} else if (isArray(data)) {
						var newData = new Array(data.length);
						for (var i = 0; i < data.length; i++) {
							newData[i] = _deconstructPacket(data[i]);
						}
						return newData;
					} else if ('object' == typeof data && !(data instanceof Date)) {
						var newData = {};
						for (var key in data) {
							newData[key] = _deconstructPacket(data[key]);
						}
						return newData;
					}
					return data;
				}

				var pack = packet;
				pack.data = _deconstructPacket(packetData);
				pack.attachments = buffers.length;
				return { packet: pack, buffers: buffers };
			};

			exports.reconstructPacket = function (packet, buffers) {
				var curPlaceHolder = 0;

				function _reconstructPacket(data) {
					if (data && data._placeholder) {
						var buf = buffers[data.num];
						return buf;
					} else if (isArray(data)) {
						for (var i = 0; i < data.length; i++) {
							data[i] = _reconstructPacket(data[i]);
						}
						return data;
					} else if (data && 'object' == typeof data) {
						for (var key in data) {
							data[key] = _reconstructPacket(data[key]);
						}
						return data;
					}
					return data;
				}

				packet.data = _reconstructPacket(packet.data);
				packet.attachments = undefined;
				return packet;
			};

			exports.removeBlobs = function (data, callback) {
				function _removeBlobs(obj, curKey, containingObject) {
					if (!obj) return obj;

					if (global.Blob && obj instanceof Blob || global.File && obj instanceof File) {
						pendingBlobs++;

						var fileReader = new FileReader();
						fileReader.onload = function () {
							if (containingObject) {
								containingObject[curKey] = this.result;
							} else {
								bloblessData = this.result;
							}

							if (! --pendingBlobs) {
								callback(bloblessData);
							}
						};

						fileReader.readAsArrayBuffer(obj);
					} else if (isArray(obj)) {
						for (var i = 0; i < obj.length; i++) {
							_removeBlobs(obj[i], i, obj);
						}
					} else if (obj && 'object' == typeof obj && !isBuf(obj)) {
						for (var key in obj) {
							_removeBlobs(obj[key], key, obj);
						}
					}
				}

				var pendingBlobs = 0;
				var bloblessData = data;
				_removeBlobs(bloblessData);
				if (!pendingBlobs) {
					callback(bloblessData);
				}
			};
		}).call(exports, function () {
			return this;
		}());
	}, function (module, exports) {

		module.exports = Array.isArray || function (arr) {
			return Object.prototype.toString.call(arr) == '[object Array]';
		};
	}, function (module, exports) {
		(function (global) {
			module.exports = isBuf;

			function isBuf(obj) {
				return global.Buffer && global.Buffer.isBuffer(obj) || global.ArrayBuffer && obj instanceof ArrayBuffer;
			}
		}).call(exports, function () {
			return this;
		}());
	}, function (module, exports, __webpack_require__) {

		'use strict';

		var _typeof = typeof Symbol === "function" && typeof (typeof Symbol === 'function' ? Symbol.iterator : '@@iterator') === "symbol" ? function (obj) {
			return typeof obj;
		} : function (obj) {
			return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== (typeof Symbol === 'function' ? Symbol.prototype : '@@prototype') ? "symbol" : typeof obj;
		};

		var eio = __webpack_require__(18);
		var Socket = __webpack_require__(44);
		var Emitter = __webpack_require__(35);
		var parser = __webpack_require__(7);
		var on = __webpack_require__(46);
		var bind = __webpack_require__(47);
		var debug = __webpack_require__(3)('socket.io-client:manager');
		var indexOf = __webpack_require__(42);
		var Backoff = __webpack_require__(48);

		var has = Object.prototype.hasOwnProperty;

		module.exports = Manager;

		function Manager(uri, opts) {
			if (!(this instanceof Manager)) return new Manager(uri, opts);
			if (uri && 'object' === (typeof uri === 'undefined' ? 'undefined' : _typeof(uri))) {
				opts = uri;
				uri = undefined;
			}
			opts = opts || {};

			opts.path = opts.path || '/socket.io';
			this.nsps = {};
			this.subs = [];
			this.opts = opts;
			this.reconnection(opts.reconnection !== false);
			this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);
			this.reconnectionDelay(opts.reconnectionDelay || 1000);
			this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);
			this.randomizationFactor(opts.randomizationFactor || 0.5);
			this.backoff = new Backoff({
				min: this.reconnectionDelay(),
				max: this.reconnectionDelayMax(),
				jitter: this.randomizationFactor()
			});
			this.timeout(null == opts.timeout ? 20000 : opts.timeout);
			this.readyState = 'closed';
			this.uri = uri;
			this.connecting = [];
			this.lastPing = null;
			this.encoding = false;
			this.packetBuffer = [];
			this.encoder = new parser.Encoder();
			this.decoder = new parser.Decoder();
			this.autoConnect = opts.autoConnect !== false;
			if (this.autoConnect) this.open();
		}

		Manager.prototype.emitAll = function () {
			this.emit.apply(this, arguments);
			for (var nsp in this.nsps) {
				if (has.call(this.nsps, nsp)) {
					this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);
				}
			}
		};

		Manager.prototype.updateSocketIds = function () {
			for (var nsp in this.nsps) {
				if (has.call(this.nsps, nsp)) {
					this.nsps[nsp].id = this.engine.id;
				}
			}
		};

		Emitter(Manager.prototype);

		Manager.prototype.reconnection = function (v) {
			if (!arguments.length) return this._reconnection;
			this._reconnection = !!v;
			return this;
		};

		Manager.prototype.reconnectionAttempts = function (v) {
			if (!arguments.length) return this._reconnectionAttempts;
			this._reconnectionAttempts = v;
			return this;
		};

		Manager.prototype.reconnectionDelay = function (v) {
			if (!arguments.length) return this._reconnectionDelay;
			this._reconnectionDelay = v;
			this.backoff && this.backoff.setMin(v);
			return this;
		};

		Manager.prototype.randomizationFactor = function (v) {
			if (!arguments.length) return this._randomizationFactor;
			this._randomizationFactor = v;
			this.backoff && this.backoff.setJitter(v);
			return this;
		};

		Manager.prototype.reconnectionDelayMax = function (v) {
			if (!arguments.length) return this._reconnectionDelayMax;
			this._reconnectionDelayMax = v;
			this.backoff && this.backoff.setMax(v);
			return this;
		};

		Manager.prototype.timeout = function (v) {
			if (!arguments.length) return this._timeout;
			this._timeout = v;
			return this;
		};

		Manager.prototype.maybeReconnectOnOpen = function () {
			if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {
				this.reconnect();
			}
		};

		Manager.prototype.open = Manager.prototype.connect = function (fn, opts) {
			debug('readyState %s', this.readyState);
			if (~this.readyState.indexOf('open')) return this;

			debug('opening %s', this.uri);
			this.engine = eio(this.uri, this.opts);
			var socket = this.engine;
			var self = this;
			this.readyState = 'opening';
			this.skipReconnect = false;

			var openSub = on(socket, 'open', function () {
				self.onopen();
				fn && fn();
			});

			var errorSub = on(socket, 'error', function (data) {
				debug('connect_error');
				self.cleanup();
				self.readyState = 'closed';
				self.emitAll('connect_error', data);
				if (fn) {
					var err = new Error('Connection error');
					err.data = data;
					fn(err);
				} else {
					self.maybeReconnectOnOpen();
				}
			});

			if (false !== this._timeout) {
				var timeout = this._timeout;
				debug('connect attempt will timeout after %d', timeout);

				var timer = setTimeout(function () {
					debug('connect attempt timed out after %d', timeout);
					openSub.destroy();
					socket.close();
					socket.emit('error', 'timeout');
					self.emitAll('connect_timeout', timeout);
				}, timeout);

				this.subs.push({
					destroy: function destroy() {
						clearTimeout(timer);
					}
				});
			}

			this.subs.push(openSub);
			this.subs.push(errorSub);

			return this;
		};

		Manager.prototype.onopen = function () {
			debug('open');

			this.cleanup();

			this.readyState = 'open';
			this.emit('open');

			var socket = this.engine;
			this.subs.push(on(socket, 'data', bind(this, 'ondata')));
			this.subs.push(on(socket, 'ping', bind(this, 'onping')));
			this.subs.push(on(socket, 'pong', bind(this, 'onpong')));
			this.subs.push(on(socket, 'error', bind(this, 'onerror')));
			this.subs.push(on(socket, 'close', bind(this, 'onclose')));
			this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));
		};

		Manager.prototype.onping = function () {
			this.lastPing = new Date();
			this.emitAll('ping');
		};

		Manager.prototype.onpong = function () {
			this.emitAll('pong', new Date() - this.lastPing);
		};

		Manager.prototype.ondata = function (data) {
			this.decoder.add(data);
		};

		Manager.prototype.ondecoded = function (packet) {
			this.emit('packet', packet);
		};

		Manager.prototype.onerror = function (err) {
			debug('error', err);
			this.emitAll('error', err);
		};

		Manager.prototype.socket = function (nsp, opts) {
			var socket = this.nsps[nsp];
			if (!socket) {
				socket = new Socket(this, nsp, opts);
				this.nsps[nsp] = socket;
				var self = this;
				socket.on('connecting', onConnecting);
				socket.on('connect', function () {
					socket.id = self.engine.id;
				});

				if (this.autoConnect) {
					onConnecting();
				}
			}

			function onConnecting() {
				if (!~indexOf(self.connecting, socket)) {
					self.connecting.push(socket);
				}
			}

			return socket;
		};

		Manager.prototype.destroy = function (socket) {
			var index = indexOf(this.connecting, socket);
			if (~index) this.connecting.splice(index, 1);
			if (this.connecting.length) return;

			this.close();
		};

		Manager.prototype.packet = function (packet) {
			debug('writing packet %j', packet);
			var self = this;
			if (packet.query && packet.type === 0) packet.nsp += '?' + packet.query;

			if (!self.encoding) {
				self.encoding = true;
				this.encoder.encode(packet, function (encodedPackets) {
					for (var i = 0; i < encodedPackets.length; i++) {
						self.engine.write(encodedPackets[i], packet.options);
					}
					self.encoding = false;
					self.processPacketQueue();
				});
			} else {
				self.packetBuffer.push(packet);
			}
		};

		Manager.prototype.processPacketQueue = function () {
			if (this.packetBuffer.length > 0 && !this.encoding) {
				var pack = this.packetBuffer.shift();
				this.packet(pack);
			}
		};

		Manager.prototype.cleanup = function () {
			debug('cleanup');

			var subsLength = this.subs.length;
			for (var i = 0; i < subsLength; i++) {
				var sub = this.subs.shift();
				sub.destroy();
			}

			this.packetBuffer = [];
			this.encoding = false;
			this.lastPing = null;

			this.decoder.destroy();
		};

		Manager.prototype.close = Manager.prototype.disconnect = function () {
			debug('disconnect');
			this.skipReconnect = true;
			this.reconnecting = false;
			if ('opening' === this.readyState) {
				this.cleanup();
			}
			this.backoff.reset();
			this.readyState = 'closed';
			if (this.engine) this.engine.close();
		};

		Manager.prototype.onclose = function (reason) {
			debug('onclose');

			this.cleanup();
			this.backoff.reset();
			this.readyState = 'closed';
			this.emit('close', reason);

			if (this._reconnection && !this.skipReconnect) {
				this.reconnect();
			}
		};

		Manager.prototype.reconnect = function () {
			if (this.reconnecting || this.skipReconnect) return this;

			var self = this;

			if (this.backoff.attempts >= this._reconnectionAttempts) {
				debug('reconnect failed');
				this.backoff.reset();
				this.emitAll('reconnect_failed');
				this.reconnecting = false;
			} else {
				var delay = this.backoff.duration();
				debug('will wait %dms before reconnect attempt', delay);

				this.reconnecting = true;
				var timer = setTimeout(function () {
					if (self.skipReconnect) return;

					debug('attempting reconnect');
					self.emitAll('reconnect_attempt', self.backoff.attempts);
					self.emitAll('reconnecting', self.backoff.attempts);

					if (self.skipReconnect) return;

					self.open(function (err) {
						if (err) {
							debug('reconnect attempt error');
							self.reconnecting = false;
							self.reconnect();
							self.emitAll('reconnect_error', err.data);
						} else {
							debug('reconnect success');
							self.onreconnect();
						}
					});
				}, delay);

				this.subs.push({
					destroy: function destroy() {
						clearTimeout(timer);
					}
				});
			}
		};

		Manager.prototype.onreconnect = function () {
			var attempt = this.backoff.attempts;
			this.reconnecting = false;
			this.backoff.reset();
			this.updateSocketIds();
			this.emitAll('reconnect', attempt);
		};
	}, function (module, exports, __webpack_require__) {

		module.exports = __webpack_require__(19);
	}, function (module, exports, __webpack_require__) {

		module.exports = __webpack_require__(20);

		module.exports.parser = __webpack_require__(27);
	}, function (module, exports, __webpack_require__) {
		(function (global) {

			var transports = __webpack_require__(21);
			var Emitter = __webpack_require__(35);
			var debug = __webpack_require__(3)('engine.io-client:socket');
			var index = __webpack_require__(42);
			var parser = __webpack_require__(27);
			var parseuri = __webpack_require__(2);
			var parsejson = __webpack_require__(43);
			var parseqs = __webpack_require__(36);

			module.exports = Socket;

			function Socket(uri, opts) {
				if (!(this instanceof Socket)) return new Socket(uri, opts);

				opts = opts || {};

				if (uri && 'object' === typeof uri) {
					opts = uri;
					uri = null;
				}

				if (uri) {
					uri = parseuri(uri);
					opts.hostname = uri.host;
					opts.secure = uri.protocol === 'https' || uri.protocol === 'wss';
					opts.port = uri.port;
					if (uri.query) opts.query = uri.query;
				} else if (opts.host) {
					opts.hostname = parseuri(opts.host).host;
				}

				this.secure = null != opts.secure ? opts.secure : global.location && 'https:' === location.protocol;

				if (opts.hostname && !opts.port) {
					opts.port = this.secure ? '443' : '80';
				}

				this.agent = opts.agent || false;
				this.hostname = opts.hostname || (global.location ? location.hostname : 'localhost');
				this.port = opts.port || (global.location && location.port ? location.port : this.secure ? 443 : 80);
				this.query = opts.query || {};
				if ('string' === typeof this.query) this.query = parseqs.decode(this.query);
				this.upgrade = false !== opts.upgrade;
				this.path = (opts.path || '/engine.io').replace(/\/$/, '') + '/';
				this.forceJSONP = !!opts.forceJSONP;
				this.jsonp = false !== opts.jsonp;
				this.forceBase64 = !!opts.forceBase64;
				this.enablesXDR = !!opts.enablesXDR;
				this.timestampParam = opts.timestampParam || 't';
				this.timestampRequests = opts.timestampRequests;
				this.transports = opts.transports || ['polling', 'websocket'];
				this.readyState = '';
				this.writeBuffer = [];
				this.prevBufferLen = 0;
				this.policyPort = opts.policyPort || 843;
				this.rememberUpgrade = opts.rememberUpgrade || false;
				this.binaryType = null;
				this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;
				this.perMessageDeflate = false !== opts.perMessageDeflate ? opts.perMessageDeflate || {} : false;

				if (true === this.perMessageDeflate) this.perMessageDeflate = {};
				if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {
					this.perMessageDeflate.threshold = 1024;
				}

				this.pfx = opts.pfx || null;
				this.key = opts.key || null;
				this.passphrase = opts.passphrase || null;
				this.cert = opts.cert || null;
				this.ca = opts.ca || null;
				this.ciphers = opts.ciphers || null;
				this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? null : opts.rejectUnauthorized;
				this.forceNode = !!opts.forceNode;

				var freeGlobal = typeof global === 'object' && global;
				if (freeGlobal.global === freeGlobal) {
					if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {
						this.extraHeaders = opts.extraHeaders;
					}

					if (opts.localAddress) {
						this.localAddress = opts.localAddress;
					}
				}

				this.id = null;
				this.upgrades = null;
				this.pingInterval = null;
				this.pingTimeout = null;

				this.pingIntervalTimer = null;
				this.pingTimeoutTimer = null;

				this.open();
			}

			Socket.priorWebsocketSuccess = false;

			Emitter(Socket.prototype);

			Socket.protocol = parser.protocol;

			Socket.Socket = Socket;
			Socket.Transport = __webpack_require__(26);
			Socket.transports = __webpack_require__(21);
			Socket.parser = __webpack_require__(27);

			Socket.prototype.createTransport = function (name) {
				debug('creating transport "%s"', name);
				var query = clone(this.query);

				query.EIO = parser.protocol;

				query.transport = name;

				if (this.id) query.sid = this.id;

				var transport = new transports[name]({
					agent: this.agent,
					hostname: this.hostname,
					port: this.port,
					secure: this.secure,
					path: this.path,
					query: query,
					forceJSONP: this.forceJSONP,
					jsonp: this.jsonp,
					forceBase64: this.forceBase64,
					enablesXDR: this.enablesXDR,
					timestampRequests: this.timestampRequests,
					timestampParam: this.timestampParam,
					policyPort: this.policyPort,
					socket: this,
					pfx: this.pfx,
					key: this.key,
					passphrase: this.passphrase,
					cert: this.cert,
					ca: this.ca,
					ciphers: this.ciphers,
					rejectUnauthorized: this.rejectUnauthorized,
					perMessageDeflate: this.perMessageDeflate,
					extraHeaders: this.extraHeaders,
					forceNode: this.forceNode,
					localAddress: this.localAddress
				});

				return transport;
			};

			function clone(obj) {
				var o = {};
				for (var i in obj) {
					if (obj.hasOwnProperty(i)) {
						o[i] = obj[i];
					}
				}
				return o;
			}

			Socket.prototype.open = function () {
				var transport;
				if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') !== -1) {
					transport = 'websocket';
				} else if (0 === this.transports.length) {
					var self = this;
					setTimeout(function () {
						self.emit('error', 'No transports available');
					}, 0);
					return;
				} else {
					transport = this.transports[0];
				}
				this.readyState = 'opening';

				try {
					transport = this.createTransport(transport);
				} catch (e) {
					this.transports.shift();
					this.open();
					return;
				}

				transport.open();
				this.setTransport(transport);
			};

			Socket.prototype.setTransport = function (transport) {
				debug('setting transport %s', transport.name);
				var self = this;

				if (this.transport) {
					debug('clearing existing transport %s', this.transport.name);
					this.transport.removeAllListeners();
				}

				this.transport = transport;

				transport.on('drain', function () {
					self.onDrain();
				}).on('packet', function (packet) {
					self.onPacket(packet);
				}).on('error', function (e) {
					self.onError(e);
				}).on('close', function () {
					self.onClose('transport close');
				});
			};

			Socket.prototype.probe = function (name) {
				debug('probing transport "%s"', name);
				var transport = this.createTransport(name, { probe: 1 });
				var failed = false;
				var self = this;

				Socket.priorWebsocketSuccess = false;

				function onTransportOpen() {
					if (self.onlyBinaryUpgrades) {
						var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;
						failed = failed || upgradeLosesBinary;
					}
					if (failed) return;

					debug('probe transport "%s" opened', name);
					transport.send([{ type: 'ping', data: 'probe' }]);
					transport.once('packet', function (msg) {
						if (failed) return;
						if ('pong' === msg.type && 'probe' === msg.data) {
							debug('probe transport "%s" pong', name);
							self.upgrading = true;
							self.emit('upgrading', transport);
							if (!transport) return;
							Socket.priorWebsocketSuccess = 'websocket' === transport.name;

							debug('pausing current transport "%s"', self.transport.name);
							self.transport.pause(function () {
								if (failed) return;
								if ('closed' === self.readyState) return;
								debug('changing transport and sending upgrade packet');

								cleanup();

								self.setTransport(transport);
								transport.send([{ type: 'upgrade' }]);
								self.emit('upgrade', transport);
								transport = null;
								self.upgrading = false;
								self.flush();
							});
						} else {
							debug('probe transport "%s" failed', name);
							var err = new Error('probe error');
							err.transport = transport.name;
							self.emit('upgradeError', err);
						}
					});
				}

				function freezeTransport() {
					if (failed) return;

					failed = true;

					cleanup();

					transport.close();
					transport = null;
				}

				function onerror(err) {
					var error = new Error('probe error: ' + err);
					error.transport = transport.name;

					freezeTransport();

					debug('probe transport "%s" failed because of error: %s', name, err);

					self.emit('upgradeError', error);
				}

				function onTransportClose() {
					onerror('transport closed');
				}

				function onclose() {
					onerror('socket closed');
				}

				function onupgrade(to) {
					if (transport && to.name !== transport.name) {
						debug('"%s" works - aborting "%s"', to.name, transport.name);
						freezeTransport();
					}
				}

				function cleanup() {
					transport.removeListener('open', onTransportOpen);
					transport.removeListener('error', onerror);
					transport.removeListener('close', onTransportClose);
					self.removeListener('close', onclose);
					self.removeListener('upgrading', onupgrade);
				}

				transport.once('open', onTransportOpen);
				transport.once('error', onerror);
				transport.once('close', onTransportClose);

				this.once('close', onclose);
				this.once('upgrading', onupgrade);

				transport.open();
			};

			Socket.prototype.onOpen = function () {
				debug('socket open');
				this.readyState = 'open';
				Socket.priorWebsocketSuccess = 'websocket' === this.transport.name;
				this.emit('open');
				this.flush();

				if ('open' === this.readyState && this.upgrade && this.transport.pause) {
					debug('starting upgrade probes');
					for (var i = 0, l = this.upgrades.length; i < l; i++) {
						this.probe(this.upgrades[i]);
					}
				}
			};

			Socket.prototype.onPacket = function (packet) {
				if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {
					debug('socket receive: type "%s", data "%s"', packet.type, packet.data);

					this.emit('packet', packet);

					this.emit('heartbeat');

					switch (packet.type) {
						case 'open':
							this.onHandshake(parsejson(packet.data));
							break;

						case 'pong':
							this.setPing();
							this.emit('pong');
							break;

						case 'error':
							var err = new Error('server error');
							err.code = packet.data;
							this.onError(err);
							break;

						case 'message':
							this.emit('data', packet.data);
							this.emit('message', packet.data);
							break;
					}
				} else {
					debug('packet received with socket readyState "%s"', this.readyState);
				}
			};

			Socket.prototype.onHandshake = function (data) {
				this.emit('handshake', data);
				this.id = data.sid;
				this.transport.query.sid = data.sid;
				this.upgrades = this.filterUpgrades(data.upgrades);
				this.pingInterval = data.pingInterval;
				this.pingTimeout = data.pingTimeout;
				this.onOpen();

				if ('closed' === this.readyState) return;
				this.setPing();

				this.removeListener('heartbeat', this.onHeartbeat);
				this.on('heartbeat', this.onHeartbeat);
			};

			Socket.prototype.onHeartbeat = function (timeout) {
				clearTimeout(this.pingTimeoutTimer);
				var self = this;
				self.pingTimeoutTimer = setTimeout(function () {
					if ('closed' === self.readyState) return;
					self.onClose('ping timeout');
				}, timeout || self.pingInterval + self.pingTimeout);
			};

			Socket.prototype.setPing = function () {
				var self = this;
				clearTimeout(self.pingIntervalTimer);
				self.pingIntervalTimer = setTimeout(function () {
					debug('writing ping packet - expecting pong within %sms', self.pingTimeout);
					self.ping();
					self.onHeartbeat(self.pingTimeout);
				}, self.pingInterval);
			};

			Socket.prototype.ping = function () {
				var self = this;
				this.sendPacket('ping', function () {
					self.emit('ping');
				});
			};

			Socket.prototype.onDrain = function () {
				this.writeBuffer.splice(0, this.prevBufferLen);

				this.prevBufferLen = 0;

				if (0 === this.writeBuffer.length) {
					this.emit('drain');
				} else {
					this.flush();
				}
			};

			Socket.prototype.flush = function () {
				if ('closed' !== this.readyState && this.transport.writable && !this.upgrading && this.writeBuffer.length) {
					debug('flushing %d packets in socket', this.writeBuffer.length);
					this.transport.send(this.writeBuffer);

					this.prevBufferLen = this.writeBuffer.length;
					this.emit('flush');
				}
			};

			Socket.prototype.write = Socket.prototype.send = function (msg, options, fn) {
				this.sendPacket('message', msg, options, fn);
				return this;
			};

			Socket.prototype.sendPacket = function (type, data, options, fn) {
				if ('function' === typeof data) {
					fn = data;
					data = undefined;
				}

				if ('function' === typeof options) {
					fn = options;
					options = null;
				}

				if ('closing' === this.readyState || 'closed' === this.readyState) {
					return;
				}

				options = options || {};
				options.compress = false !== options.compress;

				var packet = {
					type: type,
					data: data,
					options: options
				};
				this.emit('packetCreate', packet);
				this.writeBuffer.push(packet);
				if (fn) this.once('flush', fn);
				this.flush();
			};

			Socket.prototype.close = function () {
				if ('opening' === this.readyState || 'open' === this.readyState) {
					this.readyState = 'closing';

					var self = this;

					if (this.writeBuffer.length) {
						this.once('drain', function () {
							if (this.upgrading) {
								waitForUpgrade();
							} else {
								close();
							}
						});
					} else if (this.upgrading) {
						waitForUpgrade();
					} else {
						close();
					}
				}

				function close() {
					self.onClose('forced close');
					debug('socket closing - telling transport to close');
					self.transport.close();
				}

				function cleanupAndClose() {
					self.removeListener('upgrade', cleanupAndClose);
					self.removeListener('upgradeError', cleanupAndClose);
					close();
				}

				function waitForUpgrade() {
					self.once('upgrade', cleanupAndClose);
					self.once('upgradeError', cleanupAndClose);
				}

				return this;
			};

			Socket.prototype.onError = function (err) {
				debug('socket error %j', err);
				Socket.priorWebsocketSuccess = false;
				this.emit('error', err);
				this.onClose('transport error', err);
			};

			Socket.prototype.onClose = function (reason, desc) {
				if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {
					debug('socket close with reason: "%s"', reason);
					var self = this;

					clearTimeout(this.pingIntervalTimer);
					clearTimeout(this.pingTimeoutTimer);

					this.transport.removeAllListeners('close');

					this.transport.close();

					this.transport.removeAllListeners();

					this.readyState = 'closed';

					this.id = null;

					this.emit('close', reason, desc);

					self.writeBuffer = [];
					self.prevBufferLen = 0;
				}
			};

			Socket.prototype.filterUpgrades = function (upgrades) {
				var filteredUpgrades = [];
				for (var i = 0, j = upgrades.length; i < j; i++) {
					if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);
				}
				return filteredUpgrades;
			};
		}).call(exports, function () {
			return this;
		}());
	}, function (module, exports, __webpack_require__) {
		(function (global) {

			var XMLHttpRequest = __webpack_require__(22);
			var XHR = __webpack_require__(24);
			var JSONP = __webpack_require__(39);
			var websocket = __webpack_require__(40);

			exports.polling = polling;
			exports.websocket = websocket;

			function polling(opts) {
				var xhr;
				var xd = false;
				var xs = false;
				var jsonp = false !== opts.jsonp;

				if (global.location) {
					var isSSL = 'https:' === location.protocol;
					var port = location.port;

					if (!port) {
						port = isSSL ? 443 : 80;
					}

					xd = opts.hostname !== location.hostname || port !== opts.port;
					xs = opts.secure !== isSSL;
				}

				opts.xdomain = xd;
				opts.xscheme = xs;
				xhr = new XMLHttpRequest(opts);

				if ('open' in xhr && !opts.forceJSONP) {
					return new XHR(opts);
				} else {
					if (!jsonp) throw new Error('JSONP disabled');
					return new JSONP(opts);
				}
			}
		}).call(exports, function () {
			return this;
		}());
	}, function (module, exports, __webpack_require__) {
		(function (global) {

			var hasCORS = __webpack_require__(23);

			module.exports = function (opts) {
				var xdomain = opts.xdomain;

				var xscheme = opts.xscheme;

				var enablesXDR = opts.enablesXDR;

				try {
					if ('undefined' !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {
						return new XMLHttpRequest();
					}
				} catch (e) {}

				try {
					if ('undefined' !== typeof XDomainRequest && !xscheme && enablesXDR) {
						return new XDomainRequest();
					}
				} catch (e) {}

				if (!xdomain) {
					try {
						return new global[['Active'].concat('Object').join('X')]('Microsoft.XMLHTTP');
					} catch (e) {}
				}
			};
		}).call(exports, function () {
			return this;
		}());
	}, function (module, exports) {

		try {
			module.exports = typeof XMLHttpRequest !== 'undefined' && 'withCredentials' in new XMLHttpRequest();
		} catch (err) {
			module.exports = false;
		}
	}, function (module, exports, __webpack_require__) {
		(function (global) {

			var XMLHttpRequest = __webpack_require__(22);
			var Polling = __webpack_require__(25);
			var Emitter = __webpack_require__(35);
			var inherit = __webpack_require__(37);
			var debug = __webpack_require__(3)('engine.io-client:polling-xhr');

			module.exports = XHR;
			module.exports.Request = Request;

			function empty() {}

			function XHR(opts) {
				Polling.call(this, opts);
				this.requestTimeout = opts.requestTimeout;

				if (global.location) {
					var isSSL = 'https:' === location.protocol;
					var port = location.port;

					if (!port) {
						port = isSSL ? 443 : 80;
					}

					this.xd = opts.hostname !== global.location.hostname || port !== opts.port;
					this.xs = opts.secure !== isSSL;
				} else {
					this.extraHeaders = opts.extraHeaders;
				}
			}

			inherit(XHR, Polling);

			XHR.prototype.supportsBinary = true;

			XHR.prototype.request = function (opts) {
				opts = opts || {};
				opts.uri = this.uri();
				opts.xd = this.xd;
				opts.xs = this.xs;
				opts.agent = this.agent || false;
				opts.supportsBinary = this.supportsBinary;
				opts.enablesXDR = this.enablesXDR;

				opts.pfx = this.pfx;
				opts.key = this.key;
				opts.passphrase = this.passphrase;
				opts.cert = this.cert;
				opts.ca = this.ca;
				opts.ciphers = this.ciphers;
				opts.rejectUnauthorized = this.rejectUnauthorized;
				opts.requestTimeout = this.requestTimeout;

				opts.extraHeaders = this.extraHeaders;

				return new Request(opts);
			};

			XHR.prototype.doWrite = function (data, fn) {
				var isBinary = typeof data !== 'string' && data !== undefined;
				var req = this.request({ method: 'POST', data: data, isBinary: isBinary });
				var self = this;
				req.on('success', fn);
				req.on('error', function (err) {
					self.onError('xhr post error', err);
				});
				this.sendXhr = req;
			};

			XHR.prototype.doPoll = function () {
				debug('xhr poll');
				var req = this.request();
				var self = this;
				req.on('data', function (data) {
					self.onData(data);
				});
				req.on('error', function (err) {
					self.onError('xhr poll error', err);
				});
				this.pollXhr = req;
			};

			function Request(opts) {
				this.method = opts.method || 'GET';
				this.uri = opts.uri;
				this.xd = !!opts.xd;
				this.xs = !!opts.xs;
				this.async = false !== opts.async;
				this.data = undefined !== opts.data ? opts.data : null;
				this.agent = opts.agent;
				this.isBinary = opts.isBinary;
				this.supportsBinary = opts.supportsBinary;
				this.enablesXDR = opts.enablesXDR;
				this.requestTimeout = opts.requestTimeout;

				this.pfx = opts.pfx;
				this.key = opts.key;
				this.passphrase = opts.passphrase;
				this.cert = opts.cert;
				this.ca = opts.ca;
				this.ciphers = opts.ciphers;
				this.rejectUnauthorized = opts.rejectUnauthorized;

				this.extraHeaders = opts.extraHeaders;

				this.create();
			}

			Emitter(Request.prototype);

			Request.prototype.create = function () {
				var opts = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };

				opts.pfx = this.pfx;
				opts.key = this.key;
				opts.passphrase = this.passphrase;
				opts.cert = this.cert;
				opts.ca = this.ca;
				opts.ciphers = this.ciphers;
				opts.rejectUnauthorized = this.rejectUnauthorized;

				var xhr = this.xhr = new XMLHttpRequest(opts);
				var self = this;

				try {
					debug('xhr open %s: %s', this.method, this.uri);
					xhr.open(this.method, this.uri, this.async);
					try {
						if (this.extraHeaders) {
							xhr.setDisableHeaderCheck(true);
							for (var i in this.extraHeaders) {
								if (this.extraHeaders.hasOwnProperty(i)) {
									xhr.setRequestHeader(i, this.extraHeaders[i]);
								}
							}
						}
					} catch (e) {}
					if (this.supportsBinary) {
						xhr.responseType = 'arraybuffer';
					}

					if ('POST' === this.method) {
						try {
							if (this.isBinary) {
								xhr.setRequestHeader('Content-type', 'application/octet-stream');
							} else {
								xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');
							}
						} catch (e) {}
					}

					try {
						xhr.setRequestHeader('Accept', '*/*');
					} catch (e) {}

					if ('withCredentials' in xhr) {
						xhr.withCredentials = true;
					}

					if (this.requestTimeout) {
						xhr.timeout = this.requestTimeout;
					}

					if (this.hasXDR()) {
						xhr.onload = function () {
							self.onLoad();
						};
						xhr.onerror = function () {
							self.onError(xhr.responseText);
						};
					} else {
						xhr.onreadystatechange = function () {
							if (4 !== xhr.readyState) return;
							if (200 === xhr.status || 1223 === xhr.status) {
								self.onLoad();
							} else {
								setTimeout(function () {
									self.onError(xhr.status);
								}, 0);
							}
						};
					}

					debug('xhr data %s', this.data);
					xhr.send(this.data);
				} catch (e) {
					setTimeout(function () {
						self.onError(e);
					}, 0);
					return;
				}

				if (global.document) {
					this.index = Request.requestsCount++;
					Request.requests[this.index] = this;
				}
			};

			Request.prototype.onSuccess = function () {
				this.emit('success');
				this.cleanup();
			};

			Request.prototype.onData = function (data) {
				this.emit('data', data);
				this.onSuccess();
			};

			Request.prototype.onError = function (err) {
				this.emit('error', err);
				this.cleanup(true);
			};

			Request.prototype.cleanup = function (fromError) {
				if ('undefined' === typeof this.xhr || null === this.xhr) {
					return;
				}

				if (this.hasXDR()) {
					this.xhr.onload = this.xhr.onerror = empty;
				} else {
					this.xhr.onreadystatechange = empty;
				}

				if (fromError) {
					try {
						this.xhr.abort();
					} catch (e) {}
				}

				if (global.document) {
					delete Request.requests[this.index];
				}

				this.xhr = null;
			};

			Request.prototype.onLoad = function () {
				var data;
				try {
					var contentType;
					try {
						contentType = this.xhr.getResponseHeader('Content-Type').split(';')[0];
					} catch (e) {}
					if (contentType === 'application/octet-stream') {
						data = this.xhr.response || this.xhr.responseText;
					} else {
						if (!this.supportsBinary) {
							data = this.xhr.responseText;
						} else {
							try {
								data = String.fromCharCode.apply(null, new Uint8Array(this.xhr.response));
							} catch (e) {
								var ui8Arr = new Uint8Array(this.xhr.response);
								var dataArray = [];
								for (var idx = 0, length = ui8Arr.length; idx < length; idx++) {
									dataArray.push(ui8Arr[idx]);
								}

								data = String.fromCharCode.apply(null, dataArray);
							}
						}
					}
				} catch (e) {
					this.onError(e);
				}
				if (null != data) {
					this.onData(data);
				}
			};

			Request.prototype.hasXDR = function () {
				return 'undefined' !== typeof global.XDomainRequest && !this.xs && this.enablesXDR;
			};

			Request.prototype.abort = function () {
				this.cleanup();
			};

			Request.requestsCount = 0;
			Request.requests = {};

			if (global.document) {
				if (global.attachEvent) {
					global.attachEvent('onunload', unloadHandler);
				} else if (global.addEventListener) {
					global.addEventListener('beforeunload', unloadHandler, false);
				}
			}

			function unloadHandler() {
				for (var i in Request.requests) {
					if (Request.requests.hasOwnProperty(i)) {
						Request.requests[i].abort();
					}
				}
			}
		}).call(exports, function () {
			return this;
		}());
	}, function (module, exports, __webpack_require__) {

		var Transport = __webpack_require__(26);
		var parseqs = __webpack_require__(36);
		var parser = __webpack_require__(27);
		var inherit = __webpack_require__(37);
		var yeast = __webpack_require__(38);
		var debug = __webpack_require__(3)('engine.io-client:polling');

		module.exports = Polling;

		var hasXHR2 = function () {
			var XMLHttpRequest = __webpack_require__(22);
			var xhr = new XMLHttpRequest({ xdomain: false });
			return null != xhr.responseType;
		}();

		function Polling(opts) {
			var forceBase64 = opts && opts.forceBase64;
			if (!hasXHR2 || forceBase64) {
				this.supportsBinary = false;
			}
			Transport.call(this, opts);
		}

		inherit(Polling, Transport);

		Polling.prototype.name = 'polling';

		Polling.prototype.doOpen = function () {
			this.poll();
		};

		Polling.prototype.pause = function (onPause) {
			var self = this;

			this.readyState = 'pausing';

			function pause() {
				debug('paused');
				self.readyState = 'paused';
				onPause();
			}

			if (this.polling || !this.writable) {
				var total = 0;

				if (this.polling) {
					debug('we are currently polling - waiting to pause');
					total++;
					this.once('pollComplete', function () {
						debug('pre-pause polling complete');
						--total || pause();
					});
				}

				if (!this.writable) {
					debug('we are currently writing - waiting to pause');
					total++;
					this.once('drain', function () {
						debug('pre-pause writing complete');
						--total || pause();
					});
				}
			} else {
				pause();
			}
		};

		Polling.prototype.poll = function () {
			debug('polling');
			this.polling = true;
			this.doPoll();
			this.emit('poll');
		};

		Polling.prototype.onData = function (data) {
			var self = this;
			debug('polling got data %s', data);
			var callback = function callback(packet, index, total) {
				if ('opening' === self.readyState) {
					self.onOpen();
				}

				if ('close' === packet.type) {
					self.onClose();
					return false;
				}

				self.onPacket(packet);
			};

			parser.decodePayload(data, this.socket.binaryType, callback);

			if ('closed' !== this.readyState) {
				this.polling = false;
				this.emit('pollComplete');

				if ('open' === this.readyState) {
					this.poll();
				} else {
					debug('ignoring poll - transport state "%s"', this.readyState);
				}
			}
		};

		Polling.prototype.doClose = function () {
			var self = this;

			function close() {
				debug('writing close packet');
				self.write([{ type: 'close' }]);
			}

			if ('open' === this.readyState) {
				debug('transport open - closing');
				close();
			} else {
				debug('transport not open - deferring close');
				this.once('open', close);
			}
		};

		Polling.prototype.write = function (packets) {
			var self = this;
			this.writable = false;
			var callbackfn = function callbackfn() {
				self.writable = true;
				self.emit('drain');
			};

			parser.encodePayload(packets, this.supportsBinary, function (data) {
				self.doWrite(data, callbackfn);
			});
		};

		Polling.prototype.uri = function () {
			var query = this.query || {};
			var schema = this.secure ? 'https' : 'http';
			var port = '';

			if (false !== this.timestampRequests) {
				query[this.timestampParam] = yeast();
			}

			if (!this.supportsBinary && !query.sid) {
				query.b64 = 1;
			}

			query = parseqs.encode(query);

			if (this.port && ('https' === schema && Number(this.port) !== 443 || 'http' === schema && Number(this.port) !== 80)) {
				port = ':' + this.port;
			}

			if (query.length) {
				query = '?' + query;
			}

			var ipv6 = this.hostname.indexOf(':') !== -1;
			return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;
		};
	}, function (module, exports, __webpack_require__) {

		var parser = __webpack_require__(27);
		var Emitter = __webpack_require__(35);

		module.exports = Transport;

		function Transport(opts) {
			this.path = opts.path;
			this.hostname = opts.hostname;
			this.port = opts.port;
			this.secure = opts.secure;
			this.query = opts.query;
			this.timestampParam = opts.timestampParam;
			this.timestampRequests = opts.timestampRequests;
			this.readyState = '';
			this.agent = opts.agent || false;
			this.socket = opts.socket;
			this.enablesXDR = opts.enablesXDR;

			this.pfx = opts.pfx;
			this.key = opts.key;
			this.passphrase = opts.passphrase;
			this.cert = opts.cert;
			this.ca = opts.ca;
			this.ciphers = opts.ciphers;
			this.rejectUnauthorized = opts.rejectUnauthorized;
			this.forceNode = opts.forceNode;

			this.extraHeaders = opts.extraHeaders;
			this.localAddress = opts.localAddress;
		}

		Emitter(Transport.prototype);

		Transport.prototype.onError = function (msg, desc) {
			var err = new Error(msg);
			err.type = 'TransportError';
			err.description = desc;
			this.emit('error', err);
			return this;
		};

		Transport.prototype.open = function () {
			if ('closed' === this.readyState || '' === this.readyState) {
				this.readyState = 'opening';
				this.doOpen();
			}

			return this;
		};

		Transport.prototype.close = function () {
			if ('opening' === this.readyState || 'open' === this.readyState) {
				this.doClose();
				this.onClose();
			}

			return this;
		};

		Transport.prototype.send = function (packets) {
			if ('open' === this.readyState) {
				this.write(packets);
			} else {
				throw new Error('Transport not open');
			}
		};

		Transport.prototype.onOpen = function () {
			this.readyState = 'open';
			this.writable = true;
			this.emit('open');
		};

		Transport.prototype.onData = function (data) {
			var packet = parser.decodePacket(data, this.socket.binaryType);
			this.onPacket(packet);
		};

		Transport.prototype.onPacket = function (packet) {
			this.emit('packet', packet);
		};

		Transport.prototype.onClose = function () {
			this.readyState = 'closed';
			this.emit('close');
		};
	}, function (module, exports, __webpack_require__) {
		(function (global) {

			var keys = __webpack_require__(28);
			var hasBinary = __webpack_require__(29);
			var sliceBuffer = __webpack_require__(30);
			var after = __webpack_require__(31);
			var utf8 = __webpack_require__(32);

			var base64encoder;
			if (global && global.ArrayBuffer) {
				base64encoder = __webpack_require__(33);
			}

			var isAndroid = typeof navigator !== 'undefined' && /Android/i.test(navigator.userAgent);

			var isPhantomJS = typeof navigator !== 'undefined' && /PhantomJS/i.test(navigator.userAgent);

			var dontSendBlobs = isAndroid || isPhantomJS;

			exports.protocol = 3;

			var packets = exports.packets = {
				open: 0, close: 1, ping: 2,
				pong: 3,
				message: 4,
				upgrade: 5,
				noop: 6
			};

			var packetslist = keys(packets);

			var err = { type: 'error', data: 'parser error' };

			var Blob = __webpack_require__(34);

			exports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {
				if ('function' == typeof supportsBinary) {
					callback = supportsBinary;
					supportsBinary = false;
				}

				if ('function' == typeof utf8encode) {
					callback = utf8encode;
					utf8encode = null;
				}

				var data = packet.data === undefined ? undefined : packet.data.buffer || packet.data;

				if (global.ArrayBuffer && data instanceof ArrayBuffer) {
					return encodeArrayBuffer(packet, supportsBinary, callback);
				} else if (Blob && data instanceof global.Blob) {
					return encodeBlob(packet, supportsBinary, callback);
				}

				if (data && data.base64) {
					return encodeBase64Object(packet, callback);
				}

				var encoded = packets[packet.type];

				if (undefined !== packet.data) {
					encoded += utf8encode ? utf8.encode(String(packet.data)) : String(packet.data);
				}

				return callback('' + encoded);
			};

			function encodeBase64Object(packet, callback) {
				var message = 'b' + exports.packets[packet.type] + packet.data.data;
				return callback(message);
			}

			function encodeArrayBuffer(packet, supportsBinary, callback) {
				if (!supportsBinary) {
					return exports.encodeBase64Packet(packet, callback);
				}

				var data = packet.data;
				var contentArray = new Uint8Array(data);
				var resultBuffer = new Uint8Array(1 + data.byteLength);

				resultBuffer[0] = packets[packet.type];
				for (var i = 0; i < contentArray.length; i++) {
					resultBuffer[i + 1] = contentArray[i];
				}

				return callback(resultBuffer.buffer);
			}

			function encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {
				if (!supportsBinary) {
					return exports.encodeBase64Packet(packet, callback);
				}

				var fr = new FileReader();
				fr.onload = function () {
					packet.data = fr.result;
					exports.encodePacket(packet, supportsBinary, true, callback);
				};
				return fr.readAsArrayBuffer(packet.data);
			}

			function encodeBlob(packet, supportsBinary, callback) {
				if (!supportsBinary) {
					return exports.encodeBase64Packet(packet, callback);
				}

				if (dontSendBlobs) {
					return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);
				}

				var length = new Uint8Array(1);
				length[0] = packets[packet.type];
				var blob = new Blob([length.buffer, packet.data]);

				return callback(blob);
			}

			exports.encodeBase64Packet = function (packet, callback) {
				var message = 'b' + exports.packets[packet.type];
				if (Blob && packet.data instanceof global.Blob) {
					var fr = new FileReader();
					fr.onload = function () {
						var b64 = fr.result.split(',')[1];
						callback(message + b64);
					};
					return fr.readAsDataURL(packet.data);
				}

				var b64data;
				try {
					b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));
				} catch (e) {
					var typed = new Uint8Array(packet.data);
					var basic = new Array(typed.length);
					for (var i = 0; i < typed.length; i++) {
						basic[i] = typed[i];
					}
					b64data = String.fromCharCode.apply(null, basic);
				}
				message += global.btoa(b64data);
				return callback(message);
			};

			exports.decodePacket = function (data, binaryType, utf8decode) {
				if (data === undefined) {
					return err;
				}

				if (typeof data == 'string') {
					if (data.charAt(0) == 'b') {
						return exports.decodeBase64Packet(data.substr(1), binaryType);
					}

					if (utf8decode) {
						data = tryDecode(data);
						if (data === false) {
							return err;
						}
					}
					var type = data.charAt(0);

					if (Number(type) != type || !packetslist[type]) {
						return err;
					}

					if (data.length > 1) {
						return { type: packetslist[type], data: data.substring(1) };
					} else {
						return { type: packetslist[type] };
					}
				}

				var asArray = new Uint8Array(data);
				var type = asArray[0];
				var rest = sliceBuffer(data, 1);
				if (Blob && binaryType === 'blob') {
					rest = new Blob([rest]);
				}
				return { type: packetslist[type], data: rest };
			};

			function tryDecode(data) {
				try {
					data = utf8.decode(data);
				} catch (e) {
					return false;
				}
				return data;
			}

			exports.decodeBase64Packet = function (msg, binaryType) {
				var type = packetslist[msg.charAt(0)];
				if (!base64encoder) {
					return { type: type, data: { base64: true, data: msg.substr(1) } };
				}

				var data = base64encoder.decode(msg.substr(1));

				if (binaryType === 'blob' && Blob) {
					data = new Blob([data]);
				}

				return { type: type, data: data };
			};

			exports.encodePayload = function (packets, supportsBinary, callback) {
				if (typeof supportsBinary == 'function') {
					callback = supportsBinary;
					supportsBinary = null;
				}

				var isBinary = hasBinary(packets);

				if (supportsBinary && isBinary) {
					if (Blob && !dontSendBlobs) {
						return exports.encodePayloadAsBlob(packets, callback);
					}

					return exports.encodePayloadAsArrayBuffer(packets, callback);
				}

				if (!packets.length) {
					return callback('0:');
				}

				function setLengthHeader(message) {
					return message.length + ':' + message;
				}

				function encodeOne(packet, doneCallback) {
					exports.encodePacket(packet, !isBinary ? false : supportsBinary, true, function (message) {
						doneCallback(null, setLengthHeader(message));
					});
				}

				map(packets, encodeOne, function (err, results) {
					return callback(results.join(''));
				});
			};

			function map(ary, each, done) {
				var result = new Array(ary.length);
				var next = after(ary.length, done);

				var eachWithIndex = function eachWithIndex(i, el, cb) {
					each(el, function (error, msg) {
						result[i] = msg;
						cb(error, result);
					});
				};

				for (var i = 0; i < ary.length; i++) {
					eachWithIndex(i, ary[i], next);
				}
			}

			exports.decodePayload = function (data, binaryType, callback) {
				if (typeof data != 'string') {
					return exports.decodePayloadAsBinary(data, binaryType, callback);
				}

				if (typeof binaryType === 'function') {
					callback = binaryType;
					binaryType = null;
				}

				var packet;
				if (data == '') {
					return callback(err, 0, 1);
				}

				var length = '',
				    n,
				    msg;

				for (var i = 0, l = data.length; i < l; i++) {
					var chr = data.charAt(i);

					if (':' != chr) {
						length += chr;
					} else {
						if ('' == length || length != (n = Number(length))) {
							return callback(err, 0, 1);
						}

						msg = data.substr(i + 1, n);

						if (length != msg.length) {
							return callback(err, 0, 1);
						}

						if (msg.length) {
							packet = exports.decodePacket(msg, binaryType, true);

							if (err.type == packet.type && err.data == packet.data) {
								return callback(err, 0, 1);
							}

							var ret = callback(packet, i + n, l);
							if (false === ret) return;
						}

						i += n;
						length = '';
					}
				}

				if (length != '') {
					return callback(err, 0, 1);
				}
			};

			exports.encodePayloadAsArrayBuffer = function (packets, callback) {
				if (!packets.length) {
					return callback(new ArrayBuffer(0));
				}

				function encodeOne(packet, doneCallback) {
					exports.encodePacket(packet, true, true, function (data) {
						return doneCallback(null, data);
					});
				}

				map(packets, encodeOne, function (err, encodedPackets) {
					var totalLength = encodedPackets.reduce(function (acc, p) {
						var len;
						if (typeof p === 'string') {
							len = p.length;
						} else {
							len = p.byteLength;
						}
						return acc + len.toString().length + len + 2;
					}, 0);

					var resultArray = new Uint8Array(totalLength);

					var bufferIndex = 0;
					encodedPackets.forEach(function (p) {
						var isString = typeof p === 'string';
						var ab = p;
						if (isString) {
							var view = new Uint8Array(p.length);
							for (var i = 0; i < p.length; i++) {
								view[i] = p.charCodeAt(i);
							}
							ab = view.buffer;
						}

						if (isString) {
							resultArray[bufferIndex++] = 0;
						} else {
							resultArray[bufferIndex++] = 1;
						}

						var lenStr = ab.byteLength.toString();
						for (var i = 0; i < lenStr.length; i++) {
							resultArray[bufferIndex++] = parseInt(lenStr[i]);
						}
						resultArray[bufferIndex++] = 255;

						var view = new Uint8Array(ab);
						for (var i = 0; i < view.length; i++) {
							resultArray[bufferIndex++] = view[i];
						}
					});

					return callback(resultArray.buffer);
				});
			};

			exports.encodePayloadAsBlob = function (packets, callback) {
				function encodeOne(packet, doneCallback) {
					exports.encodePacket(packet, true, true, function (encoded) {
						var binaryIdentifier = new Uint8Array(1);
						binaryIdentifier[0] = 1;
						if (typeof encoded === 'string') {
							var view = new Uint8Array(encoded.length);
							for (var i = 0; i < encoded.length; i++) {
								view[i] = encoded.charCodeAt(i);
							}
							encoded = view.buffer;
							binaryIdentifier[0] = 0;
						}

						var len = encoded instanceof ArrayBuffer ? encoded.byteLength : encoded.size;

						var lenStr = len.toString();
						var lengthAry = new Uint8Array(lenStr.length + 1);
						for (var i = 0; i < lenStr.length; i++) {
							lengthAry[i] = parseInt(lenStr[i]);
						}
						lengthAry[lenStr.length] = 255;

						if (Blob) {
							var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);
							doneCallback(null, blob);
						}
					});
				}

				map(packets, encodeOne, function (err, results) {
					return callback(new Blob(results));
				});
			};

			exports.decodePayloadAsBinary = function (data, binaryType, callback) {
				if (typeof binaryType === 'function') {
					callback = binaryType;
					binaryType = null;
				}

				var bufferTail = data;
				var buffers = [];

				var numberTooLong = false;
				while (bufferTail.byteLength > 0) {
					var tailArray = new Uint8Array(bufferTail);
					var isString = tailArray[0] === 0;
					var msgLength = '';

					for (var i = 1;; i++) {
						if (tailArray[i] == 255) break;

						if (msgLength.length > 310) {
							numberTooLong = true;
							break;
						}

						msgLength += tailArray[i];
					}

					if (numberTooLong) return callback(err, 0, 1);

					bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);
					msgLength = parseInt(msgLength);

					var msg = sliceBuffer(bufferTail, 0, msgLength);
					if (isString) {
						try {
							msg = String.fromCharCode.apply(null, new Uint8Array(msg));
						} catch (e) {
							var typed = new Uint8Array(msg);
							msg = '';
							for (var i = 0; i < typed.length; i++) {
								msg += String.fromCharCode(typed[i]);
							}
						}
					}

					buffers.push(msg);
					bufferTail = sliceBuffer(bufferTail, msgLength);
				}

				var total = buffers.length;
				buffers.forEach(function (buffer, i) {
					callback(exports.decodePacket(buffer, binaryType, true), i, total);
				});
			};
		}).call(exports, function () {
			return this;
		}());
	}, function (module, exports) {

		module.exports = Object.keys || function keys(obj) {
			var arr = [];
			var has = Object.prototype.hasOwnProperty;

			for (var i in obj) {
				if (has.call(obj, i)) {
					arr.push(i);
				}
			}
			return arr;
		};
	}, function (module, exports, __webpack_require__) {
		(function (global) {

			var isArray = __webpack_require__(15);

			module.exports = hasBinary;

			function hasBinary(data) {

				function _hasBinary(obj) {
					if (!obj) return false;

					if (global.Buffer && global.Buffer.isBuffer && global.Buffer.isBuffer(obj) || global.ArrayBuffer && obj instanceof ArrayBuffer || global.Blob && obj instanceof Blob || global.File && obj instanceof File) {
						return true;
					}

					if (isArray(obj)) {
						for (var i = 0; i < obj.length; i++) {
							if (_hasBinary(obj[i])) {
								return true;
							}
						}
					} else if (obj && 'object' == typeof obj) {
						if (obj.toJSON && 'function' == typeof obj.toJSON) {
							obj = obj.toJSON();
						}

						for (var key in obj) {
							if (Object.prototype.hasOwnProperty.call(obj, key) && _hasBinary(obj[key])) {
								return true;
							}
						}
					}

					return false;
				}

				return _hasBinary(data);
			}
		}).call(exports, function () {
			return this;
		}());
	}, function (module, exports) {

		module.exports = function (arraybuffer, start, end) {
			var bytes = arraybuffer.byteLength;
			start = start || 0;
			end = end || bytes;

			if (arraybuffer.slice) {
				return arraybuffer.slice(start, end);
			}

			if (start < 0) {
				start += bytes;
			}
			if (end < 0) {
				end += bytes;
			}
			if (end > bytes) {
				end = bytes;
			}

			if (start >= bytes || start >= end || bytes === 0) {
				return new ArrayBuffer(0);
			}

			var abv = new Uint8Array(arraybuffer);
			var result = new Uint8Array(end - start);
			for (var i = start, ii = 0; i < end; i++, ii++) {
				result[ii] = abv[i];
			}
			return result.buffer;
		};
	}, function (module, exports) {

		module.exports = after;

		function after(count, callback, err_cb) {
			var bail = false;
			err_cb = err_cb || noop;
			proxy.count = count;

			return count === 0 ? callback() : proxy;

			function proxy(err, result) {
				if (proxy.count <= 0) {
					throw new Error('after called too many times');
				}
				--proxy.count;

				if (err) {
					bail = true;
					callback(err);

					callback = err_cb;
				} else if (proxy.count === 0 && !bail) {
					callback(null, result);
				}
			}
		}

		function noop() {}
	}, function (module, exports, __webpack_require__) {

		var __WEBPACK_AMD_DEFINE_RESULT__;(function (module, global) {
			;(function (root) {
				var freeExports = typeof exports == 'object' && exports;

				var freeModule = typeof module == 'object' && module && module.exports == freeExports && module;

				var freeGlobal = typeof global == 'object' && global;
				if (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {
					root = freeGlobal;
				}

				var stringFromCharCode = String.fromCharCode;

				function ucs2decode(string) {
					var output = [];
					var counter = 0;
					var length = string.length;
					var value;
					var extra;
					while (counter < length) {
						value = string.charCodeAt(counter++);
						if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
							extra = string.charCodeAt(counter++);
							if ((extra & 0xFC00) == 0xDC00) {
								output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
							} else {
								output.push(value);
								counter--;
							}
						} else {
							output.push(value);
						}
					}
					return output;
				}

				function ucs2encode(array) {
					var length = array.length;
					var index = -1;
					var value;
					var output = '';
					while (++index < length) {
						value = array[index];
						if (value > 0xFFFF) {
							value -= 0x10000;
							output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);
							value = 0xDC00 | value & 0x3FF;
						}
						output += stringFromCharCode(value);
					}
					return output;
				}

				function createByte(codePoint, shift) {
					return stringFromCharCode(codePoint >> shift & 0x3F | 0x80);
				}

				function encodeCodePoint(codePoint) {
					if ((codePoint & 0xFFFFFF80) == 0) {
						return stringFromCharCode(codePoint);
					}
					var symbol = '';
					if ((codePoint & 0xFFFFF800) == 0) {
						symbol = stringFromCharCode(codePoint >> 6 & 0x1F | 0xC0);
					} else if ((codePoint & 0xFFFF0000) == 0) {
						symbol = stringFromCharCode(codePoint >> 12 & 0x0F | 0xE0);
						symbol += createByte(codePoint, 6);
					} else if ((codePoint & 0xFFE00000) == 0) {
						symbol = stringFromCharCode(codePoint >> 18 & 0x07 | 0xF0);
						symbol += createByte(codePoint, 12);
						symbol += createByte(codePoint, 6);
					}
					symbol += stringFromCharCode(codePoint & 0x3F | 0x80);
					return symbol;
				}

				function wtf8encode(string) {
					var codePoints = ucs2decode(string);
					var length = codePoints.length;
					var index = -1;
					var codePoint;
					var byteString = '';
					while (++index < length) {
						codePoint = codePoints[index];
						byteString += encodeCodePoint(codePoint);
					}
					return byteString;
				}

				function readContinuationByte() {
					if (byteIndex >= byteCount) {
						throw Error('Invalid byte index');
					}

					var continuationByte = byteArray[byteIndex] & 0xFF;
					byteIndex++;

					if ((continuationByte & 0xC0) == 0x80) {
						return continuationByte & 0x3F;
					}

					throw Error('Invalid continuation byte');
				}

				function decodeSymbol() {
					var byte1;
					var byte2;
					var byte3;
					var byte4;
					var codePoint;

					if (byteIndex > byteCount) {
						throw Error('Invalid byte index');
					}

					if (byteIndex == byteCount) {
						return false;
					}

					byte1 = byteArray[byteIndex] & 0xFF;
					byteIndex++;

					if ((byte1 & 0x80) == 0) {
						return byte1;
					}

					if ((byte1 & 0xE0) == 0xC0) {
						var byte2 = readContinuationByte();
						codePoint = (byte1 & 0x1F) << 6 | byte2;
						if (codePoint >= 0x80) {
							return codePoint;
						} else {
							throw Error('Invalid continuation byte');
						}
					}

					if ((byte1 & 0xF0) == 0xE0) {
						byte2 = readContinuationByte();
						byte3 = readContinuationByte();
						codePoint = (byte1 & 0x0F) << 12 | byte2 << 6 | byte3;
						if (codePoint >= 0x0800) {
							return codePoint;
						} else {
							throw Error('Invalid continuation byte');
						}
					}

					if ((byte1 & 0xF8) == 0xF0) {
						byte2 = readContinuationByte();
						byte3 = readContinuationByte();
						byte4 = readContinuationByte();
						codePoint = (byte1 & 0x0F) << 0x12 | byte2 << 0x0C | byte3 << 0x06 | byte4;
						if (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {
							return codePoint;
						}
					}

					throw Error('Invalid WTF-8 detected');
				}

				var byteArray;
				var byteCount;
				var byteIndex;
				function wtf8decode(byteString) {
					byteArray = ucs2decode(byteString);
					byteCount = byteArray.length;
					byteIndex = 0;
					var codePoints = [];
					var tmp;
					while ((tmp = decodeSymbol()) !== false) {
						codePoints.push(tmp);
					}
					return ucs2encode(codePoints);
				}

				var wtf8 = {
					'version': '1.0.0',
					'encode': wtf8encode,
					'decode': wtf8decode
				};

				if (true) {
					!(__WEBPACK_AMD_DEFINE_RESULT__ = function () {
						return wtf8;
					}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
				} else if (freeExports && !freeExports.nodeType) {
					if (freeModule) {
						freeModule.exports = wtf8;
					} else {
						var object = {};
						var hasOwnProperty = object.hasOwnProperty;
						for (var key in wtf8) {
							hasOwnProperty.call(wtf8, key) && (freeExports[key] = wtf8[key]);
						}
					}
				} else {
					root.wtf8 = wtf8;
				}
			})(this);
		}).call(exports, __webpack_require__(12)(module), function () {
			return this;
		}());
	}, function (module, exports) {
		(function () {
			"use strict";

			var chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";

			var lookup = new Uint8Array(256);
			for (var i = 0; i < chars.length; i++) {
				lookup[chars.charCodeAt(i)] = i;
			}

			exports.encode = function (arraybuffer) {
				var bytes = new Uint8Array(arraybuffer),
				    i,
				    len = bytes.length,
				    base64 = "";

				for (i = 0; i < len; i += 3) {
					base64 += chars[bytes[i] >> 2];
					base64 += chars[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];
					base64 += chars[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];
					base64 += chars[bytes[i + 2] & 63];
				}

				if (len % 3 === 2) {
					base64 = base64.substring(0, base64.length - 1) + "=";
				} else if (len % 3 === 1) {
					base64 = base64.substring(0, base64.length - 2) + "==";
				}

				return base64;
			};

			exports.decode = function (base64) {
				var bufferLength = base64.length * 0.75,
				    len = base64.length,
				    i,
				    p = 0,
				    encoded1,
				    encoded2,
				    encoded3,
				    encoded4;

				if (base64[base64.length - 1] === "=") {
					bufferLength--;
					if (base64[base64.length - 2] === "=") {
						bufferLength--;
					}
				}

				var arraybuffer = new ArrayBuffer(bufferLength),
				    bytes = new Uint8Array(arraybuffer);

				for (i = 0; i < len; i += 4) {
					encoded1 = lookup[base64.charCodeAt(i)];
					encoded2 = lookup[base64.charCodeAt(i + 1)];
					encoded3 = lookup[base64.charCodeAt(i + 2)];
					encoded4 = lookup[base64.charCodeAt(i + 3)];

					bytes[p++] = encoded1 << 2 | encoded2 >> 4;
					bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;
					bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;
				}

				return arraybuffer;
			};
		})();
	}, function (module, exports) {
		(function (global) {

			var BlobBuilder = global.BlobBuilder || global.WebKitBlobBuilder || global.MSBlobBuilder || global.MozBlobBuilder;

			var blobSupported = function () {
				try {
					var a = new Blob(['hi']);
					return a.size === 2;
				} catch (e) {
					return false;
				}
			}();

			var blobSupportsArrayBufferView = blobSupported && function () {
				try {
					var b = new Blob([new Uint8Array([1, 2])]);
					return b.size === 2;
				} catch (e) {
					return false;
				}
			}();

			var blobBuilderSupported = BlobBuilder && BlobBuilder.prototype.append && BlobBuilder.prototype.getBlob;

			function mapArrayBufferViews(ary) {
				for (var i = 0; i < ary.length; i++) {
					var chunk = ary[i];
					if (chunk.buffer instanceof ArrayBuffer) {
						var buf = chunk.buffer;

						if (chunk.byteLength !== buf.byteLength) {
							var copy = new Uint8Array(chunk.byteLength);
							copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));
							buf = copy.buffer;
						}

						ary[i] = buf;
					}
				}
			}

			function BlobBuilderConstructor(ary, options) {
				options = options || {};

				var bb = new BlobBuilder();
				mapArrayBufferViews(ary);

				for (var i = 0; i < ary.length; i++) {
					bb.append(ary[i]);
				}

				return options.type ? bb.getBlob(options.type) : bb.getBlob();
			};

			function BlobConstructor(ary, options) {
				mapArrayBufferViews(ary);
				return new Blob(ary, options || {});
			};

			module.exports = function () {
				if (blobSupported) {
					return blobSupportsArrayBufferView ? global.Blob : BlobConstructor;
				} else if (blobBuilderSupported) {
					return BlobBuilderConstructor;
				} else {
					return undefined;
				}
			}();
		}).call(exports, function () {
			return this;
		}());
	}, function (module, exports, __webpack_require__) {

		if (true) {
			module.exports = Emitter;
		}

		function Emitter(obj) {
			if (obj) return mixin(obj);
		};

		function mixin(obj) {
			for (var key in Emitter.prototype) {
				obj[key] = Emitter.prototype[key];
			}
			return obj;
		}

		Emitter.prototype.on = Emitter.prototype.addEventListener = function (event, fn) {
			this._callbacks = this._callbacks || {};
			(this._callbacks['$' + event] = this._callbacks['$' + event] || []).push(fn);
			return this;
		};

		Emitter.prototype.once = function (event, fn) {
			function on() {
				this.off(event, on);
				fn.apply(this, arguments);
			}

			on.fn = fn;
			this.on(event, on);
			return this;
		};

		Emitter.prototype.off = Emitter.prototype.removeListener = Emitter.prototype.removeAllListeners = Emitter.prototype.removeEventListener = function (event, fn) {
			this._callbacks = this._callbacks || {};

			if (0 == arguments.length) {
				this._callbacks = {};
				return this;
			}

			var callbacks = this._callbacks['$' + event];
			if (!callbacks) return this;

			if (1 == arguments.length) {
				delete this._callbacks['$' + event];
				return this;
			}

			var cb;
			for (var i = 0; i < callbacks.length; i++) {
				cb = callbacks[i];
				if (cb === fn || cb.fn === fn) {
					callbacks.splice(i, 1);
					break;
				}
			}
			return this;
		};

		Emitter.prototype.emit = function (event) {
			this._callbacks = this._callbacks || {};
			var args = [].slice.call(arguments, 1),
			    callbacks = this._callbacks['$' + event];

			if (callbacks) {
				callbacks = callbacks.slice(0);
				for (var i = 0, len = callbacks.length; i < len; ++i) {
					callbacks[i].apply(this, args);
				}
			}

			return this;
		};

		Emitter.prototype.listeners = function (event) {
			this._callbacks = this._callbacks || {};
			return this._callbacks['$' + event] || [];
		};

		Emitter.prototype.hasListeners = function (event) {
			return !!this.listeners(event).length;
		};
	}, function (module, exports) {

		exports.encode = function (obj) {
			var str = '';

			for (var i in obj) {
				if (obj.hasOwnProperty(i)) {
					if (str.length) str += '&';
					str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);
				}
			}

			return str;
		};

		exports.decode = function (qs) {
			var qry = {};
			var pairs = qs.split('&');
			for (var i = 0, l = pairs.length; i < l; i++) {
				var pair = pairs[i].split('=');
				qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);
			}
			return qry;
		};
	}, function (module, exports) {

		module.exports = function (a, b) {
			var fn = function fn() {};
			fn.prototype = b.prototype;
			a.prototype = new fn();
			a.prototype.constructor = a;
		};
	}, function (module, exports) {

		'use strict';

		var alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''),
		    length = 64,
		    map = {},
		    seed = 0,
		    i = 0,
		    prev;

		function encode(num) {
			var encoded = '';

			do {
				encoded = alphabet[num % length] + encoded;
				num = Math.floor(num / length);
			} while (num > 0);

			return encoded;
		}

		function decode(str) {
			var decoded = 0;

			for (i = 0; i < str.length; i++) {
				decoded = decoded * length + map[str.charAt(i)];
			}

			return decoded;
		}

		function yeast() {
			var now = encode(+new Date());

			if (now !== prev) return seed = 0, prev = now;
			return now + '.' + encode(seed++);
		}

		for (; i < length; i++) {
			map[alphabet[i]] = i;
		}
		yeast.encode = encode;
		yeast.decode = decode;
		module.exports = yeast;
	}, function (module, exports, __webpack_require__) {
		(function (global) {

			var Polling = __webpack_require__(25);
			var inherit = __webpack_require__(37);

			module.exports = JSONPPolling;

			var rNewline = /\n/g;
			var rEscapedNewline = /\\n/g;

			var callbacks;

			function empty() {}

			function JSONPPolling(opts) {
				Polling.call(this, opts);

				this.query = this.query || {};

				if (!callbacks) {
					if (!global.___eio) global.___eio = [];
					callbacks = global.___eio;
				}

				this.index = callbacks.length;

				var self = this;
				callbacks.push(function (msg) {
					self.onData(msg);
				});

				this.query.j = this.index;

				if (global.document && global.addEventListener) {
					global.addEventListener('beforeunload', function () {
						if (self.script) self.script.onerror = empty;
					}, false);
				}
			}

			inherit(JSONPPolling, Polling);

			JSONPPolling.prototype.supportsBinary = false;

			JSONPPolling.prototype.doClose = function () {
				if (this.script) {
					this.script.parentNode.removeChild(this.script);
					this.script = null;
				}

				if (this.form) {
					this.form.parentNode.removeChild(this.form);
					this.form = null;
					this.iframe = null;
				}

				Polling.prototype.doClose.call(this);
			};

			JSONPPolling.prototype.doPoll = function () {
				var self = this;
				var script = document.createElement('script');

				if (this.script) {
					this.script.parentNode.removeChild(this.script);
					this.script = null;
				}

				script.async = true;
				script.src = this.uri();
				script.onerror = function (e) {
					self.onError('jsonp poll error', e);
				};

				var insertAt = document.getElementsByTagName('script')[0];
				if (insertAt) {
					insertAt.parentNode.insertBefore(script, insertAt);
				} else {
					(document.head || document.body).appendChild(script);
				}
				this.script = script;

				var isUAgecko = 'undefined' !== typeof navigator && /gecko/i.test(navigator.userAgent);

				if (isUAgecko) {
					setTimeout(function () {
						var iframe = document.createElement('iframe');
						document.body.appendChild(iframe);
						document.body.removeChild(iframe);
					}, 100);
				}
			};

			JSONPPolling.prototype.doWrite = function (data, fn) {
				var self = this;

				if (!this.form) {
					var form = document.createElement('form');
					var area = document.createElement('textarea');
					var id = this.iframeId = 'eio_iframe_' + this.index;
					var iframe;

					form.className = 'socketio';
					form.style.position = 'absolute';
					form.style.top = '-1000px';
					form.style.left = '-1000px';
					form.target = id;
					form.method = 'POST';
					form.setAttribute('accept-charset', 'utf-8');
					area.name = 'd';
					form.appendChild(area);
					document.body.appendChild(form);

					this.form = form;
					this.area = area;
				}

				this.form.action = this.uri();

				function complete() {
					initIframe();
					fn();
				}

				function initIframe() {
					if (self.iframe) {
						try {
							self.form.removeChild(self.iframe);
						} catch (e) {
							self.onError('jsonp polling iframe removal error', e);
						}
					}

					try {
						var html = '<iframe src="javascript:0" name="' + self.iframeId + '">';
						iframe = document.createElement(html);
					} catch (e) {
						iframe = document.createElement('iframe');
						iframe.name = self.iframeId;
						iframe.src = 'javascript:0';
					}

					iframe.id = self.iframeId;

					self.form.appendChild(iframe);
					self.iframe = iframe;
				}

				initIframe();

				data = data.replace(rEscapedNewline, '\\\n');
				this.area.value = data.replace(rNewline, '\\n');

				try {
					this.form.submit();
				} catch (e) {}

				if (this.iframe.attachEvent) {
					this.iframe.onreadystatechange = function () {
						if (self.iframe.readyState === 'complete') {
							complete();
						}
					};
				} else {
					this.iframe.onload = complete;
				}
			};
		}).call(exports, function () {
			return this;
		}());
	}, function (module, exports, __webpack_require__) {
		(function (global) {

			var Transport = __webpack_require__(26);
			var parser = __webpack_require__(27);
			var parseqs = __webpack_require__(36);
			var inherit = __webpack_require__(37);
			var yeast = __webpack_require__(38);
			var debug = __webpack_require__(3)('engine.io-client:websocket');
			var BrowserWebSocket = global.WebSocket || global.MozWebSocket;
			var NodeWebSocket;
			if (typeof window === 'undefined') {
				try {
					NodeWebSocket = __webpack_require__(41);
				} catch (e) {}
			}

			var WebSocket = BrowserWebSocket;
			if (!WebSocket && typeof window === 'undefined') {
				WebSocket = NodeWebSocket;
			}

			module.exports = WS;

			function WS(opts) {
				var forceBase64 = opts && opts.forceBase64;
				if (forceBase64) {
					this.supportsBinary = false;
				}
				this.perMessageDeflate = opts.perMessageDeflate;
				this.usingBrowserWebSocket = BrowserWebSocket && !opts.forceNode;
				if (!this.usingBrowserWebSocket) {
					WebSocket = NodeWebSocket;
				}
				Transport.call(this, opts);
			}

			inherit(WS, Transport);

			WS.prototype.name = 'websocket';

			WS.prototype.supportsBinary = true;

			WS.prototype.doOpen = function () {
				if (!this.check()) {
					return;
				}

				var uri = this.uri();
				var protocols = void 0;
				var opts = {
					agent: this.agent,
					perMessageDeflate: this.perMessageDeflate
				};

				opts.pfx = this.pfx;
				opts.key = this.key;
				opts.passphrase = this.passphrase;
				opts.cert = this.cert;
				opts.ca = this.ca;
				opts.ciphers = this.ciphers;
				opts.rejectUnauthorized = this.rejectUnauthorized;
				if (this.extraHeaders) {
					opts.headers = this.extraHeaders;
				}
				if (this.localAddress) {
					opts.localAddress = this.localAddress;
				}

				try {
					this.ws = this.usingBrowserWebSocket ? new WebSocket(uri) : new WebSocket(uri, protocols, opts);
				} catch (err) {
					return this.emit('error', err);
				}

				if (this.ws.binaryType === undefined) {
					this.supportsBinary = false;
				}

				if (this.ws.supports && this.ws.supports.binary) {
					this.supportsBinary = true;
					this.ws.binaryType = 'nodebuffer';
				} else {
					this.ws.binaryType = 'arraybuffer';
				}

				this.addEventListeners();
			};

			WS.prototype.addEventListeners = function () {
				var self = this;

				this.ws.onopen = function () {
					self.onOpen();
				};
				this.ws.onclose = function () {
					self.onClose();
				};
				this.ws.onmessage = function (ev) {
					self.onData(ev.data);
				};
				this.ws.onerror = function (e) {
					self.onError('websocket error', e);
				};
			};

			WS.prototype.write = function (packets) {
				var self = this;
				this.writable = false;

				var total = packets.length;
				for (var i = 0, l = total; i < l; i++) {
					(function (packet) {
						parser.encodePacket(packet, self.supportsBinary, function (data) {
							if (!self.usingBrowserWebSocket) {
								var opts = {};
								if (packet.options) {
									opts.compress = packet.options.compress;
								}

								if (self.perMessageDeflate) {
									var len = 'string' === typeof data ? global.Buffer.byteLength(data) : data.length;
									if (len < self.perMessageDeflate.threshold) {
										opts.compress = false;
									}
								}
							}

							try {
								if (self.usingBrowserWebSocket) {
									self.ws.send(data);
								} else {
									self.ws.send(data, opts);
								}
							} catch (e) {
								debug('websocket closed before onclose event');
							}

							--total || done();
						});
					})(packets[i]);
				}

				function done() {
					self.emit('flush');

					setTimeout(function () {
						self.writable = true;
						self.emit('drain');
					}, 0);
				}
			};

			WS.prototype.onClose = function () {
				Transport.prototype.onClose.call(this);
			};

			WS.prototype.doClose = function () {
				if (typeof this.ws !== 'undefined') {
					this.ws.close();
				}
			};

			WS.prototype.uri = function () {
				var query = this.query || {};
				var schema = this.secure ? 'wss' : 'ws';
				var port = '';

				if (this.port && ('wss' === schema && Number(this.port) !== 443 || 'ws' === schema && Number(this.port) !== 80)) {
					port = ':' + this.port;
				}

				if (this.timestampRequests) {
					query[this.timestampParam] = yeast();
				}

				if (!this.supportsBinary) {
					query.b64 = 1;
				}

				query = parseqs.encode(query);

				if (query.length) {
					query = '?' + query;
				}

				var ipv6 = this.hostname.indexOf(':') !== -1;
				return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;
			};

			WS.prototype.check = function () {
				return !!WebSocket && !('__initialize' in WebSocket && this.name === WS.prototype.name);
			};
		}).call(exports, function () {
			return this;
		}());
	}, function (module, exports) {}, function (module, exports) {

		var indexOf = [].indexOf;

		module.exports = function (arr, obj) {
			if (indexOf) return arr.indexOf(obj);
			for (var i = 0; i < arr.length; ++i) {
				if (arr[i] === obj) return i;
			}
			return -1;
		};
	}, function (module, exports) {
		(function (global) {

			var rvalidchars = /^[\],:{}\s]*$/;
			var rvalidescape = /\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g;
			var rvalidtokens = /"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
			var rvalidbraces = /(?:^|:|,)(?:\s*\[)+/g;
			var rtrimLeft = /^\s+/;
			var rtrimRight = /\s+$/;

			module.exports = function parsejson(data) {
				if ('string' != typeof data || !data) {
					return null;
				}

				data = data.replace(rtrimLeft, '').replace(rtrimRight, '');

				if (global.JSON && JSON.parse) {
					return JSON.parse(data);
				}

				if (rvalidchars.test(data.replace(rvalidescape, '@').replace(rvalidtokens, ']').replace(rvalidbraces, ''))) {
					return new Function('return ' + data)();
				}
			};
		}).call(exports, function () {
			return this;
		}());
	}, function (module, exports, __webpack_require__) {

		'use strict';

		var parser = __webpack_require__(7);
		var Emitter = __webpack_require__(35);
		var toArray = __webpack_require__(45);
		var on = __webpack_require__(46);
		var bind = __webpack_require__(47);
		var debug = __webpack_require__(3)('socket.io-client:socket');
		var hasBin = __webpack_require__(29);

		module.exports = exports = Socket;

		var events = {
			connect: 1,
			connect_error: 1,
			connect_timeout: 1,
			connecting: 1,
			disconnect: 1,
			error: 1,
			reconnect: 1,
			reconnect_attempt: 1,
			reconnect_failed: 1,
			reconnect_error: 1,
			reconnecting: 1,
			ping: 1,
			pong: 1
		};

		var emit = Emitter.prototype.emit;

		function Socket(io, nsp, opts) {
			this.io = io;
			this.nsp = nsp;
			this.json = this;
			this.ids = 0;
			this.acks = {};
			this.receiveBuffer = [];
			this.sendBuffer = [];
			this.connected = false;
			this.disconnected = true;
			if (opts && opts.query) {
				this.query = opts.query;
			}
			if (this.io.autoConnect) this.open();
		}

		Emitter(Socket.prototype);

		Socket.prototype.subEvents = function () {
			if (this.subs) return;

			var io = this.io;
			this.subs = [on(io, 'open', bind(this, 'onopen')), on(io, 'packet', bind(this, 'onpacket')), on(io, 'close', bind(this, 'onclose'))];
		};

		Socket.prototype.open = Socket.prototype.connect = function () {
			if (this.connected) return this;

			this.subEvents();
			this.io.open();
			if ('open' === this.io.readyState) this.onopen();
			this.emit('connecting');
			return this;
		};

		Socket.prototype.send = function () {
			var args = toArray(arguments);
			args.unshift('message');
			this.emit.apply(this, args);
			return this;
		};

		Socket.prototype.emit = function (ev) {
			if (events.hasOwnProperty(ev)) {
				emit.apply(this, arguments);
				return this;
			}

			var args = toArray(arguments);
			var parserType = parser.EVENT;
			if (hasBin(args)) {
				parserType = parser.BINARY_EVENT;
			}
			var packet = { type: parserType, data: args };

			packet.options = {};
			packet.options.compress = !this.flags || false !== this.flags.compress;

			if ('function' === typeof args[args.length - 1]) {
				debug('emitting packet with ack id %d', this.ids);
				this.acks[this.ids] = args.pop();
				packet.id = this.ids++;
			}

			if (this.connected) {
				this.packet(packet);
			} else {
				this.sendBuffer.push(packet);
			}

			delete this.flags;

			return this;
		};

		Socket.prototype.packet = function (packet) {
			packet.nsp = this.nsp;
			this.io.packet(packet);
		};

		Socket.prototype.onopen = function () {
			debug('transport is open - connecting');

			if ('/' !== this.nsp) {
				if (this.query) {
					this.packet({ type: parser.CONNECT, query: this.query });
				} else {
					this.packet({ type: parser.CONNECT });
				}
			}
		};

		Socket.prototype.onclose = function (reason) {
			debug('close (%s)', reason);
			this.connected = false;
			this.disconnected = true;
			delete this.id;
			this.emit('disconnect', reason);
		};

		Socket.prototype.onpacket = function (packet) {
			if (packet.nsp !== this.nsp) return;

			switch (packet.type) {
				case parser.CONNECT:
					this.onconnect();
					break;

				case parser.EVENT:
					this.onevent(packet);
					break;

				case parser.BINARY_EVENT:
					this.onevent(packet);
					break;

				case parser.ACK:
					this.onack(packet);
					break;

				case parser.BINARY_ACK:
					this.onack(packet);
					break;

				case parser.DISCONNECT:
					this.ondisconnect();
					break;

				case parser.ERROR:
					this.emit('error', packet.data);
					break;
			}
		};

		Socket.prototype.onevent = function (packet) {
			var args = packet.data || [];
			debug('emitting event %j', args);

			if (null != packet.id) {
				debug('attaching ack callback to event');
				args.push(this.ack(packet.id));
			}

			if (this.connected) {
				emit.apply(this, args);
			} else {
				this.receiveBuffer.push(args);
			}
		};

		Socket.prototype.ack = function (id) {
			var self = this;
			var sent = false;
			return function () {
				if (sent) return;
				sent = true;
				var args = toArray(arguments);
				debug('sending ack %j', args);

				var type = hasBin(args) ? parser.BINARY_ACK : parser.ACK;
				self.packet({
					type: type,
					id: id,
					data: args
				});
			};
		};

		Socket.prototype.onack = function (packet) {
			var ack = this.acks[packet.id];
			if ('function' === typeof ack) {
				debug('calling ack %s with %j', packet.id, packet.data);
				ack.apply(this, packet.data);
				delete this.acks[packet.id];
			} else {
				debug('bad ack %s', packet.id);
			}
		};

		Socket.prototype.onconnect = function () {
			this.connected = true;
			this.disconnected = false;
			this.emit('connect');
			this.emitBuffered();
		};

		Socket.prototype.emitBuffered = function () {
			var i;
			for (i = 0; i < this.receiveBuffer.length; i++) {
				emit.apply(this, this.receiveBuffer[i]);
			}
			this.receiveBuffer = [];

			for (i = 0; i < this.sendBuffer.length; i++) {
				this.packet(this.sendBuffer[i]);
			}
			this.sendBuffer = [];
		};

		Socket.prototype.ondisconnect = function () {
			debug('server disconnect (%s)', this.nsp);
			this.destroy();
			this.onclose('io server disconnect');
		};

		Socket.prototype.destroy = function () {
			if (this.subs) {
				for (var i = 0; i < this.subs.length; i++) {
					this.subs[i].destroy();
				}
				this.subs = null;
			}

			this.io.destroy(this);
		};

		Socket.prototype.close = Socket.prototype.disconnect = function () {
			if (this.connected) {
				debug('performing disconnect (%s)', this.nsp);
				this.packet({ type: parser.DISCONNECT });
			}

			this.destroy();

			if (this.connected) {
				this.onclose('io client disconnect');
			}
			return this;
		};

		Socket.prototype.compress = function (compress) {
			this.flags = this.flags || {};
			this.flags.compress = compress;
			return this;
		};
	}, function (module, exports) {

		module.exports = toArray;

		function toArray(list, index) {
			var array = [];

			index = index || 0;

			for (var i = index || 0; i < list.length; i++) {
				array[i - index] = list[i];
			}

			return array;
		}
	}, function (module, exports) {

		"use strict";

		module.exports = on;

		function on(obj, ev, fn) {
			obj.on(ev, fn);
			return {
				destroy: function destroy() {
					obj.removeListener(ev, fn);
				}
			};
		}
	}, function (module, exports) {

		var slice = [].slice;

		module.exports = function (obj, fn) {
			if ('string' == typeof fn) fn = obj[fn];
			if ('function' != typeof fn) throw new Error('bind() requires a function');
			var args = slice.call(arguments, 2);
			return function () {
				return fn.apply(obj, args.concat(slice.call(arguments)));
			};
		};
	}, function (module, exports) {

		module.exports = Backoff;

		function Backoff(opts) {
			opts = opts || {};
			this.ms = opts.min || 100;
			this.max = opts.max || 10000;
			this.factor = opts.factor || 2;
			this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;
			this.attempts = 0;
		}

		Backoff.prototype.duration = function () {
			var ms = this.ms * Math.pow(this.factor, this.attempts++);
			if (this.jitter) {
				var rand = Math.random();
				var deviation = Math.floor(rand * this.jitter * ms);
				ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;
			}
			return Math.min(ms, this.max) | 0;
		};

		Backoff.prototype.reset = function () {
			this.attempts = 0;
		};

		Backoff.prototype.setMin = function (min) {
			this.ms = min;
		};

		Backoff.prototype.setMax = function (max) {
			this.max = max;
		};

		Backoff.prototype.setJitter = function (jitter) {
			this.jitter = jitter;
		};
	}]);
});
;
}, 1140, null, "socket.io-client/dist/socket.io.js");
__d(/* reactotron-redux/dist/index.js */function(global, require, module, exports) {'use strict';

function _interopDefault(ex) {
  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;
}

var R = require(1142   ); // 1142 = ramda
var R__default = _interopDefault(R);
var redux = require(1460   ); // 1460 = redux
var RS = _interopDefault(require(1048        )); // 1048 = ramdasauce

var DEFAULT_REPLACER_TYPE = 'REACTOTRON_RESTORE_STATE';

var createReplacementReducer = function createReplacementReducer(rootReducer) {
  var actionName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_REPLACER_TYPE;

  return function (state, action) {
    var whichState = action.type === actionName ? action.state : state;
    return rootReducer(whichState, action);
  };
};

var _typeof = typeof Symbol === "function" && typeof (typeof Symbol === 'function' ? Symbol.iterator : '@@iterator') === "symbol" ? function (obj) {
  return typeof obj;
} : function (obj) {
  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== (typeof Symbol === 'function' ? Symbol.prototype : '@@prototype') ? "symbol" : typeof obj;
};

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

var DEFAULTS = {};var createActionTracker = function createActionTracker(reactotron) {
  var trackerOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  if (!(R.is(Object, reactotron) && typeof reactotron.use === 'function')) {
    throw new Error('invalid reactotron passed');
  }

  var options = R.merge(DEFAULTS, trackerOptions);
  var exceptions = R.concat([DEFAULT_REPLACER_TYPE], options.except || []);

  return function (next) {
    return function (reducer, initialState, enhancer) {
      var store = next(reducer, initialState, enhancer);

      return _extends({}, store, {
        dispatch: function dispatch(action) {
          var elapsed = reactotron.startTimer();

          var result = store.dispatch(action);

          var ms = elapsed();

          var unwrappedAction = action.type === 'PERFORM_ACTION' && action.action ? action.action : action;

          var matchException = function matchException(exception, actionType) {
            if (typeof exception === 'string') {
              return actionType === exception;
            } else if (typeof exception === 'function') {
              return exception(actionType);
            } else if (exception instanceof RegExp) {
              return exception.test(actionType);
            } else {
              return false;
            }
          };

          var matchExceptions = R.any(function (exception) {
            return matchException(exception, unwrappedAction.type);
          }, exceptions);

          if (!matchExceptions) {
            var important = false;
            if (trackerOptions && typeof trackerOptions.isActionImportant === 'function') {
              important = !!trackerOptions.isActionImportant(unwrappedAction);
            }

            reactotron.reportReduxAction(unwrappedAction, ms, important);
          }

          return result;
        }
      });
    };
  };
};

var reportAction = function reportAction(reactotron, action, ms) {
  var important = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;

  var name = action.type;

  if ((typeof name === 'undefined' ? 'undefined' : _typeof(name)) === 'symbol') {
    name = name.toString().replace(/^Symbol\(/, '').replace(/\)$/, '');
  }

  reactotron.send('state.action.complete', { name: name, action: action, ms: ms }, important);
};

var createStore$1 = function createStore$1(reactotron, rootReducer, preloadedState, enhancer) {
  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {
    enhancer = preloadedState;
    preloadedState = undefined;
  }

  var reducer = reactotron.createReplacementReducer(rootReducer);

  var wrappedEnhancer = redux.compose(enhancer, reactotron.createActionTracker());

  var store = redux.createStore(reducer, preloadedState, wrappedEnhancer);

  reactotron.setReduxStore(store);

  return store;
};

var getCleanedState = function getCleanedState(state) {
  if (state.toJS) {
    return state.toJS();
  }

  return state;
};

var requestKeys = function requestKeys(state, reactotron, path) {
  var cleanedState = getCleanedState(state);

  if (RS.isNilOrEmpty(path)) {
    reactotron.stateKeysResponse(null, R__default.keys(cleanedState));
  } else {
    var keys = R__default.keys(RS.dotPath(path, cleanedState));
    reactotron.stateKeysResponse(path, keys);
  }
};

var requestValues = function requestValues(state, reactotron, path) {
  var cleanedState = getCleanedState(state);

  if (RS.isNilOrEmpty(path)) {
    reactotron.stateValuesResponse(null, cleanedState);
  } else {
    reactotron.stateValuesResponse(path, RS.dotPath(path, cleanedState));
  }
};

var getSubscriptionValues = function getSubscriptionValues(subscriptions, state) {
  var cleanedState = getCleanedState(state);

  return R__default.pipe(R__default.map(R__default.when(R__default.isNil, R__default.always(''))), R__default.filter(RS.endsWith('.*')), R__default.map(function (key) {
    var keyMinusWildcard = R__default.slice(0, -2, key);
    var value = RS.dotPath(keyMinusWildcard, cleanedState);
    if (R__default.is(Object, value) && !RS.isNilOrEmpty(value)) {
      return R__default.pipe(R__default.keys, R__default.map(function (key) {
        return keyMinusWildcard + '.' + key;
      }))(value);
    }
    return [];
  }), R__default.concat(R__default.map(R__default.when(R__default.isNil, R__default.always('')), subscriptions)), R__default.flatten, R__default.reject(RS.endsWith('.*')), R__default.uniq, R__default.sortBy(R__default.identity), R__default.map(function (key) {
    return {
      path: key,
      value: RS.isNilOrEmpty(key) ? cleanedState : RS.dotPath(key, cleanedState)
    };
  }))(subscriptions);
};

var _this = undefined;

var reactotronRedux = function reactotronRedux() {
  var pluginConfig = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return function (reactotron) {
    var reduxStore = null;

    var subscriptions = [];

    var sendSubscriptions = function sendSubscriptions() {
      var changes = getSubscriptionValues(subscriptions, reduxStore.getState());
      reactotron.stateValuesChange(changes);
    };

    var sendSubscriptionsIfNeeded = function sendSubscriptionsIfNeeded() {
      var changes = getSubscriptionValues(subscriptions, reduxStore.getState());
      if (!R.isEmpty(changes)) {
        sendSubscriptions();
      }
    };

    var restoreActionType = pluginConfig.restoreActionType || DEFAULT_REPLACER_TYPE;
    var onBackup = pluginConfig.onBackup || R.identity;
    var onRestore = pluginConfig.onRestore || R.identity;

    return {
      onCommand: function onCommand(_ref) {
        var type = _ref.type,
            payload = _ref.payload;

        switch (type) {
          case 'state.keys.request':
            return requestKeys(reduxStore.getState(), reactotron, payload.path);

          case 'state.values.request':
            return requestValues(reduxStore.getState(), reactotron, payload.path);

          case 'state.values.subscribe':
            subscriptions = R.pipe(R.flatten, R.uniq)(payload.paths);
            sendSubscriptions();
            return;

          case 'state.action.dispatch':
            reduxStore.dispatch(payload.action);
            return;

          case 'state.backup.request':
            {
              var state = onBackup(reduxStore.getState());
              reactotron.send('state.backup.response', { state: state });
              return;
            }

          case 'state.restore.request':
            {
              var _state = onRestore(payload.state, reduxStore.getState());
              reduxStore.dispatch({ type: restoreActionType, state: _state });
            }
        }
      },

      features: {
        createActionTracker: createActionTracker.bind(_this, reactotron, pluginConfig),

        reportReduxAction: reportAction.bind(_this, reactotron),

        createReplacementReducer: createReplacementReducer,

        createStore: createStore$1.bind(_this, reactotron),

        setReduxStore: function setReduxStore(store) {
          reduxStore = store;

          store.subscribe(sendSubscriptionsIfNeeded);
        }
      }
    };
  };
};

var RESTORE_ACTION_TYPE = 'REACTOTRON_RESTORE_STATE';
var DEFAULT_ON_BACKUP = function DEFAULT_ON_BACKUP(state) {
  return state;
};
var DEFAULT_ON_RESTORE = function DEFAULT_ON_RESTORE(state) {
  return state;
};

var createPlugin = function createPlugin(store) {
  var pluginConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  var restoreActionType = pluginConfig.restoreActionType || RESTORE_ACTION_TYPE;

  var onBackup = pluginConfig.onBackup || DEFAULT_ON_BACKUP;
  var onRestore = pluginConfig.onRestore || DEFAULT_ON_RESTORE;

  var capturedSend = void 0;

  var subscriptions = [];

  var plugin = function plugin(reactotron) {
    capturedSend = reactotron.send;

    var sendSubscriptions = function sendSubscriptions() {
      var changes = getSubscriptionValues(subscriptions, store.getState());
      reactotron.stateValuesChange(changes);
    };

    var sendSubscriptionsIfNeeded = function sendSubscriptionsIfNeeded() {
      var changes = getSubscriptionValues(subscriptions, store.getState());
      if (!R.isEmpty(changes)) {
        sendSubscriptions();
      }
    };

    store.subscribe(sendSubscriptionsIfNeeded);

    return {
      onCommand: function onCommand(_ref) {
        var type = _ref.type,
            payload = _ref.payload;

        switch (type) {
          case 'state.keys.request':
            return requestKeys(store.getState(), reactotron, payload.path);

          case 'state.values.request':
            return requestValues(store.getState(), reactotron, payload.path);

          case 'state.values.subscribe':
            subscriptions = R.pipe(R.flatten, R.uniq)(payload.paths);
            sendSubscriptions();
            return;

          case 'state.action.dispatch':
            store.dispatch(payload.action);
            return;

          case 'state.backup.request':
            {
              var state = onBackup(store.getState());
              reactotron.send('state.backup.response', { state: state });
              return;
            }

          case 'state.restore.request':
            {
              var _state = onRestore(payload.state);
              store.dispatch({ type: restoreActionType, state: _state });
            }
        }
      }
    };
  };

  plugin.report = function (action, ms) {
    var important = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

    if (!capturedSend) return;

    var name = action.type;

    if ((typeof name === 'undefined' ? 'undefined' : _typeof(name)) === 'symbol') {
      name = name.toString().replace(/^Symbol\(/, '').replace(/\)$/, '');
    }

    capturedSend('state.action.complete', { name: name, action: action, ms: ms }, important);
  };

  return plugin;
};

var DEFAULTS$1 = {};var createReactotronStoreEnhancer = function createReactotronStoreEnhancer(reactotron) {
  var enhancerOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  if (!(R.is(Object, reactotron) && typeof reactotron.use === 'function')) {
    throw new Error('invalid reactotron passed');
  }

  var options = R.merge(DEFAULTS$1, enhancerOptions);
  var exceptions = R.concat(['REACTOTRON_RESTORE_STATE'], options.except || []);

  var reactotronEnhancer = function reactotronEnhancer(createStore$$1) {
    return function (reducer, initialState, enhancer) {
      var store = createStore$$1(reducer, initialState, enhancer);

      var originalDispatch = store.dispatch;

      var dispatch = function dispatch(action) {
        var elapsed = reactotron.startTimer();

        var result = originalDispatch(action);

        var ms = elapsed();

        if (!R.contains(action.type, exceptions)) {
          var important = false;
          if (enhancerOptions && typeof enhancerOptions.isActionImportant === 'function') {
            important = !!enhancerOptions.isActionImportant(action);
          }

          plugin.report(action, ms, important);
        }

        return result;
      };
      var newStore = R.merge(store, { dispatch: dispatch.bind(store) });

      var plugin = createPlugin(newStore, {
        onRestore: options.onRestore,
        onBackup: options.onBackup
      });
      reactotron.use(plugin);

      return newStore;
    };
  };

  return reactotronEnhancer;
};

createReactotronStoreEnhancer.createReactotronStoreEnhancer = createReactotronStoreEnhancer;

createReactotronStoreEnhancer.createReplacementReducer = createReplacementReducer;

createReactotronStoreEnhancer.reactotronRedux = reactotronRedux;

module.exports = createReactotronStoreEnhancer;
}, 1141, null, "reactotron-redux/dist/index.js");
__d(/* ramda/index.js */function(global, require, module, exports) {module.exports = {
  F: require(1143     ), // 1143 = ./src/F
  T: require(1147     ), // 1147 = ./src/T
  __: require(1148      ), // 1148 = ./src/__
  add: require(1149       ), // 1149 = ./src/add
  addIndex: require(1151            ), // 1151 = ./src/addIndex
  adjust: require(1156          ), // 1156 = ./src/adjust
  all: require(1158       ), // 1158 = ./src/all
  allPass: require(1165           ), // 1165 = ./src/allPass
  always: require(1144          ), // 1144 = ./src/always
  and: require(1181       ), // 1181 = ./src/and
  any: require(1182       ), // 1182 = ./src/any
  anyPass: require(1184           ), // 1184 = ./src/anyPass
  ap: require(1185      ), // 1185 = ./src/ap
  aperture: require(1186            ), // 1186 = ./src/aperture
  append: require(1189          ), // 1189 = ./src/append
  apply: require(1190         ), // 1190 = ./src/apply
  applySpec: require(1191             ), // 1191 = ./src/applySpec
  ascend: require(1193          ), // 1193 = ./src/ascend
  assoc: require(1194         ), // 1194 = ./src/assoc
  assocPath: require(1195             ), // 1195 = ./src/assocPath
  binary: require(1198          ), // 1198 = ./src/binary
  bind: require(1174        ), // 1174 = ./src/bind
  both: require(1200        ), // 1200 = ./src/both
  call: require(1204        ), // 1204 = ./src/call
  chain: require(1206         ), // 1206 = ./src/chain
  clamp: require(1211         ), // 1211 = ./src/clamp
  clone: require(1212         ), // 1212 = ./src/clone
  comparator: require(1216              ), // 1216 = ./src/comparator
  complement: require(1217              ), // 1217 = ./src/complement
  compose: require(1219           ), // 1219 = ./src/compose
  composeK: require(1226            ), // 1226 = ./src/composeK
  composeP: require(1227            ), // 1227 = ./src/composeP
  concat: require(1230          ), // 1230 = ./src/concat
  cond: require(1248        ), // 1248 = ./src/cond
  construct: require(1249             ), // 1249 = ./src/construct
  constructN: require(1250              ), // 1250 = ./src/constructN
  contains: require(1251            ), // 1251 = ./src/contains
  converge: require(1252            ), // 1252 = ./src/converge
  countBy: require(1253           ), // 1253 = ./src/countBy
  curry: require(1205         ), // 1205 = ./src/curry
  curryN: require(1153          ), // 1153 = ./src/curryN
  dec: require(1256       ), // 1256 = ./src/dec
  defaultTo: require(1257             ), // 1257 = ./src/defaultTo
  descend: require(1258           ), // 1258 = ./src/descend
  difference: require(1259              ), // 1259 = ./src/difference
  differenceWith: require(1260                  ), // 1260 = ./src/differenceWith
  dissoc: require(1262          ), // 1262 = ./src/dissoc
  dissocPath: require(1263              ), // 1263 = ./src/dissocPath
  divide: require(1266          ), // 1266 = ./src/divide
  drop: require(1267        ), // 1267 = ./src/drop
  dropLast: require(1269            ), // 1269 = ./src/dropLast
  dropLastWhile: require(1274                 ), // 1274 = ./src/dropLastWhile
  dropRepeats: require(1277               ), // 1277 = ./src/dropRepeats
  dropRepeatsWith: require(1279                   ), // 1279 = ./src/dropRepeatsWith
  dropWhile: require(1282             ), // 1282 = ./src/dropWhile
  either: require(1284          ), // 1284 = ./src/either
  empty: require(1286         ), // 1286 = ./src/empty
  endsWith: require(1287            ), // 1287 = ./src/endsWith
  eqBy: require(1289        ), // 1289 = ./src/eqBy
  eqProps: require(1290           ), // 1290 = ./src/eqProps
  equals: require(1235          ), // 1235 = ./src/equals
  evolve: require(1291          ), // 1291 = ./src/evolve
  filter: require(1244          ), // 1244 = ./src/filter
  find: require(1292        ), // 1292 = ./src/find
  findIndex: require(1294             ), // 1294 = ./src/findIndex
  findLast: require(1296            ), // 1296 = ./src/findLast
  findLastIndex: require(1298                 ), // 1298 = ./src/findLastIndex
  flatten: require(1300           ), // 1300 = ./src/flatten
  flip: require(1301        ), // 1301 = ./src/flip
  forEach: require(1302           ), // 1302 = ./src/forEach
  forEachObjIndexed: require(1303                     ), // 1303 = ./src/forEachObjIndexed
  fromPairs: require(1304             ), // 1304 = ./src/fromPairs
  groupBy: require(1305           ), // 1305 = ./src/groupBy
  groupWith: require(1306             ), // 1306 = ./src/groupWith
  gt: require(1307      ), // 1307 = ./src/gt
  gte: require(1308       ), // 1308 = ./src/gte
  has: require(1309       ), // 1309 = ./src/has
  hasIn: require(1310         ), // 1310 = ./src/hasIn
  head: require(1311        ), // 1311 = ./src/head
  identical: require(1239             ), // 1239 = ./src/identical
  identity: require(1312            ), // 1312 = ./src/identity
  ifElse: require(1314          ), // 1314 = ./src/ifElse
  inc: require(1315       ), // 1315 = ./src/inc
  indexBy: require(1316           ), // 1316 = ./src/indexBy
  indexOf: require(1317           ), // 1317 = ./src/indexOf
  init: require(1318        ), // 1318 = ./src/init
  innerJoin: require(1319             ), // 1319 = ./src/innerJoin
  insert: require(1320          ), // 1320 = ./src/insert
  insertAll: require(1321             ), // 1321 = ./src/insertAll
  intersection: require(1322                ), // 1322 = ./src/intersection
  intersectionWith: require(1326                    ), // 1326 = ./src/intersectionWith
  intersperse: require(1328               ), // 1328 = ./src/intersperse
  into: require(1329        ), // 1329 = ./src/into
  invert: require(1334          ), // 1334 = ./src/invert
  invertObj: require(1335             ), // 1335 = ./src/invertObj
  invoker: require(1336           ), // 1336 = ./src/invoker
  is: require(1337      ), // 1337 = ./src/is
  isEmpty: require(1338           ), // 1338 = ./src/isEmpty
  isNil: require(1197         ), // 1197 = ./src/isNil
  join: require(1339        ), // 1339 = ./src/join
  juxt: require(1340        ), // 1340 = ./src/juxt
  keys: require(1176        ), // 1176 = ./src/keys
  keysIn: require(1341          ), // 1341 = ./src/keysIn
  last: require(1280        ), // 1280 = ./src/last
  lastIndexOf: require(1342               ), // 1342 = ./src/lastIndexOf
  length: require(1343          ), // 1343 = ./src/length
  lens: require(1345        ), // 1345 = ./src/lens
  lensIndex: require(1346             ), // 1346 = ./src/lensIndex
  lensPath: require(1347            ), // 1347 = ./src/lensPath
  lensProp: require(1349            ), // 1349 = ./src/lensProp
  lift: require(1202        ), // 1202 = ./src/lift
  liftN: require(1203         ), // 1203 = ./src/liftN
  lt: require(1350      ), // 1350 = ./src/lt
  lte: require(1351       ), // 1351 = ./src/lte
  map: require(1168       ), // 1168 = ./src/map
  mapAccum: require(1352            ), // 1352 = ./src/mapAccum
  mapAccumRight: require(1353                 ), // 1353 = ./src/mapAccumRight
  mapObjIndexed: require(1354                 ), // 1354 = ./src/mapObjIndexed
  match: require(1355         ), // 1355 = ./src/match
  mathMod: require(1356           ), // 1356 = ./src/mathMod
  max: require(1166       ), // 1166 = ./src/max
  maxBy: require(1357         ), // 1357 = ./src/maxBy
  mean: require(1358        ), // 1358 = ./src/mean
  median: require(1360          ), // 1360 = ./src/median
  memoize: require(1361           ), // 1361 = ./src/memoize
  memoizeWith: require(1362               ), // 1362 = ./src/memoizeWith
  merge: require(1363         ), // 1363 = ./src/merge
  mergeAll: require(1364            ), // 1364 = ./src/mergeAll
  mergeDeepLeft: require(1365                 ), // 1365 = ./src/mergeDeepLeft
  mergeDeepRight: require(1368                  ), // 1368 = ./src/mergeDeepRight
  mergeDeepWith: require(1369                 ), // 1369 = ./src/mergeDeepWith
  mergeDeepWithKey: require(1366                    ), // 1366 = ./src/mergeDeepWithKey
  mergeWith: require(1370             ), // 1370 = ./src/mergeWith
  mergeWithKey: require(1367                ), // 1367 = ./src/mergeWithKey
  min: require(1371       ), // 1371 = ./src/min
  minBy: require(1372         ), // 1372 = ./src/minBy
  modulo: require(1373          ), // 1373 = ./src/modulo
  multiply: require(1374            ), // 1374 = ./src/multiply
  nAry: require(1199        ), // 1199 = ./src/nAry
  negate: require(1375          ), // 1375 = ./src/negate
  none: require(1376        ), // 1376 = ./src/none
  not: require(1218       ), // 1218 = ./src/not
  nth: require(1281       ), // 1281 = ./src/nth
  nthArg: require(1377          ), // 1377 = ./src/nthArg
  o: require(1378     ), // 1378 = ./src/o
  objOf: require(1333         ), // 1333 = ./src/objOf
  of: require(1379      ), // 1379 = ./src/of
  omit: require(1381        ), // 1381 = ./src/omit
  once: require(1382        ), // 1382 = ./src/once
  or: require(1285      ), // 1285 = ./src/or
  over: require(1383        ), // 1383 = ./src/over
  pair: require(1384        ), // 1384 = ./src/pair
  partial: require(1385           ), // 1385 = ./src/partial
  partialRight: require(1387                ), // 1387 = ./src/partialRight
  partition: require(1388             ), // 1388 = ./src/partition
  path: require(1348        ), // 1348 = ./src/path
  pathEq: require(1389          ), // 1389 = ./src/pathEq
  pathOr: require(1390          ), // 1390 = ./src/pathOr
  pathSatisfies: require(1391                 ), // 1391 = ./src/pathSatisfies
  pick: require(1392        ), // 1392 = ./src/pick
  pickAll: require(1393           ), // 1393 = ./src/pickAll
  pickBy: require(1394          ), // 1394 = ./src/pickBy
  pipe: require(1220        ), // 1220 = ./src/pipe
  pipeK: require(1395         ), // 1395 = ./src/pipeK
  pipeP: require(1228         ), // 1228 = ./src/pipeP
  pluck: require(1167         ), // 1167 = ./src/pluck
  prepend: require(1396           ), // 1396 = ./src/prepend
  product: require(1397           ), // 1397 = ./src/product
  project: require(1398           ), // 1398 = ./src/project
  prop: require(1179        ), // 1179 = ./src/prop
  propEq: require(1400          ), // 1400 = ./src/propEq
  propIs: require(1401          ), // 1401 = ./src/propIs
  propOr: require(1402          ), // 1402 = ./src/propOr
  propSatisfies: require(1403                 ), // 1403 = ./src/propSatisfies
  props: require(1404         ), // 1404 = ./src/props
  range: require(1405         ), // 1405 = ./src/range
  reduce: require(1180          ), // 1180 = ./src/reduce
  reduceBy: require(1254            ), // 1254 = ./src/reduceBy
  reduceRight: require(1406               ), // 1406 = ./src/reduceRight
  reduceWhile: require(1407               ), // 1407 = ./src/reduceWhile
  reduced: require(1408           ), // 1408 = ./src/reduced
  reject: require(1242          ), // 1242 = ./src/reject
  remove: require(1264          ), // 1264 = ./src/remove
  repeat: require(1409          ), // 1409 = ./src/repeat
  replace: require(1411           ), // 1411 = ./src/replace
  reverse: require(1225           ), // 1225 = ./src/reverse
  scan: require(1412        ), // 1412 = ./src/scan
  sequence: require(1413            ), // 1413 = ./src/sequence
  set: require(1414       ), // 1414 = ./src/set
  slice: require(1224         ), // 1224 = ./src/slice
  sort: require(1415        ), // 1415 = ./src/sort
  sortBy: require(1416          ), // 1416 = ./src/sortBy
  sortWith: require(1417            ), // 1417 = ./src/sortWith
  split: require(1418         ), // 1418 = ./src/split
  splitAt: require(1419           ), // 1419 = ./src/splitAt
  splitEvery: require(1420              ), // 1420 = ./src/splitEvery
  splitWhen: require(1421             ), // 1421 = ./src/splitWhen
  startsWith: require(1422              ), // 1422 = ./src/startsWith
  subtract: require(1423            ), // 1423 = ./src/subtract
  sum: require(1359       ), // 1359 = ./src/sum
  symmetricDifference: require(1424                       ), // 1424 = ./src/symmetricDifference
  symmetricDifferenceWith: require(1425                           ), // 1425 = ./src/symmetricDifferenceWith
  tail: require(1222        ), // 1222 = ./src/tail
  take: require(1271        ), // 1271 = ./src/take
  takeLast: require(1288            ), // 1288 = ./src/takeLast
  takeLastWhile: require(1426                 ), // 1426 = ./src/takeLastWhile
  takeWhile: require(1427             ), // 1427 = ./src/takeWhile
  tap: require(1429       ), // 1429 = ./src/tap
  test: require(1430        ), // 1430 = ./src/test
  times: require(1410         ), // 1410 = ./src/times
  toLower: require(1432           ), // 1432 = ./src/toLower
  toPairs: require(1433           ), // 1433 = ./src/toPairs
  toPairsIn: require(1434             ), // 1434 = ./src/toPairsIn
  toString: require(1231            ), // 1231 = ./src/toString
  toUpper: require(1435           ), // 1435 = ./src/toUpper
  transduce: require(1436             ), // 1436 = ./src/transduce
  transpose: require(1437             ), // 1437 = ./src/transpose
  traverse: require(1438            ), // 1438 = ./src/traverse
  trim: require(1439        ), // 1439 = ./src/trim
  tryCatch: require(1440            ), // 1440 = ./src/tryCatch
  type: require(1215        ), // 1215 = ./src/type
  unapply: require(1441           ), // 1441 = ./src/unapply
  unary: require(1442         ), // 1442 = ./src/unary
  uncurryN: require(1443            ), // 1443 = ./src/uncurryN
  unfold: require(1444          ), // 1444 = ./src/unfold
  union: require(1445         ), // 1445 = ./src/union
  unionWith: require(1446             ), // 1446 = ./src/unionWith
  uniq: require(1323        ), // 1323 = ./src/uniq
  uniqBy: require(1324          ), // 1324 = ./src/uniqBy
  uniqWith: require(1327            ), // 1327 = ./src/uniqWith
  unless: require(1447          ), // 1447 = ./src/unless
  unnest: require(1448          ), // 1448 = ./src/unnest
  until: require(1449         ), // 1449 = ./src/until
  update: require(1265          ), // 1265 = ./src/update
  useWith: require(1399           ), // 1399 = ./src/useWith
  values: require(1192          ), // 1192 = ./src/values
  valuesIn: require(1450            ), // 1450 = ./src/valuesIn
  view: require(1451        ), // 1451 = ./src/view
  when: require(1452        ), // 1452 = ./src/when
  where: require(1453         ), // 1453 = ./src/where
  whereEq: require(1454           ), // 1454 = ./src/whereEq
  without: require(1455           ), // 1455 = ./src/without
  xprod: require(1456         ), // 1456 = ./src/xprod
  zip: require(1457       ), // 1457 = ./src/zip
  zipObj: require(1458          ), // 1458 = ./src/zipObj
  zipWith: require(1459           ) // 1459 = ./src/zipWith
};
}, 1142, null, "ramda/index.js");
__d(/* ramda/src/F.js */function(global, require, module, exports) {var always = require(1144      ); // 1144 = ./always

module.exports = always(false);
}, 1143, null, "ramda/src/F.js");
__d(/* ramda/src/always.js */function(global, require, module, exports) {var _curry1 = require(1145                ); // 1145 = ./internal/_curry1

module.exports = _curry1(function always(val) {
  return function () {
    return val;
  };
});
}, 1144, null, "ramda/src/always.js");
__d(/* ramda/src/internal/_curry1.js */function(global, require, module, exports) {var _isPlaceholder = require(1146              ); // 1146 = ./_isPlaceholder

module.exports = function _curry1(fn) {
  return function f1(a) {
    if (arguments.length === 0 || _isPlaceholder(a)) {
      return f1;
    } else {
      return fn.apply(this, arguments);
    }
  };
};
}, 1145, null, "ramda/src/internal/_curry1.js");
__d(/* ramda/src/internal/_isPlaceholder.js */function(global, require, module, exports) {module.exports = function _isPlaceholder(a) {
       return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;
};
}, 1146, null, "ramda/src/internal/_isPlaceholder.js");
__d(/* ramda/src/T.js */function(global, require, module, exports) {var always = require(1144      ); // 1144 = ./always

module.exports = always(true);
}, 1147, null, "ramda/src/T.js");
__d(/* ramda/src/__.js */function(global, require, module, exports) {
module.exports = { '@@functional/placeholder': true };
}, 1148, null, "ramda/src/__.js");
__d(/* ramda/src/add.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2

module.exports = _curry2(function add(a, b) {
  return Number(a) + Number(b);
});
}, 1149, null, "ramda/src/add.js");
__d(/* ramda/src/internal/_curry2.js */function(global, require, module, exports) {var _curry1 = require(1145       ); // 1145 = ./_curry1
var _isPlaceholder = require(1146              ); // 1146 = ./_isPlaceholder

module.exports = function _curry2(fn) {
  return function f2(a, b) {
    switch (arguments.length) {
      case 0:
        return f2;
      case 1:
        return _isPlaceholder(a) ? f2 : _curry1(function (_b) {
          return fn(a, _b);
        });
      default:
        return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {
          return fn(_a, b);
        }) : _isPlaceholder(b) ? _curry1(function (_b) {
          return fn(a, _b);
        }) : fn(a, b);
    }
  };
};
}, 1150, null, "ramda/src/internal/_curry2.js");
__d(/* ramda/src/addIndex.js */function(global, require, module, exports) {var _concat = require(1152                ); // 1152 = ./internal/_concat
var _curry1 = require(1145                ); // 1145 = ./internal/_curry1
var curryN = require(1153      ); // 1153 = ./curryN

module.exports = _curry1(function addIndex(fn) {
  return curryN(fn.length, function () {
    var idx = 0;
    var origFn = arguments[0];
    var list = arguments[arguments.length - 1];
    var args = Array.prototype.slice.call(arguments, 0);
    args[0] = function () {
      var result = origFn.apply(this, _concat(arguments, [idx, list]));
      idx += 1;
      return result;
    };
    return fn.apply(this, args);
  });
});
}, 1151, null, "ramda/src/addIndex.js");
__d(/* ramda/src/internal/_concat.js */function(global, require, module, exports) {
module.exports = function _concat(set1, set2) {
  set1 = set1 || [];
  set2 = set2 || [];
  var idx;
  var len1 = set1.length;
  var len2 = set2.length;
  var result = [];

  idx = 0;
  while (idx < len1) {
    result[result.length] = set1[idx];
    idx += 1;
  }
  idx = 0;
  while (idx < len2) {
    result[result.length] = set2[idx];
    idx += 1;
  }
  return result;
};
}, 1152, null, "ramda/src/internal/_concat.js");
__d(/* ramda/src/curryN.js */function(global, require, module, exports) {var _arity = require(1154               ); // 1154 = ./internal/_arity
var _curry1 = require(1145                ); // 1145 = ./internal/_curry1
var _curry2 = require(1150                ); // 1150 = ./internal/_curry2
var _curryN = require(1155                ); // 1155 = ./internal/_curryN

module.exports = _curry2(function curryN(length, fn) {
  if (length === 1) {
    return _curry1(fn);
  }
  return _arity(length, _curryN(length, [], fn));
});
}, 1153, null, "ramda/src/curryN.js");
__d(/* ramda/src/internal/_arity.js */function(global, require, module, exports) {module.exports = function _arity(n, fn) {
  switch (n) {
    case 0:
      return function () {
        return fn.apply(this, arguments);
      };
    case 1:
      return function (a0) {
        return fn.apply(this, arguments);
      };
    case 2:
      return function (a0, a1) {
        return fn.apply(this, arguments);
      };
    case 3:
      return function (a0, a1, a2) {
        return fn.apply(this, arguments);
      };
    case 4:
      return function (a0, a1, a2, a3) {
        return fn.apply(this, arguments);
      };
    case 5:
      return function (a0, a1, a2, a3, a4) {
        return fn.apply(this, arguments);
      };
    case 6:
      return function (a0, a1, a2, a3, a4, a5) {
        return fn.apply(this, arguments);
      };
    case 7:
      return function (a0, a1, a2, a3, a4, a5, a6) {
        return fn.apply(this, arguments);
      };
    case 8:
      return function (a0, a1, a2, a3, a4, a5, a6, a7) {
        return fn.apply(this, arguments);
      };
    case 9:
      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {
        return fn.apply(this, arguments);
      };
    case 10:
      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {
        return fn.apply(this, arguments);
      };
    default:
      throw new Error('First argument to _arity must be a non-negative integer no greater than ten');
  }
};
}, 1154, null, "ramda/src/internal/_arity.js");
__d(/* ramda/src/internal/_curryN.js */function(global, require, module, exports) {var _arity = require(1154      ); // 1154 = ./_arity
var _isPlaceholder = require(1146              ); // 1146 = ./_isPlaceholder

module.exports = function _curryN(length, received, fn) {
  return function () {
    var combined = [];
    var argsIdx = 0;
    var left = length;
    var combinedIdx = 0;
    while (combinedIdx < received.length || argsIdx < arguments.length) {
      var result;
      if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {
        result = received[combinedIdx];
      } else {
        result = arguments[argsIdx];
        argsIdx += 1;
      }
      combined[combinedIdx] = result;
      if (!_isPlaceholder(result)) {
        left -= 1;
      }
      combinedIdx += 1;
    }
    return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));
  };
};
}, 1155, null, "ramda/src/internal/_curryN.js");
__d(/* ramda/src/adjust.js */function(global, require, module, exports) {var _concat = require(1152                ); // 1152 = ./internal/_concat
var _curry3 = require(1157                ); // 1157 = ./internal/_curry3

module.exports = _curry3(function adjust(fn, idx, list) {
  if (idx >= list.length || idx < -list.length) {
    return list;
  }
  var start = idx < 0 ? list.length : 0;
  var _idx = start + idx;
  var _list = _concat(list);
  _list[_idx] = fn(list[_idx]);
  return _list;
});
}, 1156, null, "ramda/src/adjust.js");
__d(/* ramda/src/internal/_curry3.js */function(global, require, module, exports) {var _curry1 = require(1145       ); // 1145 = ./_curry1
var _curry2 = require(1150       ); // 1150 = ./_curry2
var _isPlaceholder = require(1146              ); // 1146 = ./_isPlaceholder

module.exports = function _curry3(fn) {
  return function f3(a, b, c) {
    switch (arguments.length) {
      case 0:
        return f3;
      case 1:
        return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {
          return fn(a, _b, _c);
        });
      case 2:
        return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {
          return fn(_a, b, _c);
        }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {
          return fn(a, _b, _c);
        }) : _curry1(function (_c) {
          return fn(a, b, _c);
        });
      default:
        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {
          return fn(_a, _b, c);
        }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {
          return fn(_a, b, _c);
        }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {
          return fn(a, _b, _c);
        }) : _isPlaceholder(a) ? _curry1(function (_a) {
          return fn(_a, b, c);
        }) : _isPlaceholder(b) ? _curry1(function (_b) {
          return fn(a, _b, c);
        }) : _isPlaceholder(c) ? _curry1(function (_c) {
          return fn(a, b, _c);
        }) : fn(a, b, c);
    }
  };
};
}, 1157, null, "ramda/src/internal/_curry3.js");
__d(/* ramda/src/all.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2
var _dispatchable = require(1159                      ); // 1159 = ./internal/_dispatchable
var _xall = require(1162              ); // 1162 = ./internal/_xall

module.exports = _curry2(_dispatchable(['all'], _xall, function all(fn, list) {
  var idx = 0;
  while (idx < list.length) {
    if (!fn(list[idx])) {
      return false;
    }
    idx += 1;
  }
  return true;
}));
}, 1158, null, "ramda/src/all.js");
__d(/* ramda/src/internal/_dispatchable.js */function(global, require, module, exports) {var _isArray = require(1160        ); // 1160 = ./_isArray
var _isTransformer = require(1161              ); // 1161 = ./_isTransformer

module.exports = function _dispatchable(methodNames, xf, fn) {
  return function () {
    if (arguments.length === 0) {
      return fn();
    }
    var args = Array.prototype.slice.call(arguments, 0);
    var obj = args.pop();
    if (!_isArray(obj)) {
      var idx = 0;
      while (idx < methodNames.length) {
        if (typeof obj[methodNames[idx]] === 'function') {
          return obj[methodNames[idx]].apply(obj, args);
        }
        idx += 1;
      }
      if (_isTransformer(obj)) {
        var transducer = xf.apply(null, args);
        return transducer(obj);
      }
    }
    return fn.apply(this, arguments);
  };
};
}, 1159, null, "ramda/src/internal/_dispatchable.js");
__d(/* ramda/src/internal/_isArray.js */function(global, require, module, exports) {
module.exports = Array.isArray || function _isArray(val) {
  return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';
};
}, 1160, null, "ramda/src/internal/_isArray.js");
__d(/* ramda/src/internal/_isTransformer.js */function(global, require, module, exports) {module.exports = function _isTransformer(obj) {
  return typeof obj['@@transducer/step'] === 'function';
};
}, 1161, null, "ramda/src/internal/_isTransformer.js");
__d(/* ramda/src/internal/_xall.js */function(global, require, module, exports) {var _curry2 = require(1150       ); // 1150 = ./_curry2
var _reduced = require(1163        ); // 1163 = ./_reduced
var _xfBase = require(1164       ); // 1164 = ./_xfBase

module.exports = function () {
  function XAll(f, xf) {
    this.xf = xf;
    this.f = f;
    this.all = true;
  }
  XAll.prototype['@@transducer/init'] = _xfBase.init;
  XAll.prototype['@@transducer/result'] = function (result) {
    if (this.all) {
      result = this.xf['@@transducer/step'](result, true);
    }
    return this.xf['@@transducer/result'](result);
  };
  XAll.prototype['@@transducer/step'] = function (result, input) {
    if (!this.f(input)) {
      this.all = false;
      result = _reduced(this.xf['@@transducer/step'](result, false));
    }
    return result;
  };

  return _curry2(function _xall(f, xf) {
    return new XAll(f, xf);
  });
}();
}, 1162, null, "ramda/src/internal/_xall.js");
__d(/* ramda/src/internal/_reduced.js */function(global, require, module, exports) {module.exports = function _reduced(x) {
  return x && x['@@transducer/reduced'] ? x : {
    '@@transducer/value': x,
    '@@transducer/reduced': true
  };
};
}, 1163, null, "ramda/src/internal/_reduced.js");
__d(/* ramda/src/internal/_xfBase.js */function(global, require, module, exports) {module.exports = {
  init: function init() {
    return this.xf['@@transducer/init']();
  },
  result: function result(_result) {
    return this.xf['@@transducer/result'](_result);
  }
};
}, 1164, null, "ramda/src/internal/_xfBase.js");
__d(/* ramda/src/allPass.js */function(global, require, module, exports) {var _curry1 = require(1145                ); // 1145 = ./internal/_curry1
var curryN = require(1153      ); // 1153 = ./curryN
var max = require(1166   ); // 1166 = ./max
var pluck = require(1167     ); // 1167 = ./pluck
var reduce = require(1180      ); // 1180 = ./reduce

module.exports = _curry1(function allPass(preds) {
  return curryN(reduce(max, 0, pluck('length', preds)), function () {
    var idx = 0;
    var len = preds.length;
    while (idx < len) {
      if (!preds[idx].apply(this, arguments)) {
        return false;
      }
      idx += 1;
    }
    return true;
  });
});
}, 1165, null, "ramda/src/allPass.js");
__d(/* ramda/src/max.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2

module.exports = _curry2(function max(a, b) {
  return b > a ? b : a;
});
}, 1166, null, "ramda/src/max.js");
__d(/* ramda/src/pluck.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2
var map = require(1168   ); // 1168 = ./map
var prop = require(1179    ); // 1179 = ./prop

module.exports = _curry2(function pluck(p, list) {
  return map(prop(p), list);
});
}, 1167, null, "ramda/src/pluck.js");
__d(/* ramda/src/map.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2
var _dispatchable = require(1159                      ); // 1159 = ./internal/_dispatchable
var _map = require(1169             ); // 1169 = ./internal/_map
var _reduce = require(1170                ); // 1170 = ./internal/_reduce
var _xmap = require(1175              ); // 1175 = ./internal/_xmap
var curryN = require(1153      ); // 1153 = ./curryN
var keys = require(1176    ); // 1176 = ./keys

module.exports = _curry2(_dispatchable(['fantasy-land/map', 'map'], _xmap, function map(fn, functor) {
  switch (Object.prototype.toString.call(functor)) {
    case '[object Function]':
      return curryN(functor.length, function () {
        return fn.call(this, functor.apply(this, arguments));
      });
    case '[object Object]':
      return _reduce(function (acc, key) {
        acc[key] = fn(functor[key]);
        return acc;
      }, {}, keys(functor));
    default:
      return _map(fn, functor);
  }
}));
}, 1168, null, "ramda/src/map.js");
__d(/* ramda/src/internal/_map.js */function(global, require, module, exports) {module.exports = function _map(fn, functor) {
  var idx = 0;
  var len = functor.length;
  var result = Array(len);
  while (idx < len) {
    result[idx] = fn(functor[idx]);
    idx += 1;
  }
  return result;
};
}, 1169, null, "ramda/src/internal/_map.js");
__d(/* ramda/src/internal/_reduce.js */function(global, require, module, exports) {var _isArrayLike = require(1171            ); // 1171 = ./_isArrayLike
var _xwrap = require(1173      ); // 1173 = ./_xwrap
var bind = require(1174     ); // 1174 = ../bind

module.exports = function () {
  function _arrayReduce(xf, acc, list) {
    var idx = 0;
    var len = list.length;
    while (idx < len) {
      acc = xf['@@transducer/step'](acc, list[idx]);
      if (acc && acc['@@transducer/reduced']) {
        acc = acc['@@transducer/value'];
        break;
      }
      idx += 1;
    }
    return xf['@@transducer/result'](acc);
  }

  function _iterableReduce(xf, acc, iter) {
    var step = iter.next();
    while (!step.done) {
      acc = xf['@@transducer/step'](acc, step.value);
      if (acc && acc['@@transducer/reduced']) {
        acc = acc['@@transducer/value'];
        break;
      }
      step = iter.next();
    }
    return xf['@@transducer/result'](acc);
  }

  function _methodReduce(xf, acc, obj, methodName) {
    return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));
  }

  var symIterator = typeof Symbol !== 'undefined' ? typeof Symbol === 'function' ? Symbol.iterator : '@@iterator' : '@@iterator';
  return function _reduce(fn, acc, list) {
    if (typeof fn === 'function') {
      fn = _xwrap(fn);
    }
    if (_isArrayLike(list)) {
      return _arrayReduce(fn, acc, list);
    }
    if (typeof list['fantasy-land/reduce'] === 'function') {
      return _methodReduce(fn, acc, list, 'fantasy-land/reduce');
    }
    if (list[symIterator] != null) {
      return _iterableReduce(fn, acc, list[symIterator]());
    }
    if (typeof list.next === 'function') {
      return _iterableReduce(fn, acc, list);
    }
    if (typeof list.reduce === 'function') {
      return _methodReduce(fn, acc, list, 'reduce');
    }

    throw new TypeError('reduce: list must be array or iterable');
  };
}();
}, 1170, null, "ramda/src/internal/_reduce.js");
__d(/* ramda/src/internal/_isArrayLike.js */function(global, require, module, exports) {var _curry1 = require(1145       ); // 1145 = ./_curry1
var _isArray = require(1160        ); // 1160 = ./_isArray
var _isString = require(1172         ); // 1172 = ./_isString

module.exports = _curry1(function isArrayLike(x) {
  if (_isArray(x)) {
    return true;
  }
  if (!x) {
    return false;
  }
  if (typeof x !== 'object') {
    return false;
  }
  if (_isString(x)) {
    return false;
  }
  if (x.nodeType === 1) {
    return !!x.length;
  }
  if (x.length === 0) {
    return true;
  }
  if (x.length > 0) {
    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);
  }
  return false;
});
}, 1171, null, "ramda/src/internal/_isArrayLike.js");
__d(/* ramda/src/internal/_isString.js */function(global, require, module, exports) {module.exports = function _isString(x) {
  return Object.prototype.toString.call(x) === '[object String]';
};
}, 1172, null, "ramda/src/internal/_isString.js");
__d(/* ramda/src/internal/_xwrap.js */function(global, require, module, exports) {module.exports = function () {
  function XWrap(fn) {
    this.f = fn;
  }
  XWrap.prototype['@@transducer/init'] = function () {
    throw new Error('init not implemented on XWrap');
  };
  XWrap.prototype['@@transducer/result'] = function (acc) {
    return acc;
  };
  XWrap.prototype['@@transducer/step'] = function (acc, x) {
    return this.f(acc, x);
  };

  return function _xwrap(fn) {
    return new XWrap(fn);
  };
}();
}, 1173, null, "ramda/src/internal/_xwrap.js");
__d(/* ramda/src/bind.js */function(global, require, module, exports) {var _arity = require(1154               ); // 1154 = ./internal/_arity
var _curry2 = require(1150                ); // 1150 = ./internal/_curry2

module.exports = _curry2(function bind(fn, thisObj) {
  return _arity(fn.length, function () {
    return fn.apply(thisObj, arguments);
  });
});
}, 1174, null, "ramda/src/bind.js");
__d(/* ramda/src/internal/_xmap.js */function(global, require, module, exports) {var _curry2 = require(1150       ); // 1150 = ./_curry2
var _xfBase = require(1164       ); // 1164 = ./_xfBase

module.exports = function () {
  function XMap(f, xf) {
    this.xf = xf;
    this.f = f;
  }
  XMap.prototype['@@transducer/init'] = _xfBase.init;
  XMap.prototype['@@transducer/result'] = _xfBase.result;
  XMap.prototype['@@transducer/step'] = function (result, input) {
    return this.xf['@@transducer/step'](result, this.f(input));
  };

  return _curry2(function _xmap(f, xf) {
    return new XMap(f, xf);
  });
}();
}, 1175, null, "ramda/src/internal/_xmap.js");
__d(/* ramda/src/keys.js */function(global, require, module, exports) {var _curry1 = require(1145                ); // 1145 = ./internal/_curry1
var _has = require(1177             ); // 1177 = ./internal/_has
var _isArguments = require(1178                     ); // 1178 = ./internal/_isArguments

module.exports = function () {
  var hasEnumBug = !{ toString: null }.propertyIsEnumerable('toString');
  var nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];

  var hasArgsEnumBug = function () {
    'use strict';

    return arguments.propertyIsEnumerable('length');
  }();

  var contains = function contains(list, item) {
    var idx = 0;
    while (idx < list.length) {
      if (list[idx] === item) {
        return true;
      }
      idx += 1;
    }
    return false;
  };

  return typeof Object.keys === 'function' && !hasArgsEnumBug ? _curry1(function keys(obj) {
    return Object(obj) !== obj ? [] : Object.keys(obj);
  }) : _curry1(function keys(obj) {
    if (Object(obj) !== obj) {
      return [];
    }
    var prop, nIdx;
    var ks = [];
    var checkArgsLength = hasArgsEnumBug && _isArguments(obj);
    for (prop in obj) {
      if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {
        ks[ks.length] = prop;
      }
    }
    if (hasEnumBug) {
      nIdx = nonEnumerableProps.length - 1;
      while (nIdx >= 0) {
        prop = nonEnumerableProps[nIdx];
        if (_has(prop, obj) && !contains(ks, prop)) {
          ks[ks.length] = prop;
        }
        nIdx -= 1;
      }
    }
    return ks;
  });
}();
}, 1176, null, "ramda/src/keys.js");
__d(/* ramda/src/internal/_has.js */function(global, require, module, exports) {module.exports = function _has(prop, obj) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
};
}, 1177, null, "ramda/src/internal/_has.js");
__d(/* ramda/src/internal/_isArguments.js */function(global, require, module, exports) {var _has = require(1177    ); // 1177 = ./_has

module.exports = function () {
  var toString = Object.prototype.toString;
  return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {
    return toString.call(x) === '[object Arguments]';
  } : function _isArguments(x) {
    return _has('callee', x);
  };
}();
}, 1178, null, "ramda/src/internal/_isArguments.js");
__d(/* ramda/src/prop.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2

module.exports = _curry2(function prop(p, obj) {
  return obj[p];
});
}, 1179, null, "ramda/src/prop.js");
__d(/* ramda/src/reduce.js */function(global, require, module, exports) {var _curry3 = require(1157                ); // 1157 = ./internal/_curry3
var _reduce = require(1170                ); // 1170 = ./internal/_reduce

module.exports = _curry3(_reduce);
}, 1180, null, "ramda/src/reduce.js");
__d(/* ramda/src/and.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2

module.exports = _curry2(function and(a, b) {
  return a && b;
});
}, 1181, null, "ramda/src/and.js");
__d(/* ramda/src/any.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2
var _dispatchable = require(1159                      ); // 1159 = ./internal/_dispatchable
var _xany = require(1183              ); // 1183 = ./internal/_xany

module.exports = _curry2(_dispatchable(['any'], _xany, function any(fn, list) {
  var idx = 0;
  while (idx < list.length) {
    if (fn(list[idx])) {
      return true;
    }
    idx += 1;
  }
  return false;
}));
}, 1182, null, "ramda/src/any.js");
__d(/* ramda/src/internal/_xany.js */function(global, require, module, exports) {var _curry2 = require(1150       ); // 1150 = ./_curry2
var _reduced = require(1163        ); // 1163 = ./_reduced
var _xfBase = require(1164       ); // 1164 = ./_xfBase

module.exports = function () {
  function XAny(f, xf) {
    this.xf = xf;
    this.f = f;
    this.any = false;
  }
  XAny.prototype['@@transducer/init'] = _xfBase.init;
  XAny.prototype['@@transducer/result'] = function (result) {
    if (!this.any) {
      result = this.xf['@@transducer/step'](result, false);
    }
    return this.xf['@@transducer/result'](result);
  };
  XAny.prototype['@@transducer/step'] = function (result, input) {
    if (this.f(input)) {
      this.any = true;
      result = _reduced(this.xf['@@transducer/step'](result, true));
    }
    return result;
  };

  return _curry2(function _xany(f, xf) {
    return new XAny(f, xf);
  });
}();
}, 1183, null, "ramda/src/internal/_xany.js");
__d(/* ramda/src/anyPass.js */function(global, require, module, exports) {var _curry1 = require(1145                ); // 1145 = ./internal/_curry1
var curryN = require(1153      ); // 1153 = ./curryN
var max = require(1166   ); // 1166 = ./max
var pluck = require(1167     ); // 1167 = ./pluck
var reduce = require(1180      ); // 1180 = ./reduce

module.exports = _curry1(function anyPass(preds) {
  return curryN(reduce(max, 0, pluck('length', preds)), function () {
    var idx = 0;
    var len = preds.length;
    while (idx < len) {
      if (preds[idx].apply(this, arguments)) {
        return true;
      }
      idx += 1;
    }
    return false;
  });
});
}, 1184, null, "ramda/src/anyPass.js");
__d(/* ramda/src/ap.js */function(global, require, module, exports) {var _concat = require(1152                ); // 1152 = ./internal/_concat
var _curry2 = require(1150                ); // 1150 = ./internal/_curry2
var _reduce = require(1170                ); // 1170 = ./internal/_reduce
var map = require(1168   ); // 1168 = ./map

module.exports = _curry2(function ap(applyF, applyX) {
  return typeof applyX['fantasy-land/ap'] === 'function' ? applyX['fantasy-land/ap'](applyF) : typeof applyF.ap === 'function' ? applyF.ap(applyX) : typeof applyF === 'function' ? function (x) {
    return applyF(x)(applyX(x));
  } : _reduce(function (acc, f) {
    return _concat(acc, map(f, applyX));
  }, [], applyF);
});
}, 1185, null, "ramda/src/ap.js");
__d(/* ramda/src/aperture.js */function(global, require, module, exports) {var _aperture = require(1187                  ); // 1187 = ./internal/_aperture
var _curry2 = require(1150                ); // 1150 = ./internal/_curry2
var _dispatchable = require(1159                      ); // 1159 = ./internal/_dispatchable
var _xaperture = require(1188                   ); // 1188 = ./internal/_xaperture

module.exports = _curry2(_dispatchable([], _xaperture, _aperture));
}, 1186, null, "ramda/src/aperture.js");
__d(/* ramda/src/internal/_aperture.js */function(global, require, module, exports) {module.exports = function _aperture(n, list) {
  var idx = 0;
  var limit = list.length - (n - 1);
  var acc = new Array(limit >= 0 ? limit : 0);
  while (idx < limit) {
    acc[idx] = Array.prototype.slice.call(list, idx, idx + n);
    idx += 1;
  }
  return acc;
};
}, 1187, null, "ramda/src/internal/_aperture.js");
__d(/* ramda/src/internal/_xaperture.js */function(global, require, module, exports) {var _concat = require(1152       ); // 1152 = ./_concat
var _curry2 = require(1150       ); // 1150 = ./_curry2
var _xfBase = require(1164       ); // 1164 = ./_xfBase

module.exports = function () {
  function XAperture(n, xf) {
    this.xf = xf;
    this.pos = 0;
    this.full = false;
    this.acc = new Array(n);
  }
  XAperture.prototype['@@transducer/init'] = _xfBase.init;
  XAperture.prototype['@@transducer/result'] = function (result) {
    this.acc = null;
    return this.xf['@@transducer/result'](result);
  };
  XAperture.prototype['@@transducer/step'] = function (result, input) {
    this.store(input);
    return this.full ? this.xf['@@transducer/step'](result, this.getCopy()) : result;
  };
  XAperture.prototype.store = function (input) {
    this.acc[this.pos] = input;
    this.pos += 1;
    if (this.pos === this.acc.length) {
      this.pos = 0;
      this.full = true;
    }
  };
  XAperture.prototype.getCopy = function () {
    return _concat(Array.prototype.slice.call(this.acc, this.pos), Array.prototype.slice.call(this.acc, 0, this.pos));
  };

  return _curry2(function _xaperture(n, xf) {
    return new XAperture(n, xf);
  });
}();
}, 1188, null, "ramda/src/internal/_xaperture.js");
__d(/* ramda/src/append.js */function(global, require, module, exports) {var _concat = require(1152                ); // 1152 = ./internal/_concat
var _curry2 = require(1150                ); // 1150 = ./internal/_curry2

module.exports = _curry2(function append(el, list) {
  return _concat(list, [el]);
});
}, 1189, null, "ramda/src/append.js");
__d(/* ramda/src/apply.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2

module.exports = _curry2(function apply(fn, args) {
  return fn.apply(this, args);
});
}, 1190, null, "ramda/src/apply.js");
__d(/* ramda/src/applySpec.js */function(global, require, module, exports) {var _curry1 = require(1145                ); // 1145 = ./internal/_curry1
var apply = require(1190     ); // 1190 = ./apply
var curryN = require(1153      ); // 1153 = ./curryN
var map = require(1168   ); // 1168 = ./map
var max = require(1166   ); // 1166 = ./max
var pluck = require(1167     ); // 1167 = ./pluck
var reduce = require(1180      ); // 1180 = ./reduce
var values = require(1192      ); // 1192 = ./values

module.exports = _curry1(function applySpec(spec) {
  spec = map(function (v) {
    return typeof v == 'function' ? v : applySpec(v);
  }, spec);
  return curryN(reduce(max, 0, pluck('length', values(spec))), function () {
    var args = arguments;
    return map(function (f) {
      return apply(f, args);
    }, spec);
  });
});
}, 1191, null, "ramda/src/applySpec.js");
__d(/* ramda/src/values.js */function(global, require, module, exports) {var _curry1 = require(1145                ); // 1145 = ./internal/_curry1
var keys = require(1176    ); // 1176 = ./keys

module.exports = _curry1(function values(obj) {
  var props = keys(obj);
  var len = props.length;
  var vals = [];
  var idx = 0;
  while (idx < len) {
    vals[idx] = obj[props[idx]];
    idx += 1;
  }
  return vals;
});
}, 1192, null, "ramda/src/values.js");
__d(/* ramda/src/ascend.js */function(global, require, module, exports) {var _curry3 = require(1157                ); // 1157 = ./internal/_curry3

module.exports = _curry3(function ascend(fn, a, b) {
  var aa = fn(a);
  var bb = fn(b);
  return aa < bb ? -1 : aa > bb ? 1 : 0;
});
}, 1193, null, "ramda/src/ascend.js");
__d(/* ramda/src/assoc.js */function(global, require, module, exports) {var _curry3 = require(1157                ); // 1157 = ./internal/_curry3

module.exports = _curry3(function assoc(prop, val, obj) {
  var result = {};
  for (var p in obj) {
    result[p] = obj[p];
  }
  result[prop] = val;
  return result;
});
}, 1194, null, "ramda/src/assoc.js");
__d(/* ramda/src/assocPath.js */function(global, require, module, exports) {var _curry3 = require(1157                ); // 1157 = ./internal/_curry3
var _has = require(1177             ); // 1177 = ./internal/_has
var _isArray = require(1160                 ); // 1160 = ./internal/_isArray
var _isInteger = require(1196                   ); // 1196 = ./internal/_isInteger
var assoc = require(1194     ); // 1194 = ./assoc
var isNil = require(1197     ); // 1197 = ./isNil

module.exports = _curry3(function assocPath(path, val, obj) {
  if (path.length === 0) {
    return val;
  }
  var idx = path[0];
  if (path.length > 1) {
    var nextObj = !isNil(obj) && _has(idx, obj) ? obj[idx] : _isInteger(path[1]) ? [] : {};
    val = assocPath(Array.prototype.slice.call(path, 1), val, nextObj);
  }
  if (_isInteger(idx) && _isArray(obj)) {
    var arr = [].concat(obj);
    arr[idx] = val;
    return arr;
  } else {
    return assoc(idx, val, obj);
  }
});
}, 1195, null, "ramda/src/assocPath.js");
__d(/* ramda/src/internal/_isInteger.js */function(global, require, module, exports) {
module.exports = Number.isInteger || function _isInteger(n) {
  return n << 0 === n;
};
}, 1196, null, "ramda/src/internal/_isInteger.js");
__d(/* ramda/src/isNil.js */function(global, require, module, exports) {var _curry1 = require(1145                ); // 1145 = ./internal/_curry1

module.exports = _curry1(function isNil(x) {
  return x == null;
});
}, 1197, null, "ramda/src/isNil.js");
__d(/* ramda/src/binary.js */function(global, require, module, exports) {var _curry1 = require(1145                ); // 1145 = ./internal/_curry1
var nAry = require(1199    ); // 1199 = ./nAry

module.exports = _curry1(function binary(fn) {
  return nAry(2, fn);
});
}, 1198, null, "ramda/src/binary.js");
__d(/* ramda/src/nAry.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2

module.exports = _curry2(function nAry(n, fn) {
  switch (n) {
    case 0:
      return function () {
        return fn.call(this);
      };
    case 1:
      return function (a0) {
        return fn.call(this, a0);
      };
    case 2:
      return function (a0, a1) {
        return fn.call(this, a0, a1);
      };
    case 3:
      return function (a0, a1, a2) {
        return fn.call(this, a0, a1, a2);
      };
    case 4:
      return function (a0, a1, a2, a3) {
        return fn.call(this, a0, a1, a2, a3);
      };
    case 5:
      return function (a0, a1, a2, a3, a4) {
        return fn.call(this, a0, a1, a2, a3, a4);
      };
    case 6:
      return function (a0, a1, a2, a3, a4, a5) {
        return fn.call(this, a0, a1, a2, a3, a4, a5);
      };
    case 7:
      return function (a0, a1, a2, a3, a4, a5, a6) {
        return fn.call(this, a0, a1, a2, a3, a4, a5, a6);
      };
    case 8:
      return function (a0, a1, a2, a3, a4, a5, a6, a7) {
        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7);
      };
    case 9:
      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {
        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8);
      };
    case 10:
      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {
        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);
      };
    default:
      throw new Error('First argument to nAry must be a non-negative integer no greater than ten');
  }
});
}, 1199, null, "ramda/src/nAry.js");
__d(/* ramda/src/both.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2
var _isFunction = require(1201                    ); // 1201 = ./internal/_isFunction
var and = require(1181   ); // 1181 = ./and
var lift = require(1202    ); // 1202 = ./lift

module.exports = _curry2(function both(f, g) {
  return _isFunction(f) ? function _both() {
    return f.apply(this, arguments) && g.apply(this, arguments);
  } : lift(and)(f, g);
});
}, 1200, null, "ramda/src/both.js");
__d(/* ramda/src/internal/_isFunction.js */function(global, require, module, exports) {module.exports = function _isFunction(x) {
  return Object.prototype.toString.call(x) === '[object Function]';
};
}, 1201, null, "ramda/src/internal/_isFunction.js");
__d(/* ramda/src/lift.js */function(global, require, module, exports) {var _curry1 = require(1145                ); // 1145 = ./internal/_curry1
var liftN = require(1203     ); // 1203 = ./liftN

module.exports = _curry1(function lift(fn) {
  return liftN(fn.length, fn);
});
}, 1202, null, "ramda/src/lift.js");
__d(/* ramda/src/liftN.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2
var _reduce = require(1170                ); // 1170 = ./internal/_reduce
var ap = require(1185  ); // 1185 = ./ap
var curryN = require(1153      ); // 1153 = ./curryN
var map = require(1168   ); // 1168 = ./map

module.exports = _curry2(function liftN(arity, fn) {
  var lifted = curryN(arity, fn);
  return curryN(arity, function () {
    return _reduce(ap, map(lifted, arguments[0]), Array.prototype.slice.call(arguments, 1));
  });
});
}, 1203, null, "ramda/src/liftN.js");
__d(/* ramda/src/call.js */function(global, require, module, exports) {var curry = require(1205     ); // 1205 = ./curry

module.exports = curry(function call(fn) {
  return fn.apply(this, Array.prototype.slice.call(arguments, 1));
});
}, 1204, null, "ramda/src/call.js");
__d(/* ramda/src/curry.js */function(global, require, module, exports) {var _curry1 = require(1145                ); // 1145 = ./internal/_curry1
var curryN = require(1153      ); // 1153 = ./curryN

module.exports = _curry1(function curry(fn) {
  return curryN(fn.length, fn);
});
}, 1205, null, "ramda/src/curry.js");
__d(/* ramda/src/chain.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2
var _dispatchable = require(1159                      ); // 1159 = ./internal/_dispatchable
var _makeFlat = require(1207                  ); // 1207 = ./internal/_makeFlat
var _xchain = require(1208                ); // 1208 = ./internal/_xchain
var map = require(1168   ); // 1168 = ./map

module.exports = _curry2(_dispatchable(['fantasy-land/chain', 'chain'], _xchain, function chain(fn, monad) {
  if (typeof monad === 'function') {
    return function (x) {
      return fn(monad(x))(x);
    };
  }
  return _makeFlat(false)(map(fn, monad));
}));
}, 1206, null, "ramda/src/chain.js");
__d(/* ramda/src/internal/_makeFlat.js */function(global, require, module, exports) {var _isArrayLike = require(1171            ); // 1171 = ./_isArrayLike

module.exports = function _makeFlat(recursive) {
  return function flatt(list) {
    var value, jlen, j;
    var result = [];
    var idx = 0;
    var ilen = list.length;

    while (idx < ilen) {
      if (_isArrayLike(list[idx])) {
        value = recursive ? flatt(list[idx]) : list[idx];
        j = 0;
        jlen = value.length;
        while (j < jlen) {
          result[result.length] = value[j];
          j += 1;
        }
      } else {
        result[result.length] = list[idx];
      }
      idx += 1;
    }
    return result;
  };
};
}, 1207, null, "ramda/src/internal/_makeFlat.js");
__d(/* ramda/src/internal/_xchain.js */function(global, require, module, exports) {var _curry2 = require(1150       ); // 1150 = ./_curry2
var _flatCat = require(1209        ); // 1209 = ./_flatCat
var map = require(1168    ); // 1168 = ../map

module.exports = _curry2(function _xchain(f, xf) {
  return map(f, _flatCat(xf));
});
}, 1208, null, "ramda/src/internal/_xchain.js");
__d(/* ramda/src/internal/_flatCat.js */function(global, require, module, exports) {var _forceReduced = require(1210             ); // 1210 = ./_forceReduced
var _isArrayLike = require(1171            ); // 1171 = ./_isArrayLike
var _reduce = require(1170       ); // 1170 = ./_reduce
var _xfBase = require(1164       ); // 1164 = ./_xfBase

module.exports = function () {
  var preservingReduced = function preservingReduced(xf) {
    return {
      '@@transducer/init': _xfBase.init,
      '@@transducer/result': function transducerResult(result) {
        return xf['@@transducer/result'](result);
      },
      '@@transducer/step': function transducerStep(result, input) {
        var ret = xf['@@transducer/step'](result, input);
        return ret['@@transducer/reduced'] ? _forceReduced(ret) : ret;
      }
    };
  };

  return function _xcat(xf) {
    var rxf = preservingReduced(xf);
    return {
      '@@transducer/init': _xfBase.init,
      '@@transducer/result': function transducerResult(result) {
        return rxf['@@transducer/result'](result);
      },
      '@@transducer/step': function transducerStep(result, input) {
        return !_isArrayLike(input) ? _reduce(rxf, result, [input]) : _reduce(rxf, result, input);
      }
    };
  };
}();
}, 1209, null, "ramda/src/internal/_flatCat.js");
__d(/* ramda/src/internal/_forceReduced.js */function(global, require, module, exports) {module.exports = function _forceReduced(x) {
  return {
    '@@transducer/value': x,
    '@@transducer/reduced': true
  };
};
}, 1210, null, "ramda/src/internal/_forceReduced.js");
__d(/* ramda/src/clamp.js */function(global, require, module, exports) {var _curry3 = require(1157                ); // 1157 = ./internal/_curry3

module.exports = _curry3(function clamp(min, max, value) {
  if (min > max) {
    throw new Error('min must not be greater than max in clamp(min, max, value)');
  }
  return value < min ? min : value > max ? max : value;
});
}, 1211, null, "ramda/src/clamp.js");
__d(/* ramda/src/clone.js */function(global, require, module, exports) {var _clone = require(1213               ); // 1213 = ./internal/_clone
var _curry1 = require(1145                ); // 1145 = ./internal/_curry1

module.exports = _curry1(function clone(value) {
  return value != null && typeof value.clone === 'function' ? value.clone() : _clone(value, [], [], true);
});
}, 1212, null, "ramda/src/clone.js");
__d(/* ramda/src/internal/_clone.js */function(global, require, module, exports) {var _cloneRegExp = require(1214            ); // 1214 = ./_cloneRegExp
var type = require(1215     ); // 1215 = ../type

module.exports = function _clone(value, refFrom, refTo, deep) {
  var copy = function copy(copiedValue) {
    var len = refFrom.length;
    var idx = 0;
    while (idx < len) {
      if (value === refFrom[idx]) {
        return refTo[idx];
      }
      idx += 1;
    }
    refFrom[idx + 1] = value;
    refTo[idx + 1] = copiedValue;
    for (var key in value) {
      copiedValue[key] = deep ? _clone(value[key], refFrom, refTo, true) : value[key];
    }
    return copiedValue;
  };
  switch (type(value)) {
    case 'Object':
      return copy({});
    case 'Array':
      return copy([]);
    case 'Date':
      return new Date(value.valueOf());
    case 'RegExp':
      return _cloneRegExp(value);
    default:
      return value;
  }
};
}, 1213, null, "ramda/src/internal/_clone.js");
__d(/* ramda/src/internal/_cloneRegExp.js */function(global, require, module, exports) {module.exports = function _cloneRegExp(pattern) {
                                  return new RegExp(pattern.source, (pattern.global ? 'g' : '') + (pattern.ignoreCase ? 'i' : '') + (pattern.multiline ? 'm' : '') + (pattern.sticky ? 'y' : '') + (pattern.unicode ? 'u' : ''));
};
}, 1214, null, "ramda/src/internal/_cloneRegExp.js");
__d(/* ramda/src/type.js */function(global, require, module, exports) {var _curry1 = require(1145                ); // 1145 = ./internal/_curry1

module.exports = _curry1(function type(val) {
  return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);
});
}, 1215, null, "ramda/src/type.js");
__d(/* ramda/src/comparator.js */function(global, require, module, exports) {var _curry1 = require(1145                ); // 1145 = ./internal/_curry1

module.exports = _curry1(function comparator(pred) {
  return function (a, b) {
    return pred(a, b) ? -1 : pred(b, a) ? 1 : 0;
  };
});
}, 1216, null, "ramda/src/comparator.js");
__d(/* ramda/src/complement.js */function(global, require, module, exports) {var lift = require(1202    ); // 1202 = ./lift
var not = require(1218   ); // 1218 = ./not

module.exports = lift(not);
}, 1217, null, "ramda/src/complement.js");
__d(/* ramda/src/not.js */function(global, require, module, exports) {var _curry1 = require(1145                ); // 1145 = ./internal/_curry1

module.exports = _curry1(function not(a) {
  return !a;
});
}, 1218, null, "ramda/src/not.js");
__d(/* ramda/src/compose.js */function(global, require, module, exports) {var pipe = require(1220    ); // 1220 = ./pipe
var reverse = require(1225       ); // 1225 = ./reverse

module.exports = function compose() {
  if (arguments.length === 0) {
    throw new Error('compose requires at least one argument');
  }
  return pipe.apply(this, reverse(arguments));
};
}, 1219, null, "ramda/src/compose.js");
__d(/* ramda/src/pipe.js */function(global, require, module, exports) {var _arity = require(1154               ); // 1154 = ./internal/_arity
var _pipe = require(1221              ); // 1221 = ./internal/_pipe
var reduce = require(1180      ); // 1180 = ./reduce
var tail = require(1222    ); // 1222 = ./tail

module.exports = function pipe() {
  if (arguments.length === 0) {
    throw new Error('pipe requires at least one argument');
  }
  return _arity(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));
};
}, 1220, null, "ramda/src/pipe.js");
__d(/* ramda/src/internal/_pipe.js */function(global, require, module, exports) {module.exports = function _pipe(f, g) {
  return function () {
    return g.call(this, f.apply(this, arguments));
  };
};
}, 1221, null, "ramda/src/internal/_pipe.js");
__d(/* ramda/src/tail.js */function(global, require, module, exports) {var _checkForMethod = require(1223                        ); // 1223 = ./internal/_checkForMethod
var _curry1 = require(1145                ); // 1145 = ./internal/_curry1
var slice = require(1224     ); // 1224 = ./slice

module.exports = _curry1(_checkForMethod('tail', slice(1, Infinity)));
}, 1222, null, "ramda/src/tail.js");
__d(/* ramda/src/internal/_checkForMethod.js */function(global, require, module, exports) {var _isArray = require(1160        ); // 1160 = ./_isArray

module.exports = function _checkForMethod(methodname, fn) {
  return function () {
    var length = arguments.length;
    if (length === 0) {
      return fn();
    }
    var obj = arguments[length - 1];
    return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));
  };
};
}, 1223, null, "ramda/src/internal/_checkForMethod.js");
__d(/* ramda/src/slice.js */function(global, require, module, exports) {var _checkForMethod = require(1223                        ); // 1223 = ./internal/_checkForMethod
var _curry3 = require(1157                ); // 1157 = ./internal/_curry3

module.exports = _curry3(_checkForMethod('slice', function slice(fromIndex, toIndex, list) {
  return Array.prototype.slice.call(list, fromIndex, toIndex);
}));
}, 1224, null, "ramda/src/slice.js");
__d(/* ramda/src/reverse.js */function(global, require, module, exports) {var _curry1 = require(1145                ); // 1145 = ./internal/_curry1
var _isString = require(1172                  ); // 1172 = ./internal/_isString

module.exports = _curry1(function reverse(list) {
  return _isString(list) ? list.split('').reverse().join('') : Array.prototype.slice.call(list, 0).reverse();
});
}, 1225, null, "ramda/src/reverse.js");
__d(/* ramda/src/composeK.js */function(global, require, module, exports) {var chain = require(1206     ); // 1206 = ./chain
var compose = require(1219       ); // 1219 = ./compose
var map = require(1168   ); // 1168 = ./map

module.exports = function composeK() {
  if (arguments.length === 0) {
    throw new Error('composeK requires at least one argument');
  }
  var init = Array.prototype.slice.call(arguments);
  var last = init.pop();
  return compose(compose.apply(this, map(chain, init)), last);
};
}, 1226, null, "ramda/src/composeK.js");
__d(/* ramda/src/composeP.js */function(global, require, module, exports) {var pipeP = require(1228     ); // 1228 = ./pipeP
var reverse = require(1225       ); // 1225 = ./reverse

module.exports = function composeP() {
  if (arguments.length === 0) {
    throw new Error('composeP requires at least one argument');
  }
  return pipeP.apply(this, reverse(arguments));
};
}, 1227, null, "ramda/src/composeP.js");
__d(/* ramda/src/pipeP.js */function(global, require, module, exports) {var _arity = require(1154               ); // 1154 = ./internal/_arity
var _pipeP = require(1229               ); // 1229 = ./internal/_pipeP
var reduce = require(1180      ); // 1180 = ./reduce
var tail = require(1222    ); // 1222 = ./tail

module.exports = function pipeP() {
  if (arguments.length === 0) {
    throw new Error('pipeP requires at least one argument');
  }
  return _arity(arguments[0].length, reduce(_pipeP, arguments[0], tail(arguments)));
};
}, 1228, null, "ramda/src/pipeP.js");
__d(/* ramda/src/internal/_pipeP.js */function(global, require, module, exports) {module.exports = function _pipeP(f, g) {
  return function () {
    var ctx = this;
    return f.apply(ctx, arguments).then(function (x) {
      return g.call(ctx, x);
    });
  };
};
}, 1229, null, "ramda/src/internal/_pipeP.js");
__d(/* ramda/src/concat.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2
var _isArray = require(1160                 ); // 1160 = ./internal/_isArray
var _isFunction = require(1201                    ); // 1201 = ./internal/_isFunction
var _isString = require(1172                  ); // 1172 = ./internal/_isString
var toString = require(1231        ); // 1231 = ./toString

module.exports = _curry2(function concat(a, b) {
  if (_isArray(a)) {
    if (_isArray(b)) {
      return a.concat(b);
    }
    throw new TypeError(toString(b) + ' is not an array');
  }
  if (_isString(a)) {
    if (_isString(b)) {
      return a + b;
    }
    throw new TypeError(toString(b) + ' is not a string');
  }
  if (a != null && _isFunction(a['fantasy-land/concat'])) {
    return a['fantasy-land/concat'](b);
  }
  if (a != null && _isFunction(a.concat)) {
    return a.concat(b);
  }
  throw new TypeError(toString(a) + ' does not have a method named "concat" or "fantasy-land/concat"');
});
}, 1230, null, "ramda/src/concat.js");
__d(/* ramda/src/toString.js */function(global, require, module, exports) {var _curry1 = require(1145                ); // 1145 = ./internal/_curry1
var _toString = require(1232                  ); // 1232 = ./internal/_toString

module.exports = _curry1(function toString(val) {
  return _toString(val, []);
});
}, 1231, null, "ramda/src/toString.js");
__d(/* ramda/src/internal/_toString.js */function(global, require, module, exports) {var _contains = require(1233         ); // 1233 = ./_contains
var _map = require(1169    ); // 1169 = ./_map
var _quote = require(1240      ); // 1240 = ./_quote
var _toISOString = require(1241            ); // 1241 = ./_toISOString
var keys = require(1176     ); // 1176 = ../keys
var reject = require(1242       ); // 1242 = ../reject

module.exports = function _toString(x, seen) {
  var recur = function recur(y) {
    var xs = seen.concat([x]);
    return _contains(y, xs) ? '<Circular>' : _toString(y, xs);
  };

  var mapPairs = function mapPairs(obj, keys) {
    return _map(function (k) {
      return _quote(k) + ': ' + recur(obj[k]);
    }, keys.slice().sort());
  };

  switch (Object.prototype.toString.call(x)) {
    case '[object Arguments]':
      return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';
    case '[object Array]':
      return '[' + _map(recur, x).concat(mapPairs(x, reject(function (k) {
        return (/^\d+$/.test(k)
        );
      }, keys(x)))).join(', ') + ']';
    case '[object Boolean]':
      return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();
    case '[object Date]':
      return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';
    case '[object Null]':
      return 'null';
    case '[object Number]':
      return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);
    case '[object String]':
      return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);
    case '[object Undefined]':
      return 'undefined';
    default:
      if (typeof x.toString === 'function') {
        var repr = x.toString();
        if (repr !== '[object Object]') {
          return repr;
        }
      }
      return '{' + mapPairs(x, keys(x)).join(', ') + '}';
  }
};
}, 1232, null, "ramda/src/internal/_toString.js");
__d(/* ramda/src/internal/_contains.js */function(global, require, module, exports) {var _indexOf = require(1234        ); // 1234 = ./_indexOf

module.exports = function _contains(a, list) {
  return _indexOf(list, a, 0) >= 0;
};
}, 1233, null, "ramda/src/internal/_contains.js");
__d(/* ramda/src/internal/_indexOf.js */function(global, require, module, exports) {var equals = require(1235       ); // 1235 = ../equals

module.exports = function _indexOf(list, a, idx) {
  var inf, item;

  if (typeof list.indexOf === 'function') {
    switch (typeof a) {
      case 'number':
        if (a === 0) {
          inf = 1 / a;
          while (idx < list.length) {
            item = list[idx];
            if (item === 0 && 1 / item === inf) {
              return idx;
            }
            idx += 1;
          }
          return -1;
        } else if (a !== a) {
          while (idx < list.length) {
            item = list[idx];
            if (typeof item === 'number' && item !== item) {
              return idx;
            }
            idx += 1;
          }
          return -1;
        }

        return list.indexOf(a, idx);

      case 'string':
      case 'boolean':
      case 'function':
      case 'undefined':
        return list.indexOf(a, idx);

      case 'object':
        if (a === null) {
          return list.indexOf(a, idx);
        }
    }
  }

  while (idx < list.length) {
    if (equals(list[idx], a)) {
      return idx;
    }
    idx += 1;
  }
  return -1;
};
}, 1234, null, "ramda/src/internal/_indexOf.js");
__d(/* ramda/src/equals.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2
var _equals = require(1236                ); // 1236 = ./internal/_equals

module.exports = _curry2(function equals(a, b) {
  return _equals(a, b, [], []);
});
}, 1235, null, "ramda/src/equals.js");
__d(/* ramda/src/internal/_equals.js */function(global, require, module, exports) {var _arrayFromIterator = require(1237                  ); // 1237 = ./_arrayFromIterator
var _functionName = require(1238             ); // 1238 = ./_functionName
var _has = require(1177    ); // 1177 = ./_has
var identical = require(1239          ); // 1239 = ../identical
var keys = require(1176     ); // 1176 = ../keys
var type = require(1215     ); // 1215 = ../type

module.exports = function _equals(a, b, stackA, stackB) {
  if (identical(a, b)) {
    return true;
  }

  if (type(a) !== type(b)) {
    return false;
  }

  if (a == null || b == null) {
    return false;
  }

  if (typeof a['fantasy-land/equals'] === 'function' || typeof b['fantasy-land/equals'] === 'function') {
    return typeof a['fantasy-land/equals'] === 'function' && a['fantasy-land/equals'](b) && typeof b['fantasy-land/equals'] === 'function' && b['fantasy-land/equals'](a);
  }

  if (typeof a.equals === 'function' || typeof b.equals === 'function') {
    return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);
  }

  switch (type(a)) {
    case 'Arguments':
    case 'Array':
    case 'Object':
      if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {
        return a === b;
      }
      break;
    case 'Boolean':
    case 'Number':
    case 'String':
      if (!(typeof a === typeof b && identical(a.valueOf(), b.valueOf()))) {
        return false;
      }
      break;
    case 'Date':
      if (!identical(a.valueOf(), b.valueOf())) {
        return false;
      }
      break;
    case 'Error':
      return a.name === b.name && a.message === b.message;
    case 'RegExp':
      if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {
        return false;
      }
      break;
    case 'Map':
    case 'Set':
      if (!_equals(_arrayFromIterator(a.entries()), _arrayFromIterator(b.entries()), stackA, stackB)) {
        return false;
      }
      break;
    case 'Int8Array':
    case 'Uint8Array':
    case 'Uint8ClampedArray':
    case 'Int16Array':
    case 'Uint16Array':
    case 'Int32Array':
    case 'Uint32Array':
    case 'Float32Array':
    case 'Float64Array':
      break;
    case 'ArrayBuffer':
      break;
    default:
      return false;
  }

  var keysA = keys(a);
  if (keysA.length !== keys(b).length) {
    return false;
  }

  var idx = stackA.length - 1;
  while (idx >= 0) {
    if (stackA[idx] === a) {
      return stackB[idx] === b;
    }
    idx -= 1;
  }

  stackA.push(a);
  stackB.push(b);
  idx = keysA.length - 1;
  while (idx >= 0) {
    var key = keysA[idx];
    if (!(_has(key, b) && _equals(b[key], a[key], stackA, stackB))) {
      return false;
    }
    idx -= 1;
  }
  stackA.pop();
  stackB.pop();
  return true;
};
}, 1236, null, "ramda/src/internal/_equals.js");
__d(/* ramda/src/internal/_arrayFromIterator.js */function(global, require, module, exports) {module.exports = function _arrayFromIterator(iter) {
  var list = [];
  var next;
  while (!(next = iter.next()).done) {
    list.push(next.value);
  }
  return list;
};
}, 1237, null, "ramda/src/internal/_arrayFromIterator.js");
__d(/* ramda/src/internal/_functionName.js */function(global, require, module, exports) {module.exports = function _functionName(f) {
  var match = String(f).match(/^function (\w*)/);
  return match == null ? '' : match[1];
};
}, 1238, null, "ramda/src/internal/_functionName.js");
__d(/* ramda/src/identical.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2

module.exports = _curry2(function identical(a, b) {
  if (a === b) {
    return a !== 0 || 1 / a === 1 / b;
  } else {
    return a !== a && b !== b;
  }
});
}, 1239, null, "ramda/src/identical.js");
__d(/* ramda/src/internal/_quote.js */function(global, require, module, exports) {module.exports = function _quote(s) {
  var escaped = s.replace(/\\/g, '\\\\').replace(/[\b]/g, '\\b').replace(/\f/g, '\\f').replace(/\n/g, '\\n').replace(/\r/g, '\\r').replace(/\t/g, '\\t').replace(/\v/g, '\\v').replace(/\0/g, '\\0');

  return '"' + escaped.replace(/"/g, '\\"') + '"';
};
}, 1240, null, "ramda/src/internal/_quote.js");
__d(/* ramda/src/internal/_toISOString.js */function(global, require, module, exports) {
module.exports = function () {
  var pad = function pad(n) {
    return (n < 10 ? '0' : '') + n;
  };

  return typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {
    return d.toISOString();
  } : function _toISOString(d) {
    return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';
  };
}();
}, 1241, null, "ramda/src/internal/_toISOString.js");
__d(/* ramda/src/reject.js */function(global, require, module, exports) {var _complement = require(1243                    ); // 1243 = ./internal/_complement
var _curry2 = require(1150                ); // 1150 = ./internal/_curry2
var filter = require(1244      ); // 1244 = ./filter

module.exports = _curry2(function reject(pred, filterable) {
  return filter(_complement(pred), filterable);
});
}, 1242, null, "ramda/src/reject.js");
__d(/* ramda/src/internal/_complement.js */function(global, require, module, exports) {module.exports = function _complement(f) {
  return function () {
    return !f.apply(this, arguments);
  };
};
}, 1243, null, "ramda/src/internal/_complement.js");
__d(/* ramda/src/filter.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2
var _dispatchable = require(1159                      ); // 1159 = ./internal/_dispatchable
var _filter = require(1245                ); // 1245 = ./internal/_filter
var _isObject = require(1246                  ); // 1246 = ./internal/_isObject
var _reduce = require(1170                ); // 1170 = ./internal/_reduce
var _xfilter = require(1247                 ); // 1247 = ./internal/_xfilter
var keys = require(1176    ); // 1176 = ./keys

module.exports = _curry2(_dispatchable(['filter'], _xfilter, function (pred, filterable) {
  return _isObject(filterable) ? _reduce(function (acc, key) {
    if (pred(filterable[key])) {
      acc[key] = filterable[key];
    }
    return acc;
  }, {}, keys(filterable)) : _filter(pred, filterable);
}));
}, 1244, null, "ramda/src/filter.js");
__d(/* ramda/src/internal/_filter.js */function(global, require, module, exports) {module.exports = function _filter(fn, list) {
  var idx = 0;
  var len = list.length;
  var result = [];

  while (idx < len) {
    if (fn(list[idx])) {
      result[result.length] = list[idx];
    }
    idx += 1;
  }
  return result;
};
}, 1245, null, "ramda/src/internal/_filter.js");
__d(/* ramda/src/internal/_isObject.js */function(global, require, module, exports) {module.exports = function _isObject(x) {
  return Object.prototype.toString.call(x) === '[object Object]';
};
}, 1246, null, "ramda/src/internal/_isObject.js");
__d(/* ramda/src/internal/_xfilter.js */function(global, require, module, exports) {var _curry2 = require(1150       ); // 1150 = ./_curry2
var _xfBase = require(1164       ); // 1164 = ./_xfBase

module.exports = function () {
  function XFilter(f, xf) {
    this.xf = xf;
    this.f = f;
  }
  XFilter.prototype['@@transducer/init'] = _xfBase.init;
  XFilter.prototype['@@transducer/result'] = _xfBase.result;
  XFilter.prototype['@@transducer/step'] = function (result, input) {
    return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;
  };

  return _curry2(function _xfilter(f, xf) {
    return new XFilter(f, xf);
  });
}();
}, 1247, null, "ramda/src/internal/_xfilter.js");
__d(/* ramda/src/cond.js */function(global, require, module, exports) {var _arity = require(1154               ); // 1154 = ./internal/_arity
var _curry1 = require(1145                ); // 1145 = ./internal/_curry1
var map = require(1168   ); // 1168 = ./map
var max = require(1166   ); // 1166 = ./max
var reduce = require(1180      ); // 1180 = ./reduce

module.exports = _curry1(function cond(pairs) {
  var arity = reduce(max, 0, map(function (pair) {
    return pair[0].length;
  }, pairs));
  return _arity(arity, function () {
    var idx = 0;
    while (idx < pairs.length) {
      if (pairs[idx][0].apply(this, arguments)) {
        return pairs[idx][1].apply(this, arguments);
      }
      idx += 1;
    }
  });
});
}, 1248, null, "ramda/src/cond.js");
__d(/* ramda/src/construct.js */function(global, require, module, exports) {var _curry1 = require(1145                ); // 1145 = ./internal/_curry1
var constructN = require(1250          ); // 1250 = ./constructN

module.exports = _curry1(function construct(Fn) {
  return constructN(Fn.length, Fn);
});
}, 1249, null, "ramda/src/construct.js");
__d(/* ramda/src/constructN.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2
var curry = require(1205     ); // 1205 = ./curry
var nAry = require(1199    ); // 1199 = ./nAry

module.exports = _curry2(function constructN(n, Fn) {
  if (n > 10) {
    throw new Error('Constructor with greater than ten arguments');
  }
  if (n === 0) {
    return function () {
      return new Fn();
    };
  }
  return curry(nAry(n, function ($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {
    switch (arguments.length) {
      case 1:
        return new Fn($0);
      case 2:
        return new Fn($0, $1);
      case 3:
        return new Fn($0, $1, $2);
      case 4:
        return new Fn($0, $1, $2, $3);
      case 5:
        return new Fn($0, $1, $2, $3, $4);
      case 6:
        return new Fn($0, $1, $2, $3, $4, $5);
      case 7:
        return new Fn($0, $1, $2, $3, $4, $5, $6);
      case 8:
        return new Fn($0, $1, $2, $3, $4, $5, $6, $7);
      case 9:
        return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8);
      case 10:
        return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8, $9);
    }
  }));
});
}, 1250, null, "ramda/src/constructN.js");
__d(/* ramda/src/contains.js */function(global, require, module, exports) {var _contains = require(1233                  ); // 1233 = ./internal/_contains
var _curry2 = require(1150                ); // 1150 = ./internal/_curry2

module.exports = _curry2(_contains);
}, 1251, null, "ramda/src/contains.js");
__d(/* ramda/src/converge.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2
var _map = require(1169             ); // 1169 = ./internal/_map
var curryN = require(1153      ); // 1153 = ./curryN
var max = require(1166   ); // 1166 = ./max
var pluck = require(1167     ); // 1167 = ./pluck
var reduce = require(1180      ); // 1180 = ./reduce

module.exports = _curry2(function converge(after, fns) {
  return curryN(reduce(max, 0, pluck('length', fns)), function () {
    var args = arguments;
    var context = this;
    return after.apply(context, _map(function (fn) {
      return fn.apply(context, args);
    }, fns));
  });
});
}, 1252, null, "ramda/src/converge.js");
__d(/* ramda/src/countBy.js */function(global, require, module, exports) {var reduceBy = require(1254        ); // 1254 = ./reduceBy

module.exports = reduceBy(function (acc, elem) {
  return acc + 1;
}, 0);
}, 1253, null, "ramda/src/countBy.js");
__d(/* ramda/src/reduceBy.js */function(global, require, module, exports) {var _curryN = require(1155                ); // 1155 = ./internal/_curryN
var _dispatchable = require(1159                      ); // 1159 = ./internal/_dispatchable
var _has = require(1177             ); // 1177 = ./internal/_has
var _reduce = require(1170                ); // 1170 = ./internal/_reduce
var _xreduceBy = require(1255                   ); // 1255 = ./internal/_xreduceBy

module.exports = _curryN(4, [], _dispatchable([], _xreduceBy, function reduceBy(valueFn, valueAcc, keyFn, list) {
  return _reduce(function (acc, elt) {
    var key = keyFn(elt);
    acc[key] = valueFn(_has(key, acc) ? acc[key] : valueAcc, elt);
    return acc;
  }, {}, list);
}));
}, 1254, null, "ramda/src/reduceBy.js");
__d(/* ramda/src/internal/_xreduceBy.js */function(global, require, module, exports) {var _curryN = require(1155       ); // 1155 = ./_curryN
var _has = require(1177    ); // 1177 = ./_has
var _xfBase = require(1164       ); // 1164 = ./_xfBase

module.exports = function () {
  function XReduceBy(valueFn, valueAcc, keyFn, xf) {
    this.valueFn = valueFn;
    this.valueAcc = valueAcc;
    this.keyFn = keyFn;
    this.xf = xf;
    this.inputs = {};
  }
  XReduceBy.prototype['@@transducer/init'] = _xfBase.init;
  XReduceBy.prototype['@@transducer/result'] = function (result) {
    var key;
    for (key in this.inputs) {
      if (_has(key, this.inputs)) {
        result = this.xf['@@transducer/step'](result, this.inputs[key]);
        if (result['@@transducer/reduced']) {
          result = result['@@transducer/value'];
          break;
        }
      }
    }
    this.inputs = null;
    return this.xf['@@transducer/result'](result);
  };
  XReduceBy.prototype['@@transducer/step'] = function (result, input) {
    var key = this.keyFn(input);
    this.inputs[key] = this.inputs[key] || [key, this.valueAcc];
    this.inputs[key][1] = this.valueFn(this.inputs[key][1], input);
    return result;
  };

  return _curryN(4, [], function _xreduceBy(valueFn, valueAcc, keyFn, xf) {
    return new XReduceBy(valueFn, valueAcc, keyFn, xf);
  });
}();
}, 1255, null, "ramda/src/internal/_xreduceBy.js");
__d(/* ramda/src/dec.js */function(global, require, module, exports) {var add = require(1149   ); // 1149 = ./add

module.exports = add(-1);
}, 1256, null, "ramda/src/dec.js");
__d(/* ramda/src/defaultTo.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2

module.exports = _curry2(function defaultTo(d, v) {
  return v == null || v !== v ? d : v;
});
}, 1257, null, "ramda/src/defaultTo.js");
__d(/* ramda/src/descend.js */function(global, require, module, exports) {var _curry3 = require(1157                ); // 1157 = ./internal/_curry3

module.exports = _curry3(function descend(fn, a, b) {
  var aa = fn(a);
  var bb = fn(b);
  return aa > bb ? -1 : aa < bb ? 1 : 0;
});
}, 1258, null, "ramda/src/descend.js");
__d(/* ramda/src/difference.js */function(global, require, module, exports) {var _contains = require(1233                  ); // 1233 = ./internal/_contains
var _curry2 = require(1150                ); // 1150 = ./internal/_curry2

module.exports = _curry2(function difference(first, second) {
  var out = [];
  var idx = 0;
  var firstLen = first.length;
  while (idx < firstLen) {
    if (!_contains(first[idx], second) && !_contains(first[idx], out)) {
      out[out.length] = first[idx];
    }
    idx += 1;
  }
  return out;
});
}, 1259, null, "ramda/src/difference.js");
__d(/* ramda/src/differenceWith.js */function(global, require, module, exports) {var _containsWith = require(1261                      ); // 1261 = ./internal/_containsWith
var _curry3 = require(1157                ); // 1157 = ./internal/_curry3

module.exports = _curry3(function differenceWith(pred, first, second) {
  var out = [];
  var idx = 0;
  var firstLen = first.length;
  while (idx < firstLen) {
    if (!_containsWith(pred, first[idx], second) && !_containsWith(pred, first[idx], out)) {
      out.push(first[idx]);
    }
    idx += 1;
  }
  return out;
});
}, 1260, null, "ramda/src/differenceWith.js");
__d(/* ramda/src/internal/_containsWith.js */function(global, require, module, exports) {module.exports = function _containsWith(pred, x, list) {
  var idx = 0;
  var len = list.length;

  while (idx < len) {
    if (pred(x, list[idx])) {
      return true;
    }
    idx += 1;
  }
  return false;
};
}, 1261, null, "ramda/src/internal/_containsWith.js");
__d(/* ramda/src/dissoc.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2

module.exports = _curry2(function dissoc(prop, obj) {
  var result = {};
  for (var p in obj) {
    result[p] = obj[p];
  }
  delete result[prop];
  return result;
});
}, 1262, null, "ramda/src/dissoc.js");
__d(/* ramda/src/dissocPath.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2
var _isInteger = require(1196                   ); // 1196 = ./internal/_isInteger
var assoc = require(1194     ); // 1194 = ./assoc
var dissoc = require(1262      ); // 1262 = ./dissoc
var remove = require(1264      ); // 1264 = ./remove
var update = require(1265      ); // 1265 = ./update

module.exports = _curry2(function dissocPath(path, obj) {
  switch (path.length) {
    case 0:
      return obj;
    case 1:
      return _isInteger(path[0]) ? remove(path[0], 1, obj) : dissoc(path[0], obj);
    default:
      var head = path[0];
      var tail = Array.prototype.slice.call(path, 1);
      if (obj[head] == null) {
        return obj;
      } else if (_isInteger(path[0])) {
        return update(head, dissocPath(tail, obj[head]), obj);
      } else {
        return assoc(head, dissocPath(tail, obj[head]), obj);
      }
  }
});
}, 1263, null, "ramda/src/dissocPath.js");
__d(/* ramda/src/remove.js */function(global, require, module, exports) {var _curry3 = require(1157                ); // 1157 = ./internal/_curry3

module.exports = _curry3(function remove(start, count, list) {
  var result = Array.prototype.slice.call(list, 0);
  result.splice(start, count);
  return result;
});
}, 1264, null, "ramda/src/remove.js");
__d(/* ramda/src/update.js */function(global, require, module, exports) {var _curry3 = require(1157                ); // 1157 = ./internal/_curry3
var adjust = require(1156      ); // 1156 = ./adjust
var always = require(1144      ); // 1144 = ./always

module.exports = _curry3(function update(idx, x, list) {
  return adjust(always(x), idx, list);
});
}, 1265, null, "ramda/src/update.js");
__d(/* ramda/src/divide.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2

module.exports = _curry2(function divide(a, b) {
  return a / b;
});
}, 1266, null, "ramda/src/divide.js");
__d(/* ramda/src/drop.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2
var _dispatchable = require(1159                      ); // 1159 = ./internal/_dispatchable
var _xdrop = require(1268               ); // 1268 = ./internal/_xdrop
var slice = require(1224     ); // 1224 = ./slice

module.exports = _curry2(_dispatchable(['drop'], _xdrop, function drop(n, xs) {
  return slice(Math.max(0, n), Infinity, xs);
}));
}, 1267, null, "ramda/src/drop.js");
__d(/* ramda/src/internal/_xdrop.js */function(global, require, module, exports) {var _curry2 = require(1150       ); // 1150 = ./_curry2
var _xfBase = require(1164       ); // 1164 = ./_xfBase

module.exports = function () {
  function XDrop(n, xf) {
    this.xf = xf;
    this.n = n;
  }
  XDrop.prototype['@@transducer/init'] = _xfBase.init;
  XDrop.prototype['@@transducer/result'] = _xfBase.result;
  XDrop.prototype['@@transducer/step'] = function (result, input) {
    if (this.n > 0) {
      this.n -= 1;
      return result;
    }
    return this.xf['@@transducer/step'](result, input);
  };

  return _curry2(function _xdrop(n, xf) {
    return new XDrop(n, xf);
  });
}();
}, 1268, null, "ramda/src/internal/_xdrop.js");
__d(/* ramda/src/dropLast.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2
var _dispatchable = require(1159                      ); // 1159 = ./internal/_dispatchable
var _dropLast = require(1270                  ); // 1270 = ./internal/_dropLast
var _xdropLast = require(1273                   ); // 1273 = ./internal/_xdropLast

module.exports = _curry2(_dispatchable([], _xdropLast, _dropLast));
}, 1269, null, "ramda/src/dropLast.js");
__d(/* ramda/src/internal/_dropLast.js */function(global, require, module, exports) {var take = require(1271     ); // 1271 = ../take

module.exports = function dropLast(n, xs) {
  return take(n < xs.length ? xs.length - n : 0, xs);
};
}, 1270, null, "ramda/src/internal/_dropLast.js");
__d(/* ramda/src/take.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2
var _dispatchable = require(1159                      ); // 1159 = ./internal/_dispatchable
var _xtake = require(1272               ); // 1272 = ./internal/_xtake
var slice = require(1224     ); // 1224 = ./slice

module.exports = _curry2(_dispatchable(['take'], _xtake, function take(n, xs) {
  return slice(0, n < 0 ? Infinity : n, xs);
}));
}, 1271, null, "ramda/src/take.js");
__d(/* ramda/src/internal/_xtake.js */function(global, require, module, exports) {var _curry2 = require(1150       ); // 1150 = ./_curry2
var _reduced = require(1163        ); // 1163 = ./_reduced
var _xfBase = require(1164       ); // 1164 = ./_xfBase

module.exports = function () {
  function XTake(n, xf) {
    this.xf = xf;
    this.n = n;
    this.i = 0;
  }
  XTake.prototype['@@transducer/init'] = _xfBase.init;
  XTake.prototype['@@transducer/result'] = _xfBase.result;
  XTake.prototype['@@transducer/step'] = function (result, input) {
    this.i += 1;
    var ret = this.n === 0 ? result : this.xf['@@transducer/step'](result, input);
    return this.n >= 0 && this.i >= this.n ? _reduced(ret) : ret;
  };

  return _curry2(function _xtake(n, xf) {
    return new XTake(n, xf);
  });
}();
}, 1272, null, "ramda/src/internal/_xtake.js");
__d(/* ramda/src/internal/_xdropLast.js */function(global, require, module, exports) {var _curry2 = require(1150       ); // 1150 = ./_curry2
var _xfBase = require(1164       ); // 1164 = ./_xfBase

module.exports = function () {
  function XDropLast(n, xf) {
    this.xf = xf;
    this.pos = 0;
    this.full = false;
    this.acc = new Array(n);
  }
  XDropLast.prototype['@@transducer/init'] = _xfBase.init;
  XDropLast.prototype['@@transducer/result'] = function (result) {
    this.acc = null;
    return this.xf['@@transducer/result'](result);
  };
  XDropLast.prototype['@@transducer/step'] = function (result, input) {
    if (this.full) {
      result = this.xf['@@transducer/step'](result, this.acc[this.pos]);
    }
    this.store(input);
    return result;
  };
  XDropLast.prototype.store = function (input) {
    this.acc[this.pos] = input;
    this.pos += 1;
    if (this.pos === this.acc.length) {
      this.pos = 0;
      this.full = true;
    }
  };

  return _curry2(function _xdropLast(n, xf) {
    return new XDropLast(n, xf);
  });
}();
}, 1273, null, "ramda/src/internal/_xdropLast.js");
__d(/* ramda/src/dropLastWhile.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2
var _dispatchable = require(1159                      ); // 1159 = ./internal/_dispatchable
var _dropLastWhile = require(1275                       ); // 1275 = ./internal/_dropLastWhile
var _xdropLastWhile = require(1276                        ); // 1276 = ./internal/_xdropLastWhile

module.exports = _curry2(_dispatchable([], _xdropLastWhile, _dropLastWhile));
}, 1274, null, "ramda/src/dropLastWhile.js");
__d(/* ramda/src/internal/_dropLastWhile.js */function(global, require, module, exports) {module.exports = function dropLastWhile(pred, list) {
  var idx = list.length - 1;
  while (idx >= 0 && pred(list[idx])) {
    idx -= 1;
  }
  return Array.prototype.slice.call(list, 0, idx + 1);
};
}, 1275, null, "ramda/src/internal/_dropLastWhile.js");
__d(/* ramda/src/internal/_xdropLastWhile.js */function(global, require, module, exports) {var _curry2 = require(1150       ); // 1150 = ./_curry2
var _reduce = require(1170       ); // 1170 = ./_reduce
var _xfBase = require(1164       ); // 1164 = ./_xfBase

module.exports = function () {
  function XDropLastWhile(fn, xf) {
    this.f = fn;
    this.retained = [];
    this.xf = xf;
  }
  XDropLastWhile.prototype['@@transducer/init'] = _xfBase.init;
  XDropLastWhile.prototype['@@transducer/result'] = function (result) {
    this.retained = null;
    return this.xf['@@transducer/result'](result);
  };
  XDropLastWhile.prototype['@@transducer/step'] = function (result, input) {
    return this.f(input) ? this.retain(result, input) : this.flush(result, input);
  };
  XDropLastWhile.prototype.flush = function (result, input) {
    result = _reduce(this.xf['@@transducer/step'], result, this.retained);
    this.retained = [];
    return this.xf['@@transducer/step'](result, input);
  };
  XDropLastWhile.prototype.retain = function (result, input) {
    this.retained.push(input);
    return result;
  };

  return _curry2(function _xdropLastWhile(fn, xf) {
    return new XDropLastWhile(fn, xf);
  });
}();
}, 1276, null, "ramda/src/internal/_xdropLastWhile.js");
__d(/* ramda/src/dropRepeats.js */function(global, require, module, exports) {var _curry1 = require(1145                ); // 1145 = ./internal/_curry1
var _dispatchable = require(1159                      ); // 1159 = ./internal/_dispatchable
var _xdropRepeatsWith = require(1278                          ); // 1278 = ./internal/_xdropRepeatsWith
var dropRepeatsWith = require(1279               ); // 1279 = ./dropRepeatsWith
var equals = require(1235      ); // 1235 = ./equals

module.exports = _curry1(_dispatchable([], _xdropRepeatsWith(equals), dropRepeatsWith(equals)));
}, 1277, null, "ramda/src/dropRepeats.js");
__d(/* ramda/src/internal/_xdropRepeatsWith.js */function(global, require, module, exports) {var _curry2 = require(1150       ); // 1150 = ./_curry2
var _xfBase = require(1164       ); // 1164 = ./_xfBase

module.exports = function () {
  function XDropRepeatsWith(pred, xf) {
    this.xf = xf;
    this.pred = pred;
    this.lastValue = undefined;
    this.seenFirstValue = false;
  }

  XDropRepeatsWith.prototype['@@transducer/init'] = _xfBase.init;
  XDropRepeatsWith.prototype['@@transducer/result'] = _xfBase.result;
  XDropRepeatsWith.prototype['@@transducer/step'] = function (result, input) {
    var sameAsLast = false;
    if (!this.seenFirstValue) {
      this.seenFirstValue = true;
    } else if (this.pred(this.lastValue, input)) {
      sameAsLast = true;
    }
    this.lastValue = input;
    return sameAsLast ? result : this.xf['@@transducer/step'](result, input);
  };

  return _curry2(function _xdropRepeatsWith(pred, xf) {
    return new XDropRepeatsWith(pred, xf);
  });
}();
}, 1278, null, "ramda/src/internal/_xdropRepeatsWith.js");
__d(/* ramda/src/dropRepeatsWith.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2
var _dispatchable = require(1159                      ); // 1159 = ./internal/_dispatchable
var _xdropRepeatsWith = require(1278                          ); // 1278 = ./internal/_xdropRepeatsWith
var last = require(1280    ); // 1280 = ./last

module.exports = _curry2(_dispatchable([], _xdropRepeatsWith, function dropRepeatsWith(pred, list) {
  var result = [];
  var idx = 1;
  var len = list.length;
  if (len !== 0) {
    result[0] = list[0];
    while (idx < len) {
      if (!pred(last(result), list[idx])) {
        result[result.length] = list[idx];
      }
      idx += 1;
    }
  }
  return result;
}));
}, 1279, null, "ramda/src/dropRepeatsWith.js");
__d(/* ramda/src/last.js */function(global, require, module, exports) {var nth = require(1281   ); // 1281 = ./nth

module.exports = nth(-1);
}, 1280, null, "ramda/src/last.js");
__d(/* ramda/src/nth.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2
var _isString = require(1172                  ); // 1172 = ./internal/_isString

module.exports = _curry2(function nth(offset, list) {
  var idx = offset < 0 ? list.length + offset : offset;
  return _isString(list) ? list.charAt(idx) : list[idx];
});
}, 1281, null, "ramda/src/nth.js");
__d(/* ramda/src/dropWhile.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2
var _dispatchable = require(1159                      ); // 1159 = ./internal/_dispatchable
var _xdropWhile = require(1283                    ); // 1283 = ./internal/_xdropWhile

module.exports = _curry2(_dispatchable(['dropWhile'], _xdropWhile, function dropWhile(pred, list) {
  var idx = 0;
  var len = list.length;
  while (idx < len && pred(list[idx])) {
    idx += 1;
  }
  return Array.prototype.slice.call(list, idx);
}));
}, 1282, null, "ramda/src/dropWhile.js");
__d(/* ramda/src/internal/_xdropWhile.js */function(global, require, module, exports) {var _curry2 = require(1150       ); // 1150 = ./_curry2
var _xfBase = require(1164       ); // 1164 = ./_xfBase

module.exports = function () {
  function XDropWhile(f, xf) {
    this.xf = xf;
    this.f = f;
  }
  XDropWhile.prototype['@@transducer/init'] = _xfBase.init;
  XDropWhile.prototype['@@transducer/result'] = _xfBase.result;
  XDropWhile.prototype['@@transducer/step'] = function (result, input) {
    if (this.f) {
      if (this.f(input)) {
        return result;
      }
      this.f = null;
    }
    return this.xf['@@transducer/step'](result, input);
  };

  return _curry2(function _xdropWhile(f, xf) {
    return new XDropWhile(f, xf);
  });
}();
}, 1283, null, "ramda/src/internal/_xdropWhile.js");
__d(/* ramda/src/either.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2
var _isFunction = require(1201                    ); // 1201 = ./internal/_isFunction
var lift = require(1202    ); // 1202 = ./lift
var or = require(1285  ); // 1285 = ./or

module.exports = _curry2(function either(f, g) {
  return _isFunction(f) ? function _either() {
    return f.apply(this, arguments) || g.apply(this, arguments);
  } : lift(or)(f, g);
});
}, 1284, null, "ramda/src/either.js");
__d(/* ramda/src/or.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2

module.exports = _curry2(function or(a, b) {
  return a || b;
});
}, 1285, null, "ramda/src/or.js");
__d(/* ramda/src/empty.js */function(global, require, module, exports) {var _curry1 = require(1145                ); // 1145 = ./internal/_curry1
var _isArguments = require(1178                     ); // 1178 = ./internal/_isArguments
var _isArray = require(1160                 ); // 1160 = ./internal/_isArray
var _isObject = require(1246                  ); // 1246 = ./internal/_isObject
var _isString = require(1172                  ); // 1172 = ./internal/_isString

module.exports = _curry1(function empty(x) {
  return x != null && typeof x['fantasy-land/empty'] === 'function' ? x['fantasy-land/empty']() : x != null && x.constructor != null && typeof x.constructor['fantasy-land/empty'] === 'function' ? x.constructor['fantasy-land/empty']() : x != null && typeof x.empty === 'function' ? x.empty() : x != null && x.constructor != null && typeof x.constructor.empty === 'function' ? x.constructor.empty() : _isArray(x) ? [] : _isString(x) ? '' : _isObject(x) ? {} : _isArguments(x) ? function () {
    return arguments;
  }() : void 0;
});
}, 1286, null, "ramda/src/empty.js");
__d(/* ramda/src/endsWith.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2
var equals = require(1235      ); // 1235 = ./equals
var takeLast = require(1288        ); // 1288 = ./takeLast

module.exports = _curry2(function (suffix, list) {
  return equals(takeLast(suffix.length, list), suffix);
});
}, 1287, null, "ramda/src/endsWith.js");
__d(/* ramda/src/takeLast.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2
var drop = require(1267    ); // 1267 = ./drop

module.exports = _curry2(function takeLast(n, xs) {
  return drop(n >= 0 ? xs.length - n : 0, xs);
});
}, 1288, null, "ramda/src/takeLast.js");
__d(/* ramda/src/eqBy.js */function(global, require, module, exports) {var _curry3 = require(1157                ); // 1157 = ./internal/_curry3
var equals = require(1235      ); // 1235 = ./equals

module.exports = _curry3(function eqBy(f, x, y) {
  return equals(f(x), f(y));
});
}, 1289, null, "ramda/src/eqBy.js");
__d(/* ramda/src/eqProps.js */function(global, require, module, exports) {var _curry3 = require(1157                ); // 1157 = ./internal/_curry3
var equals = require(1235      ); // 1235 = ./equals

module.exports = _curry3(function eqProps(prop, obj1, obj2) {
  return equals(obj1[prop], obj2[prop]);
});
}, 1290, null, "ramda/src/eqProps.js");
__d(/* ramda/src/evolve.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2

module.exports = _curry2(function evolve(transformations, object) {
  var result = {};
  var transformation, key, type;
  for (key in object) {
    transformation = transformations[key];
    type = typeof transformation;
    result[key] = type === 'function' ? transformation(object[key]) : transformation && type === 'object' ? evolve(transformation, object[key]) : object[key];
  }
  return result;
});
}, 1291, null, "ramda/src/evolve.js");
__d(/* ramda/src/find.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2
var _dispatchable = require(1159                      ); // 1159 = ./internal/_dispatchable
var _xfind = require(1293               ); // 1293 = ./internal/_xfind

module.exports = _curry2(_dispatchable(['find'], _xfind, function find(fn, list) {
  var idx = 0;
  var len = list.length;
  while (idx < len) {
    if (fn(list[idx])) {
      return list[idx];
    }
    idx += 1;
  }
}));
}, 1292, null, "ramda/src/find.js");
__d(/* ramda/src/internal/_xfind.js */function(global, require, module, exports) {var _curry2 = require(1150       ); // 1150 = ./_curry2
var _reduced = require(1163        ); // 1163 = ./_reduced
var _xfBase = require(1164       ); // 1164 = ./_xfBase

module.exports = function () {
  function XFind(f, xf) {
    this.xf = xf;
    this.f = f;
    this.found = false;
  }
  XFind.prototype['@@transducer/init'] = _xfBase.init;
  XFind.prototype['@@transducer/result'] = function (result) {
    if (!this.found) {
      result = this.xf['@@transducer/step'](result, void 0);
    }
    return this.xf['@@transducer/result'](result);
  };
  XFind.prototype['@@transducer/step'] = function (result, input) {
    if (this.f(input)) {
      this.found = true;
      result = _reduced(this.xf['@@transducer/step'](result, input));
    }
    return result;
  };

  return _curry2(function _xfind(f, xf) {
    return new XFind(f, xf);
  });
}();
}, 1293, null, "ramda/src/internal/_xfind.js");
__d(/* ramda/src/findIndex.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2
var _dispatchable = require(1159                      ); // 1159 = ./internal/_dispatchable
var _xfindIndex = require(1295                    ); // 1295 = ./internal/_xfindIndex

module.exports = _curry2(_dispatchable([], _xfindIndex, function findIndex(fn, list) {
  var idx = 0;
  var len = list.length;
  while (idx < len) {
    if (fn(list[idx])) {
      return idx;
    }
    idx += 1;
  }
  return -1;
}));
}, 1294, null, "ramda/src/findIndex.js");
__d(/* ramda/src/internal/_xfindIndex.js */function(global, require, module, exports) {var _curry2 = require(1150       ); // 1150 = ./_curry2
var _reduced = require(1163        ); // 1163 = ./_reduced
var _xfBase = require(1164       ); // 1164 = ./_xfBase

module.exports = function () {
  function XFindIndex(f, xf) {
    this.xf = xf;
    this.f = f;
    this.idx = -1;
    this.found = false;
  }
  XFindIndex.prototype['@@transducer/init'] = _xfBase.init;
  XFindIndex.prototype['@@transducer/result'] = function (result) {
    if (!this.found) {
      result = this.xf['@@transducer/step'](result, -1);
    }
    return this.xf['@@transducer/result'](result);
  };
  XFindIndex.prototype['@@transducer/step'] = function (result, input) {
    this.idx += 1;
    if (this.f(input)) {
      this.found = true;
      result = _reduced(this.xf['@@transducer/step'](result, this.idx));
    }
    return result;
  };

  return _curry2(function _xfindIndex(f, xf) {
    return new XFindIndex(f, xf);
  });
}();
}, 1295, null, "ramda/src/internal/_xfindIndex.js");
__d(/* ramda/src/findLast.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2
var _dispatchable = require(1159                      ); // 1159 = ./internal/_dispatchable
var _xfindLast = require(1297                   ); // 1297 = ./internal/_xfindLast

module.exports = _curry2(_dispatchable([], _xfindLast, function findLast(fn, list) {
  var idx = list.length - 1;
  while (idx >= 0) {
    if (fn(list[idx])) {
      return list[idx];
    }
    idx -= 1;
  }
}));
}, 1296, null, "ramda/src/findLast.js");
__d(/* ramda/src/internal/_xfindLast.js */function(global, require, module, exports) {var _curry2 = require(1150       ); // 1150 = ./_curry2
var _xfBase = require(1164       ); // 1164 = ./_xfBase

module.exports = function () {
  function XFindLast(f, xf) {
    this.xf = xf;
    this.f = f;
  }
  XFindLast.prototype['@@transducer/init'] = _xfBase.init;
  XFindLast.prototype['@@transducer/result'] = function (result) {
    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.last));
  };
  XFindLast.prototype['@@transducer/step'] = function (result, input) {
    if (this.f(input)) {
      this.last = input;
    }
    return result;
  };

  return _curry2(function _xfindLast(f, xf) {
    return new XFindLast(f, xf);
  });
}();
}, 1297, null, "ramda/src/internal/_xfindLast.js");
__d(/* ramda/src/findLastIndex.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2
var _dispatchable = require(1159                      ); // 1159 = ./internal/_dispatchable
var _xfindLastIndex = require(1299                        ); // 1299 = ./internal/_xfindLastIndex

module.exports = _curry2(_dispatchable([], _xfindLastIndex, function findLastIndex(fn, list) {
  var idx = list.length - 1;
  while (idx >= 0) {
    if (fn(list[idx])) {
      return idx;
    }
    idx -= 1;
  }
  return -1;
}));
}, 1298, null, "ramda/src/findLastIndex.js");
__d(/* ramda/src/internal/_xfindLastIndex.js */function(global, require, module, exports) {var _curry2 = require(1150       ); // 1150 = ./_curry2
var _xfBase = require(1164       ); // 1164 = ./_xfBase

module.exports = function () {
  function XFindLastIndex(f, xf) {
    this.xf = xf;
    this.f = f;
    this.idx = -1;
    this.lastIdx = -1;
  }
  XFindLastIndex.prototype['@@transducer/init'] = _xfBase.init;
  XFindLastIndex.prototype['@@transducer/result'] = function (result) {
    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.lastIdx));
  };
  XFindLastIndex.prototype['@@transducer/step'] = function (result, input) {
    this.idx += 1;
    if (this.f(input)) {
      this.lastIdx = this.idx;
    }
    return result;
  };

  return _curry2(function _xfindLastIndex(f, xf) {
    return new XFindLastIndex(f, xf);
  });
}();
}, 1299, null, "ramda/src/internal/_xfindLastIndex.js");
__d(/* ramda/src/flatten.js */function(global, require, module, exports) {var _curry1 = require(1145                ); // 1145 = ./internal/_curry1
var _makeFlat = require(1207                  ); // 1207 = ./internal/_makeFlat

module.exports = _curry1(_makeFlat(true));
}, 1300, null, "ramda/src/flatten.js");
__d(/* ramda/src/flip.js */function(global, require, module, exports) {var _curry1 = require(1145                ); // 1145 = ./internal/_curry1
var curry = require(1205     ); // 1205 = ./curry

module.exports = _curry1(function flip(fn) {
  return curry(function (a, b) {
    var args = Array.prototype.slice.call(arguments, 0);
    args[0] = b;
    args[1] = a;
    return fn.apply(this, args);
  });
});
}, 1301, null, "ramda/src/flip.js");
__d(/* ramda/src/forEach.js */function(global, require, module, exports) {var _checkForMethod = require(1223                        ); // 1223 = ./internal/_checkForMethod
var _curry2 = require(1150                ); // 1150 = ./internal/_curry2

module.exports = _curry2(_checkForMethod('forEach', function forEach(fn, list) {
  var len = list.length;
  var idx = 0;
  while (idx < len) {
    fn(list[idx]);
    idx += 1;
  }
  return list;
}));
}, 1302, null, "ramda/src/forEach.js");
__d(/* ramda/src/forEachObjIndexed.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2
var keys = require(1176    ); // 1176 = ./keys

module.exports = _curry2(function forEachObjIndexed(fn, obj) {
  var keyList = keys(obj);
  var idx = 0;
  while (idx < keyList.length) {
    var key = keyList[idx];
    fn(obj[key], key, obj);
    idx += 1;
  }
  return obj;
});
}, 1303, null, "ramda/src/forEachObjIndexed.js");
__d(/* ramda/src/fromPairs.js */function(global, require, module, exports) {var _curry1 = require(1145                ); // 1145 = ./internal/_curry1

module.exports = _curry1(function fromPairs(pairs) {
  var result = {};
  var idx = 0;
  while (idx < pairs.length) {
    result[pairs[idx][0]] = pairs[idx][1];
    idx += 1;
  }
  return result;
});
}, 1304, null, "ramda/src/fromPairs.js");
__d(/* ramda/src/groupBy.js */function(global, require, module, exports) {var _checkForMethod = require(1223                        ); // 1223 = ./internal/_checkForMethod
var _curry2 = require(1150                ); // 1150 = ./internal/_curry2
var reduceBy = require(1254        ); // 1254 = ./reduceBy

module.exports = _curry2(_checkForMethod('groupBy', reduceBy(function (acc, item) {
  if (acc == null) {
    acc = [];
  }
  acc.push(item);
  return acc;
}, null)));
}, 1305, null, "ramda/src/groupBy.js");
__d(/* ramda/src/groupWith.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2

module.exports = _curry2(function (fn, list) {
  var res = [];
  var idx = 0;
  var len = list.length;
  while (idx < len) {
    var nextidx = idx + 1;
    while (nextidx < len && fn(list[nextidx - 1], list[nextidx])) {
      nextidx += 1;
    }
    res.push(list.slice(idx, nextidx));
    idx = nextidx;
  }
  return res;
});
}, 1306, null, "ramda/src/groupWith.js");
__d(/* ramda/src/gt.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2

module.exports = _curry2(function gt(a, b) {
  return a > b;
});
}, 1307, null, "ramda/src/gt.js");
__d(/* ramda/src/gte.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2

module.exports = _curry2(function gte(a, b) {
  return a >= b;
});
}, 1308, null, "ramda/src/gte.js");
__d(/* ramda/src/has.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2
var _has = require(1177             ); // 1177 = ./internal/_has

module.exports = _curry2(_has);
}, 1309, null, "ramda/src/has.js");
__d(/* ramda/src/hasIn.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2

module.exports = _curry2(function hasIn(prop, obj) {
  return prop in obj;
});
}, 1310, null, "ramda/src/hasIn.js");
__d(/* ramda/src/head.js */function(global, require, module, exports) {var nth = require(1281   ); // 1281 = ./nth

module.exports = nth(0);
}, 1311, null, "ramda/src/head.js");
__d(/* ramda/src/identity.js */function(global, require, module, exports) {var _curry1 = require(1145                ); // 1145 = ./internal/_curry1
var _identity = require(1313                  ); // 1313 = ./internal/_identity

module.exports = _curry1(_identity);
}, 1312, null, "ramda/src/identity.js");
__d(/* ramda/src/internal/_identity.js */function(global, require, module, exports) {module.exports = function _identity(x) {
  return x;
};
}, 1313, null, "ramda/src/internal/_identity.js");
__d(/* ramda/src/ifElse.js */function(global, require, module, exports) {var _curry3 = require(1157                ); // 1157 = ./internal/_curry3
var curryN = require(1153      ); // 1153 = ./curryN

module.exports = _curry3(function ifElse(condition, onTrue, onFalse) {
  return curryN(Math.max(condition.length, onTrue.length, onFalse.length), function _ifElse() {
    return condition.apply(this, arguments) ? onTrue.apply(this, arguments) : onFalse.apply(this, arguments);
  });
});
}, 1314, null, "ramda/src/ifElse.js");
__d(/* ramda/src/inc.js */function(global, require, module, exports) {var add = require(1149   ); // 1149 = ./add

module.exports = add(1);
}, 1315, null, "ramda/src/inc.js");
__d(/* ramda/src/indexBy.js */function(global, require, module, exports) {var reduceBy = require(1254        ); // 1254 = ./reduceBy

module.exports = reduceBy(function (acc, elem) {
  return elem;
}, null);
}, 1316, null, "ramda/src/indexBy.js");
__d(/* ramda/src/indexOf.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2
var _indexOf = require(1234                 ); // 1234 = ./internal/_indexOf
var _isArray = require(1160                 ); // 1160 = ./internal/_isArray

module.exports = _curry2(function indexOf(target, xs) {
  return typeof xs.indexOf === 'function' && !_isArray(xs) ? xs.indexOf(target) : _indexOf(xs, target, 0);
});
}, 1317, null, "ramda/src/indexOf.js");
__d(/* ramda/src/init.js */function(global, require, module, exports) {var slice = require(1224     ); // 1224 = ./slice

module.exports = slice(0, -1);
}, 1318, null, "ramda/src/init.js");
__d(/* ramda/src/innerJoin.js */function(global, require, module, exports) {var _containsWith = require(1261                      ); // 1261 = ./internal/_containsWith
var _curry3 = require(1157                ); // 1157 = ./internal/_curry3
var _filter = require(1245                ); // 1245 = ./internal/_filter

module.exports = _curry3(function innerJoin(pred, xs, ys) {
  return _filter(function (x) {
    return _containsWith(pred, x, ys);
  }, xs);
});
}, 1319, null, "ramda/src/innerJoin.js");
__d(/* ramda/src/insert.js */function(global, require, module, exports) {var _curry3 = require(1157                ); // 1157 = ./internal/_curry3

module.exports = _curry3(function insert(idx, elt, list) {
  idx = idx < list.length && idx >= 0 ? idx : list.length;
  var result = Array.prototype.slice.call(list, 0);
  result.splice(idx, 0, elt);
  return result;
});
}, 1320, null, "ramda/src/insert.js");
__d(/* ramda/src/insertAll.js */function(global, require, module, exports) {var _curry3 = require(1157                ); // 1157 = ./internal/_curry3

module.exports = _curry3(function insertAll(idx, elts, list) {
  idx = idx < list.length && idx >= 0 ? idx : list.length;
  return [].concat(Array.prototype.slice.call(list, 0, idx), elts, Array.prototype.slice.call(list, idx));
});
}, 1321, null, "ramda/src/insertAll.js");
__d(/* ramda/src/intersection.js */function(global, require, module, exports) {var _contains = require(1233                  ); // 1233 = ./internal/_contains
var _curry2 = require(1150                ); // 1150 = ./internal/_curry2
var _filter = require(1245                ); // 1245 = ./internal/_filter
var flip = require(1301    ); // 1301 = ./flip
var uniq = require(1323    ); // 1323 = ./uniq

module.exports = _curry2(function intersection(list1, list2) {
  var lookupList, filteredList;
  if (list1.length > list2.length) {
    lookupList = list1;
    filteredList = list2;
  } else {
    lookupList = list2;
    filteredList = list1;
  }
  return uniq(_filter(flip(_contains)(lookupList), filteredList));
});
}, 1322, null, "ramda/src/intersection.js");
__d(/* ramda/src/uniq.js */function(global, require, module, exports) {var identity = require(1312        ); // 1312 = ./identity
var uniqBy = require(1324      ); // 1324 = ./uniqBy

module.exports = uniqBy(identity);
}, 1323, null, "ramda/src/uniq.js");
__d(/* ramda/src/uniqBy.js */function(global, require, module, exports) {var _Set = require(1325             ); // 1325 = ./internal/_Set
var _curry2 = require(1150                ); // 1150 = ./internal/_curry2

module.exports = _curry2(function uniqBy(fn, list) {
  var set = new _Set();
  var result = [];
  var idx = 0;
  var appliedItem, item;

  while (idx < list.length) {
    item = list[idx];
    appliedItem = fn(item);
    if (set.add(appliedItem)) {
      result.push(item);
    }
    idx += 1;
  }
  return result;
});
}, 1324, null, "ramda/src/uniqBy.js");
__d(/* ramda/src/internal/_Set.js */function(global, require, module, exports) {var _contains = require(1233         ); // 1233 = ./_contains

module.exports = function () {
  function _Set() {
    this._nativeSet = typeof Set === 'function' ? new Set() : null;
    this._items = {};
  }

  _Set.prototype.add = function (item) {
    return !hasOrAdd(item, true, this);
  };

  _Set.prototype.has = function (item) {
    return hasOrAdd(item, false, this);
  };

  function hasOrAdd(item, shouldAdd, set) {
    var type = typeof item;
    var prevSize, newSize;
    switch (type) {
      case 'string':
      case 'number':
        if (item === 0 && 1 / item === -Infinity) {
          if (set._items['-0']) {
            return true;
          } else {
            if (shouldAdd) {
              set._items['-0'] = true;
            }
            return false;
          }
        }

        if (set._nativeSet !== null) {
          if (shouldAdd) {
            prevSize = set._nativeSet.size;
            set._nativeSet.add(item);
            newSize = set._nativeSet.size;
            return newSize === prevSize;
          } else {
            return set._nativeSet.has(item);
          }
        } else {
          if (!(type in set._items)) {
            if (shouldAdd) {
              set._items[type] = {};
              set._items[type][item] = true;
            }
            return false;
          } else if (item in set._items[type]) {
            return true;
          } else {
            if (shouldAdd) {
              set._items[type][item] = true;
            }
            return false;
          }
        }

      case 'boolean':
        if (type in set._items) {
          var bIdx = item ? 1 : 0;
          if (set._items[type][bIdx]) {
            return true;
          } else {
            if (shouldAdd) {
              set._items[type][bIdx] = true;
            }
            return false;
          }
        } else {
          if (shouldAdd) {
            set._items[type] = item ? [false, true] : [true, false];
          }
          return false;
        }

      case 'function':
        if (set._nativeSet !== null) {
          if (shouldAdd) {
            prevSize = set._nativeSet.size;
            set._nativeSet.add(item);
            newSize = set._nativeSet.size;
            return newSize === prevSize;
          } else {
            return set._nativeSet.has(item);
          }
        } else {
          if (!(type in set._items)) {
            if (shouldAdd) {
              set._items[type] = [item];
            }
            return false;
          }
          if (!_contains(item, set._items[type])) {
            if (shouldAdd) {
              set._items[type].push(item);
            }
            return false;
          }
          return true;
        }

      case 'undefined':
        if (set._items[type]) {
          return true;
        } else {
          if (shouldAdd) {
            set._items[type] = true;
          }
          return false;
        }

      case 'object':
        if (item === null) {
          if (!set._items['null']) {
            if (shouldAdd) {
              set._items['null'] = true;
            }
            return false;
          }
          return true;
        }

      default:
        type = Object.prototype.toString.call(item);
        if (!(type in set._items)) {
          if (shouldAdd) {
            set._items[type] = [item];
          }
          return false;
        }

        if (!_contains(item, set._items[type])) {
          if (shouldAdd) {
            set._items[type].push(item);
          }
          return false;
        }
        return true;
    }
  }
  return _Set;
}();
}, 1325, null, "ramda/src/internal/_Set.js");
__d(/* ramda/src/intersectionWith.js */function(global, require, module, exports) {var _containsWith = require(1261                      ); // 1261 = ./internal/_containsWith
var _curry3 = require(1157                ); // 1157 = ./internal/_curry3
var uniqWith = require(1327        ); // 1327 = ./uniqWith

module.exports = _curry3(function intersectionWith(pred, list1, list2) {
  var lookupList, filteredList;
  if (list1.length > list2.length) {
    lookupList = list1;
    filteredList = list2;
  } else {
    lookupList = list2;
    filteredList = list1;
  }
  var results = [];
  var idx = 0;
  while (idx < filteredList.length) {
    if (_containsWith(pred, filteredList[idx], lookupList)) {
      results[results.length] = filteredList[idx];
    }
    idx += 1;
  }
  return uniqWith(pred, results);
});
}, 1326, null, "ramda/src/intersectionWith.js");
__d(/* ramda/src/uniqWith.js */function(global, require, module, exports) {var _containsWith = require(1261                      ); // 1261 = ./internal/_containsWith
var _curry2 = require(1150                ); // 1150 = ./internal/_curry2

module.exports = _curry2(function uniqWith(pred, list) {
  var idx = 0;
  var len = list.length;
  var result = [];
  var item;
  while (idx < len) {
    item = list[idx];
    if (!_containsWith(pred, item, result)) {
      result[result.length] = item;
    }
    idx += 1;
  }
  return result;
});
}, 1327, null, "ramda/src/uniqWith.js");
__d(/* ramda/src/intersperse.js */function(global, require, module, exports) {var _checkForMethod = require(1223                        ); // 1223 = ./internal/_checkForMethod
var _curry2 = require(1150                ); // 1150 = ./internal/_curry2

module.exports = _curry2(_checkForMethod('intersperse', function intersperse(separator, list) {
  var out = [];
  var idx = 0;
  var length = list.length;
  while (idx < length) {
    if (idx === length - 1) {
      out.push(list[idx]);
    } else {
      out.push(list[idx], separator);
    }
    idx += 1;
  }
  return out;
}));
}, 1328, null, "ramda/src/intersperse.js");
__d(/* ramda/src/into.js */function(global, require, module, exports) {var _clone = require(1213               ); // 1213 = ./internal/_clone
var _curry3 = require(1157                ); // 1157 = ./internal/_curry3
var _isTransformer = require(1161                       ); // 1161 = ./internal/_isTransformer
var _reduce = require(1170                ); // 1170 = ./internal/_reduce
var _stepCat = require(1330                 ); // 1330 = ./internal/_stepCat

module.exports = _curry3(function into(acc, xf, list) {
  return _isTransformer(acc) ? _reduce(xf(acc), acc['@@transducer/init'](), list) : _reduce(xf(_stepCat(acc)), _clone(acc, [], [], false), list);
});
}, 1329, null, "ramda/src/into.js");
__d(/* ramda/src/internal/_stepCat.js */function(global, require, module, exports) {var _assign = require(1331       ); // 1331 = ./_assign
var _identity = require(1313         ); // 1313 = ./_identity
var _isArrayLike = require(1171            ); // 1171 = ./_isArrayLike
var _isTransformer = require(1161              ); // 1161 = ./_isTransformer
var objOf = require(1333      ); // 1333 = ../objOf

module.exports = function () {
  var _stepCatArray = {
    '@@transducer/init': Array,
    '@@transducer/step': function transducerStep(xs, x) {
      xs.push(x);
      return xs;
    },
    '@@transducer/result': _identity
  };
  var _stepCatString = {
    '@@transducer/init': String,
    '@@transducer/step': function transducerStep(a, b) {
      return a + b;
    },
    '@@transducer/result': _identity
  };
  var _stepCatObject = {
    '@@transducer/init': Object,
    '@@transducer/step': function transducerStep(result, input) {
      return _assign(result, _isArrayLike(input) ? objOf(input[0], input[1]) : input);
    },
    '@@transducer/result': _identity
  };

  return function _stepCat(obj) {
    if (_isTransformer(obj)) {
      return obj;
    }
    if (_isArrayLike(obj)) {
      return _stepCatArray;
    }
    if (typeof obj === 'string') {
      return _stepCatString;
    }
    if (typeof obj === 'object') {
      return _stepCatObject;
    }
    throw new Error('Cannot create transformer for ' + obj);
  };
}();
}, 1330, null, "ramda/src/internal/_stepCat.js");
__d(/* ramda/src/internal/_assign.js */function(global, require, module, exports) {var _objectAssign = require(1332             ); // 1332 = ./_objectAssign

module.exports = typeof Object.assign === 'function' ? Object.assign : _objectAssign;
}, 1331, null, "ramda/src/internal/_assign.js");
__d(/* ramda/src/internal/_objectAssign.js */function(global, require, module, exports) {var _has = require(1177    ); // 1177 = ./_has

module.exports = function _objectAssign(target) {
  if (target == null) {
    throw new TypeError('Cannot convert undefined or null to object');
  }

  var output = Object(target);
  var idx = 1;
  var length = arguments.length;
  while (idx < length) {
    var source = arguments[idx];
    if (source != null) {
      for (var nextKey in source) {
        if (_has(nextKey, source)) {
          output[nextKey] = source[nextKey];
        }
      }
    }
    idx += 1;
  }
  return output;
};
}, 1332, null, "ramda/src/internal/_objectAssign.js");
__d(/* ramda/src/objOf.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2

module.exports = _curry2(function objOf(key, val) {
  var obj = {};
  obj[key] = val;
  return obj;
});
}, 1333, null, "ramda/src/objOf.js");
__d(/* ramda/src/invert.js */function(global, require, module, exports) {var _curry1 = require(1145                ); // 1145 = ./internal/_curry1
var _has = require(1177             ); // 1177 = ./internal/_has
var keys = require(1176    ); // 1176 = ./keys

module.exports = _curry1(function invert(obj) {
  var props = keys(obj);
  var len = props.length;
  var idx = 0;
  var out = {};

  while (idx < len) {
    var key = props[idx];
    var val = obj[key];
    var list = _has(val, out) ? out[val] : out[val] = [];
    list[list.length] = key;
    idx += 1;
  }
  return out;
});
}, 1334, null, "ramda/src/invert.js");
__d(/* ramda/src/invertObj.js */function(global, require, module, exports) {var _curry1 = require(1145                ); // 1145 = ./internal/_curry1
var keys = require(1176    ); // 1176 = ./keys

module.exports = _curry1(function invertObj(obj) {
  var props = keys(obj);
  var len = props.length;
  var idx = 0;
  var out = {};

  while (idx < len) {
    var key = props[idx];
    out[obj[key]] = key;
    idx += 1;
  }
  return out;
});
}, 1335, null, "ramda/src/invertObj.js");
__d(/* ramda/src/invoker.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2
var _isFunction = require(1201                    ); // 1201 = ./internal/_isFunction
var curryN = require(1153      ); // 1153 = ./curryN
var toString = require(1231        ); // 1231 = ./toString

module.exports = _curry2(function invoker(arity, method) {
  return curryN(arity + 1, function () {
    var target = arguments[arity];
    if (target != null && _isFunction(target[method])) {
      return target[method].apply(target, Array.prototype.slice.call(arguments, 0, arity));
    }
    throw new TypeError(toString(target) + ' does not have a method named "' + method + '"');
  });
});
}, 1336, null, "ramda/src/invoker.js");
__d(/* ramda/src/is.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2

module.exports = _curry2(function is(Ctor, val) {
  return val != null && val.constructor === Ctor || val instanceof Ctor;
});
}, 1337, null, "ramda/src/is.js");
__d(/* ramda/src/isEmpty.js */function(global, require, module, exports) {var _curry1 = require(1145                ); // 1145 = ./internal/_curry1
var empty = require(1286     ); // 1286 = ./empty
var equals = require(1235      ); // 1235 = ./equals

module.exports = _curry1(function isEmpty(x) {
  return x != null && equals(x, empty(x));
});
}, 1338, null, "ramda/src/isEmpty.js");
__d(/* ramda/src/join.js */function(global, require, module, exports) {var invoker = require(1336       ); // 1336 = ./invoker

module.exports = invoker(1, 'join');
}, 1339, null, "ramda/src/join.js");
__d(/* ramda/src/juxt.js */function(global, require, module, exports) {var _curry1 = require(1145                ); // 1145 = ./internal/_curry1
var converge = require(1252        ); // 1252 = ./converge

module.exports = _curry1(function juxt(fns) {
  return converge(function () {
    return Array.prototype.slice.call(arguments, 0);
  }, fns);
});
}, 1340, null, "ramda/src/juxt.js");
__d(/* ramda/src/keysIn.js */function(global, require, module, exports) {var _curry1 = require(1145                ); // 1145 = ./internal/_curry1

module.exports = _curry1(function keysIn(obj) {
  var prop;
  var ks = [];
  for (prop in obj) {
    ks[ks.length] = prop;
  }
  return ks;
});
}, 1341, null, "ramda/src/keysIn.js");
__d(/* ramda/src/lastIndexOf.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2
var _isArray = require(1160                 ); // 1160 = ./internal/_isArray
var equals = require(1235      ); // 1235 = ./equals

module.exports = _curry2(function lastIndexOf(target, xs) {
  if (typeof xs.lastIndexOf === 'function' && !_isArray(xs)) {
    return xs.lastIndexOf(target);
  } else {
    var idx = xs.length - 1;
    while (idx >= 0) {
      if (equals(xs[idx], target)) {
        return idx;
      }
      idx -= 1;
    }
    return -1;
  }
});
}, 1342, null, "ramda/src/lastIndexOf.js");
__d(/* ramda/src/length.js */function(global, require, module, exports) {var _curry1 = require(1145                ); // 1145 = ./internal/_curry1
var _isNumber = require(1344                  ); // 1344 = ./internal/_isNumber

module.exports = _curry1(function length(list) {
  return list != null && _isNumber(list.length) ? list.length : NaN;
});
}, 1343, null, "ramda/src/length.js");
__d(/* ramda/src/internal/_isNumber.js */function(global, require, module, exports) {module.exports = function _isNumber(x) {
  return Object.prototype.toString.call(x) === '[object Number]';
};
}, 1344, null, "ramda/src/internal/_isNumber.js");
__d(/* ramda/src/lens.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2
var map = require(1168   ); // 1168 = ./map

module.exports = _curry2(function lens(getter, setter) {
  return function (toFunctorFn) {
    return function (target) {
      return map(function (focus) {
        return setter(focus, target);
      }, toFunctorFn(getter(target)));
    };
  };
});
}, 1345, null, "ramda/src/lens.js");
__d(/* ramda/src/lensIndex.js */function(global, require, module, exports) {var _curry1 = require(1145                ); // 1145 = ./internal/_curry1
var lens = require(1345    ); // 1345 = ./lens
var nth = require(1281   ); // 1281 = ./nth
var update = require(1265      ); // 1265 = ./update

module.exports = _curry1(function lensIndex(n) {
  return lens(nth(n), update(n));
});
}, 1346, null, "ramda/src/lensIndex.js");
__d(/* ramda/src/lensPath.js */function(global, require, module, exports) {var _curry1 = require(1145                ); // 1145 = ./internal/_curry1
var assocPath = require(1195         ); // 1195 = ./assocPath
var lens = require(1345    ); // 1345 = ./lens
var path = require(1348    ); // 1348 = ./path

module.exports = _curry1(function lensPath(p) {
  return lens(path(p), assocPath(p));
});
}, 1347, null, "ramda/src/lensPath.js");
__d(/* ramda/src/path.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2

module.exports = _curry2(function path(paths, obj) {
  var val = obj;
  var idx = 0;
  while (idx < paths.length) {
    if (val == null) {
      return;
    }
    val = val[paths[idx]];
    idx += 1;
  }
  return val;
});
}, 1348, null, "ramda/src/path.js");
__d(/* ramda/src/lensProp.js */function(global, require, module, exports) {var _curry1 = require(1145                ); // 1145 = ./internal/_curry1
var assoc = require(1194     ); // 1194 = ./assoc
var lens = require(1345    ); // 1345 = ./lens
var prop = require(1179    ); // 1179 = ./prop

module.exports = _curry1(function lensProp(k) {
  return lens(prop(k), assoc(k));
});
}, 1349, null, "ramda/src/lensProp.js");
__d(/* ramda/src/lt.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2

module.exports = _curry2(function lt(a, b) {
  return a < b;
});
}, 1350, null, "ramda/src/lt.js");
__d(/* ramda/src/lte.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2

module.exports = _curry2(function lte(a, b) {
  return a <= b;
});
}, 1351, null, "ramda/src/lte.js");
__d(/* ramda/src/mapAccum.js */function(global, require, module, exports) {var _curry3 = require(1157                ); // 1157 = ./internal/_curry3

module.exports = _curry3(function mapAccum(fn, acc, list) {
  var idx = 0;
  var len = list.length;
  var result = [];
  var tuple = [acc];
  while (idx < len) {
    tuple = fn(tuple[0], list[idx]);
    result[idx] = tuple[1];
    idx += 1;
  }
  return [tuple[0], result];
});
}, 1352, null, "ramda/src/mapAccum.js");
__d(/* ramda/src/mapAccumRight.js */function(global, require, module, exports) {var _curry3 = require(1157                ); // 1157 = ./internal/_curry3

module.exports = _curry3(function mapAccumRight(fn, acc, list) {
  var idx = list.length - 1;
  var result = [];
  var tuple = [acc];
  while (idx >= 0) {
    tuple = fn(list[idx], tuple[0]);
    result[idx] = tuple[1];
    idx -= 1;
  }
  return [result, tuple[0]];
});
}, 1353, null, "ramda/src/mapAccumRight.js");
__d(/* ramda/src/mapObjIndexed.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2
var _reduce = require(1170                ); // 1170 = ./internal/_reduce
var keys = require(1176    ); // 1176 = ./keys

module.exports = _curry2(function mapObjIndexed(fn, obj) {
  return _reduce(function (acc, key) {
    acc[key] = fn(obj[key], key, obj);
    return acc;
  }, {}, keys(obj));
});
}, 1354, null, "ramda/src/mapObjIndexed.js");
__d(/* ramda/src/match.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2

module.exports = _curry2(function match(rx, str) {
  return str.match(rx) || [];
});
}, 1355, null, "ramda/src/match.js");
__d(/* ramda/src/mathMod.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2
var _isInteger = require(1196                   ); // 1196 = ./internal/_isInteger

module.exports = _curry2(function mathMod(m, p) {
  if (!_isInteger(m)) {
    return NaN;
  }
  if (!_isInteger(p) || p < 1) {
    return NaN;
  }
  return (m % p + p) % p;
});
}, 1356, null, "ramda/src/mathMod.js");
__d(/* ramda/src/maxBy.js */function(global, require, module, exports) {var _curry3 = require(1157                ); // 1157 = ./internal/_curry3

module.exports = _curry3(function maxBy(f, a, b) {
  return f(b) > f(a) ? b : a;
});
}, 1357, null, "ramda/src/maxBy.js");
__d(/* ramda/src/mean.js */function(global, require, module, exports) {var _curry1 = require(1145                ); // 1145 = ./internal/_curry1
var sum = require(1359   ); // 1359 = ./sum

module.exports = _curry1(function mean(list) {
  return sum(list) / list.length;
});
}, 1358, null, "ramda/src/mean.js");
__d(/* ramda/src/sum.js */function(global, require, module, exports) {var add = require(1149   ); // 1149 = ./add
var reduce = require(1180      ); // 1180 = ./reduce

module.exports = reduce(add, 0);
}, 1359, null, "ramda/src/sum.js");
__d(/* ramda/src/median.js */function(global, require, module, exports) {var _curry1 = require(1145                ); // 1145 = ./internal/_curry1
var mean = require(1358    ); // 1358 = ./mean

module.exports = _curry1(function median(list) {
  var len = list.length;
  if (len === 0) {
    return NaN;
  }
  var width = 2 - len % 2;
  var idx = (len - width) / 2;
  return mean(Array.prototype.slice.call(list, 0).sort(function (a, b) {
    return a < b ? -1 : a > b ? 1 : 0;
  }).slice(idx, idx + width));
});
}, 1360, null, "ramda/src/median.js");
__d(/* ramda/src/memoize.js */function(global, require, module, exports) {var memoizeWith = require(1362           ); // 1362 = ./memoizeWith
var toString = require(1231        ); // 1231 = ./toString

module.exports = memoizeWith(function () {
  return toString(arguments);
});
}, 1361, null, "ramda/src/memoize.js");
__d(/* ramda/src/memoizeWith.js */function(global, require, module, exports) {var _arity = require(1154               ); // 1154 = ./internal/_arity
var _curry2 = require(1150                ); // 1150 = ./internal/_curry2
var _has = require(1177             ); // 1177 = ./internal/_has

module.exports = _curry2(function memoizeWith(mFn, fn) {
  var cache = {};
  return _arity(fn.length, function () {
    var key = mFn.apply(this, arguments);
    if (!_has(key, cache)) {
      cache[key] = fn.apply(this, arguments);
    }
    return cache[key];
  });
});
}, 1362, null, "ramda/src/memoizeWith.js");
__d(/* ramda/src/merge.js */function(global, require, module, exports) {var _assign = require(1331                ); // 1331 = ./internal/_assign
var _curry2 = require(1150                ); // 1150 = ./internal/_curry2

module.exports = _curry2(function merge(l, r) {
  return _assign({}, l, r);
});
}, 1363, null, "ramda/src/merge.js");
__d(/* ramda/src/mergeAll.js */function(global, require, module, exports) {var _assign = require(1331                ); // 1331 = ./internal/_assign
var _curry1 = require(1145                ); // 1145 = ./internal/_curry1

module.exports = _curry1(function mergeAll(list) {
  return _assign.apply(null, [{}].concat(list));
});
}, 1364, null, "ramda/src/mergeAll.js");
__d(/* ramda/src/mergeDeepLeft.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2
var mergeDeepWithKey = require(1366                ); // 1366 = ./mergeDeepWithKey

module.exports = _curry2(function mergeDeepLeft(lObj, rObj) {
  return mergeDeepWithKey(function (k, lVal, rVal) {
    return lVal;
  }, lObj, rObj);
});
}, 1365, null, "ramda/src/mergeDeepLeft.js");
__d(/* ramda/src/mergeDeepWithKey.js */function(global, require, module, exports) {var _curry3 = require(1157                ); // 1157 = ./internal/_curry3
var _isObject = require(1246                  ); // 1246 = ./internal/_isObject
var mergeWithKey = require(1367            ); // 1367 = ./mergeWithKey

module.exports = _curry3(function mergeDeepWithKey(fn, lObj, rObj) {
  return mergeWithKey(function (k, lVal, rVal) {
    if (_isObject(lVal) && _isObject(rVal)) {
      return mergeDeepWithKey(fn, lVal, rVal);
    } else {
      return fn(k, lVal, rVal);
    }
  }, lObj, rObj);
});
}, 1366, null, "ramda/src/mergeDeepWithKey.js");
__d(/* ramda/src/mergeWithKey.js */function(global, require, module, exports) {var _curry3 = require(1157                ); // 1157 = ./internal/_curry3
var _has = require(1177             ); // 1177 = ./internal/_has

module.exports = _curry3(function mergeWithKey(fn, l, r) {
  var result = {};
  var k;

  for (k in l) {
    if (_has(k, l)) {
      result[k] = _has(k, r) ? fn(k, l[k], r[k]) : l[k];
    }
  }

  for (k in r) {
    if (_has(k, r) && !_has(k, result)) {
      result[k] = r[k];
    }
  }

  return result;
});
}, 1367, null, "ramda/src/mergeWithKey.js");
__d(/* ramda/src/mergeDeepRight.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2
var mergeDeepWithKey = require(1366                ); // 1366 = ./mergeDeepWithKey

module.exports = _curry2(function mergeDeepRight(lObj, rObj) {
  return mergeDeepWithKey(function (k, lVal, rVal) {
    return rVal;
  }, lObj, rObj);
});
}, 1368, null, "ramda/src/mergeDeepRight.js");
__d(/* ramda/src/mergeDeepWith.js */function(global, require, module, exports) {var _curry3 = require(1157                ); // 1157 = ./internal/_curry3
var mergeDeepWithKey = require(1366                ); // 1366 = ./mergeDeepWithKey

module.exports = _curry3(function mergeDeepWith(fn, lObj, rObj) {
  return mergeDeepWithKey(function (k, lVal, rVal) {
    return fn(lVal, rVal);
  }, lObj, rObj);
});
}, 1369, null, "ramda/src/mergeDeepWith.js");
__d(/* ramda/src/mergeWith.js */function(global, require, module, exports) {var _curry3 = require(1157                ); // 1157 = ./internal/_curry3
var mergeWithKey = require(1367            ); // 1367 = ./mergeWithKey

module.exports = _curry3(function mergeWith(fn, l, r) {
  return mergeWithKey(function (_, _l, _r) {
    return fn(_l, _r);
  }, l, r);
});
}, 1370, null, "ramda/src/mergeWith.js");
__d(/* ramda/src/min.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2

module.exports = _curry2(function min(a, b) {
  return b < a ? b : a;
});
}, 1371, null, "ramda/src/min.js");
__d(/* ramda/src/minBy.js */function(global, require, module, exports) {var _curry3 = require(1157                ); // 1157 = ./internal/_curry3

module.exports = _curry3(function minBy(f, a, b) {
  return f(b) < f(a) ? b : a;
});
}, 1372, null, "ramda/src/minBy.js");
__d(/* ramda/src/modulo.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2

module.exports = _curry2(function modulo(a, b) {
  return a % b;
});
}, 1373, null, "ramda/src/modulo.js");
__d(/* ramda/src/multiply.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2

module.exports = _curry2(function multiply(a, b) {
  return a * b;
});
}, 1374, null, "ramda/src/multiply.js");
__d(/* ramda/src/negate.js */function(global, require, module, exports) {var _curry1 = require(1145                ); // 1145 = ./internal/_curry1

module.exports = _curry1(function negate(n) {
  return -n;
});
}, 1375, null, "ramda/src/negate.js");
__d(/* ramda/src/none.js */function(global, require, module, exports) {var _complement = require(1243                    ); // 1243 = ./internal/_complement
var _curry2 = require(1150                ); // 1150 = ./internal/_curry2
var _dispatchable = require(1159                      ); // 1159 = ./internal/_dispatchable
var _xany = require(1183              ); // 1183 = ./internal/_xany
var any = require(1182   ); // 1182 = ./any

module.exports = _curry2(_complement(_dispatchable(['any'], _xany, any)));
}, 1376, null, "ramda/src/none.js");
__d(/* ramda/src/nthArg.js */function(global, require, module, exports) {var _curry1 = require(1145                ); // 1145 = ./internal/_curry1
var curryN = require(1153      ); // 1153 = ./curryN
var nth = require(1281   ); // 1281 = ./nth

module.exports = _curry1(function nthArg(n) {
  var arity = n < 0 ? 1 : n + 1;
  return curryN(arity, function () {
    return nth(n, arguments);
  });
});
}, 1377, null, "ramda/src/nthArg.js");
__d(/* ramda/src/o.js */function(global, require, module, exports) {var _curry3 = require(1157                ); // 1157 = ./internal/_curry3

module.exports = _curry3(function o(f, g, x) {
  return f(g(x));
});
}, 1378, null, "ramda/src/o.js");
__d(/* ramda/src/of.js */function(global, require, module, exports) {var _curry1 = require(1145                ); // 1145 = ./internal/_curry1
var _of = require(1380            ); // 1380 = ./internal/_of

module.exports = _curry1(_of);
}, 1379, null, "ramda/src/of.js");
__d(/* ramda/src/internal/_of.js */function(global, require, module, exports) {module.exports = function _of(x) {
  return [x];
};
}, 1380, null, "ramda/src/internal/_of.js");
__d(/* ramda/src/omit.js */function(global, require, module, exports) {var _contains = require(1233                  ); // 1233 = ./internal/_contains
var _curry2 = require(1150                ); // 1150 = ./internal/_curry2

module.exports = _curry2(function omit(names, obj) {
  var result = {};
  for (var prop in obj) {
    if (!_contains(prop, names)) {
      result[prop] = obj[prop];
    }
  }
  return result;
});
}, 1381, null, "ramda/src/omit.js");
__d(/* ramda/src/once.js */function(global, require, module, exports) {var _arity = require(1154               ); // 1154 = ./internal/_arity
var _curry1 = require(1145                ); // 1145 = ./internal/_curry1

module.exports = _curry1(function once(fn) {
  var called = false;
  var result;
  return _arity(fn.length, function () {
    if (called) {
      return result;
    }
    called = true;
    result = fn.apply(this, arguments);
    return result;
  });
});
}, 1382, null, "ramda/src/once.js");
__d(/* ramda/src/over.js */function(global, require, module, exports) {var _curry3 = require(1157                ); // 1157 = ./internal/_curry3

module.exports = function () {
  var Identity = function Identity(x) {
    return { value: x, map: function map(f) {
        return Identity(f(x));
      } };
  };

  return _curry3(function over(lens, f, x) {
    return lens(function (y) {
      return Identity(f(y));
    })(x).value;
  });
}();
}, 1383, null, "ramda/src/over.js");
__d(/* ramda/src/pair.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2

module.exports = _curry2(function pair(fst, snd) {
  return [fst, snd];
});
}, 1384, null, "ramda/src/pair.js");
__d(/* ramda/src/partial.js */function(global, require, module, exports) {var _concat = require(1152                ); // 1152 = ./internal/_concat
var _createPartialApplicator = require(1386                                 ); // 1386 = ./internal/_createPartialApplicator

module.exports = _createPartialApplicator(_concat);
}, 1385, null, "ramda/src/partial.js");
__d(/* ramda/src/internal/_createPartialApplicator.js */function(global, require, module, exports) {var _arity = require(1154      ); // 1154 = ./_arity
var _curry2 = require(1150       ); // 1150 = ./_curry2

module.exports = function _createPartialApplicator(concat) {
  return _curry2(function (fn, args) {
    return _arity(Math.max(0, fn.length - args.length), function () {
      return fn.apply(this, concat(args, arguments));
    });
  });
};
}, 1386, null, "ramda/src/internal/_createPartialApplicator.js");
__d(/* ramda/src/partialRight.js */function(global, require, module, exports) {var _concat = require(1152                ); // 1152 = ./internal/_concat
var _createPartialApplicator = require(1386                                 ); // 1386 = ./internal/_createPartialApplicator
var flip = require(1301    ); // 1301 = ./flip

module.exports = _createPartialApplicator(flip(_concat));
}, 1387, null, "ramda/src/partialRight.js");
__d(/* ramda/src/partition.js */function(global, require, module, exports) {var filter = require(1244      ); // 1244 = ./filter
var juxt = require(1340    ); // 1340 = ./juxt
var reject = require(1242      ); // 1242 = ./reject

module.exports = juxt([filter, reject]);
}, 1388, null, "ramda/src/partition.js");
__d(/* ramda/src/pathEq.js */function(global, require, module, exports) {var _curry3 = require(1157                ); // 1157 = ./internal/_curry3
var equals = require(1235      ); // 1235 = ./equals
var path = require(1348    ); // 1348 = ./path

module.exports = _curry3(function pathEq(_path, val, obj) {
  return equals(path(_path, obj), val);
});
}, 1389, null, "ramda/src/pathEq.js");
__d(/* ramda/src/pathOr.js */function(global, require, module, exports) {var _curry3 = require(1157                ); // 1157 = ./internal/_curry3
var defaultTo = require(1257         ); // 1257 = ./defaultTo
var path = require(1348    ); // 1348 = ./path

module.exports = _curry3(function pathOr(d, p, obj) {
  return defaultTo(d, path(p, obj));
});
}, 1390, null, "ramda/src/pathOr.js");
__d(/* ramda/src/pathSatisfies.js */function(global, require, module, exports) {var _curry3 = require(1157                ); // 1157 = ./internal/_curry3
var path = require(1348    ); // 1348 = ./path

module.exports = _curry3(function pathSatisfies(pred, propPath, obj) {
  return propPath.length > 0 && pred(path(propPath, obj));
});
}, 1391, null, "ramda/src/pathSatisfies.js");
__d(/* ramda/src/pick.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2

module.exports = _curry2(function pick(names, obj) {
  var result = {};
  var idx = 0;
  while (idx < names.length) {
    if (names[idx] in obj) {
      result[names[idx]] = obj[names[idx]];
    }
    idx += 1;
  }
  return result;
});
}, 1392, null, "ramda/src/pick.js");
__d(/* ramda/src/pickAll.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2

module.exports = _curry2(function pickAll(names, obj) {
  var result = {};
  var idx = 0;
  var len = names.length;
  while (idx < len) {
    var name = names[idx];
    result[name] = obj[name];
    idx += 1;
  }
  return result;
});
}, 1393, null, "ramda/src/pickAll.js");
__d(/* ramda/src/pickBy.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2

module.exports = _curry2(function pickBy(test, obj) {
  var result = {};
  for (var prop in obj) {
    if (test(obj[prop], prop, obj)) {
      result[prop] = obj[prop];
    }
  }
  return result;
});
}, 1394, null, "ramda/src/pickBy.js");
__d(/* ramda/src/pipeK.js */function(global, require, module, exports) {var composeK = require(1226        ); // 1226 = ./composeK
var reverse = require(1225       ); // 1225 = ./reverse

module.exports = function pipeK() {
  if (arguments.length === 0) {
    throw new Error('pipeK requires at least one argument');
  }
  return composeK.apply(this, reverse(arguments));
};
}, 1395, null, "ramda/src/pipeK.js");
__d(/* ramda/src/prepend.js */function(global, require, module, exports) {var _concat = require(1152                ); // 1152 = ./internal/_concat
var _curry2 = require(1150                ); // 1150 = ./internal/_curry2

module.exports = _curry2(function prepend(el, list) {
  return _concat([el], list);
});
}, 1396, null, "ramda/src/prepend.js");
__d(/* ramda/src/product.js */function(global, require, module, exports) {var multiply = require(1374        ); // 1374 = ./multiply
var reduce = require(1180      ); // 1180 = ./reduce

module.exports = reduce(multiply, 1);
}, 1397, null, "ramda/src/product.js");
__d(/* ramda/src/project.js */function(global, require, module, exports) {var _map = require(1169             ); // 1169 = ./internal/_map
var identity = require(1312        ); // 1312 = ./identity
var pickAll = require(1393       ); // 1393 = ./pickAll
var useWith = require(1399       ); // 1399 = ./useWith

module.exports = useWith(_map, [pickAll, identity]);
}, 1398, null, "ramda/src/project.js");
__d(/* ramda/src/useWith.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2
var curryN = require(1153      ); // 1153 = ./curryN

module.exports = _curry2(function useWith(fn, transformers) {
  return curryN(transformers.length, function () {
    var args = [];
    var idx = 0;
    while (idx < transformers.length) {
      args.push(transformers[idx].call(this, arguments[idx]));
      idx += 1;
    }
    return fn.apply(this, args.concat(Array.prototype.slice.call(arguments, transformers.length)));
  });
});
}, 1399, null, "ramda/src/useWith.js");
__d(/* ramda/src/propEq.js */function(global, require, module, exports) {var _curry3 = require(1157                ); // 1157 = ./internal/_curry3
var equals = require(1235      ); // 1235 = ./equals

module.exports = _curry3(function propEq(name, val, obj) {
  return equals(val, obj[name]);
});
}, 1400, null, "ramda/src/propEq.js");
__d(/* ramda/src/propIs.js */function(global, require, module, exports) {var _curry3 = require(1157                ); // 1157 = ./internal/_curry3
var is = require(1337  ); // 1337 = ./is

module.exports = _curry3(function propIs(type, name, obj) {
  return is(type, obj[name]);
});
}, 1401, null, "ramda/src/propIs.js");
__d(/* ramda/src/propOr.js */function(global, require, module, exports) {var _curry3 = require(1157                ); // 1157 = ./internal/_curry3
var _has = require(1177             ); // 1177 = ./internal/_has

module.exports = _curry3(function propOr(val, p, obj) {
  return obj != null && _has(p, obj) ? obj[p] : val;
});
}, 1402, null, "ramda/src/propOr.js");
__d(/* ramda/src/propSatisfies.js */function(global, require, module, exports) {var _curry3 = require(1157                ); // 1157 = ./internal/_curry3

module.exports = _curry3(function propSatisfies(pred, name, obj) {
  return pred(obj[name]);
});
}, 1403, null, "ramda/src/propSatisfies.js");
__d(/* ramda/src/props.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2

module.exports = _curry2(function props(ps, obj) {
  var len = ps.length;
  var out = [];
  var idx = 0;

  while (idx < len) {
    out[idx] = obj[ps[idx]];
    idx += 1;
  }

  return out;
});
}, 1404, null, "ramda/src/props.js");
__d(/* ramda/src/range.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2
var _isNumber = require(1344                  ); // 1344 = ./internal/_isNumber

module.exports = _curry2(function range(from, to) {
  if (!(_isNumber(from) && _isNumber(to))) {
    throw new TypeError('Both arguments to range must be numbers');
  }
  var result = [];
  var n = from;
  while (n < to) {
    result.push(n);
    n += 1;
  }
  return result;
});
}, 1405, null, "ramda/src/range.js");
__d(/* ramda/src/reduceRight.js */function(global, require, module, exports) {var _curry3 = require(1157                ); // 1157 = ./internal/_curry3

module.exports = _curry3(function reduceRight(fn, acc, list) {
  var idx = list.length - 1;
  while (idx >= 0) {
    acc = fn(list[idx], acc);
    idx -= 1;
  }
  return acc;
});
}, 1406, null, "ramda/src/reduceRight.js");
__d(/* ramda/src/reduceWhile.js */function(global, require, module, exports) {var _curryN = require(1155                ); // 1155 = ./internal/_curryN
var _reduce = require(1170                ); // 1170 = ./internal/_reduce
var _reduced = require(1163                 ); // 1163 = ./internal/_reduced

module.exports = _curryN(4, [], function _reduceWhile(pred, fn, a, list) {
  return _reduce(function (acc, x) {
    return pred(acc, x) ? fn(acc, x) : _reduced(acc);
  }, a, list);
});
}, 1407, null, "ramda/src/reduceWhile.js");
__d(/* ramda/src/reduced.js */function(global, require, module, exports) {var _curry1 = require(1145                ); // 1145 = ./internal/_curry1
var _reduced = require(1163                 ); // 1163 = ./internal/_reduced

module.exports = _curry1(_reduced);
}, 1408, null, "ramda/src/reduced.js");
__d(/* ramda/src/repeat.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2
var always = require(1144      ); // 1144 = ./always
var times = require(1410     ); // 1410 = ./times

module.exports = _curry2(function repeat(value, n) {
  return times(always(value), n);
});
}, 1409, null, "ramda/src/repeat.js");
__d(/* ramda/src/times.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2

module.exports = _curry2(function times(fn, n) {
  var len = Number(n);
  var idx = 0;
  var list;

  if (len < 0 || isNaN(len)) {
    throw new RangeError('n must be a non-negative number');
  }
  list = new Array(len);
  while (idx < len) {
    list[idx] = fn(idx);
    idx += 1;
  }
  return list;
});
}, 1410, null, "ramda/src/times.js");
__d(/* ramda/src/replace.js */function(global, require, module, exports) {var _curry3 = require(1157                ); // 1157 = ./internal/_curry3

module.exports = _curry3(function replace(regex, replacement, str) {
  return str.replace(regex, replacement);
});
}, 1411, null, "ramda/src/replace.js");
__d(/* ramda/src/scan.js */function(global, require, module, exports) {var _curry3 = require(1157                ); // 1157 = ./internal/_curry3

module.exports = _curry3(function scan(fn, acc, list) {
  var idx = 0;
  var len = list.length;
  var result = [acc];
  while (idx < len) {
    acc = fn(acc, list[idx]);
    result[idx + 1] = acc;
    idx += 1;
  }
  return result;
});
}, 1412, null, "ramda/src/scan.js");
__d(/* ramda/src/sequence.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2
var ap = require(1185  ); // 1185 = ./ap
var map = require(1168   ); // 1168 = ./map
var prepend = require(1396       ); // 1396 = ./prepend
var reduceRight = require(1406           ); // 1406 = ./reduceRight

module.exports = _curry2(function sequence(of, traversable) {
  return typeof traversable.sequence === 'function' ? traversable.sequence(of) : reduceRight(function (x, acc) {
    return ap(map(prepend, x), acc);
  }, of([]), traversable);
});
}, 1413, null, "ramda/src/sequence.js");
__d(/* ramda/src/set.js */function(global, require, module, exports) {var _curry3 = require(1157                ); // 1157 = ./internal/_curry3
var always = require(1144      ); // 1144 = ./always
var over = require(1383    ); // 1383 = ./over

module.exports = _curry3(function set(lens, v, x) {
  return over(lens, always(v), x);
});
}, 1414, null, "ramda/src/set.js");
__d(/* ramda/src/sort.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2

module.exports = _curry2(function sort(comparator, list) {
  return Array.prototype.slice.call(list, 0).sort(comparator);
});
}, 1415, null, "ramda/src/sort.js");
__d(/* ramda/src/sortBy.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2

module.exports = _curry2(function sortBy(fn, list) {
  return Array.prototype.slice.call(list, 0).sort(function (a, b) {
    var aa = fn(a);
    var bb = fn(b);
    return aa < bb ? -1 : aa > bb ? 1 : 0;
  });
});
}, 1416, null, "ramda/src/sortBy.js");
__d(/* ramda/src/sortWith.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2

module.exports = _curry2(function sortWith(fns, list) {
  return Array.prototype.slice.call(list, 0).sort(function (a, b) {
    var result = 0;
    var i = 0;
    while (result === 0 && i < fns.length) {
      result = fns[i](a, b);
      i += 1;
    }
    return result;
  });
});
}, 1417, null, "ramda/src/sortWith.js");
__d(/* ramda/src/split.js */function(global, require, module, exports) {var invoker = require(1336       ); // 1336 = ./invoker

module.exports = invoker(1, 'split');
}, 1418, null, "ramda/src/split.js");
__d(/* ramda/src/splitAt.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2
var length = require(1343      ); // 1343 = ./length
var slice = require(1224     ); // 1224 = ./slice

module.exports = _curry2(function splitAt(index, array) {
  return [slice(0, index, array), slice(index, length(array), array)];
});
}, 1419, null, "ramda/src/splitAt.js");
__d(/* ramda/src/splitEvery.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2
var slice = require(1224     ); // 1224 = ./slice

module.exports = _curry2(function splitEvery(n, list) {
  if (n <= 0) {
    throw new Error('First argument to splitEvery must be a positive integer');
  }
  var result = [];
  var idx = 0;
  while (idx < list.length) {
    result.push(slice(idx, idx += n, list));
  }
  return result;
});
}, 1420, null, "ramda/src/splitEvery.js");
__d(/* ramda/src/splitWhen.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2

module.exports = _curry2(function splitWhen(pred, list) {
  var idx = 0;
  var len = list.length;
  var prefix = [];

  while (idx < len && !pred(list[idx])) {
    prefix.push(list[idx]);
    idx += 1;
  }

  return [prefix, Array.prototype.slice.call(list, idx)];
});
}, 1421, null, "ramda/src/splitWhen.js");
__d(/* ramda/src/startsWith.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2
var equals = require(1235      ); // 1235 = ./equals
var take = require(1271    ); // 1271 = ./take

module.exports = _curry2(function (prefix, list) {
  return equals(take(prefix.length, list), prefix);
});
}, 1422, null, "ramda/src/startsWith.js");
__d(/* ramda/src/subtract.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2

module.exports = _curry2(function subtract(a, b) {
  return Number(a) - Number(b);
});
}, 1423, null, "ramda/src/subtract.js");
__d(/* ramda/src/symmetricDifference.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2
var concat = require(1230      ); // 1230 = ./concat
var difference = require(1259          ); // 1259 = ./difference

module.exports = _curry2(function symmetricDifference(list1, list2) {
  return concat(difference(list1, list2), difference(list2, list1));
});
}, 1424, null, "ramda/src/symmetricDifference.js");
__d(/* ramda/src/symmetricDifferenceWith.js */function(global, require, module, exports) {var _curry3 = require(1157                ); // 1157 = ./internal/_curry3
var concat = require(1230      ); // 1230 = ./concat
var differenceWith = require(1260              ); // 1260 = ./differenceWith

module.exports = _curry3(function symmetricDifferenceWith(pred, list1, list2) {
  return concat(differenceWith(pred, list1, list2), differenceWith(pred, list2, list1));
});
}, 1425, null, "ramda/src/symmetricDifferenceWith.js");
__d(/* ramda/src/takeLastWhile.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2

module.exports = _curry2(function takeLastWhile(fn, list) {
  var idx = list.length - 1;
  while (idx >= 0 && fn(list[idx])) {
    idx -= 1;
  }
  return Array.prototype.slice.call(list, idx + 1);
});
}, 1426, null, "ramda/src/takeLastWhile.js");
__d(/* ramda/src/takeWhile.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2
var _dispatchable = require(1159                      ); // 1159 = ./internal/_dispatchable
var _xtakeWhile = require(1428                    ); // 1428 = ./internal/_xtakeWhile

module.exports = _curry2(_dispatchable(['takeWhile'], _xtakeWhile, function takeWhile(fn, list) {
  var idx = 0;
  var len = list.length;
  while (idx < len && fn(list[idx])) {
    idx += 1;
  }
  return Array.prototype.slice.call(list, 0, idx);
}));
}, 1427, null, "ramda/src/takeWhile.js");
__d(/* ramda/src/internal/_xtakeWhile.js */function(global, require, module, exports) {var _curry2 = require(1150       ); // 1150 = ./_curry2
var _reduced = require(1163        ); // 1163 = ./_reduced
var _xfBase = require(1164       ); // 1164 = ./_xfBase

module.exports = function () {
  function XTakeWhile(f, xf) {
    this.xf = xf;
    this.f = f;
  }
  XTakeWhile.prototype['@@transducer/init'] = _xfBase.init;
  XTakeWhile.prototype['@@transducer/result'] = _xfBase.result;
  XTakeWhile.prototype['@@transducer/step'] = function (result, input) {
    return this.f(input) ? this.xf['@@transducer/step'](result, input) : _reduced(result);
  };

  return _curry2(function _xtakeWhile(f, xf) {
    return new XTakeWhile(f, xf);
  });
}();
}, 1428, null, "ramda/src/internal/_xtakeWhile.js");
__d(/* ramda/src/tap.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2

module.exports = _curry2(function tap(fn, x) {
  fn(x);
  return x;
});
}, 1429, null, "ramda/src/tap.js");
__d(/* ramda/src/test.js */function(global, require, module, exports) {var _cloneRegExp = require(1214                     ); // 1214 = ./internal/_cloneRegExp
var _curry2 = require(1150                ); // 1150 = ./internal/_curry2
var _isRegExp = require(1431                  ); // 1431 = ./internal/_isRegExp
var toString = require(1231        ); // 1231 = ./toString

module.exports = _curry2(function test(pattern, str) {
  if (!_isRegExp(pattern)) {
    throw new TypeError('‘test’ requires a value of type RegExp as its first argument; received ' + toString(pattern));
  }
  return _cloneRegExp(pattern).test(str);
});
}, 1430, null, "ramda/src/test.js");
__d(/* ramda/src/internal/_isRegExp.js */function(global, require, module, exports) {module.exports = function _isRegExp(x) {
  return Object.prototype.toString.call(x) === '[object RegExp]';
};
}, 1431, null, "ramda/src/internal/_isRegExp.js");
__d(/* ramda/src/toLower.js */function(global, require, module, exports) {var invoker = require(1336       ); // 1336 = ./invoker

module.exports = invoker(0, 'toLowerCase');
}, 1432, null, "ramda/src/toLower.js");
__d(/* ramda/src/toPairs.js */function(global, require, module, exports) {var _curry1 = require(1145                ); // 1145 = ./internal/_curry1
var _has = require(1177             ); // 1177 = ./internal/_has

module.exports = _curry1(function toPairs(obj) {
  var pairs = [];
  for (var prop in obj) {
    if (_has(prop, obj)) {
      pairs[pairs.length] = [prop, obj[prop]];
    }
  }
  return pairs;
});
}, 1433, null, "ramda/src/toPairs.js");
__d(/* ramda/src/toPairsIn.js */function(global, require, module, exports) {var _curry1 = require(1145                ); // 1145 = ./internal/_curry1

module.exports = _curry1(function toPairsIn(obj) {
  var pairs = [];
  for (var prop in obj) {
    pairs[pairs.length] = [prop, obj[prop]];
  }
  return pairs;
});
}, 1434, null, "ramda/src/toPairsIn.js");
__d(/* ramda/src/toUpper.js */function(global, require, module, exports) {var invoker = require(1336       ); // 1336 = ./invoker

module.exports = invoker(0, 'toUpperCase');
}, 1435, null, "ramda/src/toUpper.js");
__d(/* ramda/src/transduce.js */function(global, require, module, exports) {var _reduce = require(1170                ); // 1170 = ./internal/_reduce
var _xwrap = require(1173               ); // 1173 = ./internal/_xwrap
var curryN = require(1153      ); // 1153 = ./curryN

module.exports = curryN(4, function transduce(xf, fn, acc, list) {
  return _reduce(xf(typeof fn === 'function' ? _xwrap(fn) : fn), acc, list);
});
}, 1436, null, "ramda/src/transduce.js");
__d(/* ramda/src/transpose.js */function(global, require, module, exports) {var _curry1 = require(1145                ); // 1145 = ./internal/_curry1

module.exports = _curry1(function transpose(outerlist) {
  var i = 0;
  var result = [];
  while (i < outerlist.length) {
    var innerlist = outerlist[i];
    var j = 0;
    while (j < innerlist.length) {
      if (typeof result[j] === 'undefined') {
        result[j] = [];
      }
      result[j].push(innerlist[j]);
      j += 1;
    }
    i += 1;
  }
  return result;
});
}, 1437, null, "ramda/src/transpose.js");
__d(/* ramda/src/traverse.js */function(global, require, module, exports) {var _curry3 = require(1157                ); // 1157 = ./internal/_curry3
var map = require(1168   ); // 1168 = ./map
var sequence = require(1413        ); // 1413 = ./sequence

module.exports = _curry3(function traverse(of, f, traversable) {
  return typeof traversable['fantasy-land/traverse'] === 'function' ? traversable['fantasy-land/traverse'](f, of) : sequence(of, map(f, traversable));
});
}, 1438, null, "ramda/src/traverse.js");
__d(/* ramda/src/trim.js */function(global, require, module, exports) {var _curry1 = require(1145                ); // 1145 = ./internal/_curry1

module.exports = function () {
  var ws = '\t\n\x0B\f\r \xA0\u1680\u180E\u2000\u2001\u2002\u2003' + '\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028' + '\u2029\uFEFF';
  var zeroWidth = '\u200B';
  var hasProtoTrim = typeof String.prototype.trim === 'function';
  if (!hasProtoTrim || ws.trim() || !zeroWidth.trim()) {
    return _curry1(function trim(str) {
      var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');
      var endRx = new RegExp('[' + ws + '][' + ws + ']*$');
      return str.replace(beginRx, '').replace(endRx, '');
    });
  } else {
    return _curry1(function trim(str) {
      return str.trim();
    });
  }
}();
}, 1439, null, "ramda/src/trim.js");
__d(/* ramda/src/tryCatch.js */function(global, require, module, exports) {var _arity = require(1154               ); // 1154 = ./internal/_arity
var _concat = require(1152                ); // 1152 = ./internal/_concat
var _curry2 = require(1150                ); // 1150 = ./internal/_curry2

module.exports = _curry2(function _tryCatch(tryer, catcher) {
  return _arity(tryer.length, function () {
    try {
      return tryer.apply(this, arguments);
    } catch (e) {
      return catcher.apply(this, _concat([e], arguments));
    }
  });
});
}, 1440, null, "ramda/src/tryCatch.js");
__d(/* ramda/src/unapply.js */function(global, require, module, exports) {var _curry1 = require(1145                ); // 1145 = ./internal/_curry1

module.exports = _curry1(function unapply(fn) {
  return function () {
    return fn(Array.prototype.slice.call(arguments, 0));
  };
});
}, 1441, null, "ramda/src/unapply.js");
__d(/* ramda/src/unary.js */function(global, require, module, exports) {var _curry1 = require(1145                ); // 1145 = ./internal/_curry1
var nAry = require(1199    ); // 1199 = ./nAry

module.exports = _curry1(function unary(fn) {
  return nAry(1, fn);
});
}, 1442, null, "ramda/src/unary.js");
__d(/* ramda/src/uncurryN.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2
var curryN = require(1153      ); // 1153 = ./curryN

module.exports = _curry2(function uncurryN(depth, fn) {
  return curryN(depth, function () {
    var currentDepth = 1;
    var value = fn;
    var idx = 0;
    var endIdx;
    while (currentDepth <= depth && typeof value === 'function') {
      endIdx = currentDepth === depth ? arguments.length : idx + value.length;
      value = value.apply(this, Array.prototype.slice.call(arguments, idx, endIdx));
      currentDepth += 1;
      idx = endIdx;
    }
    return value;
  });
});
}, 1443, null, "ramda/src/uncurryN.js");
__d(/* ramda/src/unfold.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2

module.exports = _curry2(function unfold(fn, seed) {
  var pair = fn(seed);
  var result = [];
  while (pair && pair.length) {
    result[result.length] = pair[0];
    pair = fn(pair[1]);
  }
  return result;
});
}, 1444, null, "ramda/src/unfold.js");
__d(/* ramda/src/union.js */function(global, require, module, exports) {var _concat = require(1152                ); // 1152 = ./internal/_concat
var _curry2 = require(1150                ); // 1150 = ./internal/_curry2
var compose = require(1219       ); // 1219 = ./compose
var uniq = require(1323    ); // 1323 = ./uniq

module.exports = _curry2(compose(uniq, _concat));
}, 1445, null, "ramda/src/union.js");
__d(/* ramda/src/unionWith.js */function(global, require, module, exports) {var _concat = require(1152                ); // 1152 = ./internal/_concat
var _curry3 = require(1157                ); // 1157 = ./internal/_curry3
var uniqWith = require(1327        ); // 1327 = ./uniqWith

module.exports = _curry3(function unionWith(pred, list1, list2) {
  return uniqWith(pred, _concat(list1, list2));
});
}, 1446, null, "ramda/src/unionWith.js");
__d(/* ramda/src/unless.js */function(global, require, module, exports) {var _curry3 = require(1157                ); // 1157 = ./internal/_curry3

module.exports = _curry3(function unless(pred, whenFalseFn, x) {
  return pred(x) ? x : whenFalseFn(x);
});
}, 1447, null, "ramda/src/unless.js");
__d(/* ramda/src/unnest.js */function(global, require, module, exports) {var _identity = require(1313                  ); // 1313 = ./internal/_identity
var chain = require(1206     ); // 1206 = ./chain

module.exports = chain(_identity);
}, 1448, null, "ramda/src/unnest.js");
__d(/* ramda/src/until.js */function(global, require, module, exports) {var _curry3 = require(1157                ); // 1157 = ./internal/_curry3

module.exports = _curry3(function until(pred, fn, init) {
  var val = init;
  while (!pred(val)) {
    val = fn(val);
  }
  return val;
});
}, 1449, null, "ramda/src/until.js");
__d(/* ramda/src/valuesIn.js */function(global, require, module, exports) {var _curry1 = require(1145                ); // 1145 = ./internal/_curry1

module.exports = _curry1(function valuesIn(obj) {
  var prop;
  var vs = [];
  for (prop in obj) {
    vs[vs.length] = obj[prop];
  }
  return vs;
});
}, 1450, null, "ramda/src/valuesIn.js");
__d(/* ramda/src/view.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2

module.exports = function () {
  var Const = function Const(x) {
    return { value: x, 'fantasy-land/map': function fantasyLandMap() {
        return this;
      } };
  };

  return _curry2(function view(lens, x) {
    return lens(Const)(x).value;
  });
}();
}, 1451, null, "ramda/src/view.js");
__d(/* ramda/src/when.js */function(global, require, module, exports) {var _curry3 = require(1157                ); // 1157 = ./internal/_curry3

module.exports = _curry3(function when(pred, whenTrueFn, x) {
  return pred(x) ? whenTrueFn(x) : x;
});
}, 1452, null, "ramda/src/when.js");
__d(/* ramda/src/where.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2
var _has = require(1177             ); // 1177 = ./internal/_has

module.exports = _curry2(function where(spec, testObj) {
  for (var prop in spec) {
    if (_has(prop, spec) && !spec[prop](testObj[prop])) {
      return false;
    }
  }
  return true;
});
}, 1453, null, "ramda/src/where.js");
__d(/* ramda/src/whereEq.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2
var equals = require(1235      ); // 1235 = ./equals
var map = require(1168   ); // 1168 = ./map
var where = require(1453     ); // 1453 = ./where

module.exports = _curry2(function whereEq(spec, testObj) {
  return where(map(equals, spec), testObj);
});
}, 1454, null, "ramda/src/whereEq.js");
__d(/* ramda/src/without.js */function(global, require, module, exports) {var _contains = require(1233                  ); // 1233 = ./internal/_contains
var _curry2 = require(1150                ); // 1150 = ./internal/_curry2
var flip = require(1301    ); // 1301 = ./flip
var reject = require(1242      ); // 1242 = ./reject

module.exports = _curry2(function (xs, list) {
  return reject(flip(_contains)(xs), list);
});
}, 1455, null, "ramda/src/without.js");
__d(/* ramda/src/xprod.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2

module.exports = _curry2(function xprod(a, b) {
  var idx = 0;
  var ilen = a.length;
  var j;
  var jlen = b.length;
  var result = [];
  while (idx < ilen) {
    j = 0;
    while (j < jlen) {
      result[result.length] = [a[idx], b[j]];
      j += 1;
    }
    idx += 1;
  }
  return result;
});
}, 1456, null, "ramda/src/xprod.js");
__d(/* ramda/src/zip.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2

module.exports = _curry2(function zip(a, b) {
  var rv = [];
  var idx = 0;
  var len = Math.min(a.length, b.length);
  while (idx < len) {
    rv[idx] = [a[idx], b[idx]];
    idx += 1;
  }
  return rv;
});
}, 1457, null, "ramda/src/zip.js");
__d(/* ramda/src/zipObj.js */function(global, require, module, exports) {var _curry2 = require(1150                ); // 1150 = ./internal/_curry2

module.exports = _curry2(function zipObj(keys, values) {
  var idx = 0;
  var len = Math.min(keys.length, values.length);
  var out = {};
  while (idx < len) {
    out[keys[idx]] = values[idx];
    idx += 1;
  }
  return out;
});
}, 1458, null, "ramda/src/zipObj.js");
__d(/* ramda/src/zipWith.js */function(global, require, module, exports) {var _curry3 = require(1157                ); // 1157 = ./internal/_curry3

module.exports = _curry3(function zipWith(fn, a, b) {
  var rv = [];
  var idx = 0;
  var len = Math.min(a.length, b.length);
  while (idx < len) {
    rv[idx] = fn(a[idx], b[idx]);
    idx += 1;
  }
  return rv;
});
}, 1459, null, "ramda/src/zipWith.js");
__d(/* redux/lib/index.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.compose = exports.applyMiddleware = exports.bindActionCreators = exports.combineReducers = exports.createStore = undefined;

var _createStore = require(1461           ); // 1461 = ./createStore

var _createStore2 = _interopRequireDefault(_createStore);

var _combineReducers = require(1474               ); // 1474 = ./combineReducers

var _combineReducers2 = _interopRequireDefault(_combineReducers);

var _bindActionCreators = require(1476                  ); // 1476 = ./bindActionCreators

var _bindActionCreators2 = _interopRequireDefault(_bindActionCreators);

var _applyMiddleware = require(1477               ); // 1477 = ./applyMiddleware

var _applyMiddleware2 = _interopRequireDefault(_applyMiddleware);

var _compose = require(1478       ); // 1478 = ./compose

var _compose2 = _interopRequireDefault(_compose);

var _warning = require(1475             ); // 1475 = ./utils/warning

var _warning2 = _interopRequireDefault(_warning);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { 'default': obj };
}

function isCrushed() {}

if (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {
  (0, _warning2['default'])('You are currently using minified code outside of NODE_ENV === \'production\'. ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or DefinePlugin for webpack (http://stackoverflow.com/questions/30030031) ' + 'to ensure you have the correct code for your production build.');
}

exports.createStore = _createStore2['default'];
exports.combineReducers = _combineReducers2['default'];
exports.bindActionCreators = _bindActionCreators2['default'];
exports.applyMiddleware = _applyMiddleware2['default'];
exports.compose = _compose2['default'];
}, 1460, null, "redux/lib/index.js");
__d(/* redux/lib/createStore.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.ActionTypes = undefined;
exports['default'] = createStore;

var _isPlainObject = require(1462                  ); // 1462 = lodash/isPlainObject

var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

var _symbolObservable = require(1472               ); // 1472 = symbol-observable

var _symbolObservable2 = _interopRequireDefault(_symbolObservable);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { 'default': obj };
}

var ActionTypes = exports.ActionTypes = {
  INIT: '@@redux/INIT'

};function createStore(reducer, preloadedState, enhancer) {
  var _ref2;

  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {
    enhancer = preloadedState;
    preloadedState = undefined;
  }

  if (typeof enhancer !== 'undefined') {
    if (typeof enhancer !== 'function') {
      throw new Error('Expected the enhancer to be a function.');
    }

    return enhancer(createStore)(reducer, preloadedState);
  }

  if (typeof reducer !== 'function') {
    throw new Error('Expected the reducer to be a function.');
  }

  var currentReducer = reducer;
  var currentState = preloadedState;
  var currentListeners = [];
  var nextListeners = currentListeners;
  var isDispatching = false;

  function ensureCanMutateNextListeners() {
    if (nextListeners === currentListeners) {
      nextListeners = currentListeners.slice();
    }
  }

  function getState() {
    return currentState;
  }

  function subscribe(listener) {
    if (typeof listener !== 'function') {
      throw new Error('Expected listener to be a function.');
    }

    var isSubscribed = true;

    ensureCanMutateNextListeners();
    nextListeners.push(listener);

    return function unsubscribe() {
      if (!isSubscribed) {
        return;
      }

      isSubscribed = false;

      ensureCanMutateNextListeners();
      var index = nextListeners.indexOf(listener);
      nextListeners.splice(index, 1);
    };
  }

  function dispatch(action) {
    if (!(0, _isPlainObject2['default'])(action)) {
      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');
    }

    if (typeof action.type === 'undefined') {
      throw new Error('Actions may not have an undefined "type" property. ' + 'Have you misspelled a constant?');
    }

    if (isDispatching) {
      throw new Error('Reducers may not dispatch actions.');
    }

    try {
      isDispatching = true;
      currentState = currentReducer(currentState, action);
    } finally {
      isDispatching = false;
    }

    var listeners = currentListeners = nextListeners;
    for (var i = 0; i < listeners.length; i++) {
      var listener = listeners[i];
      listener();
    }

    return action;
  }

  function replaceReducer(nextReducer) {
    if (typeof nextReducer !== 'function') {
      throw new Error('Expected the nextReducer to be a function.');
    }

    currentReducer = nextReducer;
    dispatch({ type: ActionTypes.INIT });
  }

  function observable() {
    var _ref;

    var outerSubscribe = subscribe;
    return _ref = {
      subscribe: function subscribe(observer) {
        if (typeof observer !== 'object') {
          throw new TypeError('Expected the observer to be an object.');
        }

        function observeState() {
          if (observer.next) {
            observer.next(getState());
          }
        }

        observeState();
        var unsubscribe = outerSubscribe(observeState);
        return { unsubscribe: unsubscribe };
      }
    }, _ref[_symbolObservable2['default']] = function () {
      return this;
    }, _ref;
  }

  dispatch({ type: ActionTypes.INIT });

  return _ref2 = {
    dispatch: dispatch,
    subscribe: subscribe,
    getState: getState,
    replaceReducer: replaceReducer
  }, _ref2[_symbolObservable2['default']] = observable, _ref2;
}
}, 1461, null, "redux/lib/createStore.js");
__d(/* lodash/isPlainObject.js */function(global, require, module, exports) {var baseGetTag = require(1463           ), // 1463 = ./_baseGetTag
    getPrototype = require(1469             ), // 1469 = ./_getPrototype
    isObjectLike = require(1471            ); // 1471 = ./isObjectLike

var objectTag = '[object Object]';

var funcProto = Function.prototype,
    objectProto = Object.prototype;

var funcToString = funcProto.toString;

var hasOwnProperty = objectProto.hasOwnProperty;

var objectCtorString = funcToString.call(Object);

function isPlainObject(value) {
  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
    return false;
  }
  var proto = getPrototype(value);
  if (proto === null) {
    return true;
  }
  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
  return typeof Ctor == 'function' && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
}

module.exports = isPlainObject;
}, 1462, null, "lodash/isPlainObject.js");
__d(/* lodash/_baseGetTag.js */function(global, require, module, exports) {var Symbol = require(1464       ), // 1464 = ./_Symbol
    getRawTag = require(1467          ), // 1467 = ./_getRawTag
    objectToString = require(1468               ); // 1468 = ./_objectToString

var nullTag = '[object Null]',
    undefinedTag = '[object Undefined]';

var symToStringTag = Symbol ? typeof Symbol === 'function' ? Symbol.toStringTag : '@@toStringTag' : undefined;

function baseGetTag(value) {
    if (value == null) {
        return value === undefined ? undefinedTag : nullTag;
    }
    return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
}

module.exports = baseGetTag;
}, 1463, null, "lodash/_baseGetTag.js");
__d(/* lodash/_Symbol.js */function(global, require, module, exports) {var root = require(1465     ); // 1465 = ./_root

var Symbol = root.Symbol;

module.exports = Symbol;
}, 1464, null, "lodash/_Symbol.js");
__d(/* lodash/_root.js */function(global, require, module, exports) {var freeGlobal = require(1466           ); // 1466 = ./_freeGlobal

var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

var root = freeGlobal || freeSelf || Function('return this')();

module.exports = root;
}, 1465, null, "lodash/_root.js");
__d(/* lodash/_freeGlobal.js */function(global, require, module, exports) {
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

module.exports = freeGlobal;
}, 1466, null, "lodash/_freeGlobal.js");
__d(/* lodash/_getRawTag.js */function(global, require, module, exports) {var Symbol = require(1464       ); // 1464 = ./_Symbol

var objectProto = Object.prototype;

var hasOwnProperty = objectProto.hasOwnProperty;

var nativeObjectToString = objectProto.toString;

var symToStringTag = Symbol ? typeof Symbol === 'function' ? Symbol.toStringTag : '@@toStringTag' : undefined;

function getRawTag(value) {
  var isOwn = hasOwnProperty.call(value, symToStringTag),
      tag = value[symToStringTag];

  try {
    value[symToStringTag] = undefined;
    var unmasked = true;
  } catch (e) {}

  var result = nativeObjectToString.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag] = tag;
    } else {
      delete value[symToStringTag];
    }
  }
  return result;
}

module.exports = getRawTag;
}, 1467, null, "lodash/_getRawTag.js");
__d(/* lodash/_objectToString.js */function(global, require, module, exports) {
var objectProto = Object.prototype;

var nativeObjectToString = objectProto.toString;

function objectToString(value) {
  return nativeObjectToString.call(value);
}

module.exports = objectToString;
}, 1468, null, "lodash/_objectToString.js");
__d(/* lodash/_getPrototype.js */function(global, require, module, exports) {var overArg = require(1470        ); // 1470 = ./_overArg

var getPrototype = overArg(Object.getPrototypeOf, Object);

module.exports = getPrototype;
}, 1469, null, "lodash/_getPrototype.js");
__d(/* lodash/_overArg.js */function(global, require, module, exports) {
function overArg(func, transform) {
  return function (arg) {
    return func(transform(arg));
  };
}

module.exports = overArg;
}, 1470, null, "lodash/_overArg.js");
__d(/* lodash/isObjectLike.js */function(global, require, module, exports) {
function isObjectLike(value) {
  return value != null && typeof value == 'object';
}

module.exports = isObjectLike;
}, 1471, null, "lodash/isObjectLike.js");
__d(/* symbol-observable/lib/index.js */function(global, require, module, exports) {'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _ponyfill = require(1473           ); // 1473 = ./ponyfill.js

var _ponyfill2 = _interopRequireDefault(_ponyfill);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { 'default': obj };
}

var root;

if (typeof self !== 'undefined') {
  root = self;
} else if (typeof window !== 'undefined') {
  root = window;
} else if (typeof global !== 'undefined') {
  root = global;
} else if (typeof module !== 'undefined') {
  root = module;
} else {
  root = Function('return this')();
}

var result = (0, _ponyfill2['default'])(root);
exports['default'] = result;
}, 1472, null, "symbol-observable/lib/index.js");
__d(/* symbol-observable/lib/ponyfill.js */function(global, require, module, exports) {'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports['default'] = symbolObservablePonyfill;
function symbolObservablePonyfill(root) {
	var result;
	var _Symbol = root.Symbol;

	if (typeof _Symbol === 'function') {
		if (_Symbol.observable) {
			result = _Symbol.observable;
		} else {
			result = _Symbol('observable');
			_Symbol.observable = result;
		}
	} else {
		result = '@@observable';
	}

	return result;
};
}, 1473, null, "symbol-observable/lib/ponyfill.js");
__d(/* redux/lib/combineReducers.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports['default'] = combineReducers;

var _createStore = require(1461           ); // 1461 = ./createStore

var _isPlainObject = require(1462                  ); // 1462 = lodash/isPlainObject

var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

var _warning = require(1475             ); // 1475 = ./utils/warning

var _warning2 = _interopRequireDefault(_warning);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { 'default': obj };
}

function getUndefinedStateErrorMessage(key, action) {
  var actionType = action && action.type;
  var actionName = actionType && '"' + actionType.toString() + '"' || 'an action';

  return 'Given action ' + actionName + ', reducer "' + key + '" returned undefined. ' + 'To ignore an action, you must explicitly return the previous state. ' + 'If you want this reducer to hold no value, you can return null instead of undefined.';
}

function getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {
  var reducerKeys = Object.keys(reducers);
  var argumentName = action && action.type === _createStore.ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';

  if (reducerKeys.length === 0) {
    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';
  }

  if (!(0, _isPlainObject2['default'])(inputState)) {
    return 'The ' + argumentName + ' has unexpected type of "' + {}.toString.call(inputState).match(/\s([a-z|A-Z]+)/)[1] + '". Expected argument to be an object with the following ' + ('keys: "' + reducerKeys.join('", "') + '"');
  }

  var unexpectedKeys = Object.keys(inputState).filter(function (key) {
    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];
  });

  unexpectedKeys.forEach(function (key) {
    unexpectedKeyCache[key] = true;
  });

  if (unexpectedKeys.length > 0) {
    return 'Unexpected ' + (unexpectedKeys.length > 1 ? 'keys' : 'key') + ' ' + ('"' + unexpectedKeys.join('", "') + '" found in ' + argumentName + '. ') + 'Expected to find one of the known reducer keys instead: ' + ('"' + reducerKeys.join('", "') + '". Unexpected keys will be ignored.');
  }
}

function assertReducerShape(reducers) {
  Object.keys(reducers).forEach(function (key) {
    var reducer = reducers[key];
    var initialState = reducer(undefined, { type: _createStore.ActionTypes.INIT });

    if (typeof initialState === 'undefined') {
      throw new Error('Reducer "' + key + '" returned undefined during initialization. ' + 'If the state passed to the reducer is undefined, you must ' + 'explicitly return the initial state. The initial state may ' + 'not be undefined. If you don\'t want to set a value for this reducer, ' + 'you can use null instead of undefined.');
    }

    var type = '@@redux/PROBE_UNKNOWN_ACTION_' + Math.random().toString(36).substring(7).split('').join('.');
    if (typeof reducer(undefined, { type: type }) === 'undefined') {
      throw new Error('Reducer "' + key + '" returned undefined when probed with a random type. ' + ('Don\'t try to handle ' + _createStore.ActionTypes.INIT + ' or other actions in "redux/*" ') + 'namespace. They are considered private. Instead, you must return the ' + 'current state for any unknown actions, unless it is undefined, ' + 'in which case you must return the initial state, regardless of the ' + 'action type. The initial state may not be undefined, but can be null.');
    }
  });
}

function combineReducers(reducers) {
  var reducerKeys = Object.keys(reducers);
  var finalReducers = {};
  for (var i = 0; i < reducerKeys.length; i++) {
    var key = reducerKeys[i];

    if (process.env.NODE_ENV !== 'production') {
      if (typeof reducers[key] === 'undefined') {
        (0, _warning2['default'])('No reducer provided for key "' + key + '"');
      }
    }

    if (typeof reducers[key] === 'function') {
      finalReducers[key] = reducers[key];
    }
  }
  var finalReducerKeys = Object.keys(finalReducers);

  var unexpectedKeyCache = void 0;
  if (process.env.NODE_ENV !== 'production') {
    unexpectedKeyCache = {};
  }

  var shapeAssertionError = void 0;
  try {
    assertReducerShape(finalReducers);
  } catch (e) {
    shapeAssertionError = e;
  }

  return function combination() {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var action = arguments[1];

    if (shapeAssertionError) {
      throw shapeAssertionError;
    }

    if (process.env.NODE_ENV !== 'production') {
      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);
      if (warningMessage) {
        (0, _warning2['default'])(warningMessage);
      }
    }

    var hasChanged = false;
    var nextState = {};
    for (var _i = 0; _i < finalReducerKeys.length; _i++) {
      var _key = finalReducerKeys[_i];
      var reducer = finalReducers[_key];
      var previousStateForKey = state[_key];
      var nextStateForKey = reducer(previousStateForKey, action);
      if (typeof nextStateForKey === 'undefined') {
        var errorMessage = getUndefinedStateErrorMessage(_key, action);
        throw new Error(errorMessage);
      }
      nextState[_key] = nextStateForKey;
      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;
    }
    return hasChanged ? nextState : state;
  };
}
}, 1474, null, "redux/lib/combineReducers.js");
__d(/* redux/lib/utils/warning.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports['default'] = warning;

function warning(message) {
  if (typeof console !== 'undefined' && typeof console.error === 'function') {
    console.error(message);
  }

  try {
    throw new Error(message);
  } catch (e) {}
}
}, 1475, null, "redux/lib/utils/warning.js");
__d(/* redux/lib/bindActionCreators.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports['default'] = bindActionCreators;
function bindActionCreator(actionCreator, dispatch) {
  return function () {
    return dispatch(actionCreator.apply(undefined, arguments));
  };
}

function bindActionCreators(actionCreators, dispatch) {
  if (typeof actionCreators === 'function') {
    return bindActionCreator(actionCreators, dispatch);
  }

  if (typeof actionCreators !== 'object' || actionCreators === null) {
    throw new Error('bindActionCreators expected an object or a function, instead received ' + (actionCreators === null ? 'null' : typeof actionCreators) + '. ' + 'Did you write "import ActionCreators from" instead of "import * as ActionCreators from"?');
  }

  var keys = Object.keys(actionCreators);
  var boundActionCreators = {};
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    var actionCreator = actionCreators[key];
    if (typeof actionCreator === 'function') {
      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);
    }
  }
  return boundActionCreators;
}
}, 1476, null, "redux/lib/bindActionCreators.js");
__d(/* redux/lib/applyMiddleware.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }return target;
};

exports['default'] = applyMiddleware;

var _compose = require(1478       ); // 1478 = ./compose

var _compose2 = _interopRequireDefault(_compose);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { 'default': obj };
}

function applyMiddleware() {
  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {
    middlewares[_key] = arguments[_key];
  }

  return function (createStore) {
    return function (reducer, preloadedState, enhancer) {
      var store = createStore(reducer, preloadedState, enhancer);
      var _dispatch = store.dispatch;
      var chain = [];

      var middlewareAPI = {
        getState: store.getState,
        dispatch: function dispatch(action) {
          return _dispatch(action);
        }
      };
      chain = middlewares.map(function (middleware) {
        return middleware(middlewareAPI);
      });
      _dispatch = _compose2['default'].apply(undefined, chain)(store.dispatch);

      return _extends({}, store, {
        dispatch: _dispatch
      });
    };
  };
}
}, 1477, null, "redux/lib/applyMiddleware.js");
__d(/* redux/lib/compose.js */function(global, require, module, exports) {"use strict";

exports.__esModule = true;
exports["default"] = compose;


function compose() {
  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {
    funcs[_key] = arguments[_key];
  }

  if (funcs.length === 0) {
    return function (arg) {
      return arg;
    };
  }

  if (funcs.length === 1) {
    return funcs[0];
  }

  return funcs.reduce(function (a, b) {
    return function () {
      return a(b.apply(undefined, arguments));
    };
  });
}
}, 1478, null, "redux/lib/compose.js");
__d(/* reactotron-redux-saga/dist/index.js */function(global, require, module, exports) {'use strict';

var reduxSaga_utils = require(1480              ); // 1480 = redux-saga/utils
var ramdasauce = require(1048        ); // 1048 = ramdasauce
var ramda = require(1492   ); // 1492 = ramda

var TAKE = 'TAKE';
var PUT = 'PUT';
var CALL = 'CALL';
var CPS = 'CPS';
var FORK = 'FORK';
var JOIN = 'JOIN';
var RACE = 'RACE';
var CANCEL = 'CANCEL';
var SELECT = 'SELECT';
var PARALLEL = 'PARALLEL';
var ITERATOR = 'ITERATOR';
var PROMISE = 'PROMISE';
var UNKNOWN = 'UNKNOWN';
var PENDING = 'PENDING';
var RESOLVED = 'RESOLVED';
var REJECTED = 'REJECTED';
var CANCELLED = 'CANCELLED';

var getEffectName = function getEffectName(effect) {
  if (!effect) return UNKNOWN;
  if (effect instanceof Promise) return PROMISE;
  if (reduxSaga_utils.asEffect.take(effect)) return TAKE;
  if (reduxSaga_utils.asEffect.put(effect)) return PUT;
  if (reduxSaga_utils.asEffect.call(effect)) return CALL;
  if (reduxSaga_utils.asEffect.cps(effect)) return CPS;
  if (reduxSaga_utils.asEffect.fork(effect)) return FORK;
  if (reduxSaga_utils.asEffect.join(effect)) return JOIN;
  if (reduxSaga_utils.asEffect.race(effect)) return RACE;
  if (reduxSaga_utils.asEffect.cancel(effect)) return CANCEL;
  if (reduxSaga_utils.asEffect.select(effect)) return SELECT;
  if (reduxSaga_utils.is.array(effect)) return PARALLEL;
  if (reduxSaga_utils.is.iterator(effect)) return ITERATOR;
  return UNKNOWN;
};

var getEffectDescription = function getEffectDescription(effect) {
  if (!effect) return UNKNOWN;
  if (effect instanceof Promise) {
    var display = void 0;
    if (effect.name) {
      display = PROMISE + '(' + effect.name + ')';
    } else if (effect.constructor instanceof Promise.constructor) {
      display = PROMISE;
    } else {
      display = PROMISE + '(' + effect.constructor.name + ')';
    }
    return display;
  }
  if (effect.root) return effect.saga.name;
  var data = void 0;
  if (data = reduxSaga_utils.asEffect.take(effect)) return data.pattern || 'channel';
  if (data = reduxSaga_utils.asEffect.put(effect)) return data.channel ? data.action : data.action.type;
  if (data = reduxSaga_utils.asEffect.call(effect)) {
    return ramdasauce.isNilOrEmpty(data.fn.name) ? '(anonymous)' : data.fn.name;
  }
  if (data = reduxSaga_utils.asEffect.cps(effect)) return data.fn.name;
  if (data = reduxSaga_utils.asEffect.fork(effect)) return data.fn.name;
  if (data = reduxSaga_utils.asEffect.join(effect)) return data.name;
  if (reduxSaga_utils.asEffect.race(effect)) return null;
  if (data = reduxSaga_utils.asEffect.cancel(effect)) return data.name;
  if (data = reduxSaga_utils.asEffect.select(effect)) return data.selector.name;
  if (reduxSaga_utils.is.array(effect)) return null;
  if (reduxSaga_utils.is.iterator(effect)) return effect.name;
  return UNKNOWN;
};

var _createSagaMonitor = function _createSagaMonitor(reactotron, options) {
  var effects = {};

  var byParentId = ramda.propEq('parentEffectId', ramda.__);
  var byLabel = ramda.propEq('label', ramda.__);
  var getChildEffectInfos = function getChildEffectInfos(parentEffectId) {
    return ramda.filter(byParentId(parentEffectId), ramda.values(effects));
  };
  var getChildEffectIds = function getChildEffectIds(effectId) {
    return ramda.pluck('effectId', getChildEffectInfos(effectId));
  };

  var timer = reactotron.startTimer();

  var effectTriggered = function effectTriggered(description) {
    var effect = description.effect,
        effectId = description.effectId,
        parentEffectId = description.parentEffectId,
        label = description.label;

    var effectInfo = {
      effectId: effectId,
      parentEffectId: parentEffectId,
      effect: effect,
      label: label,
      status: PENDING,
      name: getEffectName(effect),
      description: getEffectDescription(effect),
      result: null,
      startedAt: timer()
    };

    effects[effectId] = effectInfo;
  };

  var updateDuration = function updateDuration(effectInfo) {
    effectInfo.duration = timer() - effectInfo.startedAt;
  };

  var taskResolved = function taskResolved(effectId, taskResult) {
    var effectInfo = effects[effectId];
    updateDuration(effectInfo);
    var duration = effectInfo.duration;

    var parentEffectId = effectInfo.parentEffectId;

    var parentEffectInfo = effects[parentEffectId];
    var children = [];

    var sagaDescription = void 0;

    var triggerType = void 0;

    if (effectInfo.name === FORK) {
      var args = ramda.pathOr([], ramda.split('.', 'effect.FORK.args'), effectInfo);
      var lastArg = ramda.last(args);
      triggerType = lastArg && lastArg.type;
      if (parentEffectInfo) {
        if (parentEffectInfo.name === ITERATOR) {
          sagaDescription = parentEffectInfo.description;
        }
      } else {
        sagaDescription = '(root)';
        triggerType = effectInfo.description + '()';
      }

      var buildChild = function buildChild(depth, effectId) {
        var sourceEffectInfo = effects[effectId];
        if (ramda.isNil(sourceEffectInfo)) return;

        var extra = null;
        switch (sourceEffectInfo.name) {
          case CALL:
            extra = sourceEffectInfo.effect[sourceEffectInfo.name].args;
            break;

          case PUT:
            extra = sourceEffectInfo.effect[sourceEffectInfo.name].action;
            break;

          case RACE:
            break;

          default:
            extra = sourceEffectInfo.effect[sourceEffectInfo.name];
            break;
        }

        children.push({
          depth: depth,
          effectId: sourceEffectInfo.effectId,
          parentEffectId: sourceEffectInfo.parentEffectId || null,
          name: sourceEffectInfo.name || null,
          description: sourceEffectInfo.description || null,
          duration: Math.round(sourceEffectInfo.duration),
          status: sourceEffectInfo.status || null,
          winner: sourceEffectInfo.winner || null,
          loser: sourceEffectInfo.loser || null,
          result: sourceEffectInfo.result || null,
          extra: extra || null
        });

        ramda.forEach(function (x) {
          return buildChild(depth + 1, x);
        }, getChildEffectIds(effectId));
      };
      var xs = getChildEffectIds(effectId);
      ramda.forEach(function (effectId) {
        return buildChild(0, effectId);
      }, xs);
    }

    reactotron.send('saga.task.complete', {
      triggerType: triggerType || effectInfo.description,
      description: sagaDescription,
      duration: Math.round(duration),
      children: children
    });
  };

  var effectResolved = function effectResolved(effectId, result) {
    var effectInfo = effects[effectId];
    updateDuration(effectInfo);
    effectInfo.result = result;

    if (reduxSaga_utils.is.task(result)) {
      var onTaskResult = function onTaskResult(taskResult) {
        if (result.isCancelled()) {
          effectCancelled(effectId);
        } else {
          effectResolved(effectId, taskResult);
          taskResolved(effectId, taskResult);
        }
      };

      result.done.then(onTaskResult, function (error) {
        effectRejected(effectId, error);
        if (!error.reactotronWasHere) {
          reactotron.reportError(error);
        }
        error.reactotronWasHere = true;
      });
    } else {
      effectInfo.status = RESOLVED;
      effectInfo.result = result;
      if (effectInfo.name === RACE) {
        setRaceWinner(effectId, result);
      }
    }
  };

  var setRaceWinner = function setRaceWinner(effectId, resultOrError) {
    var winnerLabel = Object.keys(resultOrError)[0];
    var children = getChildEffectInfos(effectId);
    var winningChildren = ramda.filter(byLabel(winnerLabel), children);
    var losingChildren = ramda.reject(byLabel(winnerLabel), children);
    var setWinner = function setWinner(effectInfo) {
      effectInfo.winner = true;
    };
    var setLoser = function setLoser(effectInfo) {
      effectInfo.loser = true;
    };

    ramda.forEach(setWinner, winningChildren);
    ramda.forEach(setLoser, losingChildren);
  };

  var effectRejected = function effectRejected(effectId, error) {
    var effectInfo = effects[effectId];
    updateDuration(effectInfo);
    effectInfo.status = REJECTED;
    effectInfo.error = error;
    if (effectInfo.name === RACE) {
      setRaceWinner(effectId, error);
    }
  };

  var effectCancelled = function effectCancelled(effectId) {
    var effectInfo = effects[effectId];
    updateDuration(effectInfo);
    effectInfo.status = CANCELLED;
  };

  return {
    effectTriggered: effectTriggered,
    effectResolved: effectResolved,
    effectRejected: effectRejected,
    effectCancelled: effectCancelled,
    actionDispatched: function actionDispatched() {}
  };
};

var plugin$1 = function plugin$1(pluginConfig) {
  return function (reactotron) {
    return {
      features: {
        createSagaMonitor: function createSagaMonitor(options) {
          return _createSagaMonitor(reactotron, options);
        }
      }
    };
  };
};

module.exports = plugin$1;
}, 1479, null, "reactotron-redux-saga/dist/index.js");
__d(/* redux-saga/lib/utils.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;

var _utils = require(1481              ); // 1481 = ./internal/utils

Object.defineProperty(exports, 'TASK', {
  enumerable: true,
  get: function get() {
    return _utils.TASK;
  }
});
Object.defineProperty(exports, 'SAGA_ACTION', {
  enumerable: true,
  get: function get() {
    return _utils.SAGA_ACTION;
  }
});
Object.defineProperty(exports, 'noop', {
  enumerable: true,
  get: function get() {
    return _utils.noop;
  }
});
Object.defineProperty(exports, 'is', {
  enumerable: true,
  get: function get() {
    return _utils.is;
  }
});
Object.defineProperty(exports, 'deferred', {
  enumerable: true,
  get: function get() {
    return _utils.deferred;
  }
});
Object.defineProperty(exports, 'arrayOfDeffered', {
  enumerable: true,
  get: function get() {
    return _utils.arrayOfDeffered;
  }
});
Object.defineProperty(exports, 'createMockTask', {
  enumerable: true,
  get: function get() {
    return _utils.createMockTask;
  }
});
Object.defineProperty(exports, 'cloneableGenerator', {
  enumerable: true,
  get: function get() {
    return _utils.cloneableGenerator;
  }
});

var _io = require(1482           ); // 1482 = ./internal/io

Object.defineProperty(exports, 'asEffect', {
  enumerable: true,
  get: function get() {
    return _io.asEffect;
  }
});

var _proc = require(1491             ); // 1491 = ./internal/proc

Object.defineProperty(exports, 'CHANNEL_END', {
  enumerable: true,
  get: function get() {
    return _proc.CHANNEL_END;
  }
});
}, 1480, null, "redux-saga/lib/utils.js");
__d(/* redux-saga/lib/internal/utils.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }return target;
};

var _typeof = typeof Symbol === "function" && typeof (typeof Symbol === "function" ? Symbol.iterator : "@@iterator") === "symbol" ? function (obj) {
  return typeof obj;
} : function (obj) {
  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== (typeof Symbol === "function" ? Symbol.prototype : "@@prototype") ? "symbol" : typeof obj;
};

exports.check = check;
exports.hasOwn = hasOwn;
exports.remove = remove;
exports.deferred = deferred;
exports.arrayOfDeffered = arrayOfDeffered;
exports.delay = delay;
exports.createMockTask = createMockTask;
exports.autoInc = autoInc;
exports.makeIterator = makeIterator;
exports.log = log;
exports.deprecate = deprecate;
var sym = exports.sym = function sym(id) {
  return '@@redux-saga/' + id;
};

var TASK = exports.TASK = sym('TASK');
var HELPER = exports.HELPER = sym('HELPER');
var MATCH = exports.MATCH = sym('MATCH');
var CANCEL = exports.CANCEL = sym('CANCEL_PROMISE');
var SAGA_ACTION = exports.SAGA_ACTION = sym('SAGA_ACTION');
var SELF_CANCELLATION = exports.SELF_CANCELLATION = sym('SELF_CANCELLATION');
var konst = exports.konst = function konst(v) {
  return function () {
    return v;
  };
};
var kTrue = exports.kTrue = konst(true);
var kFalse = exports.kFalse = konst(false);
var noop = exports.noop = function noop() {};
var ident = exports.ident = function ident(v) {
  return v;
};

function check(value, predicate, error) {
  if (!predicate(value)) {
    log('error', 'uncaught at check', error);
    throw new Error(error);
  }
}

var hasOwnProperty = Object.prototype.hasOwnProperty;
function hasOwn(object, property) {
  return is.notUndef(object) && hasOwnProperty.call(object, property);
}

var is = exports.is = {
  undef: function undef(v) {
    return v === null || v === undefined;
  },
  notUndef: function notUndef(v) {
    return v !== null && v !== undefined;
  },
  func: function func(f) {
    return typeof f === 'function';
  },
  number: function number(n) {
    return typeof n === 'number';
  },
  string: function string(s) {
    return typeof s === 'string';
  },
  array: Array.isArray,
  object: function object(obj) {
    return obj && !is.array(obj) && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object';
  },
  promise: function promise(p) {
    return p && is.func(p.then);
  },
  iterator: function iterator(it) {
    return it && is.func(it.next) && is.func(it.throw);
  },
  iterable: function iterable(it) {
    return it && is.func(Symbol) ? is.func(it[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"]) : is.array(it);
  },
  task: function task(t) {
    return t && t[TASK];
  },
  observable: function observable(ob) {
    return ob && is.func(ob.subscribe);
  },
  buffer: function buffer(buf) {
    return buf && is.func(buf.isEmpty) && is.func(buf.take) && is.func(buf.put);
  },
  pattern: function pattern(pat) {
    return pat && (is.string(pat) || (typeof pat === 'undefined' ? 'undefined' : _typeof(pat)) === 'symbol' || is.func(pat) || is.array(pat));
  },
  channel: function channel(ch) {
    return ch && is.func(ch.take) && is.func(ch.close);
  },
  helper: function helper(it) {
    return it && it[HELPER];
  },
  stringableFunc: function stringableFunc(f) {
    return is.func(f) && hasOwn(f, 'toString');
  }
};

var object = exports.object = {
  assign: function assign(target, source) {
    for (var i in source) {
      if (hasOwn(source, i)) {
        target[i] = source[i];
      }
    }
  }
};

function remove(array, item) {
  var index = array.indexOf(item);
  if (index >= 0) {
    array.splice(index, 1);
  }
}

var array = exports.array = {
  from: function from(obj) {
    var arr = Array(obj.length);
    for (var i in obj) {
      if (hasOwn(obj, i)) {
        arr[i] = obj[i];
      }
    }
    return arr;
  }
};

function deferred() {
  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  var def = _extends({}, props);
  var promise = new Promise(function (resolve, reject) {
    def.resolve = resolve;
    def.reject = reject;
  });
  def.promise = promise;
  return def;
}

function arrayOfDeffered(length) {
  var arr = [];
  for (var i = 0; i < length; i++) {
    arr.push(deferred());
  }
  return arr;
}

function delay(ms) {
  var val = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

  var timeoutId = void 0;
  var promise = new Promise(function (resolve) {
    timeoutId = setTimeout(function () {
      return resolve(val);
    }, ms);
  });

  promise[CANCEL] = function () {
    return clearTimeout(timeoutId);
  };

  return promise;
}

function createMockTask() {
  var _ref;

  var running = true;
  var _result = void 0,
      _error = void 0;

  return _ref = {}, _ref[TASK] = true, _ref.isRunning = function isRunning() {
    return running;
  }, _ref.result = function result() {
    return _result;
  }, _ref.error = function error() {
    return _error;
  }, _ref.setRunning = function setRunning(b) {
    return running = b;
  }, _ref.setResult = function setResult(r) {
    return _result = r;
  }, _ref.setError = function setError(e) {
    return _error = e;
  }, _ref;
}

function autoInc() {
  var seed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;

  return function () {
    return ++seed;
  };
}

var uid = exports.uid = autoInc();

var kThrow = function kThrow(err) {
  throw err;
};
var kReturn = function kReturn(value) {
  return { value: value, done: true };
};
function makeIterator(next) {
  var thro = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : kThrow;
  var name = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
  var isHelper = arguments[3];

  var iterator = { name: name, next: next, throw: thro, return: kReturn };

  if (isHelper) {
    iterator[HELPER] = true;
  }
  if (typeof Symbol !== 'undefined') {
    iterator[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"] = function () {
      return iterator;
    };
  }
  return iterator;
}

function log(level, message) {
  var error = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';

  if (typeof window === 'undefined') {
    console.log('redux-saga ' + level + ': ' + message + '\n' + (error && error.stack || error));
  } else {
    console[level](message, error);
  }
}

function deprecate(fn, deprecationWarning) {
  return function () {
    if (process.env.NODE_ENV === 'development') log('warn', deprecationWarning);
    return fn.apply(undefined, arguments);
  };
}

var updateIncentive = exports.updateIncentive = function updateIncentive(deprecated, preferred) {
  return deprecated + ' has been deprecated in favor of ' + preferred + ', please update your code';
};

var internalErr = exports.internalErr = function internalErr(err) {
  return new Error('\n  redux-saga: Error checking hooks detected an inconsistent state. This is likely a bug\n  in redux-saga code and not yours. Thanks for reporting this in the project\'s github repo.\n  Error: ' + err + '\n');
};

var createSetContextWarning = exports.createSetContextWarning = function createSetContextWarning(ctx, props) {
  return (ctx ? ctx + '.' : '') + 'setContext(props): argument ' + props + ' is not a plain object';
};

var wrapSagaDispatch = exports.wrapSagaDispatch = function wrapSagaDispatch(dispatch) {
  return function (action) {
    return dispatch(Object.defineProperty(action, SAGA_ACTION, { value: true }));
  };
};

var cloneableGenerator = exports.cloneableGenerator = function cloneableGenerator(generatorFunc) {
  return function () {
    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var history = [];
    var gen = generatorFunc.apply(undefined, args);
    return {
      next: function next(arg) {
        history.push(arg);
        return gen.next(arg);
      },
      clone: function clone() {
        var clonedGen = cloneableGenerator(generatorFunc).apply(undefined, args);
        history.forEach(function (arg) {
          return clonedGen.next(arg);
        });
        return clonedGen;
      },
      return: function _return(value) {
        return gen.return(value);
      },
      throw: function _throw(exception) {
        return gen.throw(exception);
      }
    };
  };
};
}, 1481, null, "redux-saga/lib/internal/utils.js");
__d(/* redux-saga/lib/internal/io.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.asEffect = exports.takem = undefined;
exports.take = take;
exports.put = put;
exports.all = all;
exports.race = race;
exports.call = call;
exports.apply = apply;
exports.cps = cps;
exports.fork = fork;
exports.spawn = spawn;
exports.join = join;
exports.cancel = cancel;
exports.select = select;
exports.actionChannel = actionChannel;
exports.cancelled = cancelled;
exports.flush = flush;
exports.getContext = getContext;
exports.setContext = setContext;
exports.takeEvery = takeEvery;
exports.takeLatest = takeLatest;
exports.throttle = throttle;

var _utils = require(1481     ); // 1481 = ./utils

var _sagaHelpers = require(1483           ); // 1483 = ./sagaHelpers

var IO = (0, _utils.sym)('IO');
var TAKE = 'TAKE';
var PUT = 'PUT';
var ALL = 'ALL';
var RACE = 'RACE';
var CALL = 'CALL';
var CPS = 'CPS';
var FORK = 'FORK';
var JOIN = 'JOIN';
var CANCEL = 'CANCEL';
var SELECT = 'SELECT';
var ACTION_CHANNEL = 'ACTION_CHANNEL';
var CANCELLED = 'CANCELLED';
var FLUSH = 'FLUSH';
var GET_CONTEXT = 'GET_CONTEXT';
var SET_CONTEXT = 'SET_CONTEXT';

var TEST_HINT = '\n(HINT: if you are getting this errors in tests, consider using createMockTask from redux-saga/utils)';

var effect = function effect(type, payload) {
  var _ref;

  return _ref = {}, _ref[IO] = true, _ref[type] = payload, _ref;
};

function take() {
  var patternOrChannel = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '*';

  if (arguments.length) {
    (0, _utils.check)(arguments[0], _utils.is.notUndef, 'take(patternOrChannel): patternOrChannel is undefined');
  }
  if (_utils.is.pattern(patternOrChannel)) {
    return effect(TAKE, { pattern: patternOrChannel });
  }
  if (_utils.is.channel(patternOrChannel)) {
    return effect(TAKE, { channel: patternOrChannel });
  }
  throw new Error('take(patternOrChannel): argument ' + String(patternOrChannel) + ' is not valid channel or a valid pattern');
}

take.maybe = function () {
  var eff = take.apply(undefined, arguments);
  eff[TAKE].maybe = true;
  return eff;
};

var takem = exports.takem = (0, _utils.deprecate)(take.maybe, (0, _utils.updateIncentive)('takem', 'take.maybe'));

function put(channel, action) {
  if (arguments.length > 1) {
    (0, _utils.check)(channel, _utils.is.notUndef, 'put(channel, action): argument channel is undefined');
    (0, _utils.check)(channel, _utils.is.channel, 'put(channel, action): argument ' + channel + ' is not a valid channel');
    (0, _utils.check)(action, _utils.is.notUndef, 'put(channel, action): argument action is undefined');
  } else {
    (0, _utils.check)(channel, _utils.is.notUndef, 'put(action): argument action is undefined');
    action = channel;
    channel = null;
  }
  return effect(PUT, { channel: channel, action: action });
}

put.resolve = function () {
  var eff = put.apply(undefined, arguments);
  eff[PUT].resolve = true;
  return eff;
};

put.sync = (0, _utils.deprecate)(put.resolve, (0, _utils.updateIncentive)('put.sync', 'put.resolve'));

function all(effects) {
  return effect(ALL, effects);
}

function race(effects) {
  return effect(RACE, effects);
}

function getFnCallDesc(meth, fn, args) {
  (0, _utils.check)(fn, _utils.is.notUndef, meth + ': argument fn is undefined');

  var context = null;
  if (_utils.is.array(fn)) {
    var _fn = fn;
    context = _fn[0];
    fn = _fn[1];
  } else if (fn.fn) {
    var _fn2 = fn;
    context = _fn2.context;
    fn = _fn2.fn;
  }
  if (context && _utils.is.string(fn) && _utils.is.func(context[fn])) {
    fn = context[fn];
  }
  (0, _utils.check)(fn, _utils.is.func, meth + ': argument ' + fn + ' is not a function');

  return { context: context, fn: fn, args: args };
}

function call(fn) {
  for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    args[_key - 1] = arguments[_key];
  }

  return effect(CALL, getFnCallDesc('call', fn, args));
}

function apply(context, fn) {
  var args = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];

  return effect(CALL, getFnCallDesc('apply', { context: context, fn: fn }, args));
}

function cps(fn) {
  for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
    args[_key2 - 1] = arguments[_key2];
  }

  return effect(CPS, getFnCallDesc('cps', fn, args));
}

function fork(fn) {
  for (var _len3 = arguments.length, args = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
    args[_key3 - 1] = arguments[_key3];
  }

  return effect(FORK, getFnCallDesc('fork', fn, args));
}

function spawn(fn) {
  for (var _len4 = arguments.length, args = Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {
    args[_key4 - 1] = arguments[_key4];
  }

  var eff = fork.apply(undefined, [fn].concat(args));
  eff[FORK].detached = true;
  return eff;
}

function join() {
  for (var _len5 = arguments.length, tasks = Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
    tasks[_key5] = arguments[_key5];
  }

  if (tasks.length > 1) {
    return all(tasks.map(function (t) {
      return join(t);
    }));
  }
  var task = tasks[0];
  (0, _utils.check)(task, _utils.is.notUndef, 'join(task): argument task is undefined');
  (0, _utils.check)(task, _utils.is.task, 'join(task): argument ' + task + ' is not a valid Task object ' + TEST_HINT);
  return effect(JOIN, task);
}

function cancel() {
  for (var _len6 = arguments.length, tasks = Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
    tasks[_key6] = arguments[_key6];
  }

  if (tasks.length > 1) {
    return all(tasks.map(function (t) {
      return cancel(t);
    }));
  }
  var task = tasks[0];
  if (tasks.length === 1) {
    (0, _utils.check)(task, _utils.is.notUndef, 'cancel(task): argument task is undefined');
    (0, _utils.check)(task, _utils.is.task, 'cancel(task): argument ' + task + ' is not a valid Task object ' + TEST_HINT);
  }
  return effect(CANCEL, task || _utils.SELF_CANCELLATION);
}

function select(selector) {
  for (var _len7 = arguments.length, args = Array(_len7 > 1 ? _len7 - 1 : 0), _key7 = 1; _key7 < _len7; _key7++) {
    args[_key7 - 1] = arguments[_key7];
  }

  if (arguments.length === 0) {
    selector = _utils.ident;
  } else {
    (0, _utils.check)(selector, _utils.is.notUndef, 'select(selector,[...]): argument selector is undefined');
    (0, _utils.check)(selector, _utils.is.func, 'select(selector,[...]): argument ' + selector + ' is not a function');
  }
  return effect(SELECT, { selector: selector, args: args });
}

function actionChannel(pattern, buffer) {
  (0, _utils.check)(pattern, _utils.is.notUndef, 'actionChannel(pattern,...): argument pattern is undefined');
  if (arguments.length > 1) {
    (0, _utils.check)(buffer, _utils.is.notUndef, 'actionChannel(pattern, buffer): argument buffer is undefined');
    (0, _utils.check)(buffer, _utils.is.buffer, 'actionChannel(pattern, buffer): argument ' + buffer + ' is not a valid buffer');
  }
  return effect(ACTION_CHANNEL, { pattern: pattern, buffer: buffer });
}

function cancelled() {
  return effect(CANCELLED, {});
}

function flush(channel) {
  (0, _utils.check)(channel, _utils.is.channel, 'flush(channel): argument ' + channel + ' is not valid channel');
  return effect(FLUSH, channel);
}

function getContext(prop) {
  (0, _utils.check)(prop, _utils.is.string, 'getContext(prop): argument ' + prop + ' is not a string');
  return effect(GET_CONTEXT, prop);
}

function setContext(props) {
  (0, _utils.check)(props, _utils.is.object, (0, _utils.createSetContextWarning)(null, props));
  return effect(SET_CONTEXT, props);
}

function takeEvery(patternOrChannel, worker) {
  for (var _len8 = arguments.length, args = Array(_len8 > 2 ? _len8 - 2 : 0), _key8 = 2; _key8 < _len8; _key8++) {
    args[_key8 - 2] = arguments[_key8];
  }

  return fork.apply(undefined, [_sagaHelpers.takeEveryHelper, patternOrChannel, worker].concat(args));
}

function takeLatest(patternOrChannel, worker) {
  for (var _len9 = arguments.length, args = Array(_len9 > 2 ? _len9 - 2 : 0), _key9 = 2; _key9 < _len9; _key9++) {
    args[_key9 - 2] = arguments[_key9];
  }

  return fork.apply(undefined, [_sagaHelpers.takeLatestHelper, patternOrChannel, worker].concat(args));
}

function throttle(ms, pattern, worker) {
  for (var _len10 = arguments.length, args = Array(_len10 > 3 ? _len10 - 3 : 0), _key10 = 3; _key10 < _len10; _key10++) {
    args[_key10 - 3] = arguments[_key10];
  }

  return fork.apply(undefined, [_sagaHelpers.throttleHelper, ms, pattern, worker].concat(args));
}

var createAsEffectType = function createAsEffectType(type) {
  return function (effect) {
    return effect && effect[IO] && effect[type];
  };
};

var asEffect = exports.asEffect = {
  take: createAsEffectType(TAKE),
  put: createAsEffectType(PUT),
  all: createAsEffectType(ALL),
  race: createAsEffectType(RACE),
  call: createAsEffectType(CALL),
  cps: createAsEffectType(CPS),
  fork: createAsEffectType(FORK),
  join: createAsEffectType(JOIN),
  cancel: createAsEffectType(CANCEL),
  select: createAsEffectType(SELECT),
  actionChannel: createAsEffectType(ACTION_CHANNEL),
  cancelled: createAsEffectType(CANCELLED),
  flush: createAsEffectType(FLUSH),
  getContext: createAsEffectType(GET_CONTEXT),
  setContext: createAsEffectType(SET_CONTEXT)
};
}, 1482, null, "redux-saga/lib/internal/io.js");
__d(/* redux-saga/lib/internal/sagaHelpers/index.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.throttleHelper = exports.takeLatestHelper = exports.takeEveryHelper = exports.throttle = exports.takeLatest = exports.takeEvery = undefined;

var _takeEvery = require(1484         ); // 1484 = ./takeEvery

var _takeEvery2 = _interopRequireDefault(_takeEvery);

var _takeLatest = require(1489          ); // 1489 = ./takeLatest

var _takeLatest2 = _interopRequireDefault(_takeLatest);

var _throttle = require(1490        ); // 1490 = ./throttle

var _throttle2 = _interopRequireDefault(_throttle);

var _utils = require(1481      ); // 1481 = ../utils

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

var deprecationWarning = function deprecationWarning(helperName) {
  return 'import { ' + helperName + ' } from \'redux-saga\' has been deprecated in favor of import { ' + helperName + ' } from \'redux-saga/effects\'.\nThe latter will not work with yield*, as helper effects are wrapped automatically for you in fork effect.\nTherefore yield ' + helperName + ' will return task descriptor to your saga and execute next lines of code.';
};

var takeEvery = (0, _utils.deprecate)(_takeEvery2.default, deprecationWarning('takeEvery'));
var takeLatest = (0, _utils.deprecate)(_takeLatest2.default, deprecationWarning('takeLatest'));
var throttle = (0, _utils.deprecate)(_throttle2.default, deprecationWarning('throttle'));

exports.takeEvery = takeEvery;
exports.takeLatest = takeLatest;
exports.throttle = throttle;
exports.takeEveryHelper = _takeEvery2.default;
exports.takeLatestHelper = _takeLatest2.default;
exports.throttleHelper = _throttle2.default;
}, 1483, null, "redux-saga/lib/internal/sagaHelpers/index.js");
__d(/* redux-saga/lib/internal/sagaHelpers/takeEvery.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.default = takeEvery;

var _fsmIterator = require(1485           ); // 1485 = ./fsmIterator

var _fsmIterator2 = _interopRequireDefault(_fsmIterator);

var _io = require(1482   ); // 1482 = ../io

var _channel = require(1486        ); // 1486 = ../channel

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

function takeEvery(patternOrChannel, worker) {
  for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
    args[_key - 2] = arguments[_key];
  }

  var yTake = { done: false, value: (0, _io.take)(patternOrChannel) };
  var yFork = function yFork(ac) {
    return { done: false, value: _io.fork.apply(undefined, [worker].concat(args, [ac])) };
  };

  var action = void 0,
      setAction = function setAction(ac) {
    return action = ac;
  };

  return (0, _fsmIterator2.default)({
    q1: function q1() {
      return ['q2', yTake, setAction];
    },
    q2: function q2() {
      return action === _channel.END ? [_fsmIterator.qEnd] : ['q1', yFork(action)];
    }
  }, 'q1', 'takeEvery(' + (0, _fsmIterator.safeName)(patternOrChannel) + ', ' + worker.name + ')');
}
}, 1484, null, "redux-saga/lib/internal/sagaHelpers/takeEvery.js");
__d(/* redux-saga/lib/internal/sagaHelpers/fsmIterator.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.qEnd = undefined;
exports.safeName = safeName;
exports.default = fsmIterator;

var _utils = require(1481      ); // 1481 = ../utils

var done = { done: true, value: undefined };
var qEnd = exports.qEnd = {};

function safeName(patternOrChannel) {
  if (_utils.is.channel(patternOrChannel)) {
    return 'channel';
  } else if (Array.isArray(patternOrChannel)) {
    return String(patternOrChannel.map(function (entry) {
      return String(entry);
    }));
  } else {
    return String(patternOrChannel);
  }
}

function fsmIterator(fsm, q0) {
  var name = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'iterator';

  var updateState = void 0,
      qNext = q0;

  function next(arg, error) {
    if (qNext === qEnd) {
      return done;
    }

    if (error) {
      qNext = qEnd;
      throw error;
    } else {
      updateState && updateState(arg);

      var _fsm$qNext = fsm[qNext](),
          q = _fsm$qNext[0],
          output = _fsm$qNext[1],
          _updateState = _fsm$qNext[2];

      qNext = q;
      updateState = _updateState;
      return qNext === qEnd ? done : output;
    }
  }

  return (0, _utils.makeIterator)(next, function (error) {
    return next(null, error);
  }, name, true);
}
}, 1485, null, "redux-saga/lib/internal/sagaHelpers/fsmIterator.js");
__d(/* redux-saga/lib/internal/channel.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.UNDEFINED_INPUT_ERROR = exports.INVALID_BUFFER = exports.isEnd = exports.END = undefined;

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }return target;
};

exports.emitter = emitter;
exports.channel = channel;
exports.eventChannel = eventChannel;
exports.stdChannel = stdChannel;

var _utils = require(1481     ); // 1481 = ./utils

var _buffers = require(1487       ); // 1487 = ./buffers

var _scheduler = require(1488         ); // 1488 = ./scheduler

var CHANNEL_END_TYPE = '@@redux-saga/CHANNEL_END';
var END = exports.END = { type: CHANNEL_END_TYPE };
var isEnd = exports.isEnd = function isEnd(a) {
  return a && a.type === CHANNEL_END_TYPE;
};

function emitter() {
  var subscribers = [];

  function subscribe(sub) {
    subscribers.push(sub);
    return function () {
      return (0, _utils.remove)(subscribers, sub);
    };
  }

  function emit(item) {
    var arr = subscribers.slice();
    for (var i = 0, len = arr.length; i < len; i++) {
      arr[i](item);
    }
  }

  return {
    subscribe: subscribe,
    emit: emit
  };
}

var INVALID_BUFFER = exports.INVALID_BUFFER = 'invalid buffer passed to channel factory function';
var UNDEFINED_INPUT_ERROR = exports.UNDEFINED_INPUT_ERROR = 'Saga was provided with an undefined action';

if (process.env.NODE_ENV !== 'production') {
  exports.UNDEFINED_INPUT_ERROR = UNDEFINED_INPUT_ERROR += '\nHints:\n    - check that your Action Creator returns a non-undefined value\n    - if the Saga was started using runSaga, check that your subscribe source provides the action to its listeners\n  ';
}

function channel() {
  var buffer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _buffers.buffers.fixed();

  var closed = false;
  var takers = [];

  (0, _utils.check)(buffer, _utils.is.buffer, INVALID_BUFFER);

  function checkForbiddenStates() {
    if (closed && takers.length) {
      throw (0, _utils.internalErr)('Cannot have a closed channel with pending takers');
    }
    if (takers.length && !buffer.isEmpty()) {
      throw (0, _utils.internalErr)('Cannot have pending takers with non empty buffer');
    }
  }

  function put(input) {
    checkForbiddenStates();
    (0, _utils.check)(input, _utils.is.notUndef, UNDEFINED_INPUT_ERROR);
    if (closed) {
      return;
    }
    if (!takers.length) {
      return buffer.put(input);
    }
    for (var i = 0; i < takers.length; i++) {
      var cb = takers[i];
      if (!cb[_utils.MATCH] || cb[_utils.MATCH](input)) {
        takers.splice(i, 1);
        return cb(input);
      }
    }
  }

  function take(cb) {
    checkForbiddenStates();
    (0, _utils.check)(cb, _utils.is.func, "channel.take's callback must be a function");

    if (closed && buffer.isEmpty()) {
      cb(END);
    } else if (!buffer.isEmpty()) {
      cb(buffer.take());
    } else {
      takers.push(cb);
      cb.cancel = function () {
        return (0, _utils.remove)(takers, cb);
      };
    }
  }

  function flush(cb) {
    checkForbiddenStates();
    (0, _utils.check)(cb, _utils.is.func, "channel.flush' callback must be a function");
    if (closed && buffer.isEmpty()) {
      cb(END);
      return;
    }
    cb(buffer.flush());
  }

  function close() {
    checkForbiddenStates();
    if (!closed) {
      closed = true;
      if (takers.length) {
        var arr = takers;
        takers = [];
        for (var i = 0, len = arr.length; i < len; i++) {
          arr[i](END);
        }
      }
    }
  }

  return {
    take: take,
    put: put,
    flush: flush,
    close: close,
    get __takers__() {
      return takers;
    },
    get __closed__() {
      return closed;
    }
  };
}

function eventChannel(subscribe) {
  var buffer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _buffers.buffers.none();
  var matcher = arguments[2];

  if (arguments.length > 2) {
    (0, _utils.check)(matcher, _utils.is.func, 'Invalid match function passed to eventChannel');
  }

  var chan = channel(buffer);
  var close = function close() {
    if (!chan.__closed__) {
      if (unsubscribe) {
        unsubscribe();
      }
      chan.close();
    }
  };
  var unsubscribe = subscribe(function (input) {
    if (isEnd(input)) {
      close();
      return;
    }
    if (matcher && !matcher(input)) {
      return;
    }
    chan.put(input);
  });
  if (chan.__closed__) {
    unsubscribe();
  }

  if (!_utils.is.func(unsubscribe)) {
    throw new Error('in eventChannel: subscribe should return a function to unsubscribe');
  }

  return {
    take: chan.take,
    flush: chan.flush,
    close: close
  };
}

function stdChannel(subscribe) {
  var chan = eventChannel(function (cb) {
    return subscribe(function (input) {
      if (input[_utils.SAGA_ACTION]) {
        cb(input);
        return;
      }
      (0, _scheduler.asap)(function () {
        return cb(input);
      });
    });
  });

  return _extends({}, chan, {
    take: function take(cb, matcher) {
      if (arguments.length > 1) {
        (0, _utils.check)(matcher, _utils.is.func, "channel.take's matcher argument must be a function");
        cb[_utils.MATCH] = matcher;
      }
      chan.take(cb);
    }
  });
}
}, 1486, null, "redux-saga/lib/internal/channel.js");
__d(/* redux-saga/lib/internal/buffers.js */function(global, require, module, exports) {"use strict";

exports.__esModule = true;
exports.buffers = exports.BUFFER_OVERFLOW = undefined;

var _utils = require(1481     ); // 1481 = ./utils

var BUFFER_OVERFLOW = exports.BUFFER_OVERFLOW = "Channel's Buffer overflow!";

var ON_OVERFLOW_THROW = 1;
var ON_OVERFLOW_DROP = 2;
var ON_OVERFLOW_SLIDE = 3;
var ON_OVERFLOW_EXPAND = 4;

var zeroBuffer = { isEmpty: _utils.kTrue, put: _utils.noop, take: _utils.noop };

function ringBuffer() {
  var limit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;
  var overflowAction = arguments[1];

  var arr = new Array(limit);
  var length = 0;
  var pushIndex = 0;
  var popIndex = 0;

  var push = function push(it) {
    arr[pushIndex] = it;
    pushIndex = (pushIndex + 1) % limit;
    length++;
  };

  var take = function take() {
    if (length != 0) {
      var it = arr[popIndex];
      arr[popIndex] = null;
      length--;
      popIndex = (popIndex + 1) % limit;
      return it;
    }
  };

  var flush = function flush() {
    var items = [];
    while (length) {
      items.push(take());
    }
    return items;
  };

  return {
    isEmpty: function isEmpty() {
      return length == 0;
    },
    put: function put(it) {
      if (length < limit) {
        push(it);
      } else {
        var doubledLimit = void 0;
        switch (overflowAction) {
          case ON_OVERFLOW_THROW:
            throw new Error(BUFFER_OVERFLOW);
          case ON_OVERFLOW_SLIDE:
            arr[pushIndex] = it;
            pushIndex = (pushIndex + 1) % limit;
            popIndex = pushIndex;
            break;
          case ON_OVERFLOW_EXPAND:
            doubledLimit = 2 * limit;

            arr = flush();

            length = arr.length;
            pushIndex = arr.length;
            popIndex = 0;

            arr.length = doubledLimit;
            limit = doubledLimit;

            push(it);
            break;
          default:
        }
      }
    },
    take: take,
    flush: flush
  };
}

var buffers = exports.buffers = {
  none: function none() {
    return zeroBuffer;
  },
  fixed: function fixed(limit) {
    return ringBuffer(limit, ON_OVERFLOW_THROW);
  },
  dropping: function dropping(limit) {
    return ringBuffer(limit, ON_OVERFLOW_DROP);
  },
  sliding: function sliding(limit) {
    return ringBuffer(limit, ON_OVERFLOW_SLIDE);
  },
  expanding: function expanding(initialSize) {
    return ringBuffer(initialSize, ON_OVERFLOW_EXPAND);
  }
};
}, 1487, null, "redux-saga/lib/internal/buffers.js");
__d(/* redux-saga/lib/internal/scheduler.js */function(global, require, module, exports) {"use strict";

exports.__esModule = true;
exports.asap = asap;
exports.suspend = suspend;
exports.flush = flush;
var queue = [];

var semaphore = 0;

function exec(task) {
  try {
    suspend();
    task();
  } finally {
    release();
  }
}

function asap(task) {
  queue.push(task);

  if (!semaphore) {
    suspend();
    flush();
  }
}

function suspend() {
  semaphore++;
}

function release() {
  semaphore--;
}

function flush() {
  release();

  var task = void 0;
  while (!semaphore && (task = queue.shift()) !== undefined) {
    exec(task);
  }
}
}, 1488, null, "redux-saga/lib/internal/scheduler.js");
__d(/* redux-saga/lib/internal/sagaHelpers/takeLatest.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.default = takeLatest;

var _fsmIterator = require(1485           ); // 1485 = ./fsmIterator

var _fsmIterator2 = _interopRequireDefault(_fsmIterator);

var _io = require(1482   ); // 1482 = ../io

var _channel = require(1486        ); // 1486 = ../channel

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

function takeLatest(patternOrChannel, worker) {
  for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
    args[_key - 2] = arguments[_key];
  }

  var yTake = { done: false, value: (0, _io.take)(patternOrChannel) };
  var yFork = function yFork(ac) {
    return { done: false, value: _io.fork.apply(undefined, [worker].concat(args, [ac])) };
  };
  var yCancel = function yCancel(task) {
    return { done: false, value: (0, _io.cancel)(task) };
  };

  var task = void 0,
      action = void 0;
  var setTask = function setTask(t) {
    return task = t;
  };
  var setAction = function setAction(ac) {
    return action = ac;
  };

  return (0, _fsmIterator2.default)({
    q1: function q1() {
      return ['q2', yTake, setAction];
    },
    q2: function q2() {
      return action === _channel.END ? [_fsmIterator.qEnd] : task ? ['q3', yCancel(task)] : ['q1', yFork(action), setTask];
    },
    q3: function q3() {
      return ['q1', yFork(action), setTask];
    }
  }, 'q1', 'takeLatest(' + (0, _fsmIterator.safeName)(patternOrChannel) + ', ' + worker.name + ')');
}
}, 1489, null, "redux-saga/lib/internal/sagaHelpers/takeLatest.js");
__d(/* redux-saga/lib/internal/sagaHelpers/throttle.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.default = throttle;

var _fsmIterator = require(1485           ); // 1485 = ./fsmIterator

var _fsmIterator2 = _interopRequireDefault(_fsmIterator);

var _io = require(1482   ); // 1482 = ../io

var _channel = require(1486        ); // 1486 = ../channel

var _buffers = require(1487        ); // 1487 = ../buffers

var _utils = require(1481      ); // 1481 = ../utils

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

function throttle(delayLength, pattern, worker) {
  for (var _len = arguments.length, args = Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {
    args[_key - 3] = arguments[_key];
  }

  var action = void 0,
      channel = void 0;

  var yActionChannel = { done: false, value: (0, _io.actionChannel)(pattern, _buffers.buffers.sliding(1)) };
  var yTake = function yTake() {
    return { done: false, value: (0, _io.take)(channel) };
  };
  var yFork = function yFork(ac) {
    return { done: false, value: _io.fork.apply(undefined, [worker].concat(args, [ac])) };
  };
  var yDelay = { done: false, value: (0, _io.call)(_utils.delay, delayLength) };

  var setAction = function setAction(ac) {
    return action = ac;
  };
  var setChannel = function setChannel(ch) {
    return channel = ch;
  };

  return (0, _fsmIterator2.default)({
    q1: function q1() {
      return ['q2', yActionChannel, setChannel];
    },
    q2: function q2() {
      return ['q3', yTake(), setAction];
    },
    q3: function q3() {
      return action === _channel.END ? [_fsmIterator.qEnd] : ['q4', yFork(action)];
    },
    q4: function q4() {
      return ['q2', yDelay];
    }
  }, 'q1', 'throttle(' + (0, _fsmIterator.safeName)(pattern) + ', ' + worker.name + ')');
}
}, 1490, null, "redux-saga/lib/internal/sagaHelpers/throttle.js");
__d(/* redux-saga/lib/internal/proc.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.TASK_CANCEL = exports.CHANNEL_END = exports.NOT_ITERATOR_ERROR = undefined;

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }return target;
};

var _typeof = typeof Symbol === "function" && typeof (typeof Symbol === "function" ? Symbol.iterator : "@@iterator") === "symbol" ? function (obj) {
  return typeof obj;
} : function (obj) {
  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== (typeof Symbol === "function" ? Symbol.prototype : "@@prototype") ? "symbol" : typeof obj;
};

exports.default = proc;

var _utils = require(1481     ); // 1481 = ./utils

var _scheduler = require(1488         ); // 1488 = ./scheduler

var _io = require(1482  ); // 1482 = ./io

var _channel = require(1486       ); // 1486 = ./channel

var _buffers = require(1487       ); // 1487 = ./buffers

function _defineEnumerableProperties(obj, descs) {
  for (var key in descs) {
    var desc = descs[key];desc.configurable = desc.enumerable = true;if ("value" in desc) desc.writable = true;Object.defineProperty(obj, key, desc);
  }return obj;
}

var NOT_ITERATOR_ERROR = exports.NOT_ITERATOR_ERROR = 'proc first argument (Saga function result) must be an iterator';

var CHANNEL_END = exports.CHANNEL_END = {
  toString: function toString() {
    return '@@redux-saga/CHANNEL_END';
  }
};
var TASK_CANCEL = exports.TASK_CANCEL = {
  toString: function toString() {
    return '@@redux-saga/TASK_CANCEL';
  }
};

var matchers = {
  wildcard: function wildcard() {
    return _utils.kTrue;
  },
  default: function _default(pattern) {
    return (typeof pattern === 'undefined' ? 'undefined' : _typeof(pattern)) === 'symbol' ? function (input) {
      return input.type === pattern;
    } : function (input) {
      return input.type === String(pattern);
    };
  },
  array: function array(patterns) {
    return function (input) {
      return patterns.some(function (p) {
        return matcher(p)(input);
      });
    };
  },
  predicate: function predicate(_predicate) {
    return function (input) {
      return _predicate(input);
    };
  }
};

function matcher(pattern) {
  return (pattern === '*' ? matchers.wildcard : _utils.is.array(pattern) ? matchers.array : _utils.is.stringableFunc(pattern) ? matchers.default : _utils.is.func(pattern) ? matchers.predicate : matchers.default)(pattern);
}

function forkQueue(name, mainTask, cb) {
  var tasks = [],
      result = void 0,
      completed = false;
  addTask(mainTask);

  function abort(err) {
    cancelAll();
    cb(err, true);
  }

  function addTask(task) {
    tasks.push(task);
    task.cont = function (res, isErr) {
      if (completed) {
        return;
      }

      (0, _utils.remove)(tasks, task);
      task.cont = _utils.noop;
      if (isErr) {
        abort(res);
      } else {
        if (task === mainTask) {
          result = res;
        }
        if (!tasks.length) {
          completed = true;
          cb(result);
        }
      }
    };
  }

  function cancelAll() {
    if (completed) {
      return;
    }
    completed = true;
    tasks.forEach(function (t) {
      t.cont = _utils.noop;
      t.cancel();
    });
    tasks = [];
  }

  return {
    addTask: addTask,
    cancelAll: cancelAll,
    abort: abort,
    getTasks: function getTasks() {
      return tasks;
    },
    taskNames: function taskNames() {
      return tasks.map(function (t) {
        return t.name;
      });
    }
  };
}

function createTaskIterator(_ref) {
  var context = _ref.context,
      fn = _ref.fn,
      args = _ref.args;

  if (_utils.is.iterator(fn)) {
    return fn;
  }

  var result = void 0,
      error = void 0;
  try {
    result = fn.apply(context, args);
  } catch (err) {
    error = err;
  }

  if (_utils.is.iterator(result)) {
    return result;
  }

  return error ? (0, _utils.makeIterator)(function () {
    throw error;
  }) : (0, _utils.makeIterator)(function () {
    var pc = void 0;
    var eff = { done: false, value: result };
    var ret = function ret(value) {
      return { done: true, value: value };
    };
    return function (arg) {
      if (!pc) {
        pc = true;
        return eff;
      } else {
        return ret(arg);
      }
    };
  }());
}

var wrapHelper = function wrapHelper(helper) {
  return { fn: helper };
};

function proc(iterator) {
  var subscribe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {
    return _utils.noop;
  };
  var dispatch = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _utils.noop;
  var getState = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : _utils.noop;
  var parentContext = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};
  var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};
  var parentEffectId = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 0;
  var name = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 'anonymous';
  var cont = arguments[8];

  (0, _utils.check)(iterator, _utils.is.iterator, NOT_ITERATOR_ERROR);

  var effectsString = '[...effects]';
  var runParallelEffect = (0, _utils.deprecate)(runAllEffect, (0, _utils.updateIncentive)(effectsString, 'all(' + effectsString + ')'));

  var sagaMonitor = options.sagaMonitor,
      logger = options.logger,
      onError = options.onError;

  var log = logger || _utils.log;
  var stdChannel = (0, _channel.stdChannel)(subscribe);
  var taskContext = Object.create(parentContext);

  next.cancel = _utils.noop;

  var task = newTask(parentEffectId, name, iterator, cont);
  var mainTask = { name: name, cancel: cancelMain, isRunning: true };
  var taskQueue = forkQueue(name, mainTask, end);

  function cancelMain() {
    if (mainTask.isRunning && !mainTask.isCancelled) {
      mainTask.isCancelled = true;
      next(TASK_CANCEL);
    }
  }

  function cancel() {
    if (iterator._isRunning && !iterator._isCancelled) {
      iterator._isCancelled = true;
      taskQueue.cancelAll();

      end(TASK_CANCEL);
    }
  }

  cont && (cont.cancel = cancel);

  iterator._isRunning = true;

  next();

  return task;

  function next(arg, isErr) {
    if (!mainTask.isRunning) {
      throw new Error('Trying to resume an already finished generator');
    }

    try {
      var result = void 0;
      if (isErr) {
        result = iterator.throw(arg);
      } else if (arg === TASK_CANCEL) {
        mainTask.isCancelled = true;

        next.cancel();

        result = _utils.is.func(iterator.return) ? iterator.return(TASK_CANCEL) : { done: true, value: TASK_CANCEL };
      } else if (arg === CHANNEL_END) {
        result = _utils.is.func(iterator.return) ? iterator.return() : { done: true };
      } else {
        result = iterator.next(arg);
      }

      if (!result.done) {
        runEffect(result.value, parentEffectId, '', next);
      } else {
        mainTask.isMainRunning = false;
        mainTask.cont && mainTask.cont(result.value);
      }
    } catch (error) {
      if (mainTask.isCancelled) {
        log('error', 'uncaught at ' + name, error.message);
      }
      mainTask.isMainRunning = false;
      mainTask.cont(error, true);
    }
  }

  function end(result, isErr) {
    iterator._isRunning = false;
    stdChannel.close();
    if (!isErr) {
      if (process.env.NODE_ENV === 'development' && result === TASK_CANCEL) {
        log('info', name + ' has been cancelled', '');
      }
      iterator._result = result;
      iterator._deferredEnd && iterator._deferredEnd.resolve(result);
    } else {
      if (result instanceof Error) {
        result.sagaStack = 'at ' + name + ' \n ' + (result.sagaStack || result.stack);
      }
      if (!task.cont) {
        log('error', 'uncaught', result.sagaStack || result.stack);
        if (result instanceof Error && onError) {
          onError(result);
        }
      }
      iterator._error = result;
      iterator._isAborted = true;
      iterator._deferredEnd && iterator._deferredEnd.reject(result);
    }
    task.cont && task.cont(result, isErr);
    task.joiners.forEach(function (j) {
      return j.cb(result, isErr);
    });
    task.joiners = null;
  }

  function runEffect(effect, parentEffectId) {
    var label = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
    var cb = arguments[3];

    var effectId = (0, _utils.uid)();
    sagaMonitor && sagaMonitor.effectTriggered({ effectId: effectId, parentEffectId: parentEffectId, label: label, effect: effect });

    var effectSettled = void 0;

    function currCb(res, isErr) {
      if (effectSettled) {
        return;
      }

      effectSettled = true;
      cb.cancel = _utils.noop;
      if (sagaMonitor) {
        isErr ? sagaMonitor.effectRejected(effectId, res) : sagaMonitor.effectResolved(effectId, res);
      }
      cb(res, isErr);
    }

    currCb.cancel = _utils.noop;

    cb.cancel = function () {
      if (effectSettled) {
        return;
      }

      effectSettled = true;

      try {
        currCb.cancel();
      } catch (err) {
        log('error', 'uncaught at ' + name, err.message);
      }
      currCb.cancel = _utils.noop;

      sagaMonitor && sagaMonitor.effectCancelled(effectId);
    };

    var data = void 0;

    return _utils.is.promise(effect) ? resolvePromise(effect, currCb) : _utils.is.helper(effect) ? runForkEffect(wrapHelper(effect), effectId, currCb) : _utils.is.iterator(effect) ? resolveIterator(effect, effectId, name, currCb) : _utils.is.array(effect) ? runParallelEffect(effect, effectId, currCb) : (data = _io.asEffect.take(effect)) ? runTakeEffect(data, currCb) : (data = _io.asEffect.put(effect)) ? runPutEffect(data, currCb) : (data = _io.asEffect.all(effect)) ? runAllEffect(data, effectId, currCb) : (data = _io.asEffect.race(effect)) ? runRaceEffect(data, effectId, currCb) : (data = _io.asEffect.call(effect)) ? runCallEffect(data, effectId, currCb) : (data = _io.asEffect.cps(effect)) ? runCPSEffect(data, currCb) : (data = _io.asEffect.fork(effect)) ? runForkEffect(data, effectId, currCb) : (data = _io.asEffect.join(effect)) ? runJoinEffect(data, currCb) : (data = _io.asEffect.cancel(effect)) ? runCancelEffect(data, currCb) : (data = _io.asEffect.select(effect)) ? runSelectEffect(data, currCb) : (data = _io.asEffect.actionChannel(effect)) ? runChannelEffect(data, currCb) : (data = _io.asEffect.flush(effect)) ? runFlushEffect(data, currCb) : (data = _io.asEffect.cancelled(effect)) ? runCancelledEffect(data, currCb) : (data = _io.asEffect.getContext(effect)) ? runGetContextEffect(data, currCb) : (data = _io.asEffect.setContext(effect)) ? runSetContextEffect(data, currCb) : currCb(effect);
  }

  function resolvePromise(promise, cb) {
    var cancelPromise = promise[_utils.CANCEL];
    if (_utils.is.func(cancelPromise)) {
      cb.cancel = cancelPromise;
    } else if (_utils.is.func(promise.abort)) {
      cb.cancel = function () {
        return promise.abort();
      };
    }
    promise.then(cb, function (error) {
      return cb(error, true);
    });
  }

  function resolveIterator(iterator, effectId, name, cb) {
    proc(iterator, subscribe, dispatch, getState, taskContext, options, effectId, name, cb);
  }

  function runTakeEffect(_ref2, cb) {
    var channel = _ref2.channel,
        pattern = _ref2.pattern,
        maybe = _ref2.maybe;

    channel = channel || stdChannel;
    var takeCb = function takeCb(inp) {
      return inp instanceof Error ? cb(inp, true) : (0, _channel.isEnd)(inp) && !maybe ? cb(CHANNEL_END) : cb(inp);
    };
    try {
      channel.take(takeCb, matcher(pattern));
    } catch (err) {
      return cb(err, true);
    }
    cb.cancel = takeCb.cancel;
  }

  function runPutEffect(_ref3, cb) {
    var channel = _ref3.channel,
        action = _ref3.action,
        resolve = _ref3.resolve;

    (0, _scheduler.asap)(function () {
      var result = void 0;
      try {
        result = (channel ? channel.put : dispatch)(action);
      } catch (error) {
        if (channel || resolve) return cb(error, true);
        log('error', 'uncaught at ' + name, error.stack || error.message || error);
      }

      if (resolve && _utils.is.promise(result)) {
        resolvePromise(result, cb);
      } else {
        return cb(result);
      }
    });
  }

  function runCallEffect(_ref4, effectId, cb) {
    var context = _ref4.context,
        fn = _ref4.fn,
        args = _ref4.args;

    var result = void 0;

    try {
      result = fn.apply(context, args);
    } catch (error) {
      return cb(error, true);
    }
    return _utils.is.promise(result) ? resolvePromise(result, cb) : _utils.is.iterator(result) ? resolveIterator(result, effectId, fn.name, cb) : cb(result);
  }

  function runCPSEffect(_ref5, cb) {
    var context = _ref5.context,
        fn = _ref5.fn,
        args = _ref5.args;

    try {
      var cpsCb = function cpsCb(err, res) {
        return _utils.is.undef(err) ? cb(res) : cb(err, true);
      };
      fn.apply(context, args.concat(cpsCb));
      if (cpsCb.cancel) {
        cb.cancel = function () {
          return cpsCb.cancel();
        };
      }
    } catch (error) {
      return cb(error, true);
    }
  }

  function runForkEffect(_ref6, effectId, cb) {
    var context = _ref6.context,
        fn = _ref6.fn,
        args = _ref6.args,
        detached = _ref6.detached;

    var taskIterator = createTaskIterator({ context: context, fn: fn, args: args });

    try {
      (0, _scheduler.suspend)();
      var _task = proc(taskIterator, subscribe, dispatch, getState, taskContext, options, effectId, fn.name, detached ? null : _utils.noop);

      if (detached) {
        cb(_task);
      } else {
        if (taskIterator._isRunning) {
          taskQueue.addTask(_task);
          cb(_task);
        } else if (taskIterator._error) {
          taskQueue.abort(taskIterator._error);
        } else {
          cb(_task);
        }
      }
    } finally {
      (0, _scheduler.flush)();
    }
  }

  function runJoinEffect(t, cb) {
    if (t.isRunning()) {
      var joiner = { task: task, cb: cb };
      cb.cancel = function () {
        return (0, _utils.remove)(t.joiners, joiner);
      };
      t.joiners.push(joiner);
    } else {
      t.isAborted() ? cb(t.error(), true) : cb(t.result());
    }
  }

  function runCancelEffect(taskToCancel, cb) {
    if (taskToCancel === _utils.SELF_CANCELLATION) {
      taskToCancel = task;
    }
    if (taskToCancel.isRunning()) {
      taskToCancel.cancel();
    }
    cb();
  }

  function runAllEffect(effects, effectId, cb) {
    var keys = Object.keys(effects);

    if (!keys.length) {
      return cb(_utils.is.array(effects) ? [] : {});
    }

    var completedCount = 0;
    var completed = void 0;
    var results = {};
    var childCbs = {};

    function checkEffectEnd() {
      if (completedCount === keys.length) {
        completed = true;
        cb(_utils.is.array(effects) ? _utils.array.from(_extends({}, results, { length: keys.length })) : results);
      }
    }

    keys.forEach(function (key) {
      var chCbAtKey = function chCbAtKey(res, isErr) {
        if (completed) {
          return;
        }
        if (isErr || (0, _channel.isEnd)(res) || res === CHANNEL_END || res === TASK_CANCEL) {
          cb.cancel();
          cb(res, isErr);
        } else {
          results[key] = res;
          completedCount++;
          checkEffectEnd();
        }
      };
      chCbAtKey.cancel = _utils.noop;
      childCbs[key] = chCbAtKey;
    });

    cb.cancel = function () {
      if (!completed) {
        completed = true;
        keys.forEach(function (key) {
          return childCbs[key].cancel();
        });
      }
    };

    keys.forEach(function (key) {
      return runEffect(effects[key], effectId, key, childCbs[key]);
    });
  }

  function runRaceEffect(effects, effectId, cb) {
    var completed = void 0;
    var keys = Object.keys(effects);
    var childCbs = {};

    keys.forEach(function (key) {
      var chCbAtKey = function chCbAtKey(res, isErr) {
        if (completed) {
          return;
        }

        if (isErr) {
          cb.cancel();
          cb(res, true);
        } else if (!(0, _channel.isEnd)(res) && res !== CHANNEL_END && res !== TASK_CANCEL) {
          var _cb;

          cb.cancel();
          completed = true;
          cb((_cb = {}, _cb[key] = res, _cb));
        }
      };
      chCbAtKey.cancel = _utils.noop;
      childCbs[key] = chCbAtKey;
    });

    cb.cancel = function () {
      if (!completed) {
        completed = true;
        keys.forEach(function (key) {
          return childCbs[key].cancel();
        });
      }
    };
    keys.forEach(function (key) {
      if (completed) {
        return;
      }
      runEffect(effects[key], effectId, key, childCbs[key]);
    });
  }

  function runSelectEffect(_ref7, cb) {
    var selector = _ref7.selector,
        args = _ref7.args;

    try {
      var state = selector.apply(undefined, [getState()].concat(args));
      cb(state);
    } catch (error) {
      cb(error, true);
    }
  }

  function runChannelEffect(_ref8, cb) {
    var pattern = _ref8.pattern,
        buffer = _ref8.buffer;

    var match = matcher(pattern);
    match.pattern = pattern;
    cb((0, _channel.eventChannel)(subscribe, buffer || _buffers.buffers.fixed(), match));
  }

  function runCancelledEffect(data, cb) {
    cb(!!mainTask.isCancelled);
  }

  function runFlushEffect(channel, cb) {
    channel.flush(cb);
  }

  function runGetContextEffect(prop, cb) {
    cb(taskContext[prop]);
  }

  function runSetContextEffect(props, cb) {
    _utils.object.assign(taskContext, props);
    cb();
  }

  function newTask(id, name, iterator, cont) {
    var _done, _ref9, _mutatorMap;

    iterator._deferredEnd = null;
    return _ref9 = {}, _ref9[_utils.TASK] = true, _ref9.id = id, _ref9.name = name, _done = 'done', _mutatorMap = {}, _mutatorMap[_done] = _mutatorMap[_done] || {}, _mutatorMap[_done].get = function () {
      if (iterator._deferredEnd) {
        return iterator._deferredEnd.promise;
      } else {
        var def = (0, _utils.deferred)();
        iterator._deferredEnd = def;
        if (!iterator._isRunning) {
          iterator._error ? def.reject(iterator._error) : def.resolve(iterator._result);
        }
        return def.promise;
      }
    }, _ref9.cont = cont, _ref9.joiners = [], _ref9.cancel = cancel, _ref9.isRunning = function isRunning() {
      return iterator._isRunning;
    }, _ref9.isCancelled = function isCancelled() {
      return iterator._isCancelled;
    }, _ref9.isAborted = function isAborted() {
      return iterator._isAborted;
    }, _ref9.result = function result() {
      return iterator._result;
    }, _ref9.error = function error() {
      return iterator._error;
    }, _ref9.setContext = function setContext(props) {
      (0, _utils.check)(props, _utils.is.object, (0, _utils.createSetContextWarning)('task', props));
      _utils.object.assign(taskContext, props);
    }, _defineEnumerableProperties(_ref9, _mutatorMap), _ref9;
  }
}
}, 1491, null, "redux-saga/lib/internal/proc.js");
__d(/* ramda/index.js */function(global, require, module, exports) {module.exports = {
  F: require(1493     ), // 1493 = ./src/F
  T: require(1497     ), // 1497 = ./src/T
  __: require(1498      ), // 1498 = ./src/__
  add: require(1499       ), // 1499 = ./src/add
  addIndex: require(1501            ), // 1501 = ./src/addIndex
  adjust: require(1506          ), // 1506 = ./src/adjust
  all: require(1508       ), // 1508 = ./src/all
  allPass: require(1515           ), // 1515 = ./src/allPass
  always: require(1494          ), // 1494 = ./src/always
  and: require(1531       ), // 1531 = ./src/and
  any: require(1532       ), // 1532 = ./src/any
  anyPass: require(1534           ), // 1534 = ./src/anyPass
  ap: require(1535      ), // 1535 = ./src/ap
  aperture: require(1536            ), // 1536 = ./src/aperture
  append: require(1539          ), // 1539 = ./src/append
  apply: require(1540         ), // 1540 = ./src/apply
  applySpec: require(1541             ), // 1541 = ./src/applySpec
  ascend: require(1543          ), // 1543 = ./src/ascend
  assoc: require(1544         ), // 1544 = ./src/assoc
  assocPath: require(1545             ), // 1545 = ./src/assocPath
  binary: require(1548          ), // 1548 = ./src/binary
  bind: require(1524        ), // 1524 = ./src/bind
  both: require(1550        ), // 1550 = ./src/both
  call: require(1554        ), // 1554 = ./src/call
  chain: require(1556         ), // 1556 = ./src/chain
  clamp: require(1561         ), // 1561 = ./src/clamp
  clone: require(1562         ), // 1562 = ./src/clone
  comparator: require(1566              ), // 1566 = ./src/comparator
  complement: require(1567              ), // 1567 = ./src/complement
  compose: require(1569           ), // 1569 = ./src/compose
  composeK: require(1576            ), // 1576 = ./src/composeK
  composeP: require(1577            ), // 1577 = ./src/composeP
  concat: require(1580          ), // 1580 = ./src/concat
  cond: require(1598        ), // 1598 = ./src/cond
  construct: require(1599             ), // 1599 = ./src/construct
  constructN: require(1600              ), // 1600 = ./src/constructN
  contains: require(1601            ), // 1601 = ./src/contains
  converge: require(1602            ), // 1602 = ./src/converge
  countBy: require(1603           ), // 1603 = ./src/countBy
  curry: require(1555         ), // 1555 = ./src/curry
  curryN: require(1503          ), // 1503 = ./src/curryN
  dec: require(1606       ), // 1606 = ./src/dec
  defaultTo: require(1607             ), // 1607 = ./src/defaultTo
  descend: require(1608           ), // 1608 = ./src/descend
  difference: require(1609              ), // 1609 = ./src/difference
  differenceWith: require(1610                  ), // 1610 = ./src/differenceWith
  dissoc: require(1612          ), // 1612 = ./src/dissoc
  dissocPath: require(1613              ), // 1613 = ./src/dissocPath
  divide: require(1616          ), // 1616 = ./src/divide
  drop: require(1617        ), // 1617 = ./src/drop
  dropLast: require(1619            ), // 1619 = ./src/dropLast
  dropLastWhile: require(1624                 ), // 1624 = ./src/dropLastWhile
  dropRepeats: require(1627               ), // 1627 = ./src/dropRepeats
  dropRepeatsWith: require(1629                   ), // 1629 = ./src/dropRepeatsWith
  dropWhile: require(1632             ), // 1632 = ./src/dropWhile
  either: require(1634          ), // 1634 = ./src/either
  empty: require(1636         ), // 1636 = ./src/empty
  endsWith: require(1637            ), // 1637 = ./src/endsWith
  eqBy: require(1639        ), // 1639 = ./src/eqBy
  eqProps: require(1640           ), // 1640 = ./src/eqProps
  equals: require(1585          ), // 1585 = ./src/equals
  evolve: require(1641          ), // 1641 = ./src/evolve
  filter: require(1594          ), // 1594 = ./src/filter
  find: require(1642        ), // 1642 = ./src/find
  findIndex: require(1644             ), // 1644 = ./src/findIndex
  findLast: require(1646            ), // 1646 = ./src/findLast
  findLastIndex: require(1648                 ), // 1648 = ./src/findLastIndex
  flatten: require(1650           ), // 1650 = ./src/flatten
  flip: require(1651        ), // 1651 = ./src/flip
  forEach: require(1652           ), // 1652 = ./src/forEach
  forEachObjIndexed: require(1653                     ), // 1653 = ./src/forEachObjIndexed
  fromPairs: require(1654             ), // 1654 = ./src/fromPairs
  groupBy: require(1655           ), // 1655 = ./src/groupBy
  groupWith: require(1656             ), // 1656 = ./src/groupWith
  gt: require(1657      ), // 1657 = ./src/gt
  gte: require(1658       ), // 1658 = ./src/gte
  has: require(1659       ), // 1659 = ./src/has
  hasIn: require(1660         ), // 1660 = ./src/hasIn
  head: require(1661        ), // 1661 = ./src/head
  identical: require(1589             ), // 1589 = ./src/identical
  identity: require(1662            ), // 1662 = ./src/identity
  ifElse: require(1664          ), // 1664 = ./src/ifElse
  inc: require(1665       ), // 1665 = ./src/inc
  indexBy: require(1666           ), // 1666 = ./src/indexBy
  indexOf: require(1667           ), // 1667 = ./src/indexOf
  init: require(1668        ), // 1668 = ./src/init
  innerJoin: require(1669             ), // 1669 = ./src/innerJoin
  insert: require(1670          ), // 1670 = ./src/insert
  insertAll: require(1671             ), // 1671 = ./src/insertAll
  intersection: require(1672                ), // 1672 = ./src/intersection
  intersectionWith: require(1676                    ), // 1676 = ./src/intersectionWith
  intersperse: require(1678               ), // 1678 = ./src/intersperse
  into: require(1679        ), // 1679 = ./src/into
  invert: require(1684          ), // 1684 = ./src/invert
  invertObj: require(1685             ), // 1685 = ./src/invertObj
  invoker: require(1686           ), // 1686 = ./src/invoker
  is: require(1687      ), // 1687 = ./src/is
  isEmpty: require(1688           ), // 1688 = ./src/isEmpty
  isNil: require(1547         ), // 1547 = ./src/isNil
  join: require(1689        ), // 1689 = ./src/join
  juxt: require(1690        ), // 1690 = ./src/juxt
  keys: require(1526        ), // 1526 = ./src/keys
  keysIn: require(1691          ), // 1691 = ./src/keysIn
  last: require(1630        ), // 1630 = ./src/last
  lastIndexOf: require(1692               ), // 1692 = ./src/lastIndexOf
  length: require(1693          ), // 1693 = ./src/length
  lens: require(1695        ), // 1695 = ./src/lens
  lensIndex: require(1696             ), // 1696 = ./src/lensIndex
  lensPath: require(1697            ), // 1697 = ./src/lensPath
  lensProp: require(1699            ), // 1699 = ./src/lensProp
  lift: require(1552        ), // 1552 = ./src/lift
  liftN: require(1553         ), // 1553 = ./src/liftN
  lt: require(1700      ), // 1700 = ./src/lt
  lte: require(1701       ), // 1701 = ./src/lte
  map: require(1518       ), // 1518 = ./src/map
  mapAccum: require(1702            ), // 1702 = ./src/mapAccum
  mapAccumRight: require(1703                 ), // 1703 = ./src/mapAccumRight
  mapObjIndexed: require(1704                 ), // 1704 = ./src/mapObjIndexed
  match: require(1705         ), // 1705 = ./src/match
  mathMod: require(1706           ), // 1706 = ./src/mathMod
  max: require(1516       ), // 1516 = ./src/max
  maxBy: require(1707         ), // 1707 = ./src/maxBy
  mean: require(1708        ), // 1708 = ./src/mean
  median: require(1710          ), // 1710 = ./src/median
  memoize: require(1711           ), // 1711 = ./src/memoize
  memoizeWith: require(1712               ), // 1712 = ./src/memoizeWith
  merge: require(1713         ), // 1713 = ./src/merge
  mergeAll: require(1714            ), // 1714 = ./src/mergeAll
  mergeDeepLeft: require(1715                 ), // 1715 = ./src/mergeDeepLeft
  mergeDeepRight: require(1718                  ), // 1718 = ./src/mergeDeepRight
  mergeDeepWith: require(1719                 ), // 1719 = ./src/mergeDeepWith
  mergeDeepWithKey: require(1716                    ), // 1716 = ./src/mergeDeepWithKey
  mergeWith: require(1720             ), // 1720 = ./src/mergeWith
  mergeWithKey: require(1717                ), // 1717 = ./src/mergeWithKey
  min: require(1721       ), // 1721 = ./src/min
  minBy: require(1722         ), // 1722 = ./src/minBy
  modulo: require(1723          ), // 1723 = ./src/modulo
  multiply: require(1724            ), // 1724 = ./src/multiply
  nAry: require(1549        ), // 1549 = ./src/nAry
  negate: require(1725          ), // 1725 = ./src/negate
  none: require(1726        ), // 1726 = ./src/none
  not: require(1568       ), // 1568 = ./src/not
  nth: require(1631       ), // 1631 = ./src/nth
  nthArg: require(1727          ), // 1727 = ./src/nthArg
  o: require(1728     ), // 1728 = ./src/o
  objOf: require(1683         ), // 1683 = ./src/objOf
  of: require(1729      ), // 1729 = ./src/of
  omit: require(1731        ), // 1731 = ./src/omit
  once: require(1732        ), // 1732 = ./src/once
  or: require(1635      ), // 1635 = ./src/or
  over: require(1733        ), // 1733 = ./src/over
  pair: require(1734        ), // 1734 = ./src/pair
  partial: require(1735           ), // 1735 = ./src/partial
  partialRight: require(1737                ), // 1737 = ./src/partialRight
  partition: require(1738             ), // 1738 = ./src/partition
  path: require(1698        ), // 1698 = ./src/path
  pathEq: require(1739          ), // 1739 = ./src/pathEq
  pathOr: require(1740          ), // 1740 = ./src/pathOr
  pathSatisfies: require(1741                 ), // 1741 = ./src/pathSatisfies
  pick: require(1742        ), // 1742 = ./src/pick
  pickAll: require(1743           ), // 1743 = ./src/pickAll
  pickBy: require(1744          ), // 1744 = ./src/pickBy
  pipe: require(1570        ), // 1570 = ./src/pipe
  pipeK: require(1745         ), // 1745 = ./src/pipeK
  pipeP: require(1578         ), // 1578 = ./src/pipeP
  pluck: require(1517         ), // 1517 = ./src/pluck
  prepend: require(1746           ), // 1746 = ./src/prepend
  product: require(1747           ), // 1747 = ./src/product
  project: require(1748           ), // 1748 = ./src/project
  prop: require(1529        ), // 1529 = ./src/prop
  propEq: require(1750          ), // 1750 = ./src/propEq
  propIs: require(1751          ), // 1751 = ./src/propIs
  propOr: require(1752          ), // 1752 = ./src/propOr
  propSatisfies: require(1753                 ), // 1753 = ./src/propSatisfies
  props: require(1754         ), // 1754 = ./src/props
  range: require(1755         ), // 1755 = ./src/range
  reduce: require(1530          ), // 1530 = ./src/reduce
  reduceBy: require(1604            ), // 1604 = ./src/reduceBy
  reduceRight: require(1756               ), // 1756 = ./src/reduceRight
  reduceWhile: require(1757               ), // 1757 = ./src/reduceWhile
  reduced: require(1758           ), // 1758 = ./src/reduced
  reject: require(1592          ), // 1592 = ./src/reject
  remove: require(1614          ), // 1614 = ./src/remove
  repeat: require(1759          ), // 1759 = ./src/repeat
  replace: require(1761           ), // 1761 = ./src/replace
  reverse: require(1575           ), // 1575 = ./src/reverse
  scan: require(1762        ), // 1762 = ./src/scan
  sequence: require(1763            ), // 1763 = ./src/sequence
  set: require(1764       ), // 1764 = ./src/set
  slice: require(1574         ), // 1574 = ./src/slice
  sort: require(1765        ), // 1765 = ./src/sort
  sortBy: require(1766          ), // 1766 = ./src/sortBy
  sortWith: require(1767            ), // 1767 = ./src/sortWith
  split: require(1768         ), // 1768 = ./src/split
  splitAt: require(1769           ), // 1769 = ./src/splitAt
  splitEvery: require(1770              ), // 1770 = ./src/splitEvery
  splitWhen: require(1771             ), // 1771 = ./src/splitWhen
  startsWith: require(1772              ), // 1772 = ./src/startsWith
  subtract: require(1773            ), // 1773 = ./src/subtract
  sum: require(1709       ), // 1709 = ./src/sum
  symmetricDifference: require(1774                       ), // 1774 = ./src/symmetricDifference
  symmetricDifferenceWith: require(1775                           ), // 1775 = ./src/symmetricDifferenceWith
  tail: require(1572        ), // 1572 = ./src/tail
  take: require(1621        ), // 1621 = ./src/take
  takeLast: require(1638            ), // 1638 = ./src/takeLast
  takeLastWhile: require(1776                 ), // 1776 = ./src/takeLastWhile
  takeWhile: require(1777             ), // 1777 = ./src/takeWhile
  tap: require(1779       ), // 1779 = ./src/tap
  test: require(1780        ), // 1780 = ./src/test
  times: require(1760         ), // 1760 = ./src/times
  toLower: require(1782           ), // 1782 = ./src/toLower
  toPairs: require(1783           ), // 1783 = ./src/toPairs
  toPairsIn: require(1784             ), // 1784 = ./src/toPairsIn
  toString: require(1581            ), // 1581 = ./src/toString
  toUpper: require(1785           ), // 1785 = ./src/toUpper
  transduce: require(1786             ), // 1786 = ./src/transduce
  transpose: require(1787             ), // 1787 = ./src/transpose
  traverse: require(1788            ), // 1788 = ./src/traverse
  trim: require(1789        ), // 1789 = ./src/trim
  tryCatch: require(1790            ), // 1790 = ./src/tryCatch
  type: require(1565        ), // 1565 = ./src/type
  unapply: require(1791           ), // 1791 = ./src/unapply
  unary: require(1792         ), // 1792 = ./src/unary
  uncurryN: require(1793            ), // 1793 = ./src/uncurryN
  unfold: require(1794          ), // 1794 = ./src/unfold
  union: require(1795         ), // 1795 = ./src/union
  unionWith: require(1796             ), // 1796 = ./src/unionWith
  uniq: require(1673        ), // 1673 = ./src/uniq
  uniqBy: require(1674          ), // 1674 = ./src/uniqBy
  uniqWith: require(1677            ), // 1677 = ./src/uniqWith
  unless: require(1797          ), // 1797 = ./src/unless
  unnest: require(1798          ), // 1798 = ./src/unnest
  until: require(1799         ), // 1799 = ./src/until
  update: require(1615          ), // 1615 = ./src/update
  useWith: require(1749           ), // 1749 = ./src/useWith
  values: require(1542          ), // 1542 = ./src/values
  valuesIn: require(1800            ), // 1800 = ./src/valuesIn
  view: require(1801        ), // 1801 = ./src/view
  when: require(1802        ), // 1802 = ./src/when
  where: require(1803         ), // 1803 = ./src/where
  whereEq: require(1804           ), // 1804 = ./src/whereEq
  without: require(1805           ), // 1805 = ./src/without
  xprod: require(1806         ), // 1806 = ./src/xprod
  zip: require(1807       ), // 1807 = ./src/zip
  zipObj: require(1808          ), // 1808 = ./src/zipObj
  zipWith: require(1809           ) // 1809 = ./src/zipWith
};
}, 1492, null, "ramda/index.js");
__d(/* ramda/src/F.js */function(global, require, module, exports) {var always = require(1494      ); // 1494 = ./always

module.exports = always(false);
}, 1493, null, "ramda/src/F.js");
__d(/* ramda/src/always.js */function(global, require, module, exports) {var _curry1 = require(1495                ); // 1495 = ./internal/_curry1

module.exports = _curry1(function always(val) {
  return function () {
    return val;
  };
});
}, 1494, null, "ramda/src/always.js");
__d(/* ramda/src/internal/_curry1.js */function(global, require, module, exports) {var _isPlaceholder = require(1496              ); // 1496 = ./_isPlaceholder

module.exports = function _curry1(fn) {
  return function f1(a) {
    if (arguments.length === 0 || _isPlaceholder(a)) {
      return f1;
    } else {
      return fn.apply(this, arguments);
    }
  };
};
}, 1495, null, "ramda/src/internal/_curry1.js");
__d(/* ramda/src/internal/_isPlaceholder.js */function(global, require, module, exports) {module.exports = function _isPlaceholder(a) {
       return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;
};
}, 1496, null, "ramda/src/internal/_isPlaceholder.js");
__d(/* ramda/src/T.js */function(global, require, module, exports) {var always = require(1494      ); // 1494 = ./always

module.exports = always(true);
}, 1497, null, "ramda/src/T.js");
__d(/* ramda/src/__.js */function(global, require, module, exports) {
module.exports = { '@@functional/placeholder': true };
}, 1498, null, "ramda/src/__.js");
__d(/* ramda/src/add.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2

module.exports = _curry2(function add(a, b) {
  return Number(a) + Number(b);
});
}, 1499, null, "ramda/src/add.js");
__d(/* ramda/src/internal/_curry2.js */function(global, require, module, exports) {var _curry1 = require(1495       ); // 1495 = ./_curry1
var _isPlaceholder = require(1496              ); // 1496 = ./_isPlaceholder

module.exports = function _curry2(fn) {
  return function f2(a, b) {
    switch (arguments.length) {
      case 0:
        return f2;
      case 1:
        return _isPlaceholder(a) ? f2 : _curry1(function (_b) {
          return fn(a, _b);
        });
      default:
        return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {
          return fn(_a, b);
        }) : _isPlaceholder(b) ? _curry1(function (_b) {
          return fn(a, _b);
        }) : fn(a, b);
    }
  };
};
}, 1500, null, "ramda/src/internal/_curry2.js");
__d(/* ramda/src/addIndex.js */function(global, require, module, exports) {var _concat = require(1502                ); // 1502 = ./internal/_concat
var _curry1 = require(1495                ); // 1495 = ./internal/_curry1
var curryN = require(1503      ); // 1503 = ./curryN

module.exports = _curry1(function addIndex(fn) {
  return curryN(fn.length, function () {
    var idx = 0;
    var origFn = arguments[0];
    var list = arguments[arguments.length - 1];
    var args = Array.prototype.slice.call(arguments, 0);
    args[0] = function () {
      var result = origFn.apply(this, _concat(arguments, [idx, list]));
      idx += 1;
      return result;
    };
    return fn.apply(this, args);
  });
});
}, 1501, null, "ramda/src/addIndex.js");
__d(/* ramda/src/internal/_concat.js */function(global, require, module, exports) {
module.exports = function _concat(set1, set2) {
  set1 = set1 || [];
  set2 = set2 || [];
  var idx;
  var len1 = set1.length;
  var len2 = set2.length;
  var result = [];

  idx = 0;
  while (idx < len1) {
    result[result.length] = set1[idx];
    idx += 1;
  }
  idx = 0;
  while (idx < len2) {
    result[result.length] = set2[idx];
    idx += 1;
  }
  return result;
};
}, 1502, null, "ramda/src/internal/_concat.js");
__d(/* ramda/src/curryN.js */function(global, require, module, exports) {var _arity = require(1504               ); // 1504 = ./internal/_arity
var _curry1 = require(1495                ); // 1495 = ./internal/_curry1
var _curry2 = require(1500                ); // 1500 = ./internal/_curry2
var _curryN = require(1505                ); // 1505 = ./internal/_curryN

module.exports = _curry2(function curryN(length, fn) {
  if (length === 1) {
    return _curry1(fn);
  }
  return _arity(length, _curryN(length, [], fn));
});
}, 1503, null, "ramda/src/curryN.js");
__d(/* ramda/src/internal/_arity.js */function(global, require, module, exports) {module.exports = function _arity(n, fn) {
  switch (n) {
    case 0:
      return function () {
        return fn.apply(this, arguments);
      };
    case 1:
      return function (a0) {
        return fn.apply(this, arguments);
      };
    case 2:
      return function (a0, a1) {
        return fn.apply(this, arguments);
      };
    case 3:
      return function (a0, a1, a2) {
        return fn.apply(this, arguments);
      };
    case 4:
      return function (a0, a1, a2, a3) {
        return fn.apply(this, arguments);
      };
    case 5:
      return function (a0, a1, a2, a3, a4) {
        return fn.apply(this, arguments);
      };
    case 6:
      return function (a0, a1, a2, a3, a4, a5) {
        return fn.apply(this, arguments);
      };
    case 7:
      return function (a0, a1, a2, a3, a4, a5, a6) {
        return fn.apply(this, arguments);
      };
    case 8:
      return function (a0, a1, a2, a3, a4, a5, a6, a7) {
        return fn.apply(this, arguments);
      };
    case 9:
      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {
        return fn.apply(this, arguments);
      };
    case 10:
      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {
        return fn.apply(this, arguments);
      };
    default:
      throw new Error('First argument to _arity must be a non-negative integer no greater than ten');
  }
};
}, 1504, null, "ramda/src/internal/_arity.js");
__d(/* ramda/src/internal/_curryN.js */function(global, require, module, exports) {var _arity = require(1504      ); // 1504 = ./_arity
var _isPlaceholder = require(1496              ); // 1496 = ./_isPlaceholder

module.exports = function _curryN(length, received, fn) {
  return function () {
    var combined = [];
    var argsIdx = 0;
    var left = length;
    var combinedIdx = 0;
    while (combinedIdx < received.length || argsIdx < arguments.length) {
      var result;
      if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {
        result = received[combinedIdx];
      } else {
        result = arguments[argsIdx];
        argsIdx += 1;
      }
      combined[combinedIdx] = result;
      if (!_isPlaceholder(result)) {
        left -= 1;
      }
      combinedIdx += 1;
    }
    return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));
  };
};
}, 1505, null, "ramda/src/internal/_curryN.js");
__d(/* ramda/src/adjust.js */function(global, require, module, exports) {var _concat = require(1502                ); // 1502 = ./internal/_concat
var _curry3 = require(1507                ); // 1507 = ./internal/_curry3

module.exports = _curry3(function adjust(fn, idx, list) {
  if (idx >= list.length || idx < -list.length) {
    return list;
  }
  var start = idx < 0 ? list.length : 0;
  var _idx = start + idx;
  var _list = _concat(list);
  _list[_idx] = fn(list[_idx]);
  return _list;
});
}, 1506, null, "ramda/src/adjust.js");
__d(/* ramda/src/internal/_curry3.js */function(global, require, module, exports) {var _curry1 = require(1495       ); // 1495 = ./_curry1
var _curry2 = require(1500       ); // 1500 = ./_curry2
var _isPlaceholder = require(1496              ); // 1496 = ./_isPlaceholder

module.exports = function _curry3(fn) {
  return function f3(a, b, c) {
    switch (arguments.length) {
      case 0:
        return f3;
      case 1:
        return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {
          return fn(a, _b, _c);
        });
      case 2:
        return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {
          return fn(_a, b, _c);
        }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {
          return fn(a, _b, _c);
        }) : _curry1(function (_c) {
          return fn(a, b, _c);
        });
      default:
        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {
          return fn(_a, _b, c);
        }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {
          return fn(_a, b, _c);
        }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {
          return fn(a, _b, _c);
        }) : _isPlaceholder(a) ? _curry1(function (_a) {
          return fn(_a, b, c);
        }) : _isPlaceholder(b) ? _curry1(function (_b) {
          return fn(a, _b, c);
        }) : _isPlaceholder(c) ? _curry1(function (_c) {
          return fn(a, b, _c);
        }) : fn(a, b, c);
    }
  };
};
}, 1507, null, "ramda/src/internal/_curry3.js");
__d(/* ramda/src/all.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2
var _dispatchable = require(1509                      ); // 1509 = ./internal/_dispatchable
var _xall = require(1512              ); // 1512 = ./internal/_xall

module.exports = _curry2(_dispatchable(['all'], _xall, function all(fn, list) {
  var idx = 0;
  while (idx < list.length) {
    if (!fn(list[idx])) {
      return false;
    }
    idx += 1;
  }
  return true;
}));
}, 1508, null, "ramda/src/all.js");
__d(/* ramda/src/internal/_dispatchable.js */function(global, require, module, exports) {var _isArray = require(1510        ); // 1510 = ./_isArray
var _isTransformer = require(1511              ); // 1511 = ./_isTransformer

module.exports = function _dispatchable(methodNames, xf, fn) {
  return function () {
    if (arguments.length === 0) {
      return fn();
    }
    var args = Array.prototype.slice.call(arguments, 0);
    var obj = args.pop();
    if (!_isArray(obj)) {
      var idx = 0;
      while (idx < methodNames.length) {
        if (typeof obj[methodNames[idx]] === 'function') {
          return obj[methodNames[idx]].apply(obj, args);
        }
        idx += 1;
      }
      if (_isTransformer(obj)) {
        var transducer = xf.apply(null, args);
        return transducer(obj);
      }
    }
    return fn.apply(this, arguments);
  };
};
}, 1509, null, "ramda/src/internal/_dispatchable.js");
__d(/* ramda/src/internal/_isArray.js */function(global, require, module, exports) {
module.exports = Array.isArray || function _isArray(val) {
  return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';
};
}, 1510, null, "ramda/src/internal/_isArray.js");
__d(/* ramda/src/internal/_isTransformer.js */function(global, require, module, exports) {module.exports = function _isTransformer(obj) {
  return typeof obj['@@transducer/step'] === 'function';
};
}, 1511, null, "ramda/src/internal/_isTransformer.js");
__d(/* ramda/src/internal/_xall.js */function(global, require, module, exports) {var _curry2 = require(1500       ); // 1500 = ./_curry2
var _reduced = require(1513        ); // 1513 = ./_reduced
var _xfBase = require(1514       ); // 1514 = ./_xfBase

module.exports = function () {
  function XAll(f, xf) {
    this.xf = xf;
    this.f = f;
    this.all = true;
  }
  XAll.prototype['@@transducer/init'] = _xfBase.init;
  XAll.prototype['@@transducer/result'] = function (result) {
    if (this.all) {
      result = this.xf['@@transducer/step'](result, true);
    }
    return this.xf['@@transducer/result'](result);
  };
  XAll.prototype['@@transducer/step'] = function (result, input) {
    if (!this.f(input)) {
      this.all = false;
      result = _reduced(this.xf['@@transducer/step'](result, false));
    }
    return result;
  };

  return _curry2(function _xall(f, xf) {
    return new XAll(f, xf);
  });
}();
}, 1512, null, "ramda/src/internal/_xall.js");
__d(/* ramda/src/internal/_reduced.js */function(global, require, module, exports) {module.exports = function _reduced(x) {
  return x && x['@@transducer/reduced'] ? x : {
    '@@transducer/value': x,
    '@@transducer/reduced': true
  };
};
}, 1513, null, "ramda/src/internal/_reduced.js");
__d(/* ramda/src/internal/_xfBase.js */function(global, require, module, exports) {module.exports = {
  init: function init() {
    return this.xf['@@transducer/init']();
  },
  result: function result(_result) {
    return this.xf['@@transducer/result'](_result);
  }
};
}, 1514, null, "ramda/src/internal/_xfBase.js");
__d(/* ramda/src/allPass.js */function(global, require, module, exports) {var _curry1 = require(1495                ); // 1495 = ./internal/_curry1
var curryN = require(1503      ); // 1503 = ./curryN
var max = require(1516   ); // 1516 = ./max
var pluck = require(1517     ); // 1517 = ./pluck
var reduce = require(1530      ); // 1530 = ./reduce

module.exports = _curry1(function allPass(preds) {
  return curryN(reduce(max, 0, pluck('length', preds)), function () {
    var idx = 0;
    var len = preds.length;
    while (idx < len) {
      if (!preds[idx].apply(this, arguments)) {
        return false;
      }
      idx += 1;
    }
    return true;
  });
});
}, 1515, null, "ramda/src/allPass.js");
__d(/* ramda/src/max.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2

module.exports = _curry2(function max(a, b) {
  return b > a ? b : a;
});
}, 1516, null, "ramda/src/max.js");
__d(/* ramda/src/pluck.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2
var map = require(1518   ); // 1518 = ./map
var prop = require(1529    ); // 1529 = ./prop

module.exports = _curry2(function pluck(p, list) {
  return map(prop(p), list);
});
}, 1517, null, "ramda/src/pluck.js");
__d(/* ramda/src/map.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2
var _dispatchable = require(1509                      ); // 1509 = ./internal/_dispatchable
var _map = require(1519             ); // 1519 = ./internal/_map
var _reduce = require(1520                ); // 1520 = ./internal/_reduce
var _xmap = require(1525              ); // 1525 = ./internal/_xmap
var curryN = require(1503      ); // 1503 = ./curryN
var keys = require(1526    ); // 1526 = ./keys

module.exports = _curry2(_dispatchable(['fantasy-land/map', 'map'], _xmap, function map(fn, functor) {
  switch (Object.prototype.toString.call(functor)) {
    case '[object Function]':
      return curryN(functor.length, function () {
        return fn.call(this, functor.apply(this, arguments));
      });
    case '[object Object]':
      return _reduce(function (acc, key) {
        acc[key] = fn(functor[key]);
        return acc;
      }, {}, keys(functor));
    default:
      return _map(fn, functor);
  }
}));
}, 1518, null, "ramda/src/map.js");
__d(/* ramda/src/internal/_map.js */function(global, require, module, exports) {module.exports = function _map(fn, functor) {
  var idx = 0;
  var len = functor.length;
  var result = Array(len);
  while (idx < len) {
    result[idx] = fn(functor[idx]);
    idx += 1;
  }
  return result;
};
}, 1519, null, "ramda/src/internal/_map.js");
__d(/* ramda/src/internal/_reduce.js */function(global, require, module, exports) {var _isArrayLike = require(1521            ); // 1521 = ./_isArrayLike
var _xwrap = require(1523      ); // 1523 = ./_xwrap
var bind = require(1524     ); // 1524 = ../bind

module.exports = function () {
  function _arrayReduce(xf, acc, list) {
    var idx = 0;
    var len = list.length;
    while (idx < len) {
      acc = xf['@@transducer/step'](acc, list[idx]);
      if (acc && acc['@@transducer/reduced']) {
        acc = acc['@@transducer/value'];
        break;
      }
      idx += 1;
    }
    return xf['@@transducer/result'](acc);
  }

  function _iterableReduce(xf, acc, iter) {
    var step = iter.next();
    while (!step.done) {
      acc = xf['@@transducer/step'](acc, step.value);
      if (acc && acc['@@transducer/reduced']) {
        acc = acc['@@transducer/value'];
        break;
      }
      step = iter.next();
    }
    return xf['@@transducer/result'](acc);
  }

  function _methodReduce(xf, acc, obj, methodName) {
    return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));
  }

  var symIterator = typeof Symbol !== 'undefined' ? typeof Symbol === 'function' ? Symbol.iterator : '@@iterator' : '@@iterator';
  return function _reduce(fn, acc, list) {
    if (typeof fn === 'function') {
      fn = _xwrap(fn);
    }
    if (_isArrayLike(list)) {
      return _arrayReduce(fn, acc, list);
    }
    if (typeof list['fantasy-land/reduce'] === 'function') {
      return _methodReduce(fn, acc, list, 'fantasy-land/reduce');
    }
    if (list[symIterator] != null) {
      return _iterableReduce(fn, acc, list[symIterator]());
    }
    if (typeof list.next === 'function') {
      return _iterableReduce(fn, acc, list);
    }
    if (typeof list.reduce === 'function') {
      return _methodReduce(fn, acc, list, 'reduce');
    }

    throw new TypeError('reduce: list must be array or iterable');
  };
}();
}, 1520, null, "ramda/src/internal/_reduce.js");
__d(/* ramda/src/internal/_isArrayLike.js */function(global, require, module, exports) {var _curry1 = require(1495       ); // 1495 = ./_curry1
var _isArray = require(1510        ); // 1510 = ./_isArray
var _isString = require(1522         ); // 1522 = ./_isString

module.exports = _curry1(function isArrayLike(x) {
  if (_isArray(x)) {
    return true;
  }
  if (!x) {
    return false;
  }
  if (typeof x !== 'object') {
    return false;
  }
  if (_isString(x)) {
    return false;
  }
  if (x.nodeType === 1) {
    return !!x.length;
  }
  if (x.length === 0) {
    return true;
  }
  if (x.length > 0) {
    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);
  }
  return false;
});
}, 1521, null, "ramda/src/internal/_isArrayLike.js");
__d(/* ramda/src/internal/_isString.js */function(global, require, module, exports) {module.exports = function _isString(x) {
  return Object.prototype.toString.call(x) === '[object String]';
};
}, 1522, null, "ramda/src/internal/_isString.js");
__d(/* ramda/src/internal/_xwrap.js */function(global, require, module, exports) {module.exports = function () {
  function XWrap(fn) {
    this.f = fn;
  }
  XWrap.prototype['@@transducer/init'] = function () {
    throw new Error('init not implemented on XWrap');
  };
  XWrap.prototype['@@transducer/result'] = function (acc) {
    return acc;
  };
  XWrap.prototype['@@transducer/step'] = function (acc, x) {
    return this.f(acc, x);
  };

  return function _xwrap(fn) {
    return new XWrap(fn);
  };
}();
}, 1523, null, "ramda/src/internal/_xwrap.js");
__d(/* ramda/src/bind.js */function(global, require, module, exports) {var _arity = require(1504               ); // 1504 = ./internal/_arity
var _curry2 = require(1500                ); // 1500 = ./internal/_curry2

module.exports = _curry2(function bind(fn, thisObj) {
  return _arity(fn.length, function () {
    return fn.apply(thisObj, arguments);
  });
});
}, 1524, null, "ramda/src/bind.js");
__d(/* ramda/src/internal/_xmap.js */function(global, require, module, exports) {var _curry2 = require(1500       ); // 1500 = ./_curry2
var _xfBase = require(1514       ); // 1514 = ./_xfBase

module.exports = function () {
  function XMap(f, xf) {
    this.xf = xf;
    this.f = f;
  }
  XMap.prototype['@@transducer/init'] = _xfBase.init;
  XMap.prototype['@@transducer/result'] = _xfBase.result;
  XMap.prototype['@@transducer/step'] = function (result, input) {
    return this.xf['@@transducer/step'](result, this.f(input));
  };

  return _curry2(function _xmap(f, xf) {
    return new XMap(f, xf);
  });
}();
}, 1525, null, "ramda/src/internal/_xmap.js");
__d(/* ramda/src/keys.js */function(global, require, module, exports) {var _curry1 = require(1495                ); // 1495 = ./internal/_curry1
var _has = require(1527             ); // 1527 = ./internal/_has
var _isArguments = require(1528                     ); // 1528 = ./internal/_isArguments

module.exports = function () {
  var hasEnumBug = !{ toString: null }.propertyIsEnumerable('toString');
  var nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];

  var hasArgsEnumBug = function () {
    'use strict';

    return arguments.propertyIsEnumerable('length');
  }();

  var contains = function contains(list, item) {
    var idx = 0;
    while (idx < list.length) {
      if (list[idx] === item) {
        return true;
      }
      idx += 1;
    }
    return false;
  };

  return typeof Object.keys === 'function' && !hasArgsEnumBug ? _curry1(function keys(obj) {
    return Object(obj) !== obj ? [] : Object.keys(obj);
  }) : _curry1(function keys(obj) {
    if (Object(obj) !== obj) {
      return [];
    }
    var prop, nIdx;
    var ks = [];
    var checkArgsLength = hasArgsEnumBug && _isArguments(obj);
    for (prop in obj) {
      if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {
        ks[ks.length] = prop;
      }
    }
    if (hasEnumBug) {
      nIdx = nonEnumerableProps.length - 1;
      while (nIdx >= 0) {
        prop = nonEnumerableProps[nIdx];
        if (_has(prop, obj) && !contains(ks, prop)) {
          ks[ks.length] = prop;
        }
        nIdx -= 1;
      }
    }
    return ks;
  });
}();
}, 1526, null, "ramda/src/keys.js");
__d(/* ramda/src/internal/_has.js */function(global, require, module, exports) {module.exports = function _has(prop, obj) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
};
}, 1527, null, "ramda/src/internal/_has.js");
__d(/* ramda/src/internal/_isArguments.js */function(global, require, module, exports) {var _has = require(1527    ); // 1527 = ./_has

module.exports = function () {
  var toString = Object.prototype.toString;
  return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {
    return toString.call(x) === '[object Arguments]';
  } : function _isArguments(x) {
    return _has('callee', x);
  };
}();
}, 1528, null, "ramda/src/internal/_isArguments.js");
__d(/* ramda/src/prop.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2

module.exports = _curry2(function prop(p, obj) {
  return obj[p];
});
}, 1529, null, "ramda/src/prop.js");
__d(/* ramda/src/reduce.js */function(global, require, module, exports) {var _curry3 = require(1507                ); // 1507 = ./internal/_curry3
var _reduce = require(1520                ); // 1520 = ./internal/_reduce

module.exports = _curry3(_reduce);
}, 1530, null, "ramda/src/reduce.js");
__d(/* ramda/src/and.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2

module.exports = _curry2(function and(a, b) {
  return a && b;
});
}, 1531, null, "ramda/src/and.js");
__d(/* ramda/src/any.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2
var _dispatchable = require(1509                      ); // 1509 = ./internal/_dispatchable
var _xany = require(1533              ); // 1533 = ./internal/_xany

module.exports = _curry2(_dispatchable(['any'], _xany, function any(fn, list) {
  var idx = 0;
  while (idx < list.length) {
    if (fn(list[idx])) {
      return true;
    }
    idx += 1;
  }
  return false;
}));
}, 1532, null, "ramda/src/any.js");
__d(/* ramda/src/internal/_xany.js */function(global, require, module, exports) {var _curry2 = require(1500       ); // 1500 = ./_curry2
var _reduced = require(1513        ); // 1513 = ./_reduced
var _xfBase = require(1514       ); // 1514 = ./_xfBase

module.exports = function () {
  function XAny(f, xf) {
    this.xf = xf;
    this.f = f;
    this.any = false;
  }
  XAny.prototype['@@transducer/init'] = _xfBase.init;
  XAny.prototype['@@transducer/result'] = function (result) {
    if (!this.any) {
      result = this.xf['@@transducer/step'](result, false);
    }
    return this.xf['@@transducer/result'](result);
  };
  XAny.prototype['@@transducer/step'] = function (result, input) {
    if (this.f(input)) {
      this.any = true;
      result = _reduced(this.xf['@@transducer/step'](result, true));
    }
    return result;
  };

  return _curry2(function _xany(f, xf) {
    return new XAny(f, xf);
  });
}();
}, 1533, null, "ramda/src/internal/_xany.js");
__d(/* ramda/src/anyPass.js */function(global, require, module, exports) {var _curry1 = require(1495                ); // 1495 = ./internal/_curry1
var curryN = require(1503      ); // 1503 = ./curryN
var max = require(1516   ); // 1516 = ./max
var pluck = require(1517     ); // 1517 = ./pluck
var reduce = require(1530      ); // 1530 = ./reduce

module.exports = _curry1(function anyPass(preds) {
  return curryN(reduce(max, 0, pluck('length', preds)), function () {
    var idx = 0;
    var len = preds.length;
    while (idx < len) {
      if (preds[idx].apply(this, arguments)) {
        return true;
      }
      idx += 1;
    }
    return false;
  });
});
}, 1534, null, "ramda/src/anyPass.js");
__d(/* ramda/src/ap.js */function(global, require, module, exports) {var _concat = require(1502                ); // 1502 = ./internal/_concat
var _curry2 = require(1500                ); // 1500 = ./internal/_curry2
var _reduce = require(1520                ); // 1520 = ./internal/_reduce
var map = require(1518   ); // 1518 = ./map

module.exports = _curry2(function ap(applyF, applyX) {
  return typeof applyX['fantasy-land/ap'] === 'function' ? applyX['fantasy-land/ap'](applyF) : typeof applyF.ap === 'function' ? applyF.ap(applyX) : typeof applyF === 'function' ? function (x) {
    return applyF(x)(applyX(x));
  } : _reduce(function (acc, f) {
    return _concat(acc, map(f, applyX));
  }, [], applyF);
});
}, 1535, null, "ramda/src/ap.js");
__d(/* ramda/src/aperture.js */function(global, require, module, exports) {var _aperture = require(1537                  ); // 1537 = ./internal/_aperture
var _curry2 = require(1500                ); // 1500 = ./internal/_curry2
var _dispatchable = require(1509                      ); // 1509 = ./internal/_dispatchable
var _xaperture = require(1538                   ); // 1538 = ./internal/_xaperture

module.exports = _curry2(_dispatchable([], _xaperture, _aperture));
}, 1536, null, "ramda/src/aperture.js");
__d(/* ramda/src/internal/_aperture.js */function(global, require, module, exports) {module.exports = function _aperture(n, list) {
  var idx = 0;
  var limit = list.length - (n - 1);
  var acc = new Array(limit >= 0 ? limit : 0);
  while (idx < limit) {
    acc[idx] = Array.prototype.slice.call(list, idx, idx + n);
    idx += 1;
  }
  return acc;
};
}, 1537, null, "ramda/src/internal/_aperture.js");
__d(/* ramda/src/internal/_xaperture.js */function(global, require, module, exports) {var _concat = require(1502       ); // 1502 = ./_concat
var _curry2 = require(1500       ); // 1500 = ./_curry2
var _xfBase = require(1514       ); // 1514 = ./_xfBase

module.exports = function () {
  function XAperture(n, xf) {
    this.xf = xf;
    this.pos = 0;
    this.full = false;
    this.acc = new Array(n);
  }
  XAperture.prototype['@@transducer/init'] = _xfBase.init;
  XAperture.prototype['@@transducer/result'] = function (result) {
    this.acc = null;
    return this.xf['@@transducer/result'](result);
  };
  XAperture.prototype['@@transducer/step'] = function (result, input) {
    this.store(input);
    return this.full ? this.xf['@@transducer/step'](result, this.getCopy()) : result;
  };
  XAperture.prototype.store = function (input) {
    this.acc[this.pos] = input;
    this.pos += 1;
    if (this.pos === this.acc.length) {
      this.pos = 0;
      this.full = true;
    }
  };
  XAperture.prototype.getCopy = function () {
    return _concat(Array.prototype.slice.call(this.acc, this.pos), Array.prototype.slice.call(this.acc, 0, this.pos));
  };

  return _curry2(function _xaperture(n, xf) {
    return new XAperture(n, xf);
  });
}();
}, 1538, null, "ramda/src/internal/_xaperture.js");
__d(/* ramda/src/append.js */function(global, require, module, exports) {var _concat = require(1502                ); // 1502 = ./internal/_concat
var _curry2 = require(1500                ); // 1500 = ./internal/_curry2

module.exports = _curry2(function append(el, list) {
  return _concat(list, [el]);
});
}, 1539, null, "ramda/src/append.js");
__d(/* ramda/src/apply.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2

module.exports = _curry2(function apply(fn, args) {
  return fn.apply(this, args);
});
}, 1540, null, "ramda/src/apply.js");
__d(/* ramda/src/applySpec.js */function(global, require, module, exports) {var _curry1 = require(1495                ); // 1495 = ./internal/_curry1
var apply = require(1540     ); // 1540 = ./apply
var curryN = require(1503      ); // 1503 = ./curryN
var map = require(1518   ); // 1518 = ./map
var max = require(1516   ); // 1516 = ./max
var pluck = require(1517     ); // 1517 = ./pluck
var reduce = require(1530      ); // 1530 = ./reduce
var values = require(1542      ); // 1542 = ./values

module.exports = _curry1(function applySpec(spec) {
  spec = map(function (v) {
    return typeof v == 'function' ? v : applySpec(v);
  }, spec);
  return curryN(reduce(max, 0, pluck('length', values(spec))), function () {
    var args = arguments;
    return map(function (f) {
      return apply(f, args);
    }, spec);
  });
});
}, 1541, null, "ramda/src/applySpec.js");
__d(/* ramda/src/values.js */function(global, require, module, exports) {var _curry1 = require(1495                ); // 1495 = ./internal/_curry1
var keys = require(1526    ); // 1526 = ./keys

module.exports = _curry1(function values(obj) {
  var props = keys(obj);
  var len = props.length;
  var vals = [];
  var idx = 0;
  while (idx < len) {
    vals[idx] = obj[props[idx]];
    idx += 1;
  }
  return vals;
});
}, 1542, null, "ramda/src/values.js");
__d(/* ramda/src/ascend.js */function(global, require, module, exports) {var _curry3 = require(1507                ); // 1507 = ./internal/_curry3

module.exports = _curry3(function ascend(fn, a, b) {
  var aa = fn(a);
  var bb = fn(b);
  return aa < bb ? -1 : aa > bb ? 1 : 0;
});
}, 1543, null, "ramda/src/ascend.js");
__d(/* ramda/src/assoc.js */function(global, require, module, exports) {var _curry3 = require(1507                ); // 1507 = ./internal/_curry3

module.exports = _curry3(function assoc(prop, val, obj) {
  var result = {};
  for (var p in obj) {
    result[p] = obj[p];
  }
  result[prop] = val;
  return result;
});
}, 1544, null, "ramda/src/assoc.js");
__d(/* ramda/src/assocPath.js */function(global, require, module, exports) {var _curry3 = require(1507                ); // 1507 = ./internal/_curry3
var _has = require(1527             ); // 1527 = ./internal/_has
var _isArray = require(1510                 ); // 1510 = ./internal/_isArray
var _isInteger = require(1546                   ); // 1546 = ./internal/_isInteger
var assoc = require(1544     ); // 1544 = ./assoc
var isNil = require(1547     ); // 1547 = ./isNil

module.exports = _curry3(function assocPath(path, val, obj) {
  if (path.length === 0) {
    return val;
  }
  var idx = path[0];
  if (path.length > 1) {
    var nextObj = !isNil(obj) && _has(idx, obj) ? obj[idx] : _isInteger(path[1]) ? [] : {};
    val = assocPath(Array.prototype.slice.call(path, 1), val, nextObj);
  }
  if (_isInteger(idx) && _isArray(obj)) {
    var arr = [].concat(obj);
    arr[idx] = val;
    return arr;
  } else {
    return assoc(idx, val, obj);
  }
});
}, 1545, null, "ramda/src/assocPath.js");
__d(/* ramda/src/internal/_isInteger.js */function(global, require, module, exports) {
module.exports = Number.isInteger || function _isInteger(n) {
  return n << 0 === n;
};
}, 1546, null, "ramda/src/internal/_isInteger.js");
__d(/* ramda/src/isNil.js */function(global, require, module, exports) {var _curry1 = require(1495                ); // 1495 = ./internal/_curry1

module.exports = _curry1(function isNil(x) {
  return x == null;
});
}, 1547, null, "ramda/src/isNil.js");
__d(/* ramda/src/binary.js */function(global, require, module, exports) {var _curry1 = require(1495                ); // 1495 = ./internal/_curry1
var nAry = require(1549    ); // 1549 = ./nAry

module.exports = _curry1(function binary(fn) {
  return nAry(2, fn);
});
}, 1548, null, "ramda/src/binary.js");
__d(/* ramda/src/nAry.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2

module.exports = _curry2(function nAry(n, fn) {
  switch (n) {
    case 0:
      return function () {
        return fn.call(this);
      };
    case 1:
      return function (a0) {
        return fn.call(this, a0);
      };
    case 2:
      return function (a0, a1) {
        return fn.call(this, a0, a1);
      };
    case 3:
      return function (a0, a1, a2) {
        return fn.call(this, a0, a1, a2);
      };
    case 4:
      return function (a0, a1, a2, a3) {
        return fn.call(this, a0, a1, a2, a3);
      };
    case 5:
      return function (a0, a1, a2, a3, a4) {
        return fn.call(this, a0, a1, a2, a3, a4);
      };
    case 6:
      return function (a0, a1, a2, a3, a4, a5) {
        return fn.call(this, a0, a1, a2, a3, a4, a5);
      };
    case 7:
      return function (a0, a1, a2, a3, a4, a5, a6) {
        return fn.call(this, a0, a1, a2, a3, a4, a5, a6);
      };
    case 8:
      return function (a0, a1, a2, a3, a4, a5, a6, a7) {
        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7);
      };
    case 9:
      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {
        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8);
      };
    case 10:
      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {
        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);
      };
    default:
      throw new Error('First argument to nAry must be a non-negative integer no greater than ten');
  }
});
}, 1549, null, "ramda/src/nAry.js");
__d(/* ramda/src/both.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2
var _isFunction = require(1551                    ); // 1551 = ./internal/_isFunction
var and = require(1531   ); // 1531 = ./and
var lift = require(1552    ); // 1552 = ./lift

module.exports = _curry2(function both(f, g) {
  return _isFunction(f) ? function _both() {
    return f.apply(this, arguments) && g.apply(this, arguments);
  } : lift(and)(f, g);
});
}, 1550, null, "ramda/src/both.js");
__d(/* ramda/src/internal/_isFunction.js */function(global, require, module, exports) {module.exports = function _isFunction(x) {
  return Object.prototype.toString.call(x) === '[object Function]';
};
}, 1551, null, "ramda/src/internal/_isFunction.js");
__d(/* ramda/src/lift.js */function(global, require, module, exports) {var _curry1 = require(1495                ); // 1495 = ./internal/_curry1
var liftN = require(1553     ); // 1553 = ./liftN

module.exports = _curry1(function lift(fn) {
  return liftN(fn.length, fn);
});
}, 1552, null, "ramda/src/lift.js");
__d(/* ramda/src/liftN.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2
var _reduce = require(1520                ); // 1520 = ./internal/_reduce
var ap = require(1535  ); // 1535 = ./ap
var curryN = require(1503      ); // 1503 = ./curryN
var map = require(1518   ); // 1518 = ./map

module.exports = _curry2(function liftN(arity, fn) {
  var lifted = curryN(arity, fn);
  return curryN(arity, function () {
    return _reduce(ap, map(lifted, arguments[0]), Array.prototype.slice.call(arguments, 1));
  });
});
}, 1553, null, "ramda/src/liftN.js");
__d(/* ramda/src/call.js */function(global, require, module, exports) {var curry = require(1555     ); // 1555 = ./curry

module.exports = curry(function call(fn) {
  return fn.apply(this, Array.prototype.slice.call(arguments, 1));
});
}, 1554, null, "ramda/src/call.js");
__d(/* ramda/src/curry.js */function(global, require, module, exports) {var _curry1 = require(1495                ); // 1495 = ./internal/_curry1
var curryN = require(1503      ); // 1503 = ./curryN

module.exports = _curry1(function curry(fn) {
  return curryN(fn.length, fn);
});
}, 1555, null, "ramda/src/curry.js");
__d(/* ramda/src/chain.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2
var _dispatchable = require(1509                      ); // 1509 = ./internal/_dispatchable
var _makeFlat = require(1557                  ); // 1557 = ./internal/_makeFlat
var _xchain = require(1558                ); // 1558 = ./internal/_xchain
var map = require(1518   ); // 1518 = ./map

module.exports = _curry2(_dispatchable(['fantasy-land/chain', 'chain'], _xchain, function chain(fn, monad) {
  if (typeof monad === 'function') {
    return function (x) {
      return fn(monad(x))(x);
    };
  }
  return _makeFlat(false)(map(fn, monad));
}));
}, 1556, null, "ramda/src/chain.js");
__d(/* ramda/src/internal/_makeFlat.js */function(global, require, module, exports) {var _isArrayLike = require(1521            ); // 1521 = ./_isArrayLike

module.exports = function _makeFlat(recursive) {
  return function flatt(list) {
    var value, jlen, j;
    var result = [];
    var idx = 0;
    var ilen = list.length;

    while (idx < ilen) {
      if (_isArrayLike(list[idx])) {
        value = recursive ? flatt(list[idx]) : list[idx];
        j = 0;
        jlen = value.length;
        while (j < jlen) {
          result[result.length] = value[j];
          j += 1;
        }
      } else {
        result[result.length] = list[idx];
      }
      idx += 1;
    }
    return result;
  };
};
}, 1557, null, "ramda/src/internal/_makeFlat.js");
__d(/* ramda/src/internal/_xchain.js */function(global, require, module, exports) {var _curry2 = require(1500       ); // 1500 = ./_curry2
var _flatCat = require(1559        ); // 1559 = ./_flatCat
var map = require(1518    ); // 1518 = ../map

module.exports = _curry2(function _xchain(f, xf) {
  return map(f, _flatCat(xf));
});
}, 1558, null, "ramda/src/internal/_xchain.js");
__d(/* ramda/src/internal/_flatCat.js */function(global, require, module, exports) {var _forceReduced = require(1560             ); // 1560 = ./_forceReduced
var _isArrayLike = require(1521            ); // 1521 = ./_isArrayLike
var _reduce = require(1520       ); // 1520 = ./_reduce
var _xfBase = require(1514       ); // 1514 = ./_xfBase

module.exports = function () {
  var preservingReduced = function preservingReduced(xf) {
    return {
      '@@transducer/init': _xfBase.init,
      '@@transducer/result': function transducerResult(result) {
        return xf['@@transducer/result'](result);
      },
      '@@transducer/step': function transducerStep(result, input) {
        var ret = xf['@@transducer/step'](result, input);
        return ret['@@transducer/reduced'] ? _forceReduced(ret) : ret;
      }
    };
  };

  return function _xcat(xf) {
    var rxf = preservingReduced(xf);
    return {
      '@@transducer/init': _xfBase.init,
      '@@transducer/result': function transducerResult(result) {
        return rxf['@@transducer/result'](result);
      },
      '@@transducer/step': function transducerStep(result, input) {
        return !_isArrayLike(input) ? _reduce(rxf, result, [input]) : _reduce(rxf, result, input);
      }
    };
  };
}();
}, 1559, null, "ramda/src/internal/_flatCat.js");
__d(/* ramda/src/internal/_forceReduced.js */function(global, require, module, exports) {module.exports = function _forceReduced(x) {
  return {
    '@@transducer/value': x,
    '@@transducer/reduced': true
  };
};
}, 1560, null, "ramda/src/internal/_forceReduced.js");
__d(/* ramda/src/clamp.js */function(global, require, module, exports) {var _curry3 = require(1507                ); // 1507 = ./internal/_curry3

module.exports = _curry3(function clamp(min, max, value) {
  if (min > max) {
    throw new Error('min must not be greater than max in clamp(min, max, value)');
  }
  return value < min ? min : value > max ? max : value;
});
}, 1561, null, "ramda/src/clamp.js");
__d(/* ramda/src/clone.js */function(global, require, module, exports) {var _clone = require(1563               ); // 1563 = ./internal/_clone
var _curry1 = require(1495                ); // 1495 = ./internal/_curry1

module.exports = _curry1(function clone(value) {
  return value != null && typeof value.clone === 'function' ? value.clone() : _clone(value, [], [], true);
});
}, 1562, null, "ramda/src/clone.js");
__d(/* ramda/src/internal/_clone.js */function(global, require, module, exports) {var _cloneRegExp = require(1564            ); // 1564 = ./_cloneRegExp
var type = require(1565     ); // 1565 = ../type

module.exports = function _clone(value, refFrom, refTo, deep) {
  var copy = function copy(copiedValue) {
    var len = refFrom.length;
    var idx = 0;
    while (idx < len) {
      if (value === refFrom[idx]) {
        return refTo[idx];
      }
      idx += 1;
    }
    refFrom[idx + 1] = value;
    refTo[idx + 1] = copiedValue;
    for (var key in value) {
      copiedValue[key] = deep ? _clone(value[key], refFrom, refTo, true) : value[key];
    }
    return copiedValue;
  };
  switch (type(value)) {
    case 'Object':
      return copy({});
    case 'Array':
      return copy([]);
    case 'Date':
      return new Date(value.valueOf());
    case 'RegExp':
      return _cloneRegExp(value);
    default:
      return value;
  }
};
}, 1563, null, "ramda/src/internal/_clone.js");
__d(/* ramda/src/internal/_cloneRegExp.js */function(global, require, module, exports) {module.exports = function _cloneRegExp(pattern) {
                                  return new RegExp(pattern.source, (pattern.global ? 'g' : '') + (pattern.ignoreCase ? 'i' : '') + (pattern.multiline ? 'm' : '') + (pattern.sticky ? 'y' : '') + (pattern.unicode ? 'u' : ''));
};
}, 1564, null, "ramda/src/internal/_cloneRegExp.js");
__d(/* ramda/src/type.js */function(global, require, module, exports) {var _curry1 = require(1495                ); // 1495 = ./internal/_curry1

module.exports = _curry1(function type(val) {
  return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);
});
}, 1565, null, "ramda/src/type.js");
__d(/* ramda/src/comparator.js */function(global, require, module, exports) {var _curry1 = require(1495                ); // 1495 = ./internal/_curry1

module.exports = _curry1(function comparator(pred) {
  return function (a, b) {
    return pred(a, b) ? -1 : pred(b, a) ? 1 : 0;
  };
});
}, 1566, null, "ramda/src/comparator.js");
__d(/* ramda/src/complement.js */function(global, require, module, exports) {var lift = require(1552    ); // 1552 = ./lift
var not = require(1568   ); // 1568 = ./not

module.exports = lift(not);
}, 1567, null, "ramda/src/complement.js");
__d(/* ramda/src/not.js */function(global, require, module, exports) {var _curry1 = require(1495                ); // 1495 = ./internal/_curry1

module.exports = _curry1(function not(a) {
  return !a;
});
}, 1568, null, "ramda/src/not.js");
__d(/* ramda/src/compose.js */function(global, require, module, exports) {var pipe = require(1570    ); // 1570 = ./pipe
var reverse = require(1575       ); // 1575 = ./reverse

module.exports = function compose() {
  if (arguments.length === 0) {
    throw new Error('compose requires at least one argument');
  }
  return pipe.apply(this, reverse(arguments));
};
}, 1569, null, "ramda/src/compose.js");
__d(/* ramda/src/pipe.js */function(global, require, module, exports) {var _arity = require(1504               ); // 1504 = ./internal/_arity
var _pipe = require(1571              ); // 1571 = ./internal/_pipe
var reduce = require(1530      ); // 1530 = ./reduce
var tail = require(1572    ); // 1572 = ./tail

module.exports = function pipe() {
  if (arguments.length === 0) {
    throw new Error('pipe requires at least one argument');
  }
  return _arity(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));
};
}, 1570, null, "ramda/src/pipe.js");
__d(/* ramda/src/internal/_pipe.js */function(global, require, module, exports) {module.exports = function _pipe(f, g) {
  return function () {
    return g.call(this, f.apply(this, arguments));
  };
};
}, 1571, null, "ramda/src/internal/_pipe.js");
__d(/* ramda/src/tail.js */function(global, require, module, exports) {var _checkForMethod = require(1573                        ); // 1573 = ./internal/_checkForMethod
var _curry1 = require(1495                ); // 1495 = ./internal/_curry1
var slice = require(1574     ); // 1574 = ./slice

module.exports = _curry1(_checkForMethod('tail', slice(1, Infinity)));
}, 1572, null, "ramda/src/tail.js");
__d(/* ramda/src/internal/_checkForMethod.js */function(global, require, module, exports) {var _isArray = require(1510        ); // 1510 = ./_isArray

module.exports = function _checkForMethod(methodname, fn) {
  return function () {
    var length = arguments.length;
    if (length === 0) {
      return fn();
    }
    var obj = arguments[length - 1];
    return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));
  };
};
}, 1573, null, "ramda/src/internal/_checkForMethod.js");
__d(/* ramda/src/slice.js */function(global, require, module, exports) {var _checkForMethod = require(1573                        ); // 1573 = ./internal/_checkForMethod
var _curry3 = require(1507                ); // 1507 = ./internal/_curry3

module.exports = _curry3(_checkForMethod('slice', function slice(fromIndex, toIndex, list) {
  return Array.prototype.slice.call(list, fromIndex, toIndex);
}));
}, 1574, null, "ramda/src/slice.js");
__d(/* ramda/src/reverse.js */function(global, require, module, exports) {var _curry1 = require(1495                ); // 1495 = ./internal/_curry1
var _isString = require(1522                  ); // 1522 = ./internal/_isString

module.exports = _curry1(function reverse(list) {
  return _isString(list) ? list.split('').reverse().join('') : Array.prototype.slice.call(list, 0).reverse();
});
}, 1575, null, "ramda/src/reverse.js");
__d(/* ramda/src/composeK.js */function(global, require, module, exports) {var chain = require(1556     ); // 1556 = ./chain
var compose = require(1569       ); // 1569 = ./compose
var map = require(1518   ); // 1518 = ./map

module.exports = function composeK() {
  if (arguments.length === 0) {
    throw new Error('composeK requires at least one argument');
  }
  var init = Array.prototype.slice.call(arguments);
  var last = init.pop();
  return compose(compose.apply(this, map(chain, init)), last);
};
}, 1576, null, "ramda/src/composeK.js");
__d(/* ramda/src/composeP.js */function(global, require, module, exports) {var pipeP = require(1578     ); // 1578 = ./pipeP
var reverse = require(1575       ); // 1575 = ./reverse

module.exports = function composeP() {
  if (arguments.length === 0) {
    throw new Error('composeP requires at least one argument');
  }
  return pipeP.apply(this, reverse(arguments));
};
}, 1577, null, "ramda/src/composeP.js");
__d(/* ramda/src/pipeP.js */function(global, require, module, exports) {var _arity = require(1504               ); // 1504 = ./internal/_arity
var _pipeP = require(1579               ); // 1579 = ./internal/_pipeP
var reduce = require(1530      ); // 1530 = ./reduce
var tail = require(1572    ); // 1572 = ./tail

module.exports = function pipeP() {
  if (arguments.length === 0) {
    throw new Error('pipeP requires at least one argument');
  }
  return _arity(arguments[0].length, reduce(_pipeP, arguments[0], tail(arguments)));
};
}, 1578, null, "ramda/src/pipeP.js");
__d(/* ramda/src/internal/_pipeP.js */function(global, require, module, exports) {module.exports = function _pipeP(f, g) {
  return function () {
    var ctx = this;
    return f.apply(ctx, arguments).then(function (x) {
      return g.call(ctx, x);
    });
  };
};
}, 1579, null, "ramda/src/internal/_pipeP.js");
__d(/* ramda/src/concat.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2
var _isArray = require(1510                 ); // 1510 = ./internal/_isArray
var _isFunction = require(1551                    ); // 1551 = ./internal/_isFunction
var _isString = require(1522                  ); // 1522 = ./internal/_isString
var toString = require(1581        ); // 1581 = ./toString

module.exports = _curry2(function concat(a, b) {
  if (_isArray(a)) {
    if (_isArray(b)) {
      return a.concat(b);
    }
    throw new TypeError(toString(b) + ' is not an array');
  }
  if (_isString(a)) {
    if (_isString(b)) {
      return a + b;
    }
    throw new TypeError(toString(b) + ' is not a string');
  }
  if (a != null && _isFunction(a['fantasy-land/concat'])) {
    return a['fantasy-land/concat'](b);
  }
  if (a != null && _isFunction(a.concat)) {
    return a.concat(b);
  }
  throw new TypeError(toString(a) + ' does not have a method named "concat" or "fantasy-land/concat"');
});
}, 1580, null, "ramda/src/concat.js");
__d(/* ramda/src/toString.js */function(global, require, module, exports) {var _curry1 = require(1495                ); // 1495 = ./internal/_curry1
var _toString = require(1582                  ); // 1582 = ./internal/_toString

module.exports = _curry1(function toString(val) {
  return _toString(val, []);
});
}, 1581, null, "ramda/src/toString.js");
__d(/* ramda/src/internal/_toString.js */function(global, require, module, exports) {var _contains = require(1583         ); // 1583 = ./_contains
var _map = require(1519    ); // 1519 = ./_map
var _quote = require(1590      ); // 1590 = ./_quote
var _toISOString = require(1591            ); // 1591 = ./_toISOString
var keys = require(1526     ); // 1526 = ../keys
var reject = require(1592       ); // 1592 = ../reject

module.exports = function _toString(x, seen) {
  var recur = function recur(y) {
    var xs = seen.concat([x]);
    return _contains(y, xs) ? '<Circular>' : _toString(y, xs);
  };

  var mapPairs = function mapPairs(obj, keys) {
    return _map(function (k) {
      return _quote(k) + ': ' + recur(obj[k]);
    }, keys.slice().sort());
  };

  switch (Object.prototype.toString.call(x)) {
    case '[object Arguments]':
      return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';
    case '[object Array]':
      return '[' + _map(recur, x).concat(mapPairs(x, reject(function (k) {
        return (/^\d+$/.test(k)
        );
      }, keys(x)))).join(', ') + ']';
    case '[object Boolean]':
      return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();
    case '[object Date]':
      return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';
    case '[object Null]':
      return 'null';
    case '[object Number]':
      return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);
    case '[object String]':
      return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);
    case '[object Undefined]':
      return 'undefined';
    default:
      if (typeof x.toString === 'function') {
        var repr = x.toString();
        if (repr !== '[object Object]') {
          return repr;
        }
      }
      return '{' + mapPairs(x, keys(x)).join(', ') + '}';
  }
};
}, 1582, null, "ramda/src/internal/_toString.js");
__d(/* ramda/src/internal/_contains.js */function(global, require, module, exports) {var _indexOf = require(1584        ); // 1584 = ./_indexOf

module.exports = function _contains(a, list) {
  return _indexOf(list, a, 0) >= 0;
};
}, 1583, null, "ramda/src/internal/_contains.js");
__d(/* ramda/src/internal/_indexOf.js */function(global, require, module, exports) {var equals = require(1585       ); // 1585 = ../equals

module.exports = function _indexOf(list, a, idx) {
  var inf, item;

  if (typeof list.indexOf === 'function') {
    switch (typeof a) {
      case 'number':
        if (a === 0) {
          inf = 1 / a;
          while (idx < list.length) {
            item = list[idx];
            if (item === 0 && 1 / item === inf) {
              return idx;
            }
            idx += 1;
          }
          return -1;
        } else if (a !== a) {
          while (idx < list.length) {
            item = list[idx];
            if (typeof item === 'number' && item !== item) {
              return idx;
            }
            idx += 1;
          }
          return -1;
        }

        return list.indexOf(a, idx);

      case 'string':
      case 'boolean':
      case 'function':
      case 'undefined':
        return list.indexOf(a, idx);

      case 'object':
        if (a === null) {
          return list.indexOf(a, idx);
        }
    }
  }

  while (idx < list.length) {
    if (equals(list[idx], a)) {
      return idx;
    }
    idx += 1;
  }
  return -1;
};
}, 1584, null, "ramda/src/internal/_indexOf.js");
__d(/* ramda/src/equals.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2
var _equals = require(1586                ); // 1586 = ./internal/_equals

module.exports = _curry2(function equals(a, b) {
  return _equals(a, b, [], []);
});
}, 1585, null, "ramda/src/equals.js");
__d(/* ramda/src/internal/_equals.js */function(global, require, module, exports) {var _arrayFromIterator = require(1587                  ); // 1587 = ./_arrayFromIterator
var _functionName = require(1588             ); // 1588 = ./_functionName
var _has = require(1527    ); // 1527 = ./_has
var identical = require(1589          ); // 1589 = ../identical
var keys = require(1526     ); // 1526 = ../keys
var type = require(1565     ); // 1565 = ../type

module.exports = function _equals(a, b, stackA, stackB) {
  if (identical(a, b)) {
    return true;
  }

  if (type(a) !== type(b)) {
    return false;
  }

  if (a == null || b == null) {
    return false;
  }

  if (typeof a['fantasy-land/equals'] === 'function' || typeof b['fantasy-land/equals'] === 'function') {
    return typeof a['fantasy-land/equals'] === 'function' && a['fantasy-land/equals'](b) && typeof b['fantasy-land/equals'] === 'function' && b['fantasy-land/equals'](a);
  }

  if (typeof a.equals === 'function' || typeof b.equals === 'function') {
    return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);
  }

  switch (type(a)) {
    case 'Arguments':
    case 'Array':
    case 'Object':
      if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {
        return a === b;
      }
      break;
    case 'Boolean':
    case 'Number':
    case 'String':
      if (!(typeof a === typeof b && identical(a.valueOf(), b.valueOf()))) {
        return false;
      }
      break;
    case 'Date':
      if (!identical(a.valueOf(), b.valueOf())) {
        return false;
      }
      break;
    case 'Error':
      return a.name === b.name && a.message === b.message;
    case 'RegExp':
      if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {
        return false;
      }
      break;
    case 'Map':
    case 'Set':
      if (!_equals(_arrayFromIterator(a.entries()), _arrayFromIterator(b.entries()), stackA, stackB)) {
        return false;
      }
      break;
    case 'Int8Array':
    case 'Uint8Array':
    case 'Uint8ClampedArray':
    case 'Int16Array':
    case 'Uint16Array':
    case 'Int32Array':
    case 'Uint32Array':
    case 'Float32Array':
    case 'Float64Array':
      break;
    case 'ArrayBuffer':
      break;
    default:
      return false;
  }

  var keysA = keys(a);
  if (keysA.length !== keys(b).length) {
    return false;
  }

  var idx = stackA.length - 1;
  while (idx >= 0) {
    if (stackA[idx] === a) {
      return stackB[idx] === b;
    }
    idx -= 1;
  }

  stackA.push(a);
  stackB.push(b);
  idx = keysA.length - 1;
  while (idx >= 0) {
    var key = keysA[idx];
    if (!(_has(key, b) && _equals(b[key], a[key], stackA, stackB))) {
      return false;
    }
    idx -= 1;
  }
  stackA.pop();
  stackB.pop();
  return true;
};
}, 1586, null, "ramda/src/internal/_equals.js");
__d(/* ramda/src/internal/_arrayFromIterator.js */function(global, require, module, exports) {module.exports = function _arrayFromIterator(iter) {
  var list = [];
  var next;
  while (!(next = iter.next()).done) {
    list.push(next.value);
  }
  return list;
};
}, 1587, null, "ramda/src/internal/_arrayFromIterator.js");
__d(/* ramda/src/internal/_functionName.js */function(global, require, module, exports) {module.exports = function _functionName(f) {
  var match = String(f).match(/^function (\w*)/);
  return match == null ? '' : match[1];
};
}, 1588, null, "ramda/src/internal/_functionName.js");
__d(/* ramda/src/identical.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2

module.exports = _curry2(function identical(a, b) {
  if (a === b) {
    return a !== 0 || 1 / a === 1 / b;
  } else {
    return a !== a && b !== b;
  }
});
}, 1589, null, "ramda/src/identical.js");
__d(/* ramda/src/internal/_quote.js */function(global, require, module, exports) {module.exports = function _quote(s) {
  var escaped = s.replace(/\\/g, '\\\\').replace(/[\b]/g, '\\b').replace(/\f/g, '\\f').replace(/\n/g, '\\n').replace(/\r/g, '\\r').replace(/\t/g, '\\t').replace(/\v/g, '\\v').replace(/\0/g, '\\0');

  return '"' + escaped.replace(/"/g, '\\"') + '"';
};
}, 1590, null, "ramda/src/internal/_quote.js");
__d(/* ramda/src/internal/_toISOString.js */function(global, require, module, exports) {
module.exports = function () {
  var pad = function pad(n) {
    return (n < 10 ? '0' : '') + n;
  };

  return typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {
    return d.toISOString();
  } : function _toISOString(d) {
    return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';
  };
}();
}, 1591, null, "ramda/src/internal/_toISOString.js");
__d(/* ramda/src/reject.js */function(global, require, module, exports) {var _complement = require(1593                    ); // 1593 = ./internal/_complement
var _curry2 = require(1500                ); // 1500 = ./internal/_curry2
var filter = require(1594      ); // 1594 = ./filter

module.exports = _curry2(function reject(pred, filterable) {
  return filter(_complement(pred), filterable);
});
}, 1592, null, "ramda/src/reject.js");
__d(/* ramda/src/internal/_complement.js */function(global, require, module, exports) {module.exports = function _complement(f) {
  return function () {
    return !f.apply(this, arguments);
  };
};
}, 1593, null, "ramda/src/internal/_complement.js");
__d(/* ramda/src/filter.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2
var _dispatchable = require(1509                      ); // 1509 = ./internal/_dispatchable
var _filter = require(1595                ); // 1595 = ./internal/_filter
var _isObject = require(1596                  ); // 1596 = ./internal/_isObject
var _reduce = require(1520                ); // 1520 = ./internal/_reduce
var _xfilter = require(1597                 ); // 1597 = ./internal/_xfilter
var keys = require(1526    ); // 1526 = ./keys

module.exports = _curry2(_dispatchable(['filter'], _xfilter, function (pred, filterable) {
  return _isObject(filterable) ? _reduce(function (acc, key) {
    if (pred(filterable[key])) {
      acc[key] = filterable[key];
    }
    return acc;
  }, {}, keys(filterable)) : _filter(pred, filterable);
}));
}, 1594, null, "ramda/src/filter.js");
__d(/* ramda/src/internal/_filter.js */function(global, require, module, exports) {module.exports = function _filter(fn, list) {
  var idx = 0;
  var len = list.length;
  var result = [];

  while (idx < len) {
    if (fn(list[idx])) {
      result[result.length] = list[idx];
    }
    idx += 1;
  }
  return result;
};
}, 1595, null, "ramda/src/internal/_filter.js");
__d(/* ramda/src/internal/_isObject.js */function(global, require, module, exports) {module.exports = function _isObject(x) {
  return Object.prototype.toString.call(x) === '[object Object]';
};
}, 1596, null, "ramda/src/internal/_isObject.js");
__d(/* ramda/src/internal/_xfilter.js */function(global, require, module, exports) {var _curry2 = require(1500       ); // 1500 = ./_curry2
var _xfBase = require(1514       ); // 1514 = ./_xfBase

module.exports = function () {
  function XFilter(f, xf) {
    this.xf = xf;
    this.f = f;
  }
  XFilter.prototype['@@transducer/init'] = _xfBase.init;
  XFilter.prototype['@@transducer/result'] = _xfBase.result;
  XFilter.prototype['@@transducer/step'] = function (result, input) {
    return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;
  };

  return _curry2(function _xfilter(f, xf) {
    return new XFilter(f, xf);
  });
}();
}, 1597, null, "ramda/src/internal/_xfilter.js");
__d(/* ramda/src/cond.js */function(global, require, module, exports) {var _arity = require(1504               ); // 1504 = ./internal/_arity
var _curry1 = require(1495                ); // 1495 = ./internal/_curry1
var map = require(1518   ); // 1518 = ./map
var max = require(1516   ); // 1516 = ./max
var reduce = require(1530      ); // 1530 = ./reduce

module.exports = _curry1(function cond(pairs) {
  var arity = reduce(max, 0, map(function (pair) {
    return pair[0].length;
  }, pairs));
  return _arity(arity, function () {
    var idx = 0;
    while (idx < pairs.length) {
      if (pairs[idx][0].apply(this, arguments)) {
        return pairs[idx][1].apply(this, arguments);
      }
      idx += 1;
    }
  });
});
}, 1598, null, "ramda/src/cond.js");
__d(/* ramda/src/construct.js */function(global, require, module, exports) {var _curry1 = require(1495                ); // 1495 = ./internal/_curry1
var constructN = require(1600          ); // 1600 = ./constructN

module.exports = _curry1(function construct(Fn) {
  return constructN(Fn.length, Fn);
});
}, 1599, null, "ramda/src/construct.js");
__d(/* ramda/src/constructN.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2
var curry = require(1555     ); // 1555 = ./curry
var nAry = require(1549    ); // 1549 = ./nAry

module.exports = _curry2(function constructN(n, Fn) {
  if (n > 10) {
    throw new Error('Constructor with greater than ten arguments');
  }
  if (n === 0) {
    return function () {
      return new Fn();
    };
  }
  return curry(nAry(n, function ($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {
    switch (arguments.length) {
      case 1:
        return new Fn($0);
      case 2:
        return new Fn($0, $1);
      case 3:
        return new Fn($0, $1, $2);
      case 4:
        return new Fn($0, $1, $2, $3);
      case 5:
        return new Fn($0, $1, $2, $3, $4);
      case 6:
        return new Fn($0, $1, $2, $3, $4, $5);
      case 7:
        return new Fn($0, $1, $2, $3, $4, $5, $6);
      case 8:
        return new Fn($0, $1, $2, $3, $4, $5, $6, $7);
      case 9:
        return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8);
      case 10:
        return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8, $9);
    }
  }));
});
}, 1600, null, "ramda/src/constructN.js");
__d(/* ramda/src/contains.js */function(global, require, module, exports) {var _contains = require(1583                  ); // 1583 = ./internal/_contains
var _curry2 = require(1500                ); // 1500 = ./internal/_curry2

module.exports = _curry2(_contains);
}, 1601, null, "ramda/src/contains.js");
__d(/* ramda/src/converge.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2
var _map = require(1519             ); // 1519 = ./internal/_map
var curryN = require(1503      ); // 1503 = ./curryN
var max = require(1516   ); // 1516 = ./max
var pluck = require(1517     ); // 1517 = ./pluck
var reduce = require(1530      ); // 1530 = ./reduce

module.exports = _curry2(function converge(after, fns) {
  return curryN(reduce(max, 0, pluck('length', fns)), function () {
    var args = arguments;
    var context = this;
    return after.apply(context, _map(function (fn) {
      return fn.apply(context, args);
    }, fns));
  });
});
}, 1602, null, "ramda/src/converge.js");
__d(/* ramda/src/countBy.js */function(global, require, module, exports) {var reduceBy = require(1604        ); // 1604 = ./reduceBy

module.exports = reduceBy(function (acc, elem) {
  return acc + 1;
}, 0);
}, 1603, null, "ramda/src/countBy.js");
__d(/* ramda/src/reduceBy.js */function(global, require, module, exports) {var _curryN = require(1505                ); // 1505 = ./internal/_curryN
var _dispatchable = require(1509                      ); // 1509 = ./internal/_dispatchable
var _has = require(1527             ); // 1527 = ./internal/_has
var _reduce = require(1520                ); // 1520 = ./internal/_reduce
var _xreduceBy = require(1605                   ); // 1605 = ./internal/_xreduceBy

module.exports = _curryN(4, [], _dispatchable([], _xreduceBy, function reduceBy(valueFn, valueAcc, keyFn, list) {
  return _reduce(function (acc, elt) {
    var key = keyFn(elt);
    acc[key] = valueFn(_has(key, acc) ? acc[key] : valueAcc, elt);
    return acc;
  }, {}, list);
}));
}, 1604, null, "ramda/src/reduceBy.js");
__d(/* ramda/src/internal/_xreduceBy.js */function(global, require, module, exports) {var _curryN = require(1505       ); // 1505 = ./_curryN
var _has = require(1527    ); // 1527 = ./_has
var _xfBase = require(1514       ); // 1514 = ./_xfBase

module.exports = function () {
  function XReduceBy(valueFn, valueAcc, keyFn, xf) {
    this.valueFn = valueFn;
    this.valueAcc = valueAcc;
    this.keyFn = keyFn;
    this.xf = xf;
    this.inputs = {};
  }
  XReduceBy.prototype['@@transducer/init'] = _xfBase.init;
  XReduceBy.prototype['@@transducer/result'] = function (result) {
    var key;
    for (key in this.inputs) {
      if (_has(key, this.inputs)) {
        result = this.xf['@@transducer/step'](result, this.inputs[key]);
        if (result['@@transducer/reduced']) {
          result = result['@@transducer/value'];
          break;
        }
      }
    }
    this.inputs = null;
    return this.xf['@@transducer/result'](result);
  };
  XReduceBy.prototype['@@transducer/step'] = function (result, input) {
    var key = this.keyFn(input);
    this.inputs[key] = this.inputs[key] || [key, this.valueAcc];
    this.inputs[key][1] = this.valueFn(this.inputs[key][1], input);
    return result;
  };

  return _curryN(4, [], function _xreduceBy(valueFn, valueAcc, keyFn, xf) {
    return new XReduceBy(valueFn, valueAcc, keyFn, xf);
  });
}();
}, 1605, null, "ramda/src/internal/_xreduceBy.js");
__d(/* ramda/src/dec.js */function(global, require, module, exports) {var add = require(1499   ); // 1499 = ./add

module.exports = add(-1);
}, 1606, null, "ramda/src/dec.js");
__d(/* ramda/src/defaultTo.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2

module.exports = _curry2(function defaultTo(d, v) {
  return v == null || v !== v ? d : v;
});
}, 1607, null, "ramda/src/defaultTo.js");
__d(/* ramda/src/descend.js */function(global, require, module, exports) {var _curry3 = require(1507                ); // 1507 = ./internal/_curry3

module.exports = _curry3(function descend(fn, a, b) {
  var aa = fn(a);
  var bb = fn(b);
  return aa > bb ? -1 : aa < bb ? 1 : 0;
});
}, 1608, null, "ramda/src/descend.js");
__d(/* ramda/src/difference.js */function(global, require, module, exports) {var _contains = require(1583                  ); // 1583 = ./internal/_contains
var _curry2 = require(1500                ); // 1500 = ./internal/_curry2

module.exports = _curry2(function difference(first, second) {
  var out = [];
  var idx = 0;
  var firstLen = first.length;
  while (idx < firstLen) {
    if (!_contains(first[idx], second) && !_contains(first[idx], out)) {
      out[out.length] = first[idx];
    }
    idx += 1;
  }
  return out;
});
}, 1609, null, "ramda/src/difference.js");
__d(/* ramda/src/differenceWith.js */function(global, require, module, exports) {var _containsWith = require(1611                      ); // 1611 = ./internal/_containsWith
var _curry3 = require(1507                ); // 1507 = ./internal/_curry3

module.exports = _curry3(function differenceWith(pred, first, second) {
  var out = [];
  var idx = 0;
  var firstLen = first.length;
  while (idx < firstLen) {
    if (!_containsWith(pred, first[idx], second) && !_containsWith(pred, first[idx], out)) {
      out.push(first[idx]);
    }
    idx += 1;
  }
  return out;
});
}, 1610, null, "ramda/src/differenceWith.js");
__d(/* ramda/src/internal/_containsWith.js */function(global, require, module, exports) {module.exports = function _containsWith(pred, x, list) {
  var idx = 0;
  var len = list.length;

  while (idx < len) {
    if (pred(x, list[idx])) {
      return true;
    }
    idx += 1;
  }
  return false;
};
}, 1611, null, "ramda/src/internal/_containsWith.js");
__d(/* ramda/src/dissoc.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2

module.exports = _curry2(function dissoc(prop, obj) {
  var result = {};
  for (var p in obj) {
    result[p] = obj[p];
  }
  delete result[prop];
  return result;
});
}, 1612, null, "ramda/src/dissoc.js");
__d(/* ramda/src/dissocPath.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2
var _isInteger = require(1546                   ); // 1546 = ./internal/_isInteger
var assoc = require(1544     ); // 1544 = ./assoc
var dissoc = require(1612      ); // 1612 = ./dissoc
var remove = require(1614      ); // 1614 = ./remove
var update = require(1615      ); // 1615 = ./update

module.exports = _curry2(function dissocPath(path, obj) {
  switch (path.length) {
    case 0:
      return obj;
    case 1:
      return _isInteger(path[0]) ? remove(path[0], 1, obj) : dissoc(path[0], obj);
    default:
      var head = path[0];
      var tail = Array.prototype.slice.call(path, 1);
      if (obj[head] == null) {
        return obj;
      } else if (_isInteger(path[0])) {
        return update(head, dissocPath(tail, obj[head]), obj);
      } else {
        return assoc(head, dissocPath(tail, obj[head]), obj);
      }
  }
});
}, 1613, null, "ramda/src/dissocPath.js");
__d(/* ramda/src/remove.js */function(global, require, module, exports) {var _curry3 = require(1507                ); // 1507 = ./internal/_curry3

module.exports = _curry3(function remove(start, count, list) {
  var result = Array.prototype.slice.call(list, 0);
  result.splice(start, count);
  return result;
});
}, 1614, null, "ramda/src/remove.js");
__d(/* ramda/src/update.js */function(global, require, module, exports) {var _curry3 = require(1507                ); // 1507 = ./internal/_curry3
var adjust = require(1506      ); // 1506 = ./adjust
var always = require(1494      ); // 1494 = ./always

module.exports = _curry3(function update(idx, x, list) {
  return adjust(always(x), idx, list);
});
}, 1615, null, "ramda/src/update.js");
__d(/* ramda/src/divide.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2

module.exports = _curry2(function divide(a, b) {
  return a / b;
});
}, 1616, null, "ramda/src/divide.js");
__d(/* ramda/src/drop.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2
var _dispatchable = require(1509                      ); // 1509 = ./internal/_dispatchable
var _xdrop = require(1618               ); // 1618 = ./internal/_xdrop
var slice = require(1574     ); // 1574 = ./slice

module.exports = _curry2(_dispatchable(['drop'], _xdrop, function drop(n, xs) {
  return slice(Math.max(0, n), Infinity, xs);
}));
}, 1617, null, "ramda/src/drop.js");
__d(/* ramda/src/internal/_xdrop.js */function(global, require, module, exports) {var _curry2 = require(1500       ); // 1500 = ./_curry2
var _xfBase = require(1514       ); // 1514 = ./_xfBase

module.exports = function () {
  function XDrop(n, xf) {
    this.xf = xf;
    this.n = n;
  }
  XDrop.prototype['@@transducer/init'] = _xfBase.init;
  XDrop.prototype['@@transducer/result'] = _xfBase.result;
  XDrop.prototype['@@transducer/step'] = function (result, input) {
    if (this.n > 0) {
      this.n -= 1;
      return result;
    }
    return this.xf['@@transducer/step'](result, input);
  };

  return _curry2(function _xdrop(n, xf) {
    return new XDrop(n, xf);
  });
}();
}, 1618, null, "ramda/src/internal/_xdrop.js");
__d(/* ramda/src/dropLast.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2
var _dispatchable = require(1509                      ); // 1509 = ./internal/_dispatchable
var _dropLast = require(1620                  ); // 1620 = ./internal/_dropLast
var _xdropLast = require(1623                   ); // 1623 = ./internal/_xdropLast

module.exports = _curry2(_dispatchable([], _xdropLast, _dropLast));
}, 1619, null, "ramda/src/dropLast.js");
__d(/* ramda/src/internal/_dropLast.js */function(global, require, module, exports) {var take = require(1621     ); // 1621 = ../take

module.exports = function dropLast(n, xs) {
  return take(n < xs.length ? xs.length - n : 0, xs);
};
}, 1620, null, "ramda/src/internal/_dropLast.js");
__d(/* ramda/src/take.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2
var _dispatchable = require(1509                      ); // 1509 = ./internal/_dispatchable
var _xtake = require(1622               ); // 1622 = ./internal/_xtake
var slice = require(1574     ); // 1574 = ./slice

module.exports = _curry2(_dispatchable(['take'], _xtake, function take(n, xs) {
  return slice(0, n < 0 ? Infinity : n, xs);
}));
}, 1621, null, "ramda/src/take.js");
__d(/* ramda/src/internal/_xtake.js */function(global, require, module, exports) {var _curry2 = require(1500       ); // 1500 = ./_curry2
var _reduced = require(1513        ); // 1513 = ./_reduced
var _xfBase = require(1514       ); // 1514 = ./_xfBase

module.exports = function () {
  function XTake(n, xf) {
    this.xf = xf;
    this.n = n;
    this.i = 0;
  }
  XTake.prototype['@@transducer/init'] = _xfBase.init;
  XTake.prototype['@@transducer/result'] = _xfBase.result;
  XTake.prototype['@@transducer/step'] = function (result, input) {
    this.i += 1;
    var ret = this.n === 0 ? result : this.xf['@@transducer/step'](result, input);
    return this.n >= 0 && this.i >= this.n ? _reduced(ret) : ret;
  };

  return _curry2(function _xtake(n, xf) {
    return new XTake(n, xf);
  });
}();
}, 1622, null, "ramda/src/internal/_xtake.js");
__d(/* ramda/src/internal/_xdropLast.js */function(global, require, module, exports) {var _curry2 = require(1500       ); // 1500 = ./_curry2
var _xfBase = require(1514       ); // 1514 = ./_xfBase

module.exports = function () {
  function XDropLast(n, xf) {
    this.xf = xf;
    this.pos = 0;
    this.full = false;
    this.acc = new Array(n);
  }
  XDropLast.prototype['@@transducer/init'] = _xfBase.init;
  XDropLast.prototype['@@transducer/result'] = function (result) {
    this.acc = null;
    return this.xf['@@transducer/result'](result);
  };
  XDropLast.prototype['@@transducer/step'] = function (result, input) {
    if (this.full) {
      result = this.xf['@@transducer/step'](result, this.acc[this.pos]);
    }
    this.store(input);
    return result;
  };
  XDropLast.prototype.store = function (input) {
    this.acc[this.pos] = input;
    this.pos += 1;
    if (this.pos === this.acc.length) {
      this.pos = 0;
      this.full = true;
    }
  };

  return _curry2(function _xdropLast(n, xf) {
    return new XDropLast(n, xf);
  });
}();
}, 1623, null, "ramda/src/internal/_xdropLast.js");
__d(/* ramda/src/dropLastWhile.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2
var _dispatchable = require(1509                      ); // 1509 = ./internal/_dispatchable
var _dropLastWhile = require(1625                       ); // 1625 = ./internal/_dropLastWhile
var _xdropLastWhile = require(1626                        ); // 1626 = ./internal/_xdropLastWhile

module.exports = _curry2(_dispatchable([], _xdropLastWhile, _dropLastWhile));
}, 1624, null, "ramda/src/dropLastWhile.js");
__d(/* ramda/src/internal/_dropLastWhile.js */function(global, require, module, exports) {module.exports = function dropLastWhile(pred, list) {
  var idx = list.length - 1;
  while (idx >= 0 && pred(list[idx])) {
    idx -= 1;
  }
  return Array.prototype.slice.call(list, 0, idx + 1);
};
}, 1625, null, "ramda/src/internal/_dropLastWhile.js");
__d(/* ramda/src/internal/_xdropLastWhile.js */function(global, require, module, exports) {var _curry2 = require(1500       ); // 1500 = ./_curry2
var _reduce = require(1520       ); // 1520 = ./_reduce
var _xfBase = require(1514       ); // 1514 = ./_xfBase

module.exports = function () {
  function XDropLastWhile(fn, xf) {
    this.f = fn;
    this.retained = [];
    this.xf = xf;
  }
  XDropLastWhile.prototype['@@transducer/init'] = _xfBase.init;
  XDropLastWhile.prototype['@@transducer/result'] = function (result) {
    this.retained = null;
    return this.xf['@@transducer/result'](result);
  };
  XDropLastWhile.prototype['@@transducer/step'] = function (result, input) {
    return this.f(input) ? this.retain(result, input) : this.flush(result, input);
  };
  XDropLastWhile.prototype.flush = function (result, input) {
    result = _reduce(this.xf['@@transducer/step'], result, this.retained);
    this.retained = [];
    return this.xf['@@transducer/step'](result, input);
  };
  XDropLastWhile.prototype.retain = function (result, input) {
    this.retained.push(input);
    return result;
  };

  return _curry2(function _xdropLastWhile(fn, xf) {
    return new XDropLastWhile(fn, xf);
  });
}();
}, 1626, null, "ramda/src/internal/_xdropLastWhile.js");
__d(/* ramda/src/dropRepeats.js */function(global, require, module, exports) {var _curry1 = require(1495                ); // 1495 = ./internal/_curry1
var _dispatchable = require(1509                      ); // 1509 = ./internal/_dispatchable
var _xdropRepeatsWith = require(1628                          ); // 1628 = ./internal/_xdropRepeatsWith
var dropRepeatsWith = require(1629               ); // 1629 = ./dropRepeatsWith
var equals = require(1585      ); // 1585 = ./equals

module.exports = _curry1(_dispatchable([], _xdropRepeatsWith(equals), dropRepeatsWith(equals)));
}, 1627, null, "ramda/src/dropRepeats.js");
__d(/* ramda/src/internal/_xdropRepeatsWith.js */function(global, require, module, exports) {var _curry2 = require(1500       ); // 1500 = ./_curry2
var _xfBase = require(1514       ); // 1514 = ./_xfBase

module.exports = function () {
  function XDropRepeatsWith(pred, xf) {
    this.xf = xf;
    this.pred = pred;
    this.lastValue = undefined;
    this.seenFirstValue = false;
  }

  XDropRepeatsWith.prototype['@@transducer/init'] = _xfBase.init;
  XDropRepeatsWith.prototype['@@transducer/result'] = _xfBase.result;
  XDropRepeatsWith.prototype['@@transducer/step'] = function (result, input) {
    var sameAsLast = false;
    if (!this.seenFirstValue) {
      this.seenFirstValue = true;
    } else if (this.pred(this.lastValue, input)) {
      sameAsLast = true;
    }
    this.lastValue = input;
    return sameAsLast ? result : this.xf['@@transducer/step'](result, input);
  };

  return _curry2(function _xdropRepeatsWith(pred, xf) {
    return new XDropRepeatsWith(pred, xf);
  });
}();
}, 1628, null, "ramda/src/internal/_xdropRepeatsWith.js");
__d(/* ramda/src/dropRepeatsWith.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2
var _dispatchable = require(1509                      ); // 1509 = ./internal/_dispatchable
var _xdropRepeatsWith = require(1628                          ); // 1628 = ./internal/_xdropRepeatsWith
var last = require(1630    ); // 1630 = ./last

module.exports = _curry2(_dispatchable([], _xdropRepeatsWith, function dropRepeatsWith(pred, list) {
  var result = [];
  var idx = 1;
  var len = list.length;
  if (len !== 0) {
    result[0] = list[0];
    while (idx < len) {
      if (!pred(last(result), list[idx])) {
        result[result.length] = list[idx];
      }
      idx += 1;
    }
  }
  return result;
}));
}, 1629, null, "ramda/src/dropRepeatsWith.js");
__d(/* ramda/src/last.js */function(global, require, module, exports) {var nth = require(1631   ); // 1631 = ./nth

module.exports = nth(-1);
}, 1630, null, "ramda/src/last.js");
__d(/* ramda/src/nth.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2
var _isString = require(1522                  ); // 1522 = ./internal/_isString

module.exports = _curry2(function nth(offset, list) {
  var idx = offset < 0 ? list.length + offset : offset;
  return _isString(list) ? list.charAt(idx) : list[idx];
});
}, 1631, null, "ramda/src/nth.js");
__d(/* ramda/src/dropWhile.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2
var _dispatchable = require(1509                      ); // 1509 = ./internal/_dispatchable
var _xdropWhile = require(1633                    ); // 1633 = ./internal/_xdropWhile

module.exports = _curry2(_dispatchable(['dropWhile'], _xdropWhile, function dropWhile(pred, list) {
  var idx = 0;
  var len = list.length;
  while (idx < len && pred(list[idx])) {
    idx += 1;
  }
  return Array.prototype.slice.call(list, idx);
}));
}, 1632, null, "ramda/src/dropWhile.js");
__d(/* ramda/src/internal/_xdropWhile.js */function(global, require, module, exports) {var _curry2 = require(1500       ); // 1500 = ./_curry2
var _xfBase = require(1514       ); // 1514 = ./_xfBase

module.exports = function () {
  function XDropWhile(f, xf) {
    this.xf = xf;
    this.f = f;
  }
  XDropWhile.prototype['@@transducer/init'] = _xfBase.init;
  XDropWhile.prototype['@@transducer/result'] = _xfBase.result;
  XDropWhile.prototype['@@transducer/step'] = function (result, input) {
    if (this.f) {
      if (this.f(input)) {
        return result;
      }
      this.f = null;
    }
    return this.xf['@@transducer/step'](result, input);
  };

  return _curry2(function _xdropWhile(f, xf) {
    return new XDropWhile(f, xf);
  });
}();
}, 1633, null, "ramda/src/internal/_xdropWhile.js");
__d(/* ramda/src/either.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2
var _isFunction = require(1551                    ); // 1551 = ./internal/_isFunction
var lift = require(1552    ); // 1552 = ./lift
var or = require(1635  ); // 1635 = ./or

module.exports = _curry2(function either(f, g) {
  return _isFunction(f) ? function _either() {
    return f.apply(this, arguments) || g.apply(this, arguments);
  } : lift(or)(f, g);
});
}, 1634, null, "ramda/src/either.js");
__d(/* ramda/src/or.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2

module.exports = _curry2(function or(a, b) {
  return a || b;
});
}, 1635, null, "ramda/src/or.js");
__d(/* ramda/src/empty.js */function(global, require, module, exports) {var _curry1 = require(1495                ); // 1495 = ./internal/_curry1
var _isArguments = require(1528                     ); // 1528 = ./internal/_isArguments
var _isArray = require(1510                 ); // 1510 = ./internal/_isArray
var _isObject = require(1596                  ); // 1596 = ./internal/_isObject
var _isString = require(1522                  ); // 1522 = ./internal/_isString

module.exports = _curry1(function empty(x) {
  return x != null && typeof x['fantasy-land/empty'] === 'function' ? x['fantasy-land/empty']() : x != null && x.constructor != null && typeof x.constructor['fantasy-land/empty'] === 'function' ? x.constructor['fantasy-land/empty']() : x != null && typeof x.empty === 'function' ? x.empty() : x != null && x.constructor != null && typeof x.constructor.empty === 'function' ? x.constructor.empty() : _isArray(x) ? [] : _isString(x) ? '' : _isObject(x) ? {} : _isArguments(x) ? function () {
    return arguments;
  }() : void 0;
});
}, 1636, null, "ramda/src/empty.js");
__d(/* ramda/src/endsWith.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2
var equals = require(1585      ); // 1585 = ./equals
var takeLast = require(1638        ); // 1638 = ./takeLast

module.exports = _curry2(function (suffix, list) {
  return equals(takeLast(suffix.length, list), suffix);
});
}, 1637, null, "ramda/src/endsWith.js");
__d(/* ramda/src/takeLast.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2
var drop = require(1617    ); // 1617 = ./drop

module.exports = _curry2(function takeLast(n, xs) {
  return drop(n >= 0 ? xs.length - n : 0, xs);
});
}, 1638, null, "ramda/src/takeLast.js");
__d(/* ramda/src/eqBy.js */function(global, require, module, exports) {var _curry3 = require(1507                ); // 1507 = ./internal/_curry3
var equals = require(1585      ); // 1585 = ./equals

module.exports = _curry3(function eqBy(f, x, y) {
  return equals(f(x), f(y));
});
}, 1639, null, "ramda/src/eqBy.js");
__d(/* ramda/src/eqProps.js */function(global, require, module, exports) {var _curry3 = require(1507                ); // 1507 = ./internal/_curry3
var equals = require(1585      ); // 1585 = ./equals

module.exports = _curry3(function eqProps(prop, obj1, obj2) {
  return equals(obj1[prop], obj2[prop]);
});
}, 1640, null, "ramda/src/eqProps.js");
__d(/* ramda/src/evolve.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2

module.exports = _curry2(function evolve(transformations, object) {
  var result = {};
  var transformation, key, type;
  for (key in object) {
    transformation = transformations[key];
    type = typeof transformation;
    result[key] = type === 'function' ? transformation(object[key]) : transformation && type === 'object' ? evolve(transformation, object[key]) : object[key];
  }
  return result;
});
}, 1641, null, "ramda/src/evolve.js");
__d(/* ramda/src/find.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2
var _dispatchable = require(1509                      ); // 1509 = ./internal/_dispatchable
var _xfind = require(1643               ); // 1643 = ./internal/_xfind

module.exports = _curry2(_dispatchable(['find'], _xfind, function find(fn, list) {
  var idx = 0;
  var len = list.length;
  while (idx < len) {
    if (fn(list[idx])) {
      return list[idx];
    }
    idx += 1;
  }
}));
}, 1642, null, "ramda/src/find.js");
__d(/* ramda/src/internal/_xfind.js */function(global, require, module, exports) {var _curry2 = require(1500       ); // 1500 = ./_curry2
var _reduced = require(1513        ); // 1513 = ./_reduced
var _xfBase = require(1514       ); // 1514 = ./_xfBase

module.exports = function () {
  function XFind(f, xf) {
    this.xf = xf;
    this.f = f;
    this.found = false;
  }
  XFind.prototype['@@transducer/init'] = _xfBase.init;
  XFind.prototype['@@transducer/result'] = function (result) {
    if (!this.found) {
      result = this.xf['@@transducer/step'](result, void 0);
    }
    return this.xf['@@transducer/result'](result);
  };
  XFind.prototype['@@transducer/step'] = function (result, input) {
    if (this.f(input)) {
      this.found = true;
      result = _reduced(this.xf['@@transducer/step'](result, input));
    }
    return result;
  };

  return _curry2(function _xfind(f, xf) {
    return new XFind(f, xf);
  });
}();
}, 1643, null, "ramda/src/internal/_xfind.js");
__d(/* ramda/src/findIndex.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2
var _dispatchable = require(1509                      ); // 1509 = ./internal/_dispatchable
var _xfindIndex = require(1645                    ); // 1645 = ./internal/_xfindIndex

module.exports = _curry2(_dispatchable([], _xfindIndex, function findIndex(fn, list) {
  var idx = 0;
  var len = list.length;
  while (idx < len) {
    if (fn(list[idx])) {
      return idx;
    }
    idx += 1;
  }
  return -1;
}));
}, 1644, null, "ramda/src/findIndex.js");
__d(/* ramda/src/internal/_xfindIndex.js */function(global, require, module, exports) {var _curry2 = require(1500       ); // 1500 = ./_curry2
var _reduced = require(1513        ); // 1513 = ./_reduced
var _xfBase = require(1514       ); // 1514 = ./_xfBase

module.exports = function () {
  function XFindIndex(f, xf) {
    this.xf = xf;
    this.f = f;
    this.idx = -1;
    this.found = false;
  }
  XFindIndex.prototype['@@transducer/init'] = _xfBase.init;
  XFindIndex.prototype['@@transducer/result'] = function (result) {
    if (!this.found) {
      result = this.xf['@@transducer/step'](result, -1);
    }
    return this.xf['@@transducer/result'](result);
  };
  XFindIndex.prototype['@@transducer/step'] = function (result, input) {
    this.idx += 1;
    if (this.f(input)) {
      this.found = true;
      result = _reduced(this.xf['@@transducer/step'](result, this.idx));
    }
    return result;
  };

  return _curry2(function _xfindIndex(f, xf) {
    return new XFindIndex(f, xf);
  });
}();
}, 1645, null, "ramda/src/internal/_xfindIndex.js");
__d(/* ramda/src/findLast.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2
var _dispatchable = require(1509                      ); // 1509 = ./internal/_dispatchable
var _xfindLast = require(1647                   ); // 1647 = ./internal/_xfindLast

module.exports = _curry2(_dispatchable([], _xfindLast, function findLast(fn, list) {
  var idx = list.length - 1;
  while (idx >= 0) {
    if (fn(list[idx])) {
      return list[idx];
    }
    idx -= 1;
  }
}));
}, 1646, null, "ramda/src/findLast.js");
__d(/* ramda/src/internal/_xfindLast.js */function(global, require, module, exports) {var _curry2 = require(1500       ); // 1500 = ./_curry2
var _xfBase = require(1514       ); // 1514 = ./_xfBase

module.exports = function () {
  function XFindLast(f, xf) {
    this.xf = xf;
    this.f = f;
  }
  XFindLast.prototype['@@transducer/init'] = _xfBase.init;
  XFindLast.prototype['@@transducer/result'] = function (result) {
    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.last));
  };
  XFindLast.prototype['@@transducer/step'] = function (result, input) {
    if (this.f(input)) {
      this.last = input;
    }
    return result;
  };

  return _curry2(function _xfindLast(f, xf) {
    return new XFindLast(f, xf);
  });
}();
}, 1647, null, "ramda/src/internal/_xfindLast.js");
__d(/* ramda/src/findLastIndex.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2
var _dispatchable = require(1509                      ); // 1509 = ./internal/_dispatchable
var _xfindLastIndex = require(1649                        ); // 1649 = ./internal/_xfindLastIndex

module.exports = _curry2(_dispatchable([], _xfindLastIndex, function findLastIndex(fn, list) {
  var idx = list.length - 1;
  while (idx >= 0) {
    if (fn(list[idx])) {
      return idx;
    }
    idx -= 1;
  }
  return -1;
}));
}, 1648, null, "ramda/src/findLastIndex.js");
__d(/* ramda/src/internal/_xfindLastIndex.js */function(global, require, module, exports) {var _curry2 = require(1500       ); // 1500 = ./_curry2
var _xfBase = require(1514       ); // 1514 = ./_xfBase

module.exports = function () {
  function XFindLastIndex(f, xf) {
    this.xf = xf;
    this.f = f;
    this.idx = -1;
    this.lastIdx = -1;
  }
  XFindLastIndex.prototype['@@transducer/init'] = _xfBase.init;
  XFindLastIndex.prototype['@@transducer/result'] = function (result) {
    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.lastIdx));
  };
  XFindLastIndex.prototype['@@transducer/step'] = function (result, input) {
    this.idx += 1;
    if (this.f(input)) {
      this.lastIdx = this.idx;
    }
    return result;
  };

  return _curry2(function _xfindLastIndex(f, xf) {
    return new XFindLastIndex(f, xf);
  });
}();
}, 1649, null, "ramda/src/internal/_xfindLastIndex.js");
__d(/* ramda/src/flatten.js */function(global, require, module, exports) {var _curry1 = require(1495                ); // 1495 = ./internal/_curry1
var _makeFlat = require(1557                  ); // 1557 = ./internal/_makeFlat

module.exports = _curry1(_makeFlat(true));
}, 1650, null, "ramda/src/flatten.js");
__d(/* ramda/src/flip.js */function(global, require, module, exports) {var _curry1 = require(1495                ); // 1495 = ./internal/_curry1
var curry = require(1555     ); // 1555 = ./curry

module.exports = _curry1(function flip(fn) {
  return curry(function (a, b) {
    var args = Array.prototype.slice.call(arguments, 0);
    args[0] = b;
    args[1] = a;
    return fn.apply(this, args);
  });
});
}, 1651, null, "ramda/src/flip.js");
__d(/* ramda/src/forEach.js */function(global, require, module, exports) {var _checkForMethod = require(1573                        ); // 1573 = ./internal/_checkForMethod
var _curry2 = require(1500                ); // 1500 = ./internal/_curry2

module.exports = _curry2(_checkForMethod('forEach', function forEach(fn, list) {
  var len = list.length;
  var idx = 0;
  while (idx < len) {
    fn(list[idx]);
    idx += 1;
  }
  return list;
}));
}, 1652, null, "ramda/src/forEach.js");
__d(/* ramda/src/forEachObjIndexed.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2
var keys = require(1526    ); // 1526 = ./keys

module.exports = _curry2(function forEachObjIndexed(fn, obj) {
  var keyList = keys(obj);
  var idx = 0;
  while (idx < keyList.length) {
    var key = keyList[idx];
    fn(obj[key], key, obj);
    idx += 1;
  }
  return obj;
});
}, 1653, null, "ramda/src/forEachObjIndexed.js");
__d(/* ramda/src/fromPairs.js */function(global, require, module, exports) {var _curry1 = require(1495                ); // 1495 = ./internal/_curry1

module.exports = _curry1(function fromPairs(pairs) {
  var result = {};
  var idx = 0;
  while (idx < pairs.length) {
    result[pairs[idx][0]] = pairs[idx][1];
    idx += 1;
  }
  return result;
});
}, 1654, null, "ramda/src/fromPairs.js");
__d(/* ramda/src/groupBy.js */function(global, require, module, exports) {var _checkForMethod = require(1573                        ); // 1573 = ./internal/_checkForMethod
var _curry2 = require(1500                ); // 1500 = ./internal/_curry2
var reduceBy = require(1604        ); // 1604 = ./reduceBy

module.exports = _curry2(_checkForMethod('groupBy', reduceBy(function (acc, item) {
  if (acc == null) {
    acc = [];
  }
  acc.push(item);
  return acc;
}, null)));
}, 1655, null, "ramda/src/groupBy.js");
__d(/* ramda/src/groupWith.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2

module.exports = _curry2(function (fn, list) {
  var res = [];
  var idx = 0;
  var len = list.length;
  while (idx < len) {
    var nextidx = idx + 1;
    while (nextidx < len && fn(list[nextidx - 1], list[nextidx])) {
      nextidx += 1;
    }
    res.push(list.slice(idx, nextidx));
    idx = nextidx;
  }
  return res;
});
}, 1656, null, "ramda/src/groupWith.js");
__d(/* ramda/src/gt.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2

module.exports = _curry2(function gt(a, b) {
  return a > b;
});
}, 1657, null, "ramda/src/gt.js");
__d(/* ramda/src/gte.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2

module.exports = _curry2(function gte(a, b) {
  return a >= b;
});
}, 1658, null, "ramda/src/gte.js");
__d(/* ramda/src/has.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2
var _has = require(1527             ); // 1527 = ./internal/_has

module.exports = _curry2(_has);
}, 1659, null, "ramda/src/has.js");
__d(/* ramda/src/hasIn.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2

module.exports = _curry2(function hasIn(prop, obj) {
  return prop in obj;
});
}, 1660, null, "ramda/src/hasIn.js");
__d(/* ramda/src/head.js */function(global, require, module, exports) {var nth = require(1631   ); // 1631 = ./nth

module.exports = nth(0);
}, 1661, null, "ramda/src/head.js");
__d(/* ramda/src/identity.js */function(global, require, module, exports) {var _curry1 = require(1495                ); // 1495 = ./internal/_curry1
var _identity = require(1663                  ); // 1663 = ./internal/_identity

module.exports = _curry1(_identity);
}, 1662, null, "ramda/src/identity.js");
__d(/* ramda/src/internal/_identity.js */function(global, require, module, exports) {module.exports = function _identity(x) {
  return x;
};
}, 1663, null, "ramda/src/internal/_identity.js");
__d(/* ramda/src/ifElse.js */function(global, require, module, exports) {var _curry3 = require(1507                ); // 1507 = ./internal/_curry3
var curryN = require(1503      ); // 1503 = ./curryN

module.exports = _curry3(function ifElse(condition, onTrue, onFalse) {
  return curryN(Math.max(condition.length, onTrue.length, onFalse.length), function _ifElse() {
    return condition.apply(this, arguments) ? onTrue.apply(this, arguments) : onFalse.apply(this, arguments);
  });
});
}, 1664, null, "ramda/src/ifElse.js");
__d(/* ramda/src/inc.js */function(global, require, module, exports) {var add = require(1499   ); // 1499 = ./add

module.exports = add(1);
}, 1665, null, "ramda/src/inc.js");
__d(/* ramda/src/indexBy.js */function(global, require, module, exports) {var reduceBy = require(1604        ); // 1604 = ./reduceBy

module.exports = reduceBy(function (acc, elem) {
  return elem;
}, null);
}, 1666, null, "ramda/src/indexBy.js");
__d(/* ramda/src/indexOf.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2
var _indexOf = require(1584                 ); // 1584 = ./internal/_indexOf
var _isArray = require(1510                 ); // 1510 = ./internal/_isArray

module.exports = _curry2(function indexOf(target, xs) {
  return typeof xs.indexOf === 'function' && !_isArray(xs) ? xs.indexOf(target) : _indexOf(xs, target, 0);
});
}, 1667, null, "ramda/src/indexOf.js");
__d(/* ramda/src/init.js */function(global, require, module, exports) {var slice = require(1574     ); // 1574 = ./slice

module.exports = slice(0, -1);
}, 1668, null, "ramda/src/init.js");
__d(/* ramda/src/innerJoin.js */function(global, require, module, exports) {var _containsWith = require(1611                      ); // 1611 = ./internal/_containsWith
var _curry3 = require(1507                ); // 1507 = ./internal/_curry3
var _filter = require(1595                ); // 1595 = ./internal/_filter

module.exports = _curry3(function innerJoin(pred, xs, ys) {
  return _filter(function (x) {
    return _containsWith(pred, x, ys);
  }, xs);
});
}, 1669, null, "ramda/src/innerJoin.js");
__d(/* ramda/src/insert.js */function(global, require, module, exports) {var _curry3 = require(1507                ); // 1507 = ./internal/_curry3

module.exports = _curry3(function insert(idx, elt, list) {
  idx = idx < list.length && idx >= 0 ? idx : list.length;
  var result = Array.prototype.slice.call(list, 0);
  result.splice(idx, 0, elt);
  return result;
});
}, 1670, null, "ramda/src/insert.js");
__d(/* ramda/src/insertAll.js */function(global, require, module, exports) {var _curry3 = require(1507                ); // 1507 = ./internal/_curry3

module.exports = _curry3(function insertAll(idx, elts, list) {
  idx = idx < list.length && idx >= 0 ? idx : list.length;
  return [].concat(Array.prototype.slice.call(list, 0, idx), elts, Array.prototype.slice.call(list, idx));
});
}, 1671, null, "ramda/src/insertAll.js");
__d(/* ramda/src/intersection.js */function(global, require, module, exports) {var _contains = require(1583                  ); // 1583 = ./internal/_contains
var _curry2 = require(1500                ); // 1500 = ./internal/_curry2
var _filter = require(1595                ); // 1595 = ./internal/_filter
var flip = require(1651    ); // 1651 = ./flip
var uniq = require(1673    ); // 1673 = ./uniq

module.exports = _curry2(function intersection(list1, list2) {
  var lookupList, filteredList;
  if (list1.length > list2.length) {
    lookupList = list1;
    filteredList = list2;
  } else {
    lookupList = list2;
    filteredList = list1;
  }
  return uniq(_filter(flip(_contains)(lookupList), filteredList));
});
}, 1672, null, "ramda/src/intersection.js");
__d(/* ramda/src/uniq.js */function(global, require, module, exports) {var identity = require(1662        ); // 1662 = ./identity
var uniqBy = require(1674      ); // 1674 = ./uniqBy

module.exports = uniqBy(identity);
}, 1673, null, "ramda/src/uniq.js");
__d(/* ramda/src/uniqBy.js */function(global, require, module, exports) {var _Set = require(1675             ); // 1675 = ./internal/_Set
var _curry2 = require(1500                ); // 1500 = ./internal/_curry2

module.exports = _curry2(function uniqBy(fn, list) {
  var set = new _Set();
  var result = [];
  var idx = 0;
  var appliedItem, item;

  while (idx < list.length) {
    item = list[idx];
    appliedItem = fn(item);
    if (set.add(appliedItem)) {
      result.push(item);
    }
    idx += 1;
  }
  return result;
});
}, 1674, null, "ramda/src/uniqBy.js");
__d(/* ramda/src/internal/_Set.js */function(global, require, module, exports) {var _contains = require(1583         ); // 1583 = ./_contains

module.exports = function () {
  function _Set() {
    this._nativeSet = typeof Set === 'function' ? new Set() : null;
    this._items = {};
  }

  _Set.prototype.add = function (item) {
    return !hasOrAdd(item, true, this);
  };

  _Set.prototype.has = function (item) {
    return hasOrAdd(item, false, this);
  };

  function hasOrAdd(item, shouldAdd, set) {
    var type = typeof item;
    var prevSize, newSize;
    switch (type) {
      case 'string':
      case 'number':
        if (item === 0 && 1 / item === -Infinity) {
          if (set._items['-0']) {
            return true;
          } else {
            if (shouldAdd) {
              set._items['-0'] = true;
            }
            return false;
          }
        }

        if (set._nativeSet !== null) {
          if (shouldAdd) {
            prevSize = set._nativeSet.size;
            set._nativeSet.add(item);
            newSize = set._nativeSet.size;
            return newSize === prevSize;
          } else {
            return set._nativeSet.has(item);
          }
        } else {
          if (!(type in set._items)) {
            if (shouldAdd) {
              set._items[type] = {};
              set._items[type][item] = true;
            }
            return false;
          } else if (item in set._items[type]) {
            return true;
          } else {
            if (shouldAdd) {
              set._items[type][item] = true;
            }
            return false;
          }
        }

      case 'boolean':
        if (type in set._items) {
          var bIdx = item ? 1 : 0;
          if (set._items[type][bIdx]) {
            return true;
          } else {
            if (shouldAdd) {
              set._items[type][bIdx] = true;
            }
            return false;
          }
        } else {
          if (shouldAdd) {
            set._items[type] = item ? [false, true] : [true, false];
          }
          return false;
        }

      case 'function':
        if (set._nativeSet !== null) {
          if (shouldAdd) {
            prevSize = set._nativeSet.size;
            set._nativeSet.add(item);
            newSize = set._nativeSet.size;
            return newSize === prevSize;
          } else {
            return set._nativeSet.has(item);
          }
        } else {
          if (!(type in set._items)) {
            if (shouldAdd) {
              set._items[type] = [item];
            }
            return false;
          }
          if (!_contains(item, set._items[type])) {
            if (shouldAdd) {
              set._items[type].push(item);
            }
            return false;
          }
          return true;
        }

      case 'undefined':
        if (set._items[type]) {
          return true;
        } else {
          if (shouldAdd) {
            set._items[type] = true;
          }
          return false;
        }

      case 'object':
        if (item === null) {
          if (!set._items['null']) {
            if (shouldAdd) {
              set._items['null'] = true;
            }
            return false;
          }
          return true;
        }

      default:
        type = Object.prototype.toString.call(item);
        if (!(type in set._items)) {
          if (shouldAdd) {
            set._items[type] = [item];
          }
          return false;
        }

        if (!_contains(item, set._items[type])) {
          if (shouldAdd) {
            set._items[type].push(item);
          }
          return false;
        }
        return true;
    }
  }
  return _Set;
}();
}, 1675, null, "ramda/src/internal/_Set.js");
__d(/* ramda/src/intersectionWith.js */function(global, require, module, exports) {var _containsWith = require(1611                      ); // 1611 = ./internal/_containsWith
var _curry3 = require(1507                ); // 1507 = ./internal/_curry3
var uniqWith = require(1677        ); // 1677 = ./uniqWith

module.exports = _curry3(function intersectionWith(pred, list1, list2) {
  var lookupList, filteredList;
  if (list1.length > list2.length) {
    lookupList = list1;
    filteredList = list2;
  } else {
    lookupList = list2;
    filteredList = list1;
  }
  var results = [];
  var idx = 0;
  while (idx < filteredList.length) {
    if (_containsWith(pred, filteredList[idx], lookupList)) {
      results[results.length] = filteredList[idx];
    }
    idx += 1;
  }
  return uniqWith(pred, results);
});
}, 1676, null, "ramda/src/intersectionWith.js");
__d(/* ramda/src/uniqWith.js */function(global, require, module, exports) {var _containsWith = require(1611                      ); // 1611 = ./internal/_containsWith
var _curry2 = require(1500                ); // 1500 = ./internal/_curry2

module.exports = _curry2(function uniqWith(pred, list) {
  var idx = 0;
  var len = list.length;
  var result = [];
  var item;
  while (idx < len) {
    item = list[idx];
    if (!_containsWith(pred, item, result)) {
      result[result.length] = item;
    }
    idx += 1;
  }
  return result;
});
}, 1677, null, "ramda/src/uniqWith.js");
__d(/* ramda/src/intersperse.js */function(global, require, module, exports) {var _checkForMethod = require(1573                        ); // 1573 = ./internal/_checkForMethod
var _curry2 = require(1500                ); // 1500 = ./internal/_curry2

module.exports = _curry2(_checkForMethod('intersperse', function intersperse(separator, list) {
  var out = [];
  var idx = 0;
  var length = list.length;
  while (idx < length) {
    if (idx === length - 1) {
      out.push(list[idx]);
    } else {
      out.push(list[idx], separator);
    }
    idx += 1;
  }
  return out;
}));
}, 1678, null, "ramda/src/intersperse.js");
__d(/* ramda/src/into.js */function(global, require, module, exports) {var _clone = require(1563               ); // 1563 = ./internal/_clone
var _curry3 = require(1507                ); // 1507 = ./internal/_curry3
var _isTransformer = require(1511                       ); // 1511 = ./internal/_isTransformer
var _reduce = require(1520                ); // 1520 = ./internal/_reduce
var _stepCat = require(1680                 ); // 1680 = ./internal/_stepCat

module.exports = _curry3(function into(acc, xf, list) {
  return _isTransformer(acc) ? _reduce(xf(acc), acc['@@transducer/init'](), list) : _reduce(xf(_stepCat(acc)), _clone(acc, [], [], false), list);
});
}, 1679, null, "ramda/src/into.js");
__d(/* ramda/src/internal/_stepCat.js */function(global, require, module, exports) {var _assign = require(1681       ); // 1681 = ./_assign
var _identity = require(1663         ); // 1663 = ./_identity
var _isArrayLike = require(1521            ); // 1521 = ./_isArrayLike
var _isTransformer = require(1511              ); // 1511 = ./_isTransformer
var objOf = require(1683      ); // 1683 = ../objOf

module.exports = function () {
  var _stepCatArray = {
    '@@transducer/init': Array,
    '@@transducer/step': function transducerStep(xs, x) {
      xs.push(x);
      return xs;
    },
    '@@transducer/result': _identity
  };
  var _stepCatString = {
    '@@transducer/init': String,
    '@@transducer/step': function transducerStep(a, b) {
      return a + b;
    },
    '@@transducer/result': _identity
  };
  var _stepCatObject = {
    '@@transducer/init': Object,
    '@@transducer/step': function transducerStep(result, input) {
      return _assign(result, _isArrayLike(input) ? objOf(input[0], input[1]) : input);
    },
    '@@transducer/result': _identity
  };

  return function _stepCat(obj) {
    if (_isTransformer(obj)) {
      return obj;
    }
    if (_isArrayLike(obj)) {
      return _stepCatArray;
    }
    if (typeof obj === 'string') {
      return _stepCatString;
    }
    if (typeof obj === 'object') {
      return _stepCatObject;
    }
    throw new Error('Cannot create transformer for ' + obj);
  };
}();
}, 1680, null, "ramda/src/internal/_stepCat.js");
__d(/* ramda/src/internal/_assign.js */function(global, require, module, exports) {var _objectAssign = require(1682             ); // 1682 = ./_objectAssign

module.exports = typeof Object.assign === 'function' ? Object.assign : _objectAssign;
}, 1681, null, "ramda/src/internal/_assign.js");
__d(/* ramda/src/internal/_objectAssign.js */function(global, require, module, exports) {var _has = require(1527    ); // 1527 = ./_has

module.exports = function _objectAssign(target) {
  if (target == null) {
    throw new TypeError('Cannot convert undefined or null to object');
  }

  var output = Object(target);
  var idx = 1;
  var length = arguments.length;
  while (idx < length) {
    var source = arguments[idx];
    if (source != null) {
      for (var nextKey in source) {
        if (_has(nextKey, source)) {
          output[nextKey] = source[nextKey];
        }
      }
    }
    idx += 1;
  }
  return output;
};
}, 1682, null, "ramda/src/internal/_objectAssign.js");
__d(/* ramda/src/objOf.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2

module.exports = _curry2(function objOf(key, val) {
  var obj = {};
  obj[key] = val;
  return obj;
});
}, 1683, null, "ramda/src/objOf.js");
__d(/* ramda/src/invert.js */function(global, require, module, exports) {var _curry1 = require(1495                ); // 1495 = ./internal/_curry1
var _has = require(1527             ); // 1527 = ./internal/_has
var keys = require(1526    ); // 1526 = ./keys

module.exports = _curry1(function invert(obj) {
  var props = keys(obj);
  var len = props.length;
  var idx = 0;
  var out = {};

  while (idx < len) {
    var key = props[idx];
    var val = obj[key];
    var list = _has(val, out) ? out[val] : out[val] = [];
    list[list.length] = key;
    idx += 1;
  }
  return out;
});
}, 1684, null, "ramda/src/invert.js");
__d(/* ramda/src/invertObj.js */function(global, require, module, exports) {var _curry1 = require(1495                ); // 1495 = ./internal/_curry1
var keys = require(1526    ); // 1526 = ./keys

module.exports = _curry1(function invertObj(obj) {
  var props = keys(obj);
  var len = props.length;
  var idx = 0;
  var out = {};

  while (idx < len) {
    var key = props[idx];
    out[obj[key]] = key;
    idx += 1;
  }
  return out;
});
}, 1685, null, "ramda/src/invertObj.js");
__d(/* ramda/src/invoker.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2
var _isFunction = require(1551                    ); // 1551 = ./internal/_isFunction
var curryN = require(1503      ); // 1503 = ./curryN
var toString = require(1581        ); // 1581 = ./toString

module.exports = _curry2(function invoker(arity, method) {
  return curryN(arity + 1, function () {
    var target = arguments[arity];
    if (target != null && _isFunction(target[method])) {
      return target[method].apply(target, Array.prototype.slice.call(arguments, 0, arity));
    }
    throw new TypeError(toString(target) + ' does not have a method named "' + method + '"');
  });
});
}, 1686, null, "ramda/src/invoker.js");
__d(/* ramda/src/is.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2

module.exports = _curry2(function is(Ctor, val) {
  return val != null && val.constructor === Ctor || val instanceof Ctor;
});
}, 1687, null, "ramda/src/is.js");
__d(/* ramda/src/isEmpty.js */function(global, require, module, exports) {var _curry1 = require(1495                ); // 1495 = ./internal/_curry1
var empty = require(1636     ); // 1636 = ./empty
var equals = require(1585      ); // 1585 = ./equals

module.exports = _curry1(function isEmpty(x) {
  return x != null && equals(x, empty(x));
});
}, 1688, null, "ramda/src/isEmpty.js");
__d(/* ramda/src/join.js */function(global, require, module, exports) {var invoker = require(1686       ); // 1686 = ./invoker

module.exports = invoker(1, 'join');
}, 1689, null, "ramda/src/join.js");
__d(/* ramda/src/juxt.js */function(global, require, module, exports) {var _curry1 = require(1495                ); // 1495 = ./internal/_curry1
var converge = require(1602        ); // 1602 = ./converge

module.exports = _curry1(function juxt(fns) {
  return converge(function () {
    return Array.prototype.slice.call(arguments, 0);
  }, fns);
});
}, 1690, null, "ramda/src/juxt.js");
__d(/* ramda/src/keysIn.js */function(global, require, module, exports) {var _curry1 = require(1495                ); // 1495 = ./internal/_curry1

module.exports = _curry1(function keysIn(obj) {
  var prop;
  var ks = [];
  for (prop in obj) {
    ks[ks.length] = prop;
  }
  return ks;
});
}, 1691, null, "ramda/src/keysIn.js");
__d(/* ramda/src/lastIndexOf.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2
var _isArray = require(1510                 ); // 1510 = ./internal/_isArray
var equals = require(1585      ); // 1585 = ./equals

module.exports = _curry2(function lastIndexOf(target, xs) {
  if (typeof xs.lastIndexOf === 'function' && !_isArray(xs)) {
    return xs.lastIndexOf(target);
  } else {
    var idx = xs.length - 1;
    while (idx >= 0) {
      if (equals(xs[idx], target)) {
        return idx;
      }
      idx -= 1;
    }
    return -1;
  }
});
}, 1692, null, "ramda/src/lastIndexOf.js");
__d(/* ramda/src/length.js */function(global, require, module, exports) {var _curry1 = require(1495                ); // 1495 = ./internal/_curry1
var _isNumber = require(1694                  ); // 1694 = ./internal/_isNumber

module.exports = _curry1(function length(list) {
  return list != null && _isNumber(list.length) ? list.length : NaN;
});
}, 1693, null, "ramda/src/length.js");
__d(/* ramda/src/internal/_isNumber.js */function(global, require, module, exports) {module.exports = function _isNumber(x) {
  return Object.prototype.toString.call(x) === '[object Number]';
};
}, 1694, null, "ramda/src/internal/_isNumber.js");
__d(/* ramda/src/lens.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2
var map = require(1518   ); // 1518 = ./map

module.exports = _curry2(function lens(getter, setter) {
  return function (toFunctorFn) {
    return function (target) {
      return map(function (focus) {
        return setter(focus, target);
      }, toFunctorFn(getter(target)));
    };
  };
});
}, 1695, null, "ramda/src/lens.js");
__d(/* ramda/src/lensIndex.js */function(global, require, module, exports) {var _curry1 = require(1495                ); // 1495 = ./internal/_curry1
var lens = require(1695    ); // 1695 = ./lens
var nth = require(1631   ); // 1631 = ./nth
var update = require(1615      ); // 1615 = ./update

module.exports = _curry1(function lensIndex(n) {
  return lens(nth(n), update(n));
});
}, 1696, null, "ramda/src/lensIndex.js");
__d(/* ramda/src/lensPath.js */function(global, require, module, exports) {var _curry1 = require(1495                ); // 1495 = ./internal/_curry1
var assocPath = require(1545         ); // 1545 = ./assocPath
var lens = require(1695    ); // 1695 = ./lens
var path = require(1698    ); // 1698 = ./path

module.exports = _curry1(function lensPath(p) {
  return lens(path(p), assocPath(p));
});
}, 1697, null, "ramda/src/lensPath.js");
__d(/* ramda/src/path.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2

module.exports = _curry2(function path(paths, obj) {
  var val = obj;
  var idx = 0;
  while (idx < paths.length) {
    if (val == null) {
      return;
    }
    val = val[paths[idx]];
    idx += 1;
  }
  return val;
});
}, 1698, null, "ramda/src/path.js");
__d(/* ramda/src/lensProp.js */function(global, require, module, exports) {var _curry1 = require(1495                ); // 1495 = ./internal/_curry1
var assoc = require(1544     ); // 1544 = ./assoc
var lens = require(1695    ); // 1695 = ./lens
var prop = require(1529    ); // 1529 = ./prop

module.exports = _curry1(function lensProp(k) {
  return lens(prop(k), assoc(k));
});
}, 1699, null, "ramda/src/lensProp.js");
__d(/* ramda/src/lt.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2

module.exports = _curry2(function lt(a, b) {
  return a < b;
});
}, 1700, null, "ramda/src/lt.js");
__d(/* ramda/src/lte.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2

module.exports = _curry2(function lte(a, b) {
  return a <= b;
});
}, 1701, null, "ramda/src/lte.js");
__d(/* ramda/src/mapAccum.js */function(global, require, module, exports) {var _curry3 = require(1507                ); // 1507 = ./internal/_curry3

module.exports = _curry3(function mapAccum(fn, acc, list) {
  var idx = 0;
  var len = list.length;
  var result = [];
  var tuple = [acc];
  while (idx < len) {
    tuple = fn(tuple[0], list[idx]);
    result[idx] = tuple[1];
    idx += 1;
  }
  return [tuple[0], result];
});
}, 1702, null, "ramda/src/mapAccum.js");
__d(/* ramda/src/mapAccumRight.js */function(global, require, module, exports) {var _curry3 = require(1507                ); // 1507 = ./internal/_curry3

module.exports = _curry3(function mapAccumRight(fn, acc, list) {
  var idx = list.length - 1;
  var result = [];
  var tuple = [acc];
  while (idx >= 0) {
    tuple = fn(list[idx], tuple[0]);
    result[idx] = tuple[1];
    idx -= 1;
  }
  return [result, tuple[0]];
});
}, 1703, null, "ramda/src/mapAccumRight.js");
__d(/* ramda/src/mapObjIndexed.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2
var _reduce = require(1520                ); // 1520 = ./internal/_reduce
var keys = require(1526    ); // 1526 = ./keys

module.exports = _curry2(function mapObjIndexed(fn, obj) {
  return _reduce(function (acc, key) {
    acc[key] = fn(obj[key], key, obj);
    return acc;
  }, {}, keys(obj));
});
}, 1704, null, "ramda/src/mapObjIndexed.js");
__d(/* ramda/src/match.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2

module.exports = _curry2(function match(rx, str) {
  return str.match(rx) || [];
});
}, 1705, null, "ramda/src/match.js");
__d(/* ramda/src/mathMod.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2
var _isInteger = require(1546                   ); // 1546 = ./internal/_isInteger

module.exports = _curry2(function mathMod(m, p) {
  if (!_isInteger(m)) {
    return NaN;
  }
  if (!_isInteger(p) || p < 1) {
    return NaN;
  }
  return (m % p + p) % p;
});
}, 1706, null, "ramda/src/mathMod.js");
__d(/* ramda/src/maxBy.js */function(global, require, module, exports) {var _curry3 = require(1507                ); // 1507 = ./internal/_curry3

module.exports = _curry3(function maxBy(f, a, b) {
  return f(b) > f(a) ? b : a;
});
}, 1707, null, "ramda/src/maxBy.js");
__d(/* ramda/src/mean.js */function(global, require, module, exports) {var _curry1 = require(1495                ); // 1495 = ./internal/_curry1
var sum = require(1709   ); // 1709 = ./sum

module.exports = _curry1(function mean(list) {
  return sum(list) / list.length;
});
}, 1708, null, "ramda/src/mean.js");
__d(/* ramda/src/sum.js */function(global, require, module, exports) {var add = require(1499   ); // 1499 = ./add
var reduce = require(1530      ); // 1530 = ./reduce

module.exports = reduce(add, 0);
}, 1709, null, "ramda/src/sum.js");
__d(/* ramda/src/median.js */function(global, require, module, exports) {var _curry1 = require(1495                ); // 1495 = ./internal/_curry1
var mean = require(1708    ); // 1708 = ./mean

module.exports = _curry1(function median(list) {
  var len = list.length;
  if (len === 0) {
    return NaN;
  }
  var width = 2 - len % 2;
  var idx = (len - width) / 2;
  return mean(Array.prototype.slice.call(list, 0).sort(function (a, b) {
    return a < b ? -1 : a > b ? 1 : 0;
  }).slice(idx, idx + width));
});
}, 1710, null, "ramda/src/median.js");
__d(/* ramda/src/memoize.js */function(global, require, module, exports) {var memoizeWith = require(1712           ); // 1712 = ./memoizeWith
var toString = require(1581        ); // 1581 = ./toString

module.exports = memoizeWith(function () {
  return toString(arguments);
});
}, 1711, null, "ramda/src/memoize.js");
__d(/* ramda/src/memoizeWith.js */function(global, require, module, exports) {var _arity = require(1504               ); // 1504 = ./internal/_arity
var _curry2 = require(1500                ); // 1500 = ./internal/_curry2
var _has = require(1527             ); // 1527 = ./internal/_has

module.exports = _curry2(function memoizeWith(mFn, fn) {
  var cache = {};
  return _arity(fn.length, function () {
    var key = mFn.apply(this, arguments);
    if (!_has(key, cache)) {
      cache[key] = fn.apply(this, arguments);
    }
    return cache[key];
  });
});
}, 1712, null, "ramda/src/memoizeWith.js");
__d(/* ramda/src/merge.js */function(global, require, module, exports) {var _assign = require(1681                ); // 1681 = ./internal/_assign
var _curry2 = require(1500                ); // 1500 = ./internal/_curry2

module.exports = _curry2(function merge(l, r) {
  return _assign({}, l, r);
});
}, 1713, null, "ramda/src/merge.js");
__d(/* ramda/src/mergeAll.js */function(global, require, module, exports) {var _assign = require(1681                ); // 1681 = ./internal/_assign
var _curry1 = require(1495                ); // 1495 = ./internal/_curry1

module.exports = _curry1(function mergeAll(list) {
  return _assign.apply(null, [{}].concat(list));
});
}, 1714, null, "ramda/src/mergeAll.js");
__d(/* ramda/src/mergeDeepLeft.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2
var mergeDeepWithKey = require(1716                ); // 1716 = ./mergeDeepWithKey

module.exports = _curry2(function mergeDeepLeft(lObj, rObj) {
  return mergeDeepWithKey(function (k, lVal, rVal) {
    return lVal;
  }, lObj, rObj);
});
}, 1715, null, "ramda/src/mergeDeepLeft.js");
__d(/* ramda/src/mergeDeepWithKey.js */function(global, require, module, exports) {var _curry3 = require(1507                ); // 1507 = ./internal/_curry3
var _isObject = require(1596                  ); // 1596 = ./internal/_isObject
var mergeWithKey = require(1717            ); // 1717 = ./mergeWithKey

module.exports = _curry3(function mergeDeepWithKey(fn, lObj, rObj) {
  return mergeWithKey(function (k, lVal, rVal) {
    if (_isObject(lVal) && _isObject(rVal)) {
      return mergeDeepWithKey(fn, lVal, rVal);
    } else {
      return fn(k, lVal, rVal);
    }
  }, lObj, rObj);
});
}, 1716, null, "ramda/src/mergeDeepWithKey.js");
__d(/* ramda/src/mergeWithKey.js */function(global, require, module, exports) {var _curry3 = require(1507                ); // 1507 = ./internal/_curry3
var _has = require(1527             ); // 1527 = ./internal/_has

module.exports = _curry3(function mergeWithKey(fn, l, r) {
  var result = {};
  var k;

  for (k in l) {
    if (_has(k, l)) {
      result[k] = _has(k, r) ? fn(k, l[k], r[k]) : l[k];
    }
  }

  for (k in r) {
    if (_has(k, r) && !_has(k, result)) {
      result[k] = r[k];
    }
  }

  return result;
});
}, 1717, null, "ramda/src/mergeWithKey.js");
__d(/* ramda/src/mergeDeepRight.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2
var mergeDeepWithKey = require(1716                ); // 1716 = ./mergeDeepWithKey

module.exports = _curry2(function mergeDeepRight(lObj, rObj) {
  return mergeDeepWithKey(function (k, lVal, rVal) {
    return rVal;
  }, lObj, rObj);
});
}, 1718, null, "ramda/src/mergeDeepRight.js");
__d(/* ramda/src/mergeDeepWith.js */function(global, require, module, exports) {var _curry3 = require(1507                ); // 1507 = ./internal/_curry3
var mergeDeepWithKey = require(1716                ); // 1716 = ./mergeDeepWithKey

module.exports = _curry3(function mergeDeepWith(fn, lObj, rObj) {
  return mergeDeepWithKey(function (k, lVal, rVal) {
    return fn(lVal, rVal);
  }, lObj, rObj);
});
}, 1719, null, "ramda/src/mergeDeepWith.js");
__d(/* ramda/src/mergeWith.js */function(global, require, module, exports) {var _curry3 = require(1507                ); // 1507 = ./internal/_curry3
var mergeWithKey = require(1717            ); // 1717 = ./mergeWithKey

module.exports = _curry3(function mergeWith(fn, l, r) {
  return mergeWithKey(function (_, _l, _r) {
    return fn(_l, _r);
  }, l, r);
});
}, 1720, null, "ramda/src/mergeWith.js");
__d(/* ramda/src/min.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2

module.exports = _curry2(function min(a, b) {
  return b < a ? b : a;
});
}, 1721, null, "ramda/src/min.js");
__d(/* ramda/src/minBy.js */function(global, require, module, exports) {var _curry3 = require(1507                ); // 1507 = ./internal/_curry3

module.exports = _curry3(function minBy(f, a, b) {
  return f(b) < f(a) ? b : a;
});
}, 1722, null, "ramda/src/minBy.js");
__d(/* ramda/src/modulo.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2

module.exports = _curry2(function modulo(a, b) {
  return a % b;
});
}, 1723, null, "ramda/src/modulo.js");
__d(/* ramda/src/multiply.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2

module.exports = _curry2(function multiply(a, b) {
  return a * b;
});
}, 1724, null, "ramda/src/multiply.js");
__d(/* ramda/src/negate.js */function(global, require, module, exports) {var _curry1 = require(1495                ); // 1495 = ./internal/_curry1

module.exports = _curry1(function negate(n) {
  return -n;
});
}, 1725, null, "ramda/src/negate.js");
__d(/* ramda/src/none.js */function(global, require, module, exports) {var _complement = require(1593                    ); // 1593 = ./internal/_complement
var _curry2 = require(1500                ); // 1500 = ./internal/_curry2
var _dispatchable = require(1509                      ); // 1509 = ./internal/_dispatchable
var _xany = require(1533              ); // 1533 = ./internal/_xany
var any = require(1532   ); // 1532 = ./any

module.exports = _curry2(_complement(_dispatchable(['any'], _xany, any)));
}, 1726, null, "ramda/src/none.js");
__d(/* ramda/src/nthArg.js */function(global, require, module, exports) {var _curry1 = require(1495                ); // 1495 = ./internal/_curry1
var curryN = require(1503      ); // 1503 = ./curryN
var nth = require(1631   ); // 1631 = ./nth

module.exports = _curry1(function nthArg(n) {
  var arity = n < 0 ? 1 : n + 1;
  return curryN(arity, function () {
    return nth(n, arguments);
  });
});
}, 1727, null, "ramda/src/nthArg.js");
__d(/* ramda/src/o.js */function(global, require, module, exports) {var _curry3 = require(1507                ); // 1507 = ./internal/_curry3

module.exports = _curry3(function o(f, g, x) {
  return f(g(x));
});
}, 1728, null, "ramda/src/o.js");
__d(/* ramda/src/of.js */function(global, require, module, exports) {var _curry1 = require(1495                ); // 1495 = ./internal/_curry1
var _of = require(1730            ); // 1730 = ./internal/_of

module.exports = _curry1(_of);
}, 1729, null, "ramda/src/of.js");
__d(/* ramda/src/internal/_of.js */function(global, require, module, exports) {module.exports = function _of(x) {
  return [x];
};
}, 1730, null, "ramda/src/internal/_of.js");
__d(/* ramda/src/omit.js */function(global, require, module, exports) {var _contains = require(1583                  ); // 1583 = ./internal/_contains
var _curry2 = require(1500                ); // 1500 = ./internal/_curry2

module.exports = _curry2(function omit(names, obj) {
  var result = {};
  for (var prop in obj) {
    if (!_contains(prop, names)) {
      result[prop] = obj[prop];
    }
  }
  return result;
});
}, 1731, null, "ramda/src/omit.js");
__d(/* ramda/src/once.js */function(global, require, module, exports) {var _arity = require(1504               ); // 1504 = ./internal/_arity
var _curry1 = require(1495                ); // 1495 = ./internal/_curry1

module.exports = _curry1(function once(fn) {
  var called = false;
  var result;
  return _arity(fn.length, function () {
    if (called) {
      return result;
    }
    called = true;
    result = fn.apply(this, arguments);
    return result;
  });
});
}, 1732, null, "ramda/src/once.js");
__d(/* ramda/src/over.js */function(global, require, module, exports) {var _curry3 = require(1507                ); // 1507 = ./internal/_curry3

module.exports = function () {
  var Identity = function Identity(x) {
    return { value: x, map: function map(f) {
        return Identity(f(x));
      } };
  };

  return _curry3(function over(lens, f, x) {
    return lens(function (y) {
      return Identity(f(y));
    })(x).value;
  });
}();
}, 1733, null, "ramda/src/over.js");
__d(/* ramda/src/pair.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2

module.exports = _curry2(function pair(fst, snd) {
  return [fst, snd];
});
}, 1734, null, "ramda/src/pair.js");
__d(/* ramda/src/partial.js */function(global, require, module, exports) {var _concat = require(1502                ); // 1502 = ./internal/_concat
var _createPartialApplicator = require(1736                                 ); // 1736 = ./internal/_createPartialApplicator

module.exports = _createPartialApplicator(_concat);
}, 1735, null, "ramda/src/partial.js");
__d(/* ramda/src/internal/_createPartialApplicator.js */function(global, require, module, exports) {var _arity = require(1504      ); // 1504 = ./_arity
var _curry2 = require(1500       ); // 1500 = ./_curry2

module.exports = function _createPartialApplicator(concat) {
  return _curry2(function (fn, args) {
    return _arity(Math.max(0, fn.length - args.length), function () {
      return fn.apply(this, concat(args, arguments));
    });
  });
};
}, 1736, null, "ramda/src/internal/_createPartialApplicator.js");
__d(/* ramda/src/partialRight.js */function(global, require, module, exports) {var _concat = require(1502                ); // 1502 = ./internal/_concat
var _createPartialApplicator = require(1736                                 ); // 1736 = ./internal/_createPartialApplicator
var flip = require(1651    ); // 1651 = ./flip

module.exports = _createPartialApplicator(flip(_concat));
}, 1737, null, "ramda/src/partialRight.js");
__d(/* ramda/src/partition.js */function(global, require, module, exports) {var filter = require(1594      ); // 1594 = ./filter
var juxt = require(1690    ); // 1690 = ./juxt
var reject = require(1592      ); // 1592 = ./reject

module.exports = juxt([filter, reject]);
}, 1738, null, "ramda/src/partition.js");
__d(/* ramda/src/pathEq.js */function(global, require, module, exports) {var _curry3 = require(1507                ); // 1507 = ./internal/_curry3
var equals = require(1585      ); // 1585 = ./equals
var path = require(1698    ); // 1698 = ./path

module.exports = _curry3(function pathEq(_path, val, obj) {
  return equals(path(_path, obj), val);
});
}, 1739, null, "ramda/src/pathEq.js");
__d(/* ramda/src/pathOr.js */function(global, require, module, exports) {var _curry3 = require(1507                ); // 1507 = ./internal/_curry3
var defaultTo = require(1607         ); // 1607 = ./defaultTo
var path = require(1698    ); // 1698 = ./path

module.exports = _curry3(function pathOr(d, p, obj) {
  return defaultTo(d, path(p, obj));
});
}, 1740, null, "ramda/src/pathOr.js");
__d(/* ramda/src/pathSatisfies.js */function(global, require, module, exports) {var _curry3 = require(1507                ); // 1507 = ./internal/_curry3
var path = require(1698    ); // 1698 = ./path

module.exports = _curry3(function pathSatisfies(pred, propPath, obj) {
  return propPath.length > 0 && pred(path(propPath, obj));
});
}, 1741, null, "ramda/src/pathSatisfies.js");
__d(/* ramda/src/pick.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2

module.exports = _curry2(function pick(names, obj) {
  var result = {};
  var idx = 0;
  while (idx < names.length) {
    if (names[idx] in obj) {
      result[names[idx]] = obj[names[idx]];
    }
    idx += 1;
  }
  return result;
});
}, 1742, null, "ramda/src/pick.js");
__d(/* ramda/src/pickAll.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2

module.exports = _curry2(function pickAll(names, obj) {
  var result = {};
  var idx = 0;
  var len = names.length;
  while (idx < len) {
    var name = names[idx];
    result[name] = obj[name];
    idx += 1;
  }
  return result;
});
}, 1743, null, "ramda/src/pickAll.js");
__d(/* ramda/src/pickBy.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2

module.exports = _curry2(function pickBy(test, obj) {
  var result = {};
  for (var prop in obj) {
    if (test(obj[prop], prop, obj)) {
      result[prop] = obj[prop];
    }
  }
  return result;
});
}, 1744, null, "ramda/src/pickBy.js");
__d(/* ramda/src/pipeK.js */function(global, require, module, exports) {var composeK = require(1576        ); // 1576 = ./composeK
var reverse = require(1575       ); // 1575 = ./reverse

module.exports = function pipeK() {
  if (arguments.length === 0) {
    throw new Error('pipeK requires at least one argument');
  }
  return composeK.apply(this, reverse(arguments));
};
}, 1745, null, "ramda/src/pipeK.js");
__d(/* ramda/src/prepend.js */function(global, require, module, exports) {var _concat = require(1502                ); // 1502 = ./internal/_concat
var _curry2 = require(1500                ); // 1500 = ./internal/_curry2

module.exports = _curry2(function prepend(el, list) {
  return _concat([el], list);
});
}, 1746, null, "ramda/src/prepend.js");
__d(/* ramda/src/product.js */function(global, require, module, exports) {var multiply = require(1724        ); // 1724 = ./multiply
var reduce = require(1530      ); // 1530 = ./reduce

module.exports = reduce(multiply, 1);
}, 1747, null, "ramda/src/product.js");
__d(/* ramda/src/project.js */function(global, require, module, exports) {var _map = require(1519             ); // 1519 = ./internal/_map
var identity = require(1662        ); // 1662 = ./identity
var pickAll = require(1743       ); // 1743 = ./pickAll
var useWith = require(1749       ); // 1749 = ./useWith

module.exports = useWith(_map, [pickAll, identity]);
}, 1748, null, "ramda/src/project.js");
__d(/* ramda/src/useWith.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2
var curryN = require(1503      ); // 1503 = ./curryN

module.exports = _curry2(function useWith(fn, transformers) {
  return curryN(transformers.length, function () {
    var args = [];
    var idx = 0;
    while (idx < transformers.length) {
      args.push(transformers[idx].call(this, arguments[idx]));
      idx += 1;
    }
    return fn.apply(this, args.concat(Array.prototype.slice.call(arguments, transformers.length)));
  });
});
}, 1749, null, "ramda/src/useWith.js");
__d(/* ramda/src/propEq.js */function(global, require, module, exports) {var _curry3 = require(1507                ); // 1507 = ./internal/_curry3
var equals = require(1585      ); // 1585 = ./equals

module.exports = _curry3(function propEq(name, val, obj) {
  return equals(val, obj[name]);
});
}, 1750, null, "ramda/src/propEq.js");
__d(/* ramda/src/propIs.js */function(global, require, module, exports) {var _curry3 = require(1507                ); // 1507 = ./internal/_curry3
var is = require(1687  ); // 1687 = ./is

module.exports = _curry3(function propIs(type, name, obj) {
  return is(type, obj[name]);
});
}, 1751, null, "ramda/src/propIs.js");
__d(/* ramda/src/propOr.js */function(global, require, module, exports) {var _curry3 = require(1507                ); // 1507 = ./internal/_curry3
var _has = require(1527             ); // 1527 = ./internal/_has

module.exports = _curry3(function propOr(val, p, obj) {
  return obj != null && _has(p, obj) ? obj[p] : val;
});
}, 1752, null, "ramda/src/propOr.js");
__d(/* ramda/src/propSatisfies.js */function(global, require, module, exports) {var _curry3 = require(1507                ); // 1507 = ./internal/_curry3

module.exports = _curry3(function propSatisfies(pred, name, obj) {
  return pred(obj[name]);
});
}, 1753, null, "ramda/src/propSatisfies.js");
__d(/* ramda/src/props.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2

module.exports = _curry2(function props(ps, obj) {
  var len = ps.length;
  var out = [];
  var idx = 0;

  while (idx < len) {
    out[idx] = obj[ps[idx]];
    idx += 1;
  }

  return out;
});
}, 1754, null, "ramda/src/props.js");
__d(/* ramda/src/range.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2
var _isNumber = require(1694                  ); // 1694 = ./internal/_isNumber

module.exports = _curry2(function range(from, to) {
  if (!(_isNumber(from) && _isNumber(to))) {
    throw new TypeError('Both arguments to range must be numbers');
  }
  var result = [];
  var n = from;
  while (n < to) {
    result.push(n);
    n += 1;
  }
  return result;
});
}, 1755, null, "ramda/src/range.js");
__d(/* ramda/src/reduceRight.js */function(global, require, module, exports) {var _curry3 = require(1507                ); // 1507 = ./internal/_curry3

module.exports = _curry3(function reduceRight(fn, acc, list) {
  var idx = list.length - 1;
  while (idx >= 0) {
    acc = fn(list[idx], acc);
    idx -= 1;
  }
  return acc;
});
}, 1756, null, "ramda/src/reduceRight.js");
__d(/* ramda/src/reduceWhile.js */function(global, require, module, exports) {var _curryN = require(1505                ); // 1505 = ./internal/_curryN
var _reduce = require(1520                ); // 1520 = ./internal/_reduce
var _reduced = require(1513                 ); // 1513 = ./internal/_reduced

module.exports = _curryN(4, [], function _reduceWhile(pred, fn, a, list) {
  return _reduce(function (acc, x) {
    return pred(acc, x) ? fn(acc, x) : _reduced(acc);
  }, a, list);
});
}, 1757, null, "ramda/src/reduceWhile.js");
__d(/* ramda/src/reduced.js */function(global, require, module, exports) {var _curry1 = require(1495                ); // 1495 = ./internal/_curry1
var _reduced = require(1513                 ); // 1513 = ./internal/_reduced

module.exports = _curry1(_reduced);
}, 1758, null, "ramda/src/reduced.js");
__d(/* ramda/src/repeat.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2
var always = require(1494      ); // 1494 = ./always
var times = require(1760     ); // 1760 = ./times

module.exports = _curry2(function repeat(value, n) {
  return times(always(value), n);
});
}, 1759, null, "ramda/src/repeat.js");
__d(/* ramda/src/times.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2

module.exports = _curry2(function times(fn, n) {
  var len = Number(n);
  var idx = 0;
  var list;

  if (len < 0 || isNaN(len)) {
    throw new RangeError('n must be a non-negative number');
  }
  list = new Array(len);
  while (idx < len) {
    list[idx] = fn(idx);
    idx += 1;
  }
  return list;
});
}, 1760, null, "ramda/src/times.js");
__d(/* ramda/src/replace.js */function(global, require, module, exports) {var _curry3 = require(1507                ); // 1507 = ./internal/_curry3

module.exports = _curry3(function replace(regex, replacement, str) {
  return str.replace(regex, replacement);
});
}, 1761, null, "ramda/src/replace.js");
__d(/* ramda/src/scan.js */function(global, require, module, exports) {var _curry3 = require(1507                ); // 1507 = ./internal/_curry3

module.exports = _curry3(function scan(fn, acc, list) {
  var idx = 0;
  var len = list.length;
  var result = [acc];
  while (idx < len) {
    acc = fn(acc, list[idx]);
    result[idx + 1] = acc;
    idx += 1;
  }
  return result;
});
}, 1762, null, "ramda/src/scan.js");
__d(/* ramda/src/sequence.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2
var ap = require(1535  ); // 1535 = ./ap
var map = require(1518   ); // 1518 = ./map
var prepend = require(1746       ); // 1746 = ./prepend
var reduceRight = require(1756           ); // 1756 = ./reduceRight

module.exports = _curry2(function sequence(of, traversable) {
  return typeof traversable.sequence === 'function' ? traversable.sequence(of) : reduceRight(function (x, acc) {
    return ap(map(prepend, x), acc);
  }, of([]), traversable);
});
}, 1763, null, "ramda/src/sequence.js");
__d(/* ramda/src/set.js */function(global, require, module, exports) {var _curry3 = require(1507                ); // 1507 = ./internal/_curry3
var always = require(1494      ); // 1494 = ./always
var over = require(1733    ); // 1733 = ./over

module.exports = _curry3(function set(lens, v, x) {
  return over(lens, always(v), x);
});
}, 1764, null, "ramda/src/set.js");
__d(/* ramda/src/sort.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2

module.exports = _curry2(function sort(comparator, list) {
  return Array.prototype.slice.call(list, 0).sort(comparator);
});
}, 1765, null, "ramda/src/sort.js");
__d(/* ramda/src/sortBy.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2

module.exports = _curry2(function sortBy(fn, list) {
  return Array.prototype.slice.call(list, 0).sort(function (a, b) {
    var aa = fn(a);
    var bb = fn(b);
    return aa < bb ? -1 : aa > bb ? 1 : 0;
  });
});
}, 1766, null, "ramda/src/sortBy.js");
__d(/* ramda/src/sortWith.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2

module.exports = _curry2(function sortWith(fns, list) {
  return Array.prototype.slice.call(list, 0).sort(function (a, b) {
    var result = 0;
    var i = 0;
    while (result === 0 && i < fns.length) {
      result = fns[i](a, b);
      i += 1;
    }
    return result;
  });
});
}, 1767, null, "ramda/src/sortWith.js");
__d(/* ramda/src/split.js */function(global, require, module, exports) {var invoker = require(1686       ); // 1686 = ./invoker

module.exports = invoker(1, 'split');
}, 1768, null, "ramda/src/split.js");
__d(/* ramda/src/splitAt.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2
var length = require(1693      ); // 1693 = ./length
var slice = require(1574     ); // 1574 = ./slice

module.exports = _curry2(function splitAt(index, array) {
  return [slice(0, index, array), slice(index, length(array), array)];
});
}, 1769, null, "ramda/src/splitAt.js");
__d(/* ramda/src/splitEvery.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2
var slice = require(1574     ); // 1574 = ./slice

module.exports = _curry2(function splitEvery(n, list) {
  if (n <= 0) {
    throw new Error('First argument to splitEvery must be a positive integer');
  }
  var result = [];
  var idx = 0;
  while (idx < list.length) {
    result.push(slice(idx, idx += n, list));
  }
  return result;
});
}, 1770, null, "ramda/src/splitEvery.js");
__d(/* ramda/src/splitWhen.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2

module.exports = _curry2(function splitWhen(pred, list) {
  var idx = 0;
  var len = list.length;
  var prefix = [];

  while (idx < len && !pred(list[idx])) {
    prefix.push(list[idx]);
    idx += 1;
  }

  return [prefix, Array.prototype.slice.call(list, idx)];
});
}, 1771, null, "ramda/src/splitWhen.js");
__d(/* ramda/src/startsWith.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2
var equals = require(1585      ); // 1585 = ./equals
var take = require(1621    ); // 1621 = ./take

module.exports = _curry2(function (prefix, list) {
  return equals(take(prefix.length, list), prefix);
});
}, 1772, null, "ramda/src/startsWith.js");
__d(/* ramda/src/subtract.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2

module.exports = _curry2(function subtract(a, b) {
  return Number(a) - Number(b);
});
}, 1773, null, "ramda/src/subtract.js");
__d(/* ramda/src/symmetricDifference.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2
var concat = require(1580      ); // 1580 = ./concat
var difference = require(1609          ); // 1609 = ./difference

module.exports = _curry2(function symmetricDifference(list1, list2) {
  return concat(difference(list1, list2), difference(list2, list1));
});
}, 1774, null, "ramda/src/symmetricDifference.js");
__d(/* ramda/src/symmetricDifferenceWith.js */function(global, require, module, exports) {var _curry3 = require(1507                ); // 1507 = ./internal/_curry3
var concat = require(1580      ); // 1580 = ./concat
var differenceWith = require(1610              ); // 1610 = ./differenceWith

module.exports = _curry3(function symmetricDifferenceWith(pred, list1, list2) {
  return concat(differenceWith(pred, list1, list2), differenceWith(pred, list2, list1));
});
}, 1775, null, "ramda/src/symmetricDifferenceWith.js");
__d(/* ramda/src/takeLastWhile.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2

module.exports = _curry2(function takeLastWhile(fn, list) {
  var idx = list.length - 1;
  while (idx >= 0 && fn(list[idx])) {
    idx -= 1;
  }
  return Array.prototype.slice.call(list, idx + 1);
});
}, 1776, null, "ramda/src/takeLastWhile.js");
__d(/* ramda/src/takeWhile.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2
var _dispatchable = require(1509                      ); // 1509 = ./internal/_dispatchable
var _xtakeWhile = require(1778                    ); // 1778 = ./internal/_xtakeWhile

module.exports = _curry2(_dispatchable(['takeWhile'], _xtakeWhile, function takeWhile(fn, list) {
  var idx = 0;
  var len = list.length;
  while (idx < len && fn(list[idx])) {
    idx += 1;
  }
  return Array.prototype.slice.call(list, 0, idx);
}));
}, 1777, null, "ramda/src/takeWhile.js");
__d(/* ramda/src/internal/_xtakeWhile.js */function(global, require, module, exports) {var _curry2 = require(1500       ); // 1500 = ./_curry2
var _reduced = require(1513        ); // 1513 = ./_reduced
var _xfBase = require(1514       ); // 1514 = ./_xfBase

module.exports = function () {
  function XTakeWhile(f, xf) {
    this.xf = xf;
    this.f = f;
  }
  XTakeWhile.prototype['@@transducer/init'] = _xfBase.init;
  XTakeWhile.prototype['@@transducer/result'] = _xfBase.result;
  XTakeWhile.prototype['@@transducer/step'] = function (result, input) {
    return this.f(input) ? this.xf['@@transducer/step'](result, input) : _reduced(result);
  };

  return _curry2(function _xtakeWhile(f, xf) {
    return new XTakeWhile(f, xf);
  });
}();
}, 1778, null, "ramda/src/internal/_xtakeWhile.js");
__d(/* ramda/src/tap.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2

module.exports = _curry2(function tap(fn, x) {
  fn(x);
  return x;
});
}, 1779, null, "ramda/src/tap.js");
__d(/* ramda/src/test.js */function(global, require, module, exports) {var _cloneRegExp = require(1564                     ); // 1564 = ./internal/_cloneRegExp
var _curry2 = require(1500                ); // 1500 = ./internal/_curry2
var _isRegExp = require(1781                  ); // 1781 = ./internal/_isRegExp
var toString = require(1581        ); // 1581 = ./toString

module.exports = _curry2(function test(pattern, str) {
  if (!_isRegExp(pattern)) {
    throw new TypeError('‘test’ requires a value of type RegExp as its first argument; received ' + toString(pattern));
  }
  return _cloneRegExp(pattern).test(str);
});
}, 1780, null, "ramda/src/test.js");
__d(/* ramda/src/internal/_isRegExp.js */function(global, require, module, exports) {module.exports = function _isRegExp(x) {
  return Object.prototype.toString.call(x) === '[object RegExp]';
};
}, 1781, null, "ramda/src/internal/_isRegExp.js");
__d(/* ramda/src/toLower.js */function(global, require, module, exports) {var invoker = require(1686       ); // 1686 = ./invoker

module.exports = invoker(0, 'toLowerCase');
}, 1782, null, "ramda/src/toLower.js");
__d(/* ramda/src/toPairs.js */function(global, require, module, exports) {var _curry1 = require(1495                ); // 1495 = ./internal/_curry1
var _has = require(1527             ); // 1527 = ./internal/_has

module.exports = _curry1(function toPairs(obj) {
  var pairs = [];
  for (var prop in obj) {
    if (_has(prop, obj)) {
      pairs[pairs.length] = [prop, obj[prop]];
    }
  }
  return pairs;
});
}, 1783, null, "ramda/src/toPairs.js");
__d(/* ramda/src/toPairsIn.js */function(global, require, module, exports) {var _curry1 = require(1495                ); // 1495 = ./internal/_curry1

module.exports = _curry1(function toPairsIn(obj) {
  var pairs = [];
  for (var prop in obj) {
    pairs[pairs.length] = [prop, obj[prop]];
  }
  return pairs;
});
}, 1784, null, "ramda/src/toPairsIn.js");
__d(/* ramda/src/toUpper.js */function(global, require, module, exports) {var invoker = require(1686       ); // 1686 = ./invoker

module.exports = invoker(0, 'toUpperCase');
}, 1785, null, "ramda/src/toUpper.js");
__d(/* ramda/src/transduce.js */function(global, require, module, exports) {var _reduce = require(1520                ); // 1520 = ./internal/_reduce
var _xwrap = require(1523               ); // 1523 = ./internal/_xwrap
var curryN = require(1503      ); // 1503 = ./curryN

module.exports = curryN(4, function transduce(xf, fn, acc, list) {
  return _reduce(xf(typeof fn === 'function' ? _xwrap(fn) : fn), acc, list);
});
}, 1786, null, "ramda/src/transduce.js");
__d(/* ramda/src/transpose.js */function(global, require, module, exports) {var _curry1 = require(1495                ); // 1495 = ./internal/_curry1

module.exports = _curry1(function transpose(outerlist) {
  var i = 0;
  var result = [];
  while (i < outerlist.length) {
    var innerlist = outerlist[i];
    var j = 0;
    while (j < innerlist.length) {
      if (typeof result[j] === 'undefined') {
        result[j] = [];
      }
      result[j].push(innerlist[j]);
      j += 1;
    }
    i += 1;
  }
  return result;
});
}, 1787, null, "ramda/src/transpose.js");
__d(/* ramda/src/traverse.js */function(global, require, module, exports) {var _curry3 = require(1507                ); // 1507 = ./internal/_curry3
var map = require(1518   ); // 1518 = ./map
var sequence = require(1763        ); // 1763 = ./sequence

module.exports = _curry3(function traverse(of, f, traversable) {
  return typeof traversable['fantasy-land/traverse'] === 'function' ? traversable['fantasy-land/traverse'](f, of) : sequence(of, map(f, traversable));
});
}, 1788, null, "ramda/src/traverse.js");
__d(/* ramda/src/trim.js */function(global, require, module, exports) {var _curry1 = require(1495                ); // 1495 = ./internal/_curry1

module.exports = function () {
  var ws = '\t\n\x0B\f\r \xA0\u1680\u180E\u2000\u2001\u2002\u2003' + '\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028' + '\u2029\uFEFF';
  var zeroWidth = '\u200B';
  var hasProtoTrim = typeof String.prototype.trim === 'function';
  if (!hasProtoTrim || ws.trim() || !zeroWidth.trim()) {
    return _curry1(function trim(str) {
      var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');
      var endRx = new RegExp('[' + ws + '][' + ws + ']*$');
      return str.replace(beginRx, '').replace(endRx, '');
    });
  } else {
    return _curry1(function trim(str) {
      return str.trim();
    });
  }
}();
}, 1789, null, "ramda/src/trim.js");
__d(/* ramda/src/tryCatch.js */function(global, require, module, exports) {var _arity = require(1504               ); // 1504 = ./internal/_arity
var _concat = require(1502                ); // 1502 = ./internal/_concat
var _curry2 = require(1500                ); // 1500 = ./internal/_curry2

module.exports = _curry2(function _tryCatch(tryer, catcher) {
  return _arity(tryer.length, function () {
    try {
      return tryer.apply(this, arguments);
    } catch (e) {
      return catcher.apply(this, _concat([e], arguments));
    }
  });
});
}, 1790, null, "ramda/src/tryCatch.js");
__d(/* ramda/src/unapply.js */function(global, require, module, exports) {var _curry1 = require(1495                ); // 1495 = ./internal/_curry1

module.exports = _curry1(function unapply(fn) {
  return function () {
    return fn(Array.prototype.slice.call(arguments, 0));
  };
});
}, 1791, null, "ramda/src/unapply.js");
__d(/* ramda/src/unary.js */function(global, require, module, exports) {var _curry1 = require(1495                ); // 1495 = ./internal/_curry1
var nAry = require(1549    ); // 1549 = ./nAry

module.exports = _curry1(function unary(fn) {
  return nAry(1, fn);
});
}, 1792, null, "ramda/src/unary.js");
__d(/* ramda/src/uncurryN.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2
var curryN = require(1503      ); // 1503 = ./curryN

module.exports = _curry2(function uncurryN(depth, fn) {
  return curryN(depth, function () {
    var currentDepth = 1;
    var value = fn;
    var idx = 0;
    var endIdx;
    while (currentDepth <= depth && typeof value === 'function') {
      endIdx = currentDepth === depth ? arguments.length : idx + value.length;
      value = value.apply(this, Array.prototype.slice.call(arguments, idx, endIdx));
      currentDepth += 1;
      idx = endIdx;
    }
    return value;
  });
});
}, 1793, null, "ramda/src/uncurryN.js");
__d(/* ramda/src/unfold.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2

module.exports = _curry2(function unfold(fn, seed) {
  var pair = fn(seed);
  var result = [];
  while (pair && pair.length) {
    result[result.length] = pair[0];
    pair = fn(pair[1]);
  }
  return result;
});
}, 1794, null, "ramda/src/unfold.js");
__d(/* ramda/src/union.js */function(global, require, module, exports) {var _concat = require(1502                ); // 1502 = ./internal/_concat
var _curry2 = require(1500                ); // 1500 = ./internal/_curry2
var compose = require(1569       ); // 1569 = ./compose
var uniq = require(1673    ); // 1673 = ./uniq

module.exports = _curry2(compose(uniq, _concat));
}, 1795, null, "ramda/src/union.js");
__d(/* ramda/src/unionWith.js */function(global, require, module, exports) {var _concat = require(1502                ); // 1502 = ./internal/_concat
var _curry3 = require(1507                ); // 1507 = ./internal/_curry3
var uniqWith = require(1677        ); // 1677 = ./uniqWith

module.exports = _curry3(function unionWith(pred, list1, list2) {
  return uniqWith(pred, _concat(list1, list2));
});
}, 1796, null, "ramda/src/unionWith.js");
__d(/* ramda/src/unless.js */function(global, require, module, exports) {var _curry3 = require(1507                ); // 1507 = ./internal/_curry3

module.exports = _curry3(function unless(pred, whenFalseFn, x) {
  return pred(x) ? x : whenFalseFn(x);
});
}, 1797, null, "ramda/src/unless.js");
__d(/* ramda/src/unnest.js */function(global, require, module, exports) {var _identity = require(1663                  ); // 1663 = ./internal/_identity
var chain = require(1556     ); // 1556 = ./chain

module.exports = chain(_identity);
}, 1798, null, "ramda/src/unnest.js");
__d(/* ramda/src/until.js */function(global, require, module, exports) {var _curry3 = require(1507                ); // 1507 = ./internal/_curry3

module.exports = _curry3(function until(pred, fn, init) {
  var val = init;
  while (!pred(val)) {
    val = fn(val);
  }
  return val;
});
}, 1799, null, "ramda/src/until.js");
__d(/* ramda/src/valuesIn.js */function(global, require, module, exports) {var _curry1 = require(1495                ); // 1495 = ./internal/_curry1

module.exports = _curry1(function valuesIn(obj) {
  var prop;
  var vs = [];
  for (prop in obj) {
    vs[vs.length] = obj[prop];
  }
  return vs;
});
}, 1800, null, "ramda/src/valuesIn.js");
__d(/* ramda/src/view.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2

module.exports = function () {
  var Const = function Const(x) {
    return { value: x, 'fantasy-land/map': function fantasyLandMap() {
        return this;
      } };
  };

  return _curry2(function view(lens, x) {
    return lens(Const)(x).value;
  });
}();
}, 1801, null, "ramda/src/view.js");
__d(/* ramda/src/when.js */function(global, require, module, exports) {var _curry3 = require(1507                ); // 1507 = ./internal/_curry3

module.exports = _curry3(function when(pred, whenTrueFn, x) {
  return pred(x) ? whenTrueFn(x) : x;
});
}, 1802, null, "ramda/src/when.js");
__d(/* ramda/src/where.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2
var _has = require(1527             ); // 1527 = ./internal/_has

module.exports = _curry2(function where(spec, testObj) {
  for (var prop in spec) {
    if (_has(prop, spec) && !spec[prop](testObj[prop])) {
      return false;
    }
  }
  return true;
});
}, 1803, null, "ramda/src/where.js");
__d(/* ramda/src/whereEq.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2
var equals = require(1585      ); // 1585 = ./equals
var map = require(1518   ); // 1518 = ./map
var where = require(1803     ); // 1803 = ./where

module.exports = _curry2(function whereEq(spec, testObj) {
  return where(map(equals, spec), testObj);
});
}, 1804, null, "ramda/src/whereEq.js");
__d(/* ramda/src/without.js */function(global, require, module, exports) {var _contains = require(1583                  ); // 1583 = ./internal/_contains
var _curry2 = require(1500                ); // 1500 = ./internal/_curry2
var flip = require(1651    ); // 1651 = ./flip
var reject = require(1592      ); // 1592 = ./reject

module.exports = _curry2(function (xs, list) {
  return reject(flip(_contains)(xs), list);
});
}, 1805, null, "ramda/src/without.js");
__d(/* ramda/src/xprod.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2

module.exports = _curry2(function xprod(a, b) {
  var idx = 0;
  var ilen = a.length;
  var j;
  var jlen = b.length;
  var result = [];
  while (idx < ilen) {
    j = 0;
    while (j < jlen) {
      result[result.length] = [a[idx], b[j]];
      j += 1;
    }
    idx += 1;
  }
  return result;
});
}, 1806, null, "ramda/src/xprod.js");
__d(/* ramda/src/zip.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2

module.exports = _curry2(function zip(a, b) {
  var rv = [];
  var idx = 0;
  var len = Math.min(a.length, b.length);
  while (idx < len) {
    rv[idx] = [a[idx], b[idx]];
    idx += 1;
  }
  return rv;
});
}, 1807, null, "ramda/src/zip.js");
__d(/* ramda/src/zipObj.js */function(global, require, module, exports) {var _curry2 = require(1500                ); // 1500 = ./internal/_curry2

module.exports = _curry2(function zipObj(keys, values) {
  var idx = 0;
  var len = Math.min(keys.length, values.length);
  var out = {};
  while (idx < len) {
    out[keys[idx]] = values[idx];
    idx += 1;
  }
  return out;
});
}, 1808, null, "ramda/src/zipObj.js");
__d(/* ramda/src/zipWith.js */function(global, require, module, exports) {var _curry3 = require(1507                ); // 1507 = ./internal/_curry3

module.exports = _curry3(function zipWith(fn, a, b) {
  var rv = [];
  var idx = 0;
  var len = Math.min(a.length, b.length);
  while (idx < len) {
    rv[idx] = fn(a[idx], b[idx]);
    idx += 1;
  }
  return rv;
});
}, 1809, null, "ramda/src/zipWith.js");
__d(/* UI/App/Containers/App.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/home/chris/Desktop/UI/App/Containers/App.js';

require(1811       ); // 1811 = ../Config

var _DebugConfig = require(13                     ); // 13 = ../Config/DebugConfig

var _DebugConfig2 = babelHelpers.interopRequireDefault(_DebugConfig);

var _react = require(604    ); // 604 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactRedux = require(1860         ); // 1860 = react-redux

var _RootContainer = require(1882             ); // 1882 = ./RootContainer

var _RootContainer2 = babelHelpers.interopRequireDefault(_RootContainer);

var _Redux = require(2972      ); // 2972 = ../Redux

var _Redux2 = babelHelpers.interopRequireDefault(_Redux);

var store = (0, _Redux2.default)();

var App = function (_Component) {
  babelHelpers.inherits(App, _Component);

  function App() {
    babelHelpers.classCallCheck(this, App);
    return babelHelpers.possibleConstructorReturn(this, (App.__proto__ || Object.getPrototypeOf(App)).apply(this, arguments));
  }

  babelHelpers.createClass(App, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        _reactRedux.Provider,
        { store: store, __source: {
            fileName: _jsxFileName,
            lineNumber: 23
          }
        },
        _react2.default.createElement(_RootContainer2.default, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 24
          }
        })
      );
    }
  }]);
  return App;
}(_react.Component);

exports.default = _DebugConfig2.default.useReactotron ? console.tron.overlay(App) : App;
}, 1810, null, "UI/App/Containers/App.js");
__d(/* UI/App/Config/index.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _reactNative = require(334           ); // 334 = react-native

var _DebugConfig = require(13             ); // 13 = ./DebugConfig

var _DebugConfig2 = babelHelpers.interopRequireDefault(_DebugConfig);

var _AppConfig = require(1812         ); // 1812 = ./AppConfig

var _AppConfig2 = babelHelpers.interopRequireDefault(_AppConfig);

exports.default = function () {
  if (__DEV__) {
    console.disableYellowBox = !_DebugConfig2.default.yellowBox;
  }

  _reactNative.Text.defaultProps.allowFontScaling = _AppConfig2.default.allowTextFontScaling;
};
}, 1811, null, "UI/App/Config/index.js");
__d(/* UI/App/Config/AppConfig.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

require(1813          ); // 1813 = ../I18n/I18n

exports.default = {
  allowTextFontScaling: true
};
}, 1812, null, "UI/App/Config/AppConfig.js");
__d(/* UI/App/I18n/I18n.js */function(global, require, module, exports) {var _reactNativeI18n = require(1814               ); // 1814 = react-native-i18n

var _reactNativeI18n2 = babelHelpers.interopRequireDefault(_reactNativeI18n);

_reactNativeI18n2.default.fallbacks = true;

_reactNativeI18n2.default.translations = {
  en: require(1816                      ) // 1816 = ./languages/english.json
};

var languageCode = _reactNativeI18n2.default.locale.substr(0, 2);

switch (languageCode) {
  case 'af':
    _reactNativeI18n2.default.translations.af = require(1817                 ); // 1817 = ./languages/af.json
    break;
  case 'am':
    _reactNativeI18n2.default.translations.am = require(1818                 ); // 1818 = ./languages/am.json
    break;
  case 'ar':
    _reactNativeI18n2.default.translations.ar = require(1819                 ); // 1819 = ./languages/ar.json
    break;
  case 'bg':
    _reactNativeI18n2.default.translations.bg = require(1820                 ); // 1820 = ./languages/bg.json
    break;
  case 'ca':
    _reactNativeI18n2.default.translations.ca = require(1821                 ); // 1821 = ./languages/ca.json
    break;
  case 'cs':
    _reactNativeI18n2.default.translations.cs = require(1822                 ); // 1822 = ./languages/cs.json
    break;
  case 'da':
    _reactNativeI18n2.default.translations.da = require(1823                 ); // 1823 = ./languages/da.json
    break;
  case 'de':
    _reactNativeI18n2.default.translations.de = require(1824                 ); // 1824 = ./languages/de.json
    break;
  case 'el':
    _reactNativeI18n2.default.translations.el = require(1825                 ); // 1825 = ./languages/el.json
    break;
  case 'es':
    _reactNativeI18n2.default.translations.es = require(1826                 ); // 1826 = ./languages/es.json
    break;
  case 'et':
    _reactNativeI18n2.default.translations.et = require(1827                 ); // 1827 = ./languages/et.json
    break;
  case 'fi':
    var addCode = _reactNativeI18n2.default.locale.substr(0, 3);
    if (addCode === 'fil') {
      _reactNativeI18n2.default.translations.fil = require(1828                  ); // 1828 = ./languages/fil.json
    } else {
      _reactNativeI18n2.default.translations.fi = require(1829                 ); // 1829 = ./languages/fi.json
    }
    break;
  case 'fr':
    _reactNativeI18n2.default.translations.fr = require(1830                 ); // 1830 = ./languages/fr.json
    break;
  case 'he':
    _reactNativeI18n2.default.translations.he = require(1831                 ); // 1831 = ./languages/he.json
    break;
  case 'hi':
    _reactNativeI18n2.default.translations.hi = require(1832                 ); // 1832 = ./languages/hi.json
    break;
  case 'hr':
    _reactNativeI18n2.default.translations.hr = require(1833                 ); // 1833 = ./languages/hr.json
    break;
  case 'hu':
    _reactNativeI18n2.default.translations.hu = require(1834                 ); // 1834 = ./languages/hu.json
    break;
  case 'in':
    _reactNativeI18n2.default.translations.in = require(1835                 ); // 1835 = ./languages/id.json
    break;
  case 'id':
    _reactNativeI18n2.default.translations.id = require(1835                 ); // 1835 = ./languages/id.json
    break;
  case 'it':
    _reactNativeI18n2.default.translations.it = require(1836                 ); // 1836 = ./languages/it.json
    break;
  case 'ja':
    _reactNativeI18n2.default.translations.ja = require(1837                 ); // 1837 = ./languages/ja.json
    break;
  case 'ko':
    _reactNativeI18n2.default.translations.ko = require(1838                 ); // 1838 = ./languages/ko.json
    break;
  case 'lt':
    _reactNativeI18n2.default.translations.lt = require(1839                 ); // 1839 = ./languages/lt.json
    break;
  case 'lv':
    _reactNativeI18n2.default.translations.lv = require(1840                 ); // 1840 = ./languages/lv.json
    break;
  case 'ms':
    _reactNativeI18n2.default.translations.ms = require(1841                 ); // 1841 = ./languages/ms.json
    break;
  case 'nb':
    _reactNativeI18n2.default.translations.nb = require(1842                 ); // 1842 = ./languages/nb.json
    break;
  case 'nl':
    _reactNativeI18n2.default.translations.nl = require(1843                 ); // 1843 = ./languages/nl.json
    break;
  case 'no':
    _reactNativeI18n2.default.translations.no = require(1844                 ); // 1844 = ./languages/no.json
    break;
  case 'pl':
    _reactNativeI18n2.default.translations.pl = require(1845                 ); // 1845 = ./languages/pl.json
    break;
  case 'pt':
    _reactNativeI18n2.default.translations.pt = require(1846                 ); // 1846 = ./languages/pt.json
    break;
  case 'ro':
    _reactNativeI18n2.default.translations.ro = require(1847                 ); // 1847 = ./languages/ro.json
    break;
  case 'ru':
    _reactNativeI18n2.default.translations.ru = require(1848                 ); // 1848 = ./languages/ru.json
    break;
  case 'sl':
    _reactNativeI18n2.default.translations.sl = require(1849                 ); // 1849 = ./languages/sl.json
    break;
  case 'sk':
    _reactNativeI18n2.default.translations.sk = require(1850                 ); // 1850 = ./languages/sk.json
    break;
  case 'sr':
    _reactNativeI18n2.default.translations.sr = require(1851                 ); // 1851 = ./languages/sr.json
    break;
  case 'sv':
    _reactNativeI18n2.default.translations.sv = require(1852                 ); // 1852 = ./languages/sv.json
    break;
  case 'sw':
    _reactNativeI18n2.default.translations.sw = require(1853                 ); // 1853 = ./languages/sw.json
    break;
  case 'th':
    _reactNativeI18n2.default.translations.th = require(1854                 ); // 1854 = ./languages/th.json
    break;
  case 'tr':
    _reactNativeI18n2.default.translations.tr = require(1855                 ); // 1855 = ./languages/tr.json
    break;
  case 'uk':
    _reactNativeI18n2.default.translations.uk = require(1856                 ); // 1856 = ./languages/uk.json
    break;
  case 'vi':
    _reactNativeI18n2.default.translations.vi = require(1857                 ); // 1857 = ./languages/vi.json
    break;
  case 'zh':
    _reactNativeI18n2.default.translations.zh = require(1858                 ); // 1858 = ./languages/zh.json
    break;
  case 'zu':
    _reactNativeI18n2.default.translations.zu = require(1859                 ); // 1859 = ./languages/zu.json
    break;
}
}, 1813, null, "UI/App/I18n/I18n.js");
__d(/* react-native-i18n/index.js */function(global, require, module, exports) {'use strict';

var _require = require(334           ), // 334 = react-native
    NativeModules = _require.NativeModules;

var RNI18n = NativeModules.RNI18n;

var I18n = require(1815           ); // 1815 = ./vendor/i18n

I18n.locale = RNI18n ? RNI18n.locale.replace(/_/, '-') : '';

module.exports = I18n;
}, 1814, null, "react-native-i18n/index.js");
__d(/* react-native-i18n/vendor/i18n.js */function(global, require, module, exports) {

;(function (factory) {
  if (typeof module !== 'undefined' && module.exports) {
    module.exports = factory(this);
  } else if (typeof define === 'function' && define.amd) {
    var global = this;
    define('i18n', function () {
      return factory(global);
    });
  } else {
    this.I18n = factory(this);
  }
})(function (global) {
  "use strict";

  var I18n = global && global.I18n || {};

  var slice = Array.prototype.slice;

  var padding = function padding(number) {
    return ("0" + number.toString()).substr(-2);
  };

  var DATE = {
    day_names: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
    abbr_day_names: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
    month_names: [null, "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
    abbr_month_names: [null, "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
    meridian: ["AM", "PM"]
  };

  var NUMBER_FORMAT = {
    precision: 3,
    separator: ".",
    delimiter: ",",
    strip_insignificant_zeros: false
  };

  var CURRENCY_FORMAT = {
    unit: "$",
    precision: 2,
    format: "%u%n",
    sign_first: true,
    delimiter: ",",
    separator: "."
  };

  var PERCENTAGE_FORMAT = {
    unit: "%",
    precision: 3,
    format: "%n%u",
    separator: ".",
    delimiter: ""
  };

  var SIZE_UNITS = [null, "kb", "mb", "gb", "tb"];

  var DEFAULT_OPTIONS = {
    defaultLocale: "en",
    baseLanguage: null,
    locale: "en",
    defaultSeparator: ".",
    placeholder: /(?:\{\{|%\{)(.*?)(?:\}\}?)/gm,
    fallbacks: false,
    translations: {},
    missingBehaviour: 'message',
    missingTranslationPrefix: ''
  };

  I18n.reset = function () {
    this.defaultLocale = DEFAULT_OPTIONS.defaultLocale;

    this.baseLanguage = DEFAULT_OPTIONS.baseLanguage;

    this.locale = DEFAULT_OPTIONS.locale;

    this.defaultSeparator = DEFAULT_OPTIONS.defaultSeparator;

    this.placeholder = DEFAULT_OPTIONS.placeholder;

    this.fallbacks = DEFAULT_OPTIONS.fallbacks;

    this.translations = DEFAULT_OPTIONS.translations;

    this.missingBehaviour = DEFAULT_OPTIONS.missingBehaviour;

    this.missingTranslationPrefix = DEFAULT_OPTIONS.missingTranslationPrefix;
  };

  I18n.initializeOptions = function () {
    if (typeof this.defaultLocale === "undefined" && this.defaultLocale !== null) this.defaultLocale = DEFAULT_OPTIONS.defaultLocale;

    if (typeof this.baseLanguage === "undefined" && this.baseLanguage !== null) this.baseLanguage = DEFAULT_OPTIONS.baseLanguage;

    if (typeof this.locale === "undefined" && this.locale !== null) this.locale = DEFAULT_OPTIONS.locale;

    if (typeof this.defaultSeparator === "undefined" && this.defaultSeparator !== null) this.defaultSeparator = DEFAULT_OPTIONS.defaultSeparator;

    if (typeof this.placeholder === "undefined" && this.placeholder !== null) this.placeholder = DEFAULT_OPTIONS.placeholder;

    if (typeof this.fallbacks === "undefined" && this.fallbacks !== null) this.fallbacks = DEFAULT_OPTIONS.fallbacks;

    if (typeof this.translations === "undefined" && this.translations !== null) this.translations = DEFAULT_OPTIONS.translations;
  };
  I18n.initializeOptions();

  I18n.locales = {};

  I18n.locales.get = function (locale) {
    var result = this[locale] || this[I18n.locale] || this["default"];

    if (typeof result === "function") {
      result = result(locale);
    }

    if (result instanceof Array === false) {
      result = [result];
    }

    return result;
  };

  I18n.locales["default"] = function (locale) {
    var locales = [],
        list = [],
        countryCode,
        count;

    if (locale) {
      locales.push(locale);
    }

    if (!locale && I18n.locale) {
      locales.push(I18n.locale);
    }

    if (I18n.fallbacks && I18n.defaultLocale) {
      locales.push(I18n.defaultLocale);
    }

    locales.forEach(function (locale) {
      countryCode = locale.split("-")[0];

      if (!~list.indexOf(locale)) {
        list.push(locale);
      }

      if (I18n.fallbacks && countryCode && countryCode !== locale && !~list.indexOf(countryCode)) {
        list.push(countryCode);
      }
    });

    if (!locales.length) {
      locales.push("en");
    }

    return list;
  };

  I18n.pluralization = {};

  I18n.pluralization.get = function (locale) {
    return this[locale] || this[I18n.locale] || this["default"];
  };

  I18n.pluralization["default"] = function (count) {
    switch (count) {
      case 0:
        return ["zero", "other"];
      case 1:
        return ["one"];
      default:
        return ["other"];
    }
  };

  I18n.currentLocale = function () {
    return this.locale || this.defaultLocale;
  };

  I18n.isSet = function (value) {
    return value !== undefined && value !== null;
  };

  I18n.lookup = function (scope, options) {
    options = this.prepareOptions(options);

    var locales = this.locales.get(options.locale).slice(),
        requestedLocale = locales[0],
        locale,
        scopes,
        translations;

    scope = this.getFullScope(scope, options);

    while (locales.length) {
      locale = locales.shift();

      if (this.baseLanguage !== null && locale == this.baseLanguage) {
        return scope;
      }

      scopes = scope.split(this.defaultSeparator);
      translations = this.translations[locale];

      if (!translations) {
        continue;
      }

      while (scopes.length) {
        translations = translations[scopes.shift()];

        if (translations === undefined || translations === null) {
          break;
        }
      }

      if (translations !== undefined && translations !== null) {
        return translations;
      }
    }

    if (this.isSet(options.defaultValue)) {
      return options.defaultValue;
    }
  };

  I18n.meridian = function () {
    var time = this.lookup("time");
    var date = this.lookup("date");

    if (time && time.am && time.pm) {
      return [time.am, time.pm];
    } else if (date && date.meridian) {
      return date.meridian;
    } else {
      return DATE.meridian;
    }
  };

  I18n.prepareOptions = function () {
    var args = slice.call(arguments),
        options = {},
        subject;

    while (args.length) {
      subject = args.shift();

      if (typeof subject != "object") {
        continue;
      }

      for (var attr in subject) {
        if (!subject.hasOwnProperty(attr)) {
          continue;
        }

        if (this.isSet(options[attr])) {
          continue;
        }

        options[attr] = subject[attr];
      }
    }

    return options;
  };

  I18n.createTranslationOptions = function (scope, options) {
    var translationOptions = [{ scope: scope }];

    if (this.isSet(options.defaults)) {
      translationOptions = translationOptions.concat(options.defaults);
    }

    if (this.isSet(options.defaultValue)) {
      translationOptions.push({ message: options.defaultValue });
      delete options.defaultValue;
    }

    return translationOptions;
  };

  I18n.translate = function (scope, options) {
    options = this.prepareOptions(options);

    var translationOptions = this.createTranslationOptions(scope, options);

    var translation;

    var translationFound = translationOptions.some(function (translationOption) {
      if (this.isSet(translationOption.scope)) {
        translation = this.lookup(translationOption.scope, options);
      } else if (this.isSet(translationOption.message)) {
        translation = translationOption.message;
      }

      if (translation !== undefined && translation !== null) {
        return true;
      }
    }, this);

    if (!translationFound) {
      return this.missingTranslation(scope, options);
    }

    if (typeof translation === "string") {
      translation = this.interpolate(translation, options);
    } else if (translation instanceof Object && this.isSet(options.count)) {
      translation = this.pluralize(options.count, translation, options);
    }

    return translation;
  };

  I18n.interpolate = function (message, options) {
    options = this.prepareOptions(options);
    var matches = message.match(this.placeholder),
        placeholder,
        value,
        name,
        regex;

    if (!matches) {
      return message;
    }

    var value;

    while (matches.length) {
      placeholder = matches.shift();
      name = placeholder.replace(this.placeholder, "$1");

      if (this.isSet(options[name])) {
        value = options[name].toString().replace(/\$/gm, "_#$#_");
      } else if (name in options) {
        value = this.nullPlaceholder(placeholder, message);
      } else {
        value = this.missingPlaceholder(placeholder, message);
      }

      regex = new RegExp(placeholder.replace(/\{/gm, "\\{").replace(/\}/gm, "\\}"));
      message = message.replace(regex, value);
    }

    return message.replace(/_#\$#_/g, "$");
  };

  I18n.pluralize = function (count, scope, options) {
    options = this.prepareOptions(options);
    var translations, pluralizer, keys, key, message;

    if (scope instanceof Object) {
      translations = scope;
    } else {
      translations = this.lookup(scope, options);
    }

    if (!translations) {
      return this.missingTranslation(scope, options);
    }

    pluralizer = this.pluralization.get(options.locale);
    keys = pluralizer(count);

    while (keys.length) {
      key = keys.shift();

      if (this.isSet(translations[key])) {
        message = translations[key];
        break;
      }
    }

    options.count = String(count);
    return this.interpolate(message, options);
  };

  I18n.missingTranslation = function (scope, options) {
    if (this.missingBehaviour == 'guess') {
      var s = scope.split('.').slice(-1)[0];

      return (this.missingTranslationPrefix.length > 0 ? this.missingTranslationPrefix : '') + s.replace('_', ' ').replace(/([a-z])([A-Z])/g, function (match, p1, p2) {
        return p1 + ' ' + p2.toLowerCase();
      });
    }

    var fullScope = this.getFullScope(scope, options);
    var fullScopeWithLocale = [this.currentLocale(), fullScope].join(this.defaultSeparator);

    return '[missing "' + fullScopeWithLocale + '" translation]';
  };

  I18n.missingPlaceholder = function (placeholder, message) {
    return "[missing " + placeholder + " value]";
  };

  I18n.nullPlaceholder = function () {
    return I18n.missingPlaceholder.apply(I18n, arguments);
  };

  I18n.toNumber = function (number, options) {
    options = this.prepareOptions(options, this.lookup("number.format"), NUMBER_FORMAT);

    var negative = number < 0,
        string = Math.abs(number).toFixed(options.precision).toString(),
        parts = string.split("."),
        precision,
        buffer = [],
        formattedNumber,
        format = options.format || "%n",
        sign = negative ? "-" : "";

    number = parts[0];
    precision = parts[1];

    while (number.length > 0) {
      buffer.unshift(number.substr(Math.max(0, number.length - 3), 3));
      number = number.substr(0, number.length - 3);
    }

    formattedNumber = buffer.join(options.delimiter);

    if (options.strip_insignificant_zeros && precision) {
      precision = precision.replace(/0+$/, "");
    }

    if (options.precision > 0 && precision) {
      formattedNumber += options.separator + precision;
    }

    if (options.sign_first) {
      format = "%s" + format;
    } else {
      format = format.replace("%n", "%s%n");
    }

    formattedNumber = format.replace("%u", options.unit).replace("%n", formattedNumber).replace("%s", sign);

    return formattedNumber;
  };

  I18n.toCurrency = function (number, options) {
    options = this.prepareOptions(options, this.lookup("number.currency.format"), this.lookup("number.format"), CURRENCY_FORMAT);

    return this.toNumber(number, options);
  };

  I18n.localize = function (scope, value, options) {
    options || (options = {});

    switch (scope) {
      case "currency":
        return this.toCurrency(value);
      case "number":
        scope = this.lookup("number.format");
        return this.toNumber(value, scope);
      case "percentage":
        return this.toPercentage(value);
      default:
        var localizedValue;

        if (scope.match(/^(date|time)/)) {
          localizedValue = this.toTime(scope, value);
        } else {
          localizedValue = value.toString();
        }

        return this.interpolate(localizedValue, options);
    }
  };

  I18n.parseDate = function (date) {
    var matches, convertedDate, fraction;

    if (typeof date == "object") {
      return date;
    };

    matches = date.toString().match(/(\d{4})-(\d{2})-(\d{2})(?:[ T](\d{2}):(\d{2}):(\d{2})([\.,]\d{1,3})?)?(Z|\+00:?00)?/);

    if (matches) {
      for (var i = 1; i <= 6; i++) {
        matches[i] = parseInt(matches[i], 10) || 0;
      }

      matches[2] -= 1;

      fraction = matches[7] ? 1000 * ("0" + matches[7]) : null;

      if (matches[8]) {
        convertedDate = new Date(Date.UTC(matches[1], matches[2], matches[3], matches[4], matches[5], matches[6], fraction));
      } else {
        convertedDate = new Date(matches[1], matches[2], matches[3], matches[4], matches[5], matches[6], fraction);
      }
    } else if (typeof date == "number") {
      convertedDate = new Date();
      convertedDate.setTime(date);
    } else if (date.match(/([A-Z][a-z]{2}) ([A-Z][a-z]{2}) (\d+) (\d+:\d+:\d+) ([+-]\d+) (\d+)/)) {
      convertedDate = new Date();
      convertedDate.setTime(Date.parse([RegExp.$1, RegExp.$2, RegExp.$3, RegExp.$6, RegExp.$4, RegExp.$5].join(" ")));
    } else if (date.match(/\d+ \d+:\d+:\d+ [+-]\d+ \d+/)) {
      convertedDate = new Date();
      convertedDate.setTime(Date.parse(date));
    } else {
      convertedDate = new Date();
      convertedDate.setTime(Date.parse(date));
    }

    return convertedDate;
  };

  I18n.strftime = function (date, format) {
    var options = this.lookup("date"),
        meridianOptions = I18n.meridian();

    if (!options) {
      options = {};
    }

    options = this.prepareOptions(options, DATE);

    var weekDay = date.getDay(),
        day = date.getDate(),
        year = date.getFullYear(),
        month = date.getMonth() + 1,
        hour = date.getHours(),
        hour12 = hour,
        meridian = hour > 11 ? 1 : 0,
        secs = date.getSeconds(),
        mins = date.getMinutes(),
        offset = date.getTimezoneOffset(),
        absOffsetHours = Math.floor(Math.abs(offset / 60)),
        absOffsetMinutes = Math.abs(offset) - absOffsetHours * 60,
        timezoneoffset = (offset > 0 ? "-" : "+") + (absOffsetHours.toString().length < 2 ? "0" + absOffsetHours : absOffsetHours) + (absOffsetMinutes.toString().length < 2 ? "0" + absOffsetMinutes : absOffsetMinutes);

    if (hour12 > 12) {
      hour12 = hour12 - 12;
    } else if (hour12 === 0) {
      hour12 = 12;
    }

    format = format.replace("%a", options.abbr_day_names[weekDay]);
    format = format.replace("%A", options.day_names[weekDay]);
    format = format.replace("%b", options.abbr_month_names[month]);
    format = format.replace("%B", options.month_names[month]);
    format = format.replace("%d", padding(day));
    format = format.replace("%e", day);
    format = format.replace("%-d", day);
    format = format.replace("%H", padding(hour));
    format = format.replace("%-H", hour);
    format = format.replace("%I", padding(hour12));
    format = format.replace("%-I", hour12);
    format = format.replace("%m", padding(month));
    format = format.replace("%-m", month);
    format = format.replace("%M", padding(mins));
    format = format.replace("%-M", mins);
    format = format.replace("%p", meridianOptions[meridian]);
    format = format.replace("%S", padding(secs));
    format = format.replace("%-S", secs);
    format = format.replace("%w", weekDay);
    format = format.replace("%y", padding(year));
    format = format.replace("%-y", padding(year).replace(/^0+/, ""));
    format = format.replace("%Y", year);
    format = format.replace("%z", timezoneoffset);

    return format;
  };

  I18n.toTime = function (scope, dateString) {
    var date = this.parseDate(dateString),
        format = this.lookup(scope);

    if (date.toString().match(/invalid/i)) {
      return date.toString();
    }

    if (!format) {
      return date.toString();
    }

    return this.strftime(date, format);
  };

  I18n.toPercentage = function (number, options) {
    options = this.prepareOptions(options, this.lookup("number.percentage.format"), this.lookup("number.format"), PERCENTAGE_FORMAT);

    return this.toNumber(number, options);
  };

  I18n.toHumanSize = function (number, options) {
    var kb = 1024,
        size = number,
        iterations = 0,
        unit,
        precision;

    while (size >= kb && iterations < 4) {
      size = size / kb;
      iterations += 1;
    }

    if (iterations === 0) {
      unit = this.t("number.human.storage_units.units.byte", { count: size });
      precision = 0;
    } else {
      unit = this.t("number.human.storage_units.units." + SIZE_UNITS[iterations]);
      precision = size - Math.floor(size) === 0 ? 0 : 1;
    }

    options = this.prepareOptions(options, { unit: unit, precision: precision, format: "%n%u", delimiter: "" });

    return this.toNumber(size, options);
  };

  I18n.getFullScope = function (scope, options) {
    options = this.prepareOptions(options);

    if (scope.constructor === Array) {
      scope = scope.join(this.defaultSeparator);
    }

    if (options.scope) {
      scope = [options.scope, scope].join(this.defaultSeparator);
    }

    return scope;
  };

  I18n.t = I18n.translate;
  I18n.l = I18n.localize;
  I18n.p = I18n.pluralize;

  return I18n;
});
}, 1815, null, "react-native-i18n/vendor/i18n.js");
__d(/* UI/App/I18n/languages/english.json */function(global, require, module, exports) {module.exports = module.exports = {
   "signIn": "Sign In",
   "logOut": "Log Out",
   "loginLogoutExampleTitle": "Login/Logout Redux + Sagas Example",
   "progressiveImageComponent": "Progressive Image Component",
   "api": "API",
   "locale": "I18n Locale",
   "rnVectorIcons": "RN Vector Icons",
   "loginWithFacebook": "Login with Facebook",
   "rni18n": "RN i18n",
   "igniteGenerated": "Ignite Generate Screens",
   "forgotPassword": "Forgot Password",
   "username": "Username",
   "password": "Password",
   "cancel": "Cancel",
   "welcome": "Welcome",
   "login": "Login",
   "tempIndicator": "F",
   "componentExamples": "Component Examples",
   "usageExamples": "Usage Examples",
   "apiTesting": "API Testing",
   "themeSettings": "Theme Settings",
   "deviceDetails": "Device Details",
   "noItems": "No Items",
   "search": "Search"
};
}, 1816, null, "UI/App/I18n/languages/english.json");
__d(/* UI/App/I18n/languages/af.json */function(global, require, module, exports) {module.exports = module.exports = {};
}, 1817, null, "UI/App/I18n/languages/af.json");
__d(/* UI/App/I18n/languages/am.json */function(global, require, module, exports) {module.exports = module.exports = {};
}, 1818, null, "UI/App/I18n/languages/am.json");
__d(/* UI/App/I18n/languages/ar.json */function(global, require, module, exports) {module.exports = module.exports = {};
}, 1819, null, "UI/App/I18n/languages/ar.json");
__d(/* UI/App/I18n/languages/bg.json */function(global, require, module, exports) {module.exports = module.exports = {};
}, 1820, null, "UI/App/I18n/languages/bg.json");
__d(/* UI/App/I18n/languages/ca.json */function(global, require, module, exports) {module.exports = module.exports = {};
}, 1821, null, "UI/App/I18n/languages/ca.json");
__d(/* UI/App/I18n/languages/cs.json */function(global, require, module, exports) {module.exports = module.exports = {};
}, 1822, null, "UI/App/I18n/languages/cs.json");
__d(/* UI/App/I18n/languages/da.json */function(global, require, module, exports) {module.exports = module.exports = {};
}, 1823, null, "UI/App/I18n/languages/da.json");
__d(/* UI/App/I18n/languages/de.json */function(global, require, module, exports) {module.exports = module.exports = {};
}, 1824, null, "UI/App/I18n/languages/de.json");
__d(/* UI/App/I18n/languages/el.json */function(global, require, module, exports) {module.exports = module.exports = {};
}, 1825, null, "UI/App/I18n/languages/el.json");
__d(/* UI/App/I18n/languages/es.json */function(global, require, module, exports) {module.exports = module.exports = {};
}, 1826, null, "UI/App/I18n/languages/es.json");
__d(/* UI/App/I18n/languages/et.json */function(global, require, module, exports) {module.exports = module.exports = {};
}, 1827, null, "UI/App/I18n/languages/et.json");
__d(/* UI/App/I18n/languages/fil.json */function(global, require, module, exports) {module.exports = module.exports = {};
}, 1828, null, "UI/App/I18n/languages/fil.json");
__d(/* UI/App/I18n/languages/fi.json */function(global, require, module, exports) {module.exports = module.exports = {};
}, 1829, null, "UI/App/I18n/languages/fi.json");
__d(/* UI/App/I18n/languages/fr.json */function(global, require, module, exports) {module.exports = module.exports = {
  "signIn": "Se connecter",
  "logOut": "Se déconnecter",
  "loginLogoutExampleTitle": "Connexion / Déconnexion Redux + Sagas Exemple",
  "progressiveImageComponent": "Composant Image Progressive",
  "api": "Mon Dieu!  Une API pour vous!",
  "locale": "I18n Paramètres régionaux",
  "rnVectorIcons": "RN icônes vectorielles",
  "loginWithFacebook": "Se connecter avec Facebook",
  "rni18n": "RN i18n",
  "igniteGenerated": "Ignite Générer des Écrans",
  "forgotPassword": "Mot de passe oublié",
  "username": "Nom d'utilisateur",
  "password": "Mot de passe",
  "cancel": "Annuler",
  "welcome": "Bienvenue",
  "login": "S'identifier",
  "tempIndicator": "C",
  "componentExamples": "Exemples de Composants",
  "usageExamples": "Exemples d'utilisation",
  "apiTesting": "API Testing",
  "themeSettings": "Réglage des thèmes",
  "deviceDetails": "Détails du périphérique",
  "noItems": "Aucun"
};
}, 1830, null, "UI/App/I18n/languages/fr.json");
__d(/* UI/App/I18n/languages/he.json */function(global, require, module, exports) {module.exports = module.exports = {};
}, 1831, null, "UI/App/I18n/languages/he.json");
__d(/* UI/App/I18n/languages/hi.json */function(global, require, module, exports) {module.exports = module.exports = {};
}, 1832, null, "UI/App/I18n/languages/hi.json");
__d(/* UI/App/I18n/languages/hr.json */function(global, require, module, exports) {module.exports = module.exports = {};
}, 1833, null, "UI/App/I18n/languages/hr.json");
__d(/* UI/App/I18n/languages/hu.json */function(global, require, module, exports) {module.exports = module.exports = {};
}, 1834, null, "UI/App/I18n/languages/hu.json");
__d(/* UI/App/I18n/languages/id.json */function(global, require, module, exports) {module.exports = module.exports = {};
}, 1835, null, "UI/App/I18n/languages/id.json");
__d(/* UI/App/I18n/languages/it.json */function(global, require, module, exports) {module.exports = module.exports = {};
}, 1836, null, "UI/App/I18n/languages/it.json");
__d(/* UI/App/I18n/languages/ja.json */function(global, require, module, exports) {module.exports = module.exports = {};
}, 1837, null, "UI/App/I18n/languages/ja.json");
__d(/* UI/App/I18n/languages/ko.json */function(global, require, module, exports) {module.exports = module.exports = {};
}, 1838, null, "UI/App/I18n/languages/ko.json");
__d(/* UI/App/I18n/languages/lt.json */function(global, require, module, exports) {module.exports = module.exports = {};
}, 1839, null, "UI/App/I18n/languages/lt.json");
__d(/* UI/App/I18n/languages/lv.json */function(global, require, module, exports) {module.exports = module.exports = {};
}, 1840, null, "UI/App/I18n/languages/lv.json");
__d(/* UI/App/I18n/languages/ms.json */function(global, require, module, exports) {module.exports = module.exports = {};
}, 1841, null, "UI/App/I18n/languages/ms.json");
__d(/* UI/App/I18n/languages/nb.json */function(global, require, module, exports) {module.exports = module.exports = {};
}, 1842, null, "UI/App/I18n/languages/nb.json");
__d(/* UI/App/I18n/languages/nl.json */function(global, require, module, exports) {module.exports = module.exports = {};
}, 1843, null, "UI/App/I18n/languages/nl.json");
__d(/* UI/App/I18n/languages/no.json */function(global, require, module, exports) {module.exports = module.exports = {};
}, 1844, null, "UI/App/I18n/languages/no.json");
__d(/* UI/App/I18n/languages/pl.json */function(global, require, module, exports) {module.exports = module.exports = {};
}, 1845, null, "UI/App/I18n/languages/pl.json");
__d(/* UI/App/I18n/languages/pt.json */function(global, require, module, exports) {module.exports = module.exports = {};
}, 1846, null, "UI/App/I18n/languages/pt.json");
__d(/* UI/App/I18n/languages/ro.json */function(global, require, module, exports) {module.exports = module.exports = {};
}, 1847, null, "UI/App/I18n/languages/ro.json");
__d(/* UI/App/I18n/languages/ru.json */function(global, require, module, exports) {module.exports = module.exports = {};
}, 1848, null, "UI/App/I18n/languages/ru.json");
__d(/* UI/App/I18n/languages/sl.json */function(global, require, module, exports) {module.exports = module.exports = {};
}, 1849, null, "UI/App/I18n/languages/sl.json");
__d(/* UI/App/I18n/languages/sk.json */function(global, require, module, exports) {module.exports = module.exports = {};
}, 1850, null, "UI/App/I18n/languages/sk.json");
__d(/* UI/App/I18n/languages/sr.json */function(global, require, module, exports) {module.exports = module.exports = {};
}, 1851, null, "UI/App/I18n/languages/sr.json");
__d(/* UI/App/I18n/languages/sv.json */function(global, require, module, exports) {module.exports = module.exports = {};
}, 1852, null, "UI/App/I18n/languages/sv.json");
__d(/* UI/App/I18n/languages/sw.json */function(global, require, module, exports) {module.exports = module.exports = {};
}, 1853, null, "UI/App/I18n/languages/sw.json");
__d(/* UI/App/I18n/languages/th.json */function(global, require, module, exports) {module.exports = module.exports = {};
}, 1854, null, "UI/App/I18n/languages/th.json");
__d(/* UI/App/I18n/languages/tr.json */function(global, require, module, exports) {module.exports = module.exports = {};
}, 1855, null, "UI/App/I18n/languages/tr.json");
__d(/* UI/App/I18n/languages/uk.json */function(global, require, module, exports) {module.exports = module.exports = {};
}, 1856, null, "UI/App/I18n/languages/uk.json");
__d(/* UI/App/I18n/languages/vi.json */function(global, require, module, exports) {module.exports = module.exports = {};
}, 1857, null, "UI/App/I18n/languages/vi.json");
__d(/* UI/App/I18n/languages/zh.json */function(global, require, module, exports) {module.exports = module.exports = {};
}, 1858, null, "UI/App/I18n/languages/zh.json");
__d(/* UI/App/I18n/languages/zu.json */function(global, require, module, exports) {module.exports = module.exports = {};
}, 1859, null, "UI/App/I18n/languages/zu.json");
__d(/* react-redux/lib/index.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.connect = exports.connectAdvanced = exports.createProvider = exports.Provider = undefined;

var _Provider = require(1861                   ); // 1861 = ./components/Provider

var _Provider2 = _interopRequireDefault(_Provider);

var _connectAdvanced = require(1869                          ); // 1869 = ./components/connectAdvanced

var _connectAdvanced2 = _interopRequireDefault(_connectAdvanced);

var _connect = require(1873               ); // 1873 = ./connect/connect

var _connect2 = _interopRequireDefault(_connect);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

exports.Provider = _Provider2.default;
exports.createProvider = _Provider.createProvider;
exports.connectAdvanced = _connectAdvanced2.default;
exports.connect = _connect2.default;
}, 1860, null, "react-redux/lib/index.js");
__d(/* react-redux/lib/components/Provider.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.createProvider = createProvider;

var _react = require(604    ); // 604 = react

var _propTypes = require(1862        ); // 1862 = prop-types

var _propTypes2 = _interopRequireDefault(_propTypes);

var _PropTypes = require(1867                ); // 1867 = ../utils/PropTypes

var _warning = require(1868              ); // 1868 = ../utils/warning

var _warning2 = _interopRequireDefault(_warning);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _possibleConstructorReturn(self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }return call && (typeof call === "object" || typeof call === "function") ? call : self;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}

var didWarnAboutReceivingStore = false;
function warnAboutReceivingStore() {
  if (didWarnAboutReceivingStore) {
    return;
  }
  didWarnAboutReceivingStore = true;

  (0, _warning2.default)('<Provider> does not support changing `store` on the fly. ' + 'It is most likely that you see this error because you updated to ' + 'Redux 2.x and React Redux 2.x which no longer hot reload reducers ' + 'automatically. See https://github.com/reactjs/react-redux/releases/' + 'tag/v2.0.0 for the migration instructions.');
}

function createProvider() {
  var _Provider$childContex;

  var storeKey = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'store';
  var subKey = arguments[1];

  var subscriptionKey = subKey || storeKey + 'Subscription';

  var Provider = function (_Component) {
    _inherits(Provider, _Component);

    Provider.prototype.getChildContext = function getChildContext() {
      var _ref;

      return _ref = {}, _ref[storeKey] = this[storeKey], _ref[subscriptionKey] = null, _ref;
    };

    function Provider(props, context) {
      _classCallCheck(this, Provider);

      var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));

      _this[storeKey] = props.store;
      return _this;
    }

    Provider.prototype.render = function render() {
      return _react.Children.only(this.props.children);
    };

    return Provider;
  }(_react.Component);

  if (process.env.NODE_ENV !== 'production') {
    Provider.prototype.componentWillReceiveProps = function (nextProps) {
      if (this[storeKey] !== nextProps.store) {
        warnAboutReceivingStore();
      }
    };
  }

  Provider.propTypes = {
    store: _PropTypes.storeShape.isRequired,
    children: _propTypes2.default.element.isRequired
  };
  Provider.childContextTypes = (_Provider$childContex = {}, _Provider$childContex[storeKey] = _PropTypes.storeShape.isRequired, _Provider$childContex[subscriptionKey] = _PropTypes.subscriptionShape, _Provider$childContex);

  return Provider;
}

exports.default = createProvider();
}, 1861, null, "react-redux/lib/components/Provider.js");
__d(/* prop-types/index.js */function(global, require, module, exports) {

if (process.env.NODE_ENV !== 'production') {
  var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && (typeof Symbol === 'function' ? Symbol.for : '@@for') && (typeof Symbol === 'function' ? Symbol.for : '@@for')('react.element') || 0xeac7;

  var isValidElement = function isValidElement(object) {
    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
  };

  var throwOnDirectAccess = true;
  module.exports = require(1863                       )(isValidElement, throwOnDirectAccess); // 1863 = ./factoryWithTypeCheckers
} else {
  module.exports = require(1866                        )(); // 1866 = ./factoryWithThrowingShims
}
}, 1862, null, "prop-types/index.js");
__d(/* prop-types/factoryWithTypeCheckers.js */function(global, require, module, exports) {

'use strict';

var emptyFunction = require(336                     ); // 336 = fbjs/lib/emptyFunction
var invariant = require(346                 ); // 346 = fbjs/lib/invariant
var warning = require(335               ); // 335 = fbjs/lib/warning
var assign = require(400            ); // 400 = object-assign

var ReactPropTypesSecret = require(1864                        ); // 1864 = ./lib/ReactPropTypesSecret
var checkPropTypes = require(1865              ); // 1865 = ./checkPropTypes

module.exports = function (isValidElement, throwOnDirectAccess) {
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && (typeof Symbol === 'function' ? Symbol.iterator : '@@iterator');
  var FAUX_ITERATOR_SYMBOL = '@@iterator';
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  var ANONYMOUS = '<<anonymous>>';

  var ReactPropTypes = {
    array: createPrimitiveTypeChecker('array'),
    bool: createPrimitiveTypeChecker('boolean'),
    func: createPrimitiveTypeChecker('function'),
    number: createPrimitiveTypeChecker('number'),
    object: createPrimitiveTypeChecker('object'),
    string: createPrimitiveTypeChecker('string'),
    symbol: createPrimitiveTypeChecker('symbol'),

    any: createAnyTypeChecker(),
    arrayOf: createArrayOfTypeChecker,
    element: createElementTypeChecker(),
    instanceOf: createInstanceTypeChecker,
    node: createNodeChecker(),
    objectOf: createObjectOfTypeChecker,
    oneOf: createEnumTypeChecker,
    oneOfType: createUnionTypeChecker,
    shape: createShapeTypeChecker,
    exact: createStrictShapeTypeChecker
  };

  function is(x, y) {
    if (x === y) {
      return x !== 0 || 1 / x === 1 / y;
    } else {
      return x !== x && y !== y;
    }
  }

  function PropTypeError(message) {
    this.message = message;
    this.stack = '';
  }

  PropTypeError.prototype = Error.prototype;

  function createChainableTypeChecker(validate) {
    if (process.env.NODE_ENV !== 'production') {
      var manualPropTypeCallCache = {};
      var manualPropTypeWarningCount = 0;
    }
    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
      componentName = componentName || ANONYMOUS;
      propFullName = propFullName || propName;

      if (secret !== ReactPropTypesSecret) {
        if (throwOnDirectAccess) {
          invariant(false, 'Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use `PropTypes.checkPropTypes()` to call them. ' + 'Read more at http://fb.me/use-check-prop-types');
        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {
          var cacheKey = componentName + ':' + propName;
          if (!manualPropTypeCallCache[cacheKey] && manualPropTypeWarningCount < 3) {
            warning(false, 'You are manually calling a React.PropTypes validation ' + 'function for the `%s` prop on `%s`. This is deprecated ' + 'and will throw in the standalone `prop-types` package. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.', propFullName, componentName);
            manualPropTypeCallCache[cacheKey] = true;
            manualPropTypeWarningCount++;
          }
        }
      }
      if (props[propName] == null) {
        if (isRequired) {
          if (props[propName] === null) {
            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
          }
          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
        }
        return null;
      } else {
        return validate(props, propName, componentName, location, propFullName);
      }
    }

    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);

    return chainedCheckType;
  }

  function createPrimitiveTypeChecker(expectedType) {
    function validate(props, propName, componentName, location, propFullName, secret) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== expectedType) {
        var preciseType = getPreciseType(propValue);

        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createAnyTypeChecker() {
    return createChainableTypeChecker(emptyFunction.thatReturnsNull);
  }

  function createArrayOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
      }
      var propValue = props[propName];
      if (!Array.isArray(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
      }
      for (var i = 0; i < propValue.length; i++) {
        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
        if (error instanceof Error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!isValidElement(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createInstanceTypeChecker(expectedClass) {
    function validate(props, propName, componentName, location, propFullName) {
      if (!(props[propName] instanceof expectedClass)) {
        var expectedClassName = expectedClass.name || ANONYMOUS;
        var actualClassName = getClassName(props[propName]);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createEnumTypeChecker(expectedValues) {
    if (!Array.isArray(expectedValues)) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;
      return emptyFunction.thatReturnsNull;
    }

    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      for (var i = 0; i < expectedValues.length; i++) {
        if (is(propValue, expectedValues[i])) {
          return null;
        }
      }

      var valuesString = JSON.stringify(expectedValues);
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createObjectOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
      }
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
      }
      for (var key in propValue) {
        if (propValue.hasOwnProperty(key)) {
          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
          if (error instanceof Error) {
            return error;
          }
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createUnionTypeChecker(arrayOfTypeCheckers) {
    if (!Array.isArray(arrayOfTypeCheckers)) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
      return emptyFunction.thatReturnsNull;
    }

    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (typeof checker !== 'function') {
        warning(false, 'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' + 'received %s at index %s.', getPostfixForTypeWarning(checker), i);
        return emptyFunction.thatReturnsNull;
      }
    }

    function validate(props, propName, componentName, location, propFullName) {
      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];
        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
          return null;
        }
      }

      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createNodeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!isNode(props[propName])) {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      for (var key in shapeTypes) {
        var checker = shapeTypes[key];
        if (!checker) {
          continue;
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createStrictShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }

      var allKeys = assign({}, props[propName], shapeTypes);
      for (var key in allKeys) {
        var checker = shapeTypes[key];
        if (!checker) {
          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' + '\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function isNode(propValue) {
    switch (typeof propValue) {
      case 'number':
      case 'string':
      case 'undefined':
        return true;
      case 'boolean':
        return !propValue;
      case 'object':
        if (Array.isArray(propValue)) {
          return propValue.every(isNode);
        }
        if (propValue === null || isValidElement(propValue)) {
          return true;
        }

        var iteratorFn = getIteratorFn(propValue);
        if (iteratorFn) {
          var iterator = iteratorFn.call(propValue);
          var step;
          if (iteratorFn !== propValue.entries) {
            while (!(step = iterator.next()).done) {
              if (!isNode(step.value)) {
                return false;
              }
            }
          } else {
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                if (!isNode(entry[1])) {
                  return false;
                }
              }
            }
          }
        } else {
          return false;
        }

        return true;
      default:
        return false;
    }
  }

  function isSymbol(propType, propValue) {
    if (propType === 'symbol') {
      return true;
    }

    if (propValue['@@toStringTag'] === 'Symbol') {
      return true;
    }

    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
      return true;
    }

    return false;
  }

  function getPropType(propValue) {
    var propType = typeof propValue;
    if (Array.isArray(propValue)) {
      return 'array';
    }
    if (propValue instanceof RegExp) {
      return 'object';
    }
    if (isSymbol(propType, propValue)) {
      return 'symbol';
    }
    return propType;
  }

  function getPreciseType(propValue) {
    if (typeof propValue === 'undefined' || propValue === null) {
      return '' + propValue;
    }
    var propType = getPropType(propValue);
    if (propType === 'object') {
      if (propValue instanceof Date) {
        return 'date';
      } else if (propValue instanceof RegExp) {
        return 'regexp';
      }
    }
    return propType;
  }

  function getPostfixForTypeWarning(value) {
    var type = getPreciseType(value);
    switch (type) {
      case 'array':
      case 'object':
        return 'an ' + type;
      case 'boolean':
      case 'date':
      case 'regexp':
        return 'a ' + type;
      default:
        return type;
    }
  }

  function getClassName(propValue) {
    if (!propValue.constructor || !propValue.constructor.name) {
      return ANONYMOUS;
    }
    return propValue.constructor.name;
  }

  ReactPropTypes.checkPropTypes = checkPropTypes;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};
}, 1863, null, "prop-types/factoryWithTypeCheckers.js");
__d(/* prop-types/lib/ReactPropTypesSecret.js */function(global, require, module, exports) {

'use strict';

var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;
}, 1864, null, "prop-types/lib/ReactPropTypesSecret.js");
__d(/* prop-types/checkPropTypes.js */function(global, require, module, exports) {

'use strict';

if (process.env.NODE_ENV !== 'production') {
  var invariant = require(346                 ); // 346 = fbjs/lib/invariant
  var warning = require(335               ); // 335 = fbjs/lib/warning
  var ReactPropTypesSecret = require(1864                        ); // 1864 = ./lib/ReactPropTypesSecret
  var loggedTypeFailures = {};
}

function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
  if (process.env.NODE_ENV !== 'production') {
    for (var typeSpecName in typeSpecs) {
      if (typeSpecs.hasOwnProperty(typeSpecName)) {
        var error;

        try {
          invariant(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'the `prop-types` package, but received `%s`.', componentName || 'React class', location, typeSpecName, typeof typeSpecs[typeSpecName]);
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
          error = ex;
        }
        warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error);
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          loggedTypeFailures[error.message] = true;

          var stack = getStack ? getStack() : '';

          warning(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');
        }
      }
    }
  }
}

module.exports = checkPropTypes;
}, 1865, null, "prop-types/checkPropTypes.js");
__d(/* prop-types/factoryWithThrowingShims.js */function(global, require, module, exports) {

'use strict';

var emptyFunction = require(336                     ); // 336 = fbjs/lib/emptyFunction
var invariant = require(346                 ); // 346 = fbjs/lib/invariant
var ReactPropTypesSecret = require(1864                        ); // 1864 = ./lib/ReactPropTypesSecret

module.exports = function () {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret) {
      return;
    }
    invariant(false, 'Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use PropTypes.checkPropTypes() to call them. ' + 'Read more at http://fb.me/use-check-prop-types');
  };
  shim.isRequired = shim;
  function getShim() {
    return shim;
  };

  var ReactPropTypes = {
    array: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,

    any: shim,
    arrayOf: getShim,
    element: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim,
    exact: getShim
  };

  ReactPropTypes.checkPropTypes = emptyFunction;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};
}, 1866, null, "prop-types/factoryWithThrowingShims.js");
__d(/* react-redux/lib/utils/PropTypes.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.storeShape = exports.subscriptionShape = undefined;

var _propTypes = require(1862        ); // 1862 = prop-types

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

var subscriptionShape = exports.subscriptionShape = _propTypes2.default.shape({
  trySubscribe: _propTypes2.default.func.isRequired,
  tryUnsubscribe: _propTypes2.default.func.isRequired,
  notifyNestedSubs: _propTypes2.default.func.isRequired,
  isSubscribed: _propTypes2.default.func.isRequired
});

var storeShape = exports.storeShape = _propTypes2.default.shape({
  subscribe: _propTypes2.default.func.isRequired,
  dispatch: _propTypes2.default.func.isRequired,
  getState: _propTypes2.default.func.isRequired
});
}, 1867, null, "react-redux/lib/utils/PropTypes.js");
__d(/* react-redux/lib/utils/warning.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.default = warning;

function warning(message) {
  if (typeof console !== 'undefined' && typeof console.error === 'function') {
    console.error(message);
  }

  try {
    throw new Error(message);
  } catch (e) {}
}
}, 1868, null, "react-redux/lib/utils/warning.js");
__d(/* react-redux/lib/components/connectAdvanced.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }return target;
};

exports.default = connectAdvanced;

var _hoistNonReactStatics = require(1870                     ); // 1870 = hoist-non-react-statics

var _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);

var _invariant = require(1871       ); // 1871 = invariant

var _invariant2 = _interopRequireDefault(_invariant);

var _react = require(604    ); // 604 = react

var _Subscription = require(1872                   ); // 1872 = ../utils/Subscription

var _Subscription2 = _interopRequireDefault(_Subscription);

var _PropTypes = require(1867                ); // 1867 = ../utils/PropTypes

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _possibleConstructorReturn(self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }return call && (typeof call === "object" || typeof call === "function") ? call : self;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}

function _objectWithoutProperties(obj, keys) {
  var target = {};for (var i in obj) {
    if (keys.indexOf(i) >= 0) continue;if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;target[i] = obj[i];
  }return target;
}

var hotReloadingVersion = 0;
var dummyState = {};
function noop() {}
function makeSelectorStateful(sourceSelector, store) {
  var selector = {
    run: function runComponentSelector(props) {
      try {
        var nextProps = sourceSelector(store.getState(), props);
        if (nextProps !== selector.props || selector.error) {
          selector.shouldComponentUpdate = true;
          selector.props = nextProps;
          selector.error = null;
        }
      } catch (error) {
        selector.shouldComponentUpdate = true;
        selector.error = error;
      }
    }
  };

  return selector;
}

function connectAdvanced(selectorFactory) {
  var _contextTypes, _childContextTypes;

  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
      _ref$getDisplayName = _ref.getDisplayName,
      getDisplayName = _ref$getDisplayName === undefined ? function (name) {
    return 'ConnectAdvanced(' + name + ')';
  } : _ref$getDisplayName,
      _ref$methodName = _ref.methodName,
      methodName = _ref$methodName === undefined ? 'connectAdvanced' : _ref$methodName,
      _ref$renderCountProp = _ref.renderCountProp,
      renderCountProp = _ref$renderCountProp === undefined ? undefined : _ref$renderCountProp,
      _ref$shouldHandleStat = _ref.shouldHandleStateChanges,
      shouldHandleStateChanges = _ref$shouldHandleStat === undefined ? true : _ref$shouldHandleStat,
      _ref$storeKey = _ref.storeKey,
      storeKey = _ref$storeKey === undefined ? 'store' : _ref$storeKey,
      _ref$withRef = _ref.withRef,
      withRef = _ref$withRef === undefined ? false : _ref$withRef,
      connectOptions = _objectWithoutProperties(_ref, ['getDisplayName', 'methodName', 'renderCountProp', 'shouldHandleStateChanges', 'storeKey', 'withRef']);

  var subscriptionKey = storeKey + 'Subscription';
  var version = hotReloadingVersion++;

  var contextTypes = (_contextTypes = {}, _contextTypes[storeKey] = _PropTypes.storeShape, _contextTypes[subscriptionKey] = _PropTypes.subscriptionShape, _contextTypes);
  var childContextTypes = (_childContextTypes = {}, _childContextTypes[subscriptionKey] = _PropTypes.subscriptionShape, _childContextTypes);

  return function wrapWithConnect(WrappedComponent) {
    (0, _invariant2.default)(typeof WrappedComponent == 'function', 'You must pass a component to the function returned by ' + (methodName + '. Instead received ' + JSON.stringify(WrappedComponent)));

    var wrappedComponentName = WrappedComponent.displayName || WrappedComponent.name || 'Component';

    var displayName = getDisplayName(wrappedComponentName);

    var selectorFactoryOptions = _extends({}, connectOptions, {
      getDisplayName: getDisplayName,
      methodName: methodName,
      renderCountProp: renderCountProp,
      shouldHandleStateChanges: shouldHandleStateChanges,
      storeKey: storeKey,
      withRef: withRef,
      displayName: displayName,
      wrappedComponentName: wrappedComponentName,
      WrappedComponent: WrappedComponent
    });

    var Connect = function (_Component) {
      _inherits(Connect, _Component);

      function Connect(props, context) {
        _classCallCheck(this, Connect);

        var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));

        _this.version = version;
        _this.state = {};
        _this.renderCount = 0;
        _this.store = props[storeKey] || context[storeKey];
        _this.propsMode = Boolean(props[storeKey]);
        _this.setWrappedInstance = _this.setWrappedInstance.bind(_this);

        (0, _invariant2.default)(_this.store, 'Could not find "' + storeKey + '" in either the context or props of ' + ('"' + displayName + '". Either wrap the root component in a <Provider>, ') + ('or explicitly pass "' + storeKey + '" as a prop to "' + displayName + '".'));

        _this.initSelector();
        _this.initSubscription();
        return _this;
      }

      Connect.prototype.getChildContext = function getChildContext() {
        var _ref2;

        var subscription = this.propsMode ? null : this.subscription;
        return _ref2 = {}, _ref2[subscriptionKey] = subscription || this.context[subscriptionKey], _ref2;
      };

      Connect.prototype.componentDidMount = function componentDidMount() {
        if (!shouldHandleStateChanges) return;

        this.subscription.trySubscribe();
        this.selector.run(this.props);
        if (this.selector.shouldComponentUpdate) this.forceUpdate();
      };

      Connect.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
        this.selector.run(nextProps);
      };

      Connect.prototype.shouldComponentUpdate = function shouldComponentUpdate() {
        return this.selector.shouldComponentUpdate;
      };

      Connect.prototype.componentWillUnmount = function componentWillUnmount() {
        if (this.subscription) this.subscription.tryUnsubscribe();
        this.subscription = null;
        this.notifyNestedSubs = noop;
        this.store = null;
        this.selector.run = noop;
        this.selector.shouldComponentUpdate = false;
      };

      Connect.prototype.getWrappedInstance = function getWrappedInstance() {
        (0, _invariant2.default)(withRef, 'To access the wrapped instance, you need to specify ' + ('{ withRef: true } in the options argument of the ' + methodName + '() call.'));
        return this.wrappedInstance;
      };

      Connect.prototype.setWrappedInstance = function setWrappedInstance(ref) {
        this.wrappedInstance = ref;
      };

      Connect.prototype.initSelector = function initSelector() {
        var sourceSelector = selectorFactory(this.store.dispatch, selectorFactoryOptions);
        this.selector = makeSelectorStateful(sourceSelector, this.store);
        this.selector.run(this.props);
      };

      Connect.prototype.initSubscription = function initSubscription() {
        if (!shouldHandleStateChanges) return;

        var parentSub = (this.propsMode ? this.props : this.context)[subscriptionKey];
        this.subscription = new _Subscription2.default(this.store, parentSub, this.onStateChange.bind(this));

        this.notifyNestedSubs = this.subscription.notifyNestedSubs.bind(this.subscription);
      };

      Connect.prototype.onStateChange = function onStateChange() {
        this.selector.run(this.props);

        if (!this.selector.shouldComponentUpdate) {
          this.notifyNestedSubs();
        } else {
          this.componentDidUpdate = this.notifyNestedSubsOnComponentDidUpdate;
          this.setState(dummyState);
        }
      };

      Connect.prototype.notifyNestedSubsOnComponentDidUpdate = function notifyNestedSubsOnComponentDidUpdate() {
        this.componentDidUpdate = undefined;
        this.notifyNestedSubs();
      };

      Connect.prototype.isSubscribed = function isSubscribed() {
        return Boolean(this.subscription) && this.subscription.isSubscribed();
      };

      Connect.prototype.addExtraProps = function addExtraProps(props) {
        if (!withRef && !renderCountProp && !(this.propsMode && this.subscription)) return props;

        var withExtras = _extends({}, props);
        if (withRef) withExtras.ref = this.setWrappedInstance;
        if (renderCountProp) withExtras[renderCountProp] = this.renderCount++;
        if (this.propsMode && this.subscription) withExtras[subscriptionKey] = this.subscription;
        return withExtras;
      };

      Connect.prototype.render = function render() {
        var selector = this.selector;
        selector.shouldComponentUpdate = false;

        if (selector.error) {
          throw selector.error;
        } else {
          return (0, _react.createElement)(WrappedComponent, this.addExtraProps(selector.props));
        }
      };

      return Connect;
    }(_react.Component);

    Connect.WrappedComponent = WrappedComponent;
    Connect.displayName = displayName;
    Connect.childContextTypes = childContextTypes;
    Connect.contextTypes = contextTypes;
    Connect.propTypes = contextTypes;

    if (process.env.NODE_ENV !== 'production') {
      Connect.prototype.componentWillUpdate = function componentWillUpdate() {
        var _this2 = this;

        if (this.version !== version) {
          this.version = version;
          this.initSelector();

          var oldListeners = [];

          if (this.subscription) {
            oldListeners = this.subscription.listeners.get();
            this.subscription.tryUnsubscribe();
          }
          this.initSubscription();
          if (shouldHandleStateChanges) {
            this.subscription.trySubscribe();
            oldListeners.forEach(function (listener) {
              return _this2.subscription.listeners.subscribe(listener);
            });
          }
        }
      };
    }

    return (0, _hoistNonReactStatics2.default)(Connect, WrappedComponent);
  };
}
}, 1869, null, "react-redux/lib/components/connectAdvanced.js");
__d(/* hoist-non-react-statics/index.js */function(global, require, module, exports) {
(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.hoistNonReactStatics = factory();
})(this, function () {
    'use strict';

    var REACT_STATICS = {
        childContextTypes: true,
        contextTypes: true,
        defaultProps: true,
        displayName: true,
        getDefaultProps: true,
        getDerivedStateFromProps: true,
        mixins: true,
        propTypes: true,
        type: true
    };

    var KNOWN_STATICS = {
        name: true,
        length: true,
        prototype: true,
        caller: true,
        callee: true,
        arguments: true,
        arity: true
    };

    var defineProperty = Object.defineProperty;
    var getOwnPropertyNames = Object.getOwnPropertyNames;
    var getOwnPropertySymbols = Object.getOwnPropertySymbols;
    var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
    var getPrototypeOf = Object.getPrototypeOf;
    var objectPrototype = getPrototypeOf && getPrototypeOf(Object);

    return function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
        if (typeof sourceComponent !== 'string') {

            if (objectPrototype) {
                var inheritedComponent = getPrototypeOf(sourceComponent);
                if (inheritedComponent && inheritedComponent !== objectPrototype) {
                    hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
                }
            }

            var keys = getOwnPropertyNames(sourceComponent);

            if (getOwnPropertySymbols) {
                keys = keys.concat(getOwnPropertySymbols(sourceComponent));
            }

            for (var i = 0; i < keys.length; ++i) {
                var key = keys[i];
                if (!REACT_STATICS[key] && !KNOWN_STATICS[key] && (!blacklist || !blacklist[key])) {
                    var descriptor = getOwnPropertyDescriptor(sourceComponent, key);
                    try {
                        defineProperty(targetComponent, key, descriptor);
                    } catch (e) {}
                }
            }

            return targetComponent;
        }

        return targetComponent;
    };
});
}, 1870, null, "hoist-non-react-statics/index.js");
__d(/* invariant/browser.js */function(global, require, module, exports) {

'use strict';

var invariant = function invariant(condition, format, a, b, c, d, e, f) {
  if (process.env.NODE_ENV !== 'production') {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  }

  if (!condition) {
    var error;
    if (format === undefined) {
      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(format.replace(/%s/g, function () {
        return args[argIndex++];
      }));
      error.name = 'Invariant Violation';
    }

    error.framesToPop = 1;
    throw error;
  }
};

module.exports = invariant;
}, 1871, null, "invariant/browser.js");
__d(/* react-redux/lib/utils/Subscription.js */function(global, require, module, exports) {"use strict";

exports.__esModule = true;

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

var CLEARED = null;
var nullListeners = {
  notify: function notify() {}
};

function createListenerCollection() {
  var current = [];
  var next = [];

  return {
    clear: function clear() {
      next = CLEARED;
      current = CLEARED;
    },
    notify: function notify() {
      var listeners = current = next;
      for (var i = 0; i < listeners.length; i++) {
        listeners[i]();
      }
    },
    get: function get() {
      return next;
    },
    subscribe: function subscribe(listener) {
      var isSubscribed = true;
      if (next === current) next = current.slice();
      next.push(listener);

      return function unsubscribe() {
        if (!isSubscribed || current === CLEARED) return;
        isSubscribed = false;

        if (next === current) next = current.slice();
        next.splice(next.indexOf(listener), 1);
      };
    }
  };
}

var Subscription = function () {
  function Subscription(store, parentSub, onStateChange) {
    _classCallCheck(this, Subscription);

    this.store = store;
    this.parentSub = parentSub;
    this.onStateChange = onStateChange;
    this.unsubscribe = null;
    this.listeners = nullListeners;
  }

  Subscription.prototype.addNestedSub = function addNestedSub(listener) {
    this.trySubscribe();
    return this.listeners.subscribe(listener);
  };

  Subscription.prototype.notifyNestedSubs = function notifyNestedSubs() {
    this.listeners.notify();
  };

  Subscription.prototype.isSubscribed = function isSubscribed() {
    return Boolean(this.unsubscribe);
  };

  Subscription.prototype.trySubscribe = function trySubscribe() {
    if (!this.unsubscribe) {
      this.unsubscribe = this.parentSub ? this.parentSub.addNestedSub(this.onStateChange) : this.store.subscribe(this.onStateChange);

      this.listeners = createListenerCollection();
    }
  };

  Subscription.prototype.tryUnsubscribe = function tryUnsubscribe() {
    if (this.unsubscribe) {
      this.unsubscribe();
      this.unsubscribe = null;
      this.listeners.clear();
      this.listeners = nullListeners;
    }
  };

  return Subscription;
}();

exports.default = Subscription;
}, 1872, null, "react-redux/lib/utils/Subscription.js");
__d(/* react-redux/lib/connect/connect.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }return target;
};

exports.createConnect = createConnect;

var _connectAdvanced = require(1869                           ); // 1869 = ../components/connectAdvanced

var _connectAdvanced2 = _interopRequireDefault(_connectAdvanced);

var _shallowEqual = require(1874                   ); // 1874 = ../utils/shallowEqual

var _shallowEqual2 = _interopRequireDefault(_shallowEqual);

var _mapDispatchToProps = require(1875                  ); // 1875 = ./mapDispatchToProps

var _mapDispatchToProps2 = _interopRequireDefault(_mapDispatchToProps);

var _mapStateToProps = require(1878               ); // 1878 = ./mapStateToProps

var _mapStateToProps2 = _interopRequireDefault(_mapStateToProps);

var _mergeProps = require(1879          ); // 1879 = ./mergeProps

var _mergeProps2 = _interopRequireDefault(_mergeProps);

var _selectorFactory = require(1880               ); // 1880 = ./selectorFactory

var _selectorFactory2 = _interopRequireDefault(_selectorFactory);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

function _objectWithoutProperties(obj, keys) {
  var target = {};for (var i in obj) {
    if (keys.indexOf(i) >= 0) continue;if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;target[i] = obj[i];
  }return target;
}

function match(arg, factories, name) {
  for (var i = factories.length - 1; i >= 0; i--) {
    var result = factories[i](arg);
    if (result) return result;
  }

  return function (dispatch, options) {
    throw new Error('Invalid value of type ' + typeof arg + ' for ' + name + ' argument when connecting component ' + options.wrappedComponentName + '.');
  };
}

function strictEqual(a, b) {
  return a === b;
}

function createConnect() {
  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      _ref$connectHOC = _ref.connectHOC,
      connectHOC = _ref$connectHOC === undefined ? _connectAdvanced2.default : _ref$connectHOC,
      _ref$mapStateToPropsF = _ref.mapStateToPropsFactories,
      mapStateToPropsFactories = _ref$mapStateToPropsF === undefined ? _mapStateToProps2.default : _ref$mapStateToPropsF,
      _ref$mapDispatchToPro = _ref.mapDispatchToPropsFactories,
      mapDispatchToPropsFactories = _ref$mapDispatchToPro === undefined ? _mapDispatchToProps2.default : _ref$mapDispatchToPro,
      _ref$mergePropsFactor = _ref.mergePropsFactories,
      mergePropsFactories = _ref$mergePropsFactor === undefined ? _mergeProps2.default : _ref$mergePropsFactor,
      _ref$selectorFactory = _ref.selectorFactory,
      selectorFactory = _ref$selectorFactory === undefined ? _selectorFactory2.default : _ref$selectorFactory;

  return function connect(mapStateToProps, mapDispatchToProps, mergeProps) {
    var _ref2 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},
        _ref2$pure = _ref2.pure,
        pure = _ref2$pure === undefined ? true : _ref2$pure,
        _ref2$areStatesEqual = _ref2.areStatesEqual,
        areStatesEqual = _ref2$areStatesEqual === undefined ? strictEqual : _ref2$areStatesEqual,
        _ref2$areOwnPropsEqua = _ref2.areOwnPropsEqual,
        areOwnPropsEqual = _ref2$areOwnPropsEqua === undefined ? _shallowEqual2.default : _ref2$areOwnPropsEqua,
        _ref2$areStatePropsEq = _ref2.areStatePropsEqual,
        areStatePropsEqual = _ref2$areStatePropsEq === undefined ? _shallowEqual2.default : _ref2$areStatePropsEq,
        _ref2$areMergedPropsE = _ref2.areMergedPropsEqual,
        areMergedPropsEqual = _ref2$areMergedPropsE === undefined ? _shallowEqual2.default : _ref2$areMergedPropsE,
        extraOptions = _objectWithoutProperties(_ref2, ['pure', 'areStatesEqual', 'areOwnPropsEqual', 'areStatePropsEqual', 'areMergedPropsEqual']);

    var initMapStateToProps = match(mapStateToProps, mapStateToPropsFactories, 'mapStateToProps');
    var initMapDispatchToProps = match(mapDispatchToProps, mapDispatchToPropsFactories, 'mapDispatchToProps');
    var initMergeProps = match(mergeProps, mergePropsFactories, 'mergeProps');

    return connectHOC(selectorFactory, _extends({
      methodName: 'connect',

      getDisplayName: function getDisplayName(name) {
        return 'Connect(' + name + ')';
      },

      shouldHandleStateChanges: Boolean(mapStateToProps),

      initMapStateToProps: initMapStateToProps,
      initMapDispatchToProps: initMapDispatchToProps,
      initMergeProps: initMergeProps,
      pure: pure,
      areStatesEqual: areStatesEqual,
      areOwnPropsEqual: areOwnPropsEqual,
      areStatePropsEqual: areStatePropsEqual,
      areMergedPropsEqual: areMergedPropsEqual

    }, extraOptions));
  };
}

exports.default = createConnect();
}, 1873, null, "react-redux/lib/connect/connect.js");
__d(/* react-redux/lib/utils/shallowEqual.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.default = shallowEqual;
var hasOwn = Object.prototype.hasOwnProperty;

function is(x, y) {
  if (x === y) {
    return x !== 0 || y !== 0 || 1 / x === 1 / y;
  } else {
    return x !== x && y !== y;
  }
}

function shallowEqual(objA, objB) {
  if (is(objA, objB)) return true;

  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
    return false;
  }

  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);

  if (keysA.length !== keysB.length) return false;

  for (var i = 0; i < keysA.length; i++) {
    if (!hasOwn.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
      return false;
    }
  }

  return true;
}
}, 1874, null, "react-redux/lib/utils/shallowEqual.js");
__d(/* react-redux/lib/connect/mapDispatchToProps.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.whenMapDispatchToPropsIsFunction = whenMapDispatchToPropsIsFunction;
exports.whenMapDispatchToPropsIsMissing = whenMapDispatchToPropsIsMissing;
exports.whenMapDispatchToPropsIsObject = whenMapDispatchToPropsIsObject;

var _redux = require(1460   ); // 1460 = redux

var _wrapMapToProps = require(1876              ); // 1876 = ./wrapMapToProps

function whenMapDispatchToPropsIsFunction(mapDispatchToProps) {
  return typeof mapDispatchToProps === 'function' ? (0, _wrapMapToProps.wrapMapToPropsFunc)(mapDispatchToProps, 'mapDispatchToProps') : undefined;
}

function whenMapDispatchToPropsIsMissing(mapDispatchToProps) {
  return !mapDispatchToProps ? (0, _wrapMapToProps.wrapMapToPropsConstant)(function (dispatch) {
    return { dispatch: dispatch };
  }) : undefined;
}

function whenMapDispatchToPropsIsObject(mapDispatchToProps) {
  return mapDispatchToProps && typeof mapDispatchToProps === 'object' ? (0, _wrapMapToProps.wrapMapToPropsConstant)(function (dispatch) {
    return (0, _redux.bindActionCreators)(mapDispatchToProps, dispatch);
  }) : undefined;
}

exports.default = [whenMapDispatchToPropsIsFunction, whenMapDispatchToPropsIsMissing, whenMapDispatchToPropsIsObject];
}, 1875, null, "react-redux/lib/connect/mapDispatchToProps.js");
__d(/* react-redux/lib/connect/wrapMapToProps.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.wrapMapToPropsConstant = wrapMapToPropsConstant;
exports.getDependsOnOwnProps = getDependsOnOwnProps;
exports.wrapMapToPropsFunc = wrapMapToPropsFunc;

var _verifyPlainObject = require(1877                        ); // 1877 = ../utils/verifyPlainObject

var _verifyPlainObject2 = _interopRequireDefault(_verifyPlainObject);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

function wrapMapToPropsConstant(getConstant) {
  return function initConstantSelector(dispatch, options) {
    var constant = getConstant(dispatch, options);

    function constantSelector() {
      return constant;
    }
    constantSelector.dependsOnOwnProps = false;
    return constantSelector;
  };
}

function getDependsOnOwnProps(mapToProps) {
  return mapToProps.dependsOnOwnProps !== null && mapToProps.dependsOnOwnProps !== undefined ? Boolean(mapToProps.dependsOnOwnProps) : mapToProps.length !== 1;
}

function wrapMapToPropsFunc(mapToProps, methodName) {
  return function initProxySelector(dispatch, _ref) {
    var displayName = _ref.displayName;

    var proxy = function mapToPropsProxy(stateOrDispatch, ownProps) {
      return proxy.dependsOnOwnProps ? proxy.mapToProps(stateOrDispatch, ownProps) : proxy.mapToProps(stateOrDispatch);
    };

    proxy.dependsOnOwnProps = true;

    proxy.mapToProps = function detectFactoryAndVerify(stateOrDispatch, ownProps) {
      proxy.mapToProps = mapToProps;
      proxy.dependsOnOwnProps = getDependsOnOwnProps(mapToProps);
      var props = proxy(stateOrDispatch, ownProps);

      if (typeof props === 'function') {
        proxy.mapToProps = props;
        proxy.dependsOnOwnProps = getDependsOnOwnProps(props);
        props = proxy(stateOrDispatch, ownProps);
      }

      if (process.env.NODE_ENV !== 'production') (0, _verifyPlainObject2.default)(props, displayName, methodName);

      return props;
    };

    return proxy;
  };
}
}, 1876, null, "react-redux/lib/connect/wrapMapToProps.js");
__d(/* react-redux/lib/utils/verifyPlainObject.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.default = verifyPlainObject;

var _isPlainObject = require(1462                  ); // 1462 = lodash/isPlainObject

var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

var _warning = require(1868       ); // 1868 = ./warning

var _warning2 = _interopRequireDefault(_warning);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

function verifyPlainObject(value, displayName, methodName) {
  if (!(0, _isPlainObject2.default)(value)) {
    (0, _warning2.default)(methodName + '() in ' + displayName + ' must return a plain object. Instead received ' + value + '.');
  }
}
}, 1877, null, "react-redux/lib/utils/verifyPlainObject.js");
__d(/* react-redux/lib/connect/mapStateToProps.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.whenMapStateToPropsIsFunction = whenMapStateToPropsIsFunction;
exports.whenMapStateToPropsIsMissing = whenMapStateToPropsIsMissing;

var _wrapMapToProps = require(1876              ); // 1876 = ./wrapMapToProps

function whenMapStateToPropsIsFunction(mapStateToProps) {
  return typeof mapStateToProps === 'function' ? (0, _wrapMapToProps.wrapMapToPropsFunc)(mapStateToProps, 'mapStateToProps') : undefined;
}

function whenMapStateToPropsIsMissing(mapStateToProps) {
  return !mapStateToProps ? (0, _wrapMapToProps.wrapMapToPropsConstant)(function () {
    return {};
  }) : undefined;
}

exports.default = [whenMapStateToPropsIsFunction, whenMapStateToPropsIsMissing];
}, 1878, null, "react-redux/lib/connect/mapStateToProps.js");
__d(/* react-redux/lib/connect/mergeProps.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }return target;
};

exports.defaultMergeProps = defaultMergeProps;
exports.wrapMergePropsFunc = wrapMergePropsFunc;
exports.whenMergePropsIsFunction = whenMergePropsIsFunction;
exports.whenMergePropsIsOmitted = whenMergePropsIsOmitted;

var _verifyPlainObject = require(1877                        ); // 1877 = ../utils/verifyPlainObject

var _verifyPlainObject2 = _interopRequireDefault(_verifyPlainObject);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

function defaultMergeProps(stateProps, dispatchProps, ownProps) {
  return _extends({}, ownProps, stateProps, dispatchProps);
}

function wrapMergePropsFunc(mergeProps) {
  return function initMergePropsProxy(dispatch, _ref) {
    var displayName = _ref.displayName,
        pure = _ref.pure,
        areMergedPropsEqual = _ref.areMergedPropsEqual;

    var hasRunOnce = false;
    var mergedProps = void 0;

    return function mergePropsProxy(stateProps, dispatchProps, ownProps) {
      var nextMergedProps = mergeProps(stateProps, dispatchProps, ownProps);

      if (hasRunOnce) {
        if (!pure || !areMergedPropsEqual(nextMergedProps, mergedProps)) mergedProps = nextMergedProps;
      } else {
        hasRunOnce = true;
        mergedProps = nextMergedProps;

        if (process.env.NODE_ENV !== 'production') (0, _verifyPlainObject2.default)(mergedProps, displayName, 'mergeProps');
      }

      return mergedProps;
    };
  };
}

function whenMergePropsIsFunction(mergeProps) {
  return typeof mergeProps === 'function' ? wrapMergePropsFunc(mergeProps) : undefined;
}

function whenMergePropsIsOmitted(mergeProps) {
  return !mergeProps ? function () {
    return defaultMergeProps;
  } : undefined;
}

exports.default = [whenMergePropsIsFunction, whenMergePropsIsOmitted];
}, 1879, null, "react-redux/lib/connect/mergeProps.js");
__d(/* react-redux/lib/connect/selectorFactory.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.impureFinalPropsSelectorFactory = impureFinalPropsSelectorFactory;
exports.pureFinalPropsSelectorFactory = pureFinalPropsSelectorFactory;
exports.default = finalPropsSelectorFactory;

var _verifySubselectors = require(1881                  ); // 1881 = ./verifySubselectors

var _verifySubselectors2 = _interopRequireDefault(_verifySubselectors);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

function _objectWithoutProperties(obj, keys) {
  var target = {};for (var i in obj) {
    if (keys.indexOf(i) >= 0) continue;if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;target[i] = obj[i];
  }return target;
}

function impureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch) {
  return function impureFinalPropsSelector(state, ownProps) {
    return mergeProps(mapStateToProps(state, ownProps), mapDispatchToProps(dispatch, ownProps), ownProps);
  };
}

function pureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, _ref) {
  var areStatesEqual = _ref.areStatesEqual,
      areOwnPropsEqual = _ref.areOwnPropsEqual,
      areStatePropsEqual = _ref.areStatePropsEqual;

  var hasRunAtLeastOnce = false;
  var state = void 0;
  var ownProps = void 0;
  var stateProps = void 0;
  var dispatchProps = void 0;
  var mergedProps = void 0;

  function handleFirstCall(firstState, firstOwnProps) {
    state = firstState;
    ownProps = firstOwnProps;
    stateProps = mapStateToProps(state, ownProps);
    dispatchProps = mapDispatchToProps(dispatch, ownProps);
    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
    hasRunAtLeastOnce = true;
    return mergedProps;
  }

  function handleNewPropsAndNewState() {
    stateProps = mapStateToProps(state, ownProps);

    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);

    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
    return mergedProps;
  }

  function handleNewProps() {
    if (mapStateToProps.dependsOnOwnProps) stateProps = mapStateToProps(state, ownProps);

    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);

    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
    return mergedProps;
  }

  function handleNewState() {
    var nextStateProps = mapStateToProps(state, ownProps);
    var statePropsChanged = !areStatePropsEqual(nextStateProps, stateProps);
    stateProps = nextStateProps;

    if (statePropsChanged) mergedProps = mergeProps(stateProps, dispatchProps, ownProps);

    return mergedProps;
  }

  function handleSubsequentCalls(nextState, nextOwnProps) {
    var propsChanged = !areOwnPropsEqual(nextOwnProps, ownProps);
    var stateChanged = !areStatesEqual(nextState, state);
    state = nextState;
    ownProps = nextOwnProps;

    if (propsChanged && stateChanged) return handleNewPropsAndNewState();
    if (propsChanged) return handleNewProps();
    if (stateChanged) return handleNewState();
    return mergedProps;
  }

  return function pureFinalPropsSelector(nextState, nextOwnProps) {
    return hasRunAtLeastOnce ? handleSubsequentCalls(nextState, nextOwnProps) : handleFirstCall(nextState, nextOwnProps);
  };
}

function finalPropsSelectorFactory(dispatch, _ref2) {
  var initMapStateToProps = _ref2.initMapStateToProps,
      initMapDispatchToProps = _ref2.initMapDispatchToProps,
      initMergeProps = _ref2.initMergeProps,
      options = _objectWithoutProperties(_ref2, ['initMapStateToProps', 'initMapDispatchToProps', 'initMergeProps']);

  var mapStateToProps = initMapStateToProps(dispatch, options);
  var mapDispatchToProps = initMapDispatchToProps(dispatch, options);
  var mergeProps = initMergeProps(dispatch, options);

  if (process.env.NODE_ENV !== 'production') {
    (0, _verifySubselectors2.default)(mapStateToProps, mapDispatchToProps, mergeProps, options.displayName);
  }

  var selectorFactory = options.pure ? pureFinalPropsSelectorFactory : impureFinalPropsSelectorFactory;

  return selectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, options);
}
}, 1880, null, "react-redux/lib/connect/selectorFactory.js");
__d(/* react-redux/lib/connect/verifySubselectors.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.default = verifySubselectors;

var _warning = require(1868              ); // 1868 = ../utils/warning

var _warning2 = _interopRequireDefault(_warning);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

function verify(selector, methodName, displayName) {
  if (!selector) {
    throw new Error('Unexpected value for ' + methodName + ' in ' + displayName + '.');
  } else if (methodName === 'mapStateToProps' || methodName === 'mapDispatchToProps') {
    if (!selector.hasOwnProperty('dependsOnOwnProps')) {
      (0, _warning2.default)('The selector for ' + methodName + ' of ' + displayName + ' did not specify a value for dependsOnOwnProps.');
    }
  }
}

function verifySubselectors(mapStateToProps, mapDispatchToProps, mergeProps, displayName) {
  verify(mapStateToProps, 'mapStateToProps', displayName);
  verify(mapDispatchToProps, 'mapDispatchToProps', displayName);
  verify(mergeProps, 'mergeProps', displayName);
}
}, 1881, null, "react-redux/lib/connect/verifySubselectors.js");
__d(/* UI/App/Containers/RootContainer.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/home/chris/Desktop/UI/App/Containers/RootContainer.js';

var _react = require(604    ); // 604 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(334           ); // 334 = react-native

var _AppNavigation = require(1883                         ); // 1883 = ../Navigation/AppNavigation

var _AppNavigation2 = babelHelpers.interopRequireDefault(_AppNavigation);

var _reactRedux = require(1860         ); // 1860 = react-redux

var _StartupRedux = require(2968                   ); // 2968 = ../Redux/StartupRedux

var _StartupRedux2 = babelHelpers.interopRequireDefault(_StartupRedux);

var _ReduxPersist = require(2969                    ); // 2969 = ../Config/ReduxPersist

var _ReduxPersist2 = babelHelpers.interopRequireDefault(_ReduxPersist);

var _RootContainerStyles = require(2971                          ); // 2971 = ./Styles/RootContainerStyles

var _RootContainerStyles2 = babelHelpers.interopRequireDefault(_RootContainerStyles);

var RootContainer = function (_Component) {
  babelHelpers.inherits(RootContainer, _Component);

  function RootContainer() {
    babelHelpers.classCallCheck(this, RootContainer);
    return babelHelpers.possibleConstructorReturn(this, (RootContainer.__proto__ || Object.getPrototypeOf(RootContainer)).apply(this, arguments));
  }

  babelHelpers.createClass(RootContainer, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      if (!_ReduxPersist2.default.active) {
        this.props.startup();
      }
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        _reactNative.View,
        { style: _RootContainerStyles2.default.applicationView, __source: {
            fileName: _jsxFileName,
            lineNumber: 21
          }
        },
        _react2.default.createElement(_reactNative.StatusBar, { barStyle: 'light-content', __source: {
            fileName: _jsxFileName,
            lineNumber: 22
          }
        }),
        _react2.default.createElement(_AppNavigation2.default, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 23
          }
        })
      );
    }
  }]);
  return RootContainer;
}(_react.Component);

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
  return {
    startup: function startup() {
      return dispatch(_StartupRedux2.default.startup());
    }
  };
};

exports.default = (0, _reactRedux.connect)(null, mapDispatchToProps)(RootContainer);
}, 1882, null, "UI/App/Containers/RootContainer.js");
__d(/* UI/App/Navigation/AppNavigation.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _reactNavigation = require(1884              ); // 1884 = react-navigation

var _LaunchScreen = require(1952                        ); // 1952 = ../Containers/LaunchScreen

var _LaunchScreen2 = babelHelpers.interopRequireDefault(_LaunchScreen);

var _LoginScreen = require(2652                       ); // 2652 = ../Containers/LoginScreen

var _LoginScreen2 = babelHelpers.interopRequireDefault(_LoginScreen);

var _NavigationStyles = require(2967                       ); // 2967 = ./Styles/NavigationStyles

var _NavigationStyles2 = babelHelpers.interopRequireDefault(_NavigationStyles);

var PrimaryNav = (0, _reactNavigation.StackNavigator)({
  LaunchScreen: { screen: _LaunchScreen2.default },
  LoginScreen: {
    screen: _LoginScreen2.default,
    navigationOptions: { title: 'Login' }
  }
}, {
  headerMode: 'none',
  initialRouteName: 'LaunchScreen',
  navigationOptions: {
    header: {
      style: _NavigationStyles2.default.header
    }
  }
});

exports.default = PrimaryNav;
}, 1883, null, "UI/App/Navigation/AppNavigation.js");
__d(/* react-navigation/src/react-navigation.js */function(global, require, module, exports) {

module.exports = {
  get createNavigationContainer() {
    return require(1885                         ).default; // 1885 = ./createNavigationContainer
  },
  get StateUtils() {
    return require(1889          ).default; // 1889 = ./StateUtils
  },
  get addNavigationHelpers() {
    return require(1888                    ).default; // 1888 = ./addNavigationHelpers
  },
  get NavigationActions() {
    return require(1887                 ).default; // 1887 = ./NavigationActions
  },

  get createNavigator() {
    return require(1890                          ).default; // 1890 = ./navigators/createNavigator
  },
  get StackNavigator() {
    return require(1891                         ).default; // 1891 = ./navigators/StackNavigator
  },
  get TabNavigator() {
    return require(1923                       ).default; // 1923 = ./navigators/TabNavigator
  },
  get DrawerNavigator() {
    return require(1944                          ).default; // 1944 = ./navigators/DrawerNavigator
  },

  get StackRouter() {
    return require(1914                   ).default; // 1914 = ./routers/StackRouter
  },
  get TabRouter() {
    return require(1924                 ).default; // 1924 = ./routers/TabRouter
  },

  get Transitioner() {
    return require(1912                  ).default; // 1912 = ./views/Transitioner
  },
  get CardStack() {
    return require(1893               ).default; // 1893 = ./views/CardStack
  },
  get Card() {
    return require(1895          ).default; // 1895 = ./views/Card
  },

  get Header() {
    return require(1898            ).default; // 1898 = ./views/Header
  },
  get HeaderTitle() {
    return require(1899                 ).default; // 1899 = ./views/HeaderTitle
  },
  get HeaderBackButton() {
    return require(1900                      ).default; // 1900 = ./views/HeaderBackButton
  },

  get DrawerView() {
    return require(1946                       ).default; // 1946 = ./views/Drawer/DrawerView
  },
  get DrawerItems() {
    return require(1949                                 ).default; // 1949 = ./views/Drawer/DrawerNavigatorItems
  },

  get TabView() {
    return require(1925                     ).default; // 1925 = ./views/TabView/TabView
  },
  get TabBarTop() {
    return require(1941                       ).default; // 1941 = ./views/TabView/TabBarTop
  },
  get TabBarBottom() {
    return require(1943                          ).default; // 1943 = ./views/TabView/TabBarBottom
  },

  get withNavigation() {
    return require(1950                    ).default; // 1950 = ./views/withNavigation
  }
};
}, 1884, null, "react-navigation/src/react-navigation.js");
__d(/* react-navigation/src/createNavigationContainer.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-navigation/src/createNavigationContainer.js';
exports.default = createNavigationContainer;

var _react = require(604    ); // 604 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _invariant = require(346                 ); // 346 = fbjs/lib/invariant

var _invariant2 = babelHelpers.interopRequireDefault(_invariant);

var _PlatformHelpers = require(1886               ); // 1886 = ./PlatformHelpers

var _NavigationActions = require(1887                 ); // 1887 = ./NavigationActions

var _NavigationActions2 = babelHelpers.interopRequireDefault(_NavigationActions);

var _addNavigationHelpers = require(1888                    ); // 1888 = ./addNavigationHelpers

var _addNavigationHelpers2 = babelHelpers.interopRequireDefault(_addNavigationHelpers);

function createNavigationContainer(Component, containerOptions) {
  (0, _invariant2.default)(typeof containerOptions === 'undefined', 'containerOptions.URIPrefix has been removed. Pass the uriPrefix prop to the navigator instead');

  var NavigationContainer = function (_React$Component) {
    babelHelpers.inherits(NavigationContainer, _React$Component);

    function NavigationContainer(props) {
      babelHelpers.classCallCheck(this, NavigationContainer);

      var _this = babelHelpers.possibleConstructorReturn(this, (NavigationContainer.__proto__ || Object.getPrototypeOf(NavigationContainer)).call(this, props));

      _this.subs = null;

      _this._handleOpenURL = function (url) {
        var parsedUrl = _this._urlToPathAndParams(url);
        if (parsedUrl) {
          var path = parsedUrl.path,
              params = parsedUrl.params;

          var action = Component.router.getActionForPathAndParams(path, params);
          if (action) {
            _this.dispatch(action);
          }
        }
      };

      _this.dispatch = function (action) {
        var state = _this.state;

        if (!_this._isStateful()) {
          return false;
        }
        var nav = Component.router.getStateForAction(action, state.nav);
        if (nav && nav !== state.nav) {
          _this.setState({ nav: nav }, function () {
            return _this._onNavigationStateChange(state.nav, nav, action);
          });
          return true;
        }
        return false;
      };

      _this._validateProps(props);

      _this.state = {
        nav: _this._isStateful() ? Component.router.getStateForAction(_NavigationActions2.default.init()) : null
      };
      return _this;
    }

    babelHelpers.createClass(NavigationContainer, [{
      key: '_isStateful',
      value: function _isStateful() {
        return !this.props.navigation;
      }
    }, {
      key: '_validateProps',
      value: function _validateProps(props) {
        if (this._isStateful()) {
          return;
        }

        var navigation = props.navigation,
            screenProps = props.screenProps,
            containerProps = babelHelpers.objectWithoutProperties(props, ['navigation', 'screenProps']);


        var keys = Object.keys(containerProps);

        (0, _invariant2.default)(keys.length === 0, 'This navigator has both navigation and container props, so it is ' + ('unclear if it should own its own state. Remove props: "' + keys.join(', ') + '" ') + 'if the navigator should get its state from the navigation prop. If the ' + 'navigator should maintain its own state, do not pass a navigation prop.');
      }
    }, {
      key: '_urlToPathAndParams',
      value: function _urlToPathAndParams(url) {
        var params = {};
        var delimiter = this.props.uriPrefix || '://';
        var path = url.split(delimiter)[1];
        if (!path) {
          path = url;
        }
        return {
          path: path,
          params: params
        };
      }
    }, {
      key: '_onNavigationStateChange',
      value: function _onNavigationStateChange(prevNav, nav, action) {
        if (typeof this.props.onNavigationStateChange === 'undefined' && this._isStateful()) {
          if (console.group) {
            console.group('Navigation Dispatch: ');
            console.log('Action: ', action);
            console.log('New State: ', nav);
            console.log('Last State: ', prevNav);
            console.groupEnd();
          } else {
            console.log('Navigation Dispatch: ', {
              action: action,
              newState: nav,
              lastState: prevNav
            });
          }

          return;
        }

        if (typeof this.props.onNavigationStateChange === 'function') {
          this.props.onNavigationStateChange(prevNav, nav, action);
        }
      }
    }, {
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(nextProps) {
        this._validateProps(nextProps);
      }
    }, {
      key: 'componentDidMount',
      value: function componentDidMount() {
        var _this2 = this;

        if (!this._isStateful()) {
          return;
        }

        this.subs = _PlatformHelpers.BackAndroid.addEventListener('backPress', function () {
          return _this2.dispatch(_NavigationActions2.default.back());
        });

        _PlatformHelpers.Linking.addEventListener('url', function (_ref) {
          var url = _ref.url;

          _this2._handleOpenURL(url);
        });

        _PlatformHelpers.Linking.getInitialURL().then(function (url) {
          return url && _this2._handleOpenURL(url);
        });
      }
    }, {
      key: 'componentWillUnmount',
      value: function componentWillUnmount() {
        _PlatformHelpers.Linking.removeEventListener('url', this._handleOpenURL);
        this.subs && this.subs.remove();
      }
    }, {
      key: 'render',
      value: function render() {
        var navigation = this.props.navigation;
        if (this._isStateful()) {
          if (!this._navigation || this._navigation.state !== this.state.nav) {
            this._navigation = (0, _addNavigationHelpers2.default)({
              dispatch: this.dispatch,
              state: this.state.nav
            });
          }
          navigation = this._navigation;
        }
        return _react2.default.createElement(Component, babelHelpers.extends({}, this.props, { navigation: navigation, __source: {
            fileName: _jsxFileName,
            lineNumber: 202
          }
        }));
      }
    }]);
    return NavigationContainer;
  }(_react2.default.Component);

  NavigationContainer.router = Component.router;


  return NavigationContainer;
}
}, 1885, null, "react-navigation/src/createNavigationContainer.js");
__d(/* react-navigation/src/PlatformHelpers.native.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Linking = exports.BackAndroid = undefined;

var _reactNative = require(334           ); // 334 = react-native

var BackAndroid = _reactNative.BackHandler || _reactNative.BackAndroid;

exports.BackAndroid = BackAndroid;
exports.Linking = _reactNative.Linking;
}, 1886, null, "react-navigation/src/PlatformHelpers.native.js");
__d(/* react-navigation/src/NavigationActions.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});


var BACK = 'Navigation/BACK';
var INIT = 'Navigation/INIT';
var NAVIGATE = 'Navigation/NAVIGATE';
var RESET = 'Navigation/RESET';
var SET_PARAMS = 'Navigation/SET_PARAMS';
var URI = 'Navigation/URI';

var createAction = function createAction(type) {
  return function () {
    var payload = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    return babelHelpers.extends({
      type: type
    }, payload);
  };
};

var back = createAction(BACK);
var init = createAction(INIT);
var navigate = createAction(NAVIGATE);
var reset = createAction(RESET);
var setParams = createAction(SET_PARAMS);
var uri = createAction(URI);

var deprecatedActionMap = {
  Back: BACK,
  Init: INIT,
  Navigate: NAVIGATE,
  Reset: RESET,
  SetParams: SET_PARAMS,
  Uri: URI
};

var mapDeprecatedActionAndWarn = function mapDeprecatedActionAndWarn(action) {
  var mappedType = deprecatedActionMap[action.type];
  if (!mappedType) {
    return action;
  }

  console.warn(['The action type \'' + action.type + '\' has been renamed to \'' + mappedType + '\'.', '\'' + action.type + '\' will continue to work while in beta but will be removed', 'in the first major release. Moving forward, you should use the', 'action constants and action creators exported by this library in', "the 'actions' object.", 'See https://github.com/react-community/react-navigation/pull/120 for', 'more details.'].join(' '));

  return babelHelpers.extends({}, action, {
    type: deprecatedActionMap[action.type]
  });
};

exports.default = {
  BACK: BACK,
  INIT: INIT,
  NAVIGATE: NAVIGATE,
  RESET: RESET,
  SET_PARAMS: SET_PARAMS,
  URI: URI,

  back: back,
  init: init,
  navigate: navigate,
  reset: reset,
  setParams: setParams,
  uri: uri,

  mapDeprecatedActionAndWarn: mapDeprecatedActionAndWarn
};
}, 1887, null, "react-navigation/src/NavigationActions.js");
__d(/* react-navigation/src/addNavigationHelpers.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

exports.default = function (navigation) {
  return babelHelpers.extends({}, navigation, {
    goBack: function goBack(key) {
      return navigation.dispatch(_NavigationActions2.default.back({
        key: key === undefined ? navigation.state.key : key
      }));
    },
    navigate: function navigate(routeName, params, action) {
      return navigation.dispatch(_NavigationActions2.default.navigate({
        routeName: routeName,
        params: params,
        action: action
      }));
    },

    setParams: function setParams(params) {
      return navigation.dispatch(_NavigationActions2.default.setParams({
        params: params,
        key: navigation.state.key
      }));
    }
  });
};

var _NavigationActions = require(1887                 ); // 1887 = ./NavigationActions

var _NavigationActions2 = babelHelpers.interopRequireDefault(_NavigationActions);
}, 1888, null, "react-navigation/src/addNavigationHelpers.js");
__d(/* react-navigation/src/StateUtils.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _invariant = require(346                 ); // 346 = fbjs/lib/invariant

var _invariant2 = babelHelpers.interopRequireDefault(_invariant);

var StateUtils = {
  get: function get(state, key) {
    return state.routes.find(function (route) {
      return route.key === key;
    }) || null;
  },
  indexOf: function indexOf(state, key) {
    return state.routes.map(function (route) {
      return route.key;
    }).indexOf(key);
  },
  has: function has(state, key) {
    return !!state.routes.some(function (route) {
      return route.key === key;
    });
  },
  push: function push(state, route) {
    (0, _invariant2.default)(StateUtils.indexOf(state, route.key) === -1, 'should not push route with duplicated key %s', route.key);

    var routes = state.routes.slice();
    routes.push(route);

    return babelHelpers.extends({}, state, {
      index: routes.length - 1,
      routes: routes
    });
  },
  pop: function pop(state) {
    if (state.index <= 0) {
      return state;
    }
    var routes = state.routes.slice(0, -1);
    return babelHelpers.extends({}, state, {
      index: routes.length - 1,
      routes: routes
    });
  },
  jumpToIndex: function jumpToIndex(state, index) {
    if (index === state.index) {
      return state;
    }

    (0, _invariant2.default)(!!state.routes[index], 'invalid index %s to jump to', index);

    return babelHelpers.extends({}, state, {
      index: index
    });
  },
  jumpTo: function jumpTo(state, key) {
    var index = StateUtils.indexOf(state, key);
    return StateUtils.jumpToIndex(state, index);
  },
  back: function back(state) {
    var index = state.index - 1;
    var route = state.routes[index];
    return route ? StateUtils.jumpToIndex(state, index) : state;
  },
  forward: function forward(state) {
    var index = state.index + 1;
    var route = state.routes[index];
    return route ? StateUtils.jumpToIndex(state, index) : state;
  },
  replaceAt: function replaceAt(state, key, route) {
    var index = StateUtils.indexOf(state, key);
    return StateUtils.replaceAtIndex(state, index, route);
  },
  replaceAtIndex: function replaceAtIndex(state, index, route) {
    (0, _invariant2.default)(!!state.routes[index], 'invalid index %s for replacing route %s', index, route.key);

    if (state.routes[index] === route) {
      return state;
    }

    var routes = state.routes.slice();
    routes[index] = route;

    return babelHelpers.extends({}, state, {
      index: index,
      routes: routes
    });
  },
  reset: function reset(state, routes, index) {
    (0, _invariant2.default)(routes.length && Array.isArray(routes), 'invalid routes to replace');

    var nextIndex = index === undefined ? routes.length - 1 : index;

    if (state.routes.length === routes.length && state.index === nextIndex) {
      var compare = function compare(route, ii) {
        return routes[ii] === route;
      };
      if (state.routes.every(compare)) {
        return state;
      }
    }

    (0, _invariant2.default)(!!routes[nextIndex], 'invalid index %s to reset', nextIndex);

    return babelHelpers.extends({}, state, {
      index: nextIndex,
      routes: routes
    });
  }
};

exports.default = StateUtils;
}, 1889, null, "react-navigation/src/StateUtils.js");
__d(/* react-navigation/src/navigators/createNavigator.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-navigation/src/navigators/createNavigator.js';

var _react = require(604    ); // 604 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var createNavigator = function createNavigator(router, routeConfigs, navigatorConfig, navigatorType) {
  return function (View) {
    var Navigator = function (_React$Component) {
      babelHelpers.inherits(Navigator, _React$Component);

      function Navigator() {
        babelHelpers.classCallCheck(this, Navigator);
        return babelHelpers.possibleConstructorReturn(this, (Navigator.__proto__ || Object.getPrototypeOf(Navigator)).apply(this, arguments));
      }

      babelHelpers.createClass(Navigator, [{
        key: 'render',
        value: function render() {
          return _react2.default.createElement(View, babelHelpers.extends({}, this.props, { router: router, __source: {
              fileName: _jsxFileName,
              lineNumber: 33
            }
          }));
        }
      }]);
      return Navigator;
    }(_react2.default.Component);

    Navigator.router = router;
    Navigator.routeConfigs = routeConfigs;
    Navigator.navigatorConfig = navigatorConfig;
    Navigator.navigatorType = navigatorType;


    return Navigator;
  };
};

exports.default = createNavigator;
}, 1890, null, "react-navigation/src/navigators/createNavigator.js");
__d(/* react-navigation/src/navigators/StackNavigator.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-navigation/src/navigators/StackNavigator.js';

var _react = require(604    ); // 604 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _createNavigationContainer = require(1885                          ); // 1885 = ../createNavigationContainer

var _createNavigationContainer2 = babelHelpers.interopRequireDefault(_createNavigationContainer);

var _createNavigator = require(1890               ); // 1890 = ./createNavigator

var _createNavigator2 = babelHelpers.interopRequireDefault(_createNavigator);

var _CardStackTransitioner = require(1892                            ); // 1892 = ../views/CardStackTransitioner

var _CardStackTransitioner2 = babelHelpers.interopRequireDefault(_CardStackTransitioner);

var _StackRouter = require(1914                    ); // 1914 = ../routers/StackRouter

var _StackRouter2 = babelHelpers.interopRequireDefault(_StackRouter);

var _NavigatorTypes = require(1922              ); // 1922 = ./NavigatorTypes

var _NavigatorTypes2 = babelHelpers.interopRequireDefault(_NavigatorTypes);

exports.default = function (routeConfigMap) {
  var stackConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var initialRouteName = stackConfig.initialRouteName,
      initialRouteParams = stackConfig.initialRouteParams,
      paths = stackConfig.paths,
      headerMode = stackConfig.headerMode,
      mode = stackConfig.mode,
      cardStyle = stackConfig.cardStyle,
      transitionConfig = stackConfig.transitionConfig,
      onTransitionStart = stackConfig.onTransitionStart,
      onTransitionEnd = stackConfig.onTransitionEnd,
      navigationOptions = stackConfig.navigationOptions;

  var stackRouterConfig = {
    initialRouteName: initialRouteName,
    initialRouteParams: initialRouteParams,
    paths: paths,
    navigationOptions: navigationOptions
  };

  var router = (0, _StackRouter2.default)(routeConfigMap, stackRouterConfig);

  var navigator = (0, _createNavigator2.default)(router, routeConfigMap, stackConfig, _NavigatorTypes2.default.STACK)(function (props) {
    return _react2.default.createElement(_CardStackTransitioner2.default, babelHelpers.extends({}, props, {
      headerMode: headerMode,
      mode: mode,
      cardStyle: cardStyle,
      transitionConfig: transitionConfig,
      onTransitionStart: onTransitionStart,
      onTransitionEnd: onTransitionEnd,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 52
      }
    }));
  });

  return (0, _createNavigationContainer2.default)(navigator, stackConfig.containerOptions);
};
}, 1891, null, "react-navigation/src/navigators/StackNavigator.js");
__d(/* react-navigation/src/views/CardStackTransitioner.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-navigation/src/views/CardStackTransitioner.js';

var _react = require(604    ); // 604 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(334           ); // 334 = react-native

var _CardStack = require(1893         ); // 1893 = ./CardStack

var _CardStack2 = babelHelpers.interopRequireDefault(_CardStack);

var _CardStackStyleInterpolator = require(1911                          ); // 1911 = ./CardStackStyleInterpolator

var _CardStackStyleInterpolator2 = babelHelpers.interopRequireDefault(_CardStackStyleInterpolator);

var _Transitioner = require(1912            ); // 1912 = ./Transitioner

var _Transitioner2 = babelHelpers.interopRequireDefault(_Transitioner);

var _TransitionConfigs = require(1910                 ); // 1910 = ./TransitionConfigs

var _TransitionConfigs2 = babelHelpers.interopRequireDefault(_TransitionConfigs);

var NativeAnimatedModule = _reactNative.NativeModules && _reactNative.NativeModules.NativeAnimatedModule;

var CardStackTransitioner = function (_Component) {
  babelHelpers.inherits(CardStackTransitioner, _Component);

  function CardStackTransitioner() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, CardStackTransitioner);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = CardStackTransitioner.__proto__ || Object.getPrototypeOf(CardStackTransitioner)).call.apply(_ref, [this].concat(args))), _this), _this._configureTransition = function (transitionProps, prevTransitionProps) {
      var isModal = _this.props.mode === 'modal';

      var transitionSpec = babelHelpers.extends({}, _TransitionConfigs2.default.getTransitionConfig(_this.props.transitionConfig, transitionProps, prevTransitionProps, isModal).transitionSpec);
      if (!!NativeAnimatedModule && _CardStackStyleInterpolator2.default.canUseNativeDriver(isModal)) {
        transitionSpec.useNativeDriver = true;
      }
      return transitionSpec;
    }, _this._render = function (props) {
      var _this$props = _this.props,
          screenProps = _this$props.screenProps,
          headerMode = _this$props.headerMode,
          mode = _this$props.mode,
          router = _this$props.router,
          cardStyle = _this$props.cardStyle,
          transitionConfig = _this$props.transitionConfig,
          style = _this$props.style;

      return _react2.default.createElement(_CardStack2.default, babelHelpers.extends({
        screenProps: screenProps,
        headerMode: headerMode,
        mode: mode,
        router: router,
        cardStyle: cardStyle,
        transitionConfig: transitionConfig,
        style: style
      }, props, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 110
        }
      }));
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(CardStackTransitioner, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement(_Transitioner2.default, {
        configureTransition: this._configureTransition,
        navigation: this.props.navigation,
        render: this._render,
        style: this.props.style,
        onTransitionStart: this.props.onTransitionStart,
        onTransitionEnd: this.props.onTransitionEnd,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 60
        }
      });
    }
  }]);
  return CardStackTransitioner;
}(_react.Component);

CardStackTransitioner.defaultProps = {
  mode: 'card'
};
exports.default = CardStackTransitioner;
}, 1892, null, "react-navigation/src/views/CardStackTransitioner.js");
__d(/* react-navigation/src/views/CardStack.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-navigation/src/views/CardStack.js';

var _react = require(604    ); // 604 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _clamp = require(1894   ); // 1894 = clamp

var _clamp2 = babelHelpers.interopRequireDefault(_clamp);

var _reactNative = require(334           ); // 334 = react-native

var _Card = require(1895    ); // 1895 = ./Card

var _Card2 = babelHelpers.interopRequireDefault(_Card);

var _Header = require(1898      ); // 1898 = ./Header

var _Header2 = babelHelpers.interopRequireDefault(_Header);

var _NavigationActions = require(1887                  ); // 1887 = ../NavigationActions

var _NavigationActions2 = babelHelpers.interopRequireDefault(_NavigationActions);

var _addNavigationHelpers = require(1888                     ); // 1888 = ../addNavigationHelpers

var _addNavigationHelpers2 = babelHelpers.interopRequireDefault(_addNavigationHelpers);

var _SceneView = require(1904         ); // 1904 = ./SceneView

var _SceneView2 = babelHelpers.interopRequireDefault(_SceneView);

var _TransitionConfigs = require(1910                 ); // 1910 = ./TransitionConfigs

var _TransitionConfigs2 = babelHelpers.interopRequireDefault(_TransitionConfigs);

var emptyFunction = function emptyFunction() {};

var ANIMATION_DURATION = 500;

var POSITION_THRESHOLD = 1 / 2;

var RESPOND_THRESHOLD = 20;

var GESTURE_RESPONSE_DISTANCE_HORIZONTAL = 25;
var GESTURE_RESPONSE_DISTANCE_VERTICAL = 135;

var animatedSubscribeValue = function animatedSubscribeValue(animatedValue) {
  if (!animatedValue.__isNative) {
    return;
  }
  if (Object.keys(animatedValue._listeners).length === 0) {
    animatedValue.addListener(emptyFunction);
  }
};

var CardStack = function (_Component) {
  babelHelpers.inherits(CardStack, _Component);

  function CardStack() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, CardStack);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = CardStack.__proto__ || Object.getPrototypeOf(CardStack)).call.apply(_ref, [this].concat(args))), _this), _this._gestureStartValue = 0, _this._isResponding = false, _this._immediateIndex = null, _this._screenDetails = {}, _this._getScreenDetails = function (scene) {
      var _this$props = _this.props,
          screenProps = _this$props.screenProps,
          navigation = _this$props.navigation,
          router = _this$props.router;

      var screenDetails = _this._screenDetails[scene.key];
      if (!screenDetails || screenDetails.state !== scene.route) {
        var screenNavigation = (0, _addNavigationHelpers2.default)(babelHelpers.extends({}, navigation, {
          state: scene.route
        }));
        screenDetails = {
          state: scene.route,
          navigation: screenNavigation,
          options: router.getScreenOptions(screenNavigation, screenProps)
        };
        _this._screenDetails[scene.key] = screenDetails;
      }
      return screenDetails;
    }, _this._renderCard = function (scene) {
      var isModal = _this.props.mode === 'modal';

      var _TransitionConfigs$ge = _TransitionConfigs2.default.getTransitionConfig(_this.props.transitionConfig, {}, {}, isModal),
          screenInterpolator = _TransitionConfigs$ge.screenInterpolator;

      var style = screenInterpolator && screenInterpolator(babelHelpers.extends({}, _this.props, { scene: scene }));

      var SceneComponent = _this.props.router.getComponentForRouteName(scene.route.routeName);

      return _react2.default.createElement(
        _Card2.default,
        babelHelpers.extends({}, _this.props, {
          key: 'card_' + scene.key,
          style: [style, _this.props.cardStyle],
          scene: scene,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 430
          }
        }),
        _this._renderInnerScene(SceneComponent, scene)
      );
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(CardStack, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(props) {
      var _this2 = this;

      if (props.screenProps !== this.props.screenProps) {
        this._screenDetails = {};
      }
      props.scenes.forEach(function (newScene) {
        if (_this2._screenDetails[newScene.key] && _this2._screenDetails[newScene.key].state !== newScene.route) {
          _this2._screenDetails[newScene.key] = null;
        }
      });
    }
  }, {
    key: '_renderHeader',
    value: function _renderHeader(scene, headerMode) {
      var header = this._getScreenDetails(scene).options.header;

      if (typeof header !== 'undefined' && typeof header !== 'function') {
        return header;
      }

      var renderHeader = header || function (props) {
        return _react2.default.createElement(_Header2.default, babelHelpers.extends({}, props, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 173
          }
        }));
      };

      var _props = this.props,
          mode = _props.mode,
          passProps = babelHelpers.objectWithoutProperties(_props, ['mode']);


      return renderHeader(babelHelpers.extends({}, passProps, {
        scene: scene,
        mode: headerMode,
        getScreenDetails: this._getScreenDetails
      }));
    }
  }, {
    key: '_animatedSubscribe',
    value: function _animatedSubscribe(props) {
      animatedSubscribeValue(props.layout.width);
      animatedSubscribeValue(props.layout.height);
      animatedSubscribeValue(props.position);
    }
  }, {
    key: '_reset',
    value: function _reset(resetToIndex, duration) {
      _reactNative.Animated.timing(this.props.position, {
        toValue: resetToIndex,
        duration: duration,
        easing: _reactNative.Easing.linear(),
        useNativeDriver: this.props.position.__isNative
      }).start();
    }
  }, {
    key: '_goBack',
    value: function _goBack(backFromIndex, duration) {
      var _this3 = this;

      var _props2 = this.props,
          navigation = _props2.navigation,
          position = _props2.position,
          scenes = _props2.scenes;

      var toValue = Math.max(backFromIndex - 1, 0);

      this._immediateIndex = toValue;

      _reactNative.Animated.timing(position, {
        toValue: toValue,
        duration: duration,
        easing: _reactNative.Easing.linear(),
        useNativeDriver: position.__isNative
      }).start(function () {
        _this3._immediateIndex = null;
        var backFromScene = scenes.find(function (s) {
          return s.index === toValue + 1;
        });
        if (!_this3._isResponding && backFromScene) {
          navigation.dispatch(_NavigationActions2.default.back({ key: backFromScene.route.key }));
        }
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _this4 = this;

      var floatingHeader = null;
      var headerMode = this._getHeaderMode();
      if (headerMode === 'float') {
        floatingHeader = this._renderHeader(this.props.scene, headerMode);
      }
      var _props3 = this.props,
          navigation = _props3.navigation,
          position = _props3.position,
          layout = _props3.layout,
          scene = _props3.scene,
          scenes = _props3.scenes,
          mode = _props3.mode;
      var index = navigation.state.index;

      var isVertical = mode === 'modal';

      var responder = _reactNative.PanResponder.create({
        onPanResponderTerminate: function onPanResponderTerminate() {
          _this4._isResponding = false;
          _this4._reset(index, 0);
        },
        onPanResponderGrant: function onPanResponderGrant() {
          position.stopAnimation(function (value) {
            _this4._isResponding = true;
            _this4._gestureStartValue = value;
          });
        },
        onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder(event, gesture) {
          if (index !== scene.index) {
            return false;
          }
          var immediateIndex = _this4._immediateIndex == null ? index : _this4._immediateIndex;
          var currentDragDistance = gesture[isVertical ? 'dy' : 'dx'];
          var currentDragPosition = event.nativeEvent[isVertical ? 'pageY' : 'pageX'];
          var axisLength = isVertical ? layout.height.__getValue() : layout.width.__getValue();
          var axisHasBeenMeasured = !!axisLength;

          var screenEdgeDistance = currentDragPosition - currentDragDistance;

          var gestureResponseDistance = isVertical ? GESTURE_RESPONSE_DISTANCE_VERTICAL : GESTURE_RESPONSE_DISTANCE_HORIZONTAL;

          if (screenEdgeDistance > gestureResponseDistance) {
            return false;
          }

          var hasDraggedEnough = Math.abs(currentDragDistance) > RESPOND_THRESHOLD;

          var isOnFirstCard = immediateIndex === 0;
          var shouldSetResponder = hasDraggedEnough && axisHasBeenMeasured && !isOnFirstCard;
          return shouldSetResponder;
        },
        onPanResponderMove: function onPanResponderMove(event, gesture) {
          var startValue = _this4._gestureStartValue;
          var axis = isVertical ? 'dy' : 'dx';
          var axisDistance = isVertical ? layout.height.__getValue() : layout.width.__getValue();
          var currentValue = _reactNative.I18nManager.isRTL && axis === 'dx' ? startValue + gesture[axis] / axisDistance : startValue - gesture[axis] / axisDistance;
          var value = (0, _clamp2.default)(index - 1, currentValue, index);
          position.setValue(value);
        },
        onPanResponderTerminationRequest: function onPanResponderTerminationRequest() {
          return false;
        },
        onPanResponderRelease: function onPanResponderRelease(event, gesture) {
          if (!_this4._isResponding) {
            return;
          }
          _this4._isResponding = false;

          var immediateIndex = _this4._immediateIndex == null ? index : _this4._immediateIndex;

          var axisDistance = isVertical ? layout.height.__getValue() : layout.width.__getValue();
          var movedDistance = gesture[isVertical ? 'moveY' : 'moveX'];
          var defaultVelocity = axisDistance / ANIMATION_DURATION;
          var gestureVelocity = gesture[isVertical ? 'vy' : 'vx'];
          var velocity = Math.max(gestureVelocity, defaultVelocity);
          var resetDuration = movedDistance / velocity;
          var goBackDuration = (axisDistance - movedDistance) / velocity;

          position.stopAnimation(function (value) {
            if (gestureVelocity < -0.5) {
              _this4._reset(immediateIndex, resetDuration);
              return;
            }
            if (gestureVelocity > 0.5) {
              _this4._goBack(immediateIndex, goBackDuration);
              return;
            }

            if (value <= index - POSITION_THRESHOLD) {
              _this4._goBack(immediateIndex, goBackDuration);
            } else {
              _this4._reset(immediateIndex, resetDuration);
            }
          });
        }
      });

      var _getScreenDetails = this._getScreenDetails(scene),
          options = _getScreenDetails.options;

      var gesturesEnabled = typeof options.gesturesEnabled === 'boolean' ? options.gesturesEnabled : _reactNative.Platform.OS === 'ios';

      var handlers = gesturesEnabled ? responder.panHandlers : {};

      return _react2.default.createElement(
        _reactNative.View,
        babelHelpers.extends({}, handlers, { style: styles.container, __source: {
            fileName: _jsxFileName,
            lineNumber: 363
          }
        }),
        _react2.default.createElement(
          _reactNative.View,
          { style: styles.scenes, __source: {
              fileName: _jsxFileName,
              lineNumber: 364
            }
          },
          scenes.map(function (s) {
            return _this4._renderCard(s);
          })
        ),
        floatingHeader
      );
    }
  }, {
    key: '_getHeaderMode',
    value: function _getHeaderMode() {
      if (this.props.headerMode) {
        return this.props.headerMode;
      }
      if (_reactNative.Platform.OS === 'android' || this.props.mode === 'modal') {
        return 'screen';
      }
      return 'float';
    }
  }, {
    key: '_renderInnerScene',
    value: function _renderInnerScene(SceneComponent, scene) {
      var _getScreenDetails2 = this._getScreenDetails(scene),
          navigation = _getScreenDetails2.navigation;

      var screenProps = this.props.screenProps;

      var headerMode = this._getHeaderMode();
      if (headerMode === 'screen') {
        return _react2.default.createElement(
          _reactNative.View,
          { style: styles.container, __source: {
              fileName: _jsxFileName,
              lineNumber: 391
            }
          },
          _react2.default.createElement(
            _reactNative.View,
            { style: { flex: 1 }, __source: {
                fileName: _jsxFileName,
                lineNumber: 392
              }
            },
            _react2.default.createElement(_SceneView2.default, {
              screenProps: screenProps,
              navigation: navigation,
              component: SceneComponent,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 393
              }
            })
          ),
          this._renderHeader(scene, headerMode)
        );
      }
      return _react2.default.createElement(_SceneView2.default, {
        screenProps: this.props.screenProps,
        navigation: navigation,
        component: SceneComponent,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 404
        }
      });
    }
  }]);
  return CardStack;
}(_react.Component);

var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1,

    flexDirection: 'column-reverse'
  },
  scenes: {
    flex: 1
  }
});

exports.default = CardStack;
}, 1893, null, "react-navigation/src/views/CardStack.js");
__d(/* clamp/index.js */function(global, require, module, exports) {module.exports = clamp;

function clamp(value, min, max) {
  return min < max ? value < min ? min : value > max ? max : value : value < max ? max : value > min ? min : value;
}
}, 1894, null, "clamp/index.js");
__d(/* react-navigation/src/views/Card.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-navigation/src/views/Card.js';

var _react = require(604    ); // 604 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(334           ); // 334 = react-native

var _PointerEventsContainer = require(1896                      ); // 1896 = ./PointerEventsContainer

var _PointerEventsContainer2 = babelHelpers.interopRequireDefault(_PointerEventsContainer);

var Card = function (_React$Component) {
  babelHelpers.inherits(Card, _React$Component);

  function Card() {
    babelHelpers.classCallCheck(this, Card);
    return babelHelpers.possibleConstructorReturn(this, (Card.__proto__ || Object.getPrototypeOf(Card)).apply(this, arguments));
  }

  babelHelpers.createClass(Card, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          children = _props.children,
          pointerEvents = _props.pointerEvents,
          style = _props.style;

      return _react2.default.createElement(
        _reactNative.Animated.View,
        {
          pointerEvents: pointerEvents,
          ref: this.props.onComponentRef,
          style: [styles.main, style],
          __source: {
            fileName: _jsxFileName,
            lineNumber: 27
          }
        },
        children
      );
    }
  }]);
  return Card;
}(_react2.default.Component);

var styles = _reactNative.StyleSheet.create({
  main: {
    backgroundColor: '#E9E9EF',
    bottom: 0,
    left: 0,
    position: 'absolute',
    right: 0,
    shadowColor: 'black',
    shadowOffset: { width: 0, height: 0 },
    shadowOpacity: 0.4,
    shadowRadius: 10,
    top: 0
  }
});

Card = (0, _PointerEventsContainer2.default)(Card);

exports.default = Card;
}, 1895, null, "react-navigation/src/views/Card.js");
__d(/* react-navigation/src/views/PointerEventsContainer.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-navigation/src/views/PointerEventsContainer.js';
exports.default = create;

var _react = require(604    ); // 604 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _invariant = require(346                 ); // 346 = fbjs/lib/invariant

var _invariant2 = babelHelpers.interopRequireDefault(_invariant);

var _AnimatedValueSubscription = require(1897                         ); // 1897 = ./AnimatedValueSubscription

var _AnimatedValueSubscription2 = babelHelpers.interopRequireDefault(_AnimatedValueSubscription);

var MIN_POSITION_OFFSET = 0.01;

function create(Component) {
  var Container = function (_React$Component) {
    babelHelpers.inherits(Container, _React$Component);

    function Container(props, context) {
      babelHelpers.classCallCheck(this, Container);

      var _this = babelHelpers.possibleConstructorReturn(this, (Container.__proto__ || Object.getPrototypeOf(Container)).call(this, props, context));

      _this._pointerEvents = _this._computePointerEvents();
      return _this;
    }

    babelHelpers.createClass(Container, [{
      key: 'componentWillMount',
      value: function componentWillMount() {
        this._onPositionChange = this._onPositionChange.bind(this);
        this._onComponentRef = this._onComponentRef.bind(this);
      }
    }, {
      key: 'componentDidMount',
      value: function componentDidMount() {
        this._bindPosition(this.props);
      }
    }, {
      key: 'componentWillUnmount',
      value: function componentWillUnmount() {
        this._positionListener && this._positionListener.remove();
      }
    }, {
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(nextProps) {
        this._bindPosition(nextProps);
      }
    }, {
      key: 'render',
      value: function render() {
        this._pointerEvents = this._computePointerEvents();
        return _react2.default.createElement(Component, babelHelpers.extends({}, this.props, {
          pointerEvents: this._pointerEvents,
          onComponentRef: this._onComponentRef,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 55
          }
        }));
      }
    }, {
      key: '_onComponentRef',
      value: function _onComponentRef(component) {
        this._component = component;
        if (component) {
          (0, _invariant2.default)(typeof component.setNativeProps === 'function', 'component must implement method `setNativeProps`');
        }
      }
    }, {
      key: '_bindPosition',
      value: function _bindPosition(props) {
        this._positionListener && this._positionListener.remove();
        this._positionListener = new _AnimatedValueSubscription2.default(props.position, this._onPositionChange);
      }
    }, {
      key: '_onPositionChange',
      value: function _onPositionChange() {
        if (this._component) {
          var pointerEvents = this._computePointerEvents();
          if (this._pointerEvents !== pointerEvents) {
            this._pointerEvents = pointerEvents;
            this._component.setNativeProps({ pointerEvents: pointerEvents });
          }
        }
      }
    }, {
      key: '_computePointerEvents',
      value: function _computePointerEvents() {
        var _props = this.props,
            navigation = _props.navigation,
            position = _props.position,
            scene = _props.scene;


        if (scene.isStale || navigation.state.index !== scene.index) {
          return scene.index > navigation.state.index ? 'box-only' : 'none';
        }

        var offset = position.__getAnimatedValue() - navigation.state.index;
        if (Math.abs(offset) > MIN_POSITION_OFFSET) {
          return 'box-only';
        }

        return 'auto';
      }
    }]);
    return Container;
  }(_react2.default.Component);

  return Container;
}
}, 1896, null, "react-navigation/src/views/PointerEventsContainer.js");
__d(/* react-navigation/src/views/AnimatedValueSubscription.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _reactNative = require(334           ); // 334 = react-native

var AnimatedValueSubscription = function () {
  function AnimatedValueSubscription(value, callback) {
    babelHelpers.classCallCheck(this, AnimatedValueSubscription);

    this._value = value;
    this._token = value.addListener(callback);
  }

  babelHelpers.createClass(AnimatedValueSubscription, [{
    key: 'remove',
    value: function remove() {
      this._value.removeListener(this._token);
    }
  }]);
  return AnimatedValueSubscription;
}();

exports.default = AnimatedValueSubscription;
}, 1897, null, "react-navigation/src/views/AnimatedValueSubscription.js");
__d(/* react-navigation/src/views/Header.js */function(global, require, module, exports) {

'no babel-plugin-flow-react-proptypes';

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-navigation/src/views/Header.js';

var _react = require(604    ); // 604 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(334           ); // 334 = react-native

var _HeaderTitle = require(1899           ); // 1899 = ./HeaderTitle

var _HeaderTitle2 = babelHelpers.interopRequireDefault(_HeaderTitle);

var _HeaderBackButton = require(1900                ); // 1900 = ./HeaderBackButton

var _HeaderBackButton2 = babelHelpers.interopRequireDefault(_HeaderBackButton);

var _HeaderStyleInterpolator = require(1903                       ); // 1903 = ./HeaderStyleInterpolator

var _HeaderStyleInterpolator2 = babelHelpers.interopRequireDefault(_HeaderStyleInterpolator);

var APPBAR_HEIGHT = _reactNative.Platform.OS === 'ios' ? 44 : 56;
var STATUSBAR_HEIGHT = _reactNative.Platform.OS === 'ios' ? 20 : 0;
var TITLE_OFFSET = _reactNative.Platform.OS === 'ios' ? 70 : 40;

var Header = function (_React$PureComponent) {
  babelHelpers.inherits(Header, _React$PureComponent);

  function Header() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, Header);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = Header.__proto__ || Object.getPrototypeOf(Header)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      widths: {}
    }, _this._renderTitleComponent = function (props) {
      var details = _this.props.getScreenDetails(props.scene);
      var headerTitle = details.options.headerTitle;
      if (headerTitle && typeof headerTitle !== 'string') {
        return headerTitle;
      }
      var titleString = _this._getHeaderTitleString(props.scene);

      var titleStyle = details.options.headerTitleStyle;
      var color = details.options.headerTintColor;

      var onLayoutIOS = _reactNative.Platform.OS === 'ios' ? function (e) {
        _this.setState({
          widths: babelHelpers.extends({}, _this.state.widths, babelHelpers.defineProperty({}, props.scene.key, e.nativeEvent.layout.width))
        });
      } : undefined;

      return _react2.default.createElement(
        _HeaderTitle2.default,
        {
          onLayout: onLayoutIOS,
          style: [color ? { color: color } : null, titleStyle],
          __source: {
            fileName: _jsxFileName,
            lineNumber: 105
          }
        },
        titleString
      );
    }, _this._renderLeftComponent = function (props) {
      var options = _this.props.getScreenDetails(props.scene).options;
      if (typeof options.headerLeft !== 'undefined') {
        return options.headerLeft;
      }
      if (props.scene.index === 0) {
        return null;
      }
      var backButtonTitle = _this._getBackButtonTitleString(props.scene);
      var truncatedBackButtonTitle = _this._getTruncatedBackButtonTitle(props.scene);
      var width = _this.state.widths[props.scene.key] ? (_this.props.layout.initWidth - _this.state.widths[props.scene.key]) / 2 : undefined;
      return _react2.default.createElement(_HeaderBackButton2.default, {
        onPress: function onPress() {
          _this.props.navigation.goBack(null);
        },
        pressColorAndroid: options.headerPressColorAndroid,
        tintColor: options.headerTintColor,
        title: backButtonTitle,
        truncatedTitle: truncatedBackButtonTitle,
        titleStyle: options.headerBackTitleStyle,
        width: width,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 130
        }
      });
    }, _this._renderRightComponent = function (props) {
      var details = _this.props.getScreenDetails(props.scene);
      var headerRight = details.options.headerRight;

      return headerRight || null;
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(Header, [{
    key: '_getHeaderTitleString',
    value: function _getHeaderTitleString(scene) {
      var sceneOptions = this.props.getScreenDetails(scene).options;
      if (typeof sceneOptions.headerTitle === 'string') {
        return sceneOptions.headerTitle;
      }
      return sceneOptions.title;
    }
  }, {
    key: '_getLastScene',
    value: function _getLastScene(scene) {
      return this.props.scenes.find(function (s) {
        return s.index === scene.index - 1;
      });
    }
  }, {
    key: '_getBackButtonTitleString',
    value: function _getBackButtonTitleString(scene) {
      var lastScene = this._getLastScene(scene);
      if (!lastScene) {
        return null;
      }
      var headerBackTitle = this.props.getScreenDetails(lastScene).options.headerBackTitle;

      if (headerBackTitle || headerBackTitle === null) {
        return headerBackTitle;
      }
      return this._getHeaderTitleString(lastScene);
    }
  }, {
    key: '_getTruncatedBackButtonTitle',
    value: function _getTruncatedBackButtonTitle(scene) {
      var lastScene = this._getLastScene(scene);
      if (!lastScene) {
        return null;
      }
      return this.props.getScreenDetails(lastScene).options.headerTruncatedBackTitle;
    }
  }, {
    key: '_renderLeft',
    value: function _renderLeft(props) {
      return this._renderSubView(props, 'left', this._renderLeftComponent, _HeaderStyleInterpolator2.default.forLeft);
    }
  }, {
    key: '_renderTitle',
    value: function _renderTitle(props, options) {
      var style = {};

      if (_reactNative.Platform.OS === 'android') {
        if (!options.hasLeftComponent) {
          style.left = 0;
        }
        if (!options.hasRightComponent) {
          style.right = 0;
        }
      }

      return this._renderSubView(babelHelpers.extends({}, props, { style: style }), 'title', this._renderTitleComponent, _HeaderStyleInterpolator2.default.forCenter);
    }
  }, {
    key: '_renderRight',
    value: function _renderRight(props) {
      return this._renderSubView(props, 'right', this._renderRightComponent, _HeaderStyleInterpolator2.default.forRight);
    }
  }, {
    key: '_renderSubView',
    value: function _renderSubView(props, name, renderer, styleInterpolator) {
      var scene = props.scene;
      var index = scene.index,
          isStale = scene.isStale,
          key = scene.key;


      var offset = this.props.navigation.state.index - index;

      if (Math.abs(offset) > 2) {
        return null;
      }

      var subView = renderer(props);

      if (subView == null) {
        return null;
      }

      var pointerEvents = offset !== 0 || isStale ? 'none' : 'box-none';

      return _react2.default.createElement(
        _reactNative.Animated.View,
        {
          pointerEvents: pointerEvents,
          key: name + '_' + key,
          style: [styles.item, styles[name], props.style, styleInterpolator(babelHelpers.extends({}, this.props, props))],
          __source: {
            fileName: _jsxFileName,
            lineNumber: 214
          }
        },
        subView
      );
    }
  }, {
    key: '_renderHeader',
    value: function _renderHeader(props) {
      var left = this._renderLeft(props);
      var right = this._renderRight(props);
      var title = this._renderTitle(props, {
        hasLeftComponent: !!left,
        hasRightComponent: !!right
      });

      return _react2.default.createElement(
        _reactNative.View,
        {
          style: [_reactNative.StyleSheet.absoluteFill, styles.header],
          key: 'scene_' + props.scene.key,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 242
          }
        },
        title,
        left,
        right
      );
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var appBar = void 0;

      if (this.props.mode === 'float') {
        var scenesProps = this.props.scenes.map(function (scene) {
          return {
            position: _this2.props.position,
            progress: _this2.props.progress,
            scene: scene
          };
        });
        appBar = scenesProps.map(this._renderHeader, this);
      } else {
        appBar = this._renderHeader({
          position: new _reactNative.Animated.Value(this.props.scene.index),
          progress: new _reactNative.Animated.Value(0),
          scene: this.props.scene
        });
      }

      var _props = this.props,
          scenes = _props.scenes,
          scene = _props.scene,
          position = _props.position,
          screenProps = _props.screenProps,
          progress = _props.progress,
          style = _props.style,
          rest = babelHelpers.objectWithoutProperties(_props, ['scenes', 'scene', 'position', 'screenProps', 'progress', 'style']);

      var _props$getScreenDetai = this.props.getScreenDetails(scene, screenProps),
          options = _props$getScreenDetai.options;

      var headerStyle = options.headerStyle;

      return _react2.default.createElement(
        _reactNative.Animated.View,
        babelHelpers.extends({}, rest, { style: [styles.container, headerStyle, style], __source: {
            fileName: _jsxFileName,
            lineNumber: 288
          }
        }),
        _react2.default.createElement(
          _reactNative.View,
          { style: styles.appBar, __source: {
              fileName: _jsxFileName,
              lineNumber: 289
            }
          },
          appBar
        )
      );
    }
  }]);
  return Header;
}(_react2.default.PureComponent);

Header.HEIGHT = APPBAR_HEIGHT + STATUSBAR_HEIGHT;


var styles = _reactNative.StyleSheet.create({
  container: {
    paddingTop: STATUSBAR_HEIGHT,
    backgroundColor: _reactNative.Platform.OS === 'ios' ? '#EFEFF2' : '#FFF',
    height: STATUSBAR_HEIGHT + APPBAR_HEIGHT,
    shadowColor: 'black',
    shadowOpacity: 0.1,
    shadowRadius: _reactNative.StyleSheet.hairlineWidth,
    shadowOffset: {
      height: _reactNative.StyleSheet.hairlineWidth
    },
    elevation: 4
  },
  appBar: {
    flex: 1
  },
  header: {
    flexDirection: 'row'
  },
  item: {
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: 'transparent'
  },
  title: {
    bottom: 0,
    left: TITLE_OFFSET,
    right: TITLE_OFFSET,
    top: 0,
    position: 'absolute',
    alignItems: _reactNative.Platform.OS === 'ios' ? 'center' : 'flex-start'
  },
  left: {
    left: 0,
    bottom: 0,
    top: 0,
    position: 'absolute'
  },
  right: {
    right: 0,
    bottom: 0,
    top: 0,
    position: 'absolute'
  }
});

exports.default = Header;
}, 1898, null, "react-navigation/src/views/Header.js");
__d(/* react-navigation/src/views/HeaderTitle.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-navigation/src/views/HeaderTitle.js';

var _react = require(604    ); // 604 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(334           ); // 334 = react-native

var HeaderTitle = function HeaderTitle(_ref) {
  var style = _ref.style,
      rest = babelHelpers.objectWithoutProperties(_ref, ['style']);
  return _react2.default.createElement(_reactNative.Text, babelHelpers.extends({
    numberOfLines: 1
  }, rest, {
    style: [styles.title, style],
    accessibilityTraits: 'header',
    __source: {
      fileName: _jsxFileName,
      lineNumber: 15
    }
  }));
};

var styles = _reactNative.StyleSheet.create({
  title: {
    fontSize: _reactNative.Platform.OS === 'ios' ? 17 : 18,
    fontWeight: _reactNative.Platform.OS === 'ios' ? '600' : '500',
    color: 'rgba(0, 0, 0, .9)',
    textAlign: _reactNative.Platform.OS === 'ios' ? 'center' : 'left',
    marginHorizontal: 16
  }
});

exports.default = HeaderTitle;
}, 1899, null, "react-navigation/src/views/HeaderTitle.js");
__d(/* react-navigation/src/views/HeaderBackButton.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-navigation/src/views/HeaderBackButton.js';

var _react = require(604    ); // 604 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(334           ); // 334 = react-native

var _TouchableItem = require(1901             ); // 1901 = ./TouchableItem

var _TouchableItem2 = babelHelpers.interopRequireDefault(_TouchableItem);

var HeaderBackButton = function (_React$PureComponent) {
  babelHelpers.inherits(HeaderBackButton, _React$PureComponent);

  function HeaderBackButton() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, HeaderBackButton);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = HeaderBackButton.__proto__ || Object.getPrototypeOf(HeaderBackButton)).call.apply(_ref, [this].concat(args))), _this), _this.state = {}, _this._onTextLayout = function (e) {
      if (_this.state.initialTextWidth) {
        return;
      }
      _this.setState({
        initialTextWidth: e.nativeEvent.layout.x + e.nativeEvent.layout.width
      });
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(HeaderBackButton, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          onPress = _props.onPress,
          pressColorAndroid = _props.pressColorAndroid,
          width = _props.width,
          title = _props.title,
          titleStyle = _props.titleStyle,
          tintColor = _props.tintColor,
          truncatedTitle = _props.truncatedTitle;


      var renderTruncated = this.state.initialTextWidth && width ? this.state.initialTextWidth > width : false;

      var backButtonTitle = renderTruncated ? truncatedTitle : title;

      var asset = require(1902                    ); // 1902 = ./assets/back-icon.png

      return _react2.default.createElement(
        _TouchableItem2.default,
        {
          accessibilityComponentType: 'button',
          accessibilityLabel: backButtonTitle,
          accessibilityTraits: 'button',
          testID: 'header-back',
          delayPressIn: 0,
          onPress: onPress,
          pressColor: pressColorAndroid,
          style: styles.container,
          borderless: true,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 78
          }
        },
        _react2.default.createElement(
          _reactNative.View,
          { style: styles.container, __source: {
              fileName: _jsxFileName,
              lineNumber: 89
            }
          },
          _react2.default.createElement(_reactNative.Image, {
            style: [styles.icon, title && styles.iconWithTitle, { tintColor: tintColor }],
            source: asset,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 90
            }
          }),
          _reactNative.Platform.OS === 'ios' && title && _react2.default.createElement(
            _reactNative.Text,
            {
              onLayout: this._onTextLayout,
              style: [styles.title, { color: tintColor }, titleStyle],
              numberOfLines: 1,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 96
              }
            },
            backButtonTitle
          )
        )
      );
    }
  }]);
  return HeaderBackButton;
}(_react2.default.PureComponent);

HeaderBackButton.defaultProps = {
  pressColorAndroid: 'rgba(0, 0, 0, .32)',
  tintColor: _reactNative.Platform.select({
    ios: '#037aff'
  }),
  truncatedTitle: 'Back'
};


var styles = _reactNative.StyleSheet.create({
  container: {
    alignItems: 'center',
    flexDirection: 'row',
    backgroundColor: 'transparent'
  },
  title: {
    fontSize: 17,
    paddingRight: 10
  },
  icon: _reactNative.Platform.OS === 'ios' ? {
    height: 20,
    width: 12,
    marginLeft: 10,
    marginRight: 22,
    marginVertical: 12,
    resizeMode: 'contain',
    transform: [{ scaleX: _reactNative.I18nManager.isRTL ? -1 : 1 }]
  } : {
    height: 24,
    width: 24,
    margin: 16,
    resizeMode: 'contain',
    transform: [{ scaleX: _reactNative.I18nManager.isRTL ? -1 : 1 }]
  },
  iconWithTitle: _reactNative.Platform.OS === 'ios' ? {
    marginRight: 5
  } : {}
});

exports.default = HeaderBackButton;
}, 1900, null, "react-navigation/src/views/HeaderBackButton.js");
__d(/* react-navigation/src/views/TouchableItem.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-navigation/src/views/TouchableItem.js';

var _react = require(604    ); // 604 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(334           ); // 334 = react-native

var ANDROID_VERSION_LOLLIPOP = 21;

var TouchableItem = function (_Component) {
  babelHelpers.inherits(TouchableItem, _Component);

  function TouchableItem() {
    babelHelpers.classCallCheck(this, TouchableItem);
    return babelHelpers.possibleConstructorReturn(this, (TouchableItem.__proto__ || Object.getPrototypeOf(TouchableItem)).apply(this, arguments));
  }

  babelHelpers.createClass(TouchableItem, [{
    key: 'render',
    value: function render() {
      if (_reactNative.Platform.OS === 'android' && _reactNative.Platform.Version >= ANDROID_VERSION_LOLLIPOP) {
        var _props = this.props,
            _style = _props.style,
            rest = babelHelpers.objectWithoutProperties(_props, ['style']);


        return _react2.default.createElement(
          _reactNative.TouchableNativeFeedback,
          babelHelpers.extends({}, rest, {
            style: null,
            background: _reactNative.TouchableNativeFeedback.Ripple(this.props.pressColor, this.props.borderless),
            __source: {
              fileName: _jsxFileName,
              lineNumber: 59
            }
          }),
          _react2.default.createElement(
            _reactNative.View,
            { style: this.props.style, __source: {
                fileName: _jsxFileName,
                lineNumber: 67
              }
            },
            _react.Children.only(this.props.children)
          )
        );
      }

      return _react2.default.createElement(
        _reactNative.TouchableOpacity,
        babelHelpers.extends({}, this.props, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 75
          }
        }),
        this.props.children
      );
    }
  }]);
  return TouchableItem;
}(_react.Component);

TouchableItem.defaultProps = {
  pressColor: 'rgba(0, 0, 0, .32)'
};
exports.default = TouchableItem;
}, 1901, null, "react-navigation/src/views/TouchableItem.js");
__d(/* react-navigation/src/views/assets/back-icon.png */function(global, require, module, exports) {module.exports = require(494                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/node_modules/react-navigation/src/views/assets","width":24,"height":24,"scales":[1,1.5,2,3,4],"hash":"a364dc7a784101f7c8f6791c7b4514ce","name":"back-icon","type":"png"}); // 494 = react-native/Libraries/Image/AssetRegistry
}, 1902, null, "react-navigation/src/views/assets/back-icon.png");
__d(/* react-navigation/src/views/HeaderStyleInterpolator.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _reactNative = require(334           ); // 334 = react-native

function forLeft(props) {
  var position = props.position,
      scene = props.scene;
  var index = scene.index;

  return {
    opacity: position.interpolate({
      inputRange: [index - 1, index - 0.5, index, index + 0.5, index + 1],
      outputRange: [0, 0, 1, 0, 0]
    })
  };
}

function forCenter(props) {
  var position = props.position,
      scene = props.scene;
  var index = scene.index;

  return {
    opacity: position.interpolate({
      inputRange: [index - 1, index, index + 1],
      outputRange: [0, 1, 0]
    }),
    transform: [{
      translateX: position.interpolate({
        inputRange: [index - 1, index + 1],
        outputRange: _reactNative.I18nManager.isRTL ? [-200, 200] : [200, -200]
      })
    }]
  };
}

function forRight(props) {
  var position = props.position,
      scene = props.scene;
  var index = scene.index;

  return {
    opacity: position.interpolate({
      inputRange: [index - 1, index, index + 1],
      outputRange: [0, 1, 0]
    })
  };
}

exports.default = {
  forLeft: forLeft,
  forCenter: forCenter,
  forRight: forRight
};
}, 1903, null, "react-navigation/src/views/HeaderStyleInterpolator.js");
__d(/* react-navigation/src/views/SceneView.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-navigation/src/views/SceneView.js';

var _react = require(604    ); // 604 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(1905        ); // 1905 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var SceneView = function (_PureComponent) {
  babelHelpers.inherits(SceneView, _PureComponent);

  function SceneView() {
    babelHelpers.classCallCheck(this, SceneView);
    return babelHelpers.possibleConstructorReturn(this, (SceneView.__proto__ || Object.getPrototypeOf(SceneView)).apply(this, arguments));
  }

  babelHelpers.createClass(SceneView, [{
    key: 'getChildContext',
    value: function getChildContext() {
      return {
        navigation: this.props.navigation
      };
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          screenProps = _props.screenProps,
          navigation = _props.navigation,
          Component = _props.component;


      return _react2.default.createElement(Component, { screenProps: screenProps, navigation: navigation, __source: {
          fileName: _jsxFileName,
          lineNumber: 35
        }
      });
    }
  }]);
  return SceneView;
}(_react.PureComponent);

SceneView.childContextTypes = {
  navigation: _propTypes2.default.object.isRequired
};
exports.default = SceneView;
}, 1904, null, "react-navigation/src/views/SceneView.js");
__d(/* prop-types/index.js */function(global, require, module, exports) {

if (process.env.NODE_ENV !== 'production') {
  var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && (typeof Symbol === 'function' ? Symbol.for : '@@for') && (typeof Symbol === 'function' ? Symbol.for : '@@for')('react.element') || 0xeac7;

  var isValidElement = function isValidElement(object) {
    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
  };

  var throwOnDirectAccess = true;
  module.exports = require(1906                       )(isValidElement, throwOnDirectAccess); // 1906 = ./factoryWithTypeCheckers
} else {
  module.exports = require(1909                        )(); // 1909 = ./factoryWithThrowingShims
}
}, 1905, null, "prop-types/index.js");
__d(/* prop-types/factoryWithTypeCheckers.js */function(global, require, module, exports) {

'use strict';

var emptyFunction = require(336                     ); // 336 = fbjs/lib/emptyFunction
var invariant = require(346                 ); // 346 = fbjs/lib/invariant
var warning = require(335               ); // 335 = fbjs/lib/warning
var assign = require(400            ); // 400 = object-assign

var ReactPropTypesSecret = require(1907                        ); // 1907 = ./lib/ReactPropTypesSecret
var checkPropTypes = require(1908              ); // 1908 = ./checkPropTypes

module.exports = function (isValidElement, throwOnDirectAccess) {
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && (typeof Symbol === 'function' ? Symbol.iterator : '@@iterator');
  var FAUX_ITERATOR_SYMBOL = '@@iterator';
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  var ANONYMOUS = '<<anonymous>>';

  var ReactPropTypes = {
    array: createPrimitiveTypeChecker('array'),
    bool: createPrimitiveTypeChecker('boolean'),
    func: createPrimitiveTypeChecker('function'),
    number: createPrimitiveTypeChecker('number'),
    object: createPrimitiveTypeChecker('object'),
    string: createPrimitiveTypeChecker('string'),
    symbol: createPrimitiveTypeChecker('symbol'),

    any: createAnyTypeChecker(),
    arrayOf: createArrayOfTypeChecker,
    element: createElementTypeChecker(),
    instanceOf: createInstanceTypeChecker,
    node: createNodeChecker(),
    objectOf: createObjectOfTypeChecker,
    oneOf: createEnumTypeChecker,
    oneOfType: createUnionTypeChecker,
    shape: createShapeTypeChecker,
    exact: createStrictShapeTypeChecker
  };

  function is(x, y) {
    if (x === y) {
      return x !== 0 || 1 / x === 1 / y;
    } else {
      return x !== x && y !== y;
    }
  }

  function PropTypeError(message) {
    this.message = message;
    this.stack = '';
  }

  PropTypeError.prototype = Error.prototype;

  function createChainableTypeChecker(validate) {
    if (process.env.NODE_ENV !== 'production') {
      var manualPropTypeCallCache = {};
      var manualPropTypeWarningCount = 0;
    }
    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
      componentName = componentName || ANONYMOUS;
      propFullName = propFullName || propName;

      if (secret !== ReactPropTypesSecret) {
        if (throwOnDirectAccess) {
          invariant(false, 'Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use `PropTypes.checkPropTypes()` to call them. ' + 'Read more at http://fb.me/use-check-prop-types');
        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {
          var cacheKey = componentName + ':' + propName;
          if (!manualPropTypeCallCache[cacheKey] && manualPropTypeWarningCount < 3) {
            warning(false, 'You are manually calling a React.PropTypes validation ' + 'function for the `%s` prop on `%s`. This is deprecated ' + 'and will throw in the standalone `prop-types` package. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.', propFullName, componentName);
            manualPropTypeCallCache[cacheKey] = true;
            manualPropTypeWarningCount++;
          }
        }
      }
      if (props[propName] == null) {
        if (isRequired) {
          if (props[propName] === null) {
            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
          }
          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
        }
        return null;
      } else {
        return validate(props, propName, componentName, location, propFullName);
      }
    }

    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);

    return chainedCheckType;
  }

  function createPrimitiveTypeChecker(expectedType) {
    function validate(props, propName, componentName, location, propFullName, secret) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== expectedType) {
        var preciseType = getPreciseType(propValue);

        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createAnyTypeChecker() {
    return createChainableTypeChecker(emptyFunction.thatReturnsNull);
  }

  function createArrayOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
      }
      var propValue = props[propName];
      if (!Array.isArray(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
      }
      for (var i = 0; i < propValue.length; i++) {
        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
        if (error instanceof Error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!isValidElement(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createInstanceTypeChecker(expectedClass) {
    function validate(props, propName, componentName, location, propFullName) {
      if (!(props[propName] instanceof expectedClass)) {
        var expectedClassName = expectedClass.name || ANONYMOUS;
        var actualClassName = getClassName(props[propName]);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createEnumTypeChecker(expectedValues) {
    if (!Array.isArray(expectedValues)) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;
      return emptyFunction.thatReturnsNull;
    }

    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      for (var i = 0; i < expectedValues.length; i++) {
        if (is(propValue, expectedValues[i])) {
          return null;
        }
      }

      var valuesString = JSON.stringify(expectedValues);
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createObjectOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
      }
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
      }
      for (var key in propValue) {
        if (propValue.hasOwnProperty(key)) {
          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
          if (error instanceof Error) {
            return error;
          }
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createUnionTypeChecker(arrayOfTypeCheckers) {
    if (!Array.isArray(arrayOfTypeCheckers)) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
      return emptyFunction.thatReturnsNull;
    }

    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (typeof checker !== 'function') {
        warning(false, 'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' + 'received %s at index %s.', getPostfixForTypeWarning(checker), i);
        return emptyFunction.thatReturnsNull;
      }
    }

    function validate(props, propName, componentName, location, propFullName) {
      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];
        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
          return null;
        }
      }

      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createNodeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!isNode(props[propName])) {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      for (var key in shapeTypes) {
        var checker = shapeTypes[key];
        if (!checker) {
          continue;
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createStrictShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }

      var allKeys = assign({}, props[propName], shapeTypes);
      for (var key in allKeys) {
        var checker = shapeTypes[key];
        if (!checker) {
          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' + '\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function isNode(propValue) {
    switch (typeof propValue) {
      case 'number':
      case 'string':
      case 'undefined':
        return true;
      case 'boolean':
        return !propValue;
      case 'object':
        if (Array.isArray(propValue)) {
          return propValue.every(isNode);
        }
        if (propValue === null || isValidElement(propValue)) {
          return true;
        }

        var iteratorFn = getIteratorFn(propValue);
        if (iteratorFn) {
          var iterator = iteratorFn.call(propValue);
          var step;
          if (iteratorFn !== propValue.entries) {
            while (!(step = iterator.next()).done) {
              if (!isNode(step.value)) {
                return false;
              }
            }
          } else {
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                if (!isNode(entry[1])) {
                  return false;
                }
              }
            }
          }
        } else {
          return false;
        }

        return true;
      default:
        return false;
    }
  }

  function isSymbol(propType, propValue) {
    if (propType === 'symbol') {
      return true;
    }

    if (propValue['@@toStringTag'] === 'Symbol') {
      return true;
    }

    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
      return true;
    }

    return false;
  }

  function getPropType(propValue) {
    var propType = typeof propValue;
    if (Array.isArray(propValue)) {
      return 'array';
    }
    if (propValue instanceof RegExp) {
      return 'object';
    }
    if (isSymbol(propType, propValue)) {
      return 'symbol';
    }
    return propType;
  }

  function getPreciseType(propValue) {
    if (typeof propValue === 'undefined' || propValue === null) {
      return '' + propValue;
    }
    var propType = getPropType(propValue);
    if (propType === 'object') {
      if (propValue instanceof Date) {
        return 'date';
      } else if (propValue instanceof RegExp) {
        return 'regexp';
      }
    }
    return propType;
  }

  function getPostfixForTypeWarning(value) {
    var type = getPreciseType(value);
    switch (type) {
      case 'array':
      case 'object':
        return 'an ' + type;
      case 'boolean':
      case 'date':
      case 'regexp':
        return 'a ' + type;
      default:
        return type;
    }
  }

  function getClassName(propValue) {
    if (!propValue.constructor || !propValue.constructor.name) {
      return ANONYMOUS;
    }
    return propValue.constructor.name;
  }

  ReactPropTypes.checkPropTypes = checkPropTypes;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};
}, 1906, null, "prop-types/factoryWithTypeCheckers.js");
__d(/* prop-types/lib/ReactPropTypesSecret.js */function(global, require, module, exports) {

'use strict';

var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;
}, 1907, null, "prop-types/lib/ReactPropTypesSecret.js");
__d(/* prop-types/checkPropTypes.js */function(global, require, module, exports) {

'use strict';

if (process.env.NODE_ENV !== 'production') {
  var invariant = require(346                 ); // 346 = fbjs/lib/invariant
  var warning = require(335               ); // 335 = fbjs/lib/warning
  var ReactPropTypesSecret = require(1907                        ); // 1907 = ./lib/ReactPropTypesSecret
  var loggedTypeFailures = {};
}

function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
  if (process.env.NODE_ENV !== 'production') {
    for (var typeSpecName in typeSpecs) {
      if (typeSpecs.hasOwnProperty(typeSpecName)) {
        var error;

        try {
          invariant(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'the `prop-types` package, but received `%s`.', componentName || 'React class', location, typeSpecName, typeof typeSpecs[typeSpecName]);
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
          error = ex;
        }
        warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error);
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          loggedTypeFailures[error.message] = true;

          var stack = getStack ? getStack() : '';

          warning(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');
        }
      }
    }
  }
}

module.exports = checkPropTypes;
}, 1908, null, "prop-types/checkPropTypes.js");
__d(/* prop-types/factoryWithThrowingShims.js */function(global, require, module, exports) {

'use strict';

var emptyFunction = require(336                     ); // 336 = fbjs/lib/emptyFunction
var invariant = require(346                 ); // 346 = fbjs/lib/invariant
var ReactPropTypesSecret = require(1907                        ); // 1907 = ./lib/ReactPropTypesSecret

module.exports = function () {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret) {
      return;
    }
    invariant(false, 'Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use PropTypes.checkPropTypes() to call them. ' + 'Read more at http://fb.me/use-check-prop-types');
  };
  shim.isRequired = shim;
  function getShim() {
    return shim;
  };

  var ReactPropTypes = {
    array: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,

    any: shim,
    arrayOf: getShim,
    element: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim,
    exact: getShim
  };

  ReactPropTypes.checkPropTypes = emptyFunction;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};
}, 1909, null, "prop-types/factoryWithThrowingShims.js");
__d(/* react-navigation/src/views/TransitionConfigs.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _reactNative = require(334           ); // 334 = react-native

var _CardStackStyleInterpolator = require(1911                          ); // 1911 = ./CardStackStyleInterpolator

var _CardStackStyleInterpolator2 = babelHelpers.interopRequireDefault(_CardStackStyleInterpolator);

var DefaultTransitionSpec = {
  duration: 250,
  easing: _reactNative.Easing.inOut(_reactNative.Easing.ease),
  timing: _reactNative.Animated.timing
};

var IOSTransitionSpec = {
  duration: 500,
  easing: _reactNative.Easing.bezier(0.2833, 0.99, 0.31833, 0.99),
  timing: _reactNative.Animated.timing
};

var SlideFromRightIOS = {
  transitionSpec: IOSTransitionSpec,
  screenInterpolator: _CardStackStyleInterpolator2.default.forHorizontal
};

var ModalSlideFromBottomIOS = {
  transitionSpec: IOSTransitionSpec,
  screenInterpolator: _CardStackStyleInterpolator2.default.forVertical
};

var FadeInFromBottomAndroid = {
  transitionSpec: {
    duration: 350,
    easing: _reactNative.Easing.out(_reactNative.Easing.poly(5)),
    timing: _reactNative.Animated.timing
  },
  screenInterpolator: _CardStackStyleInterpolator2.default.forFadeFromBottomAndroid
};

var FadeOutToBottomAndroid = {
  transitionSpec: {
    duration: 230,
    easing: _reactNative.Easing.in(_reactNative.Easing.poly(4)),
    timing: _reactNative.Animated.timing
  },
  screenInterpolator: _CardStackStyleInterpolator2.default.forFadeFromBottomAndroid
};

function defaultTransitionConfig(transitionProps, prevTransitionProps, isModal) {
  if (_reactNative.Platform.OS === 'android') {
    if (prevTransitionProps && transitionProps.index < prevTransitionProps.index) {
      return FadeOutToBottomAndroid;
    }
    return FadeInFromBottomAndroid;
  }

  if (isModal) {
    return ModalSlideFromBottomIOS;
  }
  return SlideFromRightIOS;
}

function getTransitionConfig(transitionConfigurer, transitionProps, prevTransitionProps, isModal) {
  var defaultConfig = defaultTransitionConfig(transitionProps, prevTransitionProps, isModal);
  if (transitionConfigurer) {
    return babelHelpers.extends({}, defaultConfig, transitionConfigurer());
  }
  return defaultConfig;
}

exports.default = {
  DefaultTransitionSpec: DefaultTransitionSpec,
  defaultTransitionConfig: defaultTransitionConfig,
  getTransitionConfig: getTransitionConfig
};
}, 1910, null, "react-navigation/src/views/TransitionConfigs.js");
__d(/* react-navigation/src/views/CardStackStyleInterpolator.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _reactNative = require(334           ); // 334 = react-native

function forInitial(props) {
  var navigation = props.navigation,
      scene = props.scene;


  var focused = navigation.state.index === scene.index;
  var opacity = focused ? 1 : 0;

  var translate = focused ? 0 : 1000000;
  return {
    opacity: opacity,
    transform: [{ translateX: translate }, { translateY: translate }]
  };
}

function forHorizontal(props) {
  var layout = props.layout,
      position = props.position,
      scene = props.scene;


  if (!layout.isMeasured) {
    return forInitial(props);
  }

  var index = scene.index;
  var inputRange = [index - 1, index, index + 1];

  var width = layout.initWidth;
  var outputRange = _reactNative.I18nManager.isRTL ? [-width, 0, 10] : [width, 0, -10];

  var opacity = position.interpolate({
    inputRange: [index - 1, index - 0.99, index, index + 0.99, index + 1],
    outputRange: [0, 1, 1, 0.3, 0]
  });

  var translateY = 0;
  var translateX = position.interpolate({
    inputRange: inputRange,
    outputRange: outputRange
  });

  return {
    opacity: opacity,
    transform: [{ translateX: translateX }, { translateY: translateY }]
  };
}

function forVertical(props) {
  var layout = props.layout,
      position = props.position,
      scene = props.scene;


  if (!layout.isMeasured) {
    return forInitial(props);
  }

  var index = scene.index;
  var height = layout.initHeight;

  var opacity = position.interpolate({
    inputRange: [index - 1, index - 0.99, index, index + 0.99, index + 1],
    outputRange: [0, 1, 1, 0.3, 0]
  });

  var translateX = 0;
  var translateY = position.interpolate({
    inputRange: [index - 1, index, index + 1],
    outputRange: [height, 0, 0]
  });

  return {
    opacity: opacity,
    transform: [{ translateX: translateX }, { translateY: translateY }]
  };
}

function forFadeFromBottomAndroid(props) {
  var layout = props.layout,
      position = props.position,
      scene = props.scene;


  if (!layout.isMeasured) {
    return forInitial(props);
  }

  var index = scene.index;
  var inputRange = [index - 1, index, index + 0.99, index + 1];

  var opacity = position.interpolate({
    inputRange: inputRange,
    outputRange: [0, 1, 1, 0]
  });

  var translateX = 0;
  var translateY = position.interpolate({
    inputRange: inputRange,
    outputRange: [50, 0, 0, 0]
  });

  return {
    opacity: opacity,
    transform: [{ translateX: translateX }, { translateY: translateY }]
  };
}

function canUseNativeDriver() {
  return true;
}

exports.default = {
  forHorizontal: forHorizontal,
  forVertical: forVertical,
  forFadeFromBottomAndroid: forFadeFromBottomAndroid,
  canUseNativeDriver: canUseNativeDriver
};
}, 1911, null, "react-navigation/src/views/CardStackStyleInterpolator.js");
__d(/* react-navigation/src/views/Transitioner.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-navigation/src/views/Transitioner.js';

var _react = require(604    ); // 604 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(334           ); // 334 = react-native

var _invariant = require(346                 ); // 346 = fbjs/lib/invariant

var _invariant2 = babelHelpers.interopRequireDefault(_invariant);

var _ScenesReducer = require(1913             ); // 1913 = ./ScenesReducer

var _ScenesReducer2 = babelHelpers.interopRequireDefault(_ScenesReducer);

var _TransitionConfigs = require(1910                 ); // 1910 = ./TransitionConfigs

var _TransitionConfigs2 = babelHelpers.interopRequireDefault(_TransitionConfigs);

var DefaultTransitionSpec = _TransitionConfigs2.default.DefaultTransitionSpec;

var Transitioner = function (_React$Component) {
  babelHelpers.inherits(Transitioner, _React$Component);

  function Transitioner(props, context) {
    babelHelpers.classCallCheck(this, Transitioner);

    var _this = babelHelpers.possibleConstructorReturn(this, (Transitioner.__proto__ || Object.getPrototypeOf(Transitioner)).call(this, props, context));

    var layout = {
      height: new _reactNative.Animated.Value(0),
      initHeight: 0,
      initWidth: 0,
      isMeasured: false,
      width: new _reactNative.Animated.Value(0)
    };

    _this.state = {
      layout: layout,
      position: new _reactNative.Animated.Value(_this.props.navigation.state.index),
      progress: new _reactNative.Animated.Value(1),
      scenes: (0, _ScenesReducer2.default)([], _this.props.navigation.state)
    };

    _this._prevTransitionProps = null;
    _this._transitionProps = buildTransitionProps(props, _this.state);
    _this._isMounted = false;
    _this._isTransitionRunning = false;
    _this._queuedTransition = null;
    return _this;
  }

  babelHelpers.createClass(Transitioner, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      this._onLayout = this._onLayout.bind(this);
      this._onTransitionEnd = this._onTransitionEnd.bind(this);
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      this._isMounted = true;
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this._isMounted = false;
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var nextScenes = (0, _ScenesReducer2.default)(this.state.scenes, nextProps.navigation.state, this.props.navigation.state);

      if (nextScenes === this.state.scenes) {
        return;
      }

      var indexHasChanged = nextProps.navigation.state.index !== this.props.navigation.state.index;
      if (this._isTransitionRunning) {
        this._queuedTransition = { nextProps: nextProps, nextScenes: nextScenes, indexHasChanged: indexHasChanged };
        return;
      }

      this._startTransition(nextProps, nextScenes, indexHasChanged);
    }
  }, {
    key: '_startTransition',
    value: function _startTransition(nextProps, nextScenes, indexHasChanged) {
      var _this2 = this;

      var nextState = babelHelpers.extends({}, this.state, {
        scenes: nextScenes
      });

      var position = nextState.position,
          progress = nextState.progress;


      progress.setValue(0);

      this._prevTransitionProps = this._transitionProps;
      this._transitionProps = buildTransitionProps(nextProps, nextState);

      var transitionUserSpec = nextProps.configureTransition ? nextProps.configureTransition(this._transitionProps, this._prevTransitionProps) : null;

      var transitionSpec = babelHelpers.extends({}, DefaultTransitionSpec, transitionUserSpec);

      var timing = transitionSpec.timing;

      delete transitionSpec.timing;

      var toValue = nextProps.navigation.state.index;
      var positionHasChanged = position.__getValue() !== toValue;

      var animations = indexHasChanged && positionHasChanged ? [timing(progress, babelHelpers.extends({}, transitionSpec, {
        toValue: 1
      })), timing(position, babelHelpers.extends({}, transitionSpec, {
        toValue: nextProps.navigation.state.index
      }))] : [];

      this._isTransitionRunning = true;
      this.setState(nextState, function () {
        nextProps.onTransitionStart && nextProps.onTransitionStart(_this2._transitionProps, _this2._prevTransitionProps);
        _reactNative.Animated.parallel(animations).start(_this2._onTransitionEnd);
      });
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        _reactNative.View,
        { onLayout: this._onLayout, style: [styles.main, this.props.style], __source: {
            fileName: _jsxFileName,
            lineNumber: 187
          }
        },
        this.props.render(this._transitionProps, this._prevTransitionProps)
      );
    }
  }, {
    key: '_onLayout',
    value: function _onLayout(event) {
      var _event$nativeEvent$la = event.nativeEvent.layout,
          height = _event$nativeEvent$la.height,
          width = _event$nativeEvent$la.width;

      if (this.state.layout.initWidth === width && this.state.layout.initHeight === height) {
        return;
      }
      var layout = babelHelpers.extends({}, this.state.layout, {
        initHeight: height,
        initWidth: width,
        isMeasured: true
      });

      layout.height.setValue(height);
      layout.width.setValue(width);

      var nextState = babelHelpers.extends({}, this.state, {
        layout: layout
      });

      this._transitionProps = buildTransitionProps(this.props, nextState);
      this.setState(nextState);
    }
  }, {
    key: '_onTransitionEnd',
    value: function _onTransitionEnd() {
      var _this3 = this;

      if (!this._isMounted) {
        return;
      }
      var prevTransitionProps = this._prevTransitionProps;
      this._prevTransitionProps = null;

      var nextState = babelHelpers.extends({}, this.state, {
        scenes: this.state.scenes.filter(isSceneNotStale)
      });

      this._transitionProps = buildTransitionProps(this.props, nextState);

      this.setState(nextState, function () {
        _this3.props.onTransitionEnd && _this3.props.onTransitionEnd(_this3._transitionProps, prevTransitionProps);
        if (_this3._queuedTransition) {
          _this3._startTransition(_this3._queuedTransition.nextProps, _this3._queuedTransition.nextScenes, _this3._queuedTransition.indexHasChanged);
          _this3._queuedTransition = null;
        } else {
          _this3._isTransitionRunning = false;
        }
      });
    }
  }]);
  return Transitioner;
}(_react2.default.Component);

function buildTransitionProps(props, state) {
  var navigation = props.navigation;
  var layout = state.layout,
      position = state.position,
      progress = state.progress,
      scenes = state.scenes;


  var scene = scenes.find(isSceneActive);

  (0, _invariant2.default)(scene, 'Could not find active scene');

  return {
    layout: layout,
    navigation: navigation,
    position: position,
    progress: progress,
    scenes: scenes,
    scene: scene,
    index: scene.index
  };
}

function isSceneNotStale(scene) {
  return !scene.isStale;
}

function isSceneActive(scene) {
  return scene.isActive;
}

var styles = _reactNative.StyleSheet.create({
  main: {
    flex: 1
  }
});

exports.default = Transitioner;
}, 1912, null, "react-navigation/src/views/Transitioner.js");
__d(/* react-navigation/src/views/ScenesReducer.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = ScenesReducer;

var _invariant = require(346                 ); // 346 = fbjs/lib/invariant

var _invariant2 = babelHelpers.interopRequireDefault(_invariant);

var _shallowEqual = require(482                    ); // 482 = fbjs/lib/shallowEqual

var _shallowEqual2 = babelHelpers.interopRequireDefault(_shallowEqual);

var SCENE_KEY_PREFIX = 'scene_';

function compareKey(one, two) {
  var delta = one.length - two.length;
  if (delta > 0) {
    return 1;
  }
  if (delta < 0) {
    return -1;
  }
  return one > two ? 1 : -1;
}

function compareScenes(one, two) {
  if (one.index > two.index) {
    return 1;
  }
  if (one.index < two.index) {
    return -1;
  }

  return compareKey(one.key, two.key);
}

function areScenesShallowEqual(one, two) {
  return one.key === two.key && one.index === two.index && one.isStale === two.isStale && one.isActive === two.isActive && areRoutesShallowEqual(one.route, two.route);
}

function areRoutesShallowEqual(one, two) {
  if (!one || !two) {
    return one === two;
  }

  if (one.key !== two.key) {
    return false;
  }

  return (0, _shallowEqual2.default)(one, two);
}

function ScenesReducer(scenes, nextState, prevState) {
  if (prevState === nextState) {
    return scenes;
  }

  var prevScenes = new Map();
  var freshScenes = new Map();
  var staleScenes = new Map();

  scenes.forEach(function (scene) {
    var key = scene.key;

    if (scene.isStale) {
      staleScenes.set(key, scene);
    }
    prevScenes.set(key, scene);
  });

  var nextKeys = new Set();
  nextState.routes.forEach(function (route, index) {
    var key = SCENE_KEY_PREFIX + route.key;
    var scene = {
      index: index,
      isActive: false,
      isStale: false,
      key: key,
      route: route
    };
    (0, _invariant2.default)(!nextKeys.has(key), 'navigation.state.routes[' + index + '].key "' + key + '" conflicts with ' + 'another route!');
    nextKeys.add(key);

    if (staleScenes.has(key)) {
      staleScenes.delete(key);
    }
    freshScenes.set(key, scene);
  });

  if (prevState) {
    prevState.routes.forEach(function (route, index) {
      var key = SCENE_KEY_PREFIX + route.key;
      if (freshScenes.has(key)) {
        return;
      }
      staleScenes.set(key, {
        index: index,
        isActive: false,
        isStale: true,
        key: key,
        route: route
      });
    });
  }

  var nextScenes = [];

  var mergeScene = function mergeScene(nextScene) {
    var key = nextScene.key;

    var prevScene = prevScenes.has(key) ? prevScenes.get(key) : null;
    if (prevScene && areScenesShallowEqual(prevScene, nextScene)) {
      nextScenes.push(prevScene);
    } else {
      nextScenes.push(nextScene);
    }
  };

  staleScenes.forEach(mergeScene);
  freshScenes.forEach(mergeScene);

  nextScenes.sort(compareScenes);

  var activeScenesCount = 0;
  nextScenes.forEach(function (scene, ii) {
    var isActive = !scene.isStale && scene.index === nextState.index;
    if (isActive !== scene.isActive) {
      nextScenes[ii] = babelHelpers.extends({}, scene, {
        isActive: isActive
      });
    }
    if (isActive) {
      activeScenesCount++;
    }
  });

  (0, _invariant2.default)(activeScenesCount === 1, 'there should always be only one scene active, not %s.', activeScenesCount);

  if (nextScenes.length !== scenes.length) {
    return nextScenes;
  }

  if (nextScenes.some(function (scene, index) {
    return !areScenesShallowEqual(scenes[index], scene);
  })) {
    return nextScenes;
  }

  return scenes;
}
}, 1913, null, "react-navigation/src/views/ScenesReducer.js");
__d(/* react-navigation/src/routers/StackRouter.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _pathToRegexp = require(1915            ); // 1915 = path-to-regexp

var _pathToRegexp2 = babelHelpers.interopRequireDefault(_pathToRegexp);

var _NavigationActions = require(1887                  ); // 1887 = ../NavigationActions

var _NavigationActions2 = babelHelpers.interopRequireDefault(_NavigationActions);

var _createConfigGetter = require(1917                  ); // 1917 = ./createConfigGetter

var _createConfigGetter2 = babelHelpers.interopRequireDefault(_createConfigGetter);

var _getScreenForRouteName = require(1918                     ); // 1918 = ./getScreenForRouteName

var _getScreenForRouteName2 = babelHelpers.interopRequireDefault(_getScreenForRouteName);

var _StateUtils = require(1889           ); // 1889 = ../StateUtils

var _StateUtils2 = babelHelpers.interopRequireDefault(_StateUtils);

var _validateRouteConfigMap = require(1920                      ); // 1920 = ./validateRouteConfigMap

var _validateRouteConfigMap2 = babelHelpers.interopRequireDefault(_validateRouteConfigMap);

var _getScreenConfigDeprecated = require(1921                         ); // 1921 = ./getScreenConfigDeprecated

var _getScreenConfigDeprecated2 = babelHelpers.interopRequireDefault(_getScreenConfigDeprecated);

var uniqueBaseId = 'id-' + Date.now();
var uuidCount = 0;
function _getUuid() {
  return uniqueBaseId + '-' + uuidCount++;
}

exports.default = function (routeConfigs) {
  var stackConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  (0, _validateRouteConfigMap2.default)(routeConfigs);

  var childRouters = {};
  var routeNames = Object.keys(routeConfigs);

  routeNames.forEach(function (routeName) {
    var screen = (0, _getScreenForRouteName2.default)(routeConfigs, routeName);
    if (screen && screen.router) {
      childRouters[routeName] = screen.router;
    } else {
      childRouters[routeName] = null;
    }
  });

  var initialRouteParams = stackConfig.initialRouteParams;


  var initialRouteName = stackConfig.initialRouteName || routeNames[0];

  var initialChildRouter = childRouters[initialRouteName];
  var paths = stackConfig.paths || {};

  routeNames.forEach(function (routeName) {
    var pathPattern = paths[routeName] || routeConfigs[routeName].path;
    var matchExact = !!pathPattern && !childRouters[routeName];
    if (typeof pathPattern !== 'string') {
      pathPattern = routeName;
    }
    var keys = [];
    var re = (0, _pathToRegexp2.default)(pathPattern, keys);
    if (!matchExact) {
      var wildcardRe = (0, _pathToRegexp2.default)(pathPattern + '/*', keys);
      re = new RegExp('(?:' + re.source + ')|(?:' + wildcardRe.source + ')');
    }

    paths[routeName] = { re: re, keys: keys, toPath: _pathToRegexp2.default.compile(pathPattern) };
  });

  return {
    getComponentForState: function getComponentForState(state) {
      var activeChildRoute = state.routes[state.index];
      var routeName = activeChildRoute.routeName;

      if (childRouters[routeName]) {
        return childRouters[routeName].getComponentForState(activeChildRoute);
      }
      return (0, _getScreenForRouteName2.default)(routeConfigs, routeName);
    },
    getComponentForRouteName: function getComponentForRouteName(routeName) {
      return (0, _getScreenForRouteName2.default)(routeConfigs, routeName);
    },
    getStateForAction: function getStateForAction(passedAction, state) {
      var action = _NavigationActions2.default.mapDeprecatedActionAndWarn(passedAction);

      if (!state) {
        var route = {};
        if (action.type === _NavigationActions2.default.NAVIGATE && childRouters[action.routeName] !== undefined) {
          return {
            index: 0,
            routes: [babelHelpers.extends({}, action, {
              type: undefined,
              key: 'Init-' + _getUuid()
            })]
          };
        }
        if (initialChildRouter) {
          route = initialChildRouter.getStateForAction(_NavigationActions2.default.navigate({
            routeName: initialRouteName,
            params: initialRouteParams
          }));
        }
        var params = (route.params || action.params || initialRouteParams) && babelHelpers.extends({}, route.params || {}, action.params || {}, initialRouteParams || {});
        route = babelHelpers.extends({}, route, {
          routeName: initialRouteName,
          key: 'Init-' + _getUuid()
        }, params ? { params: params } : {});

        state = {
          index: 0,
          routes: [route]
        };
      }

      if (action.type !== _NavigationActions2.default.RESET || action.key !== null) {
        var keyIndex = action.key ? _StateUtils2.default.indexOf(state, action.key) : -1;
        var childIndex = keyIndex >= 0 ? keyIndex : state.index;
        var childRoute = state.routes[childIndex];
        var childRouter = childRouters[childRoute.routeName];
        if (childRouter) {
          var _route = childRouter.getStateForAction(action, childRoute);
          if (_route === null) {
            return state;
          }
          if (_route && _route !== childRoute) {
            return _StateUtils2.default.replaceAt(state, childRoute.key, _route);
          }
        }
      }

      if (action.type === _NavigationActions2.default.NAVIGATE && childRouters[action.routeName] !== undefined) {
        var _childRouter = childRouters[action.routeName];
        var _route2 = void 0;
        if (_childRouter) {
          var childAction = action.action || _NavigationActions2.default.init({ params: action.params });
          _route2 = babelHelpers.extends({
            params: action.params
          }, _childRouter.getStateForAction(childAction), {
            key: _getUuid(),
            routeName: action.routeName
          });
        } else {
          _route2 = {
            params: action.params,
            key: _getUuid(),
            routeName: action.routeName
          };
        }
        return _StateUtils2.default.push(state, _route2);
      }

      if (action.type === _NavigationActions2.default.NAVIGATE) {
        var childRouterNames = Object.keys(childRouters);
        for (var i = 0; i < childRouterNames.length; i++) {
          var childRouterName = childRouterNames[i];
          var _childRouter2 = childRouters[childRouterName];
          if (_childRouter2) {
            var initChildRoute = _childRouter2.getStateForAction(_NavigationActions2.default.init());

            var navigatedChildRoute = _childRouter2.getStateForAction(action, initChildRoute);
            var routeToPush = null;
            if (navigatedChildRoute === null) {
              routeToPush = initChildRoute;
            } else if (navigatedChildRoute !== initChildRoute) {
              routeToPush = navigatedChildRoute;
            }
            if (routeToPush) {
              return _StateUtils2.default.push(state, babelHelpers.extends({}, routeToPush, {
                key: _getUuid(),
                routeName: childRouterName
              }));
            }
          }
        }
      }

      if (action.type === _NavigationActions2.default.SET_PARAMS) {
        var lastRoute = state.routes.find(function (route) {
          return route.key === action.key;
        });
        if (lastRoute) {
          var _params = babelHelpers.extends({}, lastRoute.params, action.params);
          var routes = [].concat(babelHelpers.toConsumableArray(state.routes));
          routes[state.routes.indexOf(lastRoute)] = babelHelpers.extends({}, lastRoute, {
            params: _params
          });
          return babelHelpers.extends({}, state, {
            routes: routes
          });
        }
      }

      if (action.type === _NavigationActions2.default.RESET) {
        var resetAction = action;

        return babelHelpers.extends({}, state, {
          routes: resetAction.actions.map(function (childAction) {
            var router = childRouters[childAction.routeName];
            if (router) {
              return babelHelpers.extends({}, childAction, router.getStateForAction(childAction), {
                routeName: childAction.routeName,
                key: _getUuid()
              });
            }
            var route = babelHelpers.extends({}, childAction, {
              key: _getUuid()
            });
            delete route.type;
            return route;
          }),
          index: action.index
        });
      }

      if (action.type === _NavigationActions2.default.BACK) {
        var backRouteIndex = null;
        if (action.key) {
          var backRoute = state.routes.find(function (route) {
            return route.key === action.key;
          });

          backRouteIndex = state.routes.indexOf(backRoute);
        }
        if (backRouteIndex == null) {
          return _StateUtils2.default.pop(state);
        }
        if (backRouteIndex > 0) {
          return babelHelpers.extends({}, state, {
            routes: state.routes.slice(0, backRouteIndex),
            index: backRouteIndex - 1
          });
        }
      }
      return state;
    },
    getPathAndParamsForState: function getPathAndParamsForState(state) {
      var route = state.routes[state.index];
      var routeName = route.routeName;
      var screen = (0, _getScreenForRouteName2.default)(routeConfigs, routeName);

      var subPath = paths[routeName].toPath(route.params);
      var path = subPath;
      var params = route.params;
      if (screen && screen.router) {
        var child = screen.router.getPathAndParamsForState(route);
        path = subPath ? subPath + '/' + child.path : child.path;
        params = child.params ? babelHelpers.extends({}, params, child.params) : params;
      }
      return {
        path: path,
        params: params
      };
    },
    getActionForPathAndParams: function getActionForPathAndParams(pathToResolve) {
      if (!pathToResolve) {
        return _NavigationActions2.default.navigate({
          routeName: initialRouteName
        });
      }

      var _pathToResolve$split = pathToResolve.split('?'),
          _pathToResolve$split2 = babelHelpers.slicedToArray(_pathToResolve$split, 2),
          pathNameToResolve = _pathToResolve$split2[0],
          queryString = _pathToResolve$split2[1];

      var matchedRouteName = void 0;
      var pathMatch = void 0;
      var pathMatchKeys = void 0;

      for (var _iterator = Object.entries(paths), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === 'function' ? Symbol.iterator : '@@iterator']();;) {
        var _ref3;

        if (_isArray) {
          if (_i >= _iterator.length) break;
          _ref3 = _iterator[_i++];
        } else {
          _i = _iterator.next();
          if (_i.done) break;
          _ref3 = _i.value;
        }

        var _ref = _ref3;

        var _ref2 = babelHelpers.slicedToArray(_ref, 2);

        var routeName = _ref2[0];
        var path = _ref2[1];
        var re = path.re,
            keys = path.keys;

        pathMatch = re.exec(pathNameToResolve);
        if (pathMatch && pathMatch.length) {
          pathMatchKeys = keys;
          matchedRouteName = routeName;
          break;
        }
      }

      if (!matchedRouteName) {
        return null;
      }

      var nestedAction = void 0;
      if (childRouters[matchedRouteName]) {
        nestedAction = childRouters[matchedRouteName].getActionForPathAndParams(pathMatch.slice(pathMatchKeys.length).join('/'));
      }

      var queryParams = (queryString || '').split('&').reduce(function (result, item) {
        if (item !== '') {
          var nextResult = result || {};

          var _item$split = item.split('='),
              _item$split2 = babelHelpers.slicedToArray(_item$split, 2),
              key = _item$split2[0],
              value = _item$split2[1];

          nextResult[key] = value;
          return nextResult;
        }
        return result;
      }, null);

      var params = pathMatch.slice(1).reduce(function (result, matchResult, i) {
        var key = pathMatchKeys[i];
        if (key.asterisk || !key) {
          return result;
        }
        var nextResult = result || {};
        var paramName = key.name;
        nextResult[paramName] = matchResult;
        return nextResult;
      }, queryParams);

      return _NavigationActions2.default.navigate(babelHelpers.extends({
        routeName: matchedRouteName
      }, params ? { params: params } : {}, nestedAction ? { action: nestedAction } : {}));
    },


    getScreenOptions: (0, _createConfigGetter2.default)(routeConfigs, stackConfig.navigationOptions),

    getScreenConfig: _getScreenConfigDeprecated2.default
  };
};
}, 1914, null, "react-navigation/src/routers/StackRouter.js");
__d(/* path-to-regexp/index.js */function(global, require, module, exports) {var isarray = require(1916     ); // 1916 = isarray

module.exports = pathToRegexp;
module.exports.parse = parse;
module.exports.compile = compile;
module.exports.tokensToFunction = tokensToFunction;
module.exports.tokensToRegExp = tokensToRegExp;

var PATH_REGEXP = new RegExp(['(\\\\.)', '([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))'].join('|'), 'g');

function parse(str, options) {
  var tokens = [];
  var key = 0;
  var index = 0;
  var path = '';
  var defaultDelimiter = options && options.delimiter || '/';
  var res;

  while ((res = PATH_REGEXP.exec(str)) != null) {
    var m = res[0];
    var escaped = res[1];
    var offset = res.index;
    path += str.slice(index, offset);
    index = offset + m.length;

    if (escaped) {
      path += escaped[1];
      continue;
    }

    var next = str[index];
    var prefix = res[2];
    var name = res[3];
    var capture = res[4];
    var group = res[5];
    var modifier = res[6];
    var asterisk = res[7];

    if (path) {
      tokens.push(path);
      path = '';
    }

    var partial = prefix != null && next != null && next !== prefix;
    var repeat = modifier === '+' || modifier === '*';
    var optional = modifier === '?' || modifier === '*';
    var delimiter = res[2] || defaultDelimiter;
    var pattern = capture || group;

    tokens.push({
      name: name || key++,
      prefix: prefix || '',
      delimiter: delimiter,
      optional: optional,
      repeat: repeat,
      partial: partial,
      asterisk: !!asterisk,
      pattern: pattern ? escapeGroup(pattern) : asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?'
    });
  }

  if (index < str.length) {
    path += str.substr(index);
  }

  if (path) {
    tokens.push(path);
  }

  return tokens;
}

function compile(str, options) {
  return tokensToFunction(parse(str, options));
}

function encodeURIComponentPretty(str) {
  return encodeURI(str).replace(/[\/?#]/g, function (c) {
    return '%' + c.charCodeAt(0).toString(16).toUpperCase();
  });
}

function encodeAsterisk(str) {
  return encodeURI(str).replace(/[?#]/g, function (c) {
    return '%' + c.charCodeAt(0).toString(16).toUpperCase();
  });
}

function tokensToFunction(tokens) {
  var matches = new Array(tokens.length);

  for (var i = 0; i < tokens.length; i++) {
    if (typeof tokens[i] === 'object') {
      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');
    }
  }

  return function (obj, opts) {
    var path = '';
    var data = obj || {};
    var options = opts || {};
    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;

    for (var i = 0; i < tokens.length; i++) {
      var token = tokens[i];

      if (typeof token === 'string') {
        path += token;

        continue;
      }

      var value = data[token.name];
      var segment;

      if (value == null) {
        if (token.optional) {
          if (token.partial) {
            path += token.prefix;
          }

          continue;
        } else {
          throw new TypeError('Expected "' + token.name + '" to be defined');
        }
      }

      if (isarray(value)) {
        if (!token.repeat) {
          throw new TypeError('Expected "' + token.name + '" to not repeat, but received `' + JSON.stringify(value) + '`');
        }

        if (value.length === 0) {
          if (token.optional) {
            continue;
          } else {
            throw new TypeError('Expected "' + token.name + '" to not be empty');
          }
        }

        for (var j = 0; j < value.length; j++) {
          segment = encode(value[j]);

          if (!matches[i].test(segment)) {
            throw new TypeError('Expected all "' + token.name + '" to match "' + token.pattern + '", but received `' + JSON.stringify(segment) + '`');
          }

          path += (j === 0 ? token.prefix : token.delimiter) + segment;
        }

        continue;
      }

      segment = token.asterisk ? encodeAsterisk(value) : encode(value);

      if (!matches[i].test(segment)) {
        throw new TypeError('Expected "' + token.name + '" to match "' + token.pattern + '", but received "' + segment + '"');
      }

      path += token.prefix + segment;
    }

    return path;
  };
}

function escapeString(str) {
  return str.replace(/([.+*?=^!:${}()[\]|\/\\])/g, '\\$1');
}

function escapeGroup(group) {
  return group.replace(/([=!:$\/()])/g, '\\$1');
}

function attachKeys(re, keys) {
  re.keys = keys;
  return re;
}

function flags(options) {
  return options.sensitive ? '' : 'i';
}

function regexpToRegexp(path, keys) {
  var groups = path.source.match(/\((?!\?)/g);

  if (groups) {
    for (var i = 0; i < groups.length; i++) {
      keys.push({
        name: i,
        prefix: null,
        delimiter: null,
        optional: false,
        repeat: false,
        partial: false,
        asterisk: false,
        pattern: null
      });
    }
  }

  return attachKeys(path, keys);
}

function arrayToRegexp(path, keys, options) {
  var parts = [];

  for (var i = 0; i < path.length; i++) {
    parts.push(pathToRegexp(path[i], keys, options).source);
  }

  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));

  return attachKeys(regexp, keys);
}

function stringToRegexp(path, keys, options) {
  return tokensToRegExp(parse(path, options), keys, options);
}

function tokensToRegExp(tokens, keys, options) {
  if (!isarray(keys)) {
    options = keys || options;
    keys = [];
  }

  options = options || {};

  var strict = options.strict;
  var end = options.end !== false;
  var route = '';

  for (var i = 0; i < tokens.length; i++) {
    var token = tokens[i];

    if (typeof token === 'string') {
      route += escapeString(token);
    } else {
      var prefix = escapeString(token.prefix);
      var capture = '(?:' + token.pattern + ')';

      keys.push(token);

      if (token.repeat) {
        capture += '(?:' + prefix + capture + ')*';
      }

      if (token.optional) {
        if (!token.partial) {
          capture = '(?:' + prefix + '(' + capture + '))?';
        } else {
          capture = prefix + '(' + capture + ')?';
        }
      } else {
        capture = prefix + '(' + capture + ')';
      }

      route += capture;
    }
  }

  var delimiter = escapeString(options.delimiter || '/');
  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter;

  if (!strict) {
    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';
  }

  if (end) {
    route += '$';
  } else {
    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';
  }

  return attachKeys(new RegExp('^' + route, flags(options)), keys);
}

function pathToRegexp(path, keys, options) {
  if (!isarray(keys)) {
    options = keys || options;
    keys = [];
  }

  options = options || {};

  if (path instanceof RegExp) {
    return regexpToRegexp(path, keys);
  }

  if (isarray(path)) {
    return arrayToRegexp(path, keys, options);
  }

  return stringToRegexp(path, keys, options);
}
}, 1915, null, "path-to-regexp/index.js");
__d(/* isarray/index.js */function(global, require, module, exports) {module.exports = Array.isArray || function (arr) {
  return Object.prototype.toString.call(arr) == '[object Array]';
};
}, 1916, null, "isarray/index.js");
__d(/* react-navigation/src/routers/createConfigGetter.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _invariant = require(346                 ); // 346 = fbjs/lib/invariant

var _invariant2 = babelHelpers.interopRequireDefault(_invariant);

var _getScreenForRouteName = require(1918                     ); // 1918 = ./getScreenForRouteName

var _getScreenForRouteName2 = babelHelpers.interopRequireDefault(_getScreenForRouteName);

var _addNavigationHelpers = require(1888                     ); // 1888 = ../addNavigationHelpers

var _addNavigationHelpers2 = babelHelpers.interopRequireDefault(_addNavigationHelpers);

var _validateScreenOptions = require(1919                     ); // 1919 = ./validateScreenOptions

var _validateScreenOptions2 = babelHelpers.interopRequireDefault(_validateScreenOptions);

function applyConfig(configurer, navigationOptions, configProps) {
  if (typeof configurer === 'function') {
    return babelHelpers.extends({}, navigationOptions, configurer(babelHelpers.extends({}, configProps, {
      navigationOptions: navigationOptions
    })));
  }
  if (typeof configurer === 'object') {
    return babelHelpers.extends({}, navigationOptions, configurer);
  }
  return navigationOptions;
}

exports.default = function (routeConfigs, navigatorScreenConfig) {
  return function (navigation, screenProps) {
    var state = navigation.state,
        dispatch = navigation.dispatch;

    var route = state;
    var _ref = route,
        routes = _ref.routes,
        index = _ref.index;


    (0, _invariant2.default)(route.routeName && typeof route.routeName === 'string', 'Cannot get config because the route does not have a routeName.');

    var Component = (0, _getScreenForRouteName2.default)(routeConfigs, route.routeName);

    var outputConfig = {};

    if (Component.router) {
      (0, _invariant2.default)(route && routes && index != null, 'Expect nav state to have routes and index, ' + JSON.stringify(route));
      var childRoute = routes[index];
      var childNavigation = (0, _addNavigationHelpers2.default)({
        state: childRoute,
        dispatch: dispatch
      });
      outputConfig = Component.router.getScreenOptions(childNavigation, screenProps);
    }

    var routeConfig = routeConfigs[route.routeName];

    var routeScreenConfig = routeConfig.navigationOptions;
    var componentScreenConfig = Component.navigationOptions;

    var configOptions = { navigation: navigation, screenProps: screenProps || {} };

    outputConfig = applyConfig(navigatorScreenConfig, outputConfig, configOptions);
    outputConfig = applyConfig(componentScreenConfig, outputConfig, configOptions);
    outputConfig = applyConfig(routeScreenConfig, outputConfig, configOptions);

    (0, _validateScreenOptions2.default)(outputConfig, route);

    return outputConfig;
  };
};
}, 1917, null, "react-navigation/src/routers/createConfigGetter.js");
__d(/* react-navigation/src/routers/getScreenForRouteName.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getScreenForRouteName;

var _invariant = require(346                 ); // 346 = fbjs/lib/invariant

var _invariant2 = babelHelpers.interopRequireDefault(_invariant);

function getScreenForRouteName(routeConfigs, routeName) {
  var routeConfig = routeConfigs[routeName];

  (0, _invariant2.default)(routeConfig, 'There is no route defined for key ' + routeName + '.\n' + ('Must be one of: ' + Object.keys(routeConfigs).map(function (a) {
    return '\'' + a + '\'';
  }).join(',')));

  if (routeConfig.screen) {
    return routeConfig.screen;
  }

  if (typeof routeConfig.getScreen === 'function') {
    var screen = routeConfig.getScreen();
    (0, _invariant2.default)(typeof screen === 'function', 'The getScreen defined for route \'' + routeName + ' didn\'t return a valid ' + 'screen or navigator.\n\n' + 'Please pass it like this:\n' + (routeName + ': {\n  getScreen: () => require(\'./MyScreen\').default\n}'));
    return screen;
  }

  (0, _invariant2.default)(false, 'Route ' + routeName + ' must define a screen or a getScreen.');
}
}, 1918, null, "react-navigation/src/routers/getScreenForRouteName.js");
__d(/* react-navigation/src/routers/validateScreenOptions.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _invariant = require(346                 ); // 346 = fbjs/lib/invariant

var _invariant2 = babelHelpers.interopRequireDefault(_invariant);

var deprecatedKeys = ['tabBar'];

exports.default = function (screenOptions, route) {
  var keys = Object.keys(screenOptions);

  var deprecatedKey = keys.find(function (key) {
    return deprecatedKeys.includes(key);
  });

  if (typeof screenOptions.title === 'function') {
    (0, _invariant2.default)(false, ['`title` cannot be defined as a function in navigation options for `' + route.routeName + '` screen. \n', 'Try replacing the following:', '{', '    title: ({ state }) => state...', '}', '', 'with:', '({ navigation }) => ({', '    title: navigation.state...', '})'].join('\n'));
  }

  if (deprecatedKey && typeof screenOptions[deprecatedKey] === 'function') {
    (0, _invariant2.default)(false, ['`' + deprecatedKey + '` cannot be defined as a function in navigation options for `' + route.routeName + '` screen. \n', 'Try replacing the following:', '{', '    ' + deprecatedKey + ': ({ state }) => ({', '         key: state...', '    })', '}', '', 'with:', '({ navigation }) => ({', '    ' + deprecatedKey + 'Key: navigation.state...', '})'].join('\n'));
  }

  if (deprecatedKey && typeof screenOptions[deprecatedKey] === 'object') {
    (0, _invariant2.default)(false, ['Invalid key `' + deprecatedKey + '` defined in navigation options for `' + route.routeName + '` screen.', '\n', 'Try replacing the following navigation options:', '{', '    ' + deprecatedKey + ': {'].concat(babelHelpers.toConsumableArray(Object.keys(screenOptions[deprecatedKey]).map(function (key) {
      return '        ' + key + ': ...,';
    })), ['    },', '}', '\n', 'with:', '{'], babelHelpers.toConsumableArray(Object.keys(screenOptions[deprecatedKey]).map(function (key) {
      return '    ' + (deprecatedKey + key[0].toUpperCase() + key.slice(1)) + ': ...,';
    })), ['}']).join('\n'));
  }
};
}, 1919, null, "react-navigation/src/routers/validateScreenOptions.js");
__d(/* react-navigation/src/routers/validateRouteConfigMap.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _invariant = require(346                 ); // 346 = fbjs/lib/invariant

var _invariant2 = babelHelpers.interopRequireDefault(_invariant);

function validateRouteConfigMap(routeConfigs) {
  var routeNames = Object.keys(routeConfigs);
  (0, _invariant2.default)(routeNames.length > 0, 'Please specify at least one route when configuring a navigator.');

  routeNames.forEach(function (routeName) {
    var routeConfig = routeConfigs[routeName];

    (0, _invariant2.default)(routeConfig.screen || routeConfig.getScreen, 'Route \'' + routeName + '\' should declare a screen. ' + 'For example:\n\n' + "import MyScreen from './MyScreen';\n" + '...\n' + (routeName + ': {\n') + '  screen: MyScreen,\n' + '}');

    if (routeConfig.screen && routeConfig.getScreen) {
      (0, _invariant2.default)(false, 'Route \'' + routeName + '\' should declare a screen or ' + 'a getScreen, not both.');
    }

    if (routeConfig.screen) {
      (0, _invariant2.default)(typeof routeConfig.screen === 'function', 'The component for route \'' + routeName + '\' must be a ' + 'a React component. For example:\n\n' + "import MyScreen from './MyScreen';\n" + '...\n' + (routeName + ': {\n') + '  screen: MyScreen,\n' + '}\n\n' + 'You can also use a navigator:\n\n' + "import MyNavigator from './MyNavigator';\n" + '...\n' + (routeName + ': {\n') + '  screen: MyNavigator,\n' + '}');
    }
  });
}

exports.default = validateRouteConfigMap;
}, 1920, null, "react-navigation/src/routers/validateRouteConfigMap.js");
__d(/* react-navigation/src/routers/getScreenConfigDeprecated.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _invariant = require(346                 ); // 346 = fbjs/lib/invariant

var _invariant2 = babelHelpers.interopRequireDefault(_invariant);

exports.default = function () {
  return (0, _invariant2.default)(false, '`getScreenConfig` has been replaced with `getScreenOptions`');
};
}, 1921, null, "react-navigation/src/routers/getScreenConfigDeprecated.js");
__d(/* react-navigation/src/navigators/NavigatorTypes.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});


var STACK = 'react-navigation/STACK';
var TABS = 'react-navigation/TABS';
var DRAWER = 'react-navigation/DRAWER';

exports.default = {
  STACK: STACK,
  TABS: TABS,
  DRAWER: DRAWER
};
}, 1922, null, "react-navigation/src/navigators/NavigatorTypes.js");
__d(/* react-navigation/src/navigators/TabNavigator.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-navigation/src/navigators/TabNavigator.js';

var _react = require(604    ); // 604 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(334           ); // 334 = react-native

var _createNavigator = require(1890               ); // 1890 = ./createNavigator

var _createNavigator2 = babelHelpers.interopRequireDefault(_createNavigator);

var _createNavigationContainer = require(1885                          ); // 1885 = ../createNavigationContainer

var _createNavigationContainer2 = babelHelpers.interopRequireDefault(_createNavigationContainer);

var _TabRouter = require(1924                  ); // 1924 = ../routers/TabRouter

var _TabRouter2 = babelHelpers.interopRequireDefault(_TabRouter);

var _TabView = require(1925                      ); // 1925 = ../views/TabView/TabView

var _TabView2 = babelHelpers.interopRequireDefault(_TabView);

var _TabBarTop = require(1941                        ); // 1941 = ../views/TabView/TabBarTop

var _TabBarTop2 = babelHelpers.interopRequireDefault(_TabBarTop);

var _TabBarBottom = require(1943                           ); // 1943 = ../views/TabView/TabBarBottom

var _TabBarBottom2 = babelHelpers.interopRequireDefault(_TabBarBottom);

var _NavigatorTypes = require(1922              ); // 1922 = ./NavigatorTypes

var _NavigatorTypes2 = babelHelpers.interopRequireDefault(_NavigatorTypes);

var TabNavigator = function TabNavigator(routeConfigs) {
  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  var mergedConfig = babelHelpers.extends({}, TabNavigator.Presets.Default, config);
  var tabBarComponent = mergedConfig.tabBarComponent,
      tabBarPosition = mergedConfig.tabBarPosition,
      tabBarOptions = mergedConfig.tabBarOptions,
      swipeEnabled = mergedConfig.swipeEnabled,
      animationEnabled = mergedConfig.animationEnabled,
      lazy = mergedConfig.lazy,
      tabsConfig = babelHelpers.objectWithoutProperties(mergedConfig, ['tabBarComponent', 'tabBarPosition', 'tabBarOptions', 'swipeEnabled', 'animationEnabled', 'lazy']);


  var router = (0, _TabRouter2.default)(routeConfigs, tabsConfig);

  var navigator = (0, _createNavigator2.default)(router, routeConfigs, config, _NavigatorTypes2.default.STACK)(function (props) {
    return _react2.default.createElement(_TabView2.default, babelHelpers.extends({}, props, {
      tabBarComponent: tabBarComponent,
      tabBarPosition: tabBarPosition,
      tabBarOptions: tabBarOptions,
      swipeEnabled: swipeEnabled,
      animationEnabled: animationEnabled,
      lazy: lazy,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 51
      }
    }));
  });

  return (0, _createNavigationContainer2.default)(navigator, tabsConfig.containerOptions);
};

var Presets = {
  iOSBottomTabs: {
    tabBarComponent: _TabBarBottom2.default,
    tabBarPosition: 'bottom',
    swipeEnabled: false,
    animationEnabled: false,
    lazy: false
  },
  AndroidTopTabs: {
    tabBarComponent: _TabBarTop2.default,
    tabBarPosition: 'top',
    swipeEnabled: true,
    animationEnabled: true,
    lazy: false
  }
};

TabNavigator.Presets = {
  iOSBottomTabs: Presets.iOSBottomTabs,
  AndroidTopTabs: Presets.AndroidTopTabs,
  Default: _reactNative.Platform.OS === 'ios' ? Presets.iOSBottomTabs : Presets.AndroidTopTabs
};

exports.default = TabNavigator;
}, 1923, null, "react-navigation/src/navigators/TabNavigator.js");
__d(/* react-navigation/src/routers/TabRouter.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _invariant = require(346                 ); // 346 = fbjs/lib/invariant

var _invariant2 = babelHelpers.interopRequireDefault(_invariant);

var _getScreenForRouteName = require(1918                     ); // 1918 = ./getScreenForRouteName

var _getScreenForRouteName2 = babelHelpers.interopRequireDefault(_getScreenForRouteName);

var _createConfigGetter = require(1917                  ); // 1917 = ./createConfigGetter

var _createConfigGetter2 = babelHelpers.interopRequireDefault(_createConfigGetter);

var _NavigationActions = require(1887                  ); // 1887 = ../NavigationActions

var _NavigationActions2 = babelHelpers.interopRequireDefault(_NavigationActions);

var _validateRouteConfigMap = require(1920                      ); // 1920 = ./validateRouteConfigMap

var _validateRouteConfigMap2 = babelHelpers.interopRequireDefault(_validateRouteConfigMap);

var _getScreenConfigDeprecated = require(1921                         ); // 1921 = ./getScreenConfigDeprecated

var _getScreenConfigDeprecated2 = babelHelpers.interopRequireDefault(_getScreenConfigDeprecated);

exports.default = function (routeConfigs) {
  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  (0, _validateRouteConfigMap2.default)(routeConfigs);

  var order = config.order || Object.keys(routeConfigs);
  var paths = config.paths || {};
  var initialRouteName = config.initialRouteName || order[0];
  var initialRouteIndex = order.indexOf(initialRouteName);
  var backBehavior = config.backBehavior || 'initialRoute';
  var shouldBackNavigateToInitialRoute = backBehavior === 'initialRoute';
  var tabRouters = {};
  order.forEach(function (routeName) {
    var routeConfig = routeConfigs[routeName];
    paths[routeName] = typeof routeConfig.path === 'string' ? routeConfig.path : routeName;
    tabRouters[routeName] = null;
    if (routeConfig.screen && routeConfig.screen.router) {
      tabRouters[routeName] = routeConfig.screen.router;
    }
  });
  (0, _invariant2.default)(initialRouteIndex !== -1, 'Invalid initialRouteName \'' + initialRouteName + '\' for TabRouter. ' + ('Should be one of ' + order.map(function (n) {
    return '"' + n + '"';
  }).join(', ')));
  return {
    getStateForAction: function getStateForAction(action, inputState) {
      action = _NavigationActions2.default.mapDeprecatedActionAndWarn(action);

      var state = inputState;
      if (!state) {
        var _routes = order.map(function (routeName) {
          var tabRouter = tabRouters[routeName];
          if (tabRouter) {
            var childAction = action.action || _NavigationActions2.default.init(babelHelpers.extends({}, action.params ? { params: action.params } : {}));
            return babelHelpers.extends({}, tabRouter.getStateForAction(childAction), {
              key: routeName,
              routeName: routeName
            });
          }
          return {
            key: routeName,
            routeName: routeName
          };
        });
        state = {
          routes: _routes,
          index: initialRouteIndex
        };
      }

      if (action.type === _NavigationActions2.default.INIT) {
        var _action = action,
            params = _action.params;

        if (params) {
          state.routes = state.routes.map(function (route) {
            return babelHelpers.extends({}, route, {
              params: babelHelpers.extends({}, route.params, params)
            });
          });
        }
      }

      var activeTabLastState = state.routes[state.index];
      var activeTabRouter = tabRouters[order[state.index]];
      if (activeTabRouter) {
        var activeTabState = activeTabRouter.getStateForAction(action.action || action, activeTabLastState);
        if (!activeTabState && inputState) {
          return null;
        }
        if (activeTabState && activeTabState !== activeTabLastState) {
          var _routes2 = [].concat(babelHelpers.toConsumableArray(state.routes));
          _routes2[state.index] = activeTabState;
          return babelHelpers.extends({}, state, {
            routes: _routes2
          });
        }
      }

      var activeTabIndex = state.index;
      var isBackEligible = action.key == null || action.key === activeTabLastState.key;
      if (action.type === _NavigationActions2.default.BACK && isBackEligible && shouldBackNavigateToInitialRoute) {
        activeTabIndex = initialRouteIndex;
      }
      var didNavigate = false;
      if (action.type === _NavigationActions2.default.NAVIGATE) {
        var navigateAction = action;
        didNavigate = !!order.find(function (tabId, i) {
          if (tabId === navigateAction.routeName) {
            activeTabIndex = i;
            return true;
          }
          return false;
        });
        if (didNavigate) {
          var childState = state.routes[activeTabIndex];
          var newChildState = void 0;

          var tabRouter = tabRouters[action.routeName];

          if (action.action) {
            newChildState = tabRouter ? tabRouter.getStateForAction(action.action, childState) : null;
          } else if (!tabRouter && action.params) {
            newChildState = babelHelpers.extends({}, childState, {
              params: babelHelpers.extends({}, childState.params || {}, action.params)
            });
          }

          if (newChildState && newChildState !== childState) {
            var _routes3 = [].concat(babelHelpers.toConsumableArray(state.routes));
            _routes3[activeTabIndex] = newChildState;
            return babelHelpers.extends({}, state, {
              routes: _routes3,
              index: activeTabIndex
            });
          }
        }
      }
      if (action.type === _NavigationActions2.default.SET_PARAMS) {
        var lastRoute = state.routes.find(function (route) {
          return route.key === action.key;
        });
        if (lastRoute) {
          var _params = babelHelpers.extends({}, lastRoute.params, action.params);
          var _routes4 = [].concat(babelHelpers.toConsumableArray(state.routes));
          _routes4[state.routes.indexOf(lastRoute)] = babelHelpers.extends({}, lastRoute, {
            params: _params
          });
          return babelHelpers.extends({}, state, {
            routes: _routes4
          });
        }
      }
      if (activeTabIndex !== state.index) {
        return babelHelpers.extends({}, state, {
          index: activeTabIndex
        });
      } else if (didNavigate && !inputState) {
        return state;
      } else if (didNavigate) {
        return null;
      }

      var index = state.index;

      var routes = state.routes;
      order.find(function (tabId, i) {
        var tabRouter = tabRouters[tabId];
        if (i === index) {
          return false;
        }
        var tabState = routes[i];
        if (tabRouter) {
          tabState = tabRouter.getStateForAction(action, tabState);
        }
        if (!tabState) {
          index = i;
          return true;
        }
        if (tabState !== routes[i]) {
          routes = [].concat(babelHelpers.toConsumableArray(routes));
          routes[i] = tabState;
          index = i;
          return true;
        }
        return false;
      });


      if (index !== state.index || routes !== state.routes) {
        return babelHelpers.extends({}, state, {
          index: index,
          routes: routes
        });
      }
      return state;
    },
    getComponentForState: function getComponentForState(state) {
      var routeName = order[state.index];
      (0, _invariant2.default)(routeName, 'There is no route defined for index ' + state.index + '. Check that\n        that you passed in a navigation state with a valid tab/screen index.');
      var childRouter = tabRouters[routeName];
      if (childRouter) {
        return childRouter.getComponentForState(state.routes[state.index]);
      }
      return (0, _getScreenForRouteName2.default)(routeConfigs, routeName);
    },
    getComponentForRouteName: function getComponentForRouteName(routeName) {
      return (0, _getScreenForRouteName2.default)(routeConfigs, routeName);
    },
    getPathAndParamsForState: function getPathAndParamsForState(state) {
      var route = state.routes[state.index];
      var routeName = order[state.index];
      var subPath = paths[routeName];
      var screen = (0, _getScreenForRouteName2.default)(routeConfigs, routeName);
      var path = subPath;
      var params = route.params;
      if (screen && screen.router) {
        var child = screen.router.getPathAndParamsForState(route);
        path = subPath ? subPath + '/' + child.path : child.path;
        params = child.params ? babelHelpers.extends({}, params, child.params) : params;
      }
      return {
        path: path,
        params: params
      };
    },
    getActionForPathAndParams: function getActionForPathAndParams(path, params) {
      return order.map(function (tabId) {
        var parts = path.split('/');
        var pathToTest = paths[tabId];
        if (parts[0] === pathToTest) {
          var tabRouter = tabRouters[tabId];
          var action = _NavigationActions2.default.navigate({
            routeName: tabId
          });
          if (tabRouter && tabRouter.getActionForPathAndParams) {
            action.action = tabRouter.getActionForPathAndParams(parts.slice(1).join('/'), params);
          } else if (params) {
            action.params = params;
          }
          return action;
        }
        return null;
      }).find(function (action) {
        return !!action;
      }) || order.map(function (tabId) {
        var tabRouter = tabRouters[tabId];
        return tabRouter && tabRouter.getActionForPathAndParams(path, params);
      }).find(function (action) {
        return !!action;
      }) || null;
    },


    getScreenOptions: (0, _createConfigGetter2.default)(routeConfigs, config.navigationOptions),

    getScreenConfig: _getScreenConfigDeprecated2.default
  };
};
}, 1924, null, "react-navigation/src/routers/TabRouter.js");
__d(/* react-navigation/src/views/TabView/TabView.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-navigation/src/views/TabView/TabView.js';

var _react = require(604    ); // 604 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(334           ); // 334 = react-native

var _reactNativeTabView = require(1926                   ); // 1926 = react-native-tab-view

var _SceneView = require(1904          ); // 1904 = ../SceneView

var _SceneView2 = babelHelpers.interopRequireDefault(_SceneView);

var _withCachedChildNavigation = require(1940                             ); // 1940 = ../../withCachedChildNavigation

var _withCachedChildNavigation2 = babelHelpers.interopRequireDefault(_withCachedChildNavigation);

var TabView = function (_PureComponent) {
  babelHelpers.inherits(TabView, _PureComponent);

  function TabView() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, TabView);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = TabView.__proto__ || Object.getPrototypeOf(TabView)).call.apply(_ref, [this].concat(args))), _this), _this._handlePageChanged = function (index) {
      var navigation = _this.props.navigation;

      navigation.navigate(navigation.state.routes[index].routeName);
    }, _this._renderScene = function (_ref2) {
      var route = _ref2.route;
      var screenProps = _this.props.screenProps;

      var childNavigation = _this.props.childNavigationProps[route.key];
      var TabComponent = _this.props.router.getComponentForRouteName(route.routeName);
      return _react2.default.createElement(
        _reactNative.View,
        { style: styles.page, __source: {
            fileName: _jsxFileName,
            lineNumber: 69
          }
        },
        _react2.default.createElement(_SceneView2.default, {
          screenProps: screenProps,
          component: TabComponent,
          navigation: childNavigation,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 70
          }
        })
      );
    }, _this._getLabel = function (_ref3) {
      var route = _ref3.route,
          tintColor = _ref3.tintColor,
          focused = _ref3.focused;

      var options = _this.props.router.getScreenOptions(_this.props.childNavigationProps[route.key], _this.props.screenProps || {});

      if (options.tabBarLabel) {
        return typeof options.tabBarLabel === 'function' ? options.tabBarLabel({ tintColor: tintColor, focused: focused }) : options.tabBarLabel;
      }

      if (typeof options.title === 'string') {
        return options.title;
      }

      return route.routeName;
    }, _this._renderIcon = function (_ref4) {
      var focused = _ref4.focused,
          route = _ref4.route,
          tintColor = _ref4.tintColor;

      var options = _this.props.router.getScreenOptions(_this.props.childNavigationProps[route.key], _this.props.screenProps || {});
      if (options.tabBarIcon) {
        return typeof options.tabBarIcon === 'function' ? options.tabBarIcon({ tintColor: tintColor, focused: focused }) : options.tabBarIcon;
      }
      return null;
    }, _this._renderTabBar = function (props) {
      var _this$props = _this.props,
          tabBarOptions = _this$props.tabBarOptions,
          TabBarComponent = _this$props.tabBarComponent,
          animationEnabled = _this$props.animationEnabled;

      if (typeof TabBarComponent === 'undefined') {
        return null;
      }
      return _react2.default.createElement(TabBarComponent, babelHelpers.extends({}, props, tabBarOptions, {
        navigation: _this.props.navigation,
        getLabel: _this._getLabel,
        renderIcon: _this._renderIcon,
        animationEnabled: animationEnabled,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 121
        }
      }));
    }, _this._renderPager = function (props) {
      return _react2.default.createElement(_reactNativeTabView.TabViewPagerPan, babelHelpers.extends({}, props, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 132
        }
      }));
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(TabView, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          router = _props.router,
          tabBarComponent = _props.tabBarComponent,
          tabBarPosition = _props.tabBarPosition,
          animationEnabled = _props.animationEnabled,
          swipeEnabled = _props.swipeEnabled,
          lazy = _props.lazy,
          screenProps = _props.screenProps;


      var renderHeader = void 0;
      var renderFooter = void 0;
      var renderPager = void 0;

      var state = this.props.navigation.state;

      var options = router.getScreenOptions(this.props.childNavigationProps[state.routes[state.index].key], screenProps || {});

      var tabBarVisible = options.tabBarVisible == null ? true : options.tabBarVisible;

      if (tabBarComponent !== undefined && tabBarVisible) {
        if (tabBarPosition === 'bottom') {
          renderFooter = this._renderTabBar;
        } else {
          renderHeader = this._renderTabBar;
        }
      }

      if (animationEnabled === false && swipeEnabled === false) {
        renderPager = this._renderPager;
      }

      var props = {
        lazy: lazy,
        animationEnabled: animationEnabled,
        swipeEnabled: swipeEnabled,
        renderPager: renderPager,
        renderHeader: renderHeader,
        renderFooter: renderFooter,
        renderScene: this._renderScene,
        onRequestChangeTab: this._handlePageChanged,
        navigationState: this.props.navigation.state,
        screenProps: this.props.screenProps,
        style: styles.container
      };

      return _react2.default.createElement(_reactNativeTabView.TabViewAnimated, babelHelpers.extends({}, props, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 185
        }
      }));
    }
  }]);
  return TabView;
}(_react.PureComponent);

exports.default = (0, _withCachedChildNavigation2.default)(TabView);


var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1
  },

  page: {
    flex: 1,
    overflow: 'hidden'
  }
});
}, 1925, null, "react-navigation/src/views/TabView/TabView.js");
__d(/* react-native-tab-view/src/index.js */function(global, require, module, exports) {

module.exports = {
  get TabViewAnimated() {
    return require(1927               ).default; // 1927 = ./TabViewAnimated
  },
  get TabViewPagerPan() {
    return require(1936               ).default; // 1936 = ./TabViewPagerPan
  },
  get TabViewPagerScroll() {
    return require(1935                  ).default; // 1935 = ./TabViewPagerScroll
  },
  get TabViewPagerAndroid() {
    return require(1934                   ).default; // 1934 = ./TabViewPagerAndroid
  },
  get TabBar() {
    return require(1937      ).default; // 1937 = ./TabBar
  },
  get SceneMap() {
    return require(1939        ).default; // 1939 = ./SceneMap
  }
};
}, 1926, null, "react-native-tab-view/src/index.js");
__d(/* react-native-tab-view/src/TabViewAnimated.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native-tab-view/src/TabViewAnimated.js';

var _react = require(604    ); // 604 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(1928        ); // 1928 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactNative = require(334           ); // 334 = react-native

var _TabViewPropTypes = require(1933                ); // 1933 = ./TabViewPropTypes

var TabViewPager = void 0;

switch (_reactNative.Platform.OS) {
  case 'android':
    TabViewPager = require(1934                   ).default; // 1934 = ./TabViewPagerAndroid
    break;
  case 'ios':
    TabViewPager = require(1935                  ).default; // 1935 = ./TabViewPagerScroll
    break;
  default:
    TabViewPager = require(1936               ).default; // 1936 = ./TabViewPagerPan
    break;
}

var TabViewAnimated = function (_PureComponent) {
  babelHelpers.inherits(TabViewAnimated, _PureComponent);

  function TabViewAnimated(props) {
    babelHelpers.classCallCheck(this, TabViewAnimated);

    var _this = babelHelpers.possibleConstructorReturn(this, (TabViewAnimated.__proto__ || Object.getPrototypeOf(TabViewAnimated)).call(this, props));

    _initialiseProps.call(_this);

    _this.state = {
      loaded: [_this.props.navigationState.index],
      layout: babelHelpers.extends({}, _this.props.initialLayout, {
        measured: false
      }),
      position: new _reactNative.Animated.Value(_this.props.navigationState.index)
    };
    return _this;
  }

  babelHelpers.createClass(TabViewAnimated, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this._mounted = true;
      this._positionListener = this.state.position.addListener(this._trackPosition);
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this._mounted = false;
      this.state.position.removeListener(this._positionListener);
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          navigationState = _props.navigationState,
          onRequestChangeTab = _props.onRequestChangeTab,
          onChangePosition = _props.onChangePosition,
          canJumpToTab = _props.canJumpToTab,
          lazy = _props.lazy,
          initialLayout = _props.initialLayout,
          renderScene = _props.renderScene,
          renderPager = _props.renderPager,
          renderHeader = _props.renderHeader,
          renderFooter = _props.renderFooter,
          rest = babelHelpers.objectWithoutProperties(_props, ['navigationState', 'onRequestChangeTab', 'onChangePosition', 'canJumpToTab', 'lazy', 'initialLayout', 'renderScene', 'renderPager', 'renderHeader', 'renderFooter']);

      var props = this._buildSceneRendererProps();

      return _react2.default.createElement(
        _reactNative.View,
        {
          onLayout: this._handleLayout,
          loaded: this.state.loaded,
          style: [styles.container, this.props.style],
          __source: {
            fileName: _jsxFileName,
            lineNumber: 260
          }
        },
        renderHeader && _react2.default.createElement(
          _reactNative.View,
          { collapsable: false, __source: {
              fileName: _jsxFileName,
              lineNumber: 265
            }
          },
          renderHeader(props)
        ),
        renderPager(babelHelpers.extends({}, props, rest, {
          children: navigationState.routes.map(function (route, index) {
            return _this2._renderScene(babelHelpers.extends({}, props, {
              route: route,
              index: index,
              focused: index === navigationState.index
            }));
          })
        })),
        renderFooter && _react2.default.createElement(
          _reactNative.View,
          { collapsable: false, __source: {
              fileName: _jsxFileName,
              lineNumber: 278
            }
          },
          renderFooter(props)
        )
      );
    }
  }]);
  return TabViewAnimated;
}(_react.PureComponent);

TabViewAnimated.propTypes = {
  navigationState: _TabViewPropTypes.NavigationStatePropType.isRequired,
  onRequestChangeTab: _propTypes2.default.func.isRequired,
  onChangePosition: _propTypes2.default.func,
  initialLayout: _propTypes2.default.shape({
    height: _propTypes2.default.number.isRequired,
    width: _propTypes2.default.number.isRequired
  }),
  canJumpToTab: _propTypes2.default.func,
  renderPager: _propTypes2.default.func.isRequired,
  renderScene: _propTypes2.default.func.isRequired,
  renderHeader: _propTypes2.default.func,
  renderFooter: _propTypes2.default.func,
  lazy: _propTypes2.default.bool
};
TabViewAnimated.defaultProps = {
  renderPager: function renderPager(props) {
    return _react2.default.createElement(TabViewPager, babelHelpers.extends({}, props, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 81
      }
    }));
  },
  initialLayout: {
    height: 0,
    width: 0
  }
};

var _initialiseProps = function _initialiseProps() {
  var _this3 = this;

  this._mounted = false;
  this._subscriptions = {};

  this._renderScene = function (props) {
    var _props2 = _this3.props,
        renderScene = _props2.renderScene,
        lazy = _props2.lazy;
    var navigationState = props.navigationState;
    var loaded = _this3.state.loaded;

    if (lazy) {
      if (loaded.includes(navigationState.routes.indexOf(props.route))) {
        return renderScene(props);
      }
      return null;
    }
    return renderScene(props);
  };

  this._handleChangePosition = function (value) {
    var _props3 = _this3.props,
        onChangePosition = _props3.onChangePosition,
        navigationState = _props3.navigationState,
        lazy = _props3.lazy;

    if (onChangePosition) {
      onChangePosition(value);
    }
    var loaded = _this3.state.loaded;

    if (lazy) {
      var next = Math.ceil(value);
      if (next === navigationState.index) {
        next = Math.floor(value);
      }
      if (loaded.includes(next)) {
        return;
      }
      _this3.setState({
        loaded: [].concat(babelHelpers.toConsumableArray(loaded), [next])
      });
    }
  };

  this._trackPosition = function (e) {
    _this3._handleChangePosition(e.value);
    _this3._triggerEvent('position', e.value);
    _this3._lastPosition = e.value;
    var onChangePosition = _this3.props.onChangePosition;

    if (onChangePosition) {
      onChangePosition(e.value);
    }
  };

  this._getLastPosition = function () {
    if (typeof _this3._lastPosition === 'number') {
      return _this3._lastPosition;
    } else {
      return _this3.props.navigationState.index;
    }
  };

  this._handleLayout = function (e) {
    var _e$nativeEvent$layout = e.nativeEvent.layout,
        height = _e$nativeEvent$layout.height,
        width = _e$nativeEvent$layout.width;


    if (_this3.state.layout.width === width && _this3.state.layout.height === height) {
      return;
    }

    _this3.setState({
      layout: {
        measured: true,
        height: height,
        width: width
      }
    });
  };

  this._buildSceneRendererProps = function () {
    return {
      layout: _this3.state.layout,
      navigationState: _this3.props.navigationState,
      position: _this3.state.position,
      jumpToIndex: _this3._jumpToIndex,
      getLastPosition: _this3._getLastPosition,
      subscribe: _this3._addSubscription
    };
  };

  this._jumpToIndex = function (index) {
    if (!_this3._mounted) {
      return;
    }

    var _props4 = _this3.props,
        canJumpToTab = _props4.canJumpToTab,
        navigationState = _props4.navigationState;


    if (canJumpToTab && !canJumpToTab(navigationState.routes[index])) {
      _this3._triggerEvent('reset', navigationState.index);
      return;
    }

    if (index !== navigationState.index) {
      _this3.props.onRequestChangeTab(index);
    }
  };

  this._addSubscription = function (event, callback) {
    if (!_this3._subscriptions[event]) {
      _this3._subscriptions[event] = [];
    }
    _this3._subscriptions[event].push(callback);
    return {
      remove: function remove() {
        var index = _this3._subscriptions[event].indexOf(callback);
        if (index > -1) {
          _this3._subscriptions[event].splice(index, 1);
        }
      }
    };
  };

  this._triggerEvent = function (event, value) {
    if (_this3._subscriptions[event]) {
      _this3._subscriptions[event].forEach(function (fn) {
        return fn(value);
      });
    }
  };
};

exports.default = TabViewAnimated;


var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1,
    overflow: 'hidden'
  }
});
}, 1927, null, "react-native-tab-view/src/TabViewAnimated.js");
__d(/* prop-types/index.js */function(global, require, module, exports) {

if (process.env.NODE_ENV !== 'production') {
  var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && (typeof Symbol === 'function' ? Symbol.for : '@@for') && (typeof Symbol === 'function' ? Symbol.for : '@@for')('react.element') || 0xeac7;

  var isValidElement = function isValidElement(object) {
    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
  };

  var throwOnDirectAccess = true;
  module.exports = require(1929                       )(isValidElement, throwOnDirectAccess); // 1929 = ./factoryWithTypeCheckers
} else {
  module.exports = require(1932                        )(); // 1932 = ./factoryWithThrowingShims
}
}, 1928, null, "prop-types/index.js");
__d(/* prop-types/factoryWithTypeCheckers.js */function(global, require, module, exports) {

'use strict';

var emptyFunction = require(336                     ); // 336 = fbjs/lib/emptyFunction
var invariant = require(346                 ); // 346 = fbjs/lib/invariant
var warning = require(335               ); // 335 = fbjs/lib/warning
var assign = require(400            ); // 400 = object-assign

var ReactPropTypesSecret = require(1930                        ); // 1930 = ./lib/ReactPropTypesSecret
var checkPropTypes = require(1931              ); // 1931 = ./checkPropTypes

module.exports = function (isValidElement, throwOnDirectAccess) {
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && (typeof Symbol === 'function' ? Symbol.iterator : '@@iterator');
  var FAUX_ITERATOR_SYMBOL = '@@iterator';
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  var ANONYMOUS = '<<anonymous>>';

  var ReactPropTypes = {
    array: createPrimitiveTypeChecker('array'),
    bool: createPrimitiveTypeChecker('boolean'),
    func: createPrimitiveTypeChecker('function'),
    number: createPrimitiveTypeChecker('number'),
    object: createPrimitiveTypeChecker('object'),
    string: createPrimitiveTypeChecker('string'),
    symbol: createPrimitiveTypeChecker('symbol'),

    any: createAnyTypeChecker(),
    arrayOf: createArrayOfTypeChecker,
    element: createElementTypeChecker(),
    instanceOf: createInstanceTypeChecker,
    node: createNodeChecker(),
    objectOf: createObjectOfTypeChecker,
    oneOf: createEnumTypeChecker,
    oneOfType: createUnionTypeChecker,
    shape: createShapeTypeChecker,
    exact: createStrictShapeTypeChecker
  };

  function is(x, y) {
    if (x === y) {
      return x !== 0 || 1 / x === 1 / y;
    } else {
      return x !== x && y !== y;
    }
  }

  function PropTypeError(message) {
    this.message = message;
    this.stack = '';
  }

  PropTypeError.prototype = Error.prototype;

  function createChainableTypeChecker(validate) {
    if (process.env.NODE_ENV !== 'production') {
      var manualPropTypeCallCache = {};
      var manualPropTypeWarningCount = 0;
    }
    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
      componentName = componentName || ANONYMOUS;
      propFullName = propFullName || propName;

      if (secret !== ReactPropTypesSecret) {
        if (throwOnDirectAccess) {
          invariant(false, 'Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use `PropTypes.checkPropTypes()` to call them. ' + 'Read more at http://fb.me/use-check-prop-types');
        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {
          var cacheKey = componentName + ':' + propName;
          if (!manualPropTypeCallCache[cacheKey] && manualPropTypeWarningCount < 3) {
            warning(false, 'You are manually calling a React.PropTypes validation ' + 'function for the `%s` prop on `%s`. This is deprecated ' + 'and will throw in the standalone `prop-types` package. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.', propFullName, componentName);
            manualPropTypeCallCache[cacheKey] = true;
            manualPropTypeWarningCount++;
          }
        }
      }
      if (props[propName] == null) {
        if (isRequired) {
          if (props[propName] === null) {
            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
          }
          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
        }
        return null;
      } else {
        return validate(props, propName, componentName, location, propFullName);
      }
    }

    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);

    return chainedCheckType;
  }

  function createPrimitiveTypeChecker(expectedType) {
    function validate(props, propName, componentName, location, propFullName, secret) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== expectedType) {
        var preciseType = getPreciseType(propValue);

        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createAnyTypeChecker() {
    return createChainableTypeChecker(emptyFunction.thatReturnsNull);
  }

  function createArrayOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
      }
      var propValue = props[propName];
      if (!Array.isArray(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
      }
      for (var i = 0; i < propValue.length; i++) {
        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
        if (error instanceof Error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!isValidElement(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createInstanceTypeChecker(expectedClass) {
    function validate(props, propName, componentName, location, propFullName) {
      if (!(props[propName] instanceof expectedClass)) {
        var expectedClassName = expectedClass.name || ANONYMOUS;
        var actualClassName = getClassName(props[propName]);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createEnumTypeChecker(expectedValues) {
    if (!Array.isArray(expectedValues)) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;
      return emptyFunction.thatReturnsNull;
    }

    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      for (var i = 0; i < expectedValues.length; i++) {
        if (is(propValue, expectedValues[i])) {
          return null;
        }
      }

      var valuesString = JSON.stringify(expectedValues);
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createObjectOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
      }
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
      }
      for (var key in propValue) {
        if (propValue.hasOwnProperty(key)) {
          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
          if (error instanceof Error) {
            return error;
          }
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createUnionTypeChecker(arrayOfTypeCheckers) {
    if (!Array.isArray(arrayOfTypeCheckers)) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
      return emptyFunction.thatReturnsNull;
    }

    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (typeof checker !== 'function') {
        warning(false, 'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' + 'received %s at index %s.', getPostfixForTypeWarning(checker), i);
        return emptyFunction.thatReturnsNull;
      }
    }

    function validate(props, propName, componentName, location, propFullName) {
      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];
        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
          return null;
        }
      }

      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createNodeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!isNode(props[propName])) {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      for (var key in shapeTypes) {
        var checker = shapeTypes[key];
        if (!checker) {
          continue;
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createStrictShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }

      var allKeys = assign({}, props[propName], shapeTypes);
      for (var key in allKeys) {
        var checker = shapeTypes[key];
        if (!checker) {
          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' + '\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function isNode(propValue) {
    switch (typeof propValue) {
      case 'number':
      case 'string':
      case 'undefined':
        return true;
      case 'boolean':
        return !propValue;
      case 'object':
        if (Array.isArray(propValue)) {
          return propValue.every(isNode);
        }
        if (propValue === null || isValidElement(propValue)) {
          return true;
        }

        var iteratorFn = getIteratorFn(propValue);
        if (iteratorFn) {
          var iterator = iteratorFn.call(propValue);
          var step;
          if (iteratorFn !== propValue.entries) {
            while (!(step = iterator.next()).done) {
              if (!isNode(step.value)) {
                return false;
              }
            }
          } else {
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                if (!isNode(entry[1])) {
                  return false;
                }
              }
            }
          }
        } else {
          return false;
        }

        return true;
      default:
        return false;
    }
  }

  function isSymbol(propType, propValue) {
    if (propType === 'symbol') {
      return true;
    }

    if (propValue['@@toStringTag'] === 'Symbol') {
      return true;
    }

    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
      return true;
    }

    return false;
  }

  function getPropType(propValue) {
    var propType = typeof propValue;
    if (Array.isArray(propValue)) {
      return 'array';
    }
    if (propValue instanceof RegExp) {
      return 'object';
    }
    if (isSymbol(propType, propValue)) {
      return 'symbol';
    }
    return propType;
  }

  function getPreciseType(propValue) {
    if (typeof propValue === 'undefined' || propValue === null) {
      return '' + propValue;
    }
    var propType = getPropType(propValue);
    if (propType === 'object') {
      if (propValue instanceof Date) {
        return 'date';
      } else if (propValue instanceof RegExp) {
        return 'regexp';
      }
    }
    return propType;
  }

  function getPostfixForTypeWarning(value) {
    var type = getPreciseType(value);
    switch (type) {
      case 'array':
      case 'object':
        return 'an ' + type;
      case 'boolean':
      case 'date':
      case 'regexp':
        return 'a ' + type;
      default:
        return type;
    }
  }

  function getClassName(propValue) {
    if (!propValue.constructor || !propValue.constructor.name) {
      return ANONYMOUS;
    }
    return propValue.constructor.name;
  }

  ReactPropTypes.checkPropTypes = checkPropTypes;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};
}, 1929, null, "prop-types/factoryWithTypeCheckers.js");
__d(/* prop-types/lib/ReactPropTypesSecret.js */function(global, require, module, exports) {

'use strict';

var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;
}, 1930, null, "prop-types/lib/ReactPropTypesSecret.js");
__d(/* prop-types/checkPropTypes.js */function(global, require, module, exports) {

'use strict';

if (process.env.NODE_ENV !== 'production') {
  var invariant = require(346                 ); // 346 = fbjs/lib/invariant
  var warning = require(335               ); // 335 = fbjs/lib/warning
  var ReactPropTypesSecret = require(1930                        ); // 1930 = ./lib/ReactPropTypesSecret
  var loggedTypeFailures = {};
}

function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
  if (process.env.NODE_ENV !== 'production') {
    for (var typeSpecName in typeSpecs) {
      if (typeSpecs.hasOwnProperty(typeSpecName)) {
        var error;

        try {
          invariant(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'the `prop-types` package, but received `%s`.', componentName || 'React class', location, typeSpecName, typeof typeSpecs[typeSpecName]);
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
          error = ex;
        }
        warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error);
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          loggedTypeFailures[error.message] = true;

          var stack = getStack ? getStack() : '';

          warning(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');
        }
      }
    }
  }
}

module.exports = checkPropTypes;
}, 1931, null, "prop-types/checkPropTypes.js");
__d(/* prop-types/factoryWithThrowingShims.js */function(global, require, module, exports) {

'use strict';

var emptyFunction = require(336                     ); // 336 = fbjs/lib/emptyFunction
var invariant = require(346                 ); // 346 = fbjs/lib/invariant
var ReactPropTypesSecret = require(1930                        ); // 1930 = ./lib/ReactPropTypesSecret

module.exports = function () {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret) {
      return;
    }
    invariant(false, 'Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use PropTypes.checkPropTypes() to call them. ' + 'Read more at http://fb.me/use-check-prop-types');
  };
  shim.isRequired = shim;
  function getShim() {
    return shim;
  };

  var ReactPropTypes = {
    array: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,

    any: shim,
    arrayOf: getShim,
    element: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim,
    exact: getShim
  };

  ReactPropTypes.checkPropTypes = emptyFunction;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};
}, 1932, null, "prop-types/factoryWithThrowingShims.js");
__d(/* react-native-tab-view/src/TabViewPropTypes.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SceneRendererPropType = exports.NavigationStatePropType = exports.NavigationRoutePropType = undefined;

var _propTypes = require(1928        ); // 1928 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactNative = require(334           ); // 334 = react-native

var NavigationRoutePropType = exports.NavigationRoutePropType = _propTypes2.default.shape({
  title: _propTypes2.default.string,
  key: _propTypes2.default.string.isRequired
});

var NavigationStatePropType = exports.NavigationStatePropType = _propTypes2.default.shape({
  routes: _propTypes2.default.arrayOf(NavigationRoutePropType).isRequired,
  index: _propTypes2.default.number.isRequired
});

var SceneRendererPropType = exports.SceneRendererPropType = {
  layout: _propTypes2.default.shape({
    measured: _propTypes2.default.bool.isRequired,
    height: _propTypes2.default.number.isRequired,
    width: _propTypes2.default.number.isRequired
  }).isRequired,
  navigationState: NavigationStatePropType.isRequired,
  position: _propTypes2.default.instanceOf(_reactNative.Animated.Value).isRequired,
  jumpToIndex: _propTypes2.default.func.isRequired,
  getLastPosition: _propTypes2.default.func.isRequired,
  subscribe: _propTypes2.default.func.isRequired
};
}, 1933, null, "react-native-tab-view/src/TabViewPropTypes.js");
__d(/* react-native-tab-view/src/TabViewPagerAndroid.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native-tab-view/src/TabViewPagerAndroid.js';

var _react = require(604    ); // 604 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(1928        ); // 1928 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactNative = require(334           ); // 334 = react-native

var _TabViewPropTypes = require(1933                ); // 1933 = ./TabViewPropTypes

var TabViewPagerAndroid = function (_PureComponent) {
  babelHelpers.inherits(TabViewPagerAndroid, _PureComponent);

  function TabViewPagerAndroid(props) {
    babelHelpers.classCallCheck(this, TabViewPagerAndroid);

    var _this = babelHelpers.possibleConstructorReturn(this, (TabViewPagerAndroid.__proto__ || Object.getPrototypeOf(TabViewPagerAndroid)).call(this, props));

    _this._isIdle = true;
    _this._currentIndex = 0;

    _this._getPageIndex = function (index) {
      return _reactNative.I18nManager.isRTL ? _this.props.navigationState.routes.length - (index + 1) : index;
    };

    _this._setPage = function (index) {
      if (_this._viewPager) {
        var page = _this._getPageIndex(index);
        if (_this.props.animationEnabled !== false) {
          _this._viewPager.setPage(page);
        } else {
          _this._viewPager.setPageWithoutAnimation(page);
        }
      }
    };

    _this._handlePageChange = function (index) {
      if (_this._isIdle && _this._currentIndex !== index) {
        _this._setPage(index);
        _this._currentIndex = index;
      }
    };

    _this._handlePageScroll = function (e) {
      _this.props.position.setValue(_this._getPageIndex(e.nativeEvent.position) + e.nativeEvent.offset * (_reactNative.I18nManager.isRTL ? -1 : 1));
    };

    _this._handlePageScrollStateChanged = function (e) {
      _this._isIdle = e === 'idle';
      _this.props.jumpToIndex(_this._currentIndex);
    };

    _this._handlePageSelected = function (e) {
      var index = _this._getPageIndex(e.nativeEvent.position);
      _this._currentIndex = index;
    };

    _this._setRef = function (el) {
      return _this._viewPager = el;
    };

    _this._currentIndex = _this.props.navigationState.index;
    return _this;
  }

  babelHelpers.createClass(TabViewPagerAndroid, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this._resetListener = this.props.subscribe('reset', this._handlePageChange);
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var _this2 = this;

      if (this.props.layout !== nextProps.layout || _react.Children.count(this.props.children) !== _react.Children.count(nextProps.children)) {
        global.requestAnimationFrame(function () {
          if (_this2._viewPager) {
            var navigationState = nextProps.navigationState;

            var page = _reactNative.I18nManager.isRTL ? navigationState.routes.length - (navigationState.index + 1) : navigationState.index;

            _this2._viewPager.setPageWithoutAnimation(page);
          }
        });
      }
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      this._handlePageChange(this.props.navigationState.index);
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this._resetListener.remove();
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          children = _props.children,
          navigationState = _props.navigationState,
          swipeEnabled = _props.swipeEnabled;

      var content = _react.Children.map(children, function (child, i) {
        return _react2.default.createElement(
          _reactNative.View,
          {
            key: navigationState.routes[i].key,
            testID: navigationState.routes[i].testID,
            style: styles.page,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 118
            }
          },
          child
        );
      });

      if (_reactNative.I18nManager.isRTL) {
        content.reverse();
      }

      var initialPage = this._getPageIndex(navigationState.index);

      return _react2.default.createElement(
        _reactNative.ViewPagerAndroid,
        {
          key: navigationState.routes.length,
          keyboardDismissMode: 'on-drag',
          initialPage: initialPage,
          scrollEnabled: swipeEnabled !== false,
          onPageScroll: this._handlePageScroll,
          onPageScrollStateChanged: this._handlePageScrollStateChanged,
          onPageSelected: this._handlePageSelected,
          style: styles.container,
          ref: this._setRef,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 134
          }
        },
        content
      );
    }
  }]);
  return TabViewPagerAndroid;
}(_react.PureComponent);

TabViewPagerAndroid.propTypes = babelHelpers.extends({}, _TabViewPropTypes.SceneRendererPropType, {
  animationEnabled: _propTypes2.default.bool,
  swipeEnabled: _propTypes2.default.bool,
  children: _propTypes2.default.node
});
exports.default = TabViewPagerAndroid;


var styles = _reactNative.StyleSheet.create({
  container: {
    flexGrow: 1
  },

  page: {
    overflow: 'hidden'
  }
});
}, 1934, null, "react-native-tab-view/src/TabViewPagerAndroid.js");
__d(/* react-native-tab-view/src/TabViewPagerScroll.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native-tab-view/src/TabViewPagerScroll.js';

var _react = require(604    ); // 604 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(1928        ); // 1928 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactNative = require(334           ); // 334 = react-native

var _TabViewPropTypes = require(1933                ); // 1933 = ./TabViewPropTypes

var TabViewPagerScroll = function (_PureComponent) {
  babelHelpers.inherits(TabViewPagerScroll, _PureComponent);

  function TabViewPagerScroll(props) {
    babelHelpers.classCallCheck(this, TabViewPagerScroll);

    var _this = babelHelpers.possibleConstructorReturn(this, (TabViewPagerScroll.__proto__ || Object.getPrototypeOf(TabViewPagerScroll)).call(this, props));

    _this._nextOffset = 0;
    _this._isIdle = true;

    _this._scrollTo = function (x) {
      var animated = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _this.props.animationEnabled !== false;

      _this._nextOffset = x;

      if (_this._isIdle && _this._scrollView) {
        _this._scrollView.scrollTo({
          x: x,
          animated: animated
        });
      }
    };

    _this._handleMomentumScrollEnd = function (e) {
      var nextIndex = Math.round(e.nativeEvent.contentOffset.x / _this.props.layout.width);
      _this._isIdle = true;
      _this.props.jumpToIndex(nextIndex);
    };

    _this._handleScroll = function (e) {
      _this._isIdle = e.nativeEvent.contentOffset.x === _this._nextOffset;
      _this.props.position.setValue(e.nativeEvent.contentOffset.x / _this.props.layout.width);
    };

    _this._setRef = function (el) {
      return _this._scrollView = el;
    };

    _this.state = {
      initialOffset: {
        x: _this.props.navigationState.index * _this.props.layout.width,
        y: 0
      }
    };
    return _this;
  }

  babelHelpers.createClass(TabViewPagerScroll, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this._scrollTo(this.props.navigationState.index * this.props.layout.width, false);
      this._resetListener = this.props.subscribe('reset', this._scrollTo);
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate(prevProps) {
      var _this2 = this;

      var amount = this.props.navigationState.index * this.props.layout.width;
      if (prevProps.navigationState !== this.props.navigationState || prevProps.layout !== this.props.layout) {
        if (_reactNative.Platform.OS === 'android' || prevProps.navigationState !== this.props.navigationState) {
          global.requestAnimationFrame(function () {
            return _this2._scrollTo(amount);
          });
        } else {
          this._scrollTo(amount, false);
        }
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this._resetListener.remove();
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          children = _props.children,
          layout = _props.layout,
          navigationState = _props.navigationState;

      return _react2.default.createElement(
        _reactNative.ScrollView,
        {
          horizontal: true,
          pagingEnabled: true,
          directionalLockEnabled: true,
          keyboardDismissMode: 'on-drag',
          keyboardShouldPersistTaps: 'always',
          scrollEnabled: this.props.swipeEnabled,
          automaticallyAdjustContentInsets: false,
          bounces: false,
          alwaysBounceHorizontal: false,
          scrollsToTop: false,
          showsHorizontalScrollIndicator: false,
          scrollEventThrottle: 16,
          onScroll: this._handleScroll,
          onMomentumScrollEnd: this._handleMomentumScrollEnd,
          contentOffset: this.state.initialOffset,
          style: styles.container,
          contentContainerStyle: layout.width ? null : styles.container,
          ref: this._setRef,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 114
          }
        },
        _react.Children.map(children, function (child, i) {
          return _react2.default.createElement(
            _reactNative.View,
            {
              key: navigationState.routes[i].key,
              testID: navigationState.routes[i].testID,
              style: layout.width ? { width: layout.width, overflow: 'hidden' } : i === navigationState.index ? styles.page : null,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 135
              }
            },
            i === navigationState.index || layout.width ? child : null
          );
        })
      );
    }
  }]);
  return TabViewPagerScroll;
}(_react.PureComponent);

TabViewPagerScroll.propTypes = babelHelpers.extends({}, _TabViewPropTypes.SceneRendererPropType, {
  animationEnabled: _propTypes2.default.bool,
  swipeEnabled: _propTypes2.default.bool,
  children: _propTypes2.default.node
});
exports.default = TabViewPagerScroll;


var styles = _reactNative.StyleSheet.create({
  container: {
    flexGrow: 1
  },

  page: {
    flex: 1,
    overflow: 'hidden'
  }
});
}, 1935, null, "react-native-tab-view/src/TabViewPagerScroll.js");
__d(/* react-native-tab-view/src/TabViewPagerPan.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native-tab-view/src/TabViewPagerPan.js';

var _react = require(604    ); // 604 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(1928        ); // 1928 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactNative = require(334           ); // 334 = react-native

var _TabViewPropTypes = require(1933                ); // 1933 = ./TabViewPropTypes

var DEAD_ZONE = 12;

var DefaultTransitionSpec = {
  timing: _reactNative.Animated.spring,
  tension: 300,
  friction: 35
};

var TabViewPagerPan = function (_PureComponent) {
  babelHelpers.inherits(TabViewPagerPan, _PureComponent);

  function TabViewPagerPan() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, TabViewPagerPan);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = TabViewPagerPan.__proto__ || Object.getPrototypeOf(TabViewPagerPan)).call.apply(_ref, [this].concat(args))), _this), _this._pendingIndex = null, _this._lastValue = null, _this._isMoving = null, _this._startDirection = 0, _this._isIndexInRange = function (index) {
      var routes = _this.props.navigationState.routes;

      return index >= 0 && index <= routes.length - 1;
    }, _this._isMovingHorizontally = function (evt, gestureState) {
      return Math.abs(gestureState.dx) > Math.abs(gestureState.dy * 3) && Math.abs(gestureState.vx) > Math.abs(gestureState.vy * 3);
    }, _this._isReverseDirection = function (gestureState) {
      if (_this._startDirection > 0) {
        return gestureState.vx < 0;
      } else {
        return gestureState.vx > 0;
      }
    }, _this._getNextIndex = function (evt, gestureState) {
      var currentIndex = typeof _this._pendingIndex === 'number' ? _this._pendingIndex : _this.props.navigationState.index;

      var swipeVelocityThreshold = _this.props.swipeVelocityThreshold;

      if (_reactNative.Platform.OS === 'android') {
        swipeVelocityThreshold /= 1000000;
      }

      if (Math.abs(gestureState.dx) > _this.props.swipeDistanceThreshold || Math.abs(gestureState.vx) > swipeVelocityThreshold) {
        var nextIndex = currentIndex - gestureState.dx / Math.abs(gestureState.dx) * (_reactNative.I18nManager.isRTL ? -1 : 1);
        if (_this._isIndexInRange(nextIndex)) {
          return nextIndex;
        }
      }
      return currentIndex;
    }, _this._canMoveScreen = function (evt, gestureState) {
      if (_this.props.swipeEnabled === false) {
        return false;
      }
      var _this$props$navigatio = _this.props.navigationState,
          routes = _this$props$navigatio.routes,
          index = _this$props$navigatio.index;

      var canMove = _this._isMovingHorizontally(evt, gestureState) && (gestureState.dx >= DEAD_ZONE && index >= 0 || gestureState.dx <= -DEAD_ZONE && index <= routes.length - 1);
      if (canMove) {
        _this._startDirection = gestureState.dx;
      }
      return canMove;
    }, _this._startGesture = function () {
      _this._lastValue = _this.props.getLastPosition();
      _this.props.position.stopAnimation();
    }, _this._respondToGesture = function (evt, gestureState) {
      var width = _this.props.layout.width;

      var currentPosition = typeof _this._lastValue === 'number' ? _this._lastValue : _this.props.navigationState.index;
      var nextPosition = currentPosition - gestureState.dx / width * (_reactNative.I18nManager.isRTL ? -1 : 1);
      if (_this._isMoving === null) {
        _this._isMoving = _this._isMovingHorizontally(evt, gestureState);
      }
      if (_this._isMoving && _this._isIndexInRange(nextPosition)) {
        _this.props.position.setValue(nextPosition);
      }
    }, _this._finishGesture = function (evt, gestureState) {
      var currentIndex = _this.props.navigationState.index;
      var currentValue = _this.props.getLastPosition();
      if (currentValue !== currentIndex) {
        if (_this._isMoving && !_this._isReverseDirection(gestureState)) {
          var nextIndex = _this._getNextIndex(evt, gestureState);
          _this._transitionTo(nextIndex);
        } else {
          _this._transitionTo(currentIndex);
        }
      }
      _this._lastValue = null;
      _this._isMoving = null;
    }, _this._transitionTo = function (toValue) {
      var lastPosition = _this.props.getLastPosition();
      var currentTransitionProps = {
        progress: lastPosition
      };
      var nextTransitionProps = {
        progress: toValue
      };

      _this._pendingIndex = toValue;

      if (_this.props.animationEnabled !== false) {
        var transitionSpec = _this.props.configureTransition(currentTransitionProps, nextTransitionProps);
        var timing = transitionSpec.timing,
            transitionConfig = babelHelpers.objectWithoutProperties(transitionSpec, ['timing']);


        timing(_this.props.position, babelHelpers.extends({}, transitionConfig, {
          toValue: toValue
        })).start(function (_ref2) {
          var finished = _ref2.finished;

          if (finished) {
            _this.props.jumpToIndex(toValue);
            _this._pendingIndex = null;
          }
        });
      } else {
        _this.props.position.setValue(toValue);
        _this.props.jumpToIndex(toValue);
        _this._pendingIndex = null;
      }
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(TabViewPagerPan, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      this._panResponder = _reactNative.PanResponder.create({
        onMoveShouldSetPanResponder: this._canMoveScreen,
        onMoveShouldSetPanResponderCapture: this._canMoveScreen,
        onPanResponderGrant: this._startGesture,
        onPanResponderMove: this._respondToGesture,
        onPanResponderTerminate: this._finishGesture,
        onPanResponderRelease: this._finishGesture,
        onPanResponderTerminationRequest: function onPanResponderTerminationRequest() {
          return true;
        }
      });
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      this._resetListener = this.props.subscribe('reset', this._transitionTo);
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate(prevProps) {
      if (prevProps.navigationState.index !== this.props.navigationState.index) {
        this._transitionTo(this.props.navigationState.index);
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this._resetListener.remove();
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          layout = _props.layout,
          position = _props.position,
          navigationState = _props.navigationState,
          children = _props.children;
      var width = layout.width;
      var routes = navigationState.routes;

      var inputRange = [-1].concat(babelHelpers.toConsumableArray(routes.map(function (x, i) {
        return i;
      })));
      var outputRange = inputRange.map(function (i) {
        return width * i * (_reactNative.I18nManager.isRTL ? 1 : -1);
      });

      var translateX = position.interpolate({
        inputRange: inputRange,
        outputRange: outputRange
      });

      return _react2.default.createElement(
        _reactNative.Animated.View,
        babelHelpers.extends({
          style: [styles.sheet, width ? { width: routes.length * width, transform: [{ translateX: translateX }] } : null]
        }, this._panResponder.panHandlers, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 275
          }
        }),
        _react.Children.map(children, function (child, i) {
          return _react2.default.createElement(
            _reactNative.View,
            {
              key: navigationState.routes[i].key,
              testID: navigationState.routes[i].testID,
              style: width ? { width: width } : i === navigationState.index ? _reactNative.StyleSheet.absoluteFill : null,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 285
              }
            },
            i === navigationState.index || width ? child : null
          );
        })
      );
    }
  }]);
  return TabViewPagerPan;
}(_react.PureComponent);

TabViewPagerPan.propTypes = babelHelpers.extends({}, _TabViewPropTypes.SceneRendererPropType, {
  configureTransition: _propTypes2.default.func.isRequired,
  animationEnabled: _propTypes2.default.bool,
  swipeEnabled: _propTypes2.default.bool,
  swipeDistanceThreshold: _propTypes2.default.number.isRequired,
  swipeVelocityThreshold: _propTypes2.default.number.isRequired,
  children: _propTypes2.default.node
});
TabViewPagerPan.defaultProps = {
  configureTransition: function configureTransition() {
    return DefaultTransitionSpec;
  },
  initialLayout: {
    height: 0,
    width: 0
  },
  swipeDistanceThreshold: 120,
  swipeVelocityThreshold: 0.25
};
exports.default = TabViewPagerPan;


var styles = _reactNative.StyleSheet.create({
  sheet: {
    flex: 1,
    flexDirection: 'row',
    alignItems: 'stretch'
  }
});
}, 1936, null, "react-native-tab-view/src/TabViewPagerPan.js");
__d(/* react-native-tab-view/src/TabBar.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native-tab-view/src/TabBar.js';

var _react = require(604    ); // 604 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(1928        ); // 1928 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactNative = require(334           ); // 334 = react-native

var _TouchableItem = require(1938             ); // 1938 = ./TouchableItem

var _TouchableItem2 = babelHelpers.interopRequireDefault(_TouchableItem);

var _TabViewPropTypes = require(1933                ); // 1933 = ./TabViewPropTypes

var TabBar = function (_PureComponent) {
  babelHelpers.inherits(TabBar, _PureComponent);

  function TabBar(props) {
    babelHelpers.classCallCheck(this, TabBar);

    var _this = babelHelpers.possibleConstructorReturn(this, (TabBar.__proto__ || Object.getPrototypeOf(TabBar)).call(this, props));

    _initialiseProps.call(_this);

    var initialVisibility = 0;

    if (_this.props.scrollEnabled === true) {
      var tabWidth = _this._getTabWidthFromStyle(_this.props.tabStyle);
      if (_this.props.layout.width || tabWidth) {
        initialVisibility = 1;
      }
    } else {
      initialVisibility = 1;
    }

    _this.state = {
      offset: new _reactNative.Animated.Value(0),
      visibility: new _reactNative.Animated.Value(initialVisibility),
      initialOffset: {
        x: _this._getScrollAmount(_this.props, _this.props.navigationState.index),
        y: 0
      }
    };
    return _this;
  }

  babelHelpers.createClass(TabBar, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this._adjustScroll(this.props.navigationState.index);
      this._positionListener = this.props.subscribe('position', this._adjustScroll);
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (this.props.navigationState !== nextProps.navigationState) {
        this._resetScrollOffset(nextProps);
      }

      var nextTabWidth = this._getTabWidthFromStyle(nextProps.tabStyle);

      if (this.props.tabStyle !== nextProps.tabStyle && nextTabWidth || this.props.layout.width !== nextProps.layout.width && nextProps.layout.width) {
        this.state.visibility.setValue(1);
      }
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate(prevProps) {
      var _this2 = this;

      if (this.props.scrollEnabled && (prevProps.layout !== this.props.layout || prevProps.tabStyle !== this.props.tabStyle)) {
        global.requestAnimationFrame(function () {
          return _this2._adjustScroll(_this2.props.navigationState.index);
        });
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this._positionListener.remove();
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      var _props = this.props,
          position = _props.position,
          navigationState = _props.navigationState,
          scrollEnabled = _props.scrollEnabled;
      var routes = navigationState.routes,
          index = navigationState.index;

      var maxDistance = this._getMaxScrollableDistance(this.props);
      var finalTabWidth = this._getFinalTabWidth(this.props);
      var tabBarWidth = finalTabWidth * routes.length;

      var inputRange = [-1].concat(babelHelpers.toConsumableArray(routes.map(function (x, i) {
        return i;
      })));
      var translateOutputRange = inputRange.map(function (i) {
        return _this3._getScrollAmount(_this3.props, i) * -1;
      });

      var translateX = _reactNative.Animated.add(position.interpolate({
        inputRange: inputRange,
        outputRange: translateOutputRange
      }), this.state.offset).interpolate({
        inputRange: [-maxDistance, 0],
        outputRange: [-maxDistance, 0],
        extrapolate: 'clamp'
      });

      return _react2.default.createElement(
        _reactNative.Animated.View,
        { style: [styles.tabBar, this.props.style], __source: {
            fileName: _jsxFileName,
            lineNumber: 354
          }
        },
        _react2.default.createElement(
          _reactNative.Animated.View,
          {
            pointerEvents: 'none',
            style: [styles.indicatorContainer, scrollEnabled ? { width: tabBarWidth, transform: [{ translateX: translateX }] } : null],
            __source: {
              fileName: _jsxFileName,
              lineNumber: 355
            }
          },
          this._renderIndicator(babelHelpers.extends({}, this.props, {
            width: new _reactNative.Animated.Value(finalTabWidth)
          }))
        ),
        _react2.default.createElement(
          _reactNative.View,
          { style: styles.scroll, __source: {
              fileName: _jsxFileName,
              lineNumber: 369
            }
          },
          _react2.default.createElement(
            _reactNative.ScrollView,
            {
              horizontal: true,
              scrollEnabled: scrollEnabled,
              bounces: false,
              alwaysBounceHorizontal: false,
              scrollsToTop: false,
              showsHorizontalScrollIndicator: false,
              automaticallyAdjustContentInsets: false,
              overScrollMode: 'never',
              contentContainerStyle: [styles.tabContent, scrollEnabled ? null : styles.container],
              scrollEventThrottle: 16,
              onScroll: this._handleScroll,
              onScrollBeginDrag: this._handleBeginDrag,
              onScrollEndDrag: this._handleEndDrag,
              onMomentumScrollBegin: this._handleMomentumScrollBegin,
              onMomentumScrollEnd: this._handleMomentumScrollEnd,
              contentOffset: this.state.initialOffset,
              ref: this._setRef,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 370
              }
            },
            routes.map(function (route, i) {
              var focused = index === i;
              var outputRange = inputRange.map(function (inputIndex) {
                return inputIndex === i ? 1 : 0.7;
              });
              var opacity = _reactNative.Animated.multiply(_this3.state.visibility, position.interpolate({
                inputRange: inputRange,
                outputRange: outputRange
              }));
              var scene = {
                route: route,
                focused: focused,
                index: i
              };
              var label = _this3._renderLabel(scene);
              var icon = _this3.props.renderIcon ? _this3.props.renderIcon(scene) : null;
              var badge = _this3.props.renderBadge ? _this3.props.renderBadge(scene) : null;

              var tabStyle = {};

              tabStyle.opacity = opacity;

              if (icon) {
                if (label) {
                  tabStyle.paddingTop = 8;
                } else {
                  tabStyle.padding = 12;
                }
              }

              var passedTabStyle = _reactNative.StyleSheet.flatten(_this3.props.tabStyle);
              var isWidthSet = passedTabStyle && typeof passedTabStyle.width !== 'undefined' || scrollEnabled === true;
              var tabContainerStyle = {};

              if (isWidthSet) {
                tabStyle.width = finalTabWidth;
              }

              if (passedTabStyle && typeof passedTabStyle.flex === 'number') {
                tabContainerStyle.flex = passedTabStyle.flex;
              } else if (!isWidthSet) {
                tabContainerStyle.flex = 1;
              }

              var accessibilityLabel = route.accessibilityLabel || route.title;

              return _react2.default.createElement(
                _TouchableItem2.default,
                {
                  borderless: true,
                  key: route.key,
                  testID: route.testID,
                  accessible: route.accessible,
                  accessibilityLabel: accessibilityLabel,
                  accessibilityTraits: 'button',
                  pressColor: _this3.props.pressColor,
                  pressOpacity: _this3.props.pressOpacity,
                  delayPressIn: 0,
                  onPress: function onPress() {
                    var _props2 = _this3.props,
                        onTabPress = _props2.onTabPress,
                        jumpToIndex = _props2.jumpToIndex;

                    jumpToIndex(i);
                    if (onTabPress) {
                      onTabPress(scene);
                    }
                  },
                  style: tabContainerStyle,
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 450
                  }
                },
                _react2.default.createElement(
                  _reactNative.View,
                  { style: styles.container, __source: {
                      fileName: _jsxFileName,
                      lineNumber: 470
                    }
                  },
                  _react2.default.createElement(
                    _reactNative.Animated.View,
                    {
                      style: [styles.tabItem, tabStyle, passedTabStyle, styles.container],
                      __source: {
                        fileName: _jsxFileName,
                        lineNumber: 471
                      }
                    },
                    icon,
                    label
                  ),
                  badge ? _react2.default.createElement(
                    _reactNative.Animated.View,
                    {
                      style: [styles.badge, { opacity: _this3.state.visibility }],
                      __source: {
                        fileName: _jsxFileName,
                        lineNumber: 483
                      }
                    },
                    badge
                  ) : null
                )
              );
            })
          )
        )
      );
    }
  }]);
  return TabBar;
}(_react.PureComponent);

TabBar.propTypes = babelHelpers.extends({}, _TabViewPropTypes.SceneRendererPropType, {
  scrollEnabled: _propTypes2.default.bool,
  pressColor: _TouchableItem2.default.propTypes.pressColor,
  pressOpacity: _TouchableItem2.default.propTypes.pressOpacity,
  getLabelText: _propTypes2.default.func,
  renderIcon: _propTypes2.default.func,
  renderLabel: _propTypes2.default.func,
  renderIndicator: _propTypes2.default.func,
  onTabPress: _propTypes2.default.func,
  labelStyle: _reactNative.Text.propTypes.style,
  style: _propTypes2.default.any
});
TabBar.defaultProps = {
  getLabelText: function getLabelText(_ref) {
    var route = _ref.route;
    return route.title ? route.title.toUpperCase() : null;
  }
};

var _initialiseProps = function _initialiseProps() {
  var _this4 = this;

  this._isManualScroll = false;
  this._isMomentumScroll = false;

  this._renderLabel = function (scene) {
    if (typeof _this4.props.renderLabel !== 'undefined') {
      return _this4.props.renderLabel(scene);
    }
    var label = _this4.props.getLabelText(scene);
    if (typeof label !== 'string') {
      return null;
    }
    return _react2.default.createElement(
      _reactNative.Text,
      { style: [styles.tabLabel, _this4.props.labelStyle], __source: {
          fileName: _jsxFileName,
          lineNumber: 162
        }
      },
      label
    );
  };

  this._renderIndicator = function (props) {
    if (typeof _this4.props.renderIndicator !== 'undefined') {
      return _this4.props.renderIndicator(props);
    }
    var width = props.width,
        position = props.position;

    var translateX = _reactNative.Animated.multiply(_reactNative.Animated.multiply(position, width), _reactNative.I18nManager.isRTL ? -1 : 1);
    return _react2.default.createElement(_reactNative.Animated.View, {
      style: [styles.indicator, { width: width, transform: [{ translateX: translateX }] }, _this4.props.indicatorStyle],
      __source: {
        fileName: _jsxFileName,
        lineNumber: 176
      }
    });
  };

  this._getTabWidthFromStyle = function (style) {
    if (_this4._tabWidthCache && _this4._tabWidthCache.style === style) {
      return _this4._tabWidthCache.width;
    }
    var passedTabStyle = _reactNative.StyleSheet.flatten(_this4.props.tabStyle);
    var cache = {
      style: style,
      width: passedTabStyle ? passedTabStyle.width : null
    };
    _this4._tabWidthCache = cache;
    return cache;
  };

  this._getFinalTabWidth = function (props) {
    var layout = props.layout,
        navigationState = props.navigationState;

    var tabWidth = _this4._getTabWidthFromStyle(props.tabStyle);
    if (typeof tabWidth === 'number') {
      return tabWidth;
    }
    if (typeof tabWidth === 'string' && tabWidth.endsWith('%')) {
      return layout.width * (parseFloat(tabWidth, 10) / 100);
    }
    if (props.scrollEnabled) {
      return layout.width / 5 * 2;
    }
    return layout.width / navigationState.routes.length;
  };

  this._getMaxScrollableDistance = function (props) {
    var layout = props.layout,
        navigationState = props.navigationState;

    if (layout.width === 0) {
      return 0;
    }
    var finalTabWidth = _this4._getFinalTabWidth(props);
    var tabBarWidth = finalTabWidth * navigationState.routes.length;
    var maxDistance = tabBarWidth - layout.width;
    return Math.max(maxDistance, 0);
  };

  this._normalizeScrollValue = function (props, value) {
    var maxDistance = _this4._getMaxScrollableDistance(props);
    return Math.max(Math.min(value, maxDistance), 0);
  };

  this._getScrollAmount = function (props, i) {
    var layout = props.layout;

    var finalTabWidth = _this4._getFinalTabWidth(props);
    var centerDistance = finalTabWidth * i + finalTabWidth / 2;
    var scrollAmount = centerDistance - layout.width / 2;
    return _this4._normalizeScrollValue(props, scrollAmount);
  };

  this._resetScrollOffset = function (props) {
    if (!props.scrollEnabled || !_this4._scrollView) {
      return;
    }

    var scrollAmount = _this4._getScrollAmount(props, props.navigationState.index);
    _this4._scrollView.scrollTo({
      x: scrollAmount,
      animated: true
    });
    _reactNative.Animated.timing(_this4.state.offset, {
      toValue: 0,
      duration: 150
    }).start();
  };

  this._adjustScroll = function (index) {
    if (!_this4.props.scrollEnabled || !_this4._scrollView) {
      return;
    }

    var scrollAmount = _this4._getScrollAmount(_this4.props, index);
    _this4._scrollView.scrollTo({
      x: scrollAmount,
      animated: false
    });
  };

  this._adjustOffset = function (value) {
    if (!_this4._isManualScroll || !_this4.props.scrollEnabled) {
      return;
    }

    var scrollAmount = _this4._getScrollAmount(_this4.props, _this4.props.navigationState.index);
    var scrollOffset = value - scrollAmount;

    if (_this4._isMomentumScroll) {
      _reactNative.Animated.spring(_this4.state.offset, {
        toValue: -scrollOffset,
        tension: 300,
        friction: 35
      }).start();
    } else {
      _this4.state.offset.setValue(-scrollOffset);
    }
  };

  this._handleScroll = function (e) {
    _this4._adjustOffset(e.nativeEvent.contentOffset.x);
  };

  this._handleBeginDrag = function () {
    _this4._isManualScroll = true;
    _this4._isMomentumScroll = false;
  };

  this._handleEndDrag = function () {
    global.requestAnimationFrame(function () {
      if (_this4._isMomentumScroll) {
        return;
      }
      _this4._isManualScroll = false;
    });
  };

  this._handleMomentumScrollBegin = function () {
    _this4._isMomentumScroll = true;
  };

  this._handleMomentumScrollEnd = function () {
    _this4._isMomentumScroll = false;
    _this4._isManualScroll = false;
  };

  this._setRef = function (el) {
    return _this4._scrollView = el;
  };
};

exports.default = TabBar;


var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1
  },
  scroll: {
    overflow: _reactNative.Platform.OS === 'web' ? 'auto' : 'scroll'
  },
  tabBar: {
    backgroundColor: '#2196f3',
    elevation: 4,
    shadowColor: 'black',
    shadowOpacity: 0.1,
    shadowRadius: _reactNative.StyleSheet.hairlineWidth,
    shadowOffset: {
      height: _reactNative.StyleSheet.hairlineWidth
    },
    zIndex: 1
  },
  tabContent: {
    flexDirection: 'row',
    flexWrap: 'nowrap'
  },
  tabLabel: {
    backgroundColor: 'transparent',
    color: 'white',
    margin: 8
  },
  tabItem: {
    flexGrow: 1,
    padding: 8,
    alignItems: 'center',
    justifyContent: 'center'
  },
  badge: {
    position: 'absolute',
    top: 0,
    right: 0
  },
  indicatorContainer: {
    position: 'absolute',
    top: 0,
    left: 0,
    right: 0,
    bottom: 0
  },
  indicator: {
    backgroundColor: '#ffeb3b',
    position: 'absolute',
    left: 0,
    bottom: 0,
    right: 0,
    height: 2
  }
});
}, 1937, null, "react-native-tab-view/src/TabBar.js");
__d(/* react-native-tab-view/src/TouchableItem.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native-tab-view/src/TouchableItem.js';

var _react = require(604    ); // 604 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(1928        ); // 1928 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactNative = require(334           ); // 334 = react-native

var LOLLIPOP = 21;

var TouchableItem = function (_PureComponent) {
  babelHelpers.inherits(TouchableItem, _PureComponent);

  function TouchableItem() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, TouchableItem);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = TouchableItem.__proto__ || Object.getPrototypeOf(TouchableItem)).call.apply(_ref, [this].concat(args))), _this), _this._handlePress = function () {
      global.requestAnimationFrame(_this.props.onPress);
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(TouchableItem, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          style = _props.style,
          pressOpacity = _props.pressOpacity,
          pressColor = _props.pressColor,
          borderless = _props.borderless,
          rest = babelHelpers.objectWithoutProperties(_props, ['style', 'pressOpacity', 'pressColor', 'borderless']);


      if (_reactNative.Platform.OS === 'android' && _reactNative.Platform.Version >= LOLLIPOP) {
        return _react2.default.createElement(
          _reactNative.TouchableNativeFeedback,
          babelHelpers.extends({}, rest, {
            onPress: this._handlePress,
            background: _reactNative.TouchableNativeFeedback.Ripple(pressColor, borderless),
            __source: {
              fileName: _jsxFileName,
              lineNumber: 54
            }
          }),
          _react2.default.createElement(
            _reactNative.View,
            { style: style, __source: {
                fileName: _jsxFileName,
                lineNumber: 59
              }
            },
            _react.Children.only(this.props.children)
          )
        );
      } else {
        return _react2.default.createElement(
          _reactNative.TouchableOpacity,
          babelHelpers.extends({}, rest, {
            onPress: this._handlePress,
            style: style,
            activeOpacity: pressOpacity,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 66
            }
          }),
          this.props.children
        );
      }
    }
  }]);
  return TouchableItem;
}(_react.PureComponent);

TouchableItem.propTypes = {
  onPress: _propTypes2.default.func.isRequired,
  delayPressIn: _propTypes2.default.number,
  borderless: _propTypes2.default.bool,
  pressColor: _propTypes2.default.string,
  pressOpacity: _propTypes2.default.number,
  children: _propTypes2.default.node.isRequired
};
TouchableItem.defaultProps = {
  pressColor: 'rgba(255, 255, 255, .4)'
};
exports.default = TouchableItem;
}, 1938, null, "react-native-tab-view/src/TouchableItem.js");
__d(/* react-native-tab-view/src/SceneMap.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native-tab-view/src/SceneMap.js';
exports.default = SceneMap;

var _react = require(604    ); // 604 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

function SceneMap(scenes) {
  var SceneComponent = function (_PureComponent) {
    babelHelpers.inherits(SceneComponent, _PureComponent);

    function SceneComponent() {
      babelHelpers.classCallCheck(this, SceneComponent);
      return babelHelpers.possibleConstructorReturn(this, (SceneComponent.__proto__ || Object.getPrototypeOf(SceneComponent)).apply(this, arguments));
    }

    babelHelpers.createClass(SceneComponent, [{
      key: 'render',
      value: function render() {
        return _react2.default.createElement(scenes[this.props.route.key], this.props);
      }
    }]);
    return SceneComponent;
  }(_react.PureComponent);

  return function (_ref) {
    var route = _ref.route;
    return _react2.default.createElement(SceneComponent, { key: route.key, route: route, __source: {
        fileName: _jsxFileName,
        lineNumber: 13
      }
    });
  };
}
}, 1939, null, "react-native-tab-view/src/SceneMap.js");
__d(/* react-navigation/src/withCachedChildNavigation.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-navigation/src/withCachedChildNavigation.js';
exports.default = withCachedChildNavigation;

var _react = require(604    ); // 604 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _addNavigationHelpers = require(1888                    ); // 1888 = ./addNavigationHelpers

var _addNavigationHelpers2 = babelHelpers.interopRequireDefault(_addNavigationHelpers);

function withCachedChildNavigation(Comp) {
  var _class, _temp2;

  return _temp2 = _class = function (_PureComponent) {
    babelHelpers.inherits(_class, _PureComponent);

    function _class() {
      var _ref;

      var _temp, _this, _ret;

      babelHelpers.classCallCheck(this, _class);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = _class.__proto__ || Object.getPrototypeOf(_class)).call.apply(_ref, [this].concat(args))), _this), _this._updateNavigationProps = function (navigation) {
        if (!_this._childNavigationProps) {
          _this._childNavigationProps = {};
        }
        navigation.state.routes.forEach(function (route) {
          var childNavigation = _this._childNavigationProps[route.key];
          if (childNavigation && childNavigation.state === route) {
            return;
          }
          _this._childNavigationProps[route.key] = (0, _addNavigationHelpers2.default)(babelHelpers.extends({}, navigation, {
            state: route
          }));
        });
      }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
    }

    babelHelpers.createClass(_class, [{
      key: 'componentWillMount',
      value: function componentWillMount() {
        this._updateNavigationProps(this.props.navigation);
      }
    }, {
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(nextProps) {
        this._updateNavigationProps(nextProps.navigation);
      }
    }, {
      key: 'render',
      value: function render() {
        return _react2.default.createElement(Comp, babelHelpers.extends({}, this.props, {
          childNavigationProps: this._childNavigationProps,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 59
          }
        }));
      }
    }]);
    return _class;
  }(_react.PureComponent), _class.displayName = 'withCachedChildNavigation(' + (Comp.displayName || Comp.name) + ')', _temp2;
}
}, 1940, null, "react-navigation/src/withCachedChildNavigation.js");
__d(/* react-navigation/src/views/TabView/TabBarTop.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-navigation/src/views/TabView/TabBarTop.js';

var _react = require(604    ); // 604 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(334           ); // 334 = react-native

var _reactNativeTabView = require(1926                   ); // 1926 = react-native-tab-view

var _TabBarIcon = require(1942          ); // 1942 = ./TabBarIcon

var _TabBarIcon2 = babelHelpers.interopRequireDefault(_TabBarIcon);

var TabBarTop = function (_PureComponent) {
  babelHelpers.inherits(TabBarTop, _PureComponent);

  function TabBarTop() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, TabBarTop);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = TabBarTop.__proto__ || Object.getPrototypeOf(TabBarTop)).call.apply(_ref, [this].concat(args))), _this), _this._renderLabel = function (scene) {
      var _this$props = _this.props,
          position = _this$props.position,
          navigation = _this$props.navigation,
          activeTintColor = _this$props.activeTintColor,
          inactiveTintColor = _this$props.inactiveTintColor,
          showLabel = _this$props.showLabel,
          upperCaseLabel = _this$props.upperCaseLabel,
          labelStyle = _this$props.labelStyle;

      if (showLabel === false) {
        return null;
      }
      var index = scene.index;
      var routes = navigation.state.routes;

      var inputRange = [-1].concat(babelHelpers.toConsumableArray(routes.map(function (x, i) {
        return i;
      })));
      var outputRange = inputRange.map(function (inputIndex) {
        return inputIndex === index ? activeTintColor : inactiveTintColor;
      });
      var color = position.interpolate({
        inputRange: inputRange,
        outputRange: outputRange
      });

      var tintColor = scene.focused ? activeTintColor : inactiveTintColor;
      var label = _this.props.getLabel(babelHelpers.extends({}, scene, { tintColor: tintColor }));
      if (typeof label === 'string') {
        return _react2.default.createElement(
          _reactNative.Animated.Text,
          { style: [styles.label, { color: color }, labelStyle], __source: {
              fileName: _jsxFileName,
              lineNumber: 81
            }
          },
          upperCaseLabel ? label.toUpperCase() : label
        );
      }
      if (typeof label === 'function') {
        return label(babelHelpers.extends({}, scene, { tintColor: tintColor }));
      }

      return label;
    }, _this._renderIcon = function (scene) {
      var _this$props2 = _this.props,
          position = _this$props2.position,
          navigation = _this$props2.navigation,
          activeTintColor = _this$props2.activeTintColor,
          inactiveTintColor = _this$props2.inactiveTintColor,
          renderIcon = _this$props2.renderIcon,
          showIcon = _this$props2.showIcon,
          iconStyle = _this$props2.iconStyle;

      if (showIcon === false) {
        return null;
      }
      return _react2.default.createElement(_TabBarIcon2.default, {
        position: position,
        navigation: navigation,
        activeTintColor: activeTintColor,
        inactiveTintColor: inactiveTintColor,
        renderIcon: renderIcon,
        scene: scene,
        style: [styles.icon, iconStyle],
        __source: {
          fileName: _jsxFileName,
          lineNumber: 107
        }
      });
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(TabBarTop, [{
    key: 'render',
    value: function render() {
      var props = this.props;

      return _react2.default.createElement(_reactNativeTabView.TabBar, babelHelpers.extends({}, props, {
        renderIcon: this._renderIcon,
        renderLabel: this._renderLabel,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 124
        }
      }));
    }
  }]);
  return TabBarTop;
}(_react.PureComponent);

TabBarTop.defaultProps = {
  activeTintColor: '#fff',
  inactiveTintColor: '#fff',
  showIcon: false,
  showLabel: true,
  upperCaseLabel: true
};
exports.default = TabBarTop;


var styles = _reactNative.StyleSheet.create({
  icon: {
    height: 24,
    width: 24
  },
  label: {
    textAlign: 'center',
    fontSize: 13,
    margin: 8,
    backgroundColor: 'transparent'
  }
});
}, 1941, null, "react-navigation/src/views/TabView/TabBarTop.js");
__d(/* react-navigation/src/views/TabView/TabBarIcon.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-navigation/src/views/TabView/TabBarIcon.js';

var _react = require(604    ); // 604 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(334           ); // 334 = react-native

var TabBarIcon = function (_PureComponent) {
  babelHelpers.inherits(TabBarIcon, _PureComponent);

  function TabBarIcon() {
    babelHelpers.classCallCheck(this, TabBarIcon);
    return babelHelpers.possibleConstructorReturn(this, (TabBarIcon.__proto__ || Object.getPrototypeOf(TabBarIcon)).apply(this, arguments));
  }

  babelHelpers.createClass(TabBarIcon, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          position = _props.position,
          scene = _props.scene,
          navigation = _props.navigation,
          activeTintColor = _props.activeTintColor,
          inactiveTintColor = _props.inactiveTintColor,
          style = _props.style;
      var route = scene.route,
          index = scene.index;
      var routes = navigation.state.routes;

      var inputRange = [-1].concat(babelHelpers.toConsumableArray(routes.map(function (x, i) {
        return i;
      })));
      var activeOpacity = position.interpolate({
        inputRange: inputRange,
        outputRange: inputRange.map(function (i) {
          return i === index ? 1 : 0;
        })
      });
      var inactiveOpacity = position.interpolate({
        inputRange: inputRange,
        outputRange: inputRange.map(function (i) {
          return i === index ? 0 : 1;
        })
      });

      return _react2.default.createElement(
        _reactNative.View,
        { style: style, __source: {
            fileName: _jsxFileName,
            lineNumber: 52
          }
        },
        _react2.default.createElement(
          _reactNative.Animated.View,
          { style: [styles.icon, { opacity: activeOpacity }], __source: {
              fileName: _jsxFileName,
              lineNumber: 53
            }
          },
          this.props.renderIcon({
            route: route,
            index: index,
            focused: true,
            tintColor: activeTintColor
          })
        ),
        _react2.default.createElement(
          _reactNative.Animated.View,
          { style: [styles.icon, { opacity: inactiveOpacity }], __source: {
              fileName: _jsxFileName,
              lineNumber: 61
            }
          },
          this.props.renderIcon({
            route: route,
            index: index,
            focused: false,
            tintColor: inactiveTintColor
          })
        )
      );
    }
  }]);
  return TabBarIcon;
}(_react.PureComponent);

exports.default = TabBarIcon;


var styles = _reactNative.StyleSheet.create({
  icon: {
    position: 'absolute',
    top: 0,
    left: 0,
    right: 0,
    bottom: 0,
    alignItems: 'center',
    justifyContent: 'center'
  }
});
}, 1942, null, "react-navigation/src/views/TabView/TabBarIcon.js");
__d(/* react-navigation/src/views/TabView/TabBarBottom.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-navigation/src/views/TabView/TabBarBottom.js';

var _react = require(604    ); // 604 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(334           ); // 334 = react-native

var _TabBarIcon = require(1942          ); // 1942 = ./TabBarIcon

var _TabBarIcon2 = babelHelpers.interopRequireDefault(_TabBarIcon);

var TabBarBottom = function (_PureComponent) {
  babelHelpers.inherits(TabBarBottom, _PureComponent);

  function TabBarBottom() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, TabBarBottom);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = TabBarBottom.__proto__ || Object.getPrototypeOf(TabBarBottom)).call.apply(_ref, [this].concat(args))), _this), _this._renderLabel = function (scene) {
      var _this$props = _this.props,
          position = _this$props.position,
          navigation = _this$props.navigation,
          activeTintColor = _this$props.activeTintColor,
          inactiveTintColor = _this$props.inactiveTintColor,
          labelStyle = _this$props.labelStyle,
          showLabel = _this$props.showLabel;

      if (showLabel === false) {
        return null;
      }
      var index = scene.index;
      var routes = navigation.state.routes;

      var inputRange = [-1].concat(babelHelpers.toConsumableArray(routes.map(function (x, i) {
        return i;
      })));
      var outputRange = inputRange.map(function (inputIndex) {
        return inputIndex === index ? activeTintColor : inactiveTintColor;
      });
      var color = position.interpolate({
        inputRange: inputRange,
        outputRange: outputRange
      });

      var tintColor = scene.focused ? activeTintColor : inactiveTintColor;
      var label = _this.props.getLabel(babelHelpers.extends({}, scene, { tintColor: tintColor }));
      if (typeof label === 'string') {
        return _react2.default.createElement(
          _reactNative.Animated.Text,
          { style: [styles.label, { color: color }, labelStyle], __source: {
              fileName: _jsxFileName,
              lineNumber: 84
            }
          },
          label
        );
      }

      if (typeof label === 'function') {
        return label(babelHelpers.extends({}, scene, { tintColor: tintColor }));
      }

      return label;
    }, _this._renderIcon = function (scene) {
      var _this$props2 = _this.props,
          position = _this$props2.position,
          navigation = _this$props2.navigation,
          activeTintColor = _this$props2.activeTintColor,
          inactiveTintColor = _this$props2.inactiveTintColor,
          renderIcon = _this$props2.renderIcon,
          showIcon = _this$props2.showIcon;

      if (showIcon === false) {
        return null;
      }
      return _react2.default.createElement(_TabBarIcon2.default, {
        position: position,
        navigation: navigation,
        activeTintColor: activeTintColor,
        inactiveTintColor: inactiveTintColor,
        renderIcon: renderIcon,
        scene: scene,
        style: styles.icon,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 110
        }
      });
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(TabBarBottom, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          position = _props.position,
          navigation = _props.navigation,
          jumpToIndex = _props.jumpToIndex,
          activeBackgroundColor = _props.activeBackgroundColor,
          inactiveBackgroundColor = _props.inactiveBackgroundColor,
          style = _props.style;
      var routes = navigation.state.routes;

      var inputRange = [-1].concat(babelHelpers.toConsumableArray(routes.map(function (x, i) {
        return i;
      })));
      return _react2.default.createElement(
        _reactNative.Animated.View,
        { style: [styles.tabBar, style], __source: {
            fileName: _jsxFileName,
            lineNumber: 135
          }
        },
        routes.map(function (route, index) {
          var focused = index === navigation.state.index;
          var scene = { route: route, index: index, focused: focused };
          var outputRange = inputRange.map(function (inputIndex) {
            return inputIndex === index ? activeBackgroundColor : inactiveBackgroundColor;
          });
          var backgroundColor = position.interpolate({
            inputRange: inputRange,
            outputRange: outputRange
          });
          var justifyContent = _this2.props.showIcon ? 'flex-end' : 'center';
          return _react2.default.createElement(
            _reactNative.TouchableWithoutFeedback,
            {
              key: route.key,
              onPress: function onPress() {
                return jumpToIndex(index);
              },
              __source: {
                fileName: _jsxFileName,
                lineNumber: 151
              }
            },
            _react2.default.createElement(
              _reactNative.Animated.View,
              {
                style: [styles.tab, { backgroundColor: backgroundColor, justifyContent: justifyContent }],
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 155
                }
              },
              _this2._renderIcon(scene),
              _this2._renderLabel(scene)
            )
          );
        })
      );
    }
  }]);
  return TabBarBottom;
}(_react.PureComponent);

TabBarBottom.defaultProps = {
  activeTintColor: '#3478f6',
  activeBackgroundColor: 'transparent',
  inactiveTintColor: '#929292',
  inactiveBackgroundColor: 'transparent',
  showLabel: true,
  showIcon: true
};
exports.default = TabBarBottom;


var styles = _reactNative.StyleSheet.create({
  tabBar: {
    height: 49,
    flexDirection: 'row',
    borderTopWidth: _reactNative.StyleSheet.hairlineWidth,
    borderTopColor: 'rgba(0, 0, 0, .2)',
    backgroundColor: '#f4f4f4' },
  tab: {
    flex: 1,
    alignItems: 'stretch',
    justifyContent: 'flex-end'
  },
  icon: {
    flexGrow: 1
  },
  label: {
    textAlign: 'center',
    fontSize: 10,
    marginBottom: 1.5,
    backgroundColor: 'transparent'
  }
});
}, 1943, null, "react-navigation/src/views/TabView/TabBarBottom.js");
__d(/* react-navigation/src/navigators/DrawerNavigator.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-navigation/src/navigators/DrawerNavigator.js';

var _react = require(604    ); // 604 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(334           ); // 334 = react-native

var _createNavigator = require(1890               ); // 1890 = ./createNavigator

var _createNavigator2 = babelHelpers.interopRequireDefault(_createNavigator);

var _createNavigationContainer = require(1885                          ); // 1885 = ../createNavigationContainer

var _createNavigationContainer2 = babelHelpers.interopRequireDefault(_createNavigationContainer);

var _TabRouter = require(1924                  ); // 1924 = ../routers/TabRouter

var _TabRouter2 = babelHelpers.interopRequireDefault(_TabRouter);

var _DrawerScreen = require(1945                          ); // 1945 = ../views/Drawer/DrawerScreen

var _DrawerScreen2 = babelHelpers.interopRequireDefault(_DrawerScreen);

var _DrawerView = require(1946                        ); // 1946 = ../views/Drawer/DrawerView

var _DrawerView2 = babelHelpers.interopRequireDefault(_DrawerView);

var _DrawerNavigatorItems = require(1949                                  ); // 1949 = ../views/Drawer/DrawerNavigatorItems

var _DrawerNavigatorItems2 = babelHelpers.interopRequireDefault(_DrawerNavigatorItems);

var _NavigatorTypes = require(1922              ); // 1922 = ./NavigatorTypes

var _NavigatorTypes2 = babelHelpers.interopRequireDefault(_NavigatorTypes);

var DefaultDrawerConfig = {
  drawerWidth: _reactNative.Dimensions.get('window').width - (_reactNative.Platform.OS === 'android' ? 56 : 64),
  contentComponent: _DrawerNavigatorItems2.default,
  drawerPosition: 'left'
};

var DrawerNavigator = function DrawerNavigator(routeConfigs, config) {
  var mergedConfig = babelHelpers.extends({}, DefaultDrawerConfig, config);
  var containerConfig = mergedConfig.containerConfig,
      drawerWidth = mergedConfig.drawerWidth,
      contentComponent = mergedConfig.contentComponent,
      contentOptions = mergedConfig.contentOptions,
      drawerPosition = mergedConfig.drawerPosition,
      tabsConfig = babelHelpers.objectWithoutProperties(mergedConfig, ['containerConfig', 'drawerWidth', 'contentComponent', 'contentOptions', 'drawerPosition']);


  var contentRouter = (0, _TabRouter2.default)(routeConfigs, tabsConfig);

  var drawerRouter = (0, _TabRouter2.default)({
    DrawerClose: {
      screen: (0, _createNavigator2.default)(contentRouter, routeConfigs, config, _NavigatorTypes2.default.DRAWER)(function (props) {
        return _react2.default.createElement(_DrawerScreen2.default, babelHelpers.extends({}, props, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 61
          }
        }));
      })
    },
    DrawerOpen: {
      screen: function screen() {
        return null;
      }
    }
  }, {
    initialRouteName: 'DrawerClose'
  });

  var navigator = (0, _createNavigator2.default)(drawerRouter, routeConfigs, config, _NavigatorTypes2.default.DRAWER)(function (props) {
    return _react2.default.createElement(_DrawerView2.default, babelHelpers.extends({}, props, {
      drawerWidth: drawerWidth,
      contentComponent: contentComponent,
      contentOptions: contentOptions,
      drawerPosition: drawerPosition,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 78
      }
    }));
  });

  return (0, _createNavigationContainer2.default)(navigator, containerConfig);
};

exports.default = DrawerNavigator;
}, 1944, null, "react-navigation/src/navigators/DrawerNavigator.js");
__d(/* react-navigation/src/views/Drawer/DrawerScreen.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-navigation/src/views/Drawer/DrawerScreen.js';

var _react = require(604    ); // 604 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _SceneView = require(1904          ); // 1904 = ../SceneView

var _SceneView2 = babelHelpers.interopRequireDefault(_SceneView);

var _withCachedChildNavigation = require(1940                             ); // 1940 = ../../withCachedChildNavigation

var _withCachedChildNavigation2 = babelHelpers.interopRequireDefault(_withCachedChildNavigation);

var DrawerScreen = function (_PureComponent) {
  babelHelpers.inherits(DrawerScreen, _PureComponent);

  function DrawerScreen() {
    babelHelpers.classCallCheck(this, DrawerScreen);
    return babelHelpers.possibleConstructorReturn(this, (DrawerScreen.__proto__ || Object.getPrototypeOf(DrawerScreen)).apply(this, arguments));
  }

  babelHelpers.createClass(DrawerScreen, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          router = _props.router,
          navigation = _props.navigation,
          childNavigationProps = _props.childNavigationProps,
          screenProps = _props.screenProps;
      var _navigation$state = navigation.state,
          routes = _navigation$state.routes,
          index = _navigation$state.index;

      var childNavigation = childNavigationProps[routes[index].key];
      var Content = router.getComponentForRouteName(routes[index].routeName);
      return _react2.default.createElement(_SceneView2.default, {
        screenProps: screenProps,
        component: Content,
        navigation: childNavigation,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 47
        }
      });
    }
  }]);
  return DrawerScreen;
}(_react.PureComponent);

exports.default = (0, _withCachedChildNavigation2.default)(DrawerScreen);
}, 1945, null, "react-navigation/src/views/Drawer/DrawerScreen.js");
__d(/* react-navigation/src/views/Drawer/DrawerView.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-navigation/src/views/Drawer/DrawerView.js';

var _react = require(604    ); // 604 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNativeDrawerLayoutPolyfill = require(1947                                 ); // 1947 = react-native-drawer-layout-polyfill

var _reactNativeDrawerLayoutPolyfill2 = babelHelpers.interopRequireDefault(_reactNativeDrawerLayoutPolyfill);

var _addNavigationHelpers = require(1888                        ); // 1888 = ../../addNavigationHelpers

var _addNavigationHelpers2 = babelHelpers.interopRequireDefault(_addNavigationHelpers);

var _DrawerSidebar = require(1948             ); // 1948 = ./DrawerSidebar

var _DrawerSidebar2 = babelHelpers.interopRequireDefault(_DrawerSidebar);

var DrawerView = function (_PureComponent) {
  babelHelpers.inherits(DrawerView, _PureComponent);

  function DrawerView() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, DrawerView);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = DrawerView.__proto__ || Object.getPrototypeOf(DrawerView)).call.apply(_ref, [this].concat(args))), _this), _this._handleDrawerOpen = function () {
      var navigation = _this.props.navigation;
      var _navigation$state = navigation.state,
          routes = _navigation$state.routes,
          index = _navigation$state.index;

      if (routes[index].routeName !== 'DrawerOpen') {
        _this.props.navigation.navigate('DrawerOpen');
      }
    }, _this._handleDrawerClose = function () {
      var navigation = _this.props.navigation;
      var _navigation$state2 = navigation.state,
          routes = _navigation$state2.routes,
          index = _navigation$state2.index;

      if (routes[index].routeName !== 'DrawerClose') {
        _this.props.navigation.navigate('DrawerClose');
      }
    }, _this._updateScreenNavigation = function (navigation) {
      var navigationState = navigation.state.routes.find(function (route) {
        return route.routeName === 'DrawerClose';
      });
      if (_this._screenNavigationProp && _this._screenNavigationProp.state === navigationState) {
        return;
      }
      _this._screenNavigationProp = (0, _addNavigationHelpers2.default)(babelHelpers.extends({}, navigation, {
        state: navigationState
      }));
    }, _this._getNavigationState = function (navigation) {
      var navigationState = navigation.state.routes.find(function (route) {
        return route.routeName === 'DrawerClose';
      });
      return navigationState;
    }, _this._renderNavigationView = function () {
      return _react2.default.createElement(_DrawerSidebar2.default, {
        screenProps: _this.props.screenProps,
        navigation: _this._screenNavigationProp,
        router: _this.props.router,
        contentComponent: _this.props.contentComponent,
        contentOptions: _this.props.contentOptions,
        style: _this.props.style,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 119
        }
      });
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(DrawerView, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      this._updateScreenNavigation(this.props.navigation);
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (this.props.navigation.state.index !== nextProps.navigation.state.index) {
        var _nextProps$navigation = nextProps.navigation.state,
            routes = _nextProps$navigation.routes,
            _index = _nextProps$navigation.index;

        if (routes[_index].routeName === 'DrawerOpen') {
          this._drawer.openDrawer();
        } else {
          this._drawer.closeDrawer();
        }
      }
      this._updateScreenNavigation(nextProps.navigation);
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var DrawerScreen = this.props.router.getComponentForRouteName('DrawerClose');
      return _react2.default.createElement(
        _reactNativeDrawerLayoutPolyfill2.default,
        {
          ref: function ref(c) {
            _this2._drawer = c;
          },
          drawerWidth: this.props.drawerWidth,
          onDrawerOpen: this._handleDrawerOpen,
          onDrawerClose: this._handleDrawerClose,
          renderNavigationView: this._renderNavigationView,
          drawerPosition: this.props.drawerPosition === 'right' ? _reactNativeDrawerLayoutPolyfill2.default.positions.Right : _reactNativeDrawerLayoutPolyfill2.default.positions.Left,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 136
          }
        },
        _react2.default.createElement(DrawerScreen, {
          screenProps: this.props.screenProps,
          navigation: this._screenNavigationProp,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 150
          }
        })
      );
    }
  }]);
  return DrawerView;
}(_react.PureComponent);

exports.default = DrawerView;
}, 1946, null, "react-navigation/src/views/Drawer/DrawerView.js");
__d(/* react-native-drawer-layout-polyfill/dist/index.android.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", { value: true });var _reactNative = require(334           );exports.default = _reactNative.DrawerLayoutAndroid; // 334 = react-native
}, 1947, null, "react-native-drawer-layout-polyfill/dist/index.android.js");
__d(/* react-navigation/src/views/Drawer/DrawerSidebar.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-navigation/src/views/Drawer/DrawerSidebar.js';

var _react = require(604    ); // 604 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(334           ); // 334 = react-native

var _withCachedChildNavigation = require(1940                             ); // 1940 = ../../withCachedChildNavigation

var _withCachedChildNavigation2 = babelHelpers.interopRequireDefault(_withCachedChildNavigation);

var DrawerSidebar = function (_PureComponent) {
  babelHelpers.inherits(DrawerSidebar, _PureComponent);

  function DrawerSidebar() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, DrawerSidebar);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = DrawerSidebar.__proto__ || Object.getPrototypeOf(DrawerSidebar)).call.apply(_ref, [this].concat(args))), _this), _this._getScreenOptions = function (routeKey) {
      var DrawerScreen = _this.props.router.getComponentForRouteName('DrawerClose');
      return DrawerScreen.router.getScreenOptions(_this.props.childNavigationProps[routeKey], _this.props.screenProps);
    }, _this._getLabel = function (_ref2) {
      var focused = _ref2.focused,
          tintColor = _ref2.tintColor,
          route = _ref2.route;

      var _this$_getScreenOptio = _this._getScreenOptions(route.key),
          drawerLabel = _this$_getScreenOptio.drawerLabel,
          title = _this$_getScreenOptio.title;

      if (drawerLabel) {
        return typeof drawerLabel === 'function' ? drawerLabel({ tintColor: tintColor, focused: focused }) : drawerLabel;
      }

      if (typeof title === 'string') {
        return title;
      }

      return route.routeName;
    }, _this._renderIcon = function (_ref3) {
      var focused = _ref3.focused,
          tintColor = _ref3.tintColor,
          route = _ref3.route;

      var _this$_getScreenOptio2 = _this._getScreenOptions(route.key),
          drawerIcon = _this$_getScreenOptio2.drawerIcon;

      if (drawerIcon) {
        return typeof drawerIcon === 'function' ? drawerIcon({ tintColor: tintColor, focused: focused }) : drawerIcon;
      }
      return null;
    }, _this._onItemPress = function (_ref4) {
      var route = _ref4.route;

      _this.props.navigation.navigate('DrawerClose');
      _this.props.navigation.navigate(route.routeName);
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(DrawerSidebar, [{
    key: 'render',
    value: function render() {
      var ContentComponent = this.props.contentComponent;
      var state = this.props.navigation.state;

      return _react2.default.createElement(
        _reactNative.View,
        { style: [styles.container, this.props.style], __source: {
            fileName: _jsxFileName,
            lineNumber: 87
          }
        },
        _react2.default.createElement(ContentComponent, babelHelpers.extends({}, this.props.contentOptions, {
          navigation: this.props.navigation,
          items: state.routes,
          activeItemKey: state.routes[state.index] && state.routes[state.index].key,
          screenProps: this.props.screenProps,
          getLabel: this._getLabel,
          renderIcon: this._renderIcon,
          onItemPress: this._onItemPress,
          router: this.props.router,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 88
          }
        }))
      );
    }
  }]);
  return DrawerSidebar;
}(_react.PureComponent);

exports.default = (0, _withCachedChildNavigation2.default)(DrawerSidebar);


var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#fff'
  }
});
}, 1948, null, "react-navigation/src/views/Drawer/DrawerSidebar.js");
__d(/* react-navigation/src/views/Drawer/DrawerNavigatorItems.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-navigation/src/views/Drawer/DrawerNavigatorItems.js';

var _react = require(604    ); // 604 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(334           ); // 334 = react-native

var _TouchableItem = require(1901              ); // 1901 = ../TouchableItem

var _TouchableItem2 = babelHelpers.interopRequireDefault(_TouchableItem);

var DrawerNavigatorItems = function DrawerNavigatorItems(_ref) {
  var _ref$navigation = _ref.navigation,
      state = _ref$navigation.state,
      navigate = _ref$navigation.navigate,
      items = _ref.items,
      activeItemKey = _ref.activeItemKey,
      activeTintColor = _ref.activeTintColor,
      activeBackgroundColor = _ref.activeBackgroundColor,
      inactiveTintColor = _ref.inactiveTintColor,
      inactiveBackgroundColor = _ref.inactiveBackgroundColor,
      getLabel = _ref.getLabel,
      renderIcon = _ref.renderIcon,
      onItemPress = _ref.onItemPress,
      style = _ref.style,
      labelStyle = _ref.labelStyle;
  return _react2.default.createElement(
    _reactNative.View,
    { style: [styles.container, style], __source: {
        fileName: _jsxFileName,
        lineNumber: 49
      }
    },
    items.map(function (route, index) {
      var focused = activeItemKey === route.key;
      var color = focused ? activeTintColor : inactiveTintColor;
      var backgroundColor = focused ? activeBackgroundColor : inactiveBackgroundColor;
      var scene = { route: route, index: index, focused: focused, tintColor: color };
      var icon = renderIcon(scene);
      var label = getLabel(scene);
      return _react2.default.createElement(
        _TouchableItem2.default,
        {
          key: route.key,
          onPress: function onPress() {
            onItemPress({ route: route, focused: focused });
          },
          delayPressIn: 0,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 60
          }
        },
        _react2.default.createElement(
          _reactNative.View,
          { style: [styles.item, { backgroundColor: backgroundColor }], __source: {
              fileName: _jsxFileName,
              lineNumber: 67
            }
          },
          icon ? _react2.default.createElement(
            _reactNative.View,
            {
              style: [styles.icon, focused ? null : styles.inactiveIcon],
              __source: {
                fileName: _jsxFileName,
                lineNumber: 69
              }
            },
            icon
          ) : null,
          typeof label === 'string' ? _react2.default.createElement(
            _reactNative.Text,
            { style: [styles.label, { color: color }, labelStyle], __source: {
                fileName: _jsxFileName,
                lineNumber: 76
              }
            },
            label
          ) : label
        )
      );
    })
  );
};

DrawerNavigatorItems.defaultProps = {
  activeTintColor: '#2196f3',
  activeBackgroundColor: 'rgba(0, 0, 0, .04)',
  inactiveTintColor: 'rgba(0, 0, 0, .87)',
  inactiveBackgroundColor: 'transparent'
};

var styles = _reactNative.StyleSheet.create({
  container: {
    marginTop: _reactNative.Platform.OS === 'ios' ? 20 : 0,
    paddingVertical: 4
  },
  item: {
    flexDirection: 'row',
    alignItems: 'center'
  },
  icon: {
    marginHorizontal: 16,
    width: 24,
    alignItems: 'center'
  },
  inactiveIcon: {
    opacity: 0.62
  },
  label: {
    margin: 16,
    fontWeight: 'bold'
  }
});

exports.default = DrawerNavigatorItems;
}, 1949, null, "react-navigation/src/views/Drawer/DrawerNavigatorItems.js");
__d(/* react-navigation/src/views/withNavigation.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-navigation/src/views/withNavigation.js';
exports.default = withNavigation;

var _react = require(604    ); // 604 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(1905        ); // 1905 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _hoistNonReactStatics = require(1951                     ); // 1951 = hoist-non-react-statics

var _hoistNonReactStatics2 = babelHelpers.interopRequireDefault(_hoistNonReactStatics);

function withNavigation(Component) {
  var componentWithNavigation = function componentWithNavigation(props, _ref) {
    var navigation = _ref.navigation;
    return _react2.default.createElement(Component, babelHelpers.extends({}, props, { navigation: navigation, __source: {
        fileName: _jsxFileName,
        lineNumber: 21
      }
    }));
  };

  componentWithNavigation.displayName = 'withNavigation(' + (Component.displayName || Component.name) + ')';

  componentWithNavigation.contextTypes = {
    navigation: _propTypes2.default.object.isRequired
  };

  return (0, _hoistNonReactStatics2.default)(componentWithNavigation, Component);
}
}, 1950, null, "react-navigation/src/views/withNavigation.js");
__d(/* hoist-non-react-statics/index.js */function(global, require, module, exports) {
'use strict';

var REACT_STATICS = {
    childContextTypes: true,
    contextTypes: true,
    defaultProps: true,
    displayName: true,
    getDefaultProps: true,
    mixins: true,
    propTypes: true,
    type: true
};

var KNOWN_STATICS = {
    name: true,
    length: true,
    prototype: true,
    caller: true,
    arguments: true,
    arity: true
};

var isGetOwnPropertySymbolsAvailable = typeof Object.getOwnPropertySymbols === 'function';

module.exports = function hoistNonReactStatics(targetComponent, sourceComponent, customStatics) {
    if (typeof sourceComponent !== 'string') {
        var keys = Object.getOwnPropertyNames(sourceComponent);

        if (isGetOwnPropertySymbolsAvailable) {
            keys = keys.concat(Object.getOwnPropertySymbols(sourceComponent));
        }

        for (var i = 0; i < keys.length; ++i) {
            if (!REACT_STATICS[keys[i]] && !KNOWN_STATICS[keys[i]] && (!customStatics || !customStatics[keys[i]])) {
                try {
                    targetComponent[keys[i]] = sourceComponent[keys[i]];
                } catch (error) {}
            }
        }
    }

    return targetComponent;
};
}, 1951, null, "hoist-non-react-statics/index.js");
__d(/* UI/App/Containers/LaunchScreen.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/home/chris/Desktop/UI/App/Containers/LaunchScreen.js';

var _react = require(604    ); // 604 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(334           ); // 334 = react-native

var _DevscreensButton = require(1953                                         ); // 1953 = ../../ignite/DevScreens/DevscreensButton.js

var _DevscreensButton2 = babelHelpers.interopRequireDefault(_DevscreensButton);

var _Themes = require(1956       ); // 1956 = ../Themes

var _LaunchScreenStyles = require(2651                         ); // 2651 = ./Styles/LaunchScreenStyles

var _LaunchScreenStyles2 = babelHelpers.interopRequireDefault(_LaunchScreenStyles);

var LaunchScreen = function (_React$Component) {
  babelHelpers.inherits(LaunchScreen, _React$Component);

  function LaunchScreen() {
    babelHelpers.classCallCheck(this, LaunchScreen);
    return babelHelpers.possibleConstructorReturn(this, (LaunchScreen.__proto__ || Object.getPrototypeOf(LaunchScreen)).apply(this, arguments));
  }

  babelHelpers.createClass(LaunchScreen, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        _reactNative.View,
        { style: _LaunchScreenStyles2.default.mainContainer, __source: {
            fileName: _jsxFileName,
            lineNumber: 13
          }
        },
        _react2.default.createElement(_reactNative.Image, { source: _Themes.Images.background, style: _LaunchScreenStyles2.default.backgroundImage, resizeMode: 'stretch', __source: {
            fileName: _jsxFileName,
            lineNumber: 14
          }
        }),
        _react2.default.createElement(
          _reactNative.ScrollView,
          { style: _LaunchScreenStyles2.default.container, __source: {
              fileName: _jsxFileName,
              lineNumber: 15
            }
          },
          _react2.default.createElement(
            _reactNative.View,
            { style: _LaunchScreenStyles2.default.centered, __source: {
                fileName: _jsxFileName,
                lineNumber: 16
              }
            },
            _react2.default.createElement(_reactNative.Image, { source: _Themes.Images.launch, style: _LaunchScreenStyles2.default.logo, __source: {
                fileName: _jsxFileName,
                lineNumber: 17
              }
            })
          ),
          _react2.default.createElement(
            _reactNative.View,
            { style: _LaunchScreenStyles2.default.section, __source: {
                fileName: _jsxFileName,
                lineNumber: 20
              }
            },
            _react2.default.createElement(_reactNative.Image, { source: _Themes.Images.ready, __source: {
                fileName: _jsxFileName,
                lineNumber: 21
              }
            }),
            _react2.default.createElement(
              _reactNative.Text,
              { style: _LaunchScreenStyles2.default.sectionText, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 22
                }
              },
              'This probably isn\'t what your app is going to look like. Unless your designer handed you this screen and, in that case, congrats! You\'re ready to ship. For everyone else, this is where you\'ll see a live preview of your fully functioning app using Ignite.'
            )
          ),
          _react2.default.createElement(_DevscreensButton2.default, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 27
            }
          })
        )
      );
    }
  }]);
  return LaunchScreen;
}(_react2.default.Component);

exports.default = LaunchScreen;
}, 1952, null, "UI/App/Containers/LaunchScreen.js");
__d(/* UI/ignite/DevScreens/DevscreensButton.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/home/chris/Desktop/UI/ignite/DevScreens/DevscreensButton.js';

var _react = require(604    ); // 604 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(334           ); // 334 = react-native

var _DebugConfig = require(13                            ); // 13 = ../../App/Config/DebugConfig

var _DebugConfig2 = babelHelpers.interopRequireDefault(_DebugConfig);

var _RoundedButton = require(1954                                ); // 1954 = ../../App/Components/RoundedButton

var _RoundedButton2 = babelHelpers.interopRequireDefault(_RoundedButton);

var _PresentationScreen = require(2292                  ); // 2292 = ./PresentationScreen

var _PresentationScreen2 = babelHelpers.interopRequireDefault(_PresentationScreen);

var DevscreensButton = function (_React$Component) {
  babelHelpers.inherits(DevscreensButton, _React$Component);

  function DevscreensButton(props) {
    babelHelpers.classCallCheck(this, DevscreensButton);

    var _this = babelHelpers.possibleConstructorReturn(this, (DevscreensButton.__proto__ || Object.getPrototypeOf(DevscreensButton)).call(this, props));

    _this.toggleModal = function () {
      _this.setState({ showModal: !_this.state.showModal });
    };

    _this.state = {
      showModal: false
    };
    return _this;
  }

  babelHelpers.createClass(DevscreensButton, [{
    key: 'render',
    value: function render() {
      if (_DebugConfig2.default.showDevScreens) {
        return _react2.default.createElement(
          _reactNative.View,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 22
            }
          },
          _react2.default.createElement(
            _RoundedButton2.default,
            { onPress: this.toggleModal, __source: {
                fileName: _jsxFileName,
                lineNumber: 23
              }
            },
            'Open DevScreens'
          ),
          _react2.default.createElement(
            _reactNative.Modal,
            {
              visible: this.state.showModal,
              onRequestClose: this.toggleModal, __source: {
                fileName: _jsxFileName,
                lineNumber: 26
              }
            },
            _react2.default.createElement(_PresentationScreen2.default, { screenProps: { toggle: this.toggleModal }, __source: {
                fileName: _jsxFileName,
                lineNumber: 29
              }
            })
          )
        );
      } else {
        return _react2.default.createElement(_reactNative.View, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 34
          }
        });
      }
    }
  }]);
  return DevscreensButton;
}(_react2.default.Component);

exports.default = DevscreensButton;
}, 1953, null, "UI/ignite/DevScreens/DevscreensButton.js");
__d(/* UI/App/Components/RoundedButton.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/home/chris/Desktop/UI/App/Components/RoundedButton.js';

var _react = require(604    ); // 604 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(334           ); // 334 = react-native

var _RoundedButtonStyles = require(1955                          ); // 1955 = ./Styles/RoundedButtonStyles

var _RoundedButtonStyles2 = babelHelpers.interopRequireDefault(_RoundedButtonStyles);

var _ExamplesRegistry = require(1982                          ); // 1982 = ../Services/ExamplesRegistry

var _ExamplesRegistry2 = babelHelpers.interopRequireDefault(_ExamplesRegistry);

_ExamplesRegistry2.default.addComponentExample('Rounded Button', function () {
  return _react2.default.createElement(RoundedButton, {
    text: 'real buttons have curves',
    onPress: function onPress() {
      return window.alert('Rounded Button Pressed!');
    },
    __source: {
      fileName: _jsxFileName,
      lineNumber: 13
    }
  });
});

var RoundedButton = function (_React$Component) {
  babelHelpers.inherits(RoundedButton, _React$Component);

  function RoundedButton() {
    babelHelpers.classCallCheck(this, RoundedButton);
    return babelHelpers.possibleConstructorReturn(this, (RoundedButton.__proto__ || Object.getPrototypeOf(RoundedButton)).apply(this, arguments));
  }

  babelHelpers.createClass(RoundedButton, [{
    key: 'getText',
    value: function getText() {
      var buttonText = this.props.text || this.props.children || '';
      return buttonText.toUpperCase();
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        _reactNative.TouchableOpacity,
        { style: _RoundedButtonStyles2.default.button, onPress: this.props.onPress, __source: {
            fileName: _jsxFileName,
            lineNumber: 34
          }
        },
        _react2.default.createElement(
          _reactNative.Text,
          { style: _RoundedButtonStyles2.default.buttonText, __source: {
              fileName: _jsxFileName,
              lineNumber: 35
            }
          },
          this.getText()
        )
      );
    }
  }]);
  return RoundedButton;
}(_react2.default.Component);

RoundedButton.propTypes = {
  onPress: _react.PropTypes.func,
  text: _react.PropTypes.string,
  children: _react.PropTypes.string,
  navigator: _react.PropTypes.object
};
exports.default = RoundedButton;
}, 1954, null, "UI/App/Components/RoundedButton.js");
__d(/* UI/App/Components/Styles/RoundedButtonStyles.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _reactNative = require(334           ); // 334 = react-native

var _Themes = require(1956           ); // 1956 = ../../Themes/

exports.default = _reactNative.StyleSheet.create({
  button: {
    height: 45,
    borderRadius: 5,
    marginHorizontal: _Themes.Metrics.section,
    marginVertical: _Themes.Metrics.baseMargin,
    backgroundColor: _Themes.Colors.fire,
    justifyContent: 'center'
  },
  buttonText: {
    color: _Themes.Colors.snow,
    textAlign: 'center',
    fontWeight: 'bold',
    fontSize: _Themes.Fonts.size.medium,
    marginVertical: _Themes.Metrics.baseMargin
  }
});
}, 1955, null, "UI/App/Components/Styles/RoundedButtonStyles.js");
__d(/* UI/App/Themes/index.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ApplicationStyles = exports.Metrics = exports.Images = exports.Fonts = exports.Colors = undefined;

var _Colors = require(1957      ); // 1957 = ./Colors

var _Colors2 = babelHelpers.interopRequireDefault(_Colors);

var _Fonts = require(1958     ); // 1958 = ./Fonts

var _Fonts2 = babelHelpers.interopRequireDefault(_Fonts);

var _Metrics = require(1959       ); // 1959 = ./Metrics

var _Metrics2 = babelHelpers.interopRequireDefault(_Metrics);

var _Images = require(1960      ); // 1960 = ./Images

var _Images2 = babelHelpers.interopRequireDefault(_Images);

var _ApplicationStyles = require(1981                 ); // 1981 = ./ApplicationStyles

var _ApplicationStyles2 = babelHelpers.interopRequireDefault(_ApplicationStyles);

exports.Colors = _Colors2.default;
exports.Fonts = _Fonts2.default;
exports.Images = _Images2.default;
exports.Metrics = _Metrics2.default;
exports.ApplicationStyles = _ApplicationStyles2.default;
}, 1956, null, "UI/App/Themes/index.js");
__d(/* UI/App/Themes/Colors.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var colors = {
  background: '#1F0808',
  clear: 'rgba(0,0,0,0)',
  facebook: '#3b5998',
  transparent: 'rgba(0,0,0,0)',
  silver: '#F7F7F7',
  steel: '#CCCCCC',
  error: 'rgba(200, 0, 0, 0.8)',
  ricePaper: 'rgba(255,255,255, 0.75)',
  frost: '#D8D8D8',
  cloud: 'rgba(200,200,200, 0.35)',
  windowTint: 'rgba(0, 0, 0, 0.4)',
  panther: '#161616',
  charcoal: '#595959',
  coal: '#2d2d2d',
  bloodOrange: '#fb5f26',
  snow: 'white',
  ember: 'rgba(164, 0, 48, 0.5)',
  fire: '#e73536',
  drawer: 'rgba(30, 30, 29, 0.95)',
  eggplant: '#251a34',
  border: '#483F53',
  banner: '#5F3E63',
  text: '#E0D7E5'
};

exports.default = colors;
}, 1957, null, "UI/App/Themes/Colors.js");
__d(/* UI/App/Themes/Fonts.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var type = {
  base: 'Avenir-Book',
  bold: 'Avenir-Black',
  emphasis: 'HelveticaNeue-Italic'
};

var size = {
  h1: 38,
  h2: 34,
  h3: 30,
  h4: 26,
  h5: 20,
  h6: 19,
  input: 18,
  regular: 17,
  medium: 14,
  small: 12,
  tiny: 8.5
};

var style = {
  h1: {
    fontFamily: type.base,
    fontSize: size.h1
  },
  h2: {
    fontWeight: 'bold',
    fontSize: size.h2
  },
  h3: {
    fontFamily: type.emphasis,
    fontSize: size.h3
  },
  h4: {
    fontFamily: type.base,
    fontSize: size.h4
  },
  h5: {
    fontFamily: type.base,
    fontSize: size.h5
  },
  h6: {
    fontFamily: type.emphasis,
    fontSize: size.h6
  },
  normal: {
    fontFamily: type.base,
    fontSize: size.regular
  },
  description: {
    fontFamily: type.base,
    fontSize: size.medium
  }
};

exports.default = {
  type: type,
  size: size,
  style: style
};
}, 1958, null, "UI/App/Themes/Fonts.js");
__d(/* UI/App/Themes/Metrics.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _reactNative = require(334           ); // 334 = react-native

var _Dimensions$get = _reactNative.Dimensions.get('window'),
    width = _Dimensions$get.width,
    height = _Dimensions$get.height;

var metrics = {
  marginHorizontal: 10,
  marginVertical: 10,
  section: 25,
  baseMargin: 10,
  doubleBaseMargin: 20,
  smallMargin: 5,
  doubleSection: 50,
  horizontalLineHeight: 1,
  searchBarHeight: 30,
  screenWidth: width < height ? width : height,
  screenHeight: width < height ? height : width,
  navBarHeight: _reactNative.Platform.OS === 'ios' ? 64 : 54,
  buttonRadius: 4,
  icons: {
    tiny: 15,
    small: 20,
    medium: 30,
    large: 45,
    xl: 50
  },
  images: {
    small: 20,
    medium: 40,
    large: 60,
    logo: 200
  }
};

exports.default = metrics;
}, 1959, null, "UI/App/Themes/Metrics.js");
__d(/* UI/App/Themes/Images.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var images = {
  logo: require(1961              ), // 1961 = ../Images/ir.png
  clearLogo: require(1962                    ), // 1962 = ../Images/top_logo.png
  launch: require(1963                       ), // 1963 = ../Images/launch-icon.png
  ready: require(1964                    ), // 1964 = ../Images/your-app.png
  ignite: require(1965                       ), // 1965 = ../Images/ignite_logo.png
  igniteClear: require(1966                                   ), // 1966 = ../Images/ignite-logo-transparent.png
  tileBg: require(1967                   ), // 1967 = ../Images/tile_bg.png
  background: require(1968              ), // 1968 = ../Images/BG.png
  buttonBackground: require(1969                     ), // 1969 = ../Images/button-bg.png
  api: require(1970                                  ), // 1970 = ../Images/Icons/icon-api-testing.png
  components: require(1971                                 ), // 1971 = ../Images/Icons/icon-components.png
  deviceInfo: require(1972                                         ), // 1972 = ../Images/Icons/icon-device-information.png
  faq: require(1973                          ), // 1973 = ../Images/Icons/faq-icon.png
  home: require(1974                           ), // 1974 = ../Images/Icons/icon-home.png
  theme: require(1975                            ), // 1975 = ../Images/Icons/icon-theme.png
  usageExamples: require(1976                                     ), // 1976 = ../Images/Icons/icon-usage-examples.png
  chevronRight: require(1977                               ), // 1977 = ../Images/Icons/chevron-right.png
  hamburger: require(1978                           ), // 1978 = ../Images/Icons/hamburger.png
  backButton: require(1979                             ), // 1979 = ../Images/Icons/back-button.png
  closeButton: require(1980                              ) // 1980 = ../Images/Icons/close-button.png
};

exports.default = images;
}, 1960, null, "UI/App/Themes/Images.js");
__d(/* UI/App/Images/ir.png */function(global, require, module, exports) {module.exports = require(494                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/App/Images","width":172,"height":131,"scales":[1],"hash":"be057e4bbcc101dcd9b59ab4223c9858","name":"ir","type":"png"}); // 494 = react-native/Libraries/Image/AssetRegistry
}, 1961, null, "UI/App/Images/ir.png");
__d(/* UI/App/Images/top_logo.png */function(global, require, module, exports) {module.exports = require(494                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/App/Images","width":277,"height":320,"scales":[1,2,3],"hash":"54d3ad2be07e68545619c17372478fd5","name":"top_logo","type":"png"}); // 494 = react-native/Libraries/Image/AssetRegistry
}, 1962, null, "UI/App/Images/top_logo.png");
__d(/* UI/App/Images/launch-icon.png */function(global, require, module, exports) {module.exports = require(494                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/App/Images","width":180,"height":179,"scales":[1,2,3],"hash":"515dc706504ed57b7b0ad0b716f3a04a","name":"launch-icon","type":"png"}); // 494 = react-native/Libraries/Image/AssetRegistry
}, 1963, null, "UI/App/Images/launch-icon.png");
__d(/* UI/App/Images/your-app.png */function(global, require, module, exports) {module.exports = require(494                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/App/Images","width":312,"height":69,"scales":[1,2,3],"hash":"668ba2b7f15b882b5861556b786abb1b","name":"your-app","type":"png"}); // 494 = react-native/Libraries/Image/AssetRegistry
}, 1964, null, "UI/App/Images/your-app.png");
__d(/* UI/App/Images/ignite_logo.png */function(global, require, module, exports) {module.exports = require(494                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/App/Images","width":500,"height":812,"scales":[1],"hash":"5334de6c460695d8ffc65a5f0692a54f","name":"ignite_logo","type":"png"}); // 494 = react-native/Libraries/Image/AssetRegistry
}, 1965, null, "UI/App/Images/ignite_logo.png");
__d(/* UI/App/Images/ignite-logo-transparent.png */function(global, require, module, exports) {module.exports = require(494                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/App/Images","width":922,"height":1686,"scales":[1],"hash":"5b3a33cadb3d5fe6c15015ccfa803466","name":"ignite-logo-transparent","type":"png"}); // 494 = react-native/Libraries/Image/AssetRegistry
}, 1966, null, "UI/App/Images/ignite-logo-transparent.png");
__d(/* UI/App/Images/tile_bg.png */function(global, require, module, exports) {module.exports = require(494                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/App/Images","width":100,"height":100,"scales":[1],"hash":"9be8930aca9ab202491d3b311a512868","name":"tile_bg","type":"png"}); // 494 = react-native/Libraries/Image/AssetRegistry
}, 1967, null, "UI/App/Images/tile_bg.png");
__d(/* UI/App/Images/BG.png */function(global, require, module, exports) {module.exports = require(494                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/App/Images","width":750,"height":1500,"scales":[1],"hash":"029cedd5587a21ab243f21cf38a7d090","name":"BG","type":"png"}); // 494 = react-native/Libraries/Image/AssetRegistry
}, 1968, null, "UI/App/Images/BG.png");
__d(/* UI/App/Images/button-bg.png */function(global, require, module, exports) {module.exports = require(494                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/App/Images","width":335,"height":55,"scales":[2],"hash":"a1ef7da38a9c8cb2efbf571cedc25b3e","name":"button-bg","type":"png"}); // 494 = react-native/Libraries/Image/AssetRegistry
}, 1969, null, "UI/App/Images/button-bg.png");
__d(/* UI/App/Images/Icons/icon-api-testing.png */function(global, require, module, exports) {module.exports = require(494                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/App/Images/Icons","width":58,"height":54,"scales":[2],"hash":"7d92a3154b4b1f09f0e056613b7fe1e8","name":"icon-api-testing","type":"png"}); // 494 = react-native/Libraries/Image/AssetRegistry
}, 1970, null, "UI/App/Images/Icons/icon-api-testing.png");
__d(/* UI/App/Images/Icons/icon-components.png */function(global, require, module, exports) {module.exports = require(494                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/App/Images/Icons","width":57,"height":57,"scales":[2],"hash":"c31906a571a8973892032646ba214971","name":"icon-components","type":"png"}); // 494 = react-native/Libraries/Image/AssetRegistry
}, 1971, null, "UI/App/Images/Icons/icon-components.png");
__d(/* UI/App/Images/Icons/icon-device-information.png */function(global, require, module, exports) {module.exports = require(494                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/App/Images/Icons","width":34,"height":55,"scales":[2],"hash":"8179e5dbd263485bbb69572188dbdf70","name":"icon-device-information","type":"png"}); // 494 = react-native/Libraries/Image/AssetRegistry
}, 1972, null, "UI/App/Images/Icons/icon-device-information.png");
__d(/* UI/App/Images/Icons/faq-icon.png */function(global, require, module, exports) {module.exports = require(494                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/App/Images/Icons","width":60,"height":55,"scales":[1,2,3],"hash":"fde98a42bd5a6b84d79b7b3306cfd934","name":"faq-icon","type":"png"}); // 494 = react-native/Libraries/Image/AssetRegistry
}, 1973, null, "UI/App/Images/Icons/faq-icon.png");
__d(/* UI/App/Images/Icons/icon-home.png */function(global, require, module, exports) {module.exports = require(494                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/App/Images/Icons","width":35,"height":52,"scales":[2],"hash":"3bd2fef835821466083f18855ec4b04b","name":"icon-home","type":"png"}); // 494 = react-native/Libraries/Image/AssetRegistry
}, 1974, null, "UI/App/Images/Icons/icon-home.png");
__d(/* UI/App/Images/Icons/icon-theme.png */function(global, require, module, exports) {module.exports = require(494                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/App/Images/Icons","width":35,"height":55,"scales":[2],"hash":"1ef39d03db8bb722ef9be0b0edcec0c8","name":"icon-theme","type":"png"}); // 494 = react-native/Libraries/Image/AssetRegistry
}, 1975, null, "UI/App/Images/Icons/icon-theme.png");
__d(/* UI/App/Images/Icons/icon-usage-examples.png */function(global, require, module, exports) {module.exports = require(494                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/App/Images/Icons","width":61,"height":56,"scales":[2],"hash":"2ada9e2d3ccbd1a4da6a3fa39e55df79","name":"icon-usage-examples","type":"png"}); // 494 = react-native/Libraries/Image/AssetRegistry
}, 1976, null, "UI/App/Images/Icons/icon-usage-examples.png");
__d(/* UI/App/Images/Icons/chevron-right.png */function(global, require, module, exports) {module.exports = require(494                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/App/Images/Icons","width":12,"height":17,"scales":[2],"hash":"e7baa1aa35fb87f6e4dd2906f39ce1cf","name":"chevron-right","type":"png"}); // 494 = react-native/Libraries/Image/AssetRegistry
}, 1977, null, "UI/App/Images/Icons/chevron-right.png");
__d(/* UI/App/Images/Icons/hamburger.png */function(global, require, module, exports) {module.exports = require(494                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/App/Images/Icons","width":40,"height":40,"scales":[2],"hash":"7cfa3f170815293c041dcf82aaa19058","name":"hamburger","type":"png"}); // 494 = react-native/Libraries/Image/AssetRegistry
}, 1978, null, "UI/App/Images/Icons/hamburger.png");
__d(/* UI/App/Images/Icons/back-button.png */function(global, require, module, exports) {module.exports = require(494                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/App/Images/Icons","width":42,"height":42,"scales":[2],"hash":"f689d7c4878b8920af230d4a681140cb","name":"back-button","type":"png"}); // 494 = react-native/Libraries/Image/AssetRegistry
}, 1979, null, "UI/App/Images/Icons/back-button.png");
__d(/* UI/App/Images/Icons/close-button.png */function(global, require, module, exports) {module.exports = require(494                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/App/Images/Icons","width":42,"height":42,"scales":[1,2,3],"hash":"7fdaf2fa97a969870151f626898b8930","name":"close-button","type":"png"}); // 494 = react-native/Libraries/Image/AssetRegistry
}, 1980, null, "UI/App/Images/Icons/close-button.png");
__d(/* UI/App/Themes/ApplicationStyles.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _Fonts = require(1958     ); // 1958 = ./Fonts

var _Fonts2 = babelHelpers.interopRequireDefault(_Fonts);

var _Metrics = require(1959       ); // 1959 = ./Metrics

var _Metrics2 = babelHelpers.interopRequireDefault(_Metrics);

var _Colors = require(1957      ); // 1957 = ./Colors

var _Colors2 = babelHelpers.interopRequireDefault(_Colors);

var ApplicationStyles = {
  screen: {
    mainContainer: {
      flex: 1,
      backgroundColor: _Colors2.default.transparent
    },
    backgroundImage: {
      position: 'absolute',
      top: 0,
      left: 0,
      bottom: 0,
      right: 0
    },
    container: {
      flex: 1,
      paddingTop: _Metrics2.default.baseMargin,
      backgroundColor: _Colors2.default.transparent
    },
    section: {
      margin: _Metrics2.default.section,
      padding: _Metrics2.default.baseMargin
    },
    sectionText: babelHelpers.extends({}, _Fonts2.default.style.normal, {
      paddingVertical: _Metrics2.default.doubleBaseMargin,
      color: _Colors2.default.snow,
      marginVertical: _Metrics2.default.smallMargin,
      textAlign: 'center'
    }),
    subtitle: {
      color: _Colors2.default.snow,
      padding: _Metrics2.default.smallMargin,
      marginBottom: _Metrics2.default.smallMargin,
      marginHorizontal: _Metrics2.default.smallMargin
    },
    titleText: babelHelpers.extends({}, _Fonts2.default.style.h2, {
      fontSize: 14,
      color: _Colors2.default.text
    })
  },
  darkLabelContainer: {
    padding: _Metrics2.default.smallMargin,
    paddingBottom: _Metrics2.default.doubleBaseMargin,
    borderBottomColor: _Colors2.default.border,
    borderBottomWidth: 1,
    marginBottom: _Metrics2.default.baseMargin
  },
  darkLabel: {
    fontFamily: _Fonts2.default.type.bold,
    color: _Colors2.default.snow
  },
  groupContainer: {
    margin: _Metrics2.default.smallMargin,
    flexDirection: 'row',
    justifyContent: 'space-around',
    alignItems: 'center'
  },
  sectionTitle: babelHelpers.extends({}, _Fonts2.default.style.h4, {
    color: _Colors2.default.coal,
    backgroundColor: _Colors2.default.ricePaper,
    padding: _Metrics2.default.smallMargin,
    marginTop: _Metrics2.default.smallMargin,
    marginHorizontal: _Metrics2.default.baseMargin,
    borderWidth: 1,
    borderColor: _Colors2.default.ember,
    alignItems: 'center',
    textAlign: 'center'
  })
};

exports.default = ApplicationStyles;
}, 1981, null, "UI/App/Themes/ApplicationStyles.js");
__d(/* UI/App/Services/ExamplesRegistry.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.renderPluginExamples = exports.renderComponentExamples = exports.addPluginExample = exports.addComponentExample = undefined;
var _jsxFileName = '/home/chris/Desktop/UI/App/Services/ExamplesRegistry.js';

var _react = require(604    ); // 604 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(334           ); // 334 = react-native

var _ramda = require(1983   ); // 1983 = ramda

var _ramda2 = babelHelpers.interopRequireDefault(_ramda);

var _Themes = require(1956       ); // 1956 = ../Themes

var _DebugConfig = require(13                     ); // 13 = ../Config/DebugConfig

var _DebugConfig2 = babelHelpers.interopRequireDefault(_DebugConfig);

var globalComponentExamplesRegistry = [];
var globalPluginExamplesRegistry = [];

var addComponentExample = exports.addComponentExample = function addComponentExample(title) {
  var usage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
  if (_DebugConfig2.default.includeExamples) globalComponentExamplesRegistry.push({ title: title, usage: usage });
};var addPluginExample = exports.addPluginExample = function addPluginExample(title) {
  var usage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
  if (_DebugConfig2.default.includeExamples) globalPluginExamplesRegistry.push({ title: title, usage: usage });
};

var renderComponentExample = function renderComponentExample(example) {
  return _react2.default.createElement(
    _reactNative.View,
    { key: example.title, __source: {
        fileName: _jsxFileName,
        lineNumber: 15
      }
    },
    _react2.default.createElement(
      _reactNative.View,
      { style: _Themes.ApplicationStyles.darkLabelContainer, __source: {
          fileName: _jsxFileName,
          lineNumber: 16
        }
      },
      _react2.default.createElement(
        _reactNative.Text,
        { style: _Themes.ApplicationStyles.darkLabel, __source: {
            fileName: _jsxFileName,
            lineNumber: 17
          }
        },
        example.title
      )
    ),
    example.usage.call()
  );
};

var renderPluginExample = function renderPluginExample(example) {
  return _react2.default.createElement(
    _reactNative.View,
    { key: example.title, __source: {
        fileName: _jsxFileName,
        lineNumber: 26
      }
    },
    _react2.default.createElement(
      _reactNative.View,
      { style: _Themes.ApplicationStyles.darkLabelContainer, __source: {
          fileName: _jsxFileName,
          lineNumber: 27
        }
      },
      _react2.default.createElement(
        _reactNative.Text,
        { style: _Themes.ApplicationStyles.darkLabel, __source: {
            fileName: _jsxFileName,
            lineNumber: 28
          }
        },
        example.title
      )
    ),
    example.usage.call()
  );
};

var renderComponentExamples = exports.renderComponentExamples = function renderComponentExamples() {
  return _ramda2.default.map(renderComponentExample, globalComponentExamplesRegistry);
};

var renderPluginExamples = exports.renderPluginExamples = function renderPluginExamples() {
  return _ramda2.default.map(renderPluginExample, globalPluginExamplesRegistry);
};

exports.default = {
  renderComponentExamples: renderComponentExamples,
  addComponentExample: addComponentExample,
  renderPluginExamples: renderPluginExamples,
  addPluginExample: addPluginExample
};
}, 1982, null, "UI/App/Services/ExamplesRegistry.js");
__d(/* ramda/index.js */function(global, require, module, exports) {module.exports = {
  F: require(1984     ), // 1984 = ./src/F
  T: require(1988     ), // 1988 = ./src/T
  __: require(1989      ), // 1989 = ./src/__
  add: require(1990       ), // 1990 = ./src/add
  addIndex: require(1992            ), // 1992 = ./src/addIndex
  adjust: require(1997          ), // 1997 = ./src/adjust
  all: require(1999       ), // 1999 = ./src/all
  allPass: require(2006           ), // 2006 = ./src/allPass
  always: require(1985          ), // 1985 = ./src/always
  and: require(2022       ), // 2022 = ./src/and
  any: require(2023       ), // 2023 = ./src/any
  anyPass: require(2025           ), // 2025 = ./src/anyPass
  ap: require(2026      ), // 2026 = ./src/ap
  aperture: require(2027            ), // 2027 = ./src/aperture
  append: require(2030          ), // 2030 = ./src/append
  apply: require(2031         ), // 2031 = ./src/apply
  applySpec: require(2032             ), // 2032 = ./src/applySpec
  ascend: require(2034          ), // 2034 = ./src/ascend
  assoc: require(2035         ), // 2035 = ./src/assoc
  assocPath: require(2036             ), // 2036 = ./src/assocPath
  binary: require(2038          ), // 2038 = ./src/binary
  bind: require(2013        ), // 2013 = ./src/bind
  both: require(2040        ), // 2040 = ./src/both
  call: require(2044        ), // 2044 = ./src/call
  chain: require(2046         ), // 2046 = ./src/chain
  clamp: require(2051         ), // 2051 = ./src/clamp
  clone: require(2052         ), // 2052 = ./src/clone
  comparator: require(2056              ), // 2056 = ./src/comparator
  complement: require(2057              ), // 2057 = ./src/complement
  compose: require(2059           ), // 2059 = ./src/compose
  composeK: require(2066            ), // 2066 = ./src/composeK
  composeP: require(2067            ), // 2067 = ./src/composeP
  concat: require(2070          ), // 2070 = ./src/concat
  cond: require(2088        ), // 2088 = ./src/cond
  construct: require(2089             ), // 2089 = ./src/construct
  constructN: require(2090              ), // 2090 = ./src/constructN
  contains: require(2091            ), // 2091 = ./src/contains
  converge: require(2092            ), // 2092 = ./src/converge
  countBy: require(2093           ), // 2093 = ./src/countBy
  curry: require(2045         ), // 2045 = ./src/curry
  curryN: require(1994          ), // 1994 = ./src/curryN
  dec: require(2096       ), // 2096 = ./src/dec
  descend: require(2097           ), // 2097 = ./src/descend
  defaultTo: require(2098             ), // 2098 = ./src/defaultTo
  difference: require(2099              ), // 2099 = ./src/difference
  differenceWith: require(2100                  ), // 2100 = ./src/differenceWith
  dissoc: require(2102          ), // 2102 = ./src/dissoc
  dissocPath: require(2103              ), // 2103 = ./src/dissocPath
  divide: require(2104          ), // 2104 = ./src/divide
  drop: require(2105        ), // 2105 = ./src/drop
  dropLast: require(2107            ), // 2107 = ./src/dropLast
  dropLastWhile: require(2112                 ), // 2112 = ./src/dropLastWhile
  dropRepeats: require(2115               ), // 2115 = ./src/dropRepeats
  dropRepeatsWith: require(2117                   ), // 2117 = ./src/dropRepeatsWith
  dropWhile: require(2120             ), // 2120 = ./src/dropWhile
  either: require(2122          ), // 2122 = ./src/either
  empty: require(2124         ), // 2124 = ./src/empty
  eqBy: require(2125        ), // 2125 = ./src/eqBy
  eqProps: require(2126           ), // 2126 = ./src/eqProps
  equals: require(2075          ), // 2075 = ./src/equals
  evolve: require(2127          ), // 2127 = ./src/evolve
  filter: require(2084          ), // 2084 = ./src/filter
  find: require(2128        ), // 2128 = ./src/find
  findIndex: require(2130             ), // 2130 = ./src/findIndex
  findLast: require(2132            ), // 2132 = ./src/findLast
  findLastIndex: require(2134                 ), // 2134 = ./src/findLastIndex
  flatten: require(2136           ), // 2136 = ./src/flatten
  flip: require(2137        ), // 2137 = ./src/flip
  forEach: require(2138           ), // 2138 = ./src/forEach
  forEachObjIndexed: require(2139                     ), // 2139 = ./src/forEachObjIndexed
  fromPairs: require(2140             ), // 2140 = ./src/fromPairs
  groupBy: require(2141           ), // 2141 = ./src/groupBy
  groupWith: require(2142             ), // 2142 = ./src/groupWith
  gt: require(2143      ), // 2143 = ./src/gt
  gte: require(2144       ), // 2144 = ./src/gte
  has: require(2145       ), // 2145 = ./src/has
  hasIn: require(2146         ), // 2146 = ./src/hasIn
  head: require(2147        ), // 2147 = ./src/head
  identical: require(2079             ), // 2079 = ./src/identical
  identity: require(2148            ), // 2148 = ./src/identity
  ifElse: require(2150          ), // 2150 = ./src/ifElse
  inc: require(2151       ), // 2151 = ./src/inc
  indexBy: require(2152           ), // 2152 = ./src/indexBy
  indexOf: require(2153           ), // 2153 = ./src/indexOf
  init: require(2154        ), // 2154 = ./src/init
  insert: require(2155          ), // 2155 = ./src/insert
  insertAll: require(2156             ), // 2156 = ./src/insertAll
  intersection: require(2157                ), // 2157 = ./src/intersection
  intersectionWith: require(2161                    ), // 2161 = ./src/intersectionWith
  intersperse: require(2163               ), // 2163 = ./src/intersperse
  into: require(2164        ), // 2164 = ./src/into
  invert: require(2169          ), // 2169 = ./src/invert
  invertObj: require(2170             ), // 2170 = ./src/invertObj
  invoker: require(2171           ), // 2171 = ./src/invoker
  is: require(2172      ), // 2172 = ./src/is
  isArrayLike: require(2014               ), // 2014 = ./src/isArrayLike
  isEmpty: require(2173           ), // 2173 = ./src/isEmpty
  isNil: require(2174         ), // 2174 = ./src/isNil
  join: require(2175        ), // 2175 = ./src/join
  juxt: require(2176        ), // 2176 = ./src/juxt
  keys: require(2017        ), // 2017 = ./src/keys
  keysIn: require(2177          ), // 2177 = ./src/keysIn
  last: require(2118        ), // 2118 = ./src/last
  lastIndexOf: require(2178               ), // 2178 = ./src/lastIndexOf
  length: require(2179          ), // 2179 = ./src/length
  lens: require(2181        ), // 2181 = ./src/lens
  lensIndex: require(2182             ), // 2182 = ./src/lensIndex
  lensPath: require(2184            ), // 2184 = ./src/lensPath
  lensProp: require(2186            ), // 2186 = ./src/lensProp
  lift: require(2042        ), // 2042 = ./src/lift
  liftN: require(2043         ), // 2043 = ./src/liftN
  lt: require(2187      ), // 2187 = ./src/lt
  lte: require(2188       ), // 2188 = ./src/lte
  map: require(2009       ), // 2009 = ./src/map
  mapAccum: require(2189            ), // 2189 = ./src/mapAccum
  mapAccumRight: require(2190                 ), // 2190 = ./src/mapAccumRight
  mapObjIndexed: require(2191                 ), // 2191 = ./src/mapObjIndexed
  match: require(2192         ), // 2192 = ./src/match
  mathMod: require(2193           ), // 2193 = ./src/mathMod
  max: require(2007       ), // 2007 = ./src/max
  maxBy: require(2194         ), // 2194 = ./src/maxBy
  mean: require(2195        ), // 2195 = ./src/mean
  median: require(2197          ), // 2197 = ./src/median
  memoize: require(2198           ), // 2198 = ./src/memoize
  merge: require(2199         ), // 2199 = ./src/merge
  mergeAll: require(2200            ), // 2200 = ./src/mergeAll
  mergeWith: require(2201             ), // 2201 = ./src/mergeWith
  mergeWithKey: require(2202                ), // 2202 = ./src/mergeWithKey
  min: require(2203       ), // 2203 = ./src/min
  minBy: require(2204         ), // 2204 = ./src/minBy
  modulo: require(2205          ), // 2205 = ./src/modulo
  multiply: require(2206            ), // 2206 = ./src/multiply
  nAry: require(2039        ), // 2039 = ./src/nAry
  negate: require(2207          ), // 2207 = ./src/negate
  none: require(2208        ), // 2208 = ./src/none
  not: require(2058       ), // 2058 = ./src/not
  nth: require(2119       ), // 2119 = ./src/nth
  nthArg: require(2209          ), // 2209 = ./src/nthArg
  objOf: require(2168         ), // 2168 = ./src/objOf
  of: require(2210      ), // 2210 = ./src/of
  omit: require(2212        ), // 2212 = ./src/omit
  once: require(2213        ), // 2213 = ./src/once
  or: require(2123      ), // 2123 = ./src/or
  over: require(2214        ), // 2214 = ./src/over
  pair: require(2215        ), // 2215 = ./src/pair
  partial: require(2216           ), // 2216 = ./src/partial
  partialRight: require(2218                ), // 2218 = ./src/partialRight
  partition: require(2219             ), // 2219 = ./src/partition
  path: require(2185        ), // 2185 = ./src/path
  pathEq: require(2220          ), // 2220 = ./src/pathEq
  pathOr: require(2221          ), // 2221 = ./src/pathOr
  pathSatisfies: require(2222                 ), // 2222 = ./src/pathSatisfies
  pick: require(2223        ), // 2223 = ./src/pick
  pickAll: require(2224           ), // 2224 = ./src/pickAll
  pickBy: require(2225          ), // 2225 = ./src/pickBy
  pipe: require(2060        ), // 2060 = ./src/pipe
  pipeK: require(2226         ), // 2226 = ./src/pipeK
  pipeP: require(2068         ), // 2068 = ./src/pipeP
  pluck: require(2008         ), // 2008 = ./src/pluck
  prepend: require(2227           ), // 2227 = ./src/prepend
  product: require(2228           ), // 2228 = ./src/product
  project: require(2229           ), // 2229 = ./src/project
  prop: require(2020        ), // 2020 = ./src/prop
  propEq: require(2231          ), // 2231 = ./src/propEq
  propIs: require(2232          ), // 2232 = ./src/propIs
  propOr: require(2233          ), // 2233 = ./src/propOr
  propSatisfies: require(2234                 ), // 2234 = ./src/propSatisfies
  props: require(2235         ), // 2235 = ./src/props
  range: require(2236         ), // 2236 = ./src/range
  reduce: require(2021          ), // 2021 = ./src/reduce
  reduceBy: require(2094            ), // 2094 = ./src/reduceBy
  reduceRight: require(2237               ), // 2237 = ./src/reduceRight
  reduceWhile: require(2238               ), // 2238 = ./src/reduceWhile
  reduced: require(2239           ), // 2239 = ./src/reduced
  reject: require(2082          ), // 2082 = ./src/reject
  remove: require(2240          ), // 2240 = ./src/remove
  repeat: require(2241          ), // 2241 = ./src/repeat
  replace: require(2243           ), // 2243 = ./src/replace
  reverse: require(2065           ), // 2065 = ./src/reverse
  scan: require(2244        ), // 2244 = ./src/scan
  sequence: require(2245            ), // 2245 = ./src/sequence
  set: require(2246       ), // 2246 = ./src/set
  slice: require(2064         ), // 2064 = ./src/slice
  sort: require(2247        ), // 2247 = ./src/sort
  sortBy: require(2248          ), // 2248 = ./src/sortBy
  sortWith: require(2249            ), // 2249 = ./src/sortWith
  split: require(2250         ), // 2250 = ./src/split
  splitAt: require(2251           ), // 2251 = ./src/splitAt
  splitEvery: require(2252              ), // 2252 = ./src/splitEvery
  splitWhen: require(2253             ), // 2253 = ./src/splitWhen
  subtract: require(2254            ), // 2254 = ./src/subtract
  sum: require(2196       ), // 2196 = ./src/sum
  symmetricDifference: require(2255                       ), // 2255 = ./src/symmetricDifference
  symmetricDifferenceWith: require(2256                           ), // 2256 = ./src/symmetricDifferenceWith
  tail: require(2062        ), // 2062 = ./src/tail
  take: require(2109        ), // 2109 = ./src/take
  takeLast: require(2257            ), // 2257 = ./src/takeLast
  takeLastWhile: require(2258                 ), // 2258 = ./src/takeLastWhile
  takeWhile: require(2259             ), // 2259 = ./src/takeWhile
  tap: require(2261       ), // 2261 = ./src/tap
  test: require(2262        ), // 2262 = ./src/test
  times: require(2242         ), // 2242 = ./src/times
  toLower: require(2264           ), // 2264 = ./src/toLower
  toPairs: require(2265           ), // 2265 = ./src/toPairs
  toPairsIn: require(2266             ), // 2266 = ./src/toPairsIn
  toString: require(2071            ), // 2071 = ./src/toString
  toUpper: require(2267           ), // 2267 = ./src/toUpper
  transduce: require(2268             ), // 2268 = ./src/transduce
  transpose: require(2269             ), // 2269 = ./src/transpose
  traverse: require(2270            ), // 2270 = ./src/traverse
  trim: require(2271        ), // 2271 = ./src/trim
  tryCatch: require(2272            ), // 2272 = ./src/tryCatch
  type: require(2055        ), // 2055 = ./src/type
  unapply: require(2273           ), // 2273 = ./src/unapply
  unary: require(2274         ), // 2274 = ./src/unary
  uncurryN: require(2275            ), // 2275 = ./src/uncurryN
  unfold: require(2276          ), // 2276 = ./src/unfold
  union: require(2277         ), // 2277 = ./src/union
  unionWith: require(2278             ), // 2278 = ./src/unionWith
  uniq: require(2158        ), // 2158 = ./src/uniq
  uniqBy: require(2159          ), // 2159 = ./src/uniqBy
  uniqWith: require(2162            ), // 2162 = ./src/uniqWith
  unless: require(2279          ), // 2279 = ./src/unless
  unnest: require(2280          ), // 2280 = ./src/unnest
  until: require(2281         ), // 2281 = ./src/until
  update: require(2183          ), // 2183 = ./src/update
  useWith: require(2230           ), // 2230 = ./src/useWith
  values: require(2033          ), // 2033 = ./src/values
  valuesIn: require(2282            ), // 2282 = ./src/valuesIn
  view: require(2283        ), // 2283 = ./src/view
  when: require(2284        ), // 2284 = ./src/when
  where: require(2285         ), // 2285 = ./src/where
  whereEq: require(2286           ), // 2286 = ./src/whereEq
  without: require(2287           ), // 2287 = ./src/without
  xprod: require(2288         ), // 2288 = ./src/xprod
  zip: require(2289       ), // 2289 = ./src/zip
  zipObj: require(2290          ), // 2290 = ./src/zipObj
  zipWith: require(2291           ) // 2291 = ./src/zipWith
};
}, 1983, null, "ramda/index.js");
__d(/* ramda/src/F.js */function(global, require, module, exports) {var always = require(1985      ); // 1985 = ./always

module.exports = always(false);
}, 1984, null, "ramda/src/F.js");
__d(/* ramda/src/always.js */function(global, require, module, exports) {var _curry1 = require(1986                ); // 1986 = ./internal/_curry1

module.exports = _curry1(function always(val) {
  return function () {
    return val;
  };
});
}, 1985, null, "ramda/src/always.js");
__d(/* ramda/src/internal/_curry1.js */function(global, require, module, exports) {var _isPlaceholder = require(1987              ); // 1987 = ./_isPlaceholder

module.exports = function _curry1(fn) {
  return function f1(a) {
    if (arguments.length === 0 || _isPlaceholder(a)) {
      return f1;
    } else {
      return fn.apply(this, arguments);
    }
  };
};
}, 1986, null, "ramda/src/internal/_curry1.js");
__d(/* ramda/src/internal/_isPlaceholder.js */function(global, require, module, exports) {module.exports = function _isPlaceholder(a) {
       return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;
};
}, 1987, null, "ramda/src/internal/_isPlaceholder.js");
__d(/* ramda/src/T.js */function(global, require, module, exports) {var always = require(1985      ); // 1985 = ./always

module.exports = always(true);
}, 1988, null, "ramda/src/T.js");
__d(/* ramda/src/__.js */function(global, require, module, exports) {
module.exports = { '@@functional/placeholder': true };
}, 1989, null, "ramda/src/__.js");
__d(/* ramda/src/add.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2

module.exports = _curry2(function add(a, b) {
  return Number(a) + Number(b);
});
}, 1990, null, "ramda/src/add.js");
__d(/* ramda/src/internal/_curry2.js */function(global, require, module, exports) {var _curry1 = require(1986       ); // 1986 = ./_curry1
var _isPlaceholder = require(1987              ); // 1987 = ./_isPlaceholder

module.exports = function _curry2(fn) {
  return function f2(a, b) {
    switch (arguments.length) {
      case 0:
        return f2;
      case 1:
        return _isPlaceholder(a) ? f2 : _curry1(function (_b) {
          return fn(a, _b);
        });
      default:
        return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {
          return fn(_a, b);
        }) : _isPlaceholder(b) ? _curry1(function (_b) {
          return fn(a, _b);
        }) : fn(a, b);
    }
  };
};
}, 1991, null, "ramda/src/internal/_curry2.js");
__d(/* ramda/src/addIndex.js */function(global, require, module, exports) {var _concat = require(1993                ); // 1993 = ./internal/_concat
var _curry1 = require(1986                ); // 1986 = ./internal/_curry1
var curryN = require(1994      ); // 1994 = ./curryN

module.exports = _curry1(function addIndex(fn) {
  return curryN(fn.length, function () {
    var idx = 0;
    var origFn = arguments[0];
    var list = arguments[arguments.length - 1];
    var args = Array.prototype.slice.call(arguments, 0);
    args[0] = function () {
      var result = origFn.apply(this, _concat(arguments, [idx, list]));
      idx += 1;
      return result;
    };
    return fn.apply(this, args);
  });
});
}, 1992, null, "ramda/src/addIndex.js");
__d(/* ramda/src/internal/_concat.js */function(global, require, module, exports) {
module.exports = function _concat(set1, set2) {
  set1 = set1 || [];
  set2 = set2 || [];
  var idx;
  var len1 = set1.length;
  var len2 = set2.length;
  var result = [];

  idx = 0;
  while (idx < len1) {
    result[result.length] = set1[idx];
    idx += 1;
  }
  idx = 0;
  while (idx < len2) {
    result[result.length] = set2[idx];
    idx += 1;
  }
  return result;
};
}, 1993, null, "ramda/src/internal/_concat.js");
__d(/* ramda/src/curryN.js */function(global, require, module, exports) {var _arity = require(1995               ); // 1995 = ./internal/_arity
var _curry1 = require(1986                ); // 1986 = ./internal/_curry1
var _curry2 = require(1991                ); // 1991 = ./internal/_curry2
var _curryN = require(1996                ); // 1996 = ./internal/_curryN

module.exports = _curry2(function curryN(length, fn) {
  if (length === 1) {
    return _curry1(fn);
  }
  return _arity(length, _curryN(length, [], fn));
});
}, 1994, null, "ramda/src/curryN.js");
__d(/* ramda/src/internal/_arity.js */function(global, require, module, exports) {module.exports = function _arity(n, fn) {
  switch (n) {
    case 0:
      return function () {
        return fn.apply(this, arguments);
      };
    case 1:
      return function (a0) {
        return fn.apply(this, arguments);
      };
    case 2:
      return function (a0, a1) {
        return fn.apply(this, arguments);
      };
    case 3:
      return function (a0, a1, a2) {
        return fn.apply(this, arguments);
      };
    case 4:
      return function (a0, a1, a2, a3) {
        return fn.apply(this, arguments);
      };
    case 5:
      return function (a0, a1, a2, a3, a4) {
        return fn.apply(this, arguments);
      };
    case 6:
      return function (a0, a1, a2, a3, a4, a5) {
        return fn.apply(this, arguments);
      };
    case 7:
      return function (a0, a1, a2, a3, a4, a5, a6) {
        return fn.apply(this, arguments);
      };
    case 8:
      return function (a0, a1, a2, a3, a4, a5, a6, a7) {
        return fn.apply(this, arguments);
      };
    case 9:
      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {
        return fn.apply(this, arguments);
      };
    case 10:
      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {
        return fn.apply(this, arguments);
      };
    default:
      throw new Error('First argument to _arity must be a non-negative integer no greater than ten');
  }
};
}, 1995, null, "ramda/src/internal/_arity.js");
__d(/* ramda/src/internal/_curryN.js */function(global, require, module, exports) {var _arity = require(1995      ); // 1995 = ./_arity
var _isPlaceholder = require(1987              ); // 1987 = ./_isPlaceholder

module.exports = function _curryN(length, received, fn) {
  return function () {
    var combined = [];
    var argsIdx = 0;
    var left = length;
    var combinedIdx = 0;
    while (combinedIdx < received.length || argsIdx < arguments.length) {
      var result;
      if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {
        result = received[combinedIdx];
      } else {
        result = arguments[argsIdx];
        argsIdx += 1;
      }
      combined[combinedIdx] = result;
      if (!_isPlaceholder(result)) {
        left -= 1;
      }
      combinedIdx += 1;
    }
    return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));
  };
};
}, 1996, null, "ramda/src/internal/_curryN.js");
__d(/* ramda/src/adjust.js */function(global, require, module, exports) {var _concat = require(1993                ); // 1993 = ./internal/_concat
var _curry3 = require(1998                ); // 1998 = ./internal/_curry3

module.exports = _curry3(function adjust(fn, idx, list) {
  if (idx >= list.length || idx < -list.length) {
    return list;
  }
  var start = idx < 0 ? list.length : 0;
  var _idx = start + idx;
  var _list = _concat(list);
  _list[_idx] = fn(list[_idx]);
  return _list;
});
}, 1997, null, "ramda/src/adjust.js");
__d(/* ramda/src/internal/_curry3.js */function(global, require, module, exports) {var _curry1 = require(1986       ); // 1986 = ./_curry1
var _curry2 = require(1991       ); // 1991 = ./_curry2
var _isPlaceholder = require(1987              ); // 1987 = ./_isPlaceholder

module.exports = function _curry3(fn) {
  return function f3(a, b, c) {
    switch (arguments.length) {
      case 0:
        return f3;
      case 1:
        return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {
          return fn(a, _b, _c);
        });
      case 2:
        return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {
          return fn(_a, b, _c);
        }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {
          return fn(a, _b, _c);
        }) : _curry1(function (_c) {
          return fn(a, b, _c);
        });
      default:
        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {
          return fn(_a, _b, c);
        }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {
          return fn(_a, b, _c);
        }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {
          return fn(a, _b, _c);
        }) : _isPlaceholder(a) ? _curry1(function (_a) {
          return fn(_a, b, c);
        }) : _isPlaceholder(b) ? _curry1(function (_b) {
          return fn(a, _b, c);
        }) : _isPlaceholder(c) ? _curry1(function (_c) {
          return fn(a, b, _c);
        }) : fn(a, b, c);
    }
  };
};
}, 1998, null, "ramda/src/internal/_curry3.js");
__d(/* ramda/src/all.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2
var _dispatchable = require(2000                      ); // 2000 = ./internal/_dispatchable
var _xall = require(2003              ); // 2003 = ./internal/_xall

module.exports = _curry2(_dispatchable(['all'], _xall, function all(fn, list) {
  var idx = 0;
  while (idx < list.length) {
    if (!fn(list[idx])) {
      return false;
    }
    idx += 1;
  }
  return true;
}));
}, 1999, null, "ramda/src/all.js");
__d(/* ramda/src/internal/_dispatchable.js */function(global, require, module, exports) {var _isArray = require(2001        ); // 2001 = ./_isArray
var _isTransformer = require(2002              ); // 2002 = ./_isTransformer

module.exports = function _dispatchable(methodNames, xf, fn) {
  return function () {
    if (arguments.length === 0) {
      return fn();
    }
    var args = Array.prototype.slice.call(arguments, 0);
    var obj = args.pop();
    if (!_isArray(obj)) {
      var idx = 0;
      while (idx < methodNames.length) {
        if (typeof obj[methodNames[idx]] === 'function') {
          return obj[methodNames[idx]].apply(obj, args);
        }
        idx += 1;
      }
      if (_isTransformer(obj)) {
        var transducer = xf.apply(null, args);
        return transducer(obj);
      }
    }
    return fn.apply(this, arguments);
  };
};
}, 2000, null, "ramda/src/internal/_dispatchable.js");
__d(/* ramda/src/internal/_isArray.js */function(global, require, module, exports) {
module.exports = Array.isArray || function _isArray(val) {
  return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';
};
}, 2001, null, "ramda/src/internal/_isArray.js");
__d(/* ramda/src/internal/_isTransformer.js */function(global, require, module, exports) {module.exports = function _isTransformer(obj) {
  return typeof obj['@@transducer/step'] === 'function';
};
}, 2002, null, "ramda/src/internal/_isTransformer.js");
__d(/* ramda/src/internal/_xall.js */function(global, require, module, exports) {var _curry2 = require(1991       ); // 1991 = ./_curry2
var _reduced = require(2004        ); // 2004 = ./_reduced
var _xfBase = require(2005       ); // 2005 = ./_xfBase

module.exports = function () {
  function XAll(f, xf) {
    this.xf = xf;
    this.f = f;
    this.all = true;
  }
  XAll.prototype['@@transducer/init'] = _xfBase.init;
  XAll.prototype['@@transducer/result'] = function (result) {
    if (this.all) {
      result = this.xf['@@transducer/step'](result, true);
    }
    return this.xf['@@transducer/result'](result);
  };
  XAll.prototype['@@transducer/step'] = function (result, input) {
    if (!this.f(input)) {
      this.all = false;
      result = _reduced(this.xf['@@transducer/step'](result, false));
    }
    return result;
  };

  return _curry2(function _xall(f, xf) {
    return new XAll(f, xf);
  });
}();
}, 2003, null, "ramda/src/internal/_xall.js");
__d(/* ramda/src/internal/_reduced.js */function(global, require, module, exports) {module.exports = function _reduced(x) {
  return x && x['@@transducer/reduced'] ? x : {
    '@@transducer/value': x,
    '@@transducer/reduced': true
  };
};
}, 2004, null, "ramda/src/internal/_reduced.js");
__d(/* ramda/src/internal/_xfBase.js */function(global, require, module, exports) {module.exports = {
  init: function init() {
    return this.xf['@@transducer/init']();
  },
  result: function result(_result) {
    return this.xf['@@transducer/result'](_result);
  }
};
}, 2005, null, "ramda/src/internal/_xfBase.js");
__d(/* ramda/src/allPass.js */function(global, require, module, exports) {var _curry1 = require(1986                ); // 1986 = ./internal/_curry1
var curryN = require(1994      ); // 1994 = ./curryN
var max = require(2007   ); // 2007 = ./max
var pluck = require(2008     ); // 2008 = ./pluck
var reduce = require(2021      ); // 2021 = ./reduce

module.exports = _curry1(function allPass(preds) {
  return curryN(reduce(max, 0, pluck('length', preds)), function () {
    var idx = 0;
    var len = preds.length;
    while (idx < len) {
      if (!preds[idx].apply(this, arguments)) {
        return false;
      }
      idx += 1;
    }
    return true;
  });
});
}, 2006, null, "ramda/src/allPass.js");
__d(/* ramda/src/max.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2

module.exports = _curry2(function max(a, b) {
  return b > a ? b : a;
});
}, 2007, null, "ramda/src/max.js");
__d(/* ramda/src/pluck.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2
var map = require(2009   ); // 2009 = ./map
var prop = require(2020    ); // 2020 = ./prop

module.exports = _curry2(function pluck(p, list) {
  return map(prop(p), list);
});
}, 2008, null, "ramda/src/pluck.js");
__d(/* ramda/src/map.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2
var _dispatchable = require(2000                      ); // 2000 = ./internal/_dispatchable
var _map = require(2010             ); // 2010 = ./internal/_map
var _reduce = require(2011                ); // 2011 = ./internal/_reduce
var _xmap = require(2016              ); // 2016 = ./internal/_xmap
var curryN = require(1994      ); // 1994 = ./curryN
var keys = require(2017    ); // 2017 = ./keys

module.exports = _curry2(_dispatchable(['map'], _xmap, function map(fn, functor) {
  switch (Object.prototype.toString.call(functor)) {
    case '[object Function]':
      return curryN(functor.length, function () {
        return fn.call(this, functor.apply(this, arguments));
      });
    case '[object Object]':
      return _reduce(function (acc, key) {
        acc[key] = fn(functor[key]);
        return acc;
      }, {}, keys(functor));
    default:
      return _map(fn, functor);
  }
}));
}, 2009, null, "ramda/src/map.js");
__d(/* ramda/src/internal/_map.js */function(global, require, module, exports) {module.exports = function _map(fn, functor) {
  var idx = 0;
  var len = functor.length;
  var result = Array(len);
  while (idx < len) {
    result[idx] = fn(functor[idx]);
    idx += 1;
  }
  return result;
};
}, 2010, null, "ramda/src/internal/_map.js");
__d(/* ramda/src/internal/_reduce.js */function(global, require, module, exports) {var _xwrap = require(2012      ); // 2012 = ./_xwrap
var bind = require(2013     ); // 2013 = ../bind
var isArrayLike = require(2014            ); // 2014 = ../isArrayLike

module.exports = function () {
  function _arrayReduce(xf, acc, list) {
    var idx = 0;
    var len = list.length;
    while (idx < len) {
      acc = xf['@@transducer/step'](acc, list[idx]);
      if (acc && acc['@@transducer/reduced']) {
        acc = acc['@@transducer/value'];
        break;
      }
      idx += 1;
    }
    return xf['@@transducer/result'](acc);
  }

  function _iterableReduce(xf, acc, iter) {
    var step = iter.next();
    while (!step.done) {
      acc = xf['@@transducer/step'](acc, step.value);
      if (acc && acc['@@transducer/reduced']) {
        acc = acc['@@transducer/value'];
        break;
      }
      step = iter.next();
    }
    return xf['@@transducer/result'](acc);
  }

  function _methodReduce(xf, acc, obj) {
    return xf['@@transducer/result'](obj.reduce(bind(xf['@@transducer/step'], xf), acc));
  }

  var symIterator = typeof Symbol !== 'undefined' ? typeof Symbol === 'function' ? Symbol.iterator : '@@iterator' : '@@iterator';
  return function _reduce(fn, acc, list) {
    if (typeof fn === 'function') {
      fn = _xwrap(fn);
    }
    if (isArrayLike(list)) {
      return _arrayReduce(fn, acc, list);
    }
    if (typeof list.reduce === 'function') {
      return _methodReduce(fn, acc, list);
    }
    if (list[symIterator] != null) {
      return _iterableReduce(fn, acc, list[symIterator]());
    }
    if (typeof list.next === 'function') {
      return _iterableReduce(fn, acc, list);
    }
    throw new TypeError('reduce: list must be array or iterable');
  };
}();
}, 2011, null, "ramda/src/internal/_reduce.js");
__d(/* ramda/src/internal/_xwrap.js */function(global, require, module, exports) {module.exports = function () {
  function XWrap(fn) {
    this.f = fn;
  }
  XWrap.prototype['@@transducer/init'] = function () {
    throw new Error('init not implemented on XWrap');
  };
  XWrap.prototype['@@transducer/result'] = function (acc) {
    return acc;
  };
  XWrap.prototype['@@transducer/step'] = function (acc, x) {
    return this.f(acc, x);
  };

  return function _xwrap(fn) {
    return new XWrap(fn);
  };
}();
}, 2012, null, "ramda/src/internal/_xwrap.js");
__d(/* ramda/src/bind.js */function(global, require, module, exports) {var _arity = require(1995               ); // 1995 = ./internal/_arity
var _curry2 = require(1991                ); // 1991 = ./internal/_curry2

module.exports = _curry2(function bind(fn, thisObj) {
  return _arity(fn.length, function () {
    return fn.apply(thisObj, arguments);
  });
});
}, 2013, null, "ramda/src/bind.js");
__d(/* ramda/src/isArrayLike.js */function(global, require, module, exports) {var _curry1 = require(1986                ); // 1986 = ./internal/_curry1
var _isArray = require(2001                 ); // 2001 = ./internal/_isArray
var _isString = require(2015                  ); // 2015 = ./internal/_isString

module.exports = _curry1(function isArrayLike(x) {
  if (_isArray(x)) {
    return true;
  }
  if (!x) {
    return false;
  }
  if (typeof x !== 'object') {
    return false;
  }
  if (_isString(x)) {
    return false;
  }
  if (x.nodeType === 1) {
    return !!x.length;
  }
  if (x.length === 0) {
    return true;
  }
  if (x.length > 0) {
    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);
  }
  return false;
});
}, 2014, null, "ramda/src/isArrayLike.js");
__d(/* ramda/src/internal/_isString.js */function(global, require, module, exports) {module.exports = function _isString(x) {
  return Object.prototype.toString.call(x) === '[object String]';
};
}, 2015, null, "ramda/src/internal/_isString.js");
__d(/* ramda/src/internal/_xmap.js */function(global, require, module, exports) {var _curry2 = require(1991       ); // 1991 = ./_curry2
var _xfBase = require(2005       ); // 2005 = ./_xfBase

module.exports = function () {
  function XMap(f, xf) {
    this.xf = xf;
    this.f = f;
  }
  XMap.prototype['@@transducer/init'] = _xfBase.init;
  XMap.prototype['@@transducer/result'] = _xfBase.result;
  XMap.prototype['@@transducer/step'] = function (result, input) {
    return this.xf['@@transducer/step'](result, this.f(input));
  };

  return _curry2(function _xmap(f, xf) {
    return new XMap(f, xf);
  });
}();
}, 2016, null, "ramda/src/internal/_xmap.js");
__d(/* ramda/src/keys.js */function(global, require, module, exports) {var _curry1 = require(1986                ); // 1986 = ./internal/_curry1
var _has = require(2018             ); // 2018 = ./internal/_has
var _isArguments = require(2019                     ); // 2019 = ./internal/_isArguments

module.exports = function () {
  var hasEnumBug = !{ toString: null }.propertyIsEnumerable('toString');
  var nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];

  var hasArgsEnumBug = function () {
    'use strict';

    return arguments.propertyIsEnumerable('length');
  }();

  var contains = function contains(list, item) {
    var idx = 0;
    while (idx < list.length) {
      if (list[idx] === item) {
        return true;
      }
      idx += 1;
    }
    return false;
  };

  return typeof Object.keys === 'function' && !hasArgsEnumBug ? _curry1(function keys(obj) {
    return Object(obj) !== obj ? [] : Object.keys(obj);
  }) : _curry1(function keys(obj) {
    if (Object(obj) !== obj) {
      return [];
    }
    var prop, nIdx;
    var ks = [];
    var checkArgsLength = hasArgsEnumBug && _isArguments(obj);
    for (prop in obj) {
      if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {
        ks[ks.length] = prop;
      }
    }
    if (hasEnumBug) {
      nIdx = nonEnumerableProps.length - 1;
      while (nIdx >= 0) {
        prop = nonEnumerableProps[nIdx];
        if (_has(prop, obj) && !contains(ks, prop)) {
          ks[ks.length] = prop;
        }
        nIdx -= 1;
      }
    }
    return ks;
  });
}();
}, 2017, null, "ramda/src/keys.js");
__d(/* ramda/src/internal/_has.js */function(global, require, module, exports) {module.exports = function _has(prop, obj) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
};
}, 2018, null, "ramda/src/internal/_has.js");
__d(/* ramda/src/internal/_isArguments.js */function(global, require, module, exports) {var _has = require(2018    ); // 2018 = ./_has

module.exports = function () {
  var toString = Object.prototype.toString;
  return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {
    return toString.call(x) === '[object Arguments]';
  } : function _isArguments(x) {
    return _has('callee', x);
  };
}();
}, 2019, null, "ramda/src/internal/_isArguments.js");
__d(/* ramda/src/prop.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2

module.exports = _curry2(function prop(p, obj) {
  return obj[p];
});
}, 2020, null, "ramda/src/prop.js");
__d(/* ramda/src/reduce.js */function(global, require, module, exports) {var _curry3 = require(1998                ); // 1998 = ./internal/_curry3
var _reduce = require(2011                ); // 2011 = ./internal/_reduce

module.exports = _curry3(_reduce);
}, 2021, null, "ramda/src/reduce.js");
__d(/* ramda/src/and.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2

module.exports = _curry2(function and(a, b) {
  return a && b;
});
}, 2022, null, "ramda/src/and.js");
__d(/* ramda/src/any.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2
var _dispatchable = require(2000                      ); // 2000 = ./internal/_dispatchable
var _xany = require(2024              ); // 2024 = ./internal/_xany

module.exports = _curry2(_dispatchable(['any'], _xany, function any(fn, list) {
  var idx = 0;
  while (idx < list.length) {
    if (fn(list[idx])) {
      return true;
    }
    idx += 1;
  }
  return false;
}));
}, 2023, null, "ramda/src/any.js");
__d(/* ramda/src/internal/_xany.js */function(global, require, module, exports) {var _curry2 = require(1991       ); // 1991 = ./_curry2
var _reduced = require(2004        ); // 2004 = ./_reduced
var _xfBase = require(2005       ); // 2005 = ./_xfBase

module.exports = function () {
  function XAny(f, xf) {
    this.xf = xf;
    this.f = f;
    this.any = false;
  }
  XAny.prototype['@@transducer/init'] = _xfBase.init;
  XAny.prototype['@@transducer/result'] = function (result) {
    if (!this.any) {
      result = this.xf['@@transducer/step'](result, false);
    }
    return this.xf['@@transducer/result'](result);
  };
  XAny.prototype['@@transducer/step'] = function (result, input) {
    if (this.f(input)) {
      this.any = true;
      result = _reduced(this.xf['@@transducer/step'](result, true));
    }
    return result;
  };

  return _curry2(function _xany(f, xf) {
    return new XAny(f, xf);
  });
}();
}, 2024, null, "ramda/src/internal/_xany.js");
__d(/* ramda/src/anyPass.js */function(global, require, module, exports) {var _curry1 = require(1986                ); // 1986 = ./internal/_curry1
var curryN = require(1994      ); // 1994 = ./curryN
var max = require(2007   ); // 2007 = ./max
var pluck = require(2008     ); // 2008 = ./pluck
var reduce = require(2021      ); // 2021 = ./reduce

module.exports = _curry1(function anyPass(preds) {
  return curryN(reduce(max, 0, pluck('length', preds)), function () {
    var idx = 0;
    var len = preds.length;
    while (idx < len) {
      if (preds[idx].apply(this, arguments)) {
        return true;
      }
      idx += 1;
    }
    return false;
  });
});
}, 2025, null, "ramda/src/anyPass.js");
__d(/* ramda/src/ap.js */function(global, require, module, exports) {var _concat = require(1993                ); // 1993 = ./internal/_concat
var _curry2 = require(1991                ); // 1991 = ./internal/_curry2
var _reduce = require(2011                ); // 2011 = ./internal/_reduce
var map = require(2009   ); // 2009 = ./map

module.exports = _curry2(function ap(applicative, fn) {
  return typeof applicative.ap === 'function' ? applicative.ap(fn) : typeof applicative === 'function' ? function (x) {
    return applicative(x)(fn(x));
  } : _reduce(function (acc, f) {
    return _concat(acc, map(f, fn));
  }, [], applicative);
});
}, 2026, null, "ramda/src/ap.js");
__d(/* ramda/src/aperture.js */function(global, require, module, exports) {var _aperture = require(2028                  ); // 2028 = ./internal/_aperture
var _curry2 = require(1991                ); // 1991 = ./internal/_curry2
var _dispatchable = require(2000                      ); // 2000 = ./internal/_dispatchable
var _xaperture = require(2029                   ); // 2029 = ./internal/_xaperture

module.exports = _curry2(_dispatchable([], _xaperture, _aperture));
}, 2027, null, "ramda/src/aperture.js");
__d(/* ramda/src/internal/_aperture.js */function(global, require, module, exports) {module.exports = function _aperture(n, list) {
  var idx = 0;
  var limit = list.length - (n - 1);
  var acc = new Array(limit >= 0 ? limit : 0);
  while (idx < limit) {
    acc[idx] = Array.prototype.slice.call(list, idx, idx + n);
    idx += 1;
  }
  return acc;
};
}, 2028, null, "ramda/src/internal/_aperture.js");
__d(/* ramda/src/internal/_xaperture.js */function(global, require, module, exports) {var _concat = require(1993       ); // 1993 = ./_concat
var _curry2 = require(1991       ); // 1991 = ./_curry2
var _xfBase = require(2005       ); // 2005 = ./_xfBase

module.exports = function () {
  function XAperture(n, xf) {
    this.xf = xf;
    this.pos = 0;
    this.full = false;
    this.acc = new Array(n);
  }
  XAperture.prototype['@@transducer/init'] = _xfBase.init;
  XAperture.prototype['@@transducer/result'] = function (result) {
    this.acc = null;
    return this.xf['@@transducer/result'](result);
  };
  XAperture.prototype['@@transducer/step'] = function (result, input) {
    this.store(input);
    return this.full ? this.xf['@@transducer/step'](result, this.getCopy()) : result;
  };
  XAperture.prototype.store = function (input) {
    this.acc[this.pos] = input;
    this.pos += 1;
    if (this.pos === this.acc.length) {
      this.pos = 0;
      this.full = true;
    }
  };
  XAperture.prototype.getCopy = function () {
    return _concat(Array.prototype.slice.call(this.acc, this.pos), Array.prototype.slice.call(this.acc, 0, this.pos));
  };

  return _curry2(function _xaperture(n, xf) {
    return new XAperture(n, xf);
  });
}();
}, 2029, null, "ramda/src/internal/_xaperture.js");
__d(/* ramda/src/append.js */function(global, require, module, exports) {var _concat = require(1993                ); // 1993 = ./internal/_concat
var _curry2 = require(1991                ); // 1991 = ./internal/_curry2

module.exports = _curry2(function append(el, list) {
  return _concat(list, [el]);
});
}, 2030, null, "ramda/src/append.js");
__d(/* ramda/src/apply.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2

module.exports = _curry2(function apply(fn, args) {
  return fn.apply(this, args);
});
}, 2031, null, "ramda/src/apply.js");
__d(/* ramda/src/applySpec.js */function(global, require, module, exports) {var _curry1 = require(1986                ); // 1986 = ./internal/_curry1
var apply = require(2031     ); // 2031 = ./apply
var curryN = require(1994      ); // 1994 = ./curryN
var map = require(2009   ); // 2009 = ./map
var max = require(2007   ); // 2007 = ./max
var pluck = require(2008     ); // 2008 = ./pluck
var reduce = require(2021      ); // 2021 = ./reduce
var values = require(2033      ); // 2033 = ./values

module.exports = _curry1(function applySpec(spec) {
  spec = map(function (v) {
    return typeof v == 'function' ? v : applySpec(v);
  }, spec);
  return curryN(reduce(max, 0, pluck('length', values(spec))), function () {
    var args = arguments;
    return map(function (f) {
      return apply(f, args);
    }, spec);
  });
});
}, 2032, null, "ramda/src/applySpec.js");
__d(/* ramda/src/values.js */function(global, require, module, exports) {var _curry1 = require(1986                ); // 1986 = ./internal/_curry1
var keys = require(2017    ); // 2017 = ./keys

module.exports = _curry1(function values(obj) {
  var props = keys(obj);
  var len = props.length;
  var vals = [];
  var idx = 0;
  while (idx < len) {
    vals[idx] = obj[props[idx]];
    idx += 1;
  }
  return vals;
});
}, 2033, null, "ramda/src/values.js");
__d(/* ramda/src/ascend.js */function(global, require, module, exports) {var _curry3 = require(1998                ); // 1998 = ./internal/_curry3

module.exports = _curry3(function ascend(fn, a, b) {
  var aa = fn(a);
  var bb = fn(b);
  return aa < bb ? -1 : aa > bb ? 1 : 0;
});
}, 2034, null, "ramda/src/ascend.js");
__d(/* ramda/src/assoc.js */function(global, require, module, exports) {var _curry3 = require(1998                ); // 1998 = ./internal/_curry3

module.exports = _curry3(function assoc(prop, val, obj) {
  var result = {};
  for (var p in obj) {
    result[p] = obj[p];
  }
  result[prop] = val;
  return result;
});
}, 2035, null, "ramda/src/assoc.js");
__d(/* ramda/src/assocPath.js */function(global, require, module, exports) {var _curry3 = require(1998                ); // 1998 = ./internal/_curry3
var _has = require(2018             ); // 2018 = ./internal/_has
var _isArray = require(2001                 ); // 2001 = ./internal/_isArray
var _isInteger = require(2037                   ); // 2037 = ./internal/_isInteger
var assoc = require(2035     ); // 2035 = ./assoc

module.exports = _curry3(function assocPath(path, val, obj) {
  if (path.length === 0) {
    return val;
  }
  var idx = path[0];
  if (path.length > 1) {
    var nextObj = _has(idx, obj) ? obj[idx] : _isInteger(path[1]) ? [] : {};
    val = assocPath(Array.prototype.slice.call(path, 1), val, nextObj);
  }
  if (_isInteger(idx) && _isArray(obj)) {
    var arr = [].concat(obj);
    arr[idx] = val;
    return arr;
  } else {
    return assoc(idx, val, obj);
  }
});
}, 2036, null, "ramda/src/assocPath.js");
__d(/* ramda/src/internal/_isInteger.js */function(global, require, module, exports) {
module.exports = Number.isInteger || function _isInteger(n) {
  return n << 0 === n;
};
}, 2037, null, "ramda/src/internal/_isInteger.js");
__d(/* ramda/src/binary.js */function(global, require, module, exports) {var _curry1 = require(1986                ); // 1986 = ./internal/_curry1
var nAry = require(2039    ); // 2039 = ./nAry

module.exports = _curry1(function binary(fn) {
  return nAry(2, fn);
});
}, 2038, null, "ramda/src/binary.js");
__d(/* ramda/src/nAry.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2

module.exports = _curry2(function nAry(n, fn) {
  switch (n) {
    case 0:
      return function () {
        return fn.call(this);
      };
    case 1:
      return function (a0) {
        return fn.call(this, a0);
      };
    case 2:
      return function (a0, a1) {
        return fn.call(this, a0, a1);
      };
    case 3:
      return function (a0, a1, a2) {
        return fn.call(this, a0, a1, a2);
      };
    case 4:
      return function (a0, a1, a2, a3) {
        return fn.call(this, a0, a1, a2, a3);
      };
    case 5:
      return function (a0, a1, a2, a3, a4) {
        return fn.call(this, a0, a1, a2, a3, a4);
      };
    case 6:
      return function (a0, a1, a2, a3, a4, a5) {
        return fn.call(this, a0, a1, a2, a3, a4, a5);
      };
    case 7:
      return function (a0, a1, a2, a3, a4, a5, a6) {
        return fn.call(this, a0, a1, a2, a3, a4, a5, a6);
      };
    case 8:
      return function (a0, a1, a2, a3, a4, a5, a6, a7) {
        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7);
      };
    case 9:
      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {
        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8);
      };
    case 10:
      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {
        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);
      };
    default:
      throw new Error('First argument to nAry must be a non-negative integer no greater than ten');
  }
});
}, 2039, null, "ramda/src/nAry.js");
__d(/* ramda/src/both.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2
var _isFunction = require(2041                    ); // 2041 = ./internal/_isFunction
var and = require(2022   ); // 2022 = ./and
var lift = require(2042    ); // 2042 = ./lift

module.exports = _curry2(function both(f, g) {
  return _isFunction(f) ? function _both() {
    return f.apply(this, arguments) && g.apply(this, arguments);
  } : lift(and)(f, g);
});
}, 2040, null, "ramda/src/both.js");
__d(/* ramda/src/internal/_isFunction.js */function(global, require, module, exports) {module.exports = function _isFunction(x) {
  return Object.prototype.toString.call(x) === '[object Function]';
};
}, 2041, null, "ramda/src/internal/_isFunction.js");
__d(/* ramda/src/lift.js */function(global, require, module, exports) {var _curry1 = require(1986                ); // 1986 = ./internal/_curry1
var liftN = require(2043     ); // 2043 = ./liftN

module.exports = _curry1(function lift(fn) {
  return liftN(fn.length, fn);
});
}, 2042, null, "ramda/src/lift.js");
__d(/* ramda/src/liftN.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2
var _reduce = require(2011                ); // 2011 = ./internal/_reduce
var ap = require(2026  ); // 2026 = ./ap
var curryN = require(1994      ); // 1994 = ./curryN
var map = require(2009   ); // 2009 = ./map

module.exports = _curry2(function liftN(arity, fn) {
  var lifted = curryN(arity, fn);
  return curryN(arity, function () {
    return _reduce(ap, map(lifted, arguments[0]), Array.prototype.slice.call(arguments, 1));
  });
});
}, 2043, null, "ramda/src/liftN.js");
__d(/* ramda/src/call.js */function(global, require, module, exports) {var curry = require(2045     ); // 2045 = ./curry

module.exports = curry(function call(fn) {
  return fn.apply(this, Array.prototype.slice.call(arguments, 1));
});
}, 2044, null, "ramda/src/call.js");
__d(/* ramda/src/curry.js */function(global, require, module, exports) {var _curry1 = require(1986                ); // 1986 = ./internal/_curry1
var curryN = require(1994      ); // 1994 = ./curryN

module.exports = _curry1(function curry(fn) {
  return curryN(fn.length, fn);
});
}, 2045, null, "ramda/src/curry.js");
__d(/* ramda/src/chain.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2
var _dispatchable = require(2000                      ); // 2000 = ./internal/_dispatchable
var _makeFlat = require(2047                  ); // 2047 = ./internal/_makeFlat
var _xchain = require(2048                ); // 2048 = ./internal/_xchain
var map = require(2009   ); // 2009 = ./map

module.exports = _curry2(_dispatchable(['chain'], _xchain, function chain(fn, monad) {
  if (typeof monad === 'function') {
    return function (x) {
      return fn(monad(x))(x);
    };
  }
  return _makeFlat(false)(map(fn, monad));
}));
}, 2046, null, "ramda/src/chain.js");
__d(/* ramda/src/internal/_makeFlat.js */function(global, require, module, exports) {var isArrayLike = require(2014            ); // 2014 = ../isArrayLike

module.exports = function _makeFlat(recursive) {
  return function flatt(list) {
    var value, jlen, j;
    var result = [];
    var idx = 0;
    var ilen = list.length;

    while (idx < ilen) {
      if (isArrayLike(list[idx])) {
        value = recursive ? flatt(list[idx]) : list[idx];
        j = 0;
        jlen = value.length;
        while (j < jlen) {
          result[result.length] = value[j];
          j += 1;
        }
      } else {
        result[result.length] = list[idx];
      }
      idx += 1;
    }
    return result;
  };
};
}, 2047, null, "ramda/src/internal/_makeFlat.js");
__d(/* ramda/src/internal/_xchain.js */function(global, require, module, exports) {var _curry2 = require(1991       ); // 1991 = ./_curry2
var _flatCat = require(2049        ); // 2049 = ./_flatCat
var map = require(2009    ); // 2009 = ../map

module.exports = _curry2(function _xchain(f, xf) {
  return map(f, _flatCat(xf));
});
}, 2048, null, "ramda/src/internal/_xchain.js");
__d(/* ramda/src/internal/_flatCat.js */function(global, require, module, exports) {var _forceReduced = require(2050             ); // 2050 = ./_forceReduced
var _reduce = require(2011       ); // 2011 = ./_reduce
var _xfBase = require(2005       ); // 2005 = ./_xfBase
var isArrayLike = require(2014            ); // 2014 = ../isArrayLike

module.exports = function () {
  var preservingReduced = function preservingReduced(xf) {
    return {
      '@@transducer/init': _xfBase.init,
      '@@transducer/result': function transducerResult(result) {
        return xf['@@transducer/result'](result);
      },
      '@@transducer/step': function transducerStep(result, input) {
        var ret = xf['@@transducer/step'](result, input);
        return ret['@@transducer/reduced'] ? _forceReduced(ret) : ret;
      }
    };
  };

  return function _xcat(xf) {
    var rxf = preservingReduced(xf);
    return {
      '@@transducer/init': _xfBase.init,
      '@@transducer/result': function transducerResult(result) {
        return rxf['@@transducer/result'](result);
      },
      '@@transducer/step': function transducerStep(result, input) {
        return !isArrayLike(input) ? _reduce(rxf, result, [input]) : _reduce(rxf, result, input);
      }
    };
  };
}();
}, 2049, null, "ramda/src/internal/_flatCat.js");
__d(/* ramda/src/internal/_forceReduced.js */function(global, require, module, exports) {module.exports = function _forceReduced(x) {
  return {
    '@@transducer/value': x,
    '@@transducer/reduced': true
  };
};
}, 2050, null, "ramda/src/internal/_forceReduced.js");
__d(/* ramda/src/clamp.js */function(global, require, module, exports) {var _curry3 = require(1998                ); // 1998 = ./internal/_curry3

module.exports = _curry3(function clamp(min, max, value) {
  if (min > max) {
    throw new Error('min must not be greater than max in clamp(min, max, value)');
  }
  return value < min ? min : value > max ? max : value;
});
}, 2051, null, "ramda/src/clamp.js");
__d(/* ramda/src/clone.js */function(global, require, module, exports) {var _clone = require(2053               ); // 2053 = ./internal/_clone
var _curry1 = require(1986                ); // 1986 = ./internal/_curry1

module.exports = _curry1(function clone(value) {
  return value != null && typeof value.clone === 'function' ? value.clone() : _clone(value, [], [], true);
});
}, 2052, null, "ramda/src/clone.js");
__d(/* ramda/src/internal/_clone.js */function(global, require, module, exports) {var _cloneRegExp = require(2054            ); // 2054 = ./_cloneRegExp
var type = require(2055     ); // 2055 = ../type

module.exports = function _clone(value, refFrom, refTo, deep) {
  var copy = function copy(copiedValue) {
    var len = refFrom.length;
    var idx = 0;
    while (idx < len) {
      if (value === refFrom[idx]) {
        return refTo[idx];
      }
      idx += 1;
    }
    refFrom[idx + 1] = value;
    refTo[idx + 1] = copiedValue;
    for (var key in value) {
      copiedValue[key] = deep ? _clone(value[key], refFrom, refTo, true) : value[key];
    }
    return copiedValue;
  };
  switch (type(value)) {
    case 'Object':
      return copy({});
    case 'Array':
      return copy([]);
    case 'Date':
      return new Date(value.valueOf());
    case 'RegExp':
      return _cloneRegExp(value);
    default:
      return value;
  }
};
}, 2053, null, "ramda/src/internal/_clone.js");
__d(/* ramda/src/internal/_cloneRegExp.js */function(global, require, module, exports) {module.exports = function _cloneRegExp(pattern) {
                                  return new RegExp(pattern.source, (pattern.global ? 'g' : '') + (pattern.ignoreCase ? 'i' : '') + (pattern.multiline ? 'm' : '') + (pattern.sticky ? 'y' : '') + (pattern.unicode ? 'u' : ''));
};
}, 2054, null, "ramda/src/internal/_cloneRegExp.js");
__d(/* ramda/src/type.js */function(global, require, module, exports) {var _curry1 = require(1986                ); // 1986 = ./internal/_curry1

module.exports = _curry1(function type(val) {
  return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);
});
}, 2055, null, "ramda/src/type.js");
__d(/* ramda/src/comparator.js */function(global, require, module, exports) {var _curry1 = require(1986                ); // 1986 = ./internal/_curry1

module.exports = _curry1(function comparator(pred) {
  return function (a, b) {
    return pred(a, b) ? -1 : pred(b, a) ? 1 : 0;
  };
});
}, 2056, null, "ramda/src/comparator.js");
__d(/* ramda/src/complement.js */function(global, require, module, exports) {var lift = require(2042    ); // 2042 = ./lift
var not = require(2058   ); // 2058 = ./not

module.exports = lift(not);
}, 2057, null, "ramda/src/complement.js");
__d(/* ramda/src/not.js */function(global, require, module, exports) {var _curry1 = require(1986                ); // 1986 = ./internal/_curry1

module.exports = _curry1(function not(a) {
  return !a;
});
}, 2058, null, "ramda/src/not.js");
__d(/* ramda/src/compose.js */function(global, require, module, exports) {var pipe = require(2060    ); // 2060 = ./pipe
var reverse = require(2065       ); // 2065 = ./reverse

module.exports = function compose() {
  if (arguments.length === 0) {
    throw new Error('compose requires at least one argument');
  }
  return pipe.apply(this, reverse(arguments));
};
}, 2059, null, "ramda/src/compose.js");
__d(/* ramda/src/pipe.js */function(global, require, module, exports) {var _arity = require(1995               ); // 1995 = ./internal/_arity
var _pipe = require(2061              ); // 2061 = ./internal/_pipe
var reduce = require(2021      ); // 2021 = ./reduce
var tail = require(2062    ); // 2062 = ./tail

module.exports = function pipe() {
  if (arguments.length === 0) {
    throw new Error('pipe requires at least one argument');
  }
  return _arity(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));
};
}, 2060, null, "ramda/src/pipe.js");
__d(/* ramda/src/internal/_pipe.js */function(global, require, module, exports) {module.exports = function _pipe(f, g) {
  return function () {
    return g.call(this, f.apply(this, arguments));
  };
};
}, 2061, null, "ramda/src/internal/_pipe.js");
__d(/* ramda/src/tail.js */function(global, require, module, exports) {var _checkForMethod = require(2063                        ); // 2063 = ./internal/_checkForMethod
var _curry1 = require(1986                ); // 1986 = ./internal/_curry1
var slice = require(2064     ); // 2064 = ./slice

module.exports = _curry1(_checkForMethod('tail', slice(1, Infinity)));
}, 2062, null, "ramda/src/tail.js");
__d(/* ramda/src/internal/_checkForMethod.js */function(global, require, module, exports) {var _isArray = require(2001        ); // 2001 = ./_isArray

module.exports = function _checkForMethod(methodname, fn) {
  return function () {
    var length = arguments.length;
    if (length === 0) {
      return fn();
    }
    var obj = arguments[length - 1];
    return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));
  };
};
}, 2063, null, "ramda/src/internal/_checkForMethod.js");
__d(/* ramda/src/slice.js */function(global, require, module, exports) {var _checkForMethod = require(2063                        ); // 2063 = ./internal/_checkForMethod
var _curry3 = require(1998                ); // 1998 = ./internal/_curry3

module.exports = _curry3(_checkForMethod('slice', function slice(fromIndex, toIndex, list) {
  return Array.prototype.slice.call(list, fromIndex, toIndex);
}));
}, 2064, null, "ramda/src/slice.js");
__d(/* ramda/src/reverse.js */function(global, require, module, exports) {var _curry1 = require(1986                ); // 1986 = ./internal/_curry1
var _isString = require(2015                  ); // 2015 = ./internal/_isString

module.exports = _curry1(function reverse(list) {
  return _isString(list) ? list.split('').reverse().join('') : Array.prototype.slice.call(list, 0).reverse();
});
}, 2065, null, "ramda/src/reverse.js");
__d(/* ramda/src/composeK.js */function(global, require, module, exports) {var chain = require(2046     ); // 2046 = ./chain
var compose = require(2059       ); // 2059 = ./compose
var map = require(2009   ); // 2009 = ./map

module.exports = function composeK() {
  if (arguments.length === 0) {
    throw new Error('composeK requires at least one argument');
  }
  var init = Array.prototype.slice.call(arguments);
  var last = init.pop();
  return compose(compose.apply(this, map(chain, init)), last);
};
}, 2066, null, "ramda/src/composeK.js");
__d(/* ramda/src/composeP.js */function(global, require, module, exports) {var pipeP = require(2068     ); // 2068 = ./pipeP
var reverse = require(2065       ); // 2065 = ./reverse

module.exports = function composeP() {
  if (arguments.length === 0) {
    throw new Error('composeP requires at least one argument');
  }
  return pipeP.apply(this, reverse(arguments));
};
}, 2067, null, "ramda/src/composeP.js");
__d(/* ramda/src/pipeP.js */function(global, require, module, exports) {var _arity = require(1995               ); // 1995 = ./internal/_arity
var _pipeP = require(2069               ); // 2069 = ./internal/_pipeP
var reduce = require(2021      ); // 2021 = ./reduce
var tail = require(2062    ); // 2062 = ./tail

module.exports = function pipeP() {
  if (arguments.length === 0) {
    throw new Error('pipeP requires at least one argument');
  }
  return _arity(arguments[0].length, reduce(_pipeP, arguments[0], tail(arguments)));
};
}, 2068, null, "ramda/src/pipeP.js");
__d(/* ramda/src/internal/_pipeP.js */function(global, require, module, exports) {module.exports = function _pipeP(f, g) {
  return function () {
    var ctx = this;
    return f.apply(ctx, arguments).then(function (x) {
      return g.call(ctx, x);
    });
  };
};
}, 2069, null, "ramda/src/internal/_pipeP.js");
__d(/* ramda/src/concat.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2
var _isArray = require(2001                 ); // 2001 = ./internal/_isArray
var _isFunction = require(2041                    ); // 2041 = ./internal/_isFunction
var toString = require(2071        ); // 2071 = ./toString

module.exports = _curry2(function concat(a, b) {
  if (a == null || !_isFunction(a.concat)) {
    throw new TypeError(toString(a) + ' does not have a method named "concat"');
  }
  if (_isArray(a) && !_isArray(b)) {
    throw new TypeError(toString(b) + ' is not an array');
  }
  return a.concat(b);
});
}, 2070, null, "ramda/src/concat.js");
__d(/* ramda/src/toString.js */function(global, require, module, exports) {var _curry1 = require(1986                ); // 1986 = ./internal/_curry1
var _toString = require(2072                  ); // 2072 = ./internal/_toString

module.exports = _curry1(function toString(val) {
  return _toString(val, []);
});
}, 2071, null, "ramda/src/toString.js");
__d(/* ramda/src/internal/_toString.js */function(global, require, module, exports) {var _contains = require(2073         ); // 2073 = ./_contains
var _map = require(2010    ); // 2010 = ./_map
var _quote = require(2080      ); // 2080 = ./_quote
var _toISOString = require(2081            ); // 2081 = ./_toISOString
var keys = require(2017     ); // 2017 = ../keys
var reject = require(2082       ); // 2082 = ../reject

module.exports = function _toString(x, seen) {
  var recur = function recur(y) {
    var xs = seen.concat([x]);
    return _contains(y, xs) ? '<Circular>' : _toString(y, xs);
  };

  var mapPairs = function mapPairs(obj, keys) {
    return _map(function (k) {
      return _quote(k) + ': ' + recur(obj[k]);
    }, keys.slice().sort());
  };

  switch (Object.prototype.toString.call(x)) {
    case '[object Arguments]':
      return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';
    case '[object Array]':
      return '[' + _map(recur, x).concat(mapPairs(x, reject(function (k) {
        return (/^\d+$/.test(k)
        );
      }, keys(x)))).join(', ') + ']';
    case '[object Boolean]':
      return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();
    case '[object Date]':
      return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';
    case '[object Null]':
      return 'null';
    case '[object Number]':
      return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);
    case '[object String]':
      return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);
    case '[object Undefined]':
      return 'undefined';
    default:
      if (typeof x.toString === 'function') {
        var repr = x.toString();
        if (repr !== '[object Object]') {
          return repr;
        }
      }
      return '{' + mapPairs(x, keys(x)).join(', ') + '}';
  }
};
}, 2072, null, "ramda/src/internal/_toString.js");
__d(/* ramda/src/internal/_contains.js */function(global, require, module, exports) {var _indexOf = require(2074        ); // 2074 = ./_indexOf

module.exports = function _contains(a, list) {
  return _indexOf(list, a, 0) >= 0;
};
}, 2073, null, "ramda/src/internal/_contains.js");
__d(/* ramda/src/internal/_indexOf.js */function(global, require, module, exports) {var equals = require(2075       ); // 2075 = ../equals

module.exports = function _indexOf(list, a, idx) {
  var inf, item;

  if (typeof list.indexOf === 'function') {
    switch (typeof a) {
      case 'number':
        if (a === 0) {
          inf = 1 / a;
          while (idx < list.length) {
            item = list[idx];
            if (item === 0 && 1 / item === inf) {
              return idx;
            }
            idx += 1;
          }
          return -1;
        } else if (a !== a) {
          while (idx < list.length) {
            item = list[idx];
            if (typeof item === 'number' && item !== item) {
              return idx;
            }
            idx += 1;
          }
          return -1;
        }

        return list.indexOf(a, idx);

      case 'string':
      case 'boolean':
      case 'function':
      case 'undefined':
        return list.indexOf(a, idx);

      case 'object':
        if (a === null) {
          return list.indexOf(a, idx);
        }
    }
  }

  while (idx < list.length) {
    if (equals(list[idx], a)) {
      return idx;
    }
    idx += 1;
  }
  return -1;
};
}, 2074, null, "ramda/src/internal/_indexOf.js");
__d(/* ramda/src/equals.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2
var _equals = require(2076                ); // 2076 = ./internal/_equals

module.exports = _curry2(function equals(a, b) {
  return _equals(a, b, [], []);
});
}, 2075, null, "ramda/src/equals.js");
__d(/* ramda/src/internal/_equals.js */function(global, require, module, exports) {var _arrayFromIterator = require(2077                  ); // 2077 = ./_arrayFromIterator
var _functionName = require(2078             ); // 2078 = ./_functionName
var _has = require(2018    ); // 2018 = ./_has
var identical = require(2079          ); // 2079 = ../identical
var keys = require(2017     ); // 2017 = ../keys
var type = require(2055     ); // 2055 = ../type

module.exports = function _equals(a, b, stackA, stackB) {
  if (identical(a, b)) {
    return true;
  }

  if (type(a) !== type(b)) {
    return false;
  }

  if (a == null || b == null) {
    return false;
  }

  if (typeof a.equals === 'function' || typeof b.equals === 'function') {
    return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);
  }

  switch (type(a)) {
    case 'Arguments':
    case 'Array':
    case 'Object':
      if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {
        return a === b;
      }
      break;
    case 'Boolean':
    case 'Number':
    case 'String':
      if (!(typeof a === typeof b && identical(a.valueOf(), b.valueOf()))) {
        return false;
      }
      break;
    case 'Date':
      if (!identical(a.valueOf(), b.valueOf())) {
        return false;
      }
      break;
    case 'Error':
      return a.name === b.name && a.message === b.message;
    case 'RegExp':
      if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {
        return false;
      }
      break;
    case 'Map':
    case 'Set':
      if (!_equals(_arrayFromIterator(a.entries()), _arrayFromIterator(b.entries()), stackA, stackB)) {
        return false;
      }
      break;
    case 'Int8Array':
    case 'Uint8Array':
    case 'Uint8ClampedArray':
    case 'Int16Array':
    case 'Uint16Array':
    case 'Int32Array':
    case 'Uint32Array':
    case 'Float32Array':
    case 'Float64Array':
      break;
    case 'ArrayBuffer':
      break;
    default:
      return false;
  }

  var keysA = keys(a);
  if (keysA.length !== keys(b).length) {
    return false;
  }

  var idx = stackA.length - 1;
  while (idx >= 0) {
    if (stackA[idx] === a) {
      return stackB[idx] === b;
    }
    idx -= 1;
  }

  stackA.push(a);
  stackB.push(b);
  idx = keysA.length - 1;
  while (idx >= 0) {
    var key = keysA[idx];
    if (!(_has(key, b) && _equals(b[key], a[key], stackA, stackB))) {
      return false;
    }
    idx -= 1;
  }
  stackA.pop();
  stackB.pop();
  return true;
};
}, 2076, null, "ramda/src/internal/_equals.js");
__d(/* ramda/src/internal/_arrayFromIterator.js */function(global, require, module, exports) {module.exports = function _arrayFromIterator(iter) {
  var list = [];
  var next;
  while (!(next = iter.next()).done) {
    list.push(next.value);
  }
  return list;
};
}, 2077, null, "ramda/src/internal/_arrayFromIterator.js");
__d(/* ramda/src/internal/_functionName.js */function(global, require, module, exports) {module.exports = function _functionName(f) {
  var match = String(f).match(/^function (\w*)/);
  return match == null ? '' : match[1];
};
}, 2078, null, "ramda/src/internal/_functionName.js");
__d(/* ramda/src/identical.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2

module.exports = _curry2(function identical(a, b) {
  if (a === b) {
    return a !== 0 || 1 / a === 1 / b;
  } else {
    return a !== a && b !== b;
  }
});
}, 2079, null, "ramda/src/identical.js");
__d(/* ramda/src/internal/_quote.js */function(global, require, module, exports) {module.exports = function _quote(s) {
  var escaped = s.replace(/\\/g, '\\\\').replace(/[\b]/g, '\\b').replace(/\f/g, '\\f').replace(/\n/g, '\\n').replace(/\r/g, '\\r').replace(/\t/g, '\\t').replace(/\v/g, '\\v').replace(/\0/g, '\\0');

  return '"' + escaped.replace(/"/g, '\\"') + '"';
};
}, 2080, null, "ramda/src/internal/_quote.js");
__d(/* ramda/src/internal/_toISOString.js */function(global, require, module, exports) {
module.exports = function () {
  var pad = function pad(n) {
    return (n < 10 ? '0' : '') + n;
  };

  return typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {
    return d.toISOString();
  } : function _toISOString(d) {
    return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';
  };
}();
}, 2081, null, "ramda/src/internal/_toISOString.js");
__d(/* ramda/src/reject.js */function(global, require, module, exports) {var _complement = require(2083                    ); // 2083 = ./internal/_complement
var _curry2 = require(1991                ); // 1991 = ./internal/_curry2
var filter = require(2084      ); // 2084 = ./filter

module.exports = _curry2(function reject(pred, filterable) {
  return filter(_complement(pred), filterable);
});
}, 2082, null, "ramda/src/reject.js");
__d(/* ramda/src/internal/_complement.js */function(global, require, module, exports) {module.exports = function _complement(f) {
  return function () {
    return !f.apply(this, arguments);
  };
};
}, 2083, null, "ramda/src/internal/_complement.js");
__d(/* ramda/src/filter.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2
var _dispatchable = require(2000                      ); // 2000 = ./internal/_dispatchable
var _filter = require(2085                ); // 2085 = ./internal/_filter
var _isObject = require(2086                  ); // 2086 = ./internal/_isObject
var _reduce = require(2011                ); // 2011 = ./internal/_reduce
var _xfilter = require(2087                 ); // 2087 = ./internal/_xfilter
var keys = require(2017    ); // 2017 = ./keys

module.exports = _curry2(_dispatchable(['filter'], _xfilter, function (pred, filterable) {
  return _isObject(filterable) ? _reduce(function (acc, key) {
    if (pred(filterable[key])) {
      acc[key] = filterable[key];
    }
    return acc;
  }, {}, keys(filterable)) : _filter(pred, filterable);
}));
}, 2084, null, "ramda/src/filter.js");
__d(/* ramda/src/internal/_filter.js */function(global, require, module, exports) {module.exports = function _filter(fn, list) {
  var idx = 0;
  var len = list.length;
  var result = [];

  while (idx < len) {
    if (fn(list[idx])) {
      result[result.length] = list[idx];
    }
    idx += 1;
  }
  return result;
};
}, 2085, null, "ramda/src/internal/_filter.js");
__d(/* ramda/src/internal/_isObject.js */function(global, require, module, exports) {module.exports = function _isObject(x) {
  return Object.prototype.toString.call(x) === '[object Object]';
};
}, 2086, null, "ramda/src/internal/_isObject.js");
__d(/* ramda/src/internal/_xfilter.js */function(global, require, module, exports) {var _curry2 = require(1991       ); // 1991 = ./_curry2
var _xfBase = require(2005       ); // 2005 = ./_xfBase

module.exports = function () {
  function XFilter(f, xf) {
    this.xf = xf;
    this.f = f;
  }
  XFilter.prototype['@@transducer/init'] = _xfBase.init;
  XFilter.prototype['@@transducer/result'] = _xfBase.result;
  XFilter.prototype['@@transducer/step'] = function (result, input) {
    return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;
  };

  return _curry2(function _xfilter(f, xf) {
    return new XFilter(f, xf);
  });
}();
}, 2087, null, "ramda/src/internal/_xfilter.js");
__d(/* ramda/src/cond.js */function(global, require, module, exports) {var _arity = require(1995               ); // 1995 = ./internal/_arity
var _curry1 = require(1986                ); // 1986 = ./internal/_curry1
var map = require(2009   ); // 2009 = ./map
var max = require(2007   ); // 2007 = ./max
var reduce = require(2021      ); // 2021 = ./reduce

module.exports = _curry1(function cond(pairs) {
  var arity = reduce(max, 0, map(function (pair) {
    return pair[0].length;
  }, pairs));
  return _arity(arity, function () {
    var idx = 0;
    while (idx < pairs.length) {
      if (pairs[idx][0].apply(this, arguments)) {
        return pairs[idx][1].apply(this, arguments);
      }
      idx += 1;
    }
  });
});
}, 2088, null, "ramda/src/cond.js");
__d(/* ramda/src/construct.js */function(global, require, module, exports) {var _curry1 = require(1986                ); // 1986 = ./internal/_curry1
var constructN = require(2090          ); // 2090 = ./constructN

module.exports = _curry1(function construct(Fn) {
  return constructN(Fn.length, Fn);
});
}, 2089, null, "ramda/src/construct.js");
__d(/* ramda/src/constructN.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2
var curry = require(2045     ); // 2045 = ./curry
var nAry = require(2039    ); // 2039 = ./nAry

module.exports = _curry2(function constructN(n, Fn) {
  if (n > 10) {
    throw new Error('Constructor with greater than ten arguments');
  }
  if (n === 0) {
    return function () {
      return new Fn();
    };
  }
  return curry(nAry(n, function ($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {
    switch (arguments.length) {
      case 1:
        return new Fn($0);
      case 2:
        return new Fn($0, $1);
      case 3:
        return new Fn($0, $1, $2);
      case 4:
        return new Fn($0, $1, $2, $3);
      case 5:
        return new Fn($0, $1, $2, $3, $4);
      case 6:
        return new Fn($0, $1, $2, $3, $4, $5);
      case 7:
        return new Fn($0, $1, $2, $3, $4, $5, $6);
      case 8:
        return new Fn($0, $1, $2, $3, $4, $5, $6, $7);
      case 9:
        return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8);
      case 10:
        return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8, $9);
    }
  }));
});
}, 2090, null, "ramda/src/constructN.js");
__d(/* ramda/src/contains.js */function(global, require, module, exports) {var _contains = require(2073                  ); // 2073 = ./internal/_contains
var _curry2 = require(1991                ); // 1991 = ./internal/_curry2

module.exports = _curry2(_contains);
}, 2091, null, "ramda/src/contains.js");
__d(/* ramda/src/converge.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2
var _map = require(2010             ); // 2010 = ./internal/_map
var curryN = require(1994      ); // 1994 = ./curryN
var max = require(2007   ); // 2007 = ./max
var pluck = require(2008     ); // 2008 = ./pluck
var reduce = require(2021      ); // 2021 = ./reduce

module.exports = _curry2(function converge(after, fns) {
  return curryN(reduce(max, 0, pluck('length', fns)), function () {
    var args = arguments;
    var context = this;
    return after.apply(context, _map(function (fn) {
      return fn.apply(context, args);
    }, fns));
  });
});
}, 2092, null, "ramda/src/converge.js");
__d(/* ramda/src/countBy.js */function(global, require, module, exports) {var reduceBy = require(2094        ); // 2094 = ./reduceBy

module.exports = reduceBy(function (acc, elem) {
  return acc + 1;
}, 0);
}, 2093, null, "ramda/src/countBy.js");
__d(/* ramda/src/reduceBy.js */function(global, require, module, exports) {var _curryN = require(1996                ); // 1996 = ./internal/_curryN
var _dispatchable = require(2000                      ); // 2000 = ./internal/_dispatchable
var _has = require(2018             ); // 2018 = ./internal/_has
var _reduce = require(2011                ); // 2011 = ./internal/_reduce
var _xreduceBy = require(2095                   ); // 2095 = ./internal/_xreduceBy

module.exports = _curryN(4, [], _dispatchable([], _xreduceBy, function reduceBy(valueFn, valueAcc, keyFn, list) {
  return _reduce(function (acc, elt) {
    var key = keyFn(elt);
    acc[key] = valueFn(_has(key, acc) ? acc[key] : valueAcc, elt);
    return acc;
  }, {}, list);
}));
}, 2094, null, "ramda/src/reduceBy.js");
__d(/* ramda/src/internal/_xreduceBy.js */function(global, require, module, exports) {var _curryN = require(1996       ); // 1996 = ./_curryN
var _has = require(2018    ); // 2018 = ./_has
var _xfBase = require(2005       ); // 2005 = ./_xfBase

module.exports = function () {
  function XReduceBy(valueFn, valueAcc, keyFn, xf) {
    this.valueFn = valueFn;
    this.valueAcc = valueAcc;
    this.keyFn = keyFn;
    this.xf = xf;
    this.inputs = {};
  }
  XReduceBy.prototype['@@transducer/init'] = _xfBase.init;
  XReduceBy.prototype['@@transducer/result'] = function (result) {
    var key;
    for (key in this.inputs) {
      if (_has(key, this.inputs)) {
        result = this.xf['@@transducer/step'](result, this.inputs[key]);
        if (result['@@transducer/reduced']) {
          result = result['@@transducer/value'];
          break;
        }
      }
    }
    this.inputs = null;
    return this.xf['@@transducer/result'](result);
  };
  XReduceBy.prototype['@@transducer/step'] = function (result, input) {
    var key = this.keyFn(input);
    this.inputs[key] = this.inputs[key] || [key, this.valueAcc];
    this.inputs[key][1] = this.valueFn(this.inputs[key][1], input);
    return result;
  };

  return _curryN(4, [], function _xreduceBy(valueFn, valueAcc, keyFn, xf) {
    return new XReduceBy(valueFn, valueAcc, keyFn, xf);
  });
}();
}, 2095, null, "ramda/src/internal/_xreduceBy.js");
__d(/* ramda/src/dec.js */function(global, require, module, exports) {var add = require(1990   ); // 1990 = ./add

module.exports = add(-1);
}, 2096, null, "ramda/src/dec.js");
__d(/* ramda/src/descend.js */function(global, require, module, exports) {var _curry3 = require(1998                ); // 1998 = ./internal/_curry3

module.exports = _curry3(function descend(fn, a, b) {
  var aa = fn(a);
  var bb = fn(b);
  return aa > bb ? -1 : aa < bb ? 1 : 0;
});
}, 2097, null, "ramda/src/descend.js");
__d(/* ramda/src/defaultTo.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2

module.exports = _curry2(function defaultTo(d, v) {
  return v == null || v !== v ? d : v;
});
}, 2098, null, "ramda/src/defaultTo.js");
__d(/* ramda/src/difference.js */function(global, require, module, exports) {var _contains = require(2073                  ); // 2073 = ./internal/_contains
var _curry2 = require(1991                ); // 1991 = ./internal/_curry2

module.exports = _curry2(function difference(first, second) {
  var out = [];
  var idx = 0;
  var firstLen = first.length;
  while (idx < firstLen) {
    if (!_contains(first[idx], second) && !_contains(first[idx], out)) {
      out[out.length] = first[idx];
    }
    idx += 1;
  }
  return out;
});
}, 2099, null, "ramda/src/difference.js");
__d(/* ramda/src/differenceWith.js */function(global, require, module, exports) {var _containsWith = require(2101                      ); // 2101 = ./internal/_containsWith
var _curry3 = require(1998                ); // 1998 = ./internal/_curry3

module.exports = _curry3(function differenceWith(pred, first, second) {
  var out = [];
  var idx = 0;
  var firstLen = first.length;
  while (idx < firstLen) {
    if (!_containsWith(pred, first[idx], second) && !_containsWith(pred, first[idx], out)) {
      out.push(first[idx]);
    }
    idx += 1;
  }
  return out;
});
}, 2100, null, "ramda/src/differenceWith.js");
__d(/* ramda/src/internal/_containsWith.js */function(global, require, module, exports) {module.exports = function _containsWith(pred, x, list) {
  var idx = 0;
  var len = list.length;

  while (idx < len) {
    if (pred(x, list[idx])) {
      return true;
    }
    idx += 1;
  }
  return false;
};
}, 2101, null, "ramda/src/internal/_containsWith.js");
__d(/* ramda/src/dissoc.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2

module.exports = _curry2(function dissoc(prop, obj) {
  var result = {};
  for (var p in obj) {
    result[p] = obj[p];
  }
  delete result[prop];
  return result;
});
}, 2102, null, "ramda/src/dissoc.js");
__d(/* ramda/src/dissocPath.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2
var assoc = require(2035     ); // 2035 = ./assoc
var dissoc = require(2102      ); // 2102 = ./dissoc

module.exports = _curry2(function dissocPath(path, obj) {
  switch (path.length) {
    case 0:
      return obj;
    case 1:
      return dissoc(path[0], obj);
    default:
      var head = path[0];
      var tail = Array.prototype.slice.call(path, 1);
      return obj[head] == null ? obj : assoc(head, dissocPath(tail, obj[head]), obj);
  }
});
}, 2103, null, "ramda/src/dissocPath.js");
__d(/* ramda/src/divide.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2

module.exports = _curry2(function divide(a, b) {
  return a / b;
});
}, 2104, null, "ramda/src/divide.js");
__d(/* ramda/src/drop.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2
var _dispatchable = require(2000                      ); // 2000 = ./internal/_dispatchable
var _xdrop = require(2106               ); // 2106 = ./internal/_xdrop
var slice = require(2064     ); // 2064 = ./slice

module.exports = _curry2(_dispatchable(['drop'], _xdrop, function drop(n, xs) {
  return slice(Math.max(0, n), Infinity, xs);
}));
}, 2105, null, "ramda/src/drop.js");
__d(/* ramda/src/internal/_xdrop.js */function(global, require, module, exports) {var _curry2 = require(1991       ); // 1991 = ./_curry2
var _xfBase = require(2005       ); // 2005 = ./_xfBase

module.exports = function () {
  function XDrop(n, xf) {
    this.xf = xf;
    this.n = n;
  }
  XDrop.prototype['@@transducer/init'] = _xfBase.init;
  XDrop.prototype['@@transducer/result'] = _xfBase.result;
  XDrop.prototype['@@transducer/step'] = function (result, input) {
    if (this.n > 0) {
      this.n -= 1;
      return result;
    }
    return this.xf['@@transducer/step'](result, input);
  };

  return _curry2(function _xdrop(n, xf) {
    return new XDrop(n, xf);
  });
}();
}, 2106, null, "ramda/src/internal/_xdrop.js");
__d(/* ramda/src/dropLast.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2
var _dispatchable = require(2000                      ); // 2000 = ./internal/_dispatchable
var _dropLast = require(2108                  ); // 2108 = ./internal/_dropLast
var _xdropLast = require(2111                   ); // 2111 = ./internal/_xdropLast

module.exports = _curry2(_dispatchable([], _xdropLast, _dropLast));
}, 2107, null, "ramda/src/dropLast.js");
__d(/* ramda/src/internal/_dropLast.js */function(global, require, module, exports) {var take = require(2109     ); // 2109 = ../take

module.exports = function dropLast(n, xs) {
  return take(n < xs.length ? xs.length - n : 0, xs);
};
}, 2108, null, "ramda/src/internal/_dropLast.js");
__d(/* ramda/src/take.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2
var _dispatchable = require(2000                      ); // 2000 = ./internal/_dispatchable
var _xtake = require(2110               ); // 2110 = ./internal/_xtake
var slice = require(2064     ); // 2064 = ./slice

module.exports = _curry2(_dispatchable(['take'], _xtake, function take(n, xs) {
  return slice(0, n < 0 ? Infinity : n, xs);
}));
}, 2109, null, "ramda/src/take.js");
__d(/* ramda/src/internal/_xtake.js */function(global, require, module, exports) {var _curry2 = require(1991       ); // 1991 = ./_curry2
var _reduced = require(2004        ); // 2004 = ./_reduced
var _xfBase = require(2005       ); // 2005 = ./_xfBase

module.exports = function () {
  function XTake(n, xf) {
    this.xf = xf;
    this.n = n;
    this.i = 0;
  }
  XTake.prototype['@@transducer/init'] = _xfBase.init;
  XTake.prototype['@@transducer/result'] = _xfBase.result;
  XTake.prototype['@@transducer/step'] = function (result, input) {
    this.i += 1;
    var ret = this.n === 0 ? result : this.xf['@@transducer/step'](result, input);
    return this.i >= this.n ? _reduced(ret) : ret;
  };

  return _curry2(function _xtake(n, xf) {
    return new XTake(n, xf);
  });
}();
}, 2110, null, "ramda/src/internal/_xtake.js");
__d(/* ramda/src/internal/_xdropLast.js */function(global, require, module, exports) {var _curry2 = require(1991       ); // 1991 = ./_curry2
var _xfBase = require(2005       ); // 2005 = ./_xfBase

module.exports = function () {
  function XDropLast(n, xf) {
    this.xf = xf;
    this.pos = 0;
    this.full = false;
    this.acc = new Array(n);
  }
  XDropLast.prototype['@@transducer/init'] = _xfBase.init;
  XDropLast.prototype['@@transducer/result'] = function (result) {
    this.acc = null;
    return this.xf['@@transducer/result'](result);
  };
  XDropLast.prototype['@@transducer/step'] = function (result, input) {
    if (this.full) {
      result = this.xf['@@transducer/step'](result, this.acc[this.pos]);
    }
    this.store(input);
    return result;
  };
  XDropLast.prototype.store = function (input) {
    this.acc[this.pos] = input;
    this.pos += 1;
    if (this.pos === this.acc.length) {
      this.pos = 0;
      this.full = true;
    }
  };

  return _curry2(function _xdropLast(n, xf) {
    return new XDropLast(n, xf);
  });
}();
}, 2111, null, "ramda/src/internal/_xdropLast.js");
__d(/* ramda/src/dropLastWhile.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2
var _dispatchable = require(2000                      ); // 2000 = ./internal/_dispatchable
var _dropLastWhile = require(2113                       ); // 2113 = ./internal/_dropLastWhile
var _xdropLastWhile = require(2114                        ); // 2114 = ./internal/_xdropLastWhile

module.exports = _curry2(_dispatchable([], _xdropLastWhile, _dropLastWhile));
}, 2112, null, "ramda/src/dropLastWhile.js");
__d(/* ramda/src/internal/_dropLastWhile.js */function(global, require, module, exports) {module.exports = function dropLastWhile(pred, list) {
  var idx = list.length - 1;
  while (idx >= 0 && pred(list[idx])) {
    idx -= 1;
  }
  return Array.prototype.slice.call(list, 0, idx + 1);
};
}, 2113, null, "ramda/src/internal/_dropLastWhile.js");
__d(/* ramda/src/internal/_xdropLastWhile.js */function(global, require, module, exports) {var _curry2 = require(1991       ); // 1991 = ./_curry2
var _reduce = require(2011       ); // 2011 = ./_reduce
var _xfBase = require(2005       ); // 2005 = ./_xfBase

module.exports = function () {
  function XDropLastWhile(fn, xf) {
    this.f = fn;
    this.retained = [];
    this.xf = xf;
  }
  XDropLastWhile.prototype['@@transducer/init'] = _xfBase.init;
  XDropLastWhile.prototype['@@transducer/result'] = function (result) {
    this.retained = null;
    return this.xf['@@transducer/result'](result);
  };
  XDropLastWhile.prototype['@@transducer/step'] = function (result, input) {
    return this.f(input) ? this.retain(result, input) : this.flush(result, input);
  };
  XDropLastWhile.prototype.flush = function (result, input) {
    result = _reduce(this.xf['@@transducer/step'], result, this.retained);
    this.retained = [];
    return this.xf['@@transducer/step'](result, input);
  };
  XDropLastWhile.prototype.retain = function (result, input) {
    this.retained.push(input);
    return result;
  };

  return _curry2(function _xdropLastWhile(fn, xf) {
    return new XDropLastWhile(fn, xf);
  });
}();
}, 2114, null, "ramda/src/internal/_xdropLastWhile.js");
__d(/* ramda/src/dropRepeats.js */function(global, require, module, exports) {var _curry1 = require(1986                ); // 1986 = ./internal/_curry1
var _dispatchable = require(2000                      ); // 2000 = ./internal/_dispatchable
var _xdropRepeatsWith = require(2116                          ); // 2116 = ./internal/_xdropRepeatsWith
var dropRepeatsWith = require(2117               ); // 2117 = ./dropRepeatsWith
var equals = require(2075      ); // 2075 = ./equals

module.exports = _curry1(_dispatchable([], _xdropRepeatsWith(equals), dropRepeatsWith(equals)));
}, 2115, null, "ramda/src/dropRepeats.js");
__d(/* ramda/src/internal/_xdropRepeatsWith.js */function(global, require, module, exports) {var _curry2 = require(1991       ); // 1991 = ./_curry2
var _xfBase = require(2005       ); // 2005 = ./_xfBase

module.exports = function () {
  function XDropRepeatsWith(pred, xf) {
    this.xf = xf;
    this.pred = pred;
    this.lastValue = undefined;
    this.seenFirstValue = false;
  }

  XDropRepeatsWith.prototype['@@transducer/init'] = _xfBase.init;
  XDropRepeatsWith.prototype['@@transducer/result'] = _xfBase.result;
  XDropRepeatsWith.prototype['@@transducer/step'] = function (result, input) {
    var sameAsLast = false;
    if (!this.seenFirstValue) {
      this.seenFirstValue = true;
    } else if (this.pred(this.lastValue, input)) {
      sameAsLast = true;
    }
    this.lastValue = input;
    return sameAsLast ? result : this.xf['@@transducer/step'](result, input);
  };

  return _curry2(function _xdropRepeatsWith(pred, xf) {
    return new XDropRepeatsWith(pred, xf);
  });
}();
}, 2116, null, "ramda/src/internal/_xdropRepeatsWith.js");
__d(/* ramda/src/dropRepeatsWith.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2
var _dispatchable = require(2000                      ); // 2000 = ./internal/_dispatchable
var _xdropRepeatsWith = require(2116                          ); // 2116 = ./internal/_xdropRepeatsWith
var last = require(2118    ); // 2118 = ./last

module.exports = _curry2(_dispatchable([], _xdropRepeatsWith, function dropRepeatsWith(pred, list) {
  var result = [];
  var idx = 1;
  var len = list.length;
  if (len !== 0) {
    result[0] = list[0];
    while (idx < len) {
      if (!pred(last(result), list[idx])) {
        result[result.length] = list[idx];
      }
      idx += 1;
    }
  }
  return result;
}));
}, 2117, null, "ramda/src/dropRepeatsWith.js");
__d(/* ramda/src/last.js */function(global, require, module, exports) {var nth = require(2119   ); // 2119 = ./nth

module.exports = nth(-1);
}, 2118, null, "ramda/src/last.js");
__d(/* ramda/src/nth.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2
var _isString = require(2015                  ); // 2015 = ./internal/_isString

module.exports = _curry2(function nth(offset, list) {
  var idx = offset < 0 ? list.length + offset : offset;
  return _isString(list) ? list.charAt(idx) : list[idx];
});
}, 2119, null, "ramda/src/nth.js");
__d(/* ramda/src/dropWhile.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2
var _dispatchable = require(2000                      ); // 2000 = ./internal/_dispatchable
var _xdropWhile = require(2121                    ); // 2121 = ./internal/_xdropWhile

module.exports = _curry2(_dispatchable(['dropWhile'], _xdropWhile, function dropWhile(pred, list) {
  var idx = 0;
  var len = list.length;
  while (idx < len && pred(list[idx])) {
    idx += 1;
  }
  return Array.prototype.slice.call(list, idx);
}));
}, 2120, null, "ramda/src/dropWhile.js");
__d(/* ramda/src/internal/_xdropWhile.js */function(global, require, module, exports) {var _curry2 = require(1991       ); // 1991 = ./_curry2
var _xfBase = require(2005       ); // 2005 = ./_xfBase

module.exports = function () {
  function XDropWhile(f, xf) {
    this.xf = xf;
    this.f = f;
  }
  XDropWhile.prototype['@@transducer/init'] = _xfBase.init;
  XDropWhile.prototype['@@transducer/result'] = _xfBase.result;
  XDropWhile.prototype['@@transducer/step'] = function (result, input) {
    if (this.f) {
      if (this.f(input)) {
        return result;
      }
      this.f = null;
    }
    return this.xf['@@transducer/step'](result, input);
  };

  return _curry2(function _xdropWhile(f, xf) {
    return new XDropWhile(f, xf);
  });
}();
}, 2121, null, "ramda/src/internal/_xdropWhile.js");
__d(/* ramda/src/either.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2
var _isFunction = require(2041                    ); // 2041 = ./internal/_isFunction
var lift = require(2042    ); // 2042 = ./lift
var or = require(2123  ); // 2123 = ./or

module.exports = _curry2(function either(f, g) {
  return _isFunction(f) ? function _either() {
    return f.apply(this, arguments) || g.apply(this, arguments);
  } : lift(or)(f, g);
});
}, 2122, null, "ramda/src/either.js");
__d(/* ramda/src/or.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2

module.exports = _curry2(function or(a, b) {
  return a || b;
});
}, 2123, null, "ramda/src/or.js");
__d(/* ramda/src/empty.js */function(global, require, module, exports) {var _curry1 = require(1986                ); // 1986 = ./internal/_curry1
var _isArguments = require(2019                     ); // 2019 = ./internal/_isArguments
var _isArray = require(2001                 ); // 2001 = ./internal/_isArray
var _isObject = require(2086                  ); // 2086 = ./internal/_isObject
var _isString = require(2015                  ); // 2015 = ./internal/_isString

module.exports = _curry1(function empty(x) {
  return x != null && typeof x.empty === 'function' ? x.empty() : x != null && x.constructor != null && typeof x.constructor.empty === 'function' ? x.constructor.empty() : _isArray(x) ? [] : _isString(x) ? '' : _isObject(x) ? {} : _isArguments(x) ? function () {
    return arguments;
  }() : void 0;
});
}, 2124, null, "ramda/src/empty.js");
__d(/* ramda/src/eqBy.js */function(global, require, module, exports) {var _curry3 = require(1998                ); // 1998 = ./internal/_curry3
var equals = require(2075      ); // 2075 = ./equals

module.exports = _curry3(function eqBy(f, x, y) {
  return equals(f(x), f(y));
});
}, 2125, null, "ramda/src/eqBy.js");
__d(/* ramda/src/eqProps.js */function(global, require, module, exports) {var _curry3 = require(1998                ); // 1998 = ./internal/_curry3
var equals = require(2075      ); // 2075 = ./equals

module.exports = _curry3(function eqProps(prop, obj1, obj2) {
  return equals(obj1[prop], obj2[prop]);
});
}, 2126, null, "ramda/src/eqProps.js");
__d(/* ramda/src/evolve.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2

module.exports = _curry2(function evolve(transformations, object) {
  var result = {};
  var transformation, key, type;
  for (key in object) {
    transformation = transformations[key];
    type = typeof transformation;
    result[key] = type === 'function' ? transformation(object[key]) : transformation && type === 'object' ? evolve(transformation, object[key]) : object[key];
  }
  return result;
});
}, 2127, null, "ramda/src/evolve.js");
__d(/* ramda/src/find.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2
var _dispatchable = require(2000                      ); // 2000 = ./internal/_dispatchable
var _xfind = require(2129               ); // 2129 = ./internal/_xfind

module.exports = _curry2(_dispatchable(['find'], _xfind, function find(fn, list) {
  var idx = 0;
  var len = list.length;
  while (idx < len) {
    if (fn(list[idx])) {
      return list[idx];
    }
    idx += 1;
  }
}));
}, 2128, null, "ramda/src/find.js");
__d(/* ramda/src/internal/_xfind.js */function(global, require, module, exports) {var _curry2 = require(1991       ); // 1991 = ./_curry2
var _reduced = require(2004        ); // 2004 = ./_reduced
var _xfBase = require(2005       ); // 2005 = ./_xfBase

module.exports = function () {
  function XFind(f, xf) {
    this.xf = xf;
    this.f = f;
    this.found = false;
  }
  XFind.prototype['@@transducer/init'] = _xfBase.init;
  XFind.prototype['@@transducer/result'] = function (result) {
    if (!this.found) {
      result = this.xf['@@transducer/step'](result, void 0);
    }
    return this.xf['@@transducer/result'](result);
  };
  XFind.prototype['@@transducer/step'] = function (result, input) {
    if (this.f(input)) {
      this.found = true;
      result = _reduced(this.xf['@@transducer/step'](result, input));
    }
    return result;
  };

  return _curry2(function _xfind(f, xf) {
    return new XFind(f, xf);
  });
}();
}, 2129, null, "ramda/src/internal/_xfind.js");
__d(/* ramda/src/findIndex.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2
var _dispatchable = require(2000                      ); // 2000 = ./internal/_dispatchable
var _xfindIndex = require(2131                    ); // 2131 = ./internal/_xfindIndex

module.exports = _curry2(_dispatchable([], _xfindIndex, function findIndex(fn, list) {
  var idx = 0;
  var len = list.length;
  while (idx < len) {
    if (fn(list[idx])) {
      return idx;
    }
    idx += 1;
  }
  return -1;
}));
}, 2130, null, "ramda/src/findIndex.js");
__d(/* ramda/src/internal/_xfindIndex.js */function(global, require, module, exports) {var _curry2 = require(1991       ); // 1991 = ./_curry2
var _reduced = require(2004        ); // 2004 = ./_reduced
var _xfBase = require(2005       ); // 2005 = ./_xfBase

module.exports = function () {
  function XFindIndex(f, xf) {
    this.xf = xf;
    this.f = f;
    this.idx = -1;
    this.found = false;
  }
  XFindIndex.prototype['@@transducer/init'] = _xfBase.init;
  XFindIndex.prototype['@@transducer/result'] = function (result) {
    if (!this.found) {
      result = this.xf['@@transducer/step'](result, -1);
    }
    return this.xf['@@transducer/result'](result);
  };
  XFindIndex.prototype['@@transducer/step'] = function (result, input) {
    this.idx += 1;
    if (this.f(input)) {
      this.found = true;
      result = _reduced(this.xf['@@transducer/step'](result, this.idx));
    }
    return result;
  };

  return _curry2(function _xfindIndex(f, xf) {
    return new XFindIndex(f, xf);
  });
}();
}, 2131, null, "ramda/src/internal/_xfindIndex.js");
__d(/* ramda/src/findLast.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2
var _dispatchable = require(2000                      ); // 2000 = ./internal/_dispatchable
var _xfindLast = require(2133                   ); // 2133 = ./internal/_xfindLast

module.exports = _curry2(_dispatchable([], _xfindLast, function findLast(fn, list) {
  var idx = list.length - 1;
  while (idx >= 0) {
    if (fn(list[idx])) {
      return list[idx];
    }
    idx -= 1;
  }
}));
}, 2132, null, "ramda/src/findLast.js");
__d(/* ramda/src/internal/_xfindLast.js */function(global, require, module, exports) {var _curry2 = require(1991       ); // 1991 = ./_curry2
var _xfBase = require(2005       ); // 2005 = ./_xfBase

module.exports = function () {
  function XFindLast(f, xf) {
    this.xf = xf;
    this.f = f;
  }
  XFindLast.prototype['@@transducer/init'] = _xfBase.init;
  XFindLast.prototype['@@transducer/result'] = function (result) {
    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.last));
  };
  XFindLast.prototype['@@transducer/step'] = function (result, input) {
    if (this.f(input)) {
      this.last = input;
    }
    return result;
  };

  return _curry2(function _xfindLast(f, xf) {
    return new XFindLast(f, xf);
  });
}();
}, 2133, null, "ramda/src/internal/_xfindLast.js");
__d(/* ramda/src/findLastIndex.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2
var _dispatchable = require(2000                      ); // 2000 = ./internal/_dispatchable
var _xfindLastIndex = require(2135                        ); // 2135 = ./internal/_xfindLastIndex

module.exports = _curry2(_dispatchable([], _xfindLastIndex, function findLastIndex(fn, list) {
  var idx = list.length - 1;
  while (idx >= 0) {
    if (fn(list[idx])) {
      return idx;
    }
    idx -= 1;
  }
  return -1;
}));
}, 2134, null, "ramda/src/findLastIndex.js");
__d(/* ramda/src/internal/_xfindLastIndex.js */function(global, require, module, exports) {var _curry2 = require(1991       ); // 1991 = ./_curry2
var _xfBase = require(2005       ); // 2005 = ./_xfBase

module.exports = function () {
  function XFindLastIndex(f, xf) {
    this.xf = xf;
    this.f = f;
    this.idx = -1;
    this.lastIdx = -1;
  }
  XFindLastIndex.prototype['@@transducer/init'] = _xfBase.init;
  XFindLastIndex.prototype['@@transducer/result'] = function (result) {
    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.lastIdx));
  };
  XFindLastIndex.prototype['@@transducer/step'] = function (result, input) {
    this.idx += 1;
    if (this.f(input)) {
      this.lastIdx = this.idx;
    }
    return result;
  };

  return _curry2(function _xfindLastIndex(f, xf) {
    return new XFindLastIndex(f, xf);
  });
}();
}, 2135, null, "ramda/src/internal/_xfindLastIndex.js");
__d(/* ramda/src/flatten.js */function(global, require, module, exports) {var _curry1 = require(1986                ); // 1986 = ./internal/_curry1
var _makeFlat = require(2047                  ); // 2047 = ./internal/_makeFlat

module.exports = _curry1(_makeFlat(true));
}, 2136, null, "ramda/src/flatten.js");
__d(/* ramda/src/flip.js */function(global, require, module, exports) {var _curry1 = require(1986                ); // 1986 = ./internal/_curry1
var curry = require(2045     ); // 2045 = ./curry

module.exports = _curry1(function flip(fn) {
  return curry(function (a, b) {
    var args = Array.prototype.slice.call(arguments, 0);
    args[0] = b;
    args[1] = a;
    return fn.apply(this, args);
  });
});
}, 2137, null, "ramda/src/flip.js");
__d(/* ramda/src/forEach.js */function(global, require, module, exports) {var _checkForMethod = require(2063                        ); // 2063 = ./internal/_checkForMethod
var _curry2 = require(1991                ); // 1991 = ./internal/_curry2

module.exports = _curry2(_checkForMethod('forEach', function forEach(fn, list) {
  var len = list.length;
  var idx = 0;
  while (idx < len) {
    fn(list[idx]);
    idx += 1;
  }
  return list;
}));
}, 2138, null, "ramda/src/forEach.js");
__d(/* ramda/src/forEachObjIndexed.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2
var keys = require(2017    ); // 2017 = ./keys

module.exports = _curry2(function forEachObjIndexed(fn, obj) {
  var keyList = keys(obj);
  var idx = 0;
  while (idx < keyList.length) {
    var key = keyList[idx];
    fn(obj[key], key, obj);
    idx += 1;
  }
  return obj;
});
}, 2139, null, "ramda/src/forEachObjIndexed.js");
__d(/* ramda/src/fromPairs.js */function(global, require, module, exports) {var _curry1 = require(1986                ); // 1986 = ./internal/_curry1

module.exports = _curry1(function fromPairs(pairs) {
  var result = {};
  var idx = 0;
  while (idx < pairs.length) {
    result[pairs[idx][0]] = pairs[idx][1];
    idx += 1;
  }
  return result;
});
}, 2140, null, "ramda/src/fromPairs.js");
__d(/* ramda/src/groupBy.js */function(global, require, module, exports) {var _checkForMethod = require(2063                        ); // 2063 = ./internal/_checkForMethod
var _curry2 = require(1991                ); // 1991 = ./internal/_curry2
var reduceBy = require(2094        ); // 2094 = ./reduceBy

module.exports = _curry2(_checkForMethod('groupBy', reduceBy(function (acc, item) {
  if (acc == null) {
    acc = [];
  }
  acc.push(item);
  return acc;
}, null)));
}, 2141, null, "ramda/src/groupBy.js");
__d(/* ramda/src/groupWith.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2

module.exports = _curry2(function (fn, list) {
  var res = [];
  var idx = 0;
  var len = list.length;
  while (idx < len) {
    var nextidx = idx + 1;
    while (nextidx < len && fn(list[idx], list[nextidx])) {
      nextidx += 1;
    }
    res.push(list.slice(idx, nextidx));
    idx = nextidx;
  }
  return res;
});
}, 2142, null, "ramda/src/groupWith.js");
__d(/* ramda/src/gt.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2

module.exports = _curry2(function gt(a, b) {
  return a > b;
});
}, 2143, null, "ramda/src/gt.js");
__d(/* ramda/src/gte.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2

module.exports = _curry2(function gte(a, b) {
  return a >= b;
});
}, 2144, null, "ramda/src/gte.js");
__d(/* ramda/src/has.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2
var _has = require(2018             ); // 2018 = ./internal/_has

module.exports = _curry2(_has);
}, 2145, null, "ramda/src/has.js");
__d(/* ramda/src/hasIn.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2

module.exports = _curry2(function hasIn(prop, obj) {
  return prop in obj;
});
}, 2146, null, "ramda/src/hasIn.js");
__d(/* ramda/src/head.js */function(global, require, module, exports) {var nth = require(2119   ); // 2119 = ./nth

module.exports = nth(0);
}, 2147, null, "ramda/src/head.js");
__d(/* ramda/src/identity.js */function(global, require, module, exports) {var _curry1 = require(1986                ); // 1986 = ./internal/_curry1
var _identity = require(2149                  ); // 2149 = ./internal/_identity

module.exports = _curry1(_identity);
}, 2148, null, "ramda/src/identity.js");
__d(/* ramda/src/internal/_identity.js */function(global, require, module, exports) {module.exports = function _identity(x) {
  return x;
};
}, 2149, null, "ramda/src/internal/_identity.js");
__d(/* ramda/src/ifElse.js */function(global, require, module, exports) {var _curry3 = require(1998                ); // 1998 = ./internal/_curry3
var curryN = require(1994      ); // 1994 = ./curryN

module.exports = _curry3(function ifElse(condition, onTrue, onFalse) {
  return curryN(Math.max(condition.length, onTrue.length, onFalse.length), function _ifElse() {
    return condition.apply(this, arguments) ? onTrue.apply(this, arguments) : onFalse.apply(this, arguments);
  });
});
}, 2150, null, "ramda/src/ifElse.js");
__d(/* ramda/src/inc.js */function(global, require, module, exports) {var add = require(1990   ); // 1990 = ./add

module.exports = add(1);
}, 2151, null, "ramda/src/inc.js");
__d(/* ramda/src/indexBy.js */function(global, require, module, exports) {var reduceBy = require(2094        ); // 2094 = ./reduceBy

module.exports = reduceBy(function (acc, elem) {
  return elem;
}, null);
}, 2152, null, "ramda/src/indexBy.js");
__d(/* ramda/src/indexOf.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2
var _indexOf = require(2074                 ); // 2074 = ./internal/_indexOf
var _isArray = require(2001                 ); // 2001 = ./internal/_isArray

module.exports = _curry2(function indexOf(target, xs) {
  return typeof xs.indexOf === 'function' && !_isArray(xs) ? xs.indexOf(target) : _indexOf(xs, target, 0);
});
}, 2153, null, "ramda/src/indexOf.js");
__d(/* ramda/src/init.js */function(global, require, module, exports) {var slice = require(2064     ); // 2064 = ./slice

module.exports = slice(0, -1);
}, 2154, null, "ramda/src/init.js");
__d(/* ramda/src/insert.js */function(global, require, module, exports) {var _curry3 = require(1998                ); // 1998 = ./internal/_curry3

module.exports = _curry3(function insert(idx, elt, list) {
  idx = idx < list.length && idx >= 0 ? idx : list.length;
  var result = Array.prototype.slice.call(list, 0);
  result.splice(idx, 0, elt);
  return result;
});
}, 2155, null, "ramda/src/insert.js");
__d(/* ramda/src/insertAll.js */function(global, require, module, exports) {var _curry3 = require(1998                ); // 1998 = ./internal/_curry3

module.exports = _curry3(function insertAll(idx, elts, list) {
  idx = idx < list.length && idx >= 0 ? idx : list.length;
  return [].concat(Array.prototype.slice.call(list, 0, idx), elts, Array.prototype.slice.call(list, idx));
});
}, 2156, null, "ramda/src/insertAll.js");
__d(/* ramda/src/intersection.js */function(global, require, module, exports) {var _contains = require(2073                  ); // 2073 = ./internal/_contains
var _curry2 = require(1991                ); // 1991 = ./internal/_curry2
var _filter = require(2085                ); // 2085 = ./internal/_filter
var flip = require(2137    ); // 2137 = ./flip
var uniq = require(2158    ); // 2158 = ./uniq

module.exports = _curry2(function intersection(list1, list2) {
  var lookupList, filteredList;
  if (list1.length > list2.length) {
    lookupList = list1;
    filteredList = list2;
  } else {
    lookupList = list2;
    filteredList = list1;
  }
  return uniq(_filter(flip(_contains)(lookupList), filteredList));
});
}, 2157, null, "ramda/src/intersection.js");
__d(/* ramda/src/uniq.js */function(global, require, module, exports) {var identity = require(2148        ); // 2148 = ./identity
var uniqBy = require(2159      ); // 2159 = ./uniqBy

module.exports = uniqBy(identity);
}, 2158, null, "ramda/src/uniq.js");
__d(/* ramda/src/uniqBy.js */function(global, require, module, exports) {var _Set = require(2160             ); // 2160 = ./internal/_Set
var _curry2 = require(1991                ); // 1991 = ./internal/_curry2

module.exports = _curry2(function uniqBy(fn, list) {
  var set = new _Set();
  var result = [];
  var idx = 0;
  var appliedItem, item;

  while (idx < list.length) {
    item = list[idx];
    appliedItem = fn(item);
    if (set.add(appliedItem)) {
      result.push(item);
    }
    idx += 1;
  }
  return result;
});
}, 2159, null, "ramda/src/uniqBy.js");
__d(/* ramda/src/internal/_Set.js */function(global, require, module, exports) {var _contains = require(2073         ); // 2073 = ./_contains

module.exports = function () {
  function _Set() {
    this._nativeSet = typeof Set === 'function' ? new Set() : null;
    this._items = {};
  }

  _Set.prototype.add = function (item) {
    return !hasOrAdd(item, true, this);
  };

  _Set.prototype.has = function (item) {
    return hasOrAdd(item, false, this);
  };

  function hasOrAdd(item, shouldAdd, set) {
    var type = typeof item;
    var prevSize, newSize;
    switch (type) {
      case 'string':
      case 'number':
        if (item === 0 && 1 / item === -Infinity) {
          if (set._items['-0']) {
            return true;
          } else {
            if (shouldAdd) {
              set._items['-0'] = true;
            }
            return false;
          }
        }

        if (set._nativeSet !== null) {
          if (shouldAdd) {
            prevSize = set._nativeSet.size;
            set._nativeSet.add(item);
            newSize = set._nativeSet.size;
            return newSize === prevSize;
          } else {
            return set._nativeSet.has(item);
          }
        } else {
          if (!(type in set._items)) {
            if (shouldAdd) {
              set._items[type] = {};
              set._items[type][item] = true;
            }
            return false;
          } else if (item in set._items[type]) {
            return true;
          } else {
            if (shouldAdd) {
              set._items[type][item] = true;
            }
            return false;
          }
        }

      case 'boolean':
        if (type in set._items) {
          var bIdx = item ? 1 : 0;
          if (set._items[type][bIdx]) {
            return true;
          } else {
            if (shouldAdd) {
              set._items[type][bIdx] = true;
            }
            return false;
          }
        } else {
          if (shouldAdd) {
            set._items[type] = item ? [false, true] : [true, false];
          }
          return false;
        }

      case 'function':
        if (set._nativeSet !== null) {
          if (shouldAdd) {
            prevSize = set._nativeSet.size;
            set._nativeSet.add(item);
            newSize = set._nativeSet.size;
            return newSize === prevSize;
          } else {
            return set._nativeSet.has(item);
          }
        } else {
          if (!(type in set._items)) {
            if (shouldAdd) {
              set._items[type] = [item];
            }
            return false;
          }
          if (!_contains(item, set._items[type])) {
            if (shouldAdd) {
              set._items[type].push(item);
            }
            return false;
          }
          return true;
        }

      case 'undefined':
        if (set._items[type]) {
          return true;
        } else {
          if (shouldAdd) {
            set._items[type] = true;
          }
          return false;
        }

      case 'object':
        if (item === null) {
          if (!set._items['null']) {
            if (shouldAdd) {
              set._items['null'] = true;
            }
            return false;
          }
          return true;
        }

      default:
        type = Object.prototype.toString.call(item);
        if (!(type in set._items)) {
          if (shouldAdd) {
            set._items[type] = [item];
          }
          return false;
        }

        if (!_contains(item, set._items[type])) {
          if (shouldAdd) {
            set._items[type].push(item);
          }
          return false;
        }
        return true;
    }
  }
  return _Set;
}();
}, 2160, null, "ramda/src/internal/_Set.js");
__d(/* ramda/src/intersectionWith.js */function(global, require, module, exports) {var _containsWith = require(2101                      ); // 2101 = ./internal/_containsWith
var _curry3 = require(1998                ); // 1998 = ./internal/_curry3
var uniqWith = require(2162        ); // 2162 = ./uniqWith

module.exports = _curry3(function intersectionWith(pred, list1, list2) {
  var lookupList, filteredList;
  if (list1.length > list2.length) {
    lookupList = list1;
    filteredList = list2;
  } else {
    lookupList = list2;
    filteredList = list1;
  }
  var results = [];
  var idx = 0;
  while (idx < filteredList.length) {
    if (_containsWith(pred, filteredList[idx], lookupList)) {
      results[results.length] = filteredList[idx];
    }
    idx += 1;
  }
  return uniqWith(pred, results);
});
}, 2161, null, "ramda/src/intersectionWith.js");
__d(/* ramda/src/uniqWith.js */function(global, require, module, exports) {var _containsWith = require(2101                      ); // 2101 = ./internal/_containsWith
var _curry2 = require(1991                ); // 1991 = ./internal/_curry2

module.exports = _curry2(function uniqWith(pred, list) {
  var idx = 0;
  var len = list.length;
  var result = [];
  var item;
  while (idx < len) {
    item = list[idx];
    if (!_containsWith(pred, item, result)) {
      result[result.length] = item;
    }
    idx += 1;
  }
  return result;
});
}, 2162, null, "ramda/src/uniqWith.js");
__d(/* ramda/src/intersperse.js */function(global, require, module, exports) {var _checkForMethod = require(2063                        ); // 2063 = ./internal/_checkForMethod
var _curry2 = require(1991                ); // 1991 = ./internal/_curry2

module.exports = _curry2(_checkForMethod('intersperse', function intersperse(separator, list) {
  var out = [];
  var idx = 0;
  var length = list.length;
  while (idx < length) {
    if (idx === length - 1) {
      out.push(list[idx]);
    } else {
      out.push(list[idx], separator);
    }
    idx += 1;
  }
  return out;
}));
}, 2163, null, "ramda/src/intersperse.js");
__d(/* ramda/src/into.js */function(global, require, module, exports) {var _clone = require(2053               ); // 2053 = ./internal/_clone
var _curry3 = require(1998                ); // 1998 = ./internal/_curry3
var _isTransformer = require(2002                       ); // 2002 = ./internal/_isTransformer
var _reduce = require(2011                ); // 2011 = ./internal/_reduce
var _stepCat = require(2165                 ); // 2165 = ./internal/_stepCat

module.exports = _curry3(function into(acc, xf, list) {
  return _isTransformer(acc) ? _reduce(xf(acc), acc['@@transducer/init'](), list) : _reduce(xf(_stepCat(acc)), _clone(acc, [], [], false), list);
});
}, 2164, null, "ramda/src/into.js");
__d(/* ramda/src/internal/_stepCat.js */function(global, require, module, exports) {var _assign = require(2166       ); // 2166 = ./_assign
var _identity = require(2149         ); // 2149 = ./_identity
var _isTransformer = require(2002              ); // 2002 = ./_isTransformer
var isArrayLike = require(2014            ); // 2014 = ../isArrayLike
var objOf = require(2168      ); // 2168 = ../objOf

module.exports = function () {
  var _stepCatArray = {
    '@@transducer/init': Array,
    '@@transducer/step': function transducerStep(xs, x) {
      xs.push(x);
      return xs;
    },
    '@@transducer/result': _identity
  };
  var _stepCatString = {
    '@@transducer/init': String,
    '@@transducer/step': function transducerStep(a, b) {
      return a + b;
    },
    '@@transducer/result': _identity
  };
  var _stepCatObject = {
    '@@transducer/init': Object,
    '@@transducer/step': function transducerStep(result, input) {
      return _assign(result, isArrayLike(input) ? objOf(input[0], input[1]) : input);
    },
    '@@transducer/result': _identity
  };

  return function _stepCat(obj) {
    if (_isTransformer(obj)) {
      return obj;
    }
    if (isArrayLike(obj)) {
      return _stepCatArray;
    }
    if (typeof obj === 'string') {
      return _stepCatString;
    }
    if (typeof obj === 'object') {
      return _stepCatObject;
    }
    throw new Error('Cannot create transformer for ' + obj);
  };
}();
}, 2165, null, "ramda/src/internal/_stepCat.js");
__d(/* ramda/src/internal/_assign.js */function(global, require, module, exports) {var _objectAssign = require(2167             ); // 2167 = ./_objectAssign

module.exports = typeof Object.assign === 'function' ? Object.assign : _objectAssign;
}, 2166, null, "ramda/src/internal/_assign.js");
__d(/* ramda/src/internal/_objectAssign.js */function(global, require, module, exports) {var _has = require(2018    ); // 2018 = ./_has

module.exports = function _objectAssign(target) {
  if (target == null) {
    throw new TypeError('Cannot convert undefined or null to object');
  }

  var output = Object(target);
  var idx = 1;
  var length = arguments.length;
  while (idx < length) {
    var source = arguments[idx];
    if (source != null) {
      for (var nextKey in source) {
        if (_has(nextKey, source)) {
          output[nextKey] = source[nextKey];
        }
      }
    }
    idx += 1;
  }
  return output;
};
}, 2167, null, "ramda/src/internal/_objectAssign.js");
__d(/* ramda/src/objOf.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2

module.exports = _curry2(function objOf(key, val) {
  var obj = {};
  obj[key] = val;
  return obj;
});
}, 2168, null, "ramda/src/objOf.js");
__d(/* ramda/src/invert.js */function(global, require, module, exports) {var _curry1 = require(1986                ); // 1986 = ./internal/_curry1
var _has = require(2018             ); // 2018 = ./internal/_has
var keys = require(2017    ); // 2017 = ./keys

module.exports = _curry1(function invert(obj) {
  var props = keys(obj);
  var len = props.length;
  var idx = 0;
  var out = {};

  while (idx < len) {
    var key = props[idx];
    var val = obj[key];
    var list = _has(val, out) ? out[val] : out[val] = [];
    list[list.length] = key;
    idx += 1;
  }
  return out;
});
}, 2169, null, "ramda/src/invert.js");
__d(/* ramda/src/invertObj.js */function(global, require, module, exports) {var _curry1 = require(1986                ); // 1986 = ./internal/_curry1
var keys = require(2017    ); // 2017 = ./keys

module.exports = _curry1(function invertObj(obj) {
  var props = keys(obj);
  var len = props.length;
  var idx = 0;
  var out = {};

  while (idx < len) {
    var key = props[idx];
    out[obj[key]] = key;
    idx += 1;
  }
  return out;
});
}, 2170, null, "ramda/src/invertObj.js");
__d(/* ramda/src/invoker.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2
var _isFunction = require(2041                    ); // 2041 = ./internal/_isFunction
var curryN = require(1994      ); // 1994 = ./curryN
var toString = require(2071        ); // 2071 = ./toString

module.exports = _curry2(function invoker(arity, method) {
  return curryN(arity + 1, function () {
    var target = arguments[arity];
    if (target != null && _isFunction(target[method])) {
      return target[method].apply(target, Array.prototype.slice.call(arguments, 0, arity));
    }
    throw new TypeError(toString(target) + ' does not have a method named "' + method + '"');
  });
});
}, 2171, null, "ramda/src/invoker.js");
__d(/* ramda/src/is.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2

module.exports = _curry2(function is(Ctor, val) {
  return val != null && val.constructor === Ctor || val instanceof Ctor;
});
}, 2172, null, "ramda/src/is.js");
__d(/* ramda/src/isEmpty.js */function(global, require, module, exports) {var _curry1 = require(1986                ); // 1986 = ./internal/_curry1
var empty = require(2124     ); // 2124 = ./empty
var equals = require(2075      ); // 2075 = ./equals

module.exports = _curry1(function isEmpty(x) {
  return x != null && equals(x, empty(x));
});
}, 2173, null, "ramda/src/isEmpty.js");
__d(/* ramda/src/isNil.js */function(global, require, module, exports) {var _curry1 = require(1986                ); // 1986 = ./internal/_curry1

module.exports = _curry1(function isNil(x) {
  return x == null;
});
}, 2174, null, "ramda/src/isNil.js");
__d(/* ramda/src/join.js */function(global, require, module, exports) {var invoker = require(2171       ); // 2171 = ./invoker

module.exports = invoker(1, 'join');
}, 2175, null, "ramda/src/join.js");
__d(/* ramda/src/juxt.js */function(global, require, module, exports) {var _curry1 = require(1986                ); // 1986 = ./internal/_curry1
var converge = require(2092        ); // 2092 = ./converge

module.exports = _curry1(function juxt(fns) {
  return converge(function () {
    return Array.prototype.slice.call(arguments, 0);
  }, fns);
});
}, 2176, null, "ramda/src/juxt.js");
__d(/* ramda/src/keysIn.js */function(global, require, module, exports) {var _curry1 = require(1986                ); // 1986 = ./internal/_curry1

module.exports = _curry1(function keysIn(obj) {
  var prop;
  var ks = [];
  for (prop in obj) {
    ks[ks.length] = prop;
  }
  return ks;
});
}, 2177, null, "ramda/src/keysIn.js");
__d(/* ramda/src/lastIndexOf.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2
var _isArray = require(2001                 ); // 2001 = ./internal/_isArray
var equals = require(2075      ); // 2075 = ./equals

module.exports = _curry2(function lastIndexOf(target, xs) {
  if (typeof xs.lastIndexOf === 'function' && !_isArray(xs)) {
    return xs.lastIndexOf(target);
  } else {
    var idx = xs.length - 1;
    while (idx >= 0) {
      if (equals(xs[idx], target)) {
        return idx;
      }
      idx -= 1;
    }
    return -1;
  }
});
}, 2178, null, "ramda/src/lastIndexOf.js");
__d(/* ramda/src/length.js */function(global, require, module, exports) {var _curry1 = require(1986                ); // 1986 = ./internal/_curry1
var _isNumber = require(2180                  ); // 2180 = ./internal/_isNumber

module.exports = _curry1(function length(list) {
  return list != null && _isNumber(list.length) ? list.length : NaN;
});
}, 2179, null, "ramda/src/length.js");
__d(/* ramda/src/internal/_isNumber.js */function(global, require, module, exports) {module.exports = function _isNumber(x) {
  return Object.prototype.toString.call(x) === '[object Number]';
};
}, 2180, null, "ramda/src/internal/_isNumber.js");
__d(/* ramda/src/lens.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2
var map = require(2009   ); // 2009 = ./map

module.exports = _curry2(function lens(getter, setter) {
  return function (toFunctorFn) {
    return function (target) {
      return map(function (focus) {
        return setter(focus, target);
      }, toFunctorFn(getter(target)));
    };
  };
});
}, 2181, null, "ramda/src/lens.js");
__d(/* ramda/src/lensIndex.js */function(global, require, module, exports) {var _curry1 = require(1986                ); // 1986 = ./internal/_curry1
var lens = require(2181    ); // 2181 = ./lens
var nth = require(2119   ); // 2119 = ./nth
var update = require(2183      ); // 2183 = ./update

module.exports = _curry1(function lensIndex(n) {
  return lens(nth(n), update(n));
});
}, 2182, null, "ramda/src/lensIndex.js");
__d(/* ramda/src/update.js */function(global, require, module, exports) {var _curry3 = require(1998                ); // 1998 = ./internal/_curry3
var adjust = require(1997      ); // 1997 = ./adjust
var always = require(1985      ); // 1985 = ./always

module.exports = _curry3(function update(idx, x, list) {
  return adjust(always(x), idx, list);
});
}, 2183, null, "ramda/src/update.js");
__d(/* ramda/src/lensPath.js */function(global, require, module, exports) {var _curry1 = require(1986                ); // 1986 = ./internal/_curry1
var assocPath = require(2036         ); // 2036 = ./assocPath
var lens = require(2181    ); // 2181 = ./lens
var path = require(2185    ); // 2185 = ./path

module.exports = _curry1(function lensPath(p) {
  return lens(path(p), assocPath(p));
});
}, 2184, null, "ramda/src/lensPath.js");
__d(/* ramda/src/path.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2

module.exports = _curry2(function path(paths, obj) {
  var val = obj;
  var idx = 0;
  while (idx < paths.length) {
    if (val == null) {
      return;
    }
    val = val[paths[idx]];
    idx += 1;
  }
  return val;
});
}, 2185, null, "ramda/src/path.js");
__d(/* ramda/src/lensProp.js */function(global, require, module, exports) {var _curry1 = require(1986                ); // 1986 = ./internal/_curry1
var assoc = require(2035     ); // 2035 = ./assoc
var lens = require(2181    ); // 2181 = ./lens
var prop = require(2020    ); // 2020 = ./prop

module.exports = _curry1(function lensProp(k) {
  return lens(prop(k), assoc(k));
});
}, 2186, null, "ramda/src/lensProp.js");
__d(/* ramda/src/lt.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2

module.exports = _curry2(function lt(a, b) {
  return a < b;
});
}, 2187, null, "ramda/src/lt.js");
__d(/* ramda/src/lte.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2

module.exports = _curry2(function lte(a, b) {
  return a <= b;
});
}, 2188, null, "ramda/src/lte.js");
__d(/* ramda/src/mapAccum.js */function(global, require, module, exports) {var _curry3 = require(1998                ); // 1998 = ./internal/_curry3

module.exports = _curry3(function mapAccum(fn, acc, list) {
  var idx = 0;
  var len = list.length;
  var result = [];
  var tuple = [acc];
  while (idx < len) {
    tuple = fn(tuple[0], list[idx]);
    result[idx] = tuple[1];
    idx += 1;
  }
  return [tuple[0], result];
});
}, 2189, null, "ramda/src/mapAccum.js");
__d(/* ramda/src/mapAccumRight.js */function(global, require, module, exports) {var _curry3 = require(1998                ); // 1998 = ./internal/_curry3

module.exports = _curry3(function mapAccumRight(fn, acc, list) {
  var idx = list.length - 1;
  var result = [];
  var tuple = [acc];
  while (idx >= 0) {
    tuple = fn(list[idx], tuple[0]);
    result[idx] = tuple[1];
    idx -= 1;
  }
  return [result, tuple[0]];
});
}, 2190, null, "ramda/src/mapAccumRight.js");
__d(/* ramda/src/mapObjIndexed.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2
var _reduce = require(2011                ); // 2011 = ./internal/_reduce
var keys = require(2017    ); // 2017 = ./keys

module.exports = _curry2(function mapObjIndexed(fn, obj) {
  return _reduce(function (acc, key) {
    acc[key] = fn(obj[key], key, obj);
    return acc;
  }, {}, keys(obj));
});
}, 2191, null, "ramda/src/mapObjIndexed.js");
__d(/* ramda/src/match.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2

module.exports = _curry2(function match(rx, str) {
  return str.match(rx) || [];
});
}, 2192, null, "ramda/src/match.js");
__d(/* ramda/src/mathMod.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2
var _isInteger = require(2037                   ); // 2037 = ./internal/_isInteger

module.exports = _curry2(function mathMod(m, p) {
  if (!_isInteger(m)) {
    return NaN;
  }
  if (!_isInteger(p) || p < 1) {
    return NaN;
  }
  return (m % p + p) % p;
});
}, 2193, null, "ramda/src/mathMod.js");
__d(/* ramda/src/maxBy.js */function(global, require, module, exports) {var _curry3 = require(1998                ); // 1998 = ./internal/_curry3

module.exports = _curry3(function maxBy(f, a, b) {
  return f(b) > f(a) ? b : a;
});
}, 2194, null, "ramda/src/maxBy.js");
__d(/* ramda/src/mean.js */function(global, require, module, exports) {var _curry1 = require(1986                ); // 1986 = ./internal/_curry1
var sum = require(2196   ); // 2196 = ./sum

module.exports = _curry1(function mean(list) {
  return sum(list) / list.length;
});
}, 2195, null, "ramda/src/mean.js");
__d(/* ramda/src/sum.js */function(global, require, module, exports) {var add = require(1990   ); // 1990 = ./add
var reduce = require(2021      ); // 2021 = ./reduce

module.exports = reduce(add, 0);
}, 2196, null, "ramda/src/sum.js");
__d(/* ramda/src/median.js */function(global, require, module, exports) {var _curry1 = require(1986                ); // 1986 = ./internal/_curry1
var mean = require(2195    ); // 2195 = ./mean

module.exports = _curry1(function median(list) {
  var len = list.length;
  if (len === 0) {
    return NaN;
  }
  var width = 2 - len % 2;
  var idx = (len - width) / 2;
  return mean(Array.prototype.slice.call(list, 0).sort(function (a, b) {
    return a < b ? -1 : a > b ? 1 : 0;
  }).slice(idx, idx + width));
});
}, 2197, null, "ramda/src/median.js");
__d(/* ramda/src/memoize.js */function(global, require, module, exports) {var _arity = require(1995               ); // 1995 = ./internal/_arity
var _curry1 = require(1986                ); // 1986 = ./internal/_curry1
var _has = require(2018             ); // 2018 = ./internal/_has
var toString = require(2071        ); // 2071 = ./toString

module.exports = _curry1(function memoize(fn) {
  var cache = {};
  return _arity(fn.length, function () {
    var key = toString(arguments);
    if (!_has(key, cache)) {
      cache[key] = fn.apply(this, arguments);
    }
    return cache[key];
  });
});
}, 2198, null, "ramda/src/memoize.js");
__d(/* ramda/src/merge.js */function(global, require, module, exports) {var _assign = require(2166                ); // 2166 = ./internal/_assign
var _curry2 = require(1991                ); // 1991 = ./internal/_curry2

module.exports = _curry2(function merge(l, r) {
  return _assign({}, l, r);
});
}, 2199, null, "ramda/src/merge.js");
__d(/* ramda/src/mergeAll.js */function(global, require, module, exports) {var _assign = require(2166                ); // 2166 = ./internal/_assign
var _curry1 = require(1986                ); // 1986 = ./internal/_curry1

module.exports = _curry1(function mergeAll(list) {
  return _assign.apply(null, [{}].concat(list));
});
}, 2200, null, "ramda/src/mergeAll.js");
__d(/* ramda/src/mergeWith.js */function(global, require, module, exports) {var _curry3 = require(1998                ); // 1998 = ./internal/_curry3
var mergeWithKey = require(2202            ); // 2202 = ./mergeWithKey

module.exports = _curry3(function mergeWith(fn, l, r) {
  return mergeWithKey(function (_, _l, _r) {
    return fn(_l, _r);
  }, l, r);
});
}, 2201, null, "ramda/src/mergeWith.js");
__d(/* ramda/src/mergeWithKey.js */function(global, require, module, exports) {var _curry3 = require(1998                ); // 1998 = ./internal/_curry3
var _has = require(2018             ); // 2018 = ./internal/_has

module.exports = _curry3(function mergeWithKey(fn, l, r) {
  var result = {};
  var k;

  for (k in l) {
    if (_has(k, l)) {
      result[k] = _has(k, r) ? fn(k, l[k], r[k]) : l[k];
    }
  }

  for (k in r) {
    if (_has(k, r) && !_has(k, result)) {
      result[k] = r[k];
    }
  }

  return result;
});
}, 2202, null, "ramda/src/mergeWithKey.js");
__d(/* ramda/src/min.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2

module.exports = _curry2(function min(a, b) {
  return b < a ? b : a;
});
}, 2203, null, "ramda/src/min.js");
__d(/* ramda/src/minBy.js */function(global, require, module, exports) {var _curry3 = require(1998                ); // 1998 = ./internal/_curry3

module.exports = _curry3(function minBy(f, a, b) {
  return f(b) < f(a) ? b : a;
});
}, 2204, null, "ramda/src/minBy.js");
__d(/* ramda/src/modulo.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2

module.exports = _curry2(function modulo(a, b) {
  return a % b;
});
}, 2205, null, "ramda/src/modulo.js");
__d(/* ramda/src/multiply.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2

module.exports = _curry2(function multiply(a, b) {
  return a * b;
});
}, 2206, null, "ramda/src/multiply.js");
__d(/* ramda/src/negate.js */function(global, require, module, exports) {var _curry1 = require(1986                ); // 1986 = ./internal/_curry1

module.exports = _curry1(function negate(n) {
  return -n;
});
}, 2207, null, "ramda/src/negate.js");
__d(/* ramda/src/none.js */function(global, require, module, exports) {var _complement = require(2083                    ); // 2083 = ./internal/_complement
var _curry2 = require(1991                ); // 1991 = ./internal/_curry2
var _dispatchable = require(2000                      ); // 2000 = ./internal/_dispatchable
var _xany = require(2024              ); // 2024 = ./internal/_xany
var any = require(2023   ); // 2023 = ./any

module.exports = _curry2(_complement(_dispatchable(['any'], _xany, any)));
}, 2208, null, "ramda/src/none.js");
__d(/* ramda/src/nthArg.js */function(global, require, module, exports) {var _curry1 = require(1986                ); // 1986 = ./internal/_curry1
var curryN = require(1994      ); // 1994 = ./curryN
var nth = require(2119   ); // 2119 = ./nth

module.exports = _curry1(function nthArg(n) {
  var arity = n < 0 ? 1 : n + 1;
  return curryN(arity, function () {
    return nth(n, arguments);
  });
});
}, 2209, null, "ramda/src/nthArg.js");
__d(/* ramda/src/of.js */function(global, require, module, exports) {var _curry1 = require(1986                ); // 1986 = ./internal/_curry1
var _of = require(2211            ); // 2211 = ./internal/_of

module.exports = _curry1(_of);
}, 2210, null, "ramda/src/of.js");
__d(/* ramda/src/internal/_of.js */function(global, require, module, exports) {module.exports = function _of(x) {
  return [x];
};
}, 2211, null, "ramda/src/internal/_of.js");
__d(/* ramda/src/omit.js */function(global, require, module, exports) {var _contains = require(2073                  ); // 2073 = ./internal/_contains
var _curry2 = require(1991                ); // 1991 = ./internal/_curry2

module.exports = _curry2(function omit(names, obj) {
  var result = {};
  for (var prop in obj) {
    if (!_contains(prop, names)) {
      result[prop] = obj[prop];
    }
  }
  return result;
});
}, 2212, null, "ramda/src/omit.js");
__d(/* ramda/src/once.js */function(global, require, module, exports) {var _arity = require(1995               ); // 1995 = ./internal/_arity
var _curry1 = require(1986                ); // 1986 = ./internal/_curry1

module.exports = _curry1(function once(fn) {
  var called = false;
  var result;
  return _arity(fn.length, function () {
    if (called) {
      return result;
    }
    called = true;
    result = fn.apply(this, arguments);
    return result;
  });
});
}, 2213, null, "ramda/src/once.js");
__d(/* ramda/src/over.js */function(global, require, module, exports) {var _curry3 = require(1998                ); // 1998 = ./internal/_curry3

module.exports = function () {
  var Identity = function Identity(x) {
    return { value: x, map: function map(f) {
        return Identity(f(x));
      } };
  };

  return _curry3(function over(lens, f, x) {
    return lens(function (y) {
      return Identity(f(y));
    })(x).value;
  });
}();
}, 2214, null, "ramda/src/over.js");
__d(/* ramda/src/pair.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2

module.exports = _curry2(function pair(fst, snd) {
  return [fst, snd];
});
}, 2215, null, "ramda/src/pair.js");
__d(/* ramda/src/partial.js */function(global, require, module, exports) {var _concat = require(1993                ); // 1993 = ./internal/_concat
var _createPartialApplicator = require(2217                                 ); // 2217 = ./internal/_createPartialApplicator

module.exports = _createPartialApplicator(_concat);
}, 2216, null, "ramda/src/partial.js");
__d(/* ramda/src/internal/_createPartialApplicator.js */function(global, require, module, exports) {var _arity = require(1995      ); // 1995 = ./_arity
var _curry2 = require(1991       ); // 1991 = ./_curry2

module.exports = function _createPartialApplicator(concat) {
  return _curry2(function (fn, args) {
    return _arity(Math.max(0, fn.length - args.length), function () {
      return fn.apply(this, concat(args, arguments));
    });
  });
};
}, 2217, null, "ramda/src/internal/_createPartialApplicator.js");
__d(/* ramda/src/partialRight.js */function(global, require, module, exports) {var _concat = require(1993                ); // 1993 = ./internal/_concat
var _createPartialApplicator = require(2217                                 ); // 2217 = ./internal/_createPartialApplicator
var flip = require(2137    ); // 2137 = ./flip

module.exports = _createPartialApplicator(flip(_concat));
}, 2218, null, "ramda/src/partialRight.js");
__d(/* ramda/src/partition.js */function(global, require, module, exports) {var filter = require(2084      ); // 2084 = ./filter
var juxt = require(2176    ); // 2176 = ./juxt
var reject = require(2082      ); // 2082 = ./reject

module.exports = juxt([filter, reject]);
}, 2219, null, "ramda/src/partition.js");
__d(/* ramda/src/pathEq.js */function(global, require, module, exports) {var _curry3 = require(1998                ); // 1998 = ./internal/_curry3
var equals = require(2075      ); // 2075 = ./equals
var path = require(2185    ); // 2185 = ./path

module.exports = _curry3(function pathEq(_path, val, obj) {
  return equals(path(_path, obj), val);
});
}, 2220, null, "ramda/src/pathEq.js");
__d(/* ramda/src/pathOr.js */function(global, require, module, exports) {var _curry3 = require(1998                ); // 1998 = ./internal/_curry3
var defaultTo = require(2098         ); // 2098 = ./defaultTo
var path = require(2185    ); // 2185 = ./path

module.exports = _curry3(function pathOr(d, p, obj) {
  return defaultTo(d, path(p, obj));
});
}, 2221, null, "ramda/src/pathOr.js");
__d(/* ramda/src/pathSatisfies.js */function(global, require, module, exports) {var _curry3 = require(1998                ); // 1998 = ./internal/_curry3
var path = require(2185    ); // 2185 = ./path

module.exports = _curry3(function pathSatisfies(pred, propPath, obj) {
  return propPath.length > 0 && pred(path(propPath, obj));
});
}, 2222, null, "ramda/src/pathSatisfies.js");
__d(/* ramda/src/pick.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2

module.exports = _curry2(function pick(names, obj) {
  var result = {};
  var idx = 0;
  while (idx < names.length) {
    if (names[idx] in obj) {
      result[names[idx]] = obj[names[idx]];
    }
    idx += 1;
  }
  return result;
});
}, 2223, null, "ramda/src/pick.js");
__d(/* ramda/src/pickAll.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2

module.exports = _curry2(function pickAll(names, obj) {
  var result = {};
  var idx = 0;
  var len = names.length;
  while (idx < len) {
    var name = names[idx];
    result[name] = obj[name];
    idx += 1;
  }
  return result;
});
}, 2224, null, "ramda/src/pickAll.js");
__d(/* ramda/src/pickBy.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2

module.exports = _curry2(function pickBy(test, obj) {
  var result = {};
  for (var prop in obj) {
    if (test(obj[prop], prop, obj)) {
      result[prop] = obj[prop];
    }
  }
  return result;
});
}, 2225, null, "ramda/src/pickBy.js");
__d(/* ramda/src/pipeK.js */function(global, require, module, exports) {var composeK = require(2066        ); // 2066 = ./composeK
var reverse = require(2065       ); // 2065 = ./reverse

module.exports = function pipeK() {
  if (arguments.length === 0) {
    throw new Error('pipeK requires at least one argument');
  }
  return composeK.apply(this, reverse(arguments));
};
}, 2226, null, "ramda/src/pipeK.js");
__d(/* ramda/src/prepend.js */function(global, require, module, exports) {var _concat = require(1993                ); // 1993 = ./internal/_concat
var _curry2 = require(1991                ); // 1991 = ./internal/_curry2

module.exports = _curry2(function prepend(el, list) {
  return _concat([el], list);
});
}, 2227, null, "ramda/src/prepend.js");
__d(/* ramda/src/product.js */function(global, require, module, exports) {var multiply = require(2206        ); // 2206 = ./multiply
var reduce = require(2021      ); // 2021 = ./reduce

module.exports = reduce(multiply, 1);
}, 2228, null, "ramda/src/product.js");
__d(/* ramda/src/project.js */function(global, require, module, exports) {var _map = require(2010             ); // 2010 = ./internal/_map
var identity = require(2148        ); // 2148 = ./identity
var pickAll = require(2224       ); // 2224 = ./pickAll
var useWith = require(2230       ); // 2230 = ./useWith

module.exports = useWith(_map, [pickAll, identity]);
}, 2229, null, "ramda/src/project.js");
__d(/* ramda/src/useWith.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2
var curryN = require(1994      ); // 1994 = ./curryN

module.exports = _curry2(function useWith(fn, transformers) {
  return curryN(transformers.length, function () {
    var args = [];
    var idx = 0;
    while (idx < transformers.length) {
      args.push(transformers[idx].call(this, arguments[idx]));
      idx += 1;
    }
    return fn.apply(this, args.concat(Array.prototype.slice.call(arguments, transformers.length)));
  });
});
}, 2230, null, "ramda/src/useWith.js");
__d(/* ramda/src/propEq.js */function(global, require, module, exports) {var _curry3 = require(1998                ); // 1998 = ./internal/_curry3
var equals = require(2075      ); // 2075 = ./equals

module.exports = _curry3(function propEq(name, val, obj) {
  return equals(val, obj[name]);
});
}, 2231, null, "ramda/src/propEq.js");
__d(/* ramda/src/propIs.js */function(global, require, module, exports) {var _curry3 = require(1998                ); // 1998 = ./internal/_curry3
var is = require(2172  ); // 2172 = ./is

module.exports = _curry3(function propIs(type, name, obj) {
  return is(type, obj[name]);
});
}, 2232, null, "ramda/src/propIs.js");
__d(/* ramda/src/propOr.js */function(global, require, module, exports) {var _curry3 = require(1998                ); // 1998 = ./internal/_curry3
var _has = require(2018             ); // 2018 = ./internal/_has

module.exports = _curry3(function propOr(val, p, obj) {
  return obj != null && _has(p, obj) ? obj[p] : val;
});
}, 2233, null, "ramda/src/propOr.js");
__d(/* ramda/src/propSatisfies.js */function(global, require, module, exports) {var _curry3 = require(1998                ); // 1998 = ./internal/_curry3

module.exports = _curry3(function propSatisfies(pred, name, obj) {
  return pred(obj[name]);
});
}, 2234, null, "ramda/src/propSatisfies.js");
__d(/* ramda/src/props.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2

module.exports = _curry2(function props(ps, obj) {
  var len = ps.length;
  var out = [];
  var idx = 0;

  while (idx < len) {
    out[idx] = obj[ps[idx]];
    idx += 1;
  }

  return out;
});
}, 2235, null, "ramda/src/props.js");
__d(/* ramda/src/range.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2
var _isNumber = require(2180                  ); // 2180 = ./internal/_isNumber

module.exports = _curry2(function range(from, to) {
  if (!(_isNumber(from) && _isNumber(to))) {
    throw new TypeError('Both arguments to range must be numbers');
  }
  var result = [];
  var n = from;
  while (n < to) {
    result.push(n);
    n += 1;
  }
  return result;
});
}, 2236, null, "ramda/src/range.js");
__d(/* ramda/src/reduceRight.js */function(global, require, module, exports) {var _curry3 = require(1998                ); // 1998 = ./internal/_curry3

module.exports = _curry3(function reduceRight(fn, acc, list) {
  var idx = list.length - 1;
  while (idx >= 0) {
    acc = fn(list[idx], acc);
    idx -= 1;
  }
  return acc;
});
}, 2237, null, "ramda/src/reduceRight.js");
__d(/* ramda/src/reduceWhile.js */function(global, require, module, exports) {var _curryN = require(1996                ); // 1996 = ./internal/_curryN
var _reduce = require(2011                ); // 2011 = ./internal/_reduce
var _reduced = require(2004                 ); // 2004 = ./internal/_reduced

module.exports = _curryN(4, [], function _reduceWhile(pred, fn, a, list) {
  return _reduce(function (acc, x) {
    return pred(acc, x) ? fn(acc, x) : _reduced(acc);
  }, a, list);
});
}, 2238, null, "ramda/src/reduceWhile.js");
__d(/* ramda/src/reduced.js */function(global, require, module, exports) {var _curry1 = require(1986                ); // 1986 = ./internal/_curry1
var _reduced = require(2004                 ); // 2004 = ./internal/_reduced

module.exports = _curry1(_reduced);
}, 2239, null, "ramda/src/reduced.js");
__d(/* ramda/src/remove.js */function(global, require, module, exports) {var _curry3 = require(1998                ); // 1998 = ./internal/_curry3

module.exports = _curry3(function remove(start, count, list) {
  var result = Array.prototype.slice.call(list, 0);
  result.splice(start, count);
  return result;
});
}, 2240, null, "ramda/src/remove.js");
__d(/* ramda/src/repeat.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2
var always = require(1985      ); // 1985 = ./always
var times = require(2242     ); // 2242 = ./times

module.exports = _curry2(function repeat(value, n) {
  return times(always(value), n);
});
}, 2241, null, "ramda/src/repeat.js");
__d(/* ramda/src/times.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2

module.exports = _curry2(function times(fn, n) {
  var len = Number(n);
  var idx = 0;
  var list;

  if (len < 0 || isNaN(len)) {
    throw new RangeError('n must be a non-negative number');
  }
  list = new Array(len);
  while (idx < len) {
    list[idx] = fn(idx);
    idx += 1;
  }
  return list;
});
}, 2242, null, "ramda/src/times.js");
__d(/* ramda/src/replace.js */function(global, require, module, exports) {var _curry3 = require(1998                ); // 1998 = ./internal/_curry3

module.exports = _curry3(function replace(regex, replacement, str) {
  return str.replace(regex, replacement);
});
}, 2243, null, "ramda/src/replace.js");
__d(/* ramda/src/scan.js */function(global, require, module, exports) {var _curry3 = require(1998                ); // 1998 = ./internal/_curry3

module.exports = _curry3(function scan(fn, acc, list) {
  var idx = 0;
  var len = list.length;
  var result = [acc];
  while (idx < len) {
    acc = fn(acc, list[idx]);
    result[idx + 1] = acc;
    idx += 1;
  }
  return result;
});
}, 2244, null, "ramda/src/scan.js");
__d(/* ramda/src/sequence.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2
var ap = require(2026  ); // 2026 = ./ap
var map = require(2009   ); // 2009 = ./map
var prepend = require(2227       ); // 2227 = ./prepend
var reduceRight = require(2237           ); // 2237 = ./reduceRight

module.exports = _curry2(function sequence(of, traversable) {
  return typeof traversable.sequence === 'function' ? traversable.sequence(of) : reduceRight(function (x, acc) {
    return ap(map(prepend, x), acc);
  }, of([]), traversable);
});
}, 2245, null, "ramda/src/sequence.js");
__d(/* ramda/src/set.js */function(global, require, module, exports) {var _curry3 = require(1998                ); // 1998 = ./internal/_curry3
var always = require(1985      ); // 1985 = ./always
var over = require(2214    ); // 2214 = ./over

module.exports = _curry3(function set(lens, v, x) {
  return over(lens, always(v), x);
});
}, 2246, null, "ramda/src/set.js");
__d(/* ramda/src/sort.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2

module.exports = _curry2(function sort(comparator, list) {
  return Array.prototype.slice.call(list, 0).sort(comparator);
});
}, 2247, null, "ramda/src/sort.js");
__d(/* ramda/src/sortBy.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2

module.exports = _curry2(function sortBy(fn, list) {
  return Array.prototype.slice.call(list, 0).sort(function (a, b) {
    var aa = fn(a);
    var bb = fn(b);
    return aa < bb ? -1 : aa > bb ? 1 : 0;
  });
});
}, 2248, null, "ramda/src/sortBy.js");
__d(/* ramda/src/sortWith.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2

module.exports = _curry2(function sortWith(fns, list) {
  return Array.prototype.slice.call(list, 0).sort(function (a, b) {
    var result = 0;
    var i = 0;
    while (result === 0 && i < fns.length) {
      result = fns[i](a, b);
      i += 1;
    }
    return result;
  });
});
}, 2249, null, "ramda/src/sortWith.js");
__d(/* ramda/src/split.js */function(global, require, module, exports) {var invoker = require(2171       ); // 2171 = ./invoker

module.exports = invoker(1, 'split');
}, 2250, null, "ramda/src/split.js");
__d(/* ramda/src/splitAt.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2
var length = require(2179      ); // 2179 = ./length
var slice = require(2064     ); // 2064 = ./slice

module.exports = _curry2(function splitAt(index, array) {
  return [slice(0, index, array), slice(index, length(array), array)];
});
}, 2251, null, "ramda/src/splitAt.js");
__d(/* ramda/src/splitEvery.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2
var slice = require(2064     ); // 2064 = ./slice

module.exports = _curry2(function splitEvery(n, list) {
  if (n <= 0) {
    throw new Error('First argument to splitEvery must be a positive integer');
  }
  var result = [];
  var idx = 0;
  while (idx < list.length) {
    result.push(slice(idx, idx += n, list));
  }
  return result;
});
}, 2252, null, "ramda/src/splitEvery.js");
__d(/* ramda/src/splitWhen.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2

module.exports = _curry2(function splitWhen(pred, list) {
  var idx = 0;
  var len = list.length;
  var prefix = [];

  while (idx < len && !pred(list[idx])) {
    prefix.push(list[idx]);
    idx += 1;
  }

  return [prefix, Array.prototype.slice.call(list, idx)];
});
}, 2253, null, "ramda/src/splitWhen.js");
__d(/* ramda/src/subtract.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2

module.exports = _curry2(function subtract(a, b) {
  return Number(a) - Number(b);
});
}, 2254, null, "ramda/src/subtract.js");
__d(/* ramda/src/symmetricDifference.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2
var concat = require(2070      ); // 2070 = ./concat
var difference = require(2099          ); // 2099 = ./difference

module.exports = _curry2(function symmetricDifference(list1, list2) {
  return concat(difference(list1, list2), difference(list2, list1));
});
}, 2255, null, "ramda/src/symmetricDifference.js");
__d(/* ramda/src/symmetricDifferenceWith.js */function(global, require, module, exports) {var _curry3 = require(1998                ); // 1998 = ./internal/_curry3
var concat = require(2070      ); // 2070 = ./concat
var differenceWith = require(2100              ); // 2100 = ./differenceWith

module.exports = _curry3(function symmetricDifferenceWith(pred, list1, list2) {
  return concat(differenceWith(pred, list1, list2), differenceWith(pred, list2, list1));
});
}, 2256, null, "ramda/src/symmetricDifferenceWith.js");
__d(/* ramda/src/takeLast.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2
var drop = require(2105    ); // 2105 = ./drop

module.exports = _curry2(function takeLast(n, xs) {
  return drop(n >= 0 ? xs.length - n : 0, xs);
});
}, 2257, null, "ramda/src/takeLast.js");
__d(/* ramda/src/takeLastWhile.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2

module.exports = _curry2(function takeLastWhile(fn, list) {
  var idx = list.length - 1;
  while (idx >= 0 && fn(list[idx])) {
    idx -= 1;
  }
  return Array.prototype.slice.call(list, idx + 1);
});
}, 2258, null, "ramda/src/takeLastWhile.js");
__d(/* ramda/src/takeWhile.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2
var _dispatchable = require(2000                      ); // 2000 = ./internal/_dispatchable
var _xtakeWhile = require(2260                    ); // 2260 = ./internal/_xtakeWhile

module.exports = _curry2(_dispatchable(['takeWhile'], _xtakeWhile, function takeWhile(fn, list) {
  var idx = 0;
  var len = list.length;
  while (idx < len && fn(list[idx])) {
    idx += 1;
  }
  return Array.prototype.slice.call(list, 0, idx);
}));
}, 2259, null, "ramda/src/takeWhile.js");
__d(/* ramda/src/internal/_xtakeWhile.js */function(global, require, module, exports) {var _curry2 = require(1991       ); // 1991 = ./_curry2
var _reduced = require(2004        ); // 2004 = ./_reduced
var _xfBase = require(2005       ); // 2005 = ./_xfBase

module.exports = function () {
  function XTakeWhile(f, xf) {
    this.xf = xf;
    this.f = f;
  }
  XTakeWhile.prototype['@@transducer/init'] = _xfBase.init;
  XTakeWhile.prototype['@@transducer/result'] = _xfBase.result;
  XTakeWhile.prototype['@@transducer/step'] = function (result, input) {
    return this.f(input) ? this.xf['@@transducer/step'](result, input) : _reduced(result);
  };

  return _curry2(function _xtakeWhile(f, xf) {
    return new XTakeWhile(f, xf);
  });
}();
}, 2260, null, "ramda/src/internal/_xtakeWhile.js");
__d(/* ramda/src/tap.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2

module.exports = _curry2(function tap(fn, x) {
  fn(x);
  return x;
});
}, 2261, null, "ramda/src/tap.js");
__d(/* ramda/src/test.js */function(global, require, module, exports) {var _cloneRegExp = require(2054                     ); // 2054 = ./internal/_cloneRegExp
var _curry2 = require(1991                ); // 1991 = ./internal/_curry2
var _isRegExp = require(2263                  ); // 2263 = ./internal/_isRegExp
var toString = require(2071        ); // 2071 = ./toString

module.exports = _curry2(function test(pattern, str) {
  if (!_isRegExp(pattern)) {
    throw new TypeError('‘test’ requires a value of type RegExp as its first argument; received ' + toString(pattern));
  }
  return _cloneRegExp(pattern).test(str);
});
}, 2262, null, "ramda/src/test.js");
__d(/* ramda/src/internal/_isRegExp.js */function(global, require, module, exports) {module.exports = function _isRegExp(x) {
  return Object.prototype.toString.call(x) === '[object RegExp]';
};
}, 2263, null, "ramda/src/internal/_isRegExp.js");
__d(/* ramda/src/toLower.js */function(global, require, module, exports) {var invoker = require(2171       ); // 2171 = ./invoker

module.exports = invoker(0, 'toLowerCase');
}, 2264, null, "ramda/src/toLower.js");
__d(/* ramda/src/toPairs.js */function(global, require, module, exports) {var _curry1 = require(1986                ); // 1986 = ./internal/_curry1
var _has = require(2018             ); // 2018 = ./internal/_has

module.exports = _curry1(function toPairs(obj) {
  var pairs = [];
  for (var prop in obj) {
    if (_has(prop, obj)) {
      pairs[pairs.length] = [prop, obj[prop]];
    }
  }
  return pairs;
});
}, 2265, null, "ramda/src/toPairs.js");
__d(/* ramda/src/toPairsIn.js */function(global, require, module, exports) {var _curry1 = require(1986                ); // 1986 = ./internal/_curry1

module.exports = _curry1(function toPairsIn(obj) {
  var pairs = [];
  for (var prop in obj) {
    pairs[pairs.length] = [prop, obj[prop]];
  }
  return pairs;
});
}, 2266, null, "ramda/src/toPairsIn.js");
__d(/* ramda/src/toUpper.js */function(global, require, module, exports) {var invoker = require(2171       ); // 2171 = ./invoker

module.exports = invoker(0, 'toUpperCase');
}, 2267, null, "ramda/src/toUpper.js");
__d(/* ramda/src/transduce.js */function(global, require, module, exports) {var _reduce = require(2011                ); // 2011 = ./internal/_reduce
var _xwrap = require(2012               ); // 2012 = ./internal/_xwrap
var curryN = require(1994      ); // 1994 = ./curryN

module.exports = curryN(4, function transduce(xf, fn, acc, list) {
  return _reduce(xf(typeof fn === 'function' ? _xwrap(fn) : fn), acc, list);
});
}, 2268, null, "ramda/src/transduce.js");
__d(/* ramda/src/transpose.js */function(global, require, module, exports) {var _curry1 = require(1986                ); // 1986 = ./internal/_curry1

module.exports = _curry1(function transpose(outerlist) {
  var i = 0;
  var result = [];
  while (i < outerlist.length) {
    var innerlist = outerlist[i];
    var j = 0;
    while (j < innerlist.length) {
      if (typeof result[j] === 'undefined') {
        result[j] = [];
      }
      result[j].push(innerlist[j]);
      j += 1;
    }
    i += 1;
  }
  return result;
});
}, 2269, null, "ramda/src/transpose.js");
__d(/* ramda/src/traverse.js */function(global, require, module, exports) {var _curry3 = require(1998                ); // 1998 = ./internal/_curry3
var map = require(2009   ); // 2009 = ./map
var sequence = require(2245        ); // 2245 = ./sequence

module.exports = _curry3(function traverse(of, f, traversable) {
  return sequence(of, map(f, traversable));
});
}, 2270, null, "ramda/src/traverse.js");
__d(/* ramda/src/trim.js */function(global, require, module, exports) {var _curry1 = require(1986                ); // 1986 = ./internal/_curry1

module.exports = function () {
  var ws = '\t\n\x0B\f\r \xA0\u1680\u180E\u2000\u2001\u2002\u2003' + '\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028' + '\u2029\uFEFF';
  var zeroWidth = '\u200B';
  var hasProtoTrim = typeof String.prototype.trim === 'function';
  if (!hasProtoTrim || ws.trim() || !zeroWidth.trim()) {
    return _curry1(function trim(str) {
      var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');
      var endRx = new RegExp('[' + ws + '][' + ws + ']*$');
      return str.replace(beginRx, '').replace(endRx, '');
    });
  } else {
    return _curry1(function trim(str) {
      return str.trim();
    });
  }
}();
}, 2271, null, "ramda/src/trim.js");
__d(/* ramda/src/tryCatch.js */function(global, require, module, exports) {var _arity = require(1995               ); // 1995 = ./internal/_arity
var _concat = require(1993                ); // 1993 = ./internal/_concat
var _curry2 = require(1991                ); // 1991 = ./internal/_curry2

module.exports = _curry2(function _tryCatch(tryer, catcher) {
  return _arity(tryer.length, function () {
    try {
      return tryer.apply(this, arguments);
    } catch (e) {
      return catcher.apply(this, _concat([e], arguments));
    }
  });
});
}, 2272, null, "ramda/src/tryCatch.js");
__d(/* ramda/src/unapply.js */function(global, require, module, exports) {var _curry1 = require(1986                ); // 1986 = ./internal/_curry1

module.exports = _curry1(function unapply(fn) {
  return function () {
    return fn(Array.prototype.slice.call(arguments, 0));
  };
});
}, 2273, null, "ramda/src/unapply.js");
__d(/* ramda/src/unary.js */function(global, require, module, exports) {var _curry1 = require(1986                ); // 1986 = ./internal/_curry1
var nAry = require(2039    ); // 2039 = ./nAry

module.exports = _curry1(function unary(fn) {
  return nAry(1, fn);
});
}, 2274, null, "ramda/src/unary.js");
__d(/* ramda/src/uncurryN.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2
var curryN = require(1994      ); // 1994 = ./curryN

module.exports = _curry2(function uncurryN(depth, fn) {
  return curryN(depth, function () {
    var currentDepth = 1;
    var value = fn;
    var idx = 0;
    var endIdx;
    while (currentDepth <= depth && typeof value === 'function') {
      endIdx = currentDepth === depth ? arguments.length : idx + value.length;
      value = value.apply(this, Array.prototype.slice.call(arguments, idx, endIdx));
      currentDepth += 1;
      idx = endIdx;
    }
    return value;
  });
});
}, 2275, null, "ramda/src/uncurryN.js");
__d(/* ramda/src/unfold.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2

module.exports = _curry2(function unfold(fn, seed) {
  var pair = fn(seed);
  var result = [];
  while (pair && pair.length) {
    result[result.length] = pair[0];
    pair = fn(pair[1]);
  }
  return result;
});
}, 2276, null, "ramda/src/unfold.js");
__d(/* ramda/src/union.js */function(global, require, module, exports) {var _concat = require(1993                ); // 1993 = ./internal/_concat
var _curry2 = require(1991                ); // 1991 = ./internal/_curry2
var compose = require(2059       ); // 2059 = ./compose
var uniq = require(2158    ); // 2158 = ./uniq

module.exports = _curry2(compose(uniq, _concat));
}, 2277, null, "ramda/src/union.js");
__d(/* ramda/src/unionWith.js */function(global, require, module, exports) {var _concat = require(1993                ); // 1993 = ./internal/_concat
var _curry3 = require(1998                ); // 1998 = ./internal/_curry3
var uniqWith = require(2162        ); // 2162 = ./uniqWith

module.exports = _curry3(function unionWith(pred, list1, list2) {
  return uniqWith(pred, _concat(list1, list2));
});
}, 2278, null, "ramda/src/unionWith.js");
__d(/* ramda/src/unless.js */function(global, require, module, exports) {var _curry3 = require(1998                ); // 1998 = ./internal/_curry3

module.exports = _curry3(function unless(pred, whenFalseFn, x) {
  return pred(x) ? x : whenFalseFn(x);
});
}, 2279, null, "ramda/src/unless.js");
__d(/* ramda/src/unnest.js */function(global, require, module, exports) {var _identity = require(2149                  ); // 2149 = ./internal/_identity
var chain = require(2046     ); // 2046 = ./chain

module.exports = chain(_identity);
}, 2280, null, "ramda/src/unnest.js");
__d(/* ramda/src/until.js */function(global, require, module, exports) {var _curry3 = require(1998                ); // 1998 = ./internal/_curry3

module.exports = _curry3(function until(pred, fn, init) {
  var val = init;
  while (!pred(val)) {
    val = fn(val);
  }
  return val;
});
}, 2281, null, "ramda/src/until.js");
__d(/* ramda/src/valuesIn.js */function(global, require, module, exports) {var _curry1 = require(1986                ); // 1986 = ./internal/_curry1

module.exports = _curry1(function valuesIn(obj) {
  var prop;
  var vs = [];
  for (prop in obj) {
    vs[vs.length] = obj[prop];
  }
  return vs;
});
}, 2282, null, "ramda/src/valuesIn.js");
__d(/* ramda/src/view.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2

module.exports = function () {
  var Const = function Const(x) {
    return { value: x, map: function map() {
        return this;
      } };
  };

  return _curry2(function view(lens, x) {
    return lens(Const)(x).value;
  });
}();
}, 2283, null, "ramda/src/view.js");
__d(/* ramda/src/when.js */function(global, require, module, exports) {var _curry3 = require(1998                ); // 1998 = ./internal/_curry3

module.exports = _curry3(function when(pred, whenTrueFn, x) {
  return pred(x) ? whenTrueFn(x) : x;
});
}, 2284, null, "ramda/src/when.js");
__d(/* ramda/src/where.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2
var _has = require(2018             ); // 2018 = ./internal/_has

module.exports = _curry2(function where(spec, testObj) {
  for (var prop in spec) {
    if (_has(prop, spec) && !spec[prop](testObj[prop])) {
      return false;
    }
  }
  return true;
});
}, 2285, null, "ramda/src/where.js");
__d(/* ramda/src/whereEq.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2
var equals = require(2075      ); // 2075 = ./equals
var map = require(2009   ); // 2009 = ./map
var where = require(2285     ); // 2285 = ./where

module.exports = _curry2(function whereEq(spec, testObj) {
  return where(map(equals, spec), testObj);
});
}, 2286, null, "ramda/src/whereEq.js");
__d(/* ramda/src/without.js */function(global, require, module, exports) {var _contains = require(2073                  ); // 2073 = ./internal/_contains
var _curry2 = require(1991                ); // 1991 = ./internal/_curry2
var flip = require(2137    ); // 2137 = ./flip
var reject = require(2082      ); // 2082 = ./reject

module.exports = _curry2(function (xs, list) {
  return reject(flip(_contains)(xs), list);
});
}, 2287, null, "ramda/src/without.js");
__d(/* ramda/src/xprod.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2

module.exports = _curry2(function xprod(a, b) {
  var idx = 0;
  var ilen = a.length;
  var j;
  var jlen = b.length;
  var result = [];
  while (idx < ilen) {
    j = 0;
    while (j < jlen) {
      result[result.length] = [a[idx], b[j]];
      j += 1;
    }
    idx += 1;
  }
  return result;
});
}, 2288, null, "ramda/src/xprod.js");
__d(/* ramda/src/zip.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2

module.exports = _curry2(function zip(a, b) {
  var rv = [];
  var idx = 0;
  var len = Math.min(a.length, b.length);
  while (idx < len) {
    rv[idx] = [a[idx], b[idx]];
    idx += 1;
  }
  return rv;
});
}, 2289, null, "ramda/src/zip.js");
__d(/* ramda/src/zipObj.js */function(global, require, module, exports) {var _curry2 = require(1991                ); // 1991 = ./internal/_curry2

module.exports = _curry2(function zipObj(keys, values) {
  var idx = 0;
  var len = Math.min(keys.length, values.length);
  var out = {};
  while (idx < len) {
    out[keys[idx]] = values[idx];
    idx += 1;
  }
  return out;
});
}, 2290, null, "ramda/src/zipObj.js");
__d(/* ramda/src/zipWith.js */function(global, require, module, exports) {var _curry3 = require(1998                ); // 1998 = ./internal/_curry3

module.exports = _curry3(function zipWith(fn, a, b) {
  var rv = [];
  var idx = 0;
  var len = Math.min(a.length, b.length);
  while (idx < len) {
    rv[idx] = fn(a[idx], b[idx]);
    idx += 1;
  }
  return rv;
});
}, 2291, null, "ramda/src/zipWith.js");
__d(/* UI/ignite/DevScreens/PresentationScreen.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/home/chris/Desktop/UI/ignite/DevScreens/PresentationScreen.js';

var _react = require(604    ); // 604 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(334           ); // 334 = react-native

var _DevTheme = require(2293        ); // 2293 = ./DevTheme

var _ButtonBox = require(2313         ); // 2313 = ./ButtonBox

var _ButtonBox2 = babelHelpers.interopRequireDefault(_ButtonBox);

var _reactNavigation = require(1884              ); // 1884 = react-navigation

var _APITestingScreen = require(2320                ); // 2320 = ./APITestingScreen

var _APITestingScreen2 = babelHelpers.interopRequireDefault(_APITestingScreen);

var _ComponentExamplesScreen = require(2451                       ); // 2451 = ./ComponentExamplesScreen

var _ComponentExamplesScreen2 = babelHelpers.interopRequireDefault(_ComponentExamplesScreen);

var _DeviceInfoScreen = require(2453                ); // 2453 = ./DeviceInfoScreen

var _DeviceInfoScreen2 = babelHelpers.interopRequireDefault(_DeviceInfoScreen);

var _PluginExamplesScreen = require(2456                    ); // 2456 = ./PluginExamplesScreen

var _PluginExamplesScreen2 = babelHelpers.interopRequireDefault(_PluginExamplesScreen);

var _ThemeScreen = require(2646           ); // 2646 = ./ThemeScreen

var _ThemeScreen2 = babelHelpers.interopRequireDefault(_ThemeScreen);

var _FaqScreen = require(2648         ); // 2648 = ./FaqScreen

var _FaqScreen2 = babelHelpers.interopRequireDefault(_FaqScreen);

var _PresentationScreenStyles = require(2650                               ); // 2650 = ./Styles/PresentationScreenStyles

var _PresentationScreenStyles2 = babelHelpers.interopRequireDefault(_PresentationScreenStyles);

var PresentationScreen = function (_React$Component) {
  babelHelpers.inherits(PresentationScreen, _React$Component);

  function PresentationScreen() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, PresentationScreen);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = PresentationScreen.__proto__ || Object.getPrototypeOf(PresentationScreen)).call.apply(_ref, [this].concat(args))), _this), _this.openComponents = function () {
      _this.props.navigation.navigate('ComponentExamplesScreen');
    }, _this.openUsage = function () {
      _this.props.navigation.navigate('PluginExamplesScreen');
    }, _this.openApi = function () {
      _this.props.navigation.navigate('APITestingScreen');
    }, _this.openTheme = function () {
      _this.props.navigation.navigate('ThemeScreen');
    }, _this.openDevice = function () {
      _this.props.navigation.navigate('DeviceInfoScreen');
    }, _this.openFaq = function () {
      _this.props.navigation.navigate('FaqScreen');
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(PresentationScreen, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        _reactNative.View,
        { style: _PresentationScreenStyles2.default.mainContainer, __source: {
            fileName: _jsxFileName,
            lineNumber: 44
          }
        },
        _react2.default.createElement(_reactNative.Image, { source: _DevTheme.Images.background, style: _PresentationScreenStyles2.default.backgroundImage, resizeMode: 'stretch', __source: {
            fileName: _jsxFileName,
            lineNumber: 45
          }
        }),
        _react2.default.createElement(
          _reactNative.TouchableOpacity,
          { onPress: this.props.screenProps.toggle, style: {
              position: 'absolute',
              paddingTop: 30,
              paddingHorizontal: 10,
              zIndex: 10
            }, __source: {
              fileName: _jsxFileName,
              lineNumber: 46
            }
          },
          _react2.default.createElement(_reactNative.Image, { source: _DevTheme.Images.closeButton, __source: {
              fileName: _jsxFileName,
              lineNumber: 52
            }
          })
        ),
        _react2.default.createElement(
          _reactNative.ScrollView,
          { showsVerticalScrollIndicator: false, bounces: false, style: _PresentationScreenStyles2.default.container, __source: {
              fileName: _jsxFileName,
              lineNumber: 54
            }
          },
          _react2.default.createElement(
            _reactNative.View,
            { style: _PresentationScreenStyles2.default.centered, __source: {
                fileName: _jsxFileName,
                lineNumber: 55
              }
            },
            _react2.default.createElement(_reactNative.Image, { source: _DevTheme.Images.igniteClear, style: _PresentationScreenStyles2.default.logo, __source: {
                fileName: _jsxFileName,
                lineNumber: 56
              }
            })
          ),
          _react2.default.createElement(
            _reactNative.Text,
            { style: _PresentationScreenStyles2.default.sectionText, __source: {
                fileName: _jsxFileName,
                lineNumber: 59
              }
            },
            'Default screens for development, debugging, and alpha testing are available below.'
          ),
          _react2.default.createElement(
            _reactNative.View,
            { style: _PresentationScreenStyles2.default.buttonsContainer, __source: {
                fileName: _jsxFileName,
                lineNumber: 63
              }
            },
            _react2.default.createElement(_ButtonBox2.default, { onPress: this.openComponents, style: _PresentationScreenStyles2.default.componentButton, image: _DevTheme.Images.components, text: 'Components', __source: {
                fileName: _jsxFileName,
                lineNumber: 64
              }
            }),
            _react2.default.createElement(_ButtonBox2.default, { onPress: this.openUsage, style: _PresentationScreenStyles2.default.usageButton, image: _DevTheme.Images.usageExamples, text: 'Plugin Examples', __source: {
                fileName: _jsxFileName,
                lineNumber: 65
              }
            })
          ),
          _react2.default.createElement(
            _reactNative.View,
            { style: _PresentationScreenStyles2.default.buttonsContainer, __source: {
                fileName: _jsxFileName,
                lineNumber: 67
              }
            },
            _react2.default.createElement(_ButtonBox2.default, { onPress: this.openApi, style: _PresentationScreenStyles2.default.apiButton, image: _DevTheme.Images.api, text: 'API Testing', __source: {
                fileName: _jsxFileName,
                lineNumber: 68
              }
            }),
            _react2.default.createElement(_ButtonBox2.default, { onPress: this.openTheme, image: _DevTheme.Images.theme, text: 'Theme', __source: {
                fileName: _jsxFileName,
                lineNumber: 69
              }
            })
          ),
          _react2.default.createElement(
            _reactNative.View,
            { style: _PresentationScreenStyles2.default.buttonsContainer, __source: {
                fileName: _jsxFileName,
                lineNumber: 71
              }
            },
            _react2.default.createElement(_ButtonBox2.default, { onPress: this.openDevice, style: _PresentationScreenStyles2.default.deviceButton, image: _DevTheme.Images.deviceInfo, text: 'Device Info', __source: {
                fileName: _jsxFileName,
                lineNumber: 72
              }
            }),
            _react2.default.createElement(_ButtonBox2.default, { onPress: this.openFaq, style: _PresentationScreenStyles2.default.usageButton, image: _DevTheme.Images.faq, text: 'FAQ', __source: {
                fileName: _jsxFileName,
                lineNumber: 73
              }
            })
          )
        ),
        _react2.default.createElement(
          _reactNative.View,
          { style: _PresentationScreenStyles2.default.banner, __source: {
              fileName: _jsxFileName,
              lineNumber: 76
            }
          },
          _react2.default.createElement(
            _reactNative.Text,
            { style: _PresentationScreenStyles2.default.bannerLabel, __source: {
                fileName: _jsxFileName,
                lineNumber: 77
              }
            },
            'Made with \u2764\uFE0F by Infinite Red'
          )
        )
      );
    }
  }]);
  return PresentationScreen;
}(_react2.default.Component);

exports.default = (0, _reactNavigation.StackNavigator)({
  PresentationScreen: { screen: PresentationScreen },
  APITestingScreen: { screen: _APITestingScreen2.default },
  ComponentExamplesScreen: { screen: _ComponentExamplesScreen2.default },
  DeviceInfoScreen: { screen: _DeviceInfoScreen2.default },
  PluginExamplesScreen: { screen: _PluginExamplesScreen2.default },
  ThemeScreen: { screen: _ThemeScreen2.default },
  FaqScreen: { screen: _FaqScreen2.default }
}, {
  cardStyle: {
    opacity: 1,
    backgroundColor: '#3e243f'
  },
  initialRouteName: 'PresentationScreen',
  headerMode: 'none',

  navigationOptions: {
    header: {
      left: _react2.default.createElement(
        _reactNative.TouchableOpacity,
        { onPress: function onPress() {
            return window.alert('pop');
          }, __source: {
            fileName: _jsxFileName,
            lineNumber: 103
          }
        },
        _react2.default.createElement(_reactNative.Image, { source: _DevTheme.Images.closeButton, style: { marginHorizontal: 10 }, __source: {
            fileName: _jsxFileName,
            lineNumber: 103
          }
        })
      ),
      style: {
        backgroundColor: '#3e243f'
      }
    }
  }
});
}, 2292, null, "UI/ignite/DevScreens/PresentationScreen.js");
__d(/* UI/ignite/DevScreens/DevTheme/index.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ApplicationStyles = exports.Metrics = exports.Images = exports.Fonts = exports.Colors = undefined;

var _Colors = require(2294      ); // 2294 = ./Colors

var _Colors2 = babelHelpers.interopRequireDefault(_Colors);

var _Fonts = require(2295     ); // 2295 = ./Fonts

var _Fonts2 = babelHelpers.interopRequireDefault(_Fonts);

var _Metrics = require(2296       ); // 2296 = ./Metrics

var _Metrics2 = babelHelpers.interopRequireDefault(_Metrics);

var _Images = require(2297      ); // 2297 = ./Images

var _Images2 = babelHelpers.interopRequireDefault(_Images);

var _ApplicationStyles = require(2312                 ); // 2312 = ./ApplicationStyles

var _ApplicationStyles2 = babelHelpers.interopRequireDefault(_ApplicationStyles);

exports.Colors = _Colors2.default;
exports.Fonts = _Fonts2.default;
exports.Images = _Images2.default;
exports.Metrics = _Metrics2.default;
exports.ApplicationStyles = _ApplicationStyles2.default;
}, 2293, null, "UI/ignite/DevScreens/DevTheme/index.js");
__d(/* UI/ignite/DevScreens/DevTheme/Colors.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var colors = {
  transparent: 'rgba(0,0,0,0)',
  background: '#3e243f',
  silver: '#F7F7F7',
  frost: '#D8D8D8',
  windowTint: 'rgba(0, 0, 0, 0.4)',
  panther: '#161616',
  charcoal: '#595959',
  snow: 'white',
  ember: 'rgba(164, 0, 48, 0.5)',
  fire: '#ff3832',
  eggplant: '#251a34',
  border: '#483F53',
  text: '#E0D7E5'
};

exports.default = colors;
}, 2294, null, "UI/ignite/DevScreens/DevTheme/Colors.js");
__d(/* UI/ignite/DevScreens/DevTheme/Fonts.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var type = {
  base: 'Avenir-Book',
  bold: 'Avenir-Black',
  emphasis: 'HelveticaNeue-Italic'
};

var size = {
  h1: 38,
  h2: 34,
  h3: 30,
  h4: 26,
  h5: 20,
  h6: 19,
  input: 18,
  regular: 17,
  medium: 14,
  small: 12,
  tiny: 8.5
};

var style = {
  h1: {
    fontFamily: type.base,
    fontSize: size.h1
  },
  h2: {
    fontWeight: 'bold',
    fontSize: size.h2
  },
  h3: {
    fontFamily: type.emphasis,
    fontSize: size.h3
  },
  h4: {
    fontFamily: type.base,
    fontSize: size.h4
  },
  h5: {
    fontFamily: type.base,
    fontSize: size.h5
  },
  h6: {
    fontFamily: type.emphasis,
    fontSize: size.h6
  },
  normal: {
    fontFamily: type.base,
    fontSize: size.regular
  },
  description: {
    fontFamily: type.base,
    fontSize: size.medium
  }
};

exports.default = {
  type: type,
  size: size,
  style: style
};
}, 2295, null, "UI/ignite/DevScreens/DevTheme/Fonts.js");
__d(/* UI/ignite/DevScreens/DevTheme/Metrics.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _reactNative = require(334           ); // 334 = react-native

var _Dimensions$get = _reactNative.Dimensions.get('window'),
    width = _Dimensions$get.width,
    height = _Dimensions$get.height;

var metrics = {
  section: 25,
  baseMargin: 10,
  doubleBaseMargin: 20,
  smallMargin: 5,
  doubleSection: 50,
  screenWidth: width < height ? width : height,
  screenHeight: width < height ? height : width,
  icons: {
    large: 45,
    xl: 50
  },
  images: {
    logo: 200
  }
};

exports.default = metrics;
}, 2296, null, "UI/ignite/DevScreens/DevTheme/Metrics.js");
__d(/* UI/ignite/DevScreens/DevTheme/Images.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var images = {
  igniteClear: require(2298                                   ), // 2298 = ../Images/ignite-logo-transparent.png
  tileBg: require(2299                   ), // 2299 = ../Images/tile_bg.png
  background: require(2300              ), // 2300 = ../Images/BG.png
  api: require(2301                                  ), // 2301 = ../Images/Icons/icon-api-testing.png
  components: require(2302                                 ), // 2302 = ../Images/Icons/icon-components.png
  deviceInfo: require(2303                                         ), // 2303 = ../Images/Icons/icon-device-information.png
  faq: require(2304                          ), // 2304 = ../Images/Icons/faq-icon.png
  home: require(2305                           ), // 2305 = ../Images/Icons/icon-home.png
  theme: require(2306                            ), // 2306 = ../Images/Icons/icon-theme.png
  usageExamples: require(2307                                     ), // 2307 = ../Images/Icons/icon-usage-examples.png
  chevronRight: require(2308                               ), // 2308 = ../Images/Icons/chevron-right.png
  hamburger: require(2309                           ), // 2309 = ../Images/Icons/hamburger.png
  backButton: require(2310                             ), // 2310 = ../Images/Icons/back-button.png
  closeButton: require(2311                              ) // 2311 = ../Images/Icons/close-button.png
};

exports.default = images;
}, 2297, null, "UI/ignite/DevScreens/DevTheme/Images.js");
__d(/* UI/ignite/DevScreens/Images/ignite-logo-transparent.png */function(global, require, module, exports) {module.exports = require(494                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/ignite/DevScreens/Images","width":922,"height":1686,"scales":[1],"hash":"5b3a33cadb3d5fe6c15015ccfa803466","name":"ignite-logo-transparent","type":"png"}); // 494 = react-native/Libraries/Image/AssetRegistry
}, 2298, null, "UI/ignite/DevScreens/Images/ignite-logo-transparent.png");
__d(/* UI/ignite/DevScreens/Images/tile_bg.png */function(global, require, module, exports) {module.exports = require(494                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/ignite/DevScreens/Images","width":100,"height":100,"scales":[1],"hash":"9be8930aca9ab202491d3b311a512868","name":"tile_bg","type":"png"}); // 494 = react-native/Libraries/Image/AssetRegistry
}, 2299, null, "UI/ignite/DevScreens/Images/tile_bg.png");
__d(/* UI/ignite/DevScreens/Images/BG.png */function(global, require, module, exports) {module.exports = require(494                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/ignite/DevScreens/Images","width":750,"height":1500,"scales":[1],"hash":"029cedd5587a21ab243f21cf38a7d090","name":"BG","type":"png"}); // 494 = react-native/Libraries/Image/AssetRegistry
}, 2300, null, "UI/ignite/DevScreens/Images/BG.png");
__d(/* UI/ignite/DevScreens/Images/Icons/icon-api-testing.png */function(global, require, module, exports) {module.exports = require(494                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/ignite/DevScreens/Images/Icons","width":58,"height":54,"scales":[2],"hash":"7d92a3154b4b1f09f0e056613b7fe1e8","name":"icon-api-testing","type":"png"}); // 494 = react-native/Libraries/Image/AssetRegistry
}, 2301, null, "UI/ignite/DevScreens/Images/Icons/icon-api-testing.png");
__d(/* UI/ignite/DevScreens/Images/Icons/icon-components.png */function(global, require, module, exports) {module.exports = require(494                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/ignite/DevScreens/Images/Icons","width":57,"height":57,"scales":[2],"hash":"c31906a571a8973892032646ba214971","name":"icon-components","type":"png"}); // 494 = react-native/Libraries/Image/AssetRegistry
}, 2302, null, "UI/ignite/DevScreens/Images/Icons/icon-components.png");
__d(/* UI/ignite/DevScreens/Images/Icons/icon-device-information.png */function(global, require, module, exports) {module.exports = require(494                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/ignite/DevScreens/Images/Icons","width":34,"height":55,"scales":[2],"hash":"8179e5dbd263485bbb69572188dbdf70","name":"icon-device-information","type":"png"}); // 494 = react-native/Libraries/Image/AssetRegistry
}, 2303, null, "UI/ignite/DevScreens/Images/Icons/icon-device-information.png");
__d(/* UI/ignite/DevScreens/Images/Icons/faq-icon.png */function(global, require, module, exports) {module.exports = require(494                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/ignite/DevScreens/Images/Icons","width":60,"height":55,"scales":[1,2,3],"hash":"fde98a42bd5a6b84d79b7b3306cfd934","name":"faq-icon","type":"png"}); // 494 = react-native/Libraries/Image/AssetRegistry
}, 2304, null, "UI/ignite/DevScreens/Images/Icons/faq-icon.png");
__d(/* UI/ignite/DevScreens/Images/Icons/icon-home.png */function(global, require, module, exports) {module.exports = require(494                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/ignite/DevScreens/Images/Icons","width":35,"height":52,"scales":[2],"hash":"3bd2fef835821466083f18855ec4b04b","name":"icon-home","type":"png"}); // 494 = react-native/Libraries/Image/AssetRegistry
}, 2305, null, "UI/ignite/DevScreens/Images/Icons/icon-home.png");
__d(/* UI/ignite/DevScreens/Images/Icons/icon-theme.png */function(global, require, module, exports) {module.exports = require(494                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/ignite/DevScreens/Images/Icons","width":35,"height":55,"scales":[2],"hash":"1ef39d03db8bb722ef9be0b0edcec0c8","name":"icon-theme","type":"png"}); // 494 = react-native/Libraries/Image/AssetRegistry
}, 2306, null, "UI/ignite/DevScreens/Images/Icons/icon-theme.png");
__d(/* UI/ignite/DevScreens/Images/Icons/icon-usage-examples.png */function(global, require, module, exports) {module.exports = require(494                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/ignite/DevScreens/Images/Icons","width":61,"height":56,"scales":[2],"hash":"2ada9e2d3ccbd1a4da6a3fa39e55df79","name":"icon-usage-examples","type":"png"}); // 494 = react-native/Libraries/Image/AssetRegistry
}, 2307, null, "UI/ignite/DevScreens/Images/Icons/icon-usage-examples.png");
__d(/* UI/ignite/DevScreens/Images/Icons/chevron-right.png */function(global, require, module, exports) {module.exports = require(494                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/ignite/DevScreens/Images/Icons","width":12,"height":17,"scales":[2],"hash":"e7baa1aa35fb87f6e4dd2906f39ce1cf","name":"chevron-right","type":"png"}); // 494 = react-native/Libraries/Image/AssetRegistry
}, 2308, null, "UI/ignite/DevScreens/Images/Icons/chevron-right.png");
__d(/* UI/ignite/DevScreens/Images/Icons/hamburger.png */function(global, require, module, exports) {module.exports = require(494                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/ignite/DevScreens/Images/Icons","width":40,"height":40,"scales":[2],"hash":"7cfa3f170815293c041dcf82aaa19058","name":"hamburger","type":"png"}); // 494 = react-native/Libraries/Image/AssetRegistry
}, 2309, null, "UI/ignite/DevScreens/Images/Icons/hamburger.png");
__d(/* UI/ignite/DevScreens/Images/Icons/back-button.png */function(global, require, module, exports) {module.exports = require(494                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/ignite/DevScreens/Images/Icons","width":42,"height":42,"scales":[2],"hash":"f689d7c4878b8920af230d4a681140cb","name":"back-button","type":"png"}); // 494 = react-native/Libraries/Image/AssetRegistry
}, 2310, null, "UI/ignite/DevScreens/Images/Icons/back-button.png");
__d(/* UI/ignite/DevScreens/Images/Icons/close-button.png */function(global, require, module, exports) {module.exports = require(494                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/ignite/DevScreens/Images/Icons","width":42,"height":42,"scales":[1,2,3],"hash":"7fdaf2fa97a969870151f626898b8930","name":"close-button","type":"png"}); // 494 = react-native/Libraries/Image/AssetRegistry
}, 2311, null, "UI/ignite/DevScreens/Images/Icons/close-button.png");
__d(/* UI/ignite/DevScreens/DevTheme/ApplicationStyles.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _Fonts = require(2295     ); // 2295 = ./Fonts

var _Fonts2 = babelHelpers.interopRequireDefault(_Fonts);

var _Metrics = require(2296       ); // 2296 = ./Metrics

var _Metrics2 = babelHelpers.interopRequireDefault(_Metrics);

var _Colors = require(2294      ); // 2294 = ./Colors

var _Colors2 = babelHelpers.interopRequireDefault(_Colors);

var ApplicationStyles = {
  screen: {
    mainContainer: {
      flex: 1,
      backgroundColor: _Colors2.default.transparent
    },
    backgroundImage: {
      position: 'absolute',
      top: 0,
      left: 0,
      bottom: 0,
      right: 0
    },
    container: {
      flex: 1,
      paddingTop: _Metrics2.default.baseMargin,
      backgroundColor: _Colors2.default.transparent
    },
    section: {
      margin: _Metrics2.default.section,
      padding: _Metrics2.default.baseMargin
    },
    sectionText: babelHelpers.extends({}, _Fonts2.default.normal, {
      paddingVertical: _Metrics2.default.doubleBaseMargin,
      color: _Colors2.default.snow,
      marginVertical: _Metrics2.default.smallMargin,
      textAlign: 'center'
    }),
    subtitle: {
      color: _Colors2.default.snow,
      padding: _Metrics2.default.smallMargin,
      marginBottom: _Metrics2.default.smallMargin,
      marginHorizontal: _Metrics2.default.smallMargin
    },
    titleText: babelHelpers.extends({}, _Fonts2.default.style.h2, {
      fontSize: 14,
      color: _Colors2.default.text
    })
  },
  darkLabelContainer: {
    padding: _Metrics2.default.smallMargin,
    paddingBottom: _Metrics2.default.doubleBaseMargin,
    borderBottomColor: _Colors2.default.border,
    borderBottomWidth: 1,
    marginBottom: _Metrics2.default.baseMargin
  },
  darkLabel: {
    fontFamily: _Fonts2.default.type.bold,
    color: _Colors2.default.snow
  },
  groupContainer: {
    margin: _Metrics2.default.smallMargin,
    flexDirection: 'row',
    justifyContent: 'space-around',
    alignItems: 'center'
  }
};

exports.default = ApplicationStyles;
}, 2312, null, "UI/ignite/DevScreens/DevTheme/ApplicationStyles.js");
__d(/* UI/ignite/DevScreens/ButtonBox.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/home/chris/Desktop/UI/ignite/DevScreens/ButtonBox.js';

var _react = require(604    ); // 604 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(334           ); // 334 = react-native

var _propTypes = require(2314        ); // 2314 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _ButtonBoxStyles = require(2319                      ); // 2319 = ./Styles/ButtonBoxStyles

var _ButtonBoxStyles2 = babelHelpers.interopRequireDefault(_ButtonBoxStyles);

var ButtonBox = function (_React$Component) {
  babelHelpers.inherits(ButtonBox, _React$Component);

  function ButtonBox() {
    babelHelpers.classCallCheck(this, ButtonBox);
    return babelHelpers.possibleConstructorReturn(this, (ButtonBox.__proto__ || Object.getPrototypeOf(ButtonBox)).apply(this, arguments));
  }

  babelHelpers.createClass(ButtonBox, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        _reactNative.TouchableOpacity,
        { style: [_ButtonBoxStyles2.default.container, this.props.style], onPress: this.props.onPress, __source: {
            fileName: _jsxFileName,
            lineNumber: 16
          }
        },
        _react2.default.createElement(_reactNative.Image, { resizeMode: 'contain', source: this.props.image, style: _ButtonBoxStyles2.default.image, __source: {
            fileName: _jsxFileName,
            lineNumber: 17
          }
        }),
        _react2.default.createElement(
          _reactNative.Text,
          { style: _ButtonBoxStyles2.default.label, __source: {
              fileName: _jsxFileName,
              lineNumber: 18
            }
          },
          this.props.text
        )
      );
    }
  }]);
  return ButtonBox;
}(_react2.default.Component);

ButtonBox.propTypes = {
  onPress: _propTypes2.default.func,
  image: _propTypes2.default.number,
  style: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.number]),
  text: _propTypes2.default.string
};
exports.default = ButtonBox;
}, 2313, null, "UI/ignite/DevScreens/ButtonBox.js");
__d(/* prop-types/index.js */function(global, require, module, exports) {

if (process.env.NODE_ENV !== 'production') {
  var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && (typeof Symbol === 'function' ? Symbol.for : '@@for') && (typeof Symbol === 'function' ? Symbol.for : '@@for')('react.element') || 0xeac7;

  var isValidElement = function isValidElement(object) {
    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
  };

  var throwOnDirectAccess = true;
  module.exports = require(2315                       )(isValidElement, throwOnDirectAccess); // 2315 = ./factoryWithTypeCheckers
} else {
  module.exports = require(2318                        )(); // 2318 = ./factoryWithThrowingShims
}
}, 2314, null, "prop-types/index.js");
__d(/* prop-types/factoryWithTypeCheckers.js */function(global, require, module, exports) {

'use strict';

var emptyFunction = require(336                     ); // 336 = fbjs/lib/emptyFunction
var invariant = require(346                 ); // 346 = fbjs/lib/invariant
var warning = require(335               ); // 335 = fbjs/lib/warning
var assign = require(400            ); // 400 = object-assign

var ReactPropTypesSecret = require(2316                        ); // 2316 = ./lib/ReactPropTypesSecret
var checkPropTypes = require(2317              ); // 2317 = ./checkPropTypes

module.exports = function (isValidElement, throwOnDirectAccess) {
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && (typeof Symbol === 'function' ? Symbol.iterator : '@@iterator');
  var FAUX_ITERATOR_SYMBOL = '@@iterator';
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  var ANONYMOUS = '<<anonymous>>';

  var ReactPropTypes = {
    array: createPrimitiveTypeChecker('array'),
    bool: createPrimitiveTypeChecker('boolean'),
    func: createPrimitiveTypeChecker('function'),
    number: createPrimitiveTypeChecker('number'),
    object: createPrimitiveTypeChecker('object'),
    string: createPrimitiveTypeChecker('string'),
    symbol: createPrimitiveTypeChecker('symbol'),

    any: createAnyTypeChecker(),
    arrayOf: createArrayOfTypeChecker,
    element: createElementTypeChecker(),
    instanceOf: createInstanceTypeChecker,
    node: createNodeChecker(),
    objectOf: createObjectOfTypeChecker,
    oneOf: createEnumTypeChecker,
    oneOfType: createUnionTypeChecker,
    shape: createShapeTypeChecker,
    exact: createStrictShapeTypeChecker
  };

  function is(x, y) {
    if (x === y) {
      return x !== 0 || 1 / x === 1 / y;
    } else {
      return x !== x && y !== y;
    }
  }

  function PropTypeError(message) {
    this.message = message;
    this.stack = '';
  }

  PropTypeError.prototype = Error.prototype;

  function createChainableTypeChecker(validate) {
    if (process.env.NODE_ENV !== 'production') {
      var manualPropTypeCallCache = {};
      var manualPropTypeWarningCount = 0;
    }
    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
      componentName = componentName || ANONYMOUS;
      propFullName = propFullName || propName;

      if (secret !== ReactPropTypesSecret) {
        if (throwOnDirectAccess) {
          invariant(false, 'Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use `PropTypes.checkPropTypes()` to call them. ' + 'Read more at http://fb.me/use-check-prop-types');
        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {
          var cacheKey = componentName + ':' + propName;
          if (!manualPropTypeCallCache[cacheKey] && manualPropTypeWarningCount < 3) {
            warning(false, 'You are manually calling a React.PropTypes validation ' + 'function for the `%s` prop on `%s`. This is deprecated ' + 'and will throw in the standalone `prop-types` package. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.', propFullName, componentName);
            manualPropTypeCallCache[cacheKey] = true;
            manualPropTypeWarningCount++;
          }
        }
      }
      if (props[propName] == null) {
        if (isRequired) {
          if (props[propName] === null) {
            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
          }
          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
        }
        return null;
      } else {
        return validate(props, propName, componentName, location, propFullName);
      }
    }

    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);

    return chainedCheckType;
  }

  function createPrimitiveTypeChecker(expectedType) {
    function validate(props, propName, componentName, location, propFullName, secret) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== expectedType) {
        var preciseType = getPreciseType(propValue);

        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createAnyTypeChecker() {
    return createChainableTypeChecker(emptyFunction.thatReturnsNull);
  }

  function createArrayOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
      }
      var propValue = props[propName];
      if (!Array.isArray(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
      }
      for (var i = 0; i < propValue.length; i++) {
        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
        if (error instanceof Error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!isValidElement(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createInstanceTypeChecker(expectedClass) {
    function validate(props, propName, componentName, location, propFullName) {
      if (!(props[propName] instanceof expectedClass)) {
        var expectedClassName = expectedClass.name || ANONYMOUS;
        var actualClassName = getClassName(props[propName]);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createEnumTypeChecker(expectedValues) {
    if (!Array.isArray(expectedValues)) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;
      return emptyFunction.thatReturnsNull;
    }

    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      for (var i = 0; i < expectedValues.length; i++) {
        if (is(propValue, expectedValues[i])) {
          return null;
        }
      }

      var valuesString = JSON.stringify(expectedValues);
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createObjectOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
      }
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
      }
      for (var key in propValue) {
        if (propValue.hasOwnProperty(key)) {
          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
          if (error instanceof Error) {
            return error;
          }
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createUnionTypeChecker(arrayOfTypeCheckers) {
    if (!Array.isArray(arrayOfTypeCheckers)) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
      return emptyFunction.thatReturnsNull;
    }

    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (typeof checker !== 'function') {
        warning(false, 'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' + 'received %s at index %s.', getPostfixForTypeWarning(checker), i);
        return emptyFunction.thatReturnsNull;
      }
    }

    function validate(props, propName, componentName, location, propFullName) {
      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];
        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
          return null;
        }
      }

      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createNodeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!isNode(props[propName])) {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      for (var key in shapeTypes) {
        var checker = shapeTypes[key];
        if (!checker) {
          continue;
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createStrictShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }

      var allKeys = assign({}, props[propName], shapeTypes);
      for (var key in allKeys) {
        var checker = shapeTypes[key];
        if (!checker) {
          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' + '\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function isNode(propValue) {
    switch (typeof propValue) {
      case 'number':
      case 'string':
      case 'undefined':
        return true;
      case 'boolean':
        return !propValue;
      case 'object':
        if (Array.isArray(propValue)) {
          return propValue.every(isNode);
        }
        if (propValue === null || isValidElement(propValue)) {
          return true;
        }

        var iteratorFn = getIteratorFn(propValue);
        if (iteratorFn) {
          var iterator = iteratorFn.call(propValue);
          var step;
          if (iteratorFn !== propValue.entries) {
            while (!(step = iterator.next()).done) {
              if (!isNode(step.value)) {
                return false;
              }
            }
          } else {
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                if (!isNode(entry[1])) {
                  return false;
                }
              }
            }
          }
        } else {
          return false;
        }

        return true;
      default:
        return false;
    }
  }

  function isSymbol(propType, propValue) {
    if (propType === 'symbol') {
      return true;
    }

    if (propValue['@@toStringTag'] === 'Symbol') {
      return true;
    }

    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
      return true;
    }

    return false;
  }

  function getPropType(propValue) {
    var propType = typeof propValue;
    if (Array.isArray(propValue)) {
      return 'array';
    }
    if (propValue instanceof RegExp) {
      return 'object';
    }
    if (isSymbol(propType, propValue)) {
      return 'symbol';
    }
    return propType;
  }

  function getPreciseType(propValue) {
    if (typeof propValue === 'undefined' || propValue === null) {
      return '' + propValue;
    }
    var propType = getPropType(propValue);
    if (propType === 'object') {
      if (propValue instanceof Date) {
        return 'date';
      } else if (propValue instanceof RegExp) {
        return 'regexp';
      }
    }
    return propType;
  }

  function getPostfixForTypeWarning(value) {
    var type = getPreciseType(value);
    switch (type) {
      case 'array':
      case 'object':
        return 'an ' + type;
      case 'boolean':
      case 'date':
      case 'regexp':
        return 'a ' + type;
      default:
        return type;
    }
  }

  function getClassName(propValue) {
    if (!propValue.constructor || !propValue.constructor.name) {
      return ANONYMOUS;
    }
    return propValue.constructor.name;
  }

  ReactPropTypes.checkPropTypes = checkPropTypes;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};
}, 2315, null, "prop-types/factoryWithTypeCheckers.js");
__d(/* prop-types/lib/ReactPropTypesSecret.js */function(global, require, module, exports) {

'use strict';

var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;
}, 2316, null, "prop-types/lib/ReactPropTypesSecret.js");
__d(/* prop-types/checkPropTypes.js */function(global, require, module, exports) {

'use strict';

if (process.env.NODE_ENV !== 'production') {
  var invariant = require(346                 ); // 346 = fbjs/lib/invariant
  var warning = require(335               ); // 335 = fbjs/lib/warning
  var ReactPropTypesSecret = require(2316                        ); // 2316 = ./lib/ReactPropTypesSecret
  var loggedTypeFailures = {};
}

function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
  if (process.env.NODE_ENV !== 'production') {
    for (var typeSpecName in typeSpecs) {
      if (typeSpecs.hasOwnProperty(typeSpecName)) {
        var error;

        try {
          invariant(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'the `prop-types` package, but received `%s`.', componentName || 'React class', location, typeSpecName, typeof typeSpecs[typeSpecName]);
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
          error = ex;
        }
        warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error);
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          loggedTypeFailures[error.message] = true;

          var stack = getStack ? getStack() : '';

          warning(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');
        }
      }
    }
  }
}

module.exports = checkPropTypes;
}, 2317, null, "prop-types/checkPropTypes.js");
__d(/* prop-types/factoryWithThrowingShims.js */function(global, require, module, exports) {

'use strict';

var emptyFunction = require(336                     ); // 336 = fbjs/lib/emptyFunction
var invariant = require(346                 ); // 346 = fbjs/lib/invariant
var ReactPropTypesSecret = require(2316                        ); // 2316 = ./lib/ReactPropTypesSecret

module.exports = function () {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret) {
      return;
    }
    invariant(false, 'Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use PropTypes.checkPropTypes() to call them. ' + 'Read more at http://fb.me/use-check-prop-types');
  };
  shim.isRequired = shim;
  function getShim() {
    return shim;
  };

  var ReactPropTypes = {
    array: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,

    any: shim,
    arrayOf: getShim,
    element: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim,
    exact: getShim
  };

  ReactPropTypes.checkPropTypes = emptyFunction;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};
}, 2318, null, "prop-types/factoryWithThrowingShims.js");
__d(/* UI/ignite/DevScreens/Styles/ButtonBoxStyles.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _reactNative = require(334           ); // 334 = react-native

var _DevTheme = require(2293          ); // 2293 = ../DevTheme/

exports.default = _reactNative.StyleSheet.create({
  container: {
    width: _DevTheme.Metrics.screenWidth / 2,
    aspectRatio: 0.9,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: _DevTheme.Colors.eggplant
  },
  image: {
    width: _DevTheme.Metrics.icons.xl,
    height: _DevTheme.Metrics.icons.xl,
    margin: _DevTheme.Metrics.baseMargin
  },
  label: babelHelpers.extends({}, _DevTheme.Fonts.style.h2, {
    fontSize: 14,
    color: _DevTheme.Colors.text
  })
});
}, 2319, null, "UI/ignite/DevScreens/Styles/ButtonBoxStyles.js");
__d(/* UI/ignite/DevScreens/APITestingScreen.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/home/chris/Desktop/UI/ignite/DevScreens/APITestingScreen.js';

var _react = require(604    ); // 604 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(334           ); // 334 = react-native

var _DevTheme = require(2293        ); // 2293 = ./DevTheme

var _FullButton = require(2321                             ); // 2321 = ../../App/Components/FullButton

var _FullButton2 = babelHelpers.interopRequireDefault(_FullButton);

var _Api = require(2323                    ); // 2323 = ../../App/Services/Api

var _Api2 = babelHelpers.interopRequireDefault(_Api);

var _formatJson = require(2449         ); // 2449 = format-json

var _formatJson2 = babelHelpers.interopRequireDefault(_formatJson);

var _APITestingScreenStyles = require(2450                             ); // 2450 = ./Styles/APITestingScreenStyles

var _APITestingScreenStyles2 = babelHelpers.interopRequireDefault(_APITestingScreenStyles);

var endpoints = [{ label: 'Github Root', endpoint: 'getRoot' }, { label: 'Github Rate Limit', endpoint: 'getRate' }, { label: 'Search User (gantman)', endpoint: 'getUser', args: ['gantman'] }, { label: 'Search User (skellock)', endpoint: 'getUser', args: ['skellock'] }];

var APITestingScreen = function (_React$Component) {
  babelHelpers.inherits(APITestingScreen, _React$Component);

  function APITestingScreen(props) {
    babelHelpers.classCallCheck(this, APITestingScreen);

    var _this = babelHelpers.possibleConstructorReturn(this, (APITestingScreen.__proto__ || Object.getPrototypeOf(APITestingScreen)).call(this, props));

    _this.api = {};

    _this.state = {
      visibleHeight: _DevTheme.Metrics.screenHeight
    };

    _this.api = _Api2.default.create();
    return _this;
  }

  babelHelpers.createClass(APITestingScreen, [{
    key: 'showResult',
    value: function showResult(response) {
      var title = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'Response';

      this.refs.container.scrollTo({ x: 0, y: 0, animated: true });
      if (response.ok) {
        this.refs.result.setState({ message: _formatJson2.default.plain(response.data), title: title });
      } else {
        this.refs.result.setState({ message: response.problem + ' - ' + response.status, title: title });
      }
    }
  }, {
    key: 'tryEndpoint',
    value: function tryEndpoint(apiEndpoint) {
      var _this2 = this;

      var label = apiEndpoint.label,
          endpoint = apiEndpoint.endpoint,
          _apiEndpoint$args = apiEndpoint.args,
          args = _apiEndpoint$args === undefined ? [''] : _apiEndpoint$args;

      this.api[endpoint].apply(this, args).then(function (result) {
        _this2.showResult(result, label || endpoint + '(' + args.join(', ') + ')');
      });
    }
  }, {
    key: 'renderButton',
    value: function renderButton(apiEndpoint) {
      var label = apiEndpoint.label,
          endpoint = apiEndpoint.endpoint,
          _apiEndpoint$args2 = apiEndpoint.args,
          args = _apiEndpoint$args2 === undefined ? [''] : _apiEndpoint$args2;

      return _react2.default.createElement(_FullButton2.default, { text: label || endpoint + '(' + args.join(', ') + ')', onPress: this.tryEndpoint.bind(this, apiEndpoint), styles: { marginTop: 10 }, key: endpoint + '-' + args.join('-'), __source: {
          fileName: _jsxFileName,
          lineNumber: 52
        }
      });
    }
  }, {
    key: 'renderButtons',
    value: function renderButtons() {
      var _this3 = this;

      return endpoints.map(function (endpoint) {
        return _this3.renderButton(endpoint);
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _this4 = this;

      return _react2.default.createElement(
        _reactNative.View,
        { style: _APITestingScreenStyles2.default.mainContainer, __source: {
            fileName: _jsxFileName,
            lineNumber: 62
          }
        },
        _react2.default.createElement(_reactNative.Image, { source: _DevTheme.Images.background, style: _APITestingScreenStyles2.default.backgroundImage, resizeMode: 'stretch', __source: {
            fileName: _jsxFileName,
            lineNumber: 63
          }
        }),
        _react2.default.createElement(
          _reactNative.TouchableOpacity,
          { onPress: function onPress() {
              return _this4.props.navigation.goBack();
            }, style: {
              position: 'absolute',
              paddingTop: 30,
              paddingHorizontal: 5,
              zIndex: 10
            }, __source: {
              fileName: _jsxFileName,
              lineNumber: 64
            }
          },
          _react2.default.createElement(_reactNative.Image, { source: _DevTheme.Images.backButton, __source: {
              fileName: _jsxFileName,
              lineNumber: 70
            }
          })
        ),
        _react2.default.createElement(
          _reactNative.ScrollView,
          { style: _APITestingScreenStyles2.default.container, ref: 'container', __source: {
              fileName: _jsxFileName,
              lineNumber: 72
            }
          },
          _react2.default.createElement(
            _reactNative.View,
            { style: { alignItems: 'center', paddingTop: 60 }, __source: {
                fileName: _jsxFileName,
                lineNumber: 73
              }
            },
            _react2.default.createElement(_reactNative.Image, { source: _DevTheme.Images.api, style: _APITestingScreenStyles2.default.logo, __source: {
                fileName: _jsxFileName,
                lineNumber: 74
              }
            }),
            _react2.default.createElement(
              _reactNative.Text,
              { style: _APITestingScreenStyles2.default.titleText, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 75
                }
              },
              'API'
            )
          ),
          _react2.default.createElement(
            _reactNative.View,
            { style: _APITestingScreenStyles2.default.section, __source: {
                fileName: _jsxFileName,
                lineNumber: 77
              }
            },
            _react2.default.createElement(
              _reactNative.Text,
              { style: _APITestingScreenStyles2.default.sectionText, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 78
                }
              },
              'Testing API with Postman or APIary.io verifies the server works. The API Test screen is the next step; a simple in-app way to verify and debug your in-app API functions.'
            ),
            _react2.default.createElement(
              _reactNative.Text,
              { style: _APITestingScreenStyles2.default.sectionText, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 82
                }
              },
              'Create new endpoints in Services/Api.js then add example uses to endpoints array in Containers/APITestingScreen.js'
            )
          ),
          this.renderButtons(),
          _react2.default.createElement(APIResult, { ref: 'result', __source: {
              fileName: _jsxFileName,
              lineNumber: 87
            }
          })
        )
      );
    }
  }]);
  return APITestingScreen;
}(_react2.default.Component);

exports.default = APITestingScreen;

var APIResult = function (_React$Component2) {
  babelHelpers.inherits(APIResult, _React$Component2);

  function APIResult(props) {
    babelHelpers.classCallCheck(this, APIResult);

    var _this5 = babelHelpers.possibleConstructorReturn(this, (APIResult.__proto__ || Object.getPrototypeOf(APIResult)).call(this, props));

    _this5.onApiPress = function () {
      _this5.setState({ message: false });
    };

    _this5.state = {
      message: false,
      title: false
    };
    return _this5;
  }

  babelHelpers.createClass(APIResult, [{
    key: 'renderView',
    value: function renderView() {
      return _react2.default.createElement(
        _reactNative.ScrollView,
        { style: { top: 0, bottom: 0, left: 0, right: 0, position: 'absolute' }, overflow: 'hidden', __source: {
            fileName: _jsxFileName,
            lineNumber: 109
          }
        },
        _react2.default.createElement(
          _reactNative.TouchableOpacity,
          {
            style: { backgroundColor: 'white', padding: 20 },
            onPress: this.onApiPress,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 110
            }
          },
          _react2.default.createElement(
            _reactNative.Text,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 114
              }
            },
            this.state.title,
            ' Response:'
          ),
          _react2.default.createElement(
            _reactNative.Text,
            { allowFontScaling: false, style: { fontFamily: 'CourierNewPS-BoldMT', fontSize: 10 }, __source: {
                fileName: _jsxFileName,
                lineNumber: 115
              }
            },
            this.state.message
          )
        )
      );
    }
  }, {
    key: 'render',
    value: function render() {
      var messageView = null;
      if (this.state.message) {
        return this.renderView();
      }

      return messageView;
    }
  }]);
  return APIResult;
}(_react2.default.Component);
}, 2320, null, "UI/ignite/DevScreens/APITestingScreen.js");
__d(/* UI/App/Components/FullButton.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/home/chris/Desktop/UI/App/Components/FullButton.js';

var _react = require(604    ); // 604 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(334           ); // 334 = react-native

var _FullButtonStyles = require(2322                       ); // 2322 = ./Styles/FullButtonStyles

var _FullButtonStyles2 = babelHelpers.interopRequireDefault(_FullButtonStyles);

var _ExamplesRegistry = require(1982                          ); // 1982 = ../Services/ExamplesRegistry

var _ExamplesRegistry2 = babelHelpers.interopRequireDefault(_ExamplesRegistry);

_ExamplesRegistry2.default.addComponentExample('Full Button', function () {
  return _react2.default.createElement(FullButton, {
    text: 'Hey there',
    onPress: function onPress() {
      return window.alert('Full Button Pressed!');
    },
    __source: {
      fileName: _jsxFileName,
      lineNumber: 13
    }
  });
});

var FullButton = function (_React$Component) {
  babelHelpers.inherits(FullButton, _React$Component);

  function FullButton() {
    babelHelpers.classCallCheck(this, FullButton);
    return babelHelpers.possibleConstructorReturn(this, (FullButton.__proto__ || Object.getPrototypeOf(FullButton)).apply(this, arguments));
  }

  babelHelpers.createClass(FullButton, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        _reactNative.TouchableOpacity,
        { style: [_FullButtonStyles2.default.button, this.props.styles], onPress: this.props.onPress, __source: {
            fileName: _jsxFileName,
            lineNumber: 28
          }
        },
        _react2.default.createElement(
          _reactNative.Text,
          { style: _FullButtonStyles2.default.buttonText, __source: {
              fileName: _jsxFileName,
              lineNumber: 29
            }
          },
          this.props.text && this.props.text.toUpperCase()
        )
      );
    }
  }]);
  return FullButton;
}(_react2.default.Component);

FullButton.propTypes = {
  text: _react.PropTypes.string,
  onPress: _react.PropTypes.func,
  styles: _react.PropTypes.object
};
exports.default = FullButton;
}, 2321, null, "UI/App/Components/FullButton.js");
__d(/* UI/App/Components/Styles/FullButtonStyles.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _reactNative = require(334           ); // 334 = react-native

var _Themes = require(1956           ); // 1956 = ../../Themes/

exports.default = _reactNative.StyleSheet.create({
  button: {
    marginVertical: 5,
    borderTopColor: _Themes.Colors.fire,
    borderBottomColor: _Themes.Colors.bloodOrange,
    borderTopWidth: 1,
    borderBottomWidth: 1,
    backgroundColor: _Themes.Colors.ember
  },
  buttonText: {
    margin: 18,
    textAlign: 'center',
    color: _Themes.Colors.snow,
    fontSize: _Themes.Fonts.size.medium,
    fontFamily: _Themes.Fonts.type.bold
  }
});
}, 2322, null, "UI/App/Components/Styles/FullButtonStyles.js");
__d(/* UI/App/Services/Api.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _apisauce = require(2324      ); // 2324 = apisauce

var _apisauce2 = babelHelpers.interopRequireDefault(_apisauce);

var create = function create() {
  var baseURL = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'https://api.github.com/';

  var api = _apisauce2.default.create({
    baseURL: baseURL,

    headers: {
      'Cache-Control': 'no-cache'
    },

    timeout: 10000
  });

  var getRoot = function getRoot() {
    return api.get('');
  };
  var getRate = function getRate() {
    return api.get('rate_limit');
  };
  var getUser = function getUser(username) {
    return api.get('search/users', { q: username });
  };

  return {
    getRoot: getRoot,
    getRate: getRate,
    getUser: getUser
  };
};

exports.default = {
  create: create
};
}, 2323, null, "UI/App/Services/Api.js");
__d(/* apisauce/dist/apisauce.js */function(global, require, module, exports) {'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault(ex) {
  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;
}

var _regeneratorRuntime = _interopDefault(require(2325                       )); // 2325 = babel-runtime/regenerator
var _extends = _interopDefault(require(2328                           )); // 2328 = babel-runtime/helpers/extends
var _asyncToGenerator = _interopDefault(require(2367                                    )); // 2367 = babel-runtime/helpers/asyncToGenerator
var _typeof = _interopDefault(require(2407                          )); // 2407 = babel-runtime/helpers/typeof
var axios = _interopDefault(require(2423   )); // 2423 = axios
var R = _interopDefault(require(1983   )); // 1983 = ramda
var RS = _interopDefault(require(2448        )); // 2448 = ramdasauce

var _this = undefined;

var isInvalidConfig = R.anyPass([R.isNil, R.isEmpty, R.complement(R.has('baseURL')), R.complement(R.propIs(String, 'baseURL')), R.propSatisfies(R.isEmpty, 'baseURL')]);

var isPromise = function isPromise(obj) {
  return !!obj && ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' || typeof obj === 'function') && typeof obj.then === 'function';
};

var DEFAULT_HEADERS = {
  'Accept': 'application/json',
  'Content-Type': 'application/json'
};

var DEFAULT_CONFIG = {
  timeout: 0
};

var NONE = null;
var CLIENT_ERROR = 'CLIENT_ERROR';
var SERVER_ERROR = 'SERVER_ERROR';
var TIMEOUT_ERROR = 'TIMEOUT_ERROR';
var CONNECTION_ERROR = 'CONNECTION_ERROR';
var NETWORK_ERROR = 'NETWORK_ERROR';
var UNKNOWN_ERROR = 'UNKNOWN_ERROR';
var CANCEL_ERROR = 'CANCEL_ERROR';

var TIMEOUT_ERROR_CODES = ['ECONNABORTED'];
var NODEJS_CONNECTION_ERROR_CODES = ['ENOTFOUND', 'ECONNREFUSED', 'ECONNRESET'];
var in200s = RS.isWithin(200, 299);
var in400s = RS.isWithin(400, 499);
var in500s = RS.isWithin(500, 599);

var create = function create(config) {
  if (isInvalidConfig(config)) throw new Error('config must have a baseURL');

  var headers = R.merge(DEFAULT_HEADERS, config.headers || {});
  var combinedConfig = R.merge(DEFAULT_CONFIG, R.dissoc('headers', config));

  var instance = axios.create(combinedConfig);

  var monitors = [];
  var addMonitor = function addMonitor(monitor) {
    monitors.push(monitor);
  };

  var requestTransforms = [];
  var asyncRequestTransforms = [];
  var responseTransforms = [];

  var addRequestTransform = function addRequestTransform(transform) {
    return requestTransforms.push(transform);
  };
  var addAsyncRequestTransform = function addAsyncRequestTransform(transform) {
    return asyncRequestTransforms.push(transform);
  };
  var addResponseTransform = function addResponseTransform(transform) {
    return responseTransforms.push(transform);
  };

  var setHeader = function setHeader(name, value) {
    headers[name] = value;
    return instance;
  };

  var setHeaders = function setHeaders(headers) {
    var keys = R.keys(headers);
    R.forEach(function (header) {
      return setHeader(header, headers[header]);
    }, keys);
    return instance;
  };

  var setBaseURL = function setBaseURL(newURL) {
    instance.defaults.baseURL = newURL;
    return instance;
  };

  var getBaseURL = function getBaseURL() {
    return instance.defaults.baseURL;
  };

  var doRequestWithoutBody = function doRequestWithoutBody(method, url) {
    var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
    var axiosConfig = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};

    return doRequest(R.merge({ url: url, params: params, method: method }, axiosConfig));
  };

  var doRequestWithBody = function doRequestWithBody(method, url) {
    var data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
    var axiosConfig = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};

    return doRequest(R.merge({ url: url, method: method, data: data }, axiosConfig));
  };

  var doRequest = function () {
    var _ref = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(axiosRequestConfig) {
      var index, transform, chain;
      return _regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              axiosRequestConfig.headers = _extends({}, headers, axiosRequestConfig.headers);

              if (requestTransforms.length > 0) {
                R.forEach(function (transform) {
                  return transform(axiosRequestConfig);
                }, requestTransforms);
              }

              if (!(asyncRequestTransforms.length > 0)) {
                _context.next = 16;
                break;
              }

              index = 0;

            case 4:
              if (!(index < asyncRequestTransforms.length)) {
                _context.next = 16;
                break;
              }

              transform = asyncRequestTransforms[index](axiosRequestConfig);

              if (!isPromise(transform)) {
                _context.next = 11;
                break;
              }

              _context.next = 9;
              return transform;

            case 9:
              _context.next = 13;
              break;

            case 11:
              _context.next = 13;
              return transform(axiosRequestConfig);

            case 13:
              index++;
              _context.next = 4;
              break;

            case 16:
              chain = R.pipe(R.partial(convertResponse, [RS.toNumber(new Date())]), runMonitors);
              return _context.abrupt('return', instance.request(axiosRequestConfig).then(chain).catch(chain));

            case 18:
            case 'end':
              return _context.stop();
          }
        }
      }, _callee, _this);
    }));

    return function doRequest(_x5) {
      return _ref.apply(this, arguments);
    };
  }();

  var runMonitors = function runMonitors(ourResponse) {
    monitors.forEach(function (monitor) {
      try {
        monitor(ourResponse);
      } catch (error) {}
    });
    return ourResponse;
  };

  var convertResponse = function convertResponse(startedAt, axiosResponse) {
    var end = RS.toNumber(new Date());
    var duration = end - startedAt;

    var isError = axiosResponse instanceof Error || axios.isCancel(axiosResponse);
    var response = isError ? axiosResponse.response : axiosResponse;
    var status = response && response.status || null;
    var problem = isError ? getProblemFromError(axiosResponse) : getProblemFromStatus(status);
    var ok = in200s(status);
    var config = axiosResponse.config || null;
    var headers = response && response.headers || null;
    var data = response && response.data || null;

    var transformedResponse = { duration: duration, problem: problem, ok: ok, status: status, headers: headers, config: config, data: data };
    if (responseTransforms.length > 0) {
      R.forEach(function (transform) {
        return transform(transformedResponse);
      }, responseTransforms);
    }

    return transformedResponse;
  };

  var getProblemFromError = function getProblemFromError(error) {
    if (error.message === 'Network Error') return NETWORK_ERROR;
    if (axios.isCancel(error)) return CANCEL_ERROR;

    return R.cond([[R.isNil, function () {
      return getProblemFromStatus(error.response.status);
    }], [R.contains(R.__, TIMEOUT_ERROR_CODES), R.always(TIMEOUT_ERROR)], [R.contains(R.__, NODEJS_CONNECTION_ERROR_CODES), R.always(CONNECTION_ERROR)], [R.T, R.always(UNKNOWN_ERROR)]])(error.code);
  };

  var getProblemFromStatus = function getProblemFromStatus(status) {
    return R.cond([[R.isNil, R.always(UNKNOWN_ERROR)], [in200s, R.always(NONE)], [in400s, R.always(CLIENT_ERROR)], [in500s, R.always(SERVER_ERROR)], [R.T, R.always(UNKNOWN_ERROR)]])(status);
  };

  var sauce = {
    axiosInstance: instance,
    monitors: monitors,
    addMonitor: addMonitor,
    requestTransforms: requestTransforms,
    asyncRequestTransforms: asyncRequestTransforms,
    responseTransforms: responseTransforms,
    addRequestTransform: addRequestTransform,
    addAsyncRequestTransform: addAsyncRequestTransform,
    addResponseTransform: addResponseTransform,
    setHeader: setHeader,
    setHeaders: setHeaders,
    headers: headers,
    setBaseURL: setBaseURL,
    getBaseURL: getBaseURL,
    get: R.partial(doRequestWithoutBody, ['get']),
    delete: R.partial(doRequestWithoutBody, ['delete']),
    head: R.partial(doRequestWithoutBody, ['head']),
    post: R.partial(doRequestWithBody, ['post']),
    put: R.partial(doRequestWithBody, ['put']),
    patch: R.partial(doRequestWithBody, ['patch']),
    link: R.partial(doRequestWithoutBody, ['link']),
    unlink: R.partial(doRequestWithoutBody, ['unlink'])
  };

  return sauce;
};

var apisauce = {
  DEFAULT_HEADERS: DEFAULT_HEADERS,
  NONE: NONE,
  CLIENT_ERROR: CLIENT_ERROR,
  SERVER_ERROR: SERVER_ERROR,
  TIMEOUT_ERROR: TIMEOUT_ERROR,
  CONNECTION_ERROR: CONNECTION_ERROR,
  NETWORK_ERROR: NETWORK_ERROR,
  UNKNOWN_ERROR: UNKNOWN_ERROR,
  create: create
};

exports.DEFAULT_HEADERS = DEFAULT_HEADERS;
exports.NONE = NONE;
exports.CLIENT_ERROR = CLIENT_ERROR;
exports.SERVER_ERROR = SERVER_ERROR;
exports.TIMEOUT_ERROR = TIMEOUT_ERROR;
exports.CONNECTION_ERROR = CONNECTION_ERROR;
exports.NETWORK_ERROR = NETWORK_ERROR;
exports.UNKNOWN_ERROR = UNKNOWN_ERROR;
exports.CANCEL_ERROR = CANCEL_ERROR;
exports.create = create;
exports['default'] = apisauce;
}, 2324, null, "apisauce/dist/apisauce.js");
__d(/* babel-runtime/regenerator/index.js */function(global, require, module, exports) {module.exports = require(2326                 ); // 2326 = regenerator-runtime
}, 2325, null, "babel-runtime/regenerator/index.js");
__d(/* regenerator-runtime/runtime-module.js */function(global, require, module, exports) {
var g = function () {
  return this;
}() || Function("return this")();

var hadRuntime = g.regeneratorRuntime && Object.getOwnPropertyNames(g).indexOf("regeneratorRuntime") >= 0;

var oldRuntime = hadRuntime && g.regeneratorRuntime;

g.regeneratorRuntime = undefined;

module.exports = require(2327       ); // 2327 = ./runtime

if (hadRuntime) {
  g.regeneratorRuntime = oldRuntime;
} else {
  try {
    delete g.regeneratorRuntime;
  } catch (e) {
    g.regeneratorRuntime = undefined;
  }
}
}, 2326, null, "regenerator-runtime/runtime-module.js");
__d(/* regenerator-runtime/runtime.js */function(global, require, module, exports) {

!function (global) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined;
  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  var inModule = typeof module === "object";
  var runtime = global.regeneratorRuntime;
  if (runtime) {
    if (inModule) {
      module.exports = runtime;
    }

    return;
  }

  runtime = global.regeneratorRuntime = inModule ? module.exports : {};

  function wrap(innerFn, outerFn, self, tryLocsList) {
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []);

    generator._invoke = makeInvokeMethod(innerFn, self, context);

    return generator;
  }
  runtime.wrap = wrap;

  function tryCatch(fn, obj, arg) {
    try {
      return { type: "normal", arg: fn.call(obj, arg) };
    } catch (err) {
      return { type: "throw", arg: err };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";

  var ContinueSentinel = {};

  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}

  var IteratorPrototype = {};
  IteratorPrototype[iteratorSymbol] = function () {
    return this;
  };

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
  GeneratorFunctionPrototype.constructor = GeneratorFunction;
  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = "GeneratorFunction";

  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function (method) {
      prototype[method] = function (arg) {
        return this._invoke(method, arg);
      };
    });
  }

  runtime.isGeneratorFunction = function (genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor ? ctor === GeneratorFunction || (ctor.displayName || ctor.name) === "GeneratorFunction" : false;
  };

  runtime.mark = function (genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      if (!(toStringTagSymbol in genFun)) {
        genFun[toStringTagSymbol] = "GeneratorFunction";
      }
    }
    genFun.prototype = Object.create(Gp);
    return genFun;
  };

  runtime.awrap = function (arg) {
    return { __await: arg };
  };

  function AsyncIterator(generator) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;
        if (value && typeof value === "object" && hasOwn.call(value, "__await")) {
          return Promise.resolve(value.__await).then(function (value) {
            invoke("next", value, resolve, reject);
          }, function (err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return Promise.resolve(value).then(function (unwrapped) {
          result.value = unwrapped;
          resolve(result);
        }, reject);
      }
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new Promise(function (resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
    }

    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);
  AsyncIterator.prototype[asyncIteratorSymbol] = function () {
    return this;
  };
  runtime.AsyncIterator = AsyncIterator;

  runtime.async = function (innerFn, outerFn, self, tryLocsList) {
    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList));

    return runtime.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {
      return result.done ? result.value : iter.next();
    });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;

    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }

        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          context.sent = context._sent = context.arg;
        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);
        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;

        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          state = context.done ? GenStateCompleted : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };
        } else if (record.type === "throw") {
          state = GenStateCompleted;

          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  }

  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];
    if (method === undefined) {
      context.delegate = null;

      if (context.method === "throw") {
        if (delegate.iterator.return) {
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError("The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (!info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      context[delegate.resultName] = info.value;

      context.next = delegate.nextLoc;

      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }
    } else {
      return info;
    }

    context.delegate = null;
    return ContinueSentinel;
  }

  defineIteratorMethods(Gp);

  Gp[toStringTagSymbol] = "Generator";

  Gp[iteratorSymbol] = function () {
    return this;
  };

  Gp.toString = function () {
    return "[object Generator]";
  };

  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  runtime.keys = function (object) {
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();

    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }

      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1,
            next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;

          return next;
        };

        return next.next = next;
      }
    }

    return { next: doneResult };
  }
  runtime.values = values;

  function doneResult() {
    return { value: undefined, done: true };
  }

  Context.prototype = {
    constructor: Context,

    reset: function reset(skipTempReset) {
      this.prev = 0;
      this.next = 0;

      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;

      this.method = "next";
      this.arg = undefined;

      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          if (name.charAt(0) === "t" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },

    stop: function stop() {
      this.done = true;

      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },

    dispatchException: function dispatchException(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          context.method = "next";
          context.arg = undefined;
        }

        return !!caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }
          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }
          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }
          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },

    abrupt: function abrupt(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry && (type === "break" || type === "continue") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },

    complete: function complete(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" || record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },

    finish: function finish(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },

    "catch": function _catch(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }

      throw new Error("illegal catch attempt");
    },

    delegateYield: function delegateYield(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  };
}(function () {
  return this;
}() || Function("return this")());
}, 2327, null, "regenerator-runtime/runtime.js");
__d(/* babel-runtime/helpers/extends.js */function(global, require, module, exports) {"use strict";

exports.__esModule = true;

var _assign = require(2329                      ); // 2329 = ../core-js/object/assign

var _assign2 = _interopRequireDefault(_assign);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

exports.default = _assign2.default || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};
}, 2328, null, "babel-runtime/helpers/extends.js");
__d(/* babel-runtime/core-js/object/assign.js */function(global, require, module, exports) {module.exports = { "default": require(2330                              ), __esModule: true }; // 2330 = core-js/library/fn/object/assign
}, 2329, null, "babel-runtime/core-js/object/assign.js");
__d(/* core-js/library/fn/object/assign.js */function(global, require, module, exports) {require(2331                             ); // 2331 = ../../modules/es6.object.assign
module.exports = require(2334                 ).Object.assign; // 2334 = ../../modules/_core
}, 2330, null, "core-js/library/fn/object/assign.js");
__d(/* core-js/library/modules/es6.object.assign.js */function(global, require, module, exports) {
var $export = require(2332       ); // 2332 = ./_export

$export($export.S + $export.F, 'Object', { assign: require(2348              ) }); // 2348 = ./_object-assign
}, 2331, null, "core-js/library/modules/es6.object.assign.js");
__d(/* core-js/library/modules/_export.js */function(global, require, module, exports) {var global = require(2333       ); // 2333 = ./_global
var core = require(2334     ); // 2334 = ./_core
var ctx = require(2335    ); // 2335 = ./_ctx
var hide = require(2337     ); // 2337 = ./_hide
var has = require(2347    ); // 2347 = ./_has
var PROTOTYPE = 'prototype';

var $export = function $export(type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var IS_WRAP = type & $export.W;
  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
  var expProto = exports[PROTOTYPE];
  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];
  var key, own, out;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    own = !IS_FORCED && target && target[key] !== undefined;
    if (own && has(exports, key)) continue;

    out = own ? target[key] : source[key];

    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key] : IS_BIND && own ? ctx(out, global) : IS_WRAP && target[key] == out ? function (C) {
      var F = function F(a, b, c) {
        if (this instanceof C) {
          switch (arguments.length) {
            case 0:
              return new C();
            case 1:
              return new C(a);
            case 2:
              return new C(a, b);
          }return new C(a, b, c);
        }return C.apply(this, arguments);
      };
      F[PROTOTYPE] = C[PROTOTYPE];
      return F;
    }(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;

    if (IS_PROTO) {
      (exports.virtual || (exports.virtual = {}))[key] = out;

      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);
    }
  }
};

$export.F = 1;
$export.G = 2;
$export.S = 4;
$export.P = 8;
$export.B = 16;
$export.W = 32;
$export.U = 64;
$export.R = 128;
module.exports = $export;
}, 2332, null, "core-js/library/modules/_export.js");
__d(/* core-js/library/modules/_global.js */function(global, require, module, exports) {
var global = module.exports = typeof window != 'undefined' && window.Math == Math ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();
if (typeof __g == 'number') __g = global;
}, 2333, null, "core-js/library/modules/_global.js");
__d(/* core-js/library/modules/_core.js */function(global, require, module, exports) {var core = module.exports = { version: '2.5.6' };
if (typeof __e == 'number') __e = core;
}, 2334, null, "core-js/library/modules/_core.js");
__d(/* core-js/library/modules/_ctx.js */function(global, require, module, exports) {
var aFunction = require(2336           ); // 2336 = ./_a-function
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1:
      return function (a) {
        return fn.call(that, a);
      };
    case 2:
      return function (a, b) {
        return fn.call(that, a, b);
      };
    case 3:
      return function (a, b, c) {
        return fn.call(that, a, b, c);
      };
  }
  return function () {
    return fn.apply(that, arguments);
  };
};
}, 2335, null, "core-js/library/modules/_ctx.js");
__d(/* core-js/library/modules/_a-function.js */function(global, require, module, exports) {module.exports = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};
}, 2336, null, "core-js/library/modules/_a-function.js");
__d(/* core-js/library/modules/_hide.js */function(global, require, module, exports) {var dP = require(2338          ); // 2338 = ./_object-dp
var createDesc = require(2346              ); // 2346 = ./_property-desc
module.exports = require(2342            ) ? function (object, key, value) { // 2342 = ./_descriptors
  return dP.f(object, key, createDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};
}, 2337, null, "core-js/library/modules/_hide.js");
__d(/* core-js/library/modules/_object-dp.js */function(global, require, module, exports) {var anObject = require(2339          ); // 2339 = ./_an-object
var IE8_DOM_DEFINE = require(2341               ); // 2341 = ./_ie8-dom-define
var toPrimitive = require(2345             ); // 2345 = ./_to-primitive
var dP = Object.defineProperty;

exports.f = require(2342            ) ? Object.defineProperty : function defineProperty(O, P, Attributes) { // 2342 = ./_descriptors
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return dP(O, P, Attributes);
  } catch (e) {}
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};
}, 2338, null, "core-js/library/modules/_object-dp.js");
__d(/* core-js/library/modules/_an-object.js */function(global, require, module, exports) {var isObject = require(2340          ); // 2340 = ./_is-object
module.exports = function (it) {
  if (!isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};
}, 2339, null, "core-js/library/modules/_an-object.js");
__d(/* core-js/library/modules/_is-object.js */function(global, require, module, exports) {module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};
}, 2340, null, "core-js/library/modules/_is-object.js");
__d(/* core-js/library/modules/_ie8-dom-define.js */function(global, require, module, exports) {module.exports = !require(2342            ) && !require(2343      )(function () { // 2343 = ./_fails // 2342 = ./_descriptors
  return Object.defineProperty(require(2344           )('div'), 'a', { get: function get() { // 2344 = ./_dom-create
      return 7;
    } }).a != 7;
});
}, 2341, null, "core-js/library/modules/_ie8-dom-define.js");
__d(/* core-js/library/modules/_descriptors.js */function(global, require, module, exports) {
module.exports = !require(2343      )(function () { // 2343 = ./_fails
  return Object.defineProperty({}, 'a', { get: function get() {
      return 7;
    } }).a != 7;
});
}, 2342, null, "core-js/library/modules/_descriptors.js");
__d(/* core-js/library/modules/_fails.js */function(global, require, module, exports) {module.exports = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};
}, 2343, null, "core-js/library/modules/_fails.js");
__d(/* core-js/library/modules/_dom-create.js */function(global, require, module, exports) {var isObject = require(2340          ); // 2340 = ./_is-object
var document = require(2333       ).document; // 2333 = ./_global

var is = isObject(document) && isObject(document.createElement);
module.exports = function (it) {
  return is ? document.createElement(it) : {};
};
}, 2344, null, "core-js/library/modules/_dom-create.js");
__d(/* core-js/library/modules/_to-primitive.js */function(global, require, module, exports) {
var isObject = require(2340          ); // 2340 = ./_is-object

module.exports = function (it, S) {
  if (!isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};
}, 2345, null, "core-js/library/modules/_to-primitive.js");
__d(/* core-js/library/modules/_property-desc.js */function(global, require, module, exports) {module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};
}, 2346, null, "core-js/library/modules/_property-desc.js");
__d(/* core-js/library/modules/_has.js */function(global, require, module, exports) {var hasOwnProperty = {}.hasOwnProperty;
module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};
}, 2347, null, "core-js/library/modules/_has.js");
__d(/* core-js/library/modules/_object-assign.js */function(global, require, module, exports) {'use strict';

var getKeys = require(2349            ); // 2349 = ./_object-keys
var gOPS = require(2364            ); // 2364 = ./_object-gops
var pIE = require(2365           ); // 2365 = ./_object-pie
var toObject = require(2366          ); // 2366 = ./_to-object
var IObject = require(2352        ); // 2352 = ./_iobject
var $assign = Object.assign;

module.exports = !$assign || require(2343      )(function () { // 2343 = ./_fails
  var A = {};
  var B = {};

  var S = Symbol();
  var K = 'abcdefghijklmnopqrst';
  A[S] = 7;
  K.split('').forEach(function (k) {
    B[k] = k;
  });
  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
}) ? function assign(target, source) {
  var T = toObject(target);
  var aLen = arguments.length;
  var index = 1;
  var getSymbols = gOPS.f;
  var isEnum = pIE.f;
  while (aLen > index) {
    var S = IObject(arguments[index++]);
    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) {
      if (isEnum.call(S, key = keys[j++])) T[key] = S[key];
    }
  }return T;
} : $assign;
}, 2348, null, "core-js/library/modules/_object-assign.js");
__d(/* core-js/library/modules/_object-keys.js */function(global, require, module, exports) {
var $keys = require(2350                     ); // 2350 = ./_object-keys-internal
var enumBugKeys = require(2363              ); // 2363 = ./_enum-bug-keys

module.exports = Object.keys || function keys(O) {
  return $keys(O, enumBugKeys);
};
}, 2349, null, "core-js/library/modules/_object-keys.js");
__d(/* core-js/library/modules/_object-keys-internal.js */function(global, require, module, exports) {var has = require(2347    ); // 2347 = ./_has
var toIObject = require(2351           ); // 2351 = ./_to-iobject
var arrayIndexOf = require(2355               )(false); // 2355 = ./_array-includes
var IE_PROTO = require(2359           )('IE_PROTO'); // 2359 = ./_shared-key

module.exports = function (object, names) {
  var O = toIObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) {
    if (key != IE_PROTO) has(O, key) && result.push(key);
  }
  while (names.length > i) {
    if (has(O, key = names[i++])) {
      ~arrayIndexOf(result, key) || result.push(key);
    }
  }return result;
};
}, 2350, null, "core-js/library/modules/_object-keys-internal.js");
__d(/* core-js/library/modules/_to-iobject.js */function(global, require, module, exports) {
var IObject = require(2352        ); // 2352 = ./_iobject
var defined = require(2354        ); // 2354 = ./_defined
module.exports = function (it) {
  return IObject(defined(it));
};
}, 2351, null, "core-js/library/modules/_to-iobject.js");
__d(/* core-js/library/modules/_iobject.js */function(global, require, module, exports) {
var cof = require(2353    ); // 2353 = ./_cof

module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return cof(it) == 'String' ? it.split('') : Object(it);
};
}, 2352, null, "core-js/library/modules/_iobject.js");
__d(/* core-js/library/modules/_cof.js */function(global, require, module, exports) {var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};
}, 2353, null, "core-js/library/modules/_cof.js");
__d(/* core-js/library/modules/_defined.js */function(global, require, module, exports) {
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};
}, 2354, null, "core-js/library/modules/_defined.js");
__d(/* core-js/library/modules/_array-includes.js */function(global, require, module, exports) {
var toIObject = require(2351           ); // 2351 = ./_to-iobject
var toLength = require(2356          ); // 2356 = ./_to-length
var toAbsoluteIndex = require(2358                  ); // 2358 = ./_to-absolute-index
module.exports = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;

    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];

      if (value != value) return true;
    } else for (; length > index; index++) {
      if (IS_INCLUDES || index in O) {
        if (O[index] === el) return IS_INCLUDES || index || 0;
      }
    }return !IS_INCLUDES && -1;
  };
};
}, 2355, null, "core-js/library/modules/_array-includes.js");
__d(/* core-js/library/modules/_to-length.js */function(global, require, module, exports) {
var toInteger = require(2357           ); // 2357 = ./_to-integer
var min = Math.min;
module.exports = function (it) {
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0;
};
}, 2356, null, "core-js/library/modules/_to-length.js");
__d(/* core-js/library/modules/_to-integer.js */function(global, require, module, exports) {
var ceil = Math.ceil;
var floor = Math.floor;
module.exports = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};
}, 2357, null, "core-js/library/modules/_to-integer.js");
__d(/* core-js/library/modules/_to-absolute-index.js */function(global, require, module, exports) {var toInteger = require(2357           ); // 2357 = ./_to-integer
var max = Math.max;
var min = Math.min;
module.exports = function (index, length) {
  index = toInteger(index);
  return index < 0 ? max(index + length, 0) : min(index, length);
};
}, 2358, null, "core-js/library/modules/_to-absolute-index.js");
__d(/* core-js/library/modules/_shared-key.js */function(global, require, module, exports) {var shared = require(2360       )('keys'); // 2360 = ./_shared
var uid = require(2362    ); // 2362 = ./_uid
module.exports = function (key) {
  return shared[key] || (shared[key] = uid(key));
};
}, 2359, null, "core-js/library/modules/_shared-key.js");
__d(/* core-js/library/modules/_shared.js */function(global, require, module, exports) {var core = require(2334     ); // 2334 = ./_core
var global = require(2333       ); // 2333 = ./_global
var SHARED = '__core-js_shared__';
var store = global[SHARED] || (global[SHARED] = {});

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: core.version,
  mode: require(2361        ) ? 'pure' : 'global', // 2361 = ./_library
  copyright: '© 2018 Denis Pushkarev (zloirock.ru)'
});
}, 2360, null, "core-js/library/modules/_shared.js");
__d(/* core-js/library/modules/_library.js */function(global, require, module, exports) {module.exports = true;
}, 2361, null, "core-js/library/modules/_library.js");
__d(/* core-js/library/modules/_uid.js */function(global, require, module, exports) {var id = 0;
var px = Math.random();
module.exports = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};
}, 2362, null, "core-js/library/modules/_uid.js");
__d(/* core-js/library/modules/_enum-bug-keys.js */function(global, require, module, exports) {
module.exports = 'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'.split(',');
}, 2363, null, "core-js/library/modules/_enum-bug-keys.js");
__d(/* core-js/library/modules/_object-gops.js */function(global, require, module, exports) {exports.f = Object.getOwnPropertySymbols;
}, 2364, null, "core-js/library/modules/_object-gops.js");
__d(/* core-js/library/modules/_object-pie.js */function(global, require, module, exports) {exports.f = {}.propertyIsEnumerable;
}, 2365, null, "core-js/library/modules/_object-pie.js");
__d(/* core-js/library/modules/_to-object.js */function(global, require, module, exports) {
var defined = require(2354        ); // 2354 = ./_defined
module.exports = function (it) {
  return Object(defined(it));
};
}, 2366, null, "core-js/library/modules/_to-object.js");
__d(/* babel-runtime/helpers/asyncToGenerator.js */function(global, require, module, exports) {"use strict";

exports.__esModule = true;

var _promise = require(2368                ); // 2368 = ../core-js/promise

var _promise2 = _interopRequireDefault(_promise);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

exports.default = function (fn) {
  return function () {
    var gen = fn.apply(this, arguments);
    return new _promise2.default(function (resolve, reject) {
      function step(key, arg) {
        try {
          var info = gen[key](arg);
          var value = info.value;
        } catch (error) {
          reject(error);
          return;
        }

        if (info.done) {
          resolve(value);
        } else {
          return _promise2.default.resolve(value).then(function (value) {
            step("next", value);
          }, function (err) {
            step("throw", err);
          });
        }
      }

      return step("next");
    });
  };
};
}, 2367, null, "babel-runtime/helpers/asyncToGenerator.js");
__d(/* babel-runtime/core-js/promise.js */function(global, require, module, exports) {module.exports = { "default": require(2369                        ), __esModule: true }; // 2369 = core-js/library/fn/promise
}, 2368, null, "babel-runtime/core-js/promise.js");
__d(/* core-js/library/fn/promise.js */function(global, require, module, exports) {require(2370                             ); // 2370 = ../modules/es6.object.to-string
require(2371                            ); // 2371 = ../modules/es6.string.iterator
require(2383                         ); // 2383 = ../modules/web.dom.iterable
require(2387                    ); // 2387 = ../modules/es6.promise
require(2405                            ); // 2405 = ../modules/es7.promise.finally
require(2406                        ); // 2406 = ../modules/es7.promise.try
module.exports = require(2334              ).Promise; // 2334 = ../modules/_core
}, 2369, null, "core-js/library/fn/promise.js");
__d(/* core-js/library/modules/es6.object.to-string.js */function(global, require, module, exports) {
}, 2370, null, "core-js/library/modules/es6.object.to-string.js");
__d(/* core-js/library/modules/es6.string.iterator.js */function(global, require, module, exports) {'use strict';

var $at = require(2372          )(true); // 2372 = ./_string-at

require(2373            )(String, 'String', function (iterated) { // 2373 = ./_iter-define
  this._t = String(iterated);
  this._i = 0;
}, function () {
  var O = this._t;
  var index = this._i;
  var point;
  if (index >= O.length) return { value: undefined, done: true };
  point = $at(O, index);
  this._i += point.length;
  return { value: point, done: false };
});
}, 2371, null, "core-js/library/modules/es6.string.iterator.js");
__d(/* core-js/library/modules/_string-at.js */function(global, require, module, exports) {var toInteger = require(2357           ); // 2357 = ./_to-integer
var defined = require(2354        ); // 2354 = ./_defined

module.exports = function (TO_STRING) {
  return function (that, pos) {
    var s = String(defined(that));
    var i = toInteger(pos);
    var l = s.length;
    var a, b;
    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff ? TO_STRING ? s.charAt(i) : a : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};
}, 2372, null, "core-js/library/modules/_string-at.js");
__d(/* core-js/library/modules/_iter-define.js */function(global, require, module, exports) {'use strict';

var LIBRARY = require(2361        ); // 2361 = ./_library
var $export = require(2332       ); // 2332 = ./_export
var redefine = require(2374         ); // 2374 = ./_redefine
var hide = require(2337     ); // 2337 = ./_hide
var Iterators = require(2375          ); // 2375 = ./_iterators
var $iterCreate = require(2376            ); // 2376 = ./_iter-create
var setToStringTag = require(2380                  ); // 2380 = ./_set-to-string-tag
var getPrototypeOf = require(2382           ); // 2382 = ./_object-gpo
var ITERATOR = require(2381    )('iterator'); // 2381 = ./_wks
var BUGGY = !([].keys && 'next' in [].keys());
var FF_ITERATOR = '@@iterator';
var KEYS = 'keys';
var VALUES = 'values';

var returnThis = function returnThis() {
  return this;
};

module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
  $iterCreate(Constructor, NAME, next);
  var getMethod = function getMethod(kind) {
    if (!BUGGY && kind in proto) return proto[kind];
    switch (kind) {
      case KEYS:
        return function keys() {
          return new Constructor(this, kind);
        };
      case VALUES:
        return function values() {
          return new Constructor(this, kind);
        };
    }return function entries() {
      return new Constructor(this, kind);
    };
  };
  var TAG = NAME + ' Iterator';
  var DEF_VALUES = DEFAULT == VALUES;
  var VALUES_BUG = false;
  var proto = Base.prototype;
  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
  var $default = $native || getMethod(DEFAULT);
  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
  var methods, key, IteratorPrototype;

  if ($anyNative) {
    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
      setToStringTag(IteratorPrototype, TAG, true);

      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);
    }
  }

  if (DEF_VALUES && $native && $native.name !== VALUES) {
    VALUES_BUG = true;
    $default = function values() {
      return $native.call(this);
    };
  }

  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
    hide(proto, ITERATOR, $default);
  }

  Iterators[NAME] = $default;
  Iterators[TAG] = returnThis;
  if (DEFAULT) {
    methods = {
      values: DEF_VALUES ? $default : getMethod(VALUES),
      keys: IS_SET ? $default : getMethod(KEYS),
      entries: $entries
    };
    if (FORCED) for (key in methods) {
      if (!(key in proto)) redefine(proto, key, methods[key]);
    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};
}, 2373, null, "core-js/library/modules/_iter-define.js");
__d(/* core-js/library/modules/_redefine.js */function(global, require, module, exports) {module.exports = require(2337     ); // 2337 = ./_hide
}, 2374, null, "core-js/library/modules/_redefine.js");
__d(/* core-js/library/modules/_iterators.js */function(global, require, module, exports) {module.exports = {};
}, 2375, null, "core-js/library/modules/_iterators.js");
__d(/* core-js/library/modules/_iter-create.js */function(global, require, module, exports) {'use strict';

var create = require(2377              ); // 2377 = ./_object-create
var descriptor = require(2346              ); // 2346 = ./_property-desc
var setToStringTag = require(2380                  ); // 2380 = ./_set-to-string-tag
var IteratorPrototype = {};

require(2337     )(IteratorPrototype, require(2381    )('iterator'), function () { // 2381 = ./_wks // 2337 = ./_hide
  return this;
});

module.exports = function (Constructor, NAME, next) {
  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
  setToStringTag(Constructor, NAME + ' Iterator');
};
}, 2376, null, "core-js/library/modules/_iter-create.js");
__d(/* core-js/library/modules/_object-create.js */function(global, require, module, exports) {
var anObject = require(2339          ); // 2339 = ./_an-object
var dPs = require(2378           ); // 2378 = ./_object-dps
var enumBugKeys = require(2363              ); // 2363 = ./_enum-bug-keys
var IE_PROTO = require(2359           )('IE_PROTO'); // 2359 = ./_shared-key
var Empty = function Empty() {};
var PROTOTYPE = 'prototype';

var _createDict = function createDict() {
  var iframe = require(2344           )('iframe'); // 2344 = ./_dom-create
  var i = enumBugKeys.length;
  var lt = '<';
  var gt = '>';
  var iframeDocument;
  iframe.style.display = 'none';
  require(2379     ).appendChild(iframe); // 2379 = ./_html
  iframe.src = 'javascript:';
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  _createDict = iframeDocument.F;
  while (i--) {
    delete _createDict[PROTOTYPE][enumBugKeys[i]];
  }return _createDict();
};

module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE] = anObject(O);
    result = new Empty();
    Empty[PROTOTYPE] = null;

    result[IE_PROTO] = O;
  } else result = _createDict();
  return Properties === undefined ? result : dPs(result, Properties);
};
}, 2377, null, "core-js/library/modules/_object-create.js");
__d(/* core-js/library/modules/_object-dps.js */function(global, require, module, exports) {var dP = require(2338          ); // 2338 = ./_object-dp
var anObject = require(2339          ); // 2339 = ./_an-object
var getKeys = require(2349            ); // 2349 = ./_object-keys

module.exports = require(2342            ) ? Object.defineProperties : function defineProperties(O, Properties) { // 2342 = ./_descriptors
  anObject(O);
  var keys = getKeys(Properties);
  var length = keys.length;
  var i = 0;
  var P;
  while (length > i) {
    dP.f(O, P = keys[i++], Properties[P]);
  }return O;
};
}, 2378, null, "core-js/library/modules/_object-dps.js");
__d(/* core-js/library/modules/_html.js */function(global, require, module, exports) {var document = require(2333       ).document; // 2333 = ./_global
module.exports = document && document.documentElement;
}, 2379, null, "core-js/library/modules/_html.js");
__d(/* core-js/library/modules/_set-to-string-tag.js */function(global, require, module, exports) {var def = require(2338          ).f; // 2338 = ./_object-dp
var has = require(2347    ); // 2347 = ./_has
var TAG = require(2381    )('toStringTag'); // 2381 = ./_wks

module.exports = function (it, tag, stat) {
  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
};
}, 2380, null, "core-js/library/modules/_set-to-string-tag.js");
__d(/* core-js/library/modules/_wks.js */function(global, require, module, exports) {var store = require(2360       )('wks'); // 2360 = ./_shared
var uid = require(2362    ); // 2362 = ./_uid
var Symbol = require(2333       ).Symbol; // 2333 = ./_global
var USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function (name) {
  return store[name] || (store[name] = USE_SYMBOL && (typeof Symbol === 'function' ? Symbol[name] : '@@name') || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
};

$exports.store = store;
}, 2381, null, "core-js/library/modules/_wks.js");
__d(/* core-js/library/modules/_object-gpo.js */function(global, require, module, exports) {
var has = require(2347    ); // 2347 = ./_has
var toObject = require(2366          ); // 2366 = ./_to-object
var IE_PROTO = require(2359           )('IE_PROTO'); // 2359 = ./_shared-key
var ObjectProto = Object.prototype;

module.exports = Object.getPrototypeOf || function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  }return O instanceof Object ? ObjectProto : null;
};
}, 2382, null, "core-js/library/modules/_object-gpo.js");
__d(/* core-js/library/modules/web.dom.iterable.js */function(global, require, module, exports) {require(2384                  ); // 2384 = ./es6.array.iterator
var global = require(2333       ); // 2333 = ./_global
var hide = require(2337     ); // 2337 = ./_hide
var Iterators = require(2375          ); // 2375 = ./_iterators
var TO_STRING_TAG = require(2381    )('toStringTag'); // 2381 = ./_wks

var DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' + 'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' + 'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' + 'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' + 'TextTrackList,TouchList').split(',');

for (var i = 0; i < DOMIterables.length; i++) {
  var NAME = DOMIterables[i];
  var Collection = global[NAME];
  var proto = Collection && Collection.prototype;
  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
  Iterators[NAME] = Iterators.Array;
}
}, 2383, null, "core-js/library/modules/web.dom.iterable.js");
__d(/* core-js/library/modules/es6.array.iterator.js */function(global, require, module, exports) {'use strict';

var addToUnscopables = require(2385                   ); // 2385 = ./_add-to-unscopables
var step = require(2386          ); // 2386 = ./_iter-step
var Iterators = require(2375          ); // 2375 = ./_iterators
var toIObject = require(2351           ); // 2351 = ./_to-iobject

module.exports = require(2373            )(Array, 'Array', function (iterated, kind) { // 2373 = ./_iter-define
  this._t = toIObject(iterated);
  this._i = 0;
  this._k = kind;
}, function () {
  var O = this._t;
  var kind = this._k;
  var index = this._i++;
  if (!O || index >= O.length) {
    this._t = undefined;
    return step(1);
  }
  if (kind == 'keys') return step(0, index);
  if (kind == 'values') return step(0, O[index]);
  return step(0, [index, O[index]]);
}, 'values');

Iterators.Arguments = Iterators.Array;

addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');
}, 2384, null, "core-js/library/modules/es6.array.iterator.js");
__d(/* core-js/library/modules/_add-to-unscopables.js */function(global, require, module, exports) {module.exports = function () {};
}, 2385, null, "core-js/library/modules/_add-to-unscopables.js");
__d(/* core-js/library/modules/_iter-step.js */function(global, require, module, exports) {module.exports = function (done, value) {
  return { value: value, done: !!done };
};
}, 2386, null, "core-js/library/modules/_iter-step.js");
__d(/* core-js/library/modules/es6.promise.js */function(global, require, module, exports) {'use strict';

var LIBRARY = require(2361        ); // 2361 = ./_library
var global = require(2333       ); // 2333 = ./_global
var ctx = require(2335    ); // 2335 = ./_ctx
var classof = require(2388        ); // 2388 = ./_classof
var $export = require(2332       ); // 2332 = ./_export
var isObject = require(2340          ); // 2340 = ./_is-object
var aFunction = require(2336           ); // 2336 = ./_a-function
var anInstance = require(2389            ); // 2389 = ./_an-instance
var forOf = require(2390       ); // 2390 = ./_for-of
var speciesConstructor = require(2394                    ); // 2394 = ./_species-constructor
var task = require(2395     ).set; // 2395 = ./_task
var microtask = require(2397          )(); // 2397 = ./_microtask
var newPromiseCapabilityModule = require(2398                       ); // 2398 = ./_new-promise-capability
var perform = require(2399        ); // 2399 = ./_perform
var userAgent = require(2400           ); // 2400 = ./_user-agent
var promiseResolve = require(2401                ); // 2401 = ./_promise-resolve
var PROMISE = 'Promise';
var TypeError = global.TypeError;
var process = global.process;
var versions = process && process.versions;
var v8 = versions && versions.v8 || '';
var $Promise = global[PROMISE];
var isNode = classof(process) == 'process';
var empty = function empty() {};
var Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;
var newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;

var USE_NATIVE = !!function () {
  try {
    var promise = $Promise.resolve(1);
    var FakePromise = (promise.constructor = {})[require(2381    )('species')] = function (exec) { // 2381 = ./_wks
      exec(empty, empty);
    };

    return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise && v8.indexOf('6.6') !== 0 && userAgent.indexOf('Chrome/66') === -1;
  } catch (e) {}
}();

var isThenable = function isThenable(it) {
  var then;
  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
};
var notify = function notify(promise, isReject) {
  if (promise._n) return;
  promise._n = true;
  var chain = promise._c;
  microtask(function () {
    var value = promise._v;
    var ok = promise._s == 1;
    var i = 0;
    var run = function run(reaction) {
      var handler = ok ? reaction.ok : reaction.fail;
      var resolve = reaction.resolve;
      var reject = reaction.reject;
      var domain = reaction.domain;
      var result, then, exited;
      try {
        if (handler) {
          if (!ok) {
            if (promise._h == 2) onHandleUnhandled(promise);
            promise._h = 1;
          }
          if (handler === true) result = value;else {
            if (domain) domain.enter();
            result = handler(value);
            if (domain) {
              domain.exit();
              exited = true;
            }
          }
          if (result === reaction.promise) {
            reject(TypeError('Promise-chain cycle'));
          } else if (then = isThenable(result)) {
            then.call(result, resolve, reject);
          } else resolve(result);
        } else reject(value);
      } catch (e) {
        if (domain && !exited) domain.exit();
        reject(e);
      }
    };
    while (chain.length > i) {
      run(chain[i++]);
    }
    promise._c = [];
    promise._n = false;
    if (isReject && !promise._h) onUnhandled(promise);
  });
};
var onUnhandled = function onUnhandled(promise) {
  task.call(global, function () {
    var value = promise._v;
    var unhandled = isUnhandled(promise);
    var result, handler, console;
    if (unhandled) {
      result = perform(function () {
        if (isNode) {
          process.emit('unhandledRejection', value, promise);
        } else if (handler = global.onunhandledrejection) {
          handler({ promise: promise, reason: value });
        } else if ((console = global.console) && console.error) {
          console.error('Unhandled promise rejection', value);
        }
      });

      promise._h = isNode || isUnhandled(promise) ? 2 : 1;
    }promise._a = undefined;
    if (unhandled && result.e) throw result.v;
  });
};
var isUnhandled = function isUnhandled(promise) {
  return promise._h !== 1 && (promise._a || promise._c).length === 0;
};
var onHandleUnhandled = function onHandleUnhandled(promise) {
  task.call(global, function () {
    var handler;
    if (isNode) {
      process.emit('rejectionHandled', promise);
    } else if (handler = global.onrejectionhandled) {
      handler({ promise: promise, reason: promise._v });
    }
  });
};
var $reject = function $reject(value) {
  var promise = this;
  if (promise._d) return;
  promise._d = true;
  promise = promise._w || promise;
  promise._v = value;
  promise._s = 2;
  if (!promise._a) promise._a = promise._c.slice();
  notify(promise, true);
};
var $resolve = function $resolve(value) {
  var promise = this;
  var then;
  if (promise._d) return;
  promise._d = true;
  promise = promise._w || promise;
  try {
    if (promise === value) throw TypeError("Promise can't be resolved itself");
    if (then = isThenable(value)) {
      microtask(function () {
        var wrapper = { _w: promise, _d: false };
        try {
          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
        } catch (e) {
          $reject.call(wrapper, e);
        }
      });
    } else {
      promise._v = value;
      promise._s = 1;
      notify(promise, false);
    }
  } catch (e) {
    $reject.call({ _w: promise, _d: false }, e);
  }
};

if (!USE_NATIVE) {
  $Promise = function Promise(executor) {
    anInstance(this, $Promise, PROMISE, '_h');
    aFunction(executor);
    Internal.call(this);
    try {
      executor(ctx($resolve, this, 1), ctx($reject, this, 1));
    } catch (err) {
      $reject.call(this, err);
    }
  };

  Internal = function Promise(executor) {
    this._c = [];
    this._a = undefined;
    this._s = 0;
    this._d = false;
    this._v = undefined;
    this._h = 0;
    this._n = false;
  };
  Internal.prototype = require(2402             )($Promise.prototype, { // 2402 = ./_redefine-all
    then: function then(onFulfilled, onRejected) {
      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));
      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;
      reaction.fail = typeof onRejected == 'function' && onRejected;
      reaction.domain = isNode ? process.domain : undefined;
      this._c.push(reaction);
      if (this._a) this._a.push(reaction);
      if (this._s) notify(this, false);
      return reaction.promise;
    },

    'catch': function _catch(onRejected) {
      return this.then(undefined, onRejected);
    }
  });
  OwnPromiseCapability = function OwnPromiseCapability() {
    var promise = new Internal();
    this.promise = promise;
    this.resolve = ctx($resolve, promise, 1);
    this.reject = ctx($reject, promise, 1);
  };
  newPromiseCapabilityModule.f = newPromiseCapability = function newPromiseCapability(C) {
    return C === $Promise || C === Wrapper ? new OwnPromiseCapability(C) : newGenericPromiseCapability(C);
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });
require(2380                  )($Promise, PROMISE); // 2380 = ./_set-to-string-tag
require(2403            )(PROMISE); // 2403 = ./_set-species
Wrapper = require(2334     )[PROMISE]; // 2334 = ./_core

$export($export.S + $export.F * !USE_NATIVE, PROMISE, {
  reject: function reject(r) {
    var capability = newPromiseCapability(this);
    var $$reject = capability.reject;
    $$reject(r);
    return capability.promise;
  }
});
$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
  resolve: function resolve(x) {
    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);
  }
});
$export($export.S + $export.F * !(USE_NATIVE && require(2404            )(function (iter) { // 2404 = ./_iter-detect
  $Promise.all(iter)['catch'](empty);
})), PROMISE, {
  all: function all(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform(function () {
      var values = [];
      var index = 0;
      var remaining = 1;
      forOf(iterable, false, function (promise) {
        var $index = index++;
        var alreadyCalled = false;
        values.push(undefined);
        remaining++;
        C.resolve(promise).then(function (value) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[$index] = value;
          --remaining || resolve(values);
        }, reject);
      });
      --remaining || resolve(values);
    });
    if (result.e) reject(result.v);
    return capability.promise;
  },

  race: function race(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var reject = capability.reject;
    var result = perform(function () {
      forOf(iterable, false, function (promise) {
        C.resolve(promise).then(capability.resolve, reject);
      });
    });
    if (result.e) reject(result.v);
    return capability.promise;
  }
});
}, 2387, null, "core-js/library/modules/es6.promise.js");
__d(/* core-js/library/modules/_classof.js */function(global, require, module, exports) {
var cof = require(2353    ); // 2353 = ./_cof
var TAG = require(2381    )('toStringTag'); // 2381 = ./_wks

var ARG = cof(function () {
  return arguments;
}()) == 'Arguments';

var tryGet = function tryGet(it, key) {
  try {
    return it[key];
  } catch (e) {}
};

module.exports = function (it) {
  var O, T, B;
  return it === undefined ? 'Undefined' : it === null ? 'Null' : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T : ARG ? cof(O) : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
};
}, 2388, null, "core-js/library/modules/_classof.js");
__d(/* core-js/library/modules/_an-instance.js */function(global, require, module, exports) {module.exports = function (it, Constructor, name, forbiddenField) {
  if (!(it instanceof Constructor) || forbiddenField !== undefined && forbiddenField in it) {
    throw TypeError(name + ': incorrect invocation!');
  }return it;
};
}, 2389, null, "core-js/library/modules/_an-instance.js");
__d(/* core-js/library/modules/_for-of.js */function(global, require, module, exports) {var ctx = require(2335    ); // 2335 = ./_ctx
var call = require(2391          ); // 2391 = ./_iter-call
var isArrayIter = require(2392              ); // 2392 = ./_is-array-iter
var anObject = require(2339          ); // 2339 = ./_an-object
var toLength = require(2356          ); // 2356 = ./_to-length
var getIterFn = require(2393                        ); // 2393 = ./core.get-iterator-method
var BREAK = {};
var RETURN = {};
var _exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {
  var iterFn = ITERATOR ? function () {
    return iterable;
  } : getIterFn(iterable);
  var f = ctx(fn, that, entries ? 2 : 1);
  var index = 0;
  var length, step, iterator, result;
  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');

  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {
    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
    if (result === BREAK || result === RETURN) return result;
  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {
    result = call(iterator, f, step.value, entries);
    if (result === BREAK || result === RETURN) return result;
  }
};
_exports.BREAK = BREAK;
_exports.RETURN = RETURN;
}, 2390, null, "core-js/library/modules/_for-of.js");
__d(/* core-js/library/modules/_iter-call.js */function(global, require, module, exports) {
var anObject = require(2339          ); // 2339 = ./_an-object
module.exports = function (iterator, fn, value, entries) {
  try {
    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
  } catch (e) {
    var ret = iterator['return'];
    if (ret !== undefined) anObject(ret.call(iterator));
    throw e;
  }
};
}, 2391, null, "core-js/library/modules/_iter-call.js");
__d(/* core-js/library/modules/_is-array-iter.js */function(global, require, module, exports) {
var Iterators = require(2375          ); // 2375 = ./_iterators
var ITERATOR = require(2381    )('iterator'); // 2381 = ./_wks
var ArrayProto = Array.prototype;

module.exports = function (it) {
  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
};
}, 2392, null, "core-js/library/modules/_is-array-iter.js");
__d(/* core-js/library/modules/core.get-iterator-method.js */function(global, require, module, exports) {var classof = require(2388        ); // 2388 = ./_classof
var ITERATOR = require(2381    )('iterator'); // 2381 = ./_wks
var Iterators = require(2375          ); // 2375 = ./_iterators
module.exports = require(2334     ).getIteratorMethod = function (it) { // 2334 = ./_core
  if (it != undefined) return it[ITERATOR] || it['@@iterator'] || Iterators[classof(it)];
};
}, 2393, null, "core-js/library/modules/core.get-iterator-method.js");
__d(/* core-js/library/modules/_species-constructor.js */function(global, require, module, exports) {
var anObject = require(2339          ); // 2339 = ./_an-object
var aFunction = require(2336           ); // 2336 = ./_a-function
var SPECIES = require(2381    )('species'); // 2381 = ./_wks
module.exports = function (O, D) {
  var C = anObject(O).constructor;
  var S;
  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
};
}, 2394, null, "core-js/library/modules/_species-constructor.js");
__d(/* core-js/library/modules/_task.js */function(global, require, module, exports) {var ctx = require(2335    ); // 2335 = ./_ctx
var invoke = require(2396       ); // 2396 = ./_invoke
var html = require(2379     ); // 2379 = ./_html
var cel = require(2344           ); // 2344 = ./_dom-create
var global = require(2333       ); // 2333 = ./_global
var process = global.process;
var setTask = global.setImmediate;
var clearTask = global.clearImmediate;
var MessageChannel = global.MessageChannel;
var Dispatch = global.Dispatch;
var counter = 0;
var queue = {};
var ONREADYSTATECHANGE = 'onreadystatechange';
var defer, channel, port;
var run = function run() {
  var id = +this;

  if (queue.hasOwnProperty(id)) {
    var fn = queue[id];
    delete queue[id];
    fn();
  }
};
var listener = function listener(event) {
  run.call(event.data);
};

if (!setTask || !clearTask) {
  setTask = function setImmediate(fn) {
    var args = [];
    var i = 1;
    while (arguments.length > i) {
      args.push(arguments[i++]);
    }queue[++counter] = function () {
      invoke(typeof fn == 'function' ? fn : Function(fn), args);
    };
    defer(counter);
    return counter;
  };
  clearTask = function clearImmediate(id) {
    delete queue[id];
  };

  if (require(2353    )(process) == 'process') { // 2353 = ./_cof
    defer = function defer(id) {
      process.nextTick(ctx(run, id, 1));
    };
  } else if (Dispatch && Dispatch.now) {
    defer = function defer(id) {
      Dispatch.now(ctx(run, id, 1));
    };
  } else if (MessageChannel) {
    channel = new MessageChannel();
    port = channel.port2;
    channel.port1.onmessage = listener;
    defer = ctx(port.postMessage, port, 1);
  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {
    defer = function defer(id) {
      global.postMessage(id + '', '*');
    };
    global.addEventListener('message', listener, false);
  } else if (ONREADYSTATECHANGE in cel('script')) {
    defer = function defer(id) {
      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {
        html.removeChild(this);
        run.call(id);
      };
    };
  } else {
    defer = function defer(id) {
      setTimeout(ctx(run, id, 1), 0);
    };
  }
}
module.exports = {
  set: setTask,
  clear: clearTask
};
}, 2395, null, "core-js/library/modules/_task.js");
__d(/* core-js/library/modules/_invoke.js */function(global, require, module, exports) {
module.exports = function (fn, args, that) {
                  var un = that === undefined;
                  switch (args.length) {
                                    case 0:
                                                      return un ? fn() : fn.call(that);
                                    case 1:
                                                      return un ? fn(args[0]) : fn.call(that, args[0]);
                                    case 2:
                                                      return un ? fn(args[0], args[1]) : fn.call(that, args[0], args[1]);
                                    case 3:
                                                      return un ? fn(args[0], args[1], args[2]) : fn.call(that, args[0], args[1], args[2]);
                                    case 4:
                                                      return un ? fn(args[0], args[1], args[2], args[3]) : fn.call(that, args[0], args[1], args[2], args[3]);
                  }return fn.apply(that, args);
};
}, 2396, null, "core-js/library/modules/_invoke.js");
__d(/* core-js/library/modules/_microtask.js */function(global, require, module, exports) {var global = require(2333       ); // 2333 = ./_global
var macrotask = require(2395     ).set; // 2395 = ./_task
var Observer = global.MutationObserver || global.WebKitMutationObserver;
var process = global.process;
var Promise = global.Promise;
var isNode = require(2353    )(process) == 'process'; // 2353 = ./_cof

module.exports = function () {
  var head, last, notify;

  var flush = function flush() {
    var parent, fn;
    if (isNode && (parent = process.domain)) parent.exit();
    while (head) {
      fn = head.fn;
      head = head.next;
      try {
        fn();
      } catch (e) {
        if (head) notify();else last = undefined;
        throw e;
      }
    }last = undefined;
    if (parent) parent.enter();
  };

  if (isNode) {
    notify = function notify() {
      process.nextTick(flush);
    };
  } else if (Observer && !(global.navigator && global.navigator.standalone)) {
    var toggle = true;
    var node = document.createTextNode('');
    new Observer(flush).observe(node, { characterData: true });
    notify = function notify() {
      node.data = toggle = !toggle;
    };
  } else if (Promise && Promise.resolve) {
    var promise = Promise.resolve(undefined);
    notify = function notify() {
      promise.then(flush);
    };
  } else {
    notify = function notify() {
      macrotask.call(global, flush);
    };
  }

  return function (fn) {
    var task = { fn: fn, next: undefined };
    if (last) last.next = task;
    if (!head) {
      head = task;
      notify();
    }last = task;
  };
};
}, 2397, null, "core-js/library/modules/_microtask.js");
__d(/* core-js/library/modules/_new-promise-capability.js */function(global, require, module, exports) {'use strict';

var aFunction = require(2336           ); // 2336 = ./_a-function

function PromiseCapability(C) {
  var resolve, reject;
  this.promise = new C(function ($$resolve, $$reject) {
    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
    resolve = $$resolve;
    reject = $$reject;
  });
  this.resolve = aFunction(resolve);
  this.reject = aFunction(reject);
}

module.exports.f = function (C) {
  return new PromiseCapability(C);
};
}, 2398, null, "core-js/library/modules/_new-promise-capability.js");
__d(/* core-js/library/modules/_perform.js */function(global, require, module, exports) {module.exports = function (exec) {
  try {
    return { e: false, v: exec() };
  } catch (e) {
    return { e: true, v: e };
  }
};
}, 2399, null, "core-js/library/modules/_perform.js");
__d(/* core-js/library/modules/_user-agent.js */function(global, require, module, exports) {var global = require(2333       ); // 2333 = ./_global
var navigator = global.navigator;

module.exports = navigator && navigator.userAgent || '';
}, 2400, null, "core-js/library/modules/_user-agent.js");
__d(/* core-js/library/modules/_promise-resolve.js */function(global, require, module, exports) {var anObject = require(2339          ); // 2339 = ./_an-object
var isObject = require(2340          ); // 2340 = ./_is-object
var newPromiseCapability = require(2398                       ); // 2398 = ./_new-promise-capability

module.exports = function (C, x) {
  anObject(C);
  if (isObject(x) && x.constructor === C) return x;
  var promiseCapability = newPromiseCapability.f(C);
  var resolve = promiseCapability.resolve;
  resolve(x);
  return promiseCapability.promise;
};
}, 2401, null, "core-js/library/modules/_promise-resolve.js");
__d(/* core-js/library/modules/_redefine-all.js */function(global, require, module, exports) {var hide = require(2337     ); // 2337 = ./_hide
module.exports = function (target, src, safe) {
  for (var key in src) {
    if (safe && target[key]) target[key] = src[key];else hide(target, key, src[key]);
  }return target;
};
}, 2402, null, "core-js/library/modules/_redefine-all.js");
__d(/* core-js/library/modules/_set-species.js */function(global, require, module, exports) {'use strict';

var global = require(2333       ); // 2333 = ./_global
var core = require(2334     ); // 2334 = ./_core
var dP = require(2338          ); // 2338 = ./_object-dp
var DESCRIPTORS = require(2342            ); // 2342 = ./_descriptors
var SPECIES = require(2381    )('species'); // 2381 = ./_wks

module.exports = function (KEY) {
  var C = typeof core[KEY] == 'function' ? core[KEY] : global[KEY];
  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {
    configurable: true,
    get: function get() {
      return this;
    }
  });
};
}, 2403, null, "core-js/library/modules/_set-species.js");
__d(/* core-js/library/modules/_iter-detect.js */function(global, require, module, exports) {var ITERATOR = require(2381    )('iterator'); // 2381 = ./_wks
var SAFE_CLOSING = false;

try {
  var riter = [7][ITERATOR]();
  riter['return'] = function () {
    SAFE_CLOSING = true;
  };

  Array.from(riter, function () {
    throw 2;
  });
} catch (e) {}

module.exports = function (exec, skipClosing) {
  if (!skipClosing && !SAFE_CLOSING) return false;
  var safe = false;
  try {
    var arr = [7];
    var iter = arr[ITERATOR]();
    iter.next = function () {
      return { done: safe = true };
    };
    arr[ITERATOR] = function () {
      return iter;
    };
    exec(arr);
  } catch (e) {}
  return safe;
};
}, 2404, null, "core-js/library/modules/_iter-detect.js");
__d(/* core-js/library/modules/es7.promise.finally.js */function(global, require, module, exports) {
'use strict';

var $export = require(2332       ); // 2332 = ./_export
var core = require(2334     ); // 2334 = ./_core
var global = require(2333       ); // 2333 = ./_global
var speciesConstructor = require(2394                    ); // 2394 = ./_species-constructor
var promiseResolve = require(2401                ); // 2401 = ./_promise-resolve

$export($export.P + $export.R, 'Promise', { 'finally': function _finally(onFinally) {
    var C = speciesConstructor(this, core.Promise || global.Promise);
    var isFunction = typeof onFinally == 'function';
    return this.then(isFunction ? function (x) {
      return promiseResolve(C, onFinally()).then(function () {
        return x;
      });
    } : onFinally, isFunction ? function (e) {
      return promiseResolve(C, onFinally()).then(function () {
        throw e;
      });
    } : onFinally);
  } });
}, 2405, null, "core-js/library/modules/es7.promise.finally.js");
__d(/* core-js/library/modules/es7.promise.try.js */function(global, require, module, exports) {'use strict';

var $export = require(2332       ); // 2332 = ./_export
var newPromiseCapability = require(2398                       ); // 2398 = ./_new-promise-capability
var perform = require(2399        ); // 2399 = ./_perform

$export($export.S, 'Promise', { 'try': function _try(callbackfn) {
    var promiseCapability = newPromiseCapability.f(this);
    var result = perform(callbackfn);
    (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);
    return promiseCapability.promise;
  } });
}, 2406, null, "core-js/library/modules/es7.promise.try.js");
__d(/* babel-runtime/helpers/typeof.js */function(global, require, module, exports) {"use strict";

exports.__esModule = true;

var _iterator = require(2408                        ); // 2408 = ../core-js/symbol/iterator

var _iterator2 = _interopRequireDefault(_iterator);

var _symbol = require(2411               ); // 2411 = ../core-js/symbol

var _symbol2 = _interopRequireDefault(_symbol);

var _typeof = typeof _symbol2.default === "function" && typeof _iterator2.default === "symbol" ? function (obj) {
  return typeof obj;
} : function (obj) {
  return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj;
};

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

exports.default = typeof _symbol2.default === "function" && _typeof(_iterator2.default) === "symbol" ? function (obj) {
  return typeof obj === "undefined" ? "undefined" : _typeof(obj);
} : function (obj) {
  return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof(obj);
};
}, 2407, null, "babel-runtime/helpers/typeof.js");
__d(/* babel-runtime/core-js/symbol/iterator.js */function(global, require, module, exports) {module.exports = { "default": require(2409                                ), __esModule: true }; // 2409 = core-js/library/fn/symbol/iterator
}, 2408, null, "babel-runtime/core-js/symbol/iterator.js");
__d(/* core-js/library/fn/symbol/iterator.js */function(global, require, module, exports) {require(2371                               ); // 2371 = ../../modules/es6.string.iterator
require(2383                            ); // 2383 = ../../modules/web.dom.iterable
module.exports = require(2410                    ).f('iterator'); // 2410 = ../../modules/_wks-ext
}, 2409, null, "core-js/library/fn/symbol/iterator.js");
__d(/* core-js/library/modules/_wks-ext.js */function(global, require, module, exports) {exports.f = require(2381    ); // 2381 = ./_wks
}, 2410, null, "core-js/library/modules/_wks-ext.js");
__d(/* babel-runtime/core-js/symbol.js */function(global, require, module, exports) {module.exports = { "default": require(2412                       ), __esModule: true }; // 2412 = core-js/library/fn/symbol
}, 2411, null, "babel-runtime/core-js/symbol.js");
__d(/* core-js/library/fn/symbol/index.js */function(global, require, module, exports) {require(2413                      ); // 2413 = ../../modules/es6.symbol
require(2370                                ); // 2370 = ../../modules/es6.object.to-string
require(2421                                     ); // 2421 = ../../modules/es7.symbol.async-iterator
require(2422                                 ); // 2422 = ../../modules/es7.symbol.observable
module.exports = require(2334                 ).Symbol; // 2334 = ../../modules/_core
}, 2412, null, "core-js/library/fn/symbol/index.js");
__d(/* core-js/library/modules/es6.symbol.js */function(global, require, module, exports) {'use strict';

var global = require(2333       ); // 2333 = ./_global
var has = require(2347    ); // 2347 = ./_has
var DESCRIPTORS = require(2342            ); // 2342 = ./_descriptors
var $export = require(2332       ); // 2332 = ./_export
var redefine = require(2374         ); // 2374 = ./_redefine
var META = require(2414     ).KEY; // 2414 = ./_meta
var $fails = require(2343      ); // 2343 = ./_fails
var shared = require(2360       ); // 2360 = ./_shared
var setToStringTag = require(2380                  ); // 2380 = ./_set-to-string-tag
var uid = require(2362    ); // 2362 = ./_uid
var wks = require(2381    ); // 2381 = ./_wks
var wksExt = require(2410        ); // 2410 = ./_wks-ext
var wksDefine = require(2415           ); // 2415 = ./_wks-define
var enumKeys = require(2416          ); // 2416 = ./_enum-keys
var isArray = require(2417         ); // 2417 = ./_is-array
var anObject = require(2339          ); // 2339 = ./_an-object
var isObject = require(2340          ); // 2340 = ./_is-object
var toIObject = require(2351           ); // 2351 = ./_to-iobject
var toPrimitive = require(2345             ); // 2345 = ./_to-primitive
var createDesc = require(2346              ); // 2346 = ./_property-desc
var _create = require(2377              ); // 2377 = ./_object-create
var gOPNExt = require(2418                ); // 2418 = ./_object-gopn-ext
var $GOPD = require(2420            ); // 2420 = ./_object-gopd
var $DP = require(2338          ); // 2338 = ./_object-dp
var $keys = require(2349            ); // 2349 = ./_object-keys
var gOPD = $GOPD.f;
var dP = $DP.f;
var gOPN = gOPNExt.f;
var $Symbol = global.Symbol;
var $JSON = global.JSON;
var _stringify = $JSON && $JSON.stringify;
var PROTOTYPE = 'prototype';
var HIDDEN = wks('_hidden');
var TO_PRIMITIVE = wks('toPrimitive');
var isEnum = {}.propertyIsEnumerable;
var SymbolRegistry = shared('symbol-registry');
var AllSymbols = shared('symbols');
var OPSymbols = shared('op-symbols');
var ObjectProto = Object[PROTOTYPE];
var USE_NATIVE = typeof $Symbol == 'function';
var QObject = global.QObject;

var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

var setSymbolDesc = DESCRIPTORS && $fails(function () {
  return _create(dP({}, 'a', {
    get: function get() {
      return dP(this, 'a', { value: 7 }).a;
    }
  })).a != 7;
}) ? function (it, key, D) {
  var protoDesc = gOPD(ObjectProto, key);
  if (protoDesc) delete ObjectProto[key];
  dP(it, key, D);
  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
} : dP;

var wrap = function wrap(tag) {
  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
  sym._k = tag;
  return sym;
};

var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  return it instanceof $Symbol;
};

var $defineProperty = function defineProperty(it, key, D) {
  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
  anObject(it);
  key = toPrimitive(key, true);
  anObject(D);
  if (has(AllSymbols, key)) {
    if (!D.enumerable) {
      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
      it[HIDDEN][key] = true;
    } else {
      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
      D = _create(D, { enumerable: createDesc(0, false) });
    }return setSymbolDesc(it, key, D);
  }return dP(it, key, D);
};
var $defineProperties = function defineProperties(it, P) {
  anObject(it);
  var keys = enumKeys(P = toIObject(P));
  var i = 0;
  var l = keys.length;
  var key;
  while (l > i) {
    $defineProperty(it, key = keys[i++], P[key]);
  }return it;
};
var $create = function create(it, P) {
  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
};
var $propertyIsEnumerable = function propertyIsEnumerable(key) {
  var E = isEnum.call(this, key = toPrimitive(key, true));
  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
};
var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
  it = toIObject(it);
  key = toPrimitive(key, true);
  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
  var D = gOPD(it, key);
  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
  return D;
};
var $getOwnPropertyNames = function getOwnPropertyNames(it) {
  var names = gOPN(toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
  }return result;
};
var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
  var IS_OP = it === ObjectProto;
  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);
  }return result;
};

if (!USE_NATIVE) {
  $Symbol = function Symbol() {
    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
    var $set = function $set(value) {
      if (this === ObjectProto) $set.call(OPSymbols, value);
      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
      setSymbolDesc(this, tag, createDesc(1, value));
    };
    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });
    return wrap(tag);
  };
  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
    return this._k;
  });

  $GOPD.f = $getOwnPropertyDescriptor;
  $DP.f = $defineProperty;
  require(2419            ).f = gOPNExt.f = $getOwnPropertyNames; // 2419 = ./_object-gopn
  require(2365           ).f = $propertyIsEnumerable; // 2365 = ./_object-pie
  require(2364            ).f = $getOwnPropertySymbols; // 2364 = ./_object-gops

  if (DESCRIPTORS && !require(2361        )) { // 2361 = ./_library
    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
  }

  wksExt.f = function (name) {
    return wrap(wks(name));
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });

for (var es6Symbols = 'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'.split(','), j = 0; es6Symbols.length > j;) {
  wks(es6Symbols[j++]);
}for (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) {
  wksDefine(wellKnownSymbols[k++]);
}$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
  'for': function _for(key) {
    return has(SymbolRegistry, key += '') ? SymbolRegistry[key] : SymbolRegistry[key] = $Symbol(key);
  },

  keyFor: function keyFor(sym) {
    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');
    for (var key in SymbolRegistry) {
      if (SymbolRegistry[key] === sym) return key;
    }
  },
  useSetter: function useSetter() {
    setter = true;
  },
  useSimple: function useSimple() {
    setter = false;
  }
});

$export($export.S + $export.F * !USE_NATIVE, 'Object', {
  create: $create,

  defineProperty: $defineProperty,

  defineProperties: $defineProperties,

  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,

  getOwnPropertyNames: $getOwnPropertyNames,

  getOwnPropertySymbols: $getOwnPropertySymbols
});

$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {
  var S = $Symbol();

  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';
})), 'JSON', {
  stringify: function stringify(it) {
    var args = [it];
    var i = 1;
    var replacer, $replacer;
    while (arguments.length > i) {
      args.push(arguments[i++]);
    }$replacer = replacer = args[1];
    if (!isObject(replacer) && it === undefined || isSymbol(it)) return;
    if (!isArray(replacer)) replacer = function replacer(key, value) {
      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
      if (!isSymbol(value)) return value;
    };
    args[1] = replacer;
    return _stringify.apply($JSON, args);
  }
});

$Symbol[PROTOTYPE][TO_PRIMITIVE] || require(2337     )($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf); // 2337 = ./_hide

setToStringTag($Symbol, 'Symbol');

setToStringTag(Math, 'Math', true);

setToStringTag(global.JSON, 'JSON', true);
}, 2413, null, "core-js/library/modules/es6.symbol.js");
__d(/* core-js/library/modules/_meta.js */function(global, require, module, exports) {var META = require(2362    )('meta'); // 2362 = ./_uid
var isObject = require(2340          ); // 2340 = ./_is-object
var has = require(2347    ); // 2347 = ./_has
var setDesc = require(2338          ).f; // 2338 = ./_object-dp
var id = 0;
var isExtensible = Object.isExtensible || function () {
  return true;
};
var FREEZE = !require(2343      )(function () { // 2343 = ./_fails
  return isExtensible(Object.preventExtensions({}));
});
var setMeta = function setMeta(it) {
  setDesc(it, META, { value: {
      i: 'O' + ++id,
      w: {} } });
};
var fastKey = function fastKey(it, create) {
  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if (!has(it, META)) {
    if (!isExtensible(it)) return 'F';

    if (!create) return 'E';

    setMeta(it);
  }return it[META].i;
};
var getWeak = function getWeak(it, create) {
  if (!has(it, META)) {
    if (!isExtensible(it)) return true;

    if (!create) return false;

    setMeta(it);
  }return it[META].w;
};

var onFreeze = function onFreeze(it) {
  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
  return it;
};
var meta = module.exports = {
  KEY: META,
  NEED: false,
  fastKey: fastKey,
  getWeak: getWeak,
  onFreeze: onFreeze
};
}, 2414, null, "core-js/library/modules/_meta.js");
__d(/* core-js/library/modules/_wks-define.js */function(global, require, module, exports) {var global = require(2333       ); // 2333 = ./_global
var core = require(2334     ); // 2334 = ./_core
var LIBRARY = require(2361        ); // 2361 = ./_library
var wksExt = require(2410        ); // 2410 = ./_wks-ext
var defineProperty = require(2338          ).f; // 2338 = ./_object-dp
module.exports = function (name) {
  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });
};
}, 2415, null, "core-js/library/modules/_wks-define.js");
__d(/* core-js/library/modules/_enum-keys.js */function(global, require, module, exports) {
var getKeys = require(2349            ); // 2349 = ./_object-keys
var gOPS = require(2364            ); // 2364 = ./_object-gops
var pIE = require(2365           ); // 2365 = ./_object-pie
module.exports = function (it) {
  var result = getKeys(it);
  var getSymbols = gOPS.f;
  if (getSymbols) {
    var symbols = getSymbols(it);
    var isEnum = pIE.f;
    var i = 0;
    var key;
    while (symbols.length > i) {
      if (isEnum.call(it, key = symbols[i++])) result.push(key);
    }
  }return result;
};
}, 2416, null, "core-js/library/modules/_enum-keys.js");
__d(/* core-js/library/modules/_is-array.js */function(global, require, module, exports) {
var cof = require(2353    ); // 2353 = ./_cof
module.exports = Array.isArray || function isArray(arg) {
  return cof(arg) == 'Array';
};
}, 2417, null, "core-js/library/modules/_is-array.js");
__d(/* core-js/library/modules/_object-gopn-ext.js */function(global, require, module, exports) {
var toIObject = require(2351           ); // 2351 = ./_to-iobject
var gOPN = require(2419            ).f; // 2419 = ./_object-gopn
var toString = {}.toString;

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function getWindowNames(it) {
  try {
    return gOPN(it);
  } catch (e) {
    return windowNames.slice();
  }
};

module.exports.f = function getOwnPropertyNames(it) {
  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
};
}, 2418, null, "core-js/library/modules/_object-gopn-ext.js");
__d(/* core-js/library/modules/_object-gopn.js */function(global, require, module, exports) {
var $keys = require(2350                     ); // 2350 = ./_object-keys-internal
var hiddenKeys = require(2363              ).concat('length', 'prototype'); // 2363 = ./_enum-bug-keys

exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return $keys(O, hiddenKeys);
};
}, 2419, null, "core-js/library/modules/_object-gopn.js");
__d(/* core-js/library/modules/_object-gopd.js */function(global, require, module, exports) {var pIE = require(2365           ); // 2365 = ./_object-pie
var createDesc = require(2346              ); // 2346 = ./_property-desc
var toIObject = require(2351           ); // 2351 = ./_to-iobject
var toPrimitive = require(2345             ); // 2345 = ./_to-primitive
var has = require(2347    ); // 2347 = ./_has
var IE8_DOM_DEFINE = require(2341               ); // 2341 = ./_ie8-dom-define
var gOPD = Object.getOwnPropertyDescriptor;

exports.f = require(2342            ) ? gOPD : function getOwnPropertyDescriptor(O, P) { // 2342 = ./_descriptors
  O = toIObject(O);
  P = toPrimitive(P, true);
  if (IE8_DOM_DEFINE) try {
    return gOPD(O, P);
  } catch (e) {}
  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
};
}, 2420, null, "core-js/library/modules/_object-gopd.js");
__d(/* core-js/library/modules/es7.symbol.async-iterator.js */function(global, require, module, exports) {require(2415           )('asyncIterator'); // 2415 = ./_wks-define
}, 2421, null, "core-js/library/modules/es7.symbol.async-iterator.js");
__d(/* core-js/library/modules/es7.symbol.observable.js */function(global, require, module, exports) {require(2415           )('observable'); // 2415 = ./_wks-define
}, 2422, null, "core-js/library/modules/es7.symbol.observable.js");
__d(/* axios/index.js */function(global, require, module, exports) {module.exports = require(2424         ); // 2424 = ./lib/axios
}, 2423, null, "axios/index.js");
__d(/* axios/lib/axios.js */function(global, require, module, exports) {'use strict';

var utils = require(2425     ); // 2425 = ./utils
var bind = require(2426            ); // 2426 = ./helpers/bind
var Axios = require(2427          ); // 2427 = ./core/Axios
var defaults = require(2428        ); // 2428 = ./defaults

function createInstance(defaultConfig) {
  var context = new Axios(defaultConfig);
  var instance = bind(Axios.prototype.request, context);

  utils.extend(instance, Axios.prototype, context);

  utils.extend(instance, context);

  return instance;
}

var axios = createInstance(defaults);

axios.Axios = Axios;

axios.create = function create(instanceConfig) {
  return createInstance(utils.merge(defaults, instanceConfig));
};

axios.Cancel = require(2445             ); // 2445 = ./cancel/Cancel
axios.CancelToken = require(2446                  ); // 2446 = ./cancel/CancelToken
axios.isCancel = require(2442               ); // 2442 = ./cancel/isCancel

axios.all = function all(promises) {
  return Promise.all(promises);
};
axios.spread = require(2447              ); // 2447 = ./helpers/spread

module.exports = axios;

module.exports.default = axios;
}, 2424, null, "axios/lib/axios.js");
__d(/* axios/lib/utils.js */function(global, require, module, exports) {'use strict';

var bind = require(2426            ); // 2426 = ./helpers/bind

var toString = Object.prototype.toString;

function isArray(val) {
  return toString.call(val) === '[object Array]';
}

function isArrayBuffer(val) {
  return toString.call(val) === '[object ArrayBuffer]';
}

function isFormData(val) {
  return typeof FormData !== 'undefined' && val instanceof FormData;
}

function isArrayBufferView(val) {
  var result;
  if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {
    result = ArrayBuffer.isView(val);
  } else {
    result = val && val.buffer && val.buffer instanceof ArrayBuffer;
  }
  return result;
}

function isString(val) {
  return typeof val === 'string';
}

function isNumber(val) {
  return typeof val === 'number';
}

function isUndefined(val) {
  return typeof val === 'undefined';
}

function isObject(val) {
  return val !== null && typeof val === 'object';
}

function isDate(val) {
  return toString.call(val) === '[object Date]';
}

function isFile(val) {
  return toString.call(val) === '[object File]';
}

function isBlob(val) {
  return toString.call(val) === '[object Blob]';
}

function isFunction(val) {
  return toString.call(val) === '[object Function]';
}

function isStream(val) {
  return isObject(val) && isFunction(val.pipe);
}

function isURLSearchParams(val) {
  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;
}

function trim(str) {
  return str.replace(/^\s*/, '').replace(/\s*$/, '');
}

function isStandardBrowserEnv() {
  return typeof window !== 'undefined' && typeof document !== 'undefined' && typeof document.createElement === 'function';
}

function forEach(obj, fn) {
  if (obj === null || typeof obj === 'undefined') {
    return;
  }

  if (typeof obj !== 'object' && !isArray(obj)) {
    obj = [obj];
  }

  if (isArray(obj)) {
    for (var i = 0, l = obj.length; i < l; i++) {
      fn.call(null, obj[i], i, obj);
    }
  } else {
    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        fn.call(null, obj[key], key, obj);
      }
    }
  }
}

function merge() {
  var result = {};
  function assignValue(val, key) {
    if (typeof result[key] === 'object' && typeof val === 'object') {
      result[key] = merge(result[key], val);
    } else {
      result[key] = val;
    }
  }

  for (var i = 0, l = arguments.length; i < l; i++) {
    forEach(arguments[i], assignValue);
  }
  return result;
}

function extend(a, b, thisArg) {
  forEach(b, function assignValue(val, key) {
    if (thisArg && typeof val === 'function') {
      a[key] = bind(val, thisArg);
    } else {
      a[key] = val;
    }
  });
  return a;
}

module.exports = {
  isArray: isArray,
  isArrayBuffer: isArrayBuffer,
  isFormData: isFormData,
  isArrayBufferView: isArrayBufferView,
  isString: isString,
  isNumber: isNumber,
  isObject: isObject,
  isUndefined: isUndefined,
  isDate: isDate,
  isFile: isFile,
  isBlob: isBlob,
  isFunction: isFunction,
  isStream: isStream,
  isURLSearchParams: isURLSearchParams,
  isStandardBrowserEnv: isStandardBrowserEnv,
  forEach: forEach,
  merge: merge,
  extend: extend,
  trim: trim
};
}, 2425, null, "axios/lib/utils.js");
__d(/* axios/lib/helpers/bind.js */function(global, require, module, exports) {'use strict';

module.exports = function bind(fn, thisArg) {
  return function wrap() {
    var args = new Array(arguments.length);
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i];
    }
    return fn.apply(thisArg, args);
  };
};
}, 2426, null, "axios/lib/helpers/bind.js");
__d(/* axios/lib/core/Axios.js */function(global, require, module, exports) {'use strict';

var defaults = require(2428           ); // 2428 = ./../defaults
var utils = require(2425        ); // 2425 = ./../utils
var InterceptorManager = require(2439                  ); // 2439 = ./InterceptorManager
var dispatchRequest = require(2440               ); // 2440 = ./dispatchRequest
var isAbsoluteURL = require(2443                        ); // 2443 = ./../helpers/isAbsoluteURL
var combineURLs = require(2444                      ); // 2444 = ./../helpers/combineURLs

function Axios(instanceConfig) {
  this.defaults = instanceConfig;
  this.interceptors = {
    request: new InterceptorManager(),
    response: new InterceptorManager()
  };
}

Axios.prototype.request = function request(config) {
  if (typeof config === 'string') {
    config = utils.merge({
      url: arguments[0]
    }, arguments[1]);
  }

  config = utils.merge(defaults, this.defaults, { method: 'get' }, config);

  if (config.baseURL && !isAbsoluteURL(config.url)) {
    config.url = combineURLs(config.baseURL, config.url);
  }

  var chain = [dispatchRequest, undefined];
  var promise = Promise.resolve(config);

  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
    chain.unshift(interceptor.fulfilled, interceptor.rejected);
  });

  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
    chain.push(interceptor.fulfilled, interceptor.rejected);
  });

  while (chain.length) {
    promise = promise.then(chain.shift(), chain.shift());
  }

  return promise;
};

utils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {
  Axios.prototype[method] = function (url, config) {
    return this.request(utils.merge(config || {}, {
      method: method,
      url: url
    }));
  };
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  Axios.prototype[method] = function (url, data, config) {
    return this.request(utils.merge(config || {}, {
      method: method,
      url: url,
      data: data
    }));
  };
});

module.exports = Axios;
}, 2427, null, "axios/lib/core/Axios.js");
__d(/* axios/lib/defaults.js */function(global, require, module, exports) {'use strict';

var utils = require(2425     ); // 2425 = ./utils
var normalizeHeaderName = require(2429                           ); // 2429 = ./helpers/normalizeHeaderName

var PROTECTION_PREFIX = /^\)\]\}',?\n/;
var DEFAULT_CONTENT_TYPE = {
  'Content-Type': 'application/x-www-form-urlencoded'
};

function setContentTypeIfUnset(headers, value) {
  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {
    headers['Content-Type'] = value;
  }
}

function getDefaultAdapter() {
  var adapter;
  if (typeof XMLHttpRequest !== 'undefined') {
    adapter = require(2430            ); // 2430 = ./adapters/xhr
  } else if (typeof process !== 'undefined') {
    adapter = require(2430             ); // 2430 = ./adapters/http
  }
  return adapter;
}

var defaults = {
  adapter: getDefaultAdapter(),

  transformRequest: [function transformRequest(data, headers) {
    normalizeHeaderName(headers, 'Content-Type');
    if (utils.isFormData(data) || utils.isArrayBuffer(data) || utils.isStream(data) || utils.isFile(data) || utils.isBlob(data)) {
      return data;
    }
    if (utils.isArrayBufferView(data)) {
      return data.buffer;
    }
    if (utils.isURLSearchParams(data)) {
      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');
      return data.toString();
    }
    if (utils.isObject(data)) {
      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');
      return JSON.stringify(data);
    }
    return data;
  }],

  transformResponse: [function transformResponse(data) {
    if (typeof data === 'string') {
      data = data.replace(PROTECTION_PREFIX, '');
      try {
        data = JSON.parse(data);
      } catch (e) {}
    }
    return data;
  }],

  timeout: 0,

  xsrfCookieName: 'XSRF-TOKEN',
  xsrfHeaderName: 'X-XSRF-TOKEN',

  maxContentLength: -1,

  validateStatus: function validateStatus(status) {
    return status >= 200 && status < 300;
  }
};

defaults.headers = {
  common: {
    'Accept': 'application/json, text/plain, */*'
  }
};

utils.forEach(['delete', 'get', 'head'], function forEachMehtodNoData(method) {
  defaults.headers[method] = {};
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
});

module.exports = defaults;
}, 2428, null, "axios/lib/defaults.js");
__d(/* axios/lib/helpers/normalizeHeaderName.js */function(global, require, module, exports) {'use strict';

var utils = require(2425      ); // 2425 = ../utils

module.exports = function normalizeHeaderName(headers, normalizedName) {
  utils.forEach(headers, function processHeader(value, name) {
    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
      headers[normalizedName] = value;
      delete headers[name];
    }
  });
};
}, 2429, null, "axios/lib/helpers/normalizeHeaderName.js");
__d(/* axios/lib/adapters/xhr.js */function(global, require, module, exports) {'use strict';

var utils = require(2425        ); // 2425 = ./../utils
var settle = require(2431              ); // 2431 = ./../core/settle
var buildURL = require(2434                   ); // 2434 = ./../helpers/buildURL
var parseHeaders = require(2435                       ); // 2435 = ./../helpers/parseHeaders
var isURLSameOrigin = require(2436                          ); // 2436 = ./../helpers/isURLSameOrigin
var createError = require(2432                 ); // 2432 = ../core/createError
var btoa = typeof window !== 'undefined' && window.btoa && window.btoa.bind(window) || require(2437               ); // 2437 = ./../helpers/btoa

module.exports = function xhrAdapter(config) {
  return new Promise(function dispatchXhrRequest(resolve, reject) {
    var requestData = config.data;
    var requestHeaders = config.headers;

    if (utils.isFormData(requestData)) {
      delete requestHeaders['Content-Type'];
    }

    var request = new XMLHttpRequest();
    var loadEvent = 'onreadystatechange';
    var xDomain = false;

    if (process.env.NODE_ENV !== 'test' && typeof window !== 'undefined' && window.XDomainRequest && !('withCredentials' in request) && !isURLSameOrigin(config.url)) {
      request = new window.XDomainRequest();
      loadEvent = 'onload';
      xDomain = true;
      request.onprogress = function handleProgress() {};
      request.ontimeout = function handleTimeout() {};
    }

    if (config.auth) {
      var username = config.auth.username || '';
      var password = config.auth.password || '';
      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);
    }

    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);

    request.timeout = config.timeout;

    request[loadEvent] = function handleLoad() {
      if (!request || request.readyState !== 4 && !xDomain) {
        return;
      }

      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {
        return;
      }

      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;
      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;
      var response = {
        data: responseData,

        status: request.status === 1223 ? 204 : request.status,
        statusText: request.status === 1223 ? 'No Content' : request.statusText,
        headers: responseHeaders,
        config: config,
        request: request
      };

      settle(resolve, reject, response);

      request = null;
    };

    request.onerror = function handleError() {
      reject(createError('Network Error', config));

      request = null;
    };

    request.ontimeout = function handleTimeout() {
      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED'));

      request = null;
    };

    if (utils.isStandardBrowserEnv()) {
      var cookies = require(2438                  ); // 2438 = ./../helpers/cookies

      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ? cookies.read(config.xsrfCookieName) : undefined;

      if (xsrfValue) {
        requestHeaders[config.xsrfHeaderName] = xsrfValue;
      }
    }

    if ('setRequestHeader' in request) {
      utils.forEach(requestHeaders, function setRequestHeader(val, key) {
        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {
          delete requestHeaders[key];
        } else {
          request.setRequestHeader(key, val);
        }
      });
    }

    if (config.withCredentials) {
      request.withCredentials = true;
    }

    if (config.responseType) {
      try {
        request.responseType = config.responseType;
      } catch (e) {
        if (request.responseType !== 'json') {
          throw e;
        }
      }
    }

    if (typeof config.onDownloadProgress === 'function') {
      request.addEventListener('progress', config.onDownloadProgress);
    }

    if (typeof config.onUploadProgress === 'function' && request.upload) {
      request.upload.addEventListener('progress', config.onUploadProgress);
    }

    if (config.cancelToken) {
      config.cancelToken.promise.then(function onCanceled(cancel) {
        if (!request) {
          return;
        }

        request.abort();
        reject(cancel);

        request = null;
      });
    }

    if (requestData === undefined) {
      requestData = null;
    }

    request.send(requestData);
  });
};
}, 2430, null, "axios/lib/adapters/xhr.js");
__d(/* axios/lib/core/settle.js */function(global, require, module, exports) {'use strict';

var createError = require(2432           ); // 2432 = ./createError

module.exports = function settle(resolve, reject, response) {
  var validateStatus = response.config.validateStatus;

  if (!response.status || !validateStatus || validateStatus(response.status)) {
    resolve(response);
  } else {
    reject(createError('Request failed with status code ' + response.status, response.config, null, response));
  }
};
}, 2431, null, "axios/lib/core/settle.js");
__d(/* axios/lib/core/createError.js */function(global, require, module, exports) {'use strict';

var enhanceError = require(2433            ); // 2433 = ./enhanceError

module.exports = function createError(message, config, code, response) {
  var error = new Error(message);
  return enhanceError(error, config, code, response);
};
}, 2432, null, "axios/lib/core/createError.js");
__d(/* axios/lib/core/enhanceError.js */function(global, require, module, exports) {'use strict';

module.exports = function enhanceError(error, config, code, response) {
  error.config = config;
  if (code) {
    error.code = code;
  }
  error.response = response;
  return error;
};
}, 2433, null, "axios/lib/core/enhanceError.js");
__d(/* axios/lib/helpers/buildURL.js */function(global, require, module, exports) {'use strict';

var utils = require(2425        ); // 2425 = ./../utils

function encode(val) {
  return encodeURIComponent(val).replace(/%40/gi, '@').replace(/%3A/gi, ':').replace(/%24/g, '$').replace(/%2C/gi, ',').replace(/%20/g, '+').replace(/%5B/gi, '[').replace(/%5D/gi, ']');
}

module.exports = function buildURL(url, params, paramsSerializer) {
  if (!params) {
    return url;
  }

  var serializedParams;
  if (paramsSerializer) {
    serializedParams = paramsSerializer(params);
  } else if (utils.isURLSearchParams(params)) {
    serializedParams = params.toString();
  } else {
    var parts = [];

    utils.forEach(params, function serialize(val, key) {
      if (val === null || typeof val === 'undefined') {
        return;
      }

      if (utils.isArray(val)) {
        key = key + '[]';
      }

      if (!utils.isArray(val)) {
        val = [val];
      }

      utils.forEach(val, function parseValue(v) {
        if (utils.isDate(v)) {
          v = v.toISOString();
        } else if (utils.isObject(v)) {
          v = JSON.stringify(v);
        }
        parts.push(encode(key) + '=' + encode(v));
      });
    });

    serializedParams = parts.join('&');
  }

  if (serializedParams) {
    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;
  }

  return url;
};
}, 2434, null, "axios/lib/helpers/buildURL.js");
__d(/* axios/lib/helpers/parseHeaders.js */function(global, require, module, exports) {'use strict';

var utils = require(2425        ); // 2425 = ./../utils

module.exports = function parseHeaders(headers) {
  var parsed = {};
  var key;
  var val;
  var i;

  if (!headers) {
    return parsed;
  }

  utils.forEach(headers.split('\n'), function parser(line) {
    i = line.indexOf(':');
    key = utils.trim(line.substr(0, i)).toLowerCase();
    val = utils.trim(line.substr(i + 1));

    if (key) {
      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
    }
  });

  return parsed;
};
}, 2435, null, "axios/lib/helpers/parseHeaders.js");
__d(/* axios/lib/helpers/isURLSameOrigin.js */function(global, require, module, exports) {'use strict';

var utils = require(2425        ); // 2425 = ./../utils

module.exports = utils.isStandardBrowserEnv() ? function standardBrowserEnv() {
  var msie = /(msie|trident)/i.test(navigator.userAgent);
  var urlParsingNode = document.createElement('a');
  var originURL;

  function resolveURL(url) {
    var href = url;

    if (msie) {
      urlParsingNode.setAttribute('href', href);
      href = urlParsingNode.href;
    }

    urlParsingNode.setAttribute('href', href);

    return {
      href: urlParsingNode.href,
      protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',
      host: urlParsingNode.host,
      search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, '') : '',
      hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',
      hostname: urlParsingNode.hostname,
      port: urlParsingNode.port,
      pathname: urlParsingNode.pathname.charAt(0) === '/' ? urlParsingNode.pathname : '/' + urlParsingNode.pathname
    };
  }

  originURL = resolveURL(window.location.href);

  return function isURLSameOrigin(requestURL) {
    var parsed = utils.isString(requestURL) ? resolveURL(requestURL) : requestURL;
    return parsed.protocol === originURL.protocol && parsed.host === originURL.host;
  };
}() : function nonStandardBrowserEnv() {
  return function isURLSameOrigin() {
    return true;
  };
}();
}, 2436, null, "axios/lib/helpers/isURLSameOrigin.js");
__d(/* axios/lib/helpers/btoa.js */function(global, require, module, exports) {'use strict';

var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';

function E() {
  this.message = 'String contains an invalid character';
}
E.prototype = new Error();
E.prototype.code = 5;
E.prototype.name = 'InvalidCharacterError';

function btoa(input) {
  var str = String(input);
  var output = '';
  for (var block, charCode, idx = 0, map = chars; str.charAt(idx | 0) || (map = '=', idx % 1); output += map.charAt(63 & block >> 8 - idx % 1 * 8)) {
    charCode = str.charCodeAt(idx += 3 / 4);
    if (charCode > 0xFF) {
      throw new E();
    }
    block = block << 8 | charCode;
  }
  return output;
}

module.exports = btoa;
}, 2437, null, "axios/lib/helpers/btoa.js");
__d(/* axios/lib/helpers/cookies.js */function(global, require, module, exports) {'use strict';

var utils = require(2425        ); // 2425 = ./../utils

module.exports = utils.isStandardBrowserEnv() ? function standardBrowserEnv() {
  return {
    write: function write(name, value, expires, path, domain, secure) {
      var cookie = [];
      cookie.push(name + '=' + encodeURIComponent(value));

      if (utils.isNumber(expires)) {
        cookie.push('expires=' + new Date(expires).toGMTString());
      }

      if (utils.isString(path)) {
        cookie.push('path=' + path);
      }

      if (utils.isString(domain)) {
        cookie.push('domain=' + domain);
      }

      if (secure === true) {
        cookie.push('secure');
      }

      document.cookie = cookie.join('; ');
    },

    read: function read(name) {
      var match = document.cookie.match(new RegExp('(^|;\\s*)(' + name + ')=([^;]*)'));
      return match ? decodeURIComponent(match[3]) : null;
    },

    remove: function remove(name) {
      this.write(name, '', Date.now() - 86400000);
    }
  };
}() : function nonStandardBrowserEnv() {
  return {
    write: function write() {},
    read: function read() {
      return null;
    },
    remove: function remove() {}
  };
}();
}, 2438, null, "axios/lib/helpers/cookies.js");
__d(/* axios/lib/core/InterceptorManager.js */function(global, require, module, exports) {'use strict';

var utils = require(2425        ); // 2425 = ./../utils

function InterceptorManager() {
  this.handlers = [];
}

InterceptorManager.prototype.use = function use(fulfilled, rejected) {
  this.handlers.push({
    fulfilled: fulfilled,
    rejected: rejected
  });
  return this.handlers.length - 1;
};

InterceptorManager.prototype.eject = function eject(id) {
  if (this.handlers[id]) {
    this.handlers[id] = null;
  }
};

InterceptorManager.prototype.forEach = function forEach(fn) {
  utils.forEach(this.handlers, function forEachHandler(h) {
    if (h !== null) {
      fn(h);
    }
  });
};

module.exports = InterceptorManager;
}, 2439, null, "axios/lib/core/InterceptorManager.js");
__d(/* axios/lib/core/dispatchRequest.js */function(global, require, module, exports) {'use strict';

var utils = require(2425        ); // 2425 = ./../utils
var transformData = require(2441             ); // 2441 = ./transformData
var isCancel = require(2442                ); // 2442 = ../cancel/isCancel
var defaults = require(2428         ); // 2428 = ../defaults

function throwIfCancellationRequested(config) {
  if (config.cancelToken) {
    config.cancelToken.throwIfRequested();
  }
}

module.exports = function dispatchRequest(config) {
  throwIfCancellationRequested(config);

  config.headers = config.headers || {};

  config.data = transformData(config.data, config.headers, config.transformRequest);

  config.headers = utils.merge(config.headers.common || {}, config.headers[config.method] || {}, config.headers || {});

  utils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch', 'common'], function cleanHeaderConfig(method) {
    delete config.headers[method];
  });

  var adapter = config.adapter || defaults.adapter;

  return adapter(config).then(function onAdapterResolution(response) {
    throwIfCancellationRequested(config);

    response.data = transformData(response.data, response.headers, config.transformResponse);

    return response;
  }, function onAdapterRejection(reason) {
    if (!isCancel(reason)) {
      throwIfCancellationRequested(config);

      if (reason && reason.response) {
        reason.response.data = transformData(reason.response.data, reason.response.headers, config.transformResponse);
      }
    }

    return Promise.reject(reason);
  });
};
}, 2440, null, "axios/lib/core/dispatchRequest.js");
__d(/* axios/lib/core/transformData.js */function(global, require, module, exports) {'use strict';

var utils = require(2425        ); // 2425 = ./../utils

module.exports = function transformData(data, headers, fns) {
  utils.forEach(fns, function transform(fn) {
    data = fn(data, headers);
  });

  return data;
};
}, 2441, null, "axios/lib/core/transformData.js");
__d(/* axios/lib/cancel/isCancel.js */function(global, require, module, exports) {'use strict';

module.exports = function isCancel(value) {
  return !!(value && value.__CANCEL__);
};
}, 2442, null, "axios/lib/cancel/isCancel.js");
__d(/* axios/lib/helpers/isAbsoluteURL.js */function(global, require, module, exports) {'use strict';

module.exports = function isAbsoluteURL(url) {
  return (/^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(url)
  );
};
}, 2443, null, "axios/lib/helpers/isAbsoluteURL.js");
__d(/* axios/lib/helpers/combineURLs.js */function(global, require, module, exports) {'use strict';

module.exports = function combineURLs(baseURL, relativeURL) {
  return baseURL.replace(/\/+$/, '') + '/' + relativeURL.replace(/^\/+/, '');
};
}, 2444, null, "axios/lib/helpers/combineURLs.js");
__d(/* axios/lib/cancel/Cancel.js */function(global, require, module, exports) {'use strict';

function Cancel(message) {
  this.message = message;
}

Cancel.prototype.toString = function toString() {
  return 'Cancel' + (this.message ? ': ' + this.message : '');
};

Cancel.prototype.__CANCEL__ = true;

module.exports = Cancel;
}, 2445, null, "axios/lib/cancel/Cancel.js");
__d(/* axios/lib/cancel/CancelToken.js */function(global, require, module, exports) {'use strict';

var Cancel = require(2445      ); // 2445 = ./Cancel

function CancelToken(executor) {
  if (typeof executor !== 'function') {
    throw new TypeError('executor must be a function.');
  }

  var resolvePromise;
  this.promise = new Promise(function promiseExecutor(resolve) {
    resolvePromise = resolve;
  });

  var token = this;
  executor(function cancel(message) {
    if (token.reason) {
      return;
    }

    token.reason = new Cancel(message);
    resolvePromise(token.reason);
  });
}

CancelToken.prototype.throwIfRequested = function throwIfRequested() {
  if (this.reason) {
    throw this.reason;
  }
};

CancelToken.source = function source() {
  var cancel;
  var token = new CancelToken(function executor(c) {
    cancel = c;
  });
  return {
    token: token,
    cancel: cancel
  };
};

module.exports = CancelToken;
}, 2446, null, "axios/lib/cancel/CancelToken.js");
__d(/* axios/lib/helpers/spread.js */function(global, require, module, exports) {'use strict';

module.exports = function spread(callback) {
  return function wrap(arr) {
    return callback.apply(null, arr);
  };
};
}, 2447, null, "axios/lib/helpers/spread.js");
__d(/* ramdasauce/dist/ramdasauce.js */function(global, require, module, exports) {'use strict';

function _interopDefault(ex) {
  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;
}

var R = _interopDefault(require(1983   )); // 1983 = ramda

var log = function log(x) {
  console.log(x);
  return x;
};

var trace = R.curry(function (message, x) {
  console.log(message);
  return x;
});

var toNumber = R.cond([[R.isNil, R.identity], [R.is(Number), R.identity], [R.T, function (x) {
  return Number(x);
}]]);

var toDate = function toDate(number) {
  return R.cond([[R.isNil, R.identity], [R.is(Object), R.identity], [R.T, function (x) {
    return new Date(x);
  }]])(number);
};

var isWithin = R.curry(function (min, max, value) {
  var isNumber = R.is(Number);
  return isNumber(min) && isNumber(max) && isNumber(value) && R.gte(value, min) && R.gte(max, value);
});

var isNotWithin = R.complement(isWithin);

var eqLength = R.eqProps('length');

var random = function random(min, max) {
  return Math.floor(Math.random() * (max - min + 1)) + min;
};

var sample = function sample(list) {
  if (R.isNil(list) || R.isEmpty(list)) {
    return null;
  }
  var min = 0;
  var max = list.length - 1;
  return list[random(min, max)];
};

var isNilOrEmpty = R.anyPass([R.isNil, R.isEmpty]);

var isNotNil = R.complement(R.isNil);

var isUndefined = function isUndefined(x) {
  return typeof x === 'undefined';
};

var mapKeys = R.curry(function (fn, obj) {
  return R.pipe(R.toPairs, R.map(R.adjust(fn, 0)), R.fromPairs)(obj);
});

var rangeStep = R.curry(function (step, start, stop) {
  if (step === 0) return null;
  if (step > 0 && stop < start) return null;
  if (step < 0 && stop > start) return null;
  return R.map(function (n) {
    return start + step * n;
  }, R.range(0, 1 + (stop - start) / step >>> 0));
});

var dotPath = R.curry(function (stringPath, obj) {
  var path = R.split('.', stringPath);
  return R.path(path, obj);
});

var startsWith = R.curry(function (subString, fullString) {
  return R.equals(subString, R.take(R.length(subString), fullString));
});

var endsWith = R.curry(function (subString, fullString) {
  return R.equals(subString, R.takeLast(R.length(subString), fullString));
});

var findByProp = R.curry(function (prop, value, source) {
  return R.find(R.propEq(prop, value))(source);
});

var findIndexByProp = R.curry(function (prop, value, source) {
  return R.findIndex(R.propEq(prop, value))(source);
});

var Ramdasauce = {
  log: log,
  trace: trace,
  toNumber: toNumber,
  toDate: toDate,
  isWithin: isWithin,
  isNotWithin: isNotWithin,
  eqLength: eqLength,
  random: random,
  sample: sample,
  isNilOrEmpty: isNilOrEmpty,
  isNotNil: isNotNil,
  isUndefined: isUndefined,
  mapKeys: mapKeys,
  rangeStep: rangeStep,
  dotPath: dotPath,
  startsWith: startsWith,
  endsWith: endsWith,
  findByProp: findByProp,
  findIndexByProp: findIndexByProp
};

module.exports = Ramdasauce;

module.exports = Ramdasauce;
}, 2448, null, "ramdasauce/dist/ramdasauce.js");
__d(/* format-json/index.js */function(global, require, module, exports) {module.exports = function () {
  function json(o) {
    return JSON.stringify(o);
  }
  var n = null,
      leadOp = '\n$2$1 ',
      tailOp = /\ ?([,\{\[])\n ( *)(?: )/gm,
      cuddle = /(^|[,\{\[] ?)\n */gm,
      format = { terse: json,
    plain: function plain(o, i) {
      return JSON.stringify(o, n, i == n ? 2 : i);
    },
    diffy: function diffy(o) {
      return format.plain(o).replace(tailOp, leadOp).replace(cuddle, '$1');
    },
    space: function space(o) {
      return JSON.stringify(o, null, 1).replace(/\n */g, ' ');
    },
    lines: function lines(o) {
      if ('object' !== typeof o || o == null) return format.terse(o);
      if ('[object Array]' === Object.prototype.toString.call(o)) return '[ ' + o.map(format.space).join('\n, ') + '\n]';
      var res = '',
          sep = '{ ',
          key;
      for (key in o) {
        res += sep + json(key) + ': ' + format.space(o[key]);
        sep = '\n, ';
      }
      return res + '\n}';
    }
  };
  return format;
}();
}, 2449, null, "format-json/index.js");
__d(/* UI/ignite/DevScreens/Styles/APITestingScreenStyles.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _reactNative = require(334           ); // 334 = react-native

var _DevTheme = require(2293          ); // 2293 = ../DevTheme/

exports.default = _reactNative.StyleSheet.create(babelHelpers.extends({}, _DevTheme.ApplicationStyles.screen));
}, 2450, null, "UI/ignite/DevScreens/Styles/APITestingScreenStyles.js");
__d(/* UI/ignite/DevScreens/ComponentExamplesScreen.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/home/chris/Desktop/UI/ignite/DevScreens/ComponentExamplesScreen.js';

var _react = require(604    ); // 604 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(334           ); // 334 = react-native

var _DevTheme = require(2293        ); // 2293 = ./DevTheme

var _ComponentExamplesScreenStyles = require(2452                                    ); // 2452 = ./Styles/ComponentExamplesScreenStyles

var _ComponentExamplesScreenStyles2 = babelHelpers.interopRequireDefault(_ComponentExamplesScreenStyles);

var _ExamplesRegistry = require(1982                                 ); // 1982 = ../../App/Services/ExamplesRegistry

var _ExamplesRegistry2 = babelHelpers.interopRequireDefault(_ExamplesRegistry);

var ComponentExamplesScreen = function (_React$Component) {
  babelHelpers.inherits(ComponentExamplesScreen, _React$Component);

  function ComponentExamplesScreen() {
    babelHelpers.classCallCheck(this, ComponentExamplesScreen);
    return babelHelpers.possibleConstructorReturn(this, (ComponentExamplesScreen.__proto__ || Object.getPrototypeOf(ComponentExamplesScreen)).apply(this, arguments));
  }

  babelHelpers.createClass(ComponentExamplesScreen, [{
    key: 'renderAndroidWarning',
    value: function renderAndroidWarning() {
      if (_reactNative.Platform.OS === 'android') {
        return _react2.default.createElement(
          _reactNative.Text,
          { style: _ComponentExamplesScreenStyles2.default.sectionText, __source: {
              fileName: _jsxFileName,
              lineNumber: 14
            }
          },
          'Android only: Animations are slow? You are probably running the app in debug mode. It will run more smoothly once your app will be built.'
        );
      }
      return null;
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      return _react2.default.createElement(
        _reactNative.View,
        { style: [_ComponentExamplesScreenStyles2.default.container, _ComponentExamplesScreenStyles2.default.mainContainer], __source: {
            fileName: _jsxFileName,
            lineNumber: 25
          }
        },
        _react2.default.createElement(_reactNative.Image, { source: _DevTheme.Images.background, style: _ComponentExamplesScreenStyles2.default.backgroundImage, resizeMode: 'stretch', __source: {
            fileName: _jsxFileName,
            lineNumber: 26
          }
        }),
        _react2.default.createElement(
          _reactNative.TouchableOpacity,
          { onPress: function onPress() {
              return _this2.props.navigation.goBack();
            }, style: {
              position: 'absolute',
              paddingTop: 30,
              paddingHorizontal: 5,
              zIndex: 10
            }, __source: {
              fileName: _jsxFileName,
              lineNumber: 27
            }
          },
          _react2.default.createElement(_reactNative.Image, { source: _DevTheme.Images.backButton, __source: {
              fileName: _jsxFileName,
              lineNumber: 33
            }
          })
        ),
        _react2.default.createElement(
          _reactNative.ScrollView,
          { showsVerticalScrollIndicator: false, style: _ComponentExamplesScreenStyles2.default.container, __source: {
              fileName: _jsxFileName,
              lineNumber: 35
            }
          },
          _react2.default.createElement(
            _reactNative.View,
            { style: { alignItems: 'center', paddingTop: 60 }, __source: {
                fileName: _jsxFileName,
                lineNumber: 36
              }
            },
            _react2.default.createElement(_reactNative.Image, { source: _DevTheme.Images.components, style: _ComponentExamplesScreenStyles2.default.logo, __source: {
                fileName: _jsxFileName,
                lineNumber: 37
              }
            }),
            _react2.default.createElement(
              _reactNative.Text,
              { style: _ComponentExamplesScreenStyles2.default.titleText, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 38
                }
              },
              'Components'
            )
          ),
          _react2.default.createElement(
            _reactNative.View,
            { style: _ComponentExamplesScreenStyles2.default.description, __source: {
                fileName: _jsxFileName,
                lineNumber: 40
              }
            },
            this.renderAndroidWarning(),
            _react2.default.createElement(
              _reactNative.Text,
              { style: _ComponentExamplesScreenStyles2.default.sectionText, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 42
                }
              },
              'Sometimes called a \'Style Guide\', or \'Pattern Library\', Examples Screen is filled with usage examples of fundamental components for a given application.  Use this merge-friendly way for your team to show/use/test components.  Examples are registered inside each component\'s file for quick changes and usage identification.'
            )
          ),
          _ExamplesRegistry2.default.renderComponentExamples()
        )
      );
    }
  }]);
  return ComponentExamplesScreen;
}(_react2.default.Component);

exports.default = ComponentExamplesScreen;
}, 2451, null, "UI/ignite/DevScreens/ComponentExamplesScreen.js");
__d(/* UI/ignite/DevScreens/Styles/ComponentExamplesScreenStyles.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _reactNative = require(334           ); // 334 = react-native

var _DevTheme = require(2293          ); // 2293 = ../DevTheme/

exports.default = _reactNative.StyleSheet.create(babelHelpers.extends({}, _DevTheme.ApplicationStyles.screen, {
  sectionText: babelHelpers.extends({}, _DevTheme.Fonts.base, {
    color: _DevTheme.Colors.text,
    fontSize: 12,
    lineHeight: _DevTheme.Metrics.doubleBaseMargin + 5
  }),
  mainContainer: {
    paddingHorizontal: _DevTheme.Metrics.doubleBaseMargin
  },
  description: {
    marginVertical: _DevTheme.Metrics.doubleSection
  }
}));
}, 2452, null, "UI/ignite/DevScreens/Styles/ComponentExamplesScreenStyles.js");
__d(/* UI/ignite/DevScreens/DeviceInfoScreen.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/home/chris/Desktop/UI/ignite/DevScreens/DeviceInfoScreen.js';

var _react = require(604    ); // 604 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(334           ); // 334 = react-native

var _reactNativeDeviceInfo = require(2454                      ); // 2454 = react-native-device-info

var _reactNativeDeviceInfo2 = babelHelpers.interopRequireDefault(_reactNativeDeviceInfo);

var _DevTheme = require(2293        ); // 2293 = ./DevTheme

var _DeviceInfoScreenStyles = require(2455                             ); // 2455 = ./Styles/DeviceInfoScreenStyles

var _DeviceInfoScreenStyles2 = babelHelpers.interopRequireDefault(_DeviceInfoScreenStyles);

var HARDWARE_DATA = [{ title: 'Device Manufacturer', info: _reactNativeDeviceInfo2.default.getManufacturer() }, { title: 'Device Name', info: _reactNativeDeviceInfo2.default.getDeviceName() }, { title: 'Device Model', info: _reactNativeDeviceInfo2.default.getModel() }, { title: 'Device Unique ID', info: _reactNativeDeviceInfo2.default.getUniqueID() }, { title: 'Device Locale', info: _reactNativeDeviceInfo2.default.getDeviceLocale() }, { title: 'Device Country', info: _reactNativeDeviceInfo2.default.getDeviceCountry() }, { title: 'User Agent', info: _reactNativeDeviceInfo2.default.getUserAgent() }, { title: 'Screen Width', info: _DevTheme.Metrics.screenWidth }, { title: 'Screen Height', info: _DevTheme.Metrics.screenHeight }];

var OS_DATA = [{ title: 'Device System Name', info: _reactNativeDeviceInfo2.default.getSystemName() }, { title: 'Device ID', info: _reactNativeDeviceInfo2.default.getDeviceId() }, { title: 'Device Version', info: _reactNativeDeviceInfo2.default.getSystemVersion() }];

var APP_DATA = [{ title: 'Bundle Id', info: _reactNativeDeviceInfo2.default.getBundleId() }, { title: 'Build Number', info: _reactNativeDeviceInfo2.default.getBuildNumber() }, { title: 'App Version', info: _reactNativeDeviceInfo2.default.getVersion() }, { title: 'App Version (Readable)', info: _reactNativeDeviceInfo2.default.getReadableVersion() }];

var DeviceInfoScreen = function (_React$Component) {
  babelHelpers.inherits(DeviceInfoScreen, _React$Component);

  function DeviceInfoScreen(props) {
    babelHelpers.classCallCheck(this, DeviceInfoScreen);

    var _this = babelHelpers.possibleConstructorReturn(this, (DeviceInfoScreen.__proto__ || Object.getPrototypeOf(DeviceInfoScreen)).call(this, props));

    _this.setConnected = function (isConnected) {
      _this.setState({ isConnected: isConnected });
    };

    _this.setConnectionInfo = function (connectionInfo) {
      _this.setState({ connectionInfo: connectionInfo });
    };

    _this.updateConnectionInfoHistory = function (connectionInfo) {
      var connectionInfoHistory = _this.state.connectionInfoHistory.slice();
      connectionInfoHistory.push(connectionInfo);
      _this.setState({ connectionInfoHistory: connectionInfoHistory });
    };

    _this.state = {
      isConnected: false,
      connectionInfo: null,
      connectionInfoHistory: []
    };
    return _this;
  }

  babelHelpers.createClass(DeviceInfoScreen, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      _reactNative.NetInfo.isConnected.addEventListener('connectionChange', this.setConnected);
      _reactNative.NetInfo.isConnected.fetch().done(this.setConnected);
      _reactNative.NetInfo.addEventListener('connectionChange', this.setConnectionInfo);
      _reactNative.NetInfo.getConnectionInfo().done(this.setConnectionInfo);
      _reactNative.NetInfo.addEventListener('connectionChange', this.updateConnectionInfoHistory);
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      _reactNative.NetInfo.isConnected.removeEventListener('connectionChange', this.setConnected);
      _reactNative.NetInfo.removeEventListener('connectionChange', this.setConnectionInfo);
      _reactNative.NetInfo.removeEventListener('connectionChange', this.updateConnectionInfoHistory);
    }
  }, {
    key: 'netInfo',
    value: function netInfo() {
      return [{ title: 'Connection', info: this.state.isConnected ? 'Online' : 'Offline' }, { title: 'Connection Info', info: JSON.stringify(this.state.connectionInfo) }, { title: 'Connection Info History', info: JSON.stringify(this.state.connectionInfoHistory) }];
    }
  }, {
    key: 'renderCard',
    value: function renderCard(cardTitle, rowData) {
      return _react2.default.createElement(
        _reactNative.View,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 93
          }
        },
        _react2.default.createElement(
          _reactNative.View,
          { style: _DeviceInfoScreenStyles2.default.sectionHeaderContainer, __source: {
              fileName: _jsxFileName,
              lineNumber: 94
            }
          },
          _react2.default.createElement(
            _reactNative.Text,
            { style: _DeviceInfoScreenStyles2.default.sectionHeader, __source: {
                fileName: _jsxFileName,
                lineNumber: 95
              }
            },
            cardTitle.toUpperCase()
          )
        ),
        this.renderRows(rowData)
      );
    }
  }, {
    key: 'renderRows',
    value: function renderRows(rowData) {
      return rowData.map(function (cell) {
        var title = cell.title,
            info = cell.info;

        return _react2.default.createElement(
          _reactNative.View,
          { key: title, style: _DeviceInfoScreenStyles2.default.rowContainer, __source: {
              fileName: _jsxFileName,
              lineNumber: 107
            }
          },
          _react2.default.createElement(
            _reactNative.View,
            { style: _DeviceInfoScreenStyles2.default.rowLabelContainer, __source: {
                fileName: _jsxFileName,
                lineNumber: 108
              }
            },
            _react2.default.createElement(
              _reactNative.Text,
              { style: _DeviceInfoScreenStyles2.default.rowLabel, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 109
                }
              },
              title
            )
          ),
          _react2.default.createElement(
            _reactNative.View,
            { style: _DeviceInfoScreenStyles2.default.rowInfoContainer, __source: {
                fileName: _jsxFileName,
                lineNumber: 111
              }
            },
            _react2.default.createElement(
              _reactNative.Text,
              { style: _DeviceInfoScreenStyles2.default.rowInfo, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 112
                }
              },
              info
            )
          )
        );
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      return _react2.default.createElement(
        _reactNative.View,
        { style: _DeviceInfoScreenStyles2.default.mainContainer, __source: {
            fileName: _jsxFileName,
            lineNumber: 121
          }
        },
        _react2.default.createElement(_reactNative.Image, { source: _DevTheme.Images.background, style: _DeviceInfoScreenStyles2.default.backgroundImage, resizeMode: 'stretch', __source: {
            fileName: _jsxFileName,
            lineNumber: 122
          }
        }),
        _react2.default.createElement(
          _reactNative.TouchableOpacity,
          { onPress: function onPress() {
              return _this2.props.navigation.goBack();
            }, style: {
              position: 'absolute',
              paddingTop: 30,
              paddingHorizontal: 5,
              zIndex: 10
            }, __source: {
              fileName: _jsxFileName,
              lineNumber: 123
            }
          },
          _react2.default.createElement(_reactNative.Image, { source: _DevTheme.Images.backButton, __source: {
              fileName: _jsxFileName,
              lineNumber: 129
            }
          })
        ),
        _react2.default.createElement(
          _reactNative.ScrollView,
          { style: _DeviceInfoScreenStyles2.default.container, __source: {
              fileName: _jsxFileName,
              lineNumber: 131
            }
          },
          _react2.default.createElement(
            _reactNative.View,
            { style: { alignItems: 'center', paddingTop: 60 }, __source: {
                fileName: _jsxFileName,
                lineNumber: 132
              }
            },
            _react2.default.createElement(_reactNative.Image, { source: _DevTheme.Images.deviceInfo, style: _DeviceInfoScreenStyles2.default.logo, __source: {
                fileName: _jsxFileName,
                lineNumber: 133
              }
            }),
            _react2.default.createElement(
              _reactNative.Text,
              { style: _DeviceInfoScreenStyles2.default.titleText, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 134
                }
              },
              'Device Info'
            )
          ),
          _react2.default.createElement(
            _reactNative.View,
            { style: _DeviceInfoScreenStyles2.default.section, __source: {
                fileName: _jsxFileName,
                lineNumber: 136
              }
            },
            _react2.default.createElement(
              _reactNative.Text,
              { style: _DeviceInfoScreenStyles2.default.sectionText, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 137
                }
              },
              'Dedicated to identifying specifics of the device.  All info useful for identifying outlying behaviour specific to a device.'
            )
          ),
          _react2.default.createElement(
            _reactNative.View,
            { style: { padding: 10 }, __source: {
                fileName: _jsxFileName,
                lineNumber: 141
              }
            },
            this.renderCard('Device Hardware', HARDWARE_DATA),
            this.renderCard('Device OS', OS_DATA),
            this.renderCard('App Info', APP_DATA),
            this.renderCard('Net Info', this.netInfo())
          )
        )
      );
    }
  }]);
  return DeviceInfoScreen;
}(_react2.default.Component);

exports.default = DeviceInfoScreen;
}, 2453, null, "UI/ignite/DevScreens/DeviceInfoScreen.js");
__d(/* react-native-device-info/deviceinfo.js */function(global, require, module, exports) {

var RNDeviceInfo = require(334           ).NativeModules.RNDeviceInfo; // 334 = react-native

module.exports = {
  getUniqueID: function getUniqueID() {
    return RNDeviceInfo.uniqueId;
  },
  getInstanceID: function getInstanceID() {
    return RNDeviceInfo.instanceId;
  },
  getDeviceId: function getDeviceId() {
    return RNDeviceInfo.deviceId;
  },
  getManufacturer: function getManufacturer() {
    return RNDeviceInfo.systemManufacturer;
  },
  getModel: function getModel() {
    return RNDeviceInfo.model;
  },
  getBrand: function getBrand() {
    return RNDeviceInfo.brand;
  },
  getSystemName: function getSystemName() {
    return RNDeviceInfo.systemName;
  },
  getSystemVersion: function getSystemVersion() {
    return RNDeviceInfo.systemVersion;
  },
  getBundleId: function getBundleId() {
    return RNDeviceInfo.bundleId;
  },
  getBuildNumber: function getBuildNumber() {
    return RNDeviceInfo.buildNumber;
  },
  getVersion: function getVersion() {
    return RNDeviceInfo.appVersion;
  },
  getReadableVersion: function getReadableVersion() {
    return RNDeviceInfo.appVersion + "." + RNDeviceInfo.buildNumber;
  },
  getDeviceName: function getDeviceName() {
    return RNDeviceInfo.deviceName;
  },
  getUserAgent: function getUserAgent() {
    return RNDeviceInfo.userAgent;
  },
  getDeviceLocale: function getDeviceLocale() {
    return RNDeviceInfo.deviceLocale;
  },
  getDeviceCountry: function getDeviceCountry() {
    return RNDeviceInfo.deviceCountry;
  },
  getTimezone: function getTimezone() {
    return RNDeviceInfo.timezone;
  },
  isEmulator: function isEmulator() {
    return RNDeviceInfo.isEmulator;
  },
  isTablet: function isTablet() {
    return RNDeviceInfo.isTablet;
  },
  isPinOrFingerprintSet: function isPinOrFingerprintSet() {
    return RNDeviceInfo.isPinOrFingerprintSet;
  }
};
}, 2454, null, "react-native-device-info/deviceinfo.js");
__d(/* UI/ignite/DevScreens/Styles/DeviceInfoScreenStyles.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _reactNative = require(334           ); // 334 = react-native

var _DevTheme = require(2293          ); // 2293 = ../DevTheme/

exports.default = _reactNative.StyleSheet.create(babelHelpers.extends({}, _DevTheme.ApplicationStyles.screen, {
  sectionHeaderContainer: babelHelpers.extends({}, _DevTheme.ApplicationStyles.darkLabelContainer),
  sectionHeader: babelHelpers.extends({}, _DevTheme.ApplicationStyles.darkLabel, {
    paddingTop: 50
  }),
  cardTitle: {
    alignSelf: 'center',
    fontSize: _DevTheme.Fonts.size.regular,
    fontWeight: 'bold',
    marginVertical: _DevTheme.Metrics.baseMargin,
    color: _DevTheme.Colors.snow
  },
  cardContainer: {
    backgroundColor: _DevTheme.Colors.ember,
    borderColor: 'black',
    borderWidth: 1,
    borderRadius: 2,
    shadowColor: _DevTheme.Colors.panther,
    shadowOffset: {
      height: 7,
      width: 7
    },
    shadowRadius: 2,
    paddingBottom: _DevTheme.Metrics.baseMargin,
    margin: _DevTheme.Metrics.baseMargin
  },
  rowContainer: {
    flexDirection: 'row',
    borderColor: _DevTheme.Colors.windowTint,
    borderWidth: 0.5,
    borderRadius: 2,
    marginHorizontal: _DevTheme.Metrics.baseMargin
  },
  rowLabelContainer: {
    flex: 1,
    justifyContent: 'center',
    backgroundColor: _DevTheme.Colors.snow
  },
  rowLabel: {
    fontWeight: 'bold',
    fontSize: _DevTheme.Fonts.size.medium,
    marginVertical: _DevTheme.Metrics.baseMargin,
    marginLeft: _DevTheme.Metrics.baseMargin
  },
  rowInfoContainer: {
    flex: 2,
    justifyContent: 'center',
    backgroundColor: _DevTheme.Colors.silver
  },
  rowInfo: {
    fontSize: _DevTheme.Fonts.size.regular,
    margin: _DevTheme.Metrics.baseMargin
  }
}));
}, 2455, null, "UI/ignite/DevScreens/Styles/DeviceInfoScreenStyles.js");
__d(/* UI/ignite/DevScreens/PluginExamplesScreen.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/home/chris/Desktop/UI/ignite/DevScreens/PluginExamplesScreen.js';

var _react = require(604    ); // 604 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(334           ); // 334 = react-native

var _reactNavigation = require(1884              ); // 1884 = react-navigation

var _DevTheme = require(2293        ); // 2293 = ./DevTheme

var _ExamplesRegistry = require(1982                                 ); // 1982 = ../../App/Services/ExamplesRegistry

var _ExamplesRegistry2 = babelHelpers.interopRequireDefault(_ExamplesRegistry);

require(2457                                         ); // 2457 = ../Examples/Components/animatableExample.js

require(2484                                   ); // 2484 = ../Examples/Components/i18nExample.js

require(2485                                     ); // 2485 = ../Examples/Components/vectorExample.js

var _PluginExamplesScreenStyles = require(2645                                 ); // 2645 = ./Styles/PluginExamplesScreenStyles

var _PluginExamplesScreenStyles2 = babelHelpers.interopRequireDefault(_PluginExamplesScreenStyles);

var PluginExamplesScreen = function (_React$Component) {
  babelHelpers.inherits(PluginExamplesScreen, _React$Component);

  function PluginExamplesScreen() {
    babelHelpers.classCallCheck(this, PluginExamplesScreen);
    return babelHelpers.possibleConstructorReturn(this, (PluginExamplesScreen.__proto__ || Object.getPrototypeOf(PluginExamplesScreen)).apply(this, arguments));
  }

  babelHelpers.createClass(PluginExamplesScreen, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      return _react2.default.createElement(
        _reactNative.View,
        { style: _PluginExamplesScreenStyles2.default.mainContainer, __source: {
            fileName: _jsxFileName,
            lineNumber: 21
          }
        },
        _react2.default.createElement(_reactNative.Image, { source: _DevTheme.Images.background, style: _PluginExamplesScreenStyles2.default.backgroundImage, resizeMode: 'stretch', __source: {
            fileName: _jsxFileName,
            lineNumber: 22
          }
        }),
        _react2.default.createElement(
          _reactNative.TouchableOpacity,
          { onPress: function onPress() {
              return _this2.props.navigation.goBack(null);
            }, style: {
              position: 'absolute',
              paddingTop: 30,
              paddingHorizontal: 5,
              zIndex: 10
            }, __source: {
              fileName: _jsxFileName,
              lineNumber: 23
            }
          },
          _react2.default.createElement(_reactNative.Image, { source: _DevTheme.Images.backButton, __source: {
              fileName: _jsxFileName,
              lineNumber: 29
            }
          })
        ),
        _react2.default.createElement(
          _reactNative.ScrollView,
          { style: _PluginExamplesScreenStyles2.default.container, __source: {
              fileName: _jsxFileName,
              lineNumber: 31
            }
          },
          _react2.default.createElement(
            _reactNative.View,
            { style: { alignItems: 'center', paddingTop: 60 }, __source: {
                fileName: _jsxFileName,
                lineNumber: 32
              }
            },
            _react2.default.createElement(_reactNative.Image, { source: _DevTheme.Images.usageExamples, style: _PluginExamplesScreenStyles2.default.logo, __source: {
                fileName: _jsxFileName,
                lineNumber: 33
              }
            }),
            _react2.default.createElement(
              _reactNative.Text,
              { style: _PluginExamplesScreenStyles2.default.titleText, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 34
                }
              },
              'Plugin Examples'
            )
          ),
          _react2.default.createElement(
            _reactNative.View,
            { style: _PluginExamplesScreenStyles2.default.section, __source: {
                fileName: _jsxFileName,
                lineNumber: 36
              }
            },
            _react2.default.createElement(
              _reactNative.Text,
              { style: _PluginExamplesScreenStyles2.default.sectionText, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 37
                }
              },
              'The Plugin Examples screen is a playground for 3rd party libs and logic proofs. Items on this screen can be composed of multiple components working in concert.  Functionality demos of libs and practices'
            )
          ),
          _ExamplesRegistry2.default.renderPluginExamples(),
          _react2.default.createElement(_reactNative.View, { style: _PluginExamplesScreenStyles2.default.screenButtons, __source: {
              fileName: _jsxFileName,
              lineNumber: 45
            }
          })
        )
      );
    }
  }]);
  return PluginExamplesScreen;
}(_react2.default.Component);

exports.default = (0, _reactNavigation.StackNavigator)({
  PluginExamplesScreen: { screen: PluginExamplesScreen }
}, {
  cardStyle: {
    opacity: 1,
    backgroundColor: '#3e243f'
  },
  headerMode: 'none',
  initialRouteName: 'PluginExamplesScreen'
});
}, 2456, null, "UI/ignite/DevScreens/PluginExamplesScreen.js");
__d(/* UI/ignite/Examples/Components/animatableExample.js */function(global, require, module, exports) {var _jsxFileName = '/home/chris/Desktop/UI/ignite/Examples/Components/animatableExample.js';

var _react = require(604    ); // 604 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(334           ); // 334 = react-native

var _ExamplesRegistry = require(1982                                    ); // 1982 = ../../../App/Services/ExamplesRegistry

var _ExamplesRegistry2 = babelHelpers.interopRequireDefault(_ExamplesRegistry);

var _reactNativeAnimatable = require(2458                     ); // 2458 = react-native-animatable

var Animatable = babelHelpers.interopRequireWildcard(_reactNativeAnimatable);

_ExamplesRegistry2.default.addPluginExample('Animatable', function () {
  return _react2.default.createElement(
    _reactNative.View,
    {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 10
      }
    },
    _react2.default.createElement(
      Animatable.View,
      {
        animation: 'fadeIn',
        iterationCount: 'infinite',
        direction: 'alternate',
        style: [styles.button, styles.fadeInButton],
        __source: {
          fileName: _jsxFileName,
          lineNumber: 11
        }
      },
      _react2.default.createElement(
        _reactNative.Text,
        { style: styles.fadeInButtonText, __source: {
            fileName: _jsxFileName,
            lineNumber: 17
          }
        },
        'Faaaaaddddeeeeddd'
      )
    ),
    _react2.default.createElement(
      Animatable.View,
      {
        style: [styles.button, styles.jelloButton],
        animation: 'jello',
        iterationCount: 'infinite', __source: {
          fileName: _jsxFileName,
          lineNumber: 19
        }
      },
      _react2.default.createElement(
        _reactNative.Text,
        { style: styles.jelloButtonText, __source: {
            fileName: _jsxFileName,
            lineNumber: 23
          }
        },
        'Jelloo00000000'
      )
    ),
    _react2.default.createElement(
      Animatable.View,
      {
        animation: 'pulse',
        iterationCount: 'infinite',
        style: [styles.button, styles.pulseButton], __source: {
          fileName: _jsxFileName,
          lineNumber: 25
        }
      },
      _react2.default.createElement(
        _reactNative.Text,
        { style: styles.pulseButtonText, __source: {
            fileName: _jsxFileName,
            lineNumber: 29
          }
        },
        'puLsepuLsepuLse'
      )
    )
  );
});

var styles = _reactNative.StyleSheet.create({
  button: {
    margin: 10,
    height: 50,
    justifyContent: 'center',
    alignItems: 'center'
  },
  fadeInButton: {
    backgroundColor: '#ff3b3a'
  },
  fadeInButtonText: {
    color: 'white'
  },
  jelloButton: {
    backgroundColor: 'white'
  },
  pulseButton: {
    backgroundColor: '#ffc700'
  },
  pulseButtonText: {
    color: 'white'
  }
});
}, 2457, null, "UI/ignite/Examples/Components/animatableExample.js");
__d(/* react-native-animatable/index.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.initializeRegistryWithDefinitions = exports.registerAnimation = exports.createAnimation = exports.Image = exports.Text = exports.View = exports.createAnimatableComponent = undefined;

var _createAnimation = require(2459               ); // 2459 = ./createAnimation

Object.defineProperty(exports, 'createAnimation', {
  enumerable: true,
  get: function get() {
    return babelHelpers.interopRequireDefault(_createAnimation).default;
  }
});

var _registry = require(2461        ); // 2461 = ./registry

Object.defineProperty(exports, 'registerAnimation', {
  enumerable: true,
  get: function get() {
    return _registry.registerAnimation;
  }
});
Object.defineProperty(exports, 'initializeRegistryWithDefinitions', {
  enumerable: true,
  get: function get() {
    return _registry.initializeRegistryWithDefinitions;
  }
});

var _reactNative = require(334           ); // 334 = react-native

var _createAnimatableComponent = require(2462                         ); // 2462 = ./createAnimatableComponent

var _createAnimatableComponent2 = babelHelpers.interopRequireDefault(_createAnimatableComponent);

var _definitions = require(2472           ); // 2472 = ./definitions

var ANIMATION_DEFINITIONS = babelHelpers.interopRequireWildcard(_definitions);


(0, _registry.initializeRegistryWithDefinitions)(ANIMATION_DEFINITIONS);

var createAnimatableComponent = exports.createAnimatableComponent = _createAnimatableComponent2.default;
var View = exports.View = (0, _createAnimatableComponent2.default)(_reactNative.View);
var Text = exports.Text = (0, _createAnimatableComponent2.default)(_reactNative.Text);
var Image = exports.Image = (0, _createAnimatableComponent2.default)(_reactNative.Image);
}, 2458, null, "react-native-animatable/index.js");
__d(/* react-native-animatable/createAnimation.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createAnimation;

var _flattenStyle = require(2460            ); // 2460 = ./flattenStyle

var _flattenStyle2 = babelHelpers.interopRequireDefault(_flattenStyle);

function compareNumbers(a, b) {
  return a - b;
}

function notNull(value) {
  return value !== null;
}

function parsePosition(value) {
  if (value === 'from') {
    return 0;
  } else if (value === 'to') {
    return 1;
  }
  var parsed = parseFloat(value, 10);
  if (isNaN(parsed) || parsed < 0 || parsed > 1) {
    return null;
  }
  return parsed;
}

var cache = {};

function createAnimation(definition) {
  var cacheKey = JSON.stringify(definition);
  if (cache[cacheKey]) {
    return cache[cacheKey];
  }

  var positions = Object.keys(definition).map(parsePosition).filter(notNull);
  positions.sort(compareNumbers);

  if (positions.length < 2) {
    throw new Error('Animation definitions must have at least two values.');
  }

  var compiled = {};
  if (definition.easing) {
    compiled.easing = definition.easing;
  }
  if (definition.style) {
    compiled.style = definition.style;
  }

  var _loop = function _loop(i) {
    var position = positions[i];
    var keyframe = definition[position];
    if (!keyframe) {
      if (position === 0) {
        keyframe = definition.from;
      } else if (position === 1) {
        keyframe = definition.to;
      }
    }
    if (!keyframe) {
      throw new Error('Missing animation keyframe, this should not happen');
    }

    keyframe = (0, _flattenStyle2.default)(keyframe);
    Object.keys(keyframe).forEach(function (key) {
      if (!(key in compiled)) {
        compiled[key] = {
          inputRange: [],
          outputRange: []
        };
      }
      compiled[key].inputRange.push(position);
      compiled[key].outputRange.push(keyframe[key]);
    });
  };

  for (var i = 0; i < positions.length; i += 1) {
    _loop(i);
  }

  cache[cacheKey] = compiled;

  return compiled;
}
}, 2459, null, "react-native-animatable/createAnimation.js");
__d(/* react-native-animatable/flattenStyle.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = flattenStyle;

var _reactNative = require(334           ); // 334 = react-native

function flattenStyle(style) {
  var flatStyle = babelHelpers.extends({}, _reactNative.StyleSheet.flatten(style));
  if (flatStyle.transform) {
    flatStyle.transform.forEach(function (transform) {
      var key = Object.keys(transform)[0];
      flatStyle[key] = transform[key];
    });
    delete flatStyle.transform;
  }
  return flatStyle;
}
}, 2460, null, "react-native-animatable/flattenStyle.js");
__d(/* react-native-animatable/registry.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.registerAnimation = registerAnimation;
exports.getAnimationByName = getAnimationByName;
exports.getAnimationNames = getAnimationNames;
exports.initializeRegistryWithDefinitions = initializeRegistryWithDefinitions;

var _createAnimation = require(2459               ); // 2459 = ./createAnimation

var _createAnimation2 = babelHelpers.interopRequireDefault(_createAnimation);

var animationRegistry = {};

function registerAnimation(animationName, animation) {
  animationRegistry[animationName] = animation;
}

function getAnimationByName(animationName) {
  return animationRegistry[animationName];
}

function getAnimationNames() {
  return Object.keys(animationRegistry);
}

function initializeRegistryWithDefinitions(definitions) {
  Object.keys(definitions).forEach(function (animationName) {
    registerAnimation(animationName, (0, _createAnimation2.default)(definitions[animationName]));
  });
}
}, 2461, null, "react-native-animatable/registry.js");
__d(/* react-native-animatable/createAnimatableComponent.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native-animatable/createAnimatableComponent.js';
exports.default = createAnimatableComponent;

var _react = require(604    ); // 604 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(2463        ); // 2463 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactNative = require(334           ); // 334 = react-native

var _wrapStyleTransforms = require(2468                   ); // 2468 = ./wrapStyleTransforms

var _wrapStyleTransforms2 = babelHelpers.interopRequireDefault(_wrapStyleTransforms);

var _getStyleValues = require(2469              ); // 2469 = ./getStyleValues

var _getStyleValues2 = babelHelpers.interopRequireDefault(_getStyleValues);

var _flattenStyle = require(2460            ); // 2460 = ./flattenStyle

var _flattenStyle2 = babelHelpers.interopRequireDefault(_flattenStyle);

var _createAnimation = require(2459               ); // 2459 = ./createAnimation

var _createAnimation2 = babelHelpers.interopRequireDefault(_createAnimation);

var _registry = require(2461        ); // 2461 = ./registry

var _easing = require(2471      ); // 2471 = ./easing

var _easing2 = babelHelpers.interopRequireDefault(_easing);

var INTERPOLATION_STYLE_PROPERTIES = ['rotate', 'rotateX', 'rotateY', 'rotateZ', 'skewX', 'skewY', 'transformMatrix', 'backgroundColor', 'borderColor', 'borderTopColor', 'borderRightColor', 'borderBottomColor', 'borderLeftColor', 'shadowColor', 'color', 'textDecorationColor', 'tintColor'];

var ZERO_CLAMPED_STYLE_PROPERTIES = ['width', 'height'];

function omit(keys, source) {
  var filtered = {};
  Object.keys(source).forEach(function (key) {
    if (keys.indexOf(key) === -1) {
      filtered[key] = source[key];
    }
  });
  return filtered;
}

function deepEquals(a, b) {
  return a === b || JSON.stringify(a) === JSON.stringify(b);
}

function getAnimationTarget(iteration, direction) {
  switch (direction) {
    case 'reverse':
      return 0;
    case 'alternate':
      return iteration % 2 ? 0 : 1;
    case 'alternate-reverse':
      return iteration % 2 ? 1 : 0;
    case 'normal':
    default:
      return 1;
  }
}

function getAnimationOrigin(iteration, direction) {
  return getAnimationTarget(iteration, direction) ? 0 : 1;
}

function getCompiledAnimation(animation) {
  if (typeof animation === 'string') {
    var compiledAnimation = (0, _registry.getAnimationByName)(animation);
    if (!compiledAnimation) {
      throw new Error('No animation registred by the name of ' + animation);
    }
    return compiledAnimation;
  }
  return (0, _createAnimation2.default)(animation);
}

function makeInterpolatedStyle(compiledAnimation, animationValue) {
  var style = {};
  Object.keys(compiledAnimation).forEach(function (key) {
    if (key === 'style') {
      babelHelpers.extends(style, compiledAnimation.style);
    } else if (key !== 'easing') {
      style[key] = animationValue.interpolate(compiledAnimation[key]);
    }
  });
  return (0, _wrapStyleTransforms2.default)(style);
}

function transitionToValue(transitionValue, toValue, duration, easing) {
  var useNativeDriver = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
  var delay = arguments[5];

  if (duration || easing || delay) {
    _reactNative.Animated.timing(transitionValue, {
      toValue: toValue,
      delay: delay,
      duration: duration || 1000,
      easing: typeof easing === 'function' ? easing : _easing2.default[easing || 'ease'],
      useNativeDriver: useNativeDriver
    }).start();
  } else {
    _reactNative.Animated.spring(transitionValue, { toValue: toValue, useNativeDriver: useNativeDriver }).start();
  }
}

function createAnimatableComponent(WrappedComponent) {
  var _class, _temp, _initialiseProps;

  var wrappedComponentName = WrappedComponent.displayName || WrappedComponent.name || 'Component';

  var Animatable = _reactNative.Animated.createAnimatedComponent(WrappedComponent);

  return _temp = _class = function (_Component) {
    babelHelpers.inherits(AnimatableComponent, _Component);

    function AnimatableComponent(props) {
      babelHelpers.classCallCheck(this, AnimatableComponent);

      var _this = babelHelpers.possibleConstructorReturn(this, (AnimatableComponent.__proto__ || Object.getPrototypeOf(AnimatableComponent)).call(this, props));

      _initialiseProps.call(_this);

      var animationValue = new _reactNative.Animated.Value(getAnimationOrigin(0, _this.props.direction));
      var animationStyle = {};
      var compiledAnimation = {};
      if (props.animation) {
        compiledAnimation = getCompiledAnimation(props.animation);
        animationStyle = makeInterpolatedStyle(compiledAnimation, animationValue);
      }
      _this.state = {
        animationValue: animationValue,
        animationStyle: animationStyle,
        compiledAnimation: compiledAnimation,
        transitionStyle: {},
        transitionValues: {},
        currentTransitionValues: {}
      };

      if (props.transition) {
        _this.state = babelHelpers.extends({}, _this.state, _this.initializeTransitionState(props.transition));
      }
      _this.delayTimer = null;

      (0, _registry.getAnimationNames)().forEach(function (animationName) {
        if (!(animationName in _this)) {
          _this[animationName] = _this.animate.bind(_this, animationName);
        }
      });
      return _this;
    }

    babelHelpers.createClass(AnimatableComponent, [{
      key: 'initializeTransitionState',
      value: function initializeTransitionState(transitionKeys) {
        var transitionValues = {};
        var styleValues = {};

        var currentTransitionValues = (0, _getStyleValues2.default)(transitionKeys, this.props.style);
        Object.keys(currentTransitionValues).forEach(function (key) {
          var value = currentTransitionValues[key];
          if (INTERPOLATION_STYLE_PROPERTIES.indexOf(key) !== -1) {
            transitionValues[key] = new _reactNative.Animated.Value(0);
            styleValues[key] = value;
          } else {
            var animationValue = new _reactNative.Animated.Value(value);
            transitionValues[key] = animationValue;
            styleValues[key] = animationValue;
          }
        });

        return {
          currentTransitionValues: currentTransitionValues,
          transitionStyle: styleValues,
          transitionValues: transitionValues
        };
      }
    }, {
      key: 'getTransitionState',
      value: function getTransitionState(keys) {
        var _this2 = this;

        var transitionKeys = typeof keys === 'string' ? [keys] : keys;
        var _state = this.state,
            transitionValues = _state.transitionValues,
            currentTransitionValues = _state.currentTransitionValues,
            transitionStyle = _state.transitionStyle;

        var missingKeys = transitionKeys.filter(function (key) {
          return !_this2.state.transitionValues[key];
        });
        if (missingKeys.length) {
          var transitionState = this.initializeTransitionState(missingKeys);
          transitionValues = babelHelpers.extends({}, transitionValues, transitionState.transitionValues);
          currentTransitionValues = babelHelpers.extends({}, currentTransitionValues, transitionState.currentTransitionValues);
          transitionStyle = babelHelpers.extends({}, transitionStyle, transitionState.transitionStyle);
        }
        return { transitionValues: transitionValues, currentTransitionValues: currentTransitionValues, transitionStyle: transitionStyle };
      }
    }, {
      key: 'setNativeProps',
      value: function setNativeProps(nativeProps) {
        if (this.ref) {
          this.ref.setNativeProps(nativeProps);
        }
      }
    }, {
      key: 'componentDidMount',
      value: function componentDidMount() {
        var _this3 = this;

        var _props = this.props,
            animation = _props.animation,
            duration = _props.duration,
            delay = _props.delay,
            onAnimationBegin = _props.onAnimationBegin,
            onAnimationEnd = _props.onAnimationEnd;

        if (animation) {
          var startAnimation = function startAnimation() {
            onAnimationBegin();
            _this3.startAnimation(duration, 0, onAnimationEnd);
            _this3.delayTimer = null;
          };
          if (delay) {
            this.delayTimer = setTimeout(startAnimation, delay);
          } else {
            startAnimation();
          }
        }
      }
    }, {
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(props) {
        var animation = props.animation,
            delay = props.delay,
            duration = props.duration,
            easing = props.easing,
            transition = props.transition,
            onAnimationBegin = props.onAnimationBegin,
            onAnimationEnd = props.onAnimationEnd;


        if (transition) {
          var values = (0, _getStyleValues2.default)(transition, props.style);
          this.transitionTo(values, duration, easing, delay);
        } else if (!deepEquals(animation, this.props.animation)) {
          if (animation) {
            if (this.delayTimer) {
              this.setAnimation(animation);
            } else {
              onAnimationBegin();
              this.animate(animation, duration).then(onAnimationEnd);
            }
          } else {
            this.stopAnimation();
          }
        }
      }
    }, {
      key: 'componentWillUnmount',
      value: function componentWillUnmount() {
        if (this.delayTimer) {
          clearTimeout(this.delayTimer);
        }
      }
    }, {
      key: 'setAnimation',
      value: function setAnimation(animation, callback) {
        var compiledAnimation = getCompiledAnimation(animation);
        var animationStyle = makeInterpolatedStyle(compiledAnimation, this.state.animationValue);
        this.setState({ animationStyle: animationStyle, compiledAnimation: compiledAnimation }, callback);
      }
    }, {
      key: 'animate',
      value: function animate(animation, duration) {
        var _this4 = this;

        return new Promise(function (resolve) {
          _this4.setAnimation(animation, function () {
            _this4.startAnimation(duration, 0, resolve);
          });
        });
      }
    }, {
      key: 'stopAnimation',
      value: function stopAnimation() {
        this.setState({
          scheduledAnimation: false,
          animationStyle: {}
        });
        this.state.animationValue.stopAnimation();
        if (this.delayTimer) {
          clearTimeout(this.delayTimer);
          this.delayTimer = null;
        }
      }
    }, {
      key: 'startAnimation',
      value: function startAnimation(duration, iteration, callback) {
        var _this5 = this;

        var _state2 = this.state,
            animationValue = _state2.animationValue,
            compiledAnimation = _state2.compiledAnimation;
        var _props2 = this.props,
            direction = _props2.direction,
            iterationCount = _props2.iterationCount,
            useNativeDriver = _props2.useNativeDriver;

        var easing = this.props.easing || compiledAnimation.easing || 'ease';
        var currentIteration = iteration || 0;
        var fromValue = getAnimationOrigin(currentIteration, direction);
        var toValue = getAnimationTarget(currentIteration, direction);
        animationValue.setValue(fromValue);

        if (typeof easing === 'string') {
          easing = _easing2.default[easing];
        }

        var reversed = direction === 'reverse' || direction === 'alternate' && !toValue || direction === 'alternate-reverse' && !toValue;
        if (reversed) {
          easing = _reactNative.Easing.out(easing);
        }

        _reactNative.Animated.timing(animationValue, {
          toValue: toValue,
          easing: easing,
          isInteraction: iterationCount <= 1,
          duration: duration || this.props.duration || 1000,
          useNativeDriver: useNativeDriver
        }).start(function (endState) {
          currentIteration += 1;
          if (endState.finished && _this5.props.animation && (iterationCount === 'infinite' || currentIteration < iterationCount)) {
            _this5.startAnimation(duration, currentIteration, callback);
          } else if (callback) {
            callback(endState);
          }
        });
      }
    }, {
      key: 'transition',
      value: function transition(fromValues, toValues, duration, easing) {
        var _this6 = this;

        var fromValuesFlat = (0, _flattenStyle2.default)(fromValues);
        var toValuesFlat = (0, _flattenStyle2.default)(toValues);
        var transitionKeys = Object.keys(toValuesFlat);

        var _getTransitionState = this.getTransitionState(transitionKeys),
            transitionValues = _getTransitionState.transitionValues,
            currentTransitionValues = _getTransitionState.currentTransitionValues,
            transitionStyle = _getTransitionState.transitionStyle;

        transitionKeys.forEach(function (property) {
          var fromValue = fromValuesFlat[property];
          var toValue = toValuesFlat[property];
          var transitionValue = transitionValues[property];
          if (!transitionValue) {
            transitionValue = new _reactNative.Animated.Value(0);
          }
          var needsInterpolation = INTERPOLATION_STYLE_PROPERTIES.indexOf(property) !== -1;
          var needsZeroClamping = ZERO_CLAMPED_STYLE_PROPERTIES.indexOf(property) !== -1;
          if (needsInterpolation) {
            transitionValue.setValue(0);
            transitionStyle[property] = transitionValue.interpolate({
              inputRange: [0, 1],
              outputRange: [fromValue, toValue]
            });
            currentTransitionValues[property] = toValue;
            toValuesFlat[property] = 1;
          } else {
            if (needsZeroClamping) {
              transitionStyle[property] = transitionValue.interpolate({
                inputRange: [0, 1],
                outputRange: [0, 1],
                extrapolateLeft: 'clamp'
              });
              currentTransitionValues[property] = toValue;
            } else {
              transitionStyle[property] = transitionValue;
            }
            transitionValue.setValue(fromValue);
          }
        });
        this.setState({ transitionValues: transitionValues, transitionStyle: transitionStyle, currentTransitionValues: currentTransitionValues }, function () {
          _this6.transitionToValues(toValuesFlat, duration || _this6.props.duration, easing, _this6.props.delay);
        });
      }
    }, {
      key: 'transitionTo',
      value: function transitionTo(toValues, duration, easing, delay) {
        var _this7 = this;

        var currentTransitionValues = this.state.currentTransitionValues;

        var toValuesFlat = (0, _flattenStyle2.default)(toValues);
        var transitions = {
          from: {},
          to: {}
        };

        Object.keys(toValuesFlat).forEach(function (property) {
          var toValue = toValuesFlat[property];
          var needsInterpolation = INTERPOLATION_STYLE_PROPERTIES.indexOf(property) !== -1;
          var needsZeroClamping = ZERO_CLAMPED_STYLE_PROPERTIES.indexOf(property) !== -1;
          var transitionStyle = _this7.state.transitionStyle[property];
          var transitionValue = _this7.state.transitionValues[property];
          if (!needsInterpolation && !needsZeroClamping && transitionStyle && transitionStyle === transitionValue) {
            transitionToValue(transitionValue, toValue, duration, easing, _this7.props.useNativeDriver, delay);
          } else {
            var currentTransitionValue = currentTransitionValues[property];
            if (typeof currentTransitionValue === 'undefined' && _this7.props.style) {
              var style = (0, _getStyleValues2.default)(property, _this7.props.style);
              currentTransitionValue = style[property];
            }
            transitions.from[property] = currentTransitionValue;
            transitions.to[property] = toValue;
          }
        });

        if (Object.keys(transitions.from).length) {
          this.transition(transitions.from, transitions.to, duration, easing);
        }
      }
    }, {
      key: 'transitionToValues',
      value: function transitionToValues(toValues, duration, easing, delay) {
        var _this8 = this;

        Object.keys(toValues).forEach(function (property) {
          var transitionValue = _this8.state.transitionValues[property];
          var toValue = toValues[property];
          transitionToValue(transitionValue, toValue, duration, easing, _this8.props.useNativeDriver, delay);
        });
      }
    }, {
      key: 'render',
      value: function render() {
        var _props3 = this.props,
            style = _props3.style,
            animation = _props3.animation,
            transition = _props3.transition;

        if (animation && transition) {
          throw new Error('You cannot combine animation and transition props');
        }
        var restProps = omit(Object.keys(AnimatableComponent.propTypes), this.props);

        return _react2.default.createElement(Animatable, babelHelpers.extends({
          ref: this.handleRef,
          style: [style, this.state.animationStyle, (0, _wrapStyleTransforms2.default)(this.state.transitionStyle)]
        }, restProps, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 544
          }
        }));
      }
    }]);
    return AnimatableComponent;
  }(_react.Component), _class.displayName = 'withAnimatable(' + wrappedComponentName + ')', _class.propTypes = {
    animation: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object]),
    duration: _propTypes2.default.number,
    direction: _propTypes2.default.oneOf(['normal', 'reverse', 'alternate', 'alternate-reverse']),
    delay: _propTypes2.default.number,
    easing: _propTypes2.default.oneOfType([_propTypes2.default.oneOf(Object.keys(_easing2.default)), _propTypes2.default.func]),
    iterationCount: function iterationCount(props, propName) {
      var val = props[propName];
      if (val !== 'infinite' && !(typeof val === 'number' && val >= 1)) {
        return new Error('iterationCount must be a positive number or "infinite"');
      }
      return null;
    },

    onAnimationBegin: _propTypes2.default.func,
    onAnimationEnd: _propTypes2.default.func,
    style: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.array, _propTypes2.default.object]),
    transition: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.arrayOf(_propTypes2.default.string)]),
    useNativeDriver: _propTypes2.default.bool
  }, _class.defaultProps = {
    animation: undefined,
    delay: 0,
    direction: 'normal',
    duration: undefined,
    easing: undefined,
    iterationCount: 1,
    onAnimationBegin: function onAnimationBegin() {},
    onAnimationEnd: function onAnimationEnd() {},

    style: undefined,
    transition: undefined,
    useNativeDriver: false
  }, _initialiseProps = function _initialiseProps() {
    var _this9 = this;

    this.ref = null;

    this.handleRef = function (ref) {
      _this9.ref = ref;
    };
  }, _temp;
}
}, 2462, null, "react-native-animatable/createAnimatableComponent.js");
__d(/* prop-types/index.js */function(global, require, module, exports) {

if (process.env.NODE_ENV !== 'production') {
  var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && (typeof Symbol === 'function' ? Symbol.for : '@@for') && (typeof Symbol === 'function' ? Symbol.for : '@@for')('react.element') || 0xeac7;

  var isValidElement = function isValidElement(object) {
    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
  };

  var throwOnDirectAccess = true;
  module.exports = require(2464                       )(isValidElement, throwOnDirectAccess); // 2464 = ./factoryWithTypeCheckers
} else {
  module.exports = require(2467                        )(); // 2467 = ./factoryWithThrowingShims
}
}, 2463, null, "prop-types/index.js");
__d(/* prop-types/factoryWithTypeCheckers.js */function(global, require, module, exports) {

'use strict';

var emptyFunction = require(336                     ); // 336 = fbjs/lib/emptyFunction
var invariant = require(346                 ); // 346 = fbjs/lib/invariant
var warning = require(335               ); // 335 = fbjs/lib/warning
var assign = require(400            ); // 400 = object-assign

var ReactPropTypesSecret = require(2465                        ); // 2465 = ./lib/ReactPropTypesSecret
var checkPropTypes = require(2466              ); // 2466 = ./checkPropTypes

module.exports = function (isValidElement, throwOnDirectAccess) {
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && (typeof Symbol === 'function' ? Symbol.iterator : '@@iterator');
  var FAUX_ITERATOR_SYMBOL = '@@iterator';
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  var ANONYMOUS = '<<anonymous>>';

  var ReactPropTypes = {
    array: createPrimitiveTypeChecker('array'),
    bool: createPrimitiveTypeChecker('boolean'),
    func: createPrimitiveTypeChecker('function'),
    number: createPrimitiveTypeChecker('number'),
    object: createPrimitiveTypeChecker('object'),
    string: createPrimitiveTypeChecker('string'),
    symbol: createPrimitiveTypeChecker('symbol'),

    any: createAnyTypeChecker(),
    arrayOf: createArrayOfTypeChecker,
    element: createElementTypeChecker(),
    instanceOf: createInstanceTypeChecker,
    node: createNodeChecker(),
    objectOf: createObjectOfTypeChecker,
    oneOf: createEnumTypeChecker,
    oneOfType: createUnionTypeChecker,
    shape: createShapeTypeChecker,
    exact: createStrictShapeTypeChecker
  };

  function is(x, y) {
    if (x === y) {
      return x !== 0 || 1 / x === 1 / y;
    } else {
      return x !== x && y !== y;
    }
  }

  function PropTypeError(message) {
    this.message = message;
    this.stack = '';
  }

  PropTypeError.prototype = Error.prototype;

  function createChainableTypeChecker(validate) {
    if (process.env.NODE_ENV !== 'production') {
      var manualPropTypeCallCache = {};
      var manualPropTypeWarningCount = 0;
    }
    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
      componentName = componentName || ANONYMOUS;
      propFullName = propFullName || propName;

      if (secret !== ReactPropTypesSecret) {
        if (throwOnDirectAccess) {
          invariant(false, 'Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use `PropTypes.checkPropTypes()` to call them. ' + 'Read more at http://fb.me/use-check-prop-types');
        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {
          var cacheKey = componentName + ':' + propName;
          if (!manualPropTypeCallCache[cacheKey] && manualPropTypeWarningCount < 3) {
            warning(false, 'You are manually calling a React.PropTypes validation ' + 'function for the `%s` prop on `%s`. This is deprecated ' + 'and will throw in the standalone `prop-types` package. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.', propFullName, componentName);
            manualPropTypeCallCache[cacheKey] = true;
            manualPropTypeWarningCount++;
          }
        }
      }
      if (props[propName] == null) {
        if (isRequired) {
          if (props[propName] === null) {
            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
          }
          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
        }
        return null;
      } else {
        return validate(props, propName, componentName, location, propFullName);
      }
    }

    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);

    return chainedCheckType;
  }

  function createPrimitiveTypeChecker(expectedType) {
    function validate(props, propName, componentName, location, propFullName, secret) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== expectedType) {
        var preciseType = getPreciseType(propValue);

        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createAnyTypeChecker() {
    return createChainableTypeChecker(emptyFunction.thatReturnsNull);
  }

  function createArrayOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
      }
      var propValue = props[propName];
      if (!Array.isArray(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
      }
      for (var i = 0; i < propValue.length; i++) {
        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
        if (error instanceof Error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!isValidElement(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createInstanceTypeChecker(expectedClass) {
    function validate(props, propName, componentName, location, propFullName) {
      if (!(props[propName] instanceof expectedClass)) {
        var expectedClassName = expectedClass.name || ANONYMOUS;
        var actualClassName = getClassName(props[propName]);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createEnumTypeChecker(expectedValues) {
    if (!Array.isArray(expectedValues)) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;
      return emptyFunction.thatReturnsNull;
    }

    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      for (var i = 0; i < expectedValues.length; i++) {
        if (is(propValue, expectedValues[i])) {
          return null;
        }
      }

      var valuesString = JSON.stringify(expectedValues);
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createObjectOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
      }
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
      }
      for (var key in propValue) {
        if (propValue.hasOwnProperty(key)) {
          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
          if (error instanceof Error) {
            return error;
          }
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createUnionTypeChecker(arrayOfTypeCheckers) {
    if (!Array.isArray(arrayOfTypeCheckers)) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
      return emptyFunction.thatReturnsNull;
    }

    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (typeof checker !== 'function') {
        warning(false, 'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' + 'received %s at index %s.', getPostfixForTypeWarning(checker), i);
        return emptyFunction.thatReturnsNull;
      }
    }

    function validate(props, propName, componentName, location, propFullName) {
      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];
        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
          return null;
        }
      }

      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createNodeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!isNode(props[propName])) {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      for (var key in shapeTypes) {
        var checker = shapeTypes[key];
        if (!checker) {
          continue;
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createStrictShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }

      var allKeys = assign({}, props[propName], shapeTypes);
      for (var key in allKeys) {
        var checker = shapeTypes[key];
        if (!checker) {
          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' + '\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function isNode(propValue) {
    switch (typeof propValue) {
      case 'number':
      case 'string':
      case 'undefined':
        return true;
      case 'boolean':
        return !propValue;
      case 'object':
        if (Array.isArray(propValue)) {
          return propValue.every(isNode);
        }
        if (propValue === null || isValidElement(propValue)) {
          return true;
        }

        var iteratorFn = getIteratorFn(propValue);
        if (iteratorFn) {
          var iterator = iteratorFn.call(propValue);
          var step;
          if (iteratorFn !== propValue.entries) {
            while (!(step = iterator.next()).done) {
              if (!isNode(step.value)) {
                return false;
              }
            }
          } else {
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                if (!isNode(entry[1])) {
                  return false;
                }
              }
            }
          }
        } else {
          return false;
        }

        return true;
      default:
        return false;
    }
  }

  function isSymbol(propType, propValue) {
    if (propType === 'symbol') {
      return true;
    }

    if (propValue['@@toStringTag'] === 'Symbol') {
      return true;
    }

    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
      return true;
    }

    return false;
  }

  function getPropType(propValue) {
    var propType = typeof propValue;
    if (Array.isArray(propValue)) {
      return 'array';
    }
    if (propValue instanceof RegExp) {
      return 'object';
    }
    if (isSymbol(propType, propValue)) {
      return 'symbol';
    }
    return propType;
  }

  function getPreciseType(propValue) {
    if (typeof propValue === 'undefined' || propValue === null) {
      return '' + propValue;
    }
    var propType = getPropType(propValue);
    if (propType === 'object') {
      if (propValue instanceof Date) {
        return 'date';
      } else if (propValue instanceof RegExp) {
        return 'regexp';
      }
    }
    return propType;
  }

  function getPostfixForTypeWarning(value) {
    var type = getPreciseType(value);
    switch (type) {
      case 'array':
      case 'object':
        return 'an ' + type;
      case 'boolean':
      case 'date':
      case 'regexp':
        return 'a ' + type;
      default:
        return type;
    }
  }

  function getClassName(propValue) {
    if (!propValue.constructor || !propValue.constructor.name) {
      return ANONYMOUS;
    }
    return propValue.constructor.name;
  }

  ReactPropTypes.checkPropTypes = checkPropTypes;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};
}, 2464, null, "prop-types/factoryWithTypeCheckers.js");
__d(/* prop-types/lib/ReactPropTypesSecret.js */function(global, require, module, exports) {

'use strict';

var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;
}, 2465, null, "prop-types/lib/ReactPropTypesSecret.js");
__d(/* prop-types/checkPropTypes.js */function(global, require, module, exports) {

'use strict';

if (process.env.NODE_ENV !== 'production') {
  var invariant = require(346                 ); // 346 = fbjs/lib/invariant
  var warning = require(335               ); // 335 = fbjs/lib/warning
  var ReactPropTypesSecret = require(2465                        ); // 2465 = ./lib/ReactPropTypesSecret
  var loggedTypeFailures = {};
}

function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
  if (process.env.NODE_ENV !== 'production') {
    for (var typeSpecName in typeSpecs) {
      if (typeSpecs.hasOwnProperty(typeSpecName)) {
        var error;

        try {
          invariant(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'the `prop-types` package, but received `%s`.', componentName || 'React class', location, typeSpecName, typeof typeSpecs[typeSpecName]);
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
          error = ex;
        }
        warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error);
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          loggedTypeFailures[error.message] = true;

          var stack = getStack ? getStack() : '';

          warning(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');
        }
      }
    }
  }
}

module.exports = checkPropTypes;
}, 2466, null, "prop-types/checkPropTypes.js");
__d(/* prop-types/factoryWithThrowingShims.js */function(global, require, module, exports) {

'use strict';

var emptyFunction = require(336                     ); // 336 = fbjs/lib/emptyFunction
var invariant = require(346                 ); // 346 = fbjs/lib/invariant
var ReactPropTypesSecret = require(2465                        ); // 2465 = ./lib/ReactPropTypesSecret

module.exports = function () {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret) {
      return;
    }
    invariant(false, 'Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use PropTypes.checkPropTypes() to call them. ' + 'Read more at http://fb.me/use-check-prop-types');
  };
  shim.isRequired = shim;
  function getShim() {
    return shim;
  };

  var ReactPropTypes = {
    array: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,

    any: shim,
    arrayOf: getShim,
    element: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim,
    exact: getShim
  };

  ReactPropTypes.checkPropTypes = emptyFunction;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};
}, 2467, null, "prop-types/factoryWithThrowingShims.js");
__d(/* react-native-animatable/wrapStyleTransforms.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = wrapStyleTransforms;

var TRANSFORM_STYLE_PROPERTIES = ['perspective', 'rotate', 'rotateX', 'rotateY', 'rotateZ', 'scale', 'scaleX', 'scaleY', 'skewX', 'skewY', 'translateX', 'translateY'];

function wrapStyleTransforms(style) {
  var wrapped = {};
  Object.keys(style).forEach(function (key) {
    if (TRANSFORM_STYLE_PROPERTIES.indexOf(key) !== -1) {
      if (!wrapped.transform) {
        wrapped.transform = [];
      }
      wrapped.transform.push(babelHelpers.defineProperty({}, key, style[key]));
    } else {
      wrapped[key] = style[key];
    }
  });
  return wrapped;
}
}, 2468, null, "react-native-animatable/wrapStyleTransforms.js");
__d(/* react-native-animatable/getStyleValues.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getStyleValues;

var _flattenStyle = require(2460            ); // 2460 = ./flattenStyle

var _flattenStyle2 = babelHelpers.interopRequireDefault(_flattenStyle);

var _getDefaultStyleValue = require(2470                    ); // 2470 = ./getDefaultStyleValue

var _getDefaultStyleValue2 = babelHelpers.interopRequireDefault(_getDefaultStyleValue);

function getStyleValues(keys, style) {
  var values = {};
  var flatStyle = (0, _flattenStyle2.default)(style);

  (typeof keys === 'string' ? [keys] : keys).forEach(function (key) {
    values[key] = key in flatStyle ? flatStyle[key] : (0, _getDefaultStyleValue2.default)(key, flatStyle);
  });
  return values;
}
}, 2469, null, "react-native-animatable/getStyleValues.js");
__d(/* react-native-animatable/getDefaultStyleValue.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getDefaultStyleValue;


var DIRECTIONAL_FALLBACKS = {
  Top: ['Vertical', ''],
  Bottom: ['Vertical', ''],
  Vertical: [''],
  Left: ['Horizontal', ''],
  Right: ['Horizontal', ''],
  Horizontal: ['']
};

var DIRECTIONAL_SUFFICES = Object.keys(DIRECTIONAL_FALLBACKS);

function getDefaultStyleValue(key, flatStyle) {
  if (key === 'backgroundColor') {
    return 'rgba(0,0,0,0)';
  }
  if (key === 'color' || key.indexOf('Color') !== -1) {
    return 'rgba(0,0,0,1)';
  }
  if (key.indexOf('rotate') === 0 || key.indexOf('skew') === 0) {
    return '0deg';
  }
  if (key === 'opacity' || key.indexOf('scale') === 0) {
    return 1;
  }
  if (key === 'fontSize') {
    return 14;
  }
  if (key.indexOf('margin') === 0 || key.indexOf('padding') === 0) {
    for (var suffix, i = 0; i < DIRECTIONAL_SUFFICES.length; i++) {
      suffix = DIRECTIONAL_SUFFICES[i];
      if (key.substr(-suffix.length) === suffix) {
        var prefix = key.substr(0, key.length - suffix.length);
        var fallbacks = DIRECTIONAL_FALLBACKS[suffix];
        for (var fallback, j = 0; j < fallbacks.length; j++) {
          fallback = prefix + fallbacks[j];
          if (fallback in flatStyle) {
            return flatStyle[fallback];
          }
        }
        break;
      }
    }
  }
  return 0;
}
}, 2470, null, "react-native-animatable/getDefaultStyleValue.js");
__d(/* react-native-animatable/easing.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _reactNative = require(334           ); // 334 = react-native

var EASING_FUNCTIONS = {

  linear: _reactNative.Easing.linear,
  ease: _reactNative.Easing.bezier(0.25, 0.1, 0.25, 1),
  'ease-in': _reactNative.Easing.bezier(0.42, 0, 1, 1),
  'ease-out': _reactNative.Easing.bezier(0, 0, 0.58, 1),
  'ease-in-out': _reactNative.Easing.bezier(0.42, 0, 0.58, 1),

  'ease-in-cubic': _reactNative.Easing.bezier(0.55, 0.055, 0.675, 0.19),
  'ease-out-cubic': _reactNative.Easing.bezier(0.215, 0.61, 0.355, 1.0),
  'ease-in-out-cubic': _reactNative.Easing.bezier(0.645, 0.045, 0.355, 1.0),

  'ease-in-circ': _reactNative.Easing.bezier(0.6, 0.04, 0.98, 0.335),
  'ease-out-circ': _reactNative.Easing.bezier(0.075, 0.82, 0.165, 1.0),
  'ease-in-out-circ': _reactNative.Easing.bezier(0.785, 0.135, 0.15, 0.86),

  'ease-in-expo': _reactNative.Easing.bezier(0.95, 0.05, 0.795, 0.035),
  'ease-out-expo': _reactNative.Easing.bezier(0.19, 1.0, 0.22, 1.0),
  'ease-in-out-expo': _reactNative.Easing.bezier(1.0, 0.0, 0.0, 1.0),

  'ease-in-quad': _reactNative.Easing.bezier(0.55, 0.085, 0.68, 0.53),
  'ease-out-quad': _reactNative.Easing.bezier(0.25, 0.46, 0.45, 0.94),
  'ease-in-out-quad': _reactNative.Easing.bezier(0.455, 0.03, 0.515, 0.955),

  'ease-in-quart': _reactNative.Easing.bezier(0.895, 0.03, 0.685, 0.22),
  'ease-out-quart': _reactNative.Easing.bezier(0.165, 0.84, 0.44, 1.0),
  'ease-in-out-quart': _reactNative.Easing.bezier(0.77, 0.0, 0.175, 1.0),

  'ease-in-quint': _reactNative.Easing.bezier(0.755, 0.05, 0.855, 0.06),
  'ease-out-quint': _reactNative.Easing.bezier(0.23, 1.0, 0.32, 1.0),
  'ease-in-out-quint': _reactNative.Easing.bezier(0.86, 0.0, 0.07, 1.0),

  'ease-in-sine': _reactNative.Easing.bezier(0.47, 0.0, 0.745, 0.715),
  'ease-out-sine': _reactNative.Easing.bezier(0.39, 0.575, 0.565, 1.0),
  'ease-in-out-sine': _reactNative.Easing.bezier(0.445, 0.05, 0.55, 0.95),

  'ease-in-back': _reactNative.Easing.bezier(0.6, -0.28, 0.735, 0.045),
  'ease-out-back': _reactNative.Easing.bezier(0.175, 0.885, 0.32, 1.275),
  'ease-in-out-back': _reactNative.Easing.bezier(0.68, -0.55, 0.265, 1.55)
};

exports.default = EASING_FUNCTIONS;
}, 2471, null, "react-native-animatable/easing.js");
__d(/* react-native-animatable/definitions/index.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _attentionSeekers = require(2473                 ); // 2473 = ./attention-seekers

Object.keys(_attentionSeekers).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _attentionSeekers[key];
    }
  });
});

var _bouncingEntrances = require(2474                  ); // 2474 = ./bouncing-entrances

Object.keys(_bouncingEntrances).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _bouncingEntrances[key];
    }
  });
});

var _bouncingExits = require(2475              ); // 2475 = ./bouncing-exits

Object.keys(_bouncingExits).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _bouncingExits[key];
    }
  });
});

var _fadingEntrances = require(2476                ); // 2476 = ./fading-entrances

Object.keys(_fadingEntrances).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _fadingEntrances[key];
    }
  });
});

var _fadingExits = require(2477            ); // 2477 = ./fading-exits

Object.keys(_fadingExits).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _fadingExits[key];
    }
  });
});

var _flippers = require(2478        ); // 2478 = ./flippers

Object.keys(_flippers).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _flippers[key];
    }
  });
});

var _lightspeed = require(2479          ); // 2479 = ./lightspeed

Object.keys(_lightspeed).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _lightspeed[key];
    }
  });
});

var _slidingEntrances = require(2480                 ); // 2480 = ./sliding-entrances

Object.keys(_slidingEntrances).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _slidingEntrances[key];
    }
  });
});

var _slidingExits = require(2481             ); // 2481 = ./sliding-exits

Object.keys(_slidingExits).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _slidingExits[key];
    }
  });
});

var _zoomingEntrances = require(2482                 ); // 2482 = ./zooming-entrances

Object.keys(_zoomingEntrances).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _zoomingEntrances[key];
    }
  });
});

var _zoomingExits = require(2483             ); // 2483 = ./zooming-exits

Object.keys(_zoomingExits).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _zoomingExits[key];
    }
  });
});
}, 2472, null, "react-native-animatable/definitions/index.js");
__d(/* react-native-animatable/definitions/attention-seekers.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var bounce = exports.bounce = {
  0: {
    translateY: 0
  },
  0.2: {
    translateY: 0
  },
  0.4: {
    translateY: -30
  },
  0.43: {
    translateY: -30
  },
  0.53: {
    translateY: 0
  },
  0.7: {
    translateY: -15
  },
  0.8: {
    translateY: 0
  },
  0.9: {
    translateY: -4
  },
  1: {
    translateY: 0
  }
};

var flash = exports.flash = {
  0: {
    opacity: 1
  },
  0.25: {
    opacity: 0
  },
  0.5: {
    opacity: 1
  },
  0.75: {
    opacity: 0
  },
  1: {
    opacity: 1
  }
};

var jello = exports.jello = {
  0: {
    skewX: '0deg',
    skewY: '0deg'
  },
  0.111: {
    skewX: '0deg',
    skewY: '0deg'
  },
  0.222: {
    skewX: '-12.5deg',
    skewY: '-12.5deg'
  },
  0.333: {
    skewX: '6.25deg',
    skewY: '6.25deg'
  },
  0.444: {
    skewX: '-3.125deg',
    skewY: '-3.125deg'
  },
  0.555: {
    skewX: '1.5625deg',
    skewY: '1.5625deg'
  },
  0.666: {
    skewX: '-0.78125deg',
    skewY: '-0.78125deg'
  },
  0.777: {
    skewX: '0.390625deg',
    skewY: '0.390625deg'
  },
  0.888: {
    skewX: '-0.1953125deg',
    skewY: '-0.1953125deg'
  },
  1: {
    skewX: '0deg',
    skewY: '0deg'
  }
};

var pulse = exports.pulse = {
  0: {
    scale: 1
  },
  0.5: {
    scale: 1.05
  },
  1: {
    scale: 1
  }
};

var rotate = exports.rotate = {
  0: {
    rotate: '0deg'
  },
  0.25: {
    rotate: '90deg'
  },
  0.5: {
    rotate: '180deg'
  },
  0.75: {
    rotate: '270deg'
  },
  1: {
    rotate: '360deg'
  }
};

var shake = exports.shake = {
  0: {
    translateX: 0
  },
  0.1: {
    translateX: -10
  },
  0.2: {
    translateX: 10
  },
  0.3: {
    translateX: -10
  },
  0.4: {
    translateX: 10
  },
  0.5: {
    translateX: -10
  },
  0.6: {
    translateX: 10
  },
  0.7: {
    translateX: -10
  },
  0.8: {
    translateX: 10
  },
  0.9: {
    translateX: -10
  },
  1: {
    translateX: 0
  }
};

var swing = exports.swing = {
  0: {
    rotate: '0deg'
  },
  0.2: {
    rotate: '15deg'
  },
  0.4: {
    rotate: '-10deg'
  },
  0.6: {
    rotate: '5deg'
  },
  0.8: {
    rotate: '-5deg'
  },
  1: {
    rotate: '0deg'
  }
};

var rubberBand = exports.rubberBand = {
  0: {
    scaleX: 1,
    scaleY: 1
  },
  0.3: {
    scaleX: 1.25,
    scaleY: 0.75
  },
  0.4: {
    scaleX: 0.75,
    scaleY: 1.25
  },
  0.5: {
    scaleX: 1.15,
    scaleY: 0.85
  },
  0.65: {
    scaleX: 0.95,
    scaleY: 1.05
  },
  0.75: {
    scaleX: 1.05,
    scaleY: 0.95
  },
  1: {
    scaleX: 1,
    scaleY: 1
  }
};

var tada = exports.tada = {
  0: {
    scale: 1,
    rotate: '0deg'
  },
  0.1: {
    scale: 0.9,
    rotate: '-3deg'
  },
  0.2: {
    scale: 0.9,
    rotate: '-3deg'
  },
  0.3: {
    scale: 1.1,
    rotate: '-3deg'
  },
  0.4: {
    rotate: '3deg'
  },
  0.5: {
    rotate: '-3deg'
  },
  0.6: {
    rotate: '3deg'
  },
  0.7: {
    rotate: '-3deg'
  },
  0.8: {
    rotate: '3deg'
  },
  0.9: {
    scale: 1.1,
    rotate: '3deg'
  },
  1: {
    scale: 1,
    rotate: '0deg'
  }
};

var wobble = exports.wobble = {
  0: {
    translateX: 0,
    rotate: '0deg'
  },
  0.15: {
    translateX: -25,
    rotate: '-5deg'
  },
  0.3: {
    translateX: 20,
    rotate: '3deg'
  },
  0.45: {
    translateX: -15,
    rotate: '-3deg'
  },
  0.6: {
    translateX: 10,
    rotate: '2deg'
  },
  0.75: {
    translateX: -5,
    rotate: '-1deg'
  },
  1: {
    translateX: 0,
    rotate: '0deg'
  }
};
}, 2473, null, "react-native-animatable/definitions/attention-seekers.js");
__d(/* react-native-animatable/definitions/bouncing-entrances.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var bounceIn = exports.bounceIn = {
  0: {
    opacity: 0,
    scale: 0.3
  },
  0.2: {
    scale: 1.1
  },
  0.4: {
    scale: 0.9
  },
  0.6: {
    opacity: 1,
    scale: 1.03
  },
  0.8: {
    scale: 0.97
  },
  1: {
    opacity: 1,
    scale: 1
  }
};

var bounceInUp = exports.bounceInUp = {
  0: {
    opacity: 0,
    translateY: 800
  },
  0.6: {
    opacity: 1,
    translateY: -25
  },
  0.75: {
    translateY: 10
  },
  0.9: {
    translateY: -5
  },
  1: {
    translateY: 0
  }
};

var bounceInDown = exports.bounceInDown = {
  0: {
    opacity: 0,
    translateY: -800
  },
  0.6: {
    opacity: 1,
    translateY: 25
  },
  0.75: {
    translateY: -10
  },
  0.9: {
    translateY: 5
  },
  1: {
    translateY: 0
  }
};

var bounceInRight = exports.bounceInRight = {
  0: {
    opacity: 0,
    translateX: 600
  },
  0.6: {
    opacity: 1,
    translateX: -20
  },
  0.75: {
    translateX: 8
  },
  0.9: {
    translateX: -4
  },
  1: {
    translateX: 0
  }
};

var bounceInLeft = exports.bounceInLeft = {
  0: {
    opacity: 0,
    translateX: -600
  },
  0.6: {
    opacity: 1,
    translateX: 20
  },
  0.75: {
    translateX: -8
  },
  0.9: {
    translateX: 4
  },
  1: {
    translateX: 0
  }
};
}, 2474, null, "react-native-animatable/definitions/bouncing-entrances.js");
__d(/* react-native-animatable/definitions/bouncing-exits.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var bounceOut = exports.bounceOut = {
  0: {
    opacity: 1,
    scale: 1
  },
  0.2: {
    scale: 0.9
  },
  0.5: {
    opacity: 1,
    scale: 1.11
  },
  0.55: {
    scale: 1.11
  },
  1: {
    opacity: 0,
    scale: 0.3
  }
};

var bounceOutUp = exports.bounceOutUp = {
  0: {
    opacity: 1,
    translateY: 0
  },
  0.2: {
    opacity: 1,
    translateY: -10
  },
  0.4: {
    translateY: 20
  },
  0.45: {
    translateY: 20
  },
  0.55: {
    opacity: 1
  },
  1: {
    opacity: 0,
    translateY: -800
  }
};

var bounceOutDown = exports.bounceOutDown = {
  0: {
    opacity: 1,
    translateY: 0
  },
  0.2: {
    opacity: 1,
    translateY: 10
  },
  0.4: {
    translateY: -20
  },
  0.45: {
    translateY: -20
  },
  0.55: {
    opacity: 1
  },
  1: {
    opacity: 0,
    translateY: 800
  }
};

var bounceOutRight = exports.bounceOutRight = {
  0: {
    opacity: 1,
    translateX: 0
  },
  0.2: {
    opacity: 1,
    translateX: 10
  },
  0.4: {
    translateX: -20
  },
  0.45: {
    translateX: -20
  },
  0.55: {
    opacity: 1
  },
  1: {
    opacity: 0,
    translateX: 600
  }
};

var bounceOutLeft = exports.bounceOutLeft = {
  0: {
    opacity: 1,
    translateX: 0
  },
  0.2: {
    opacity: 1,
    translateX: -10
  },
  0.4: {
    translateX: 20
  },
  0.45: {
    translateX: 20
  },
  0.55: {
    opacity: 1
  },
  1: {
    opacity: 0,
    translateX: -600
  }
};
}, 2475, null, "react-native-animatable/definitions/bouncing-exits.js");
__d(/* react-native-animatable/definitions/fading-entrances.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
function makeFadeInTranslation(translationType, fromValue) {
  return {
    from: babelHelpers.defineProperty({
      opacity: 0
    }, translationType, fromValue),
    to: babelHelpers.defineProperty({
      opacity: 1
    }, translationType, 0)
  };
}

var fadeIn = exports.fadeIn = {
  from: {
    opacity: 0
  },
  to: {
    opacity: 1
  }
};

var fadeInDown = exports.fadeInDown = makeFadeInTranslation('translateY', -100);

var fadeInUp = exports.fadeInUp = makeFadeInTranslation('translateY', 100);

var fadeInLeft = exports.fadeInLeft = makeFadeInTranslation('translateX', -100);

var fadeInRight = exports.fadeInRight = makeFadeInTranslation('translateX', 100);

var fadeInDownBig = exports.fadeInDownBig = makeFadeInTranslation('translateY', -500);

var fadeInUpBig = exports.fadeInUpBig = makeFadeInTranslation('translateY', 500);

var fadeInLeftBig = exports.fadeInLeftBig = makeFadeInTranslation('translateX', -500);

var fadeInRightBig = exports.fadeInRightBig = makeFadeInTranslation('translateX', 500);
}, 2476, null, "react-native-animatable/definitions/fading-entrances.js");
__d(/* react-native-animatable/definitions/fading-exits.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
function makeFadeOutTranslation(translationType, toValue) {
  return {
    from: babelHelpers.defineProperty({
      opacity: 1
    }, translationType, 0),
    to: babelHelpers.defineProperty({
      opacity: 0
    }, translationType, toValue)
  };
}

var fadeOut = exports.fadeOut = {
  from: {
    opacity: 1
  },
  to: {
    opacity: 0
  }
};

var fadeOutDown = exports.fadeOutDown = makeFadeOutTranslation('translateY', 100);

var fadeOutUp = exports.fadeOutUp = makeFadeOutTranslation('translateY', -100);

var fadeOutLeft = exports.fadeOutLeft = makeFadeOutTranslation('translateX', -100);

var fadeOutRight = exports.fadeOutRight = makeFadeOutTranslation('translateX', 100);

var fadeOutDownBig = exports.fadeOutDownBig = makeFadeOutTranslation('translateY', 500);

var fadeOutUpBig = exports.fadeOutUpBig = makeFadeOutTranslation('translateY', -500);

var fadeOutLeftBig = exports.fadeOutLeftBig = makeFadeOutTranslation('translateX', -500);

var fadeOutRightBig = exports.fadeOutRightBig = makeFadeOutTranslation('translateX', 500);
}, 2477, null, "react-native-animatable/definitions/fading-exits.js");
__d(/* react-native-animatable/definitions/flippers.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var flipInX = exports.flipInX = {
  easing: 'ease-in',
  style: {
    backfaceVisibility: 'visible',
    perspective: 400
  },
  0: {
    opacity: 0,
    rotateX: '90deg'
  },
  0.4: {
    rotateX: '-20deg'
  },
  0.6: {
    opacity: 1,
    rotateX: '10deg'
  },
  0.8: {
    rotateX: '-5deg'
  },
  1: {
    opacity: 1,
    rotateX: '0deg'
  }
};

var flipInY = exports.flipInY = {
  easing: 'ease-in',
  style: {
    backfaceVisibility: 'visible',
    perspective: 400
  },
  0: {
    opacity: 0,
    rotateY: '90deg'
  },
  0.4: {
    rotateY: '-20deg'
  },
  0.6: {
    opacity: 1,
    rotateY: '10deg'
  },
  0.8: {
    rotateY: '-5deg'
  },
  1: {
    opacity: 1,
    rotateY: '0deg'
  }
};

var flipOutX = exports.flipOutX = {
  style: {
    backfaceVisibility: 'visible',
    perspective: 400
  },
  0: {
    opacity: 1,
    rotateX: '0deg'
  },
  0.3: {
    opacity: 1,
    rotateX: '-20deg'
  },
  1: {
    opacity: 0,
    rotateX: '90deg'
  }
};

var flipOutY = exports.flipOutY = {
  style: {
    backfaceVisibility: 'visible',
    perspective: 400
  },
  0: {
    opacity: 1,
    rotateY: '0deg'
  },
  0.3: {
    opacity: 1,
    rotateY: '-20deg'
  },
  1: {
    opacity: 0,
    rotateY: '90deg'
  }
};
}, 2478, null, "react-native-animatable/definitions/flippers.js");
__d(/* react-native-animatable/definitions/lightspeed.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var lightSpeedIn = exports.lightSpeedIn = {
  easing: 'ease-out',
  0: {
    opacity: 0,
    translateX: 200,
    skewX: '-30deg'
  },
  0.6: {
    opacity: 1,
    translateX: 0,
    skewX: '20deg'
  },
  0.8: {
    skewX: '-5deg'
  },
  1: {
    opacity: 1,
    translateX: 0,
    skewX: '0deg'
  }
};

var lightSpeedOut = exports.lightSpeedOut = {
  easing: 'ease-in',
  0: {
    opacity: 1,
    translateX: 0,
    skewX: '0deg'
  },
  1: {
    opacity: 0,
    translateX: 200,
    skewX: '30deg'
  }
};
}, 2479, null, "react-native-animatable/definitions/lightspeed.js");
__d(/* react-native-animatable/definitions/sliding-entrances.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
function makeSlideInTranslation(translationType, fromValue) {
  return {
    from: babelHelpers.defineProperty({}, translationType, fromValue),
    to: babelHelpers.defineProperty({}, translationType, 0)
  };
}

var slideInDown = exports.slideInDown = makeSlideInTranslation('translateY', -100);

var slideInUp = exports.slideInUp = makeSlideInTranslation('translateY', 100);

var slideInLeft = exports.slideInLeft = makeSlideInTranslation('translateX', -100);

var slideInRight = exports.slideInRight = makeSlideInTranslation('translateX', 100);
}, 2480, null, "react-native-animatable/definitions/sliding-entrances.js");
__d(/* react-native-animatable/definitions/sliding-exits.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
function makeSlideOutTranslation(translationType, fromValue) {
  return {
    from: babelHelpers.defineProperty({}, translationType, 0),
    to: babelHelpers.defineProperty({}, translationType, fromValue)
  };
}

var slideOutDown = exports.slideOutDown = makeSlideOutTranslation('translateY', 100);

var slideOutUp = exports.slideOutUp = makeSlideOutTranslation('translateY', -100);

var slideOutLeft = exports.slideOutLeft = makeSlideOutTranslation('translateX', -100);

var slideOutRight = exports.slideOutRight = makeSlideOutTranslation('translateX', 100);
}, 2481, null, "react-native-animatable/definitions/sliding-exits.js");
__d(/* react-native-animatable/definitions/zooming-entrances.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.zoomInRight = exports.zoomInLeft = exports.zoomInUp = exports.zoomInDown = exports.zoomIn = undefined;

var _reactNative = require(334           ); // 334 = react-native

function makeZoomInTranslation(translationType, pivotPoint) {
  var modifier = Math.min(1, Math.max(-1, pivotPoint));
  return {
    easing: _reactNative.Easing.bezier(0.175, 0.885, 0.32, 1),
    0: babelHelpers.defineProperty({
      opacity: 0,
      scale: 0.1
    }, translationType, modifier * -1000),
    0.6: babelHelpers.defineProperty({
      opacity: 1,
      scale: 0.457
    }, translationType, pivotPoint),
    1: babelHelpers.defineProperty({
      scale: 1
    }, translationType, 0)
  };
}

var zoomIn = exports.zoomIn = {
  from: {
    opacity: 0,
    scale: 0.3
  },
  0.5: {
    opacity: 1
  },
  to: {
    opacity: 1,
    scale: 1
  }
};

var zoomInDown = exports.zoomInDown = makeZoomInTranslation('translateY', 60);

var zoomInUp = exports.zoomInUp = makeZoomInTranslation('translateY', -60);

var zoomInLeft = exports.zoomInLeft = makeZoomInTranslation('translateX', 10);

var zoomInRight = exports.zoomInRight = makeZoomInTranslation('translateX', -10);
}, 2482, null, "react-native-animatable/definitions/zooming-entrances.js");
__d(/* react-native-animatable/definitions/zooming-exits.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.zoomOutRight = exports.zoomOutLeft = exports.zoomOutUp = exports.zoomOutDown = exports.zoomOut = undefined;

var _reactNative = require(334           ); // 334 = react-native

function makeZoomOutTranslation(translationType, pivotPoint) {
  var modifier = Math.min(1, Math.max(-1, pivotPoint));
  return {
    easing: _reactNative.Easing.bezier(0.175, 0.885, 0.32, 1),
    0: babelHelpers.defineProperty({
      opacity: 1,
      scale: 1
    }, translationType, 0),
    0.4: babelHelpers.defineProperty({
      opacity: 1,
      scale: 0.457
    }, translationType, pivotPoint),
    1: babelHelpers.defineProperty({
      opacity: 0,
      scale: 0.1
    }, translationType, modifier * -1000)
  };
}

var zoomOut = exports.zoomOut = {
  from: {
    opacity: 1,
    scale: 1
  },
  0.5: {
    opacity: 1,
    scale: 0.3
  },
  to: {
    opacity: 0,
    scale: 0
  }
};

var zoomOutDown = exports.zoomOutDown = makeZoomOutTranslation('translateY', 60);

var zoomOutUp = exports.zoomOutUp = makeZoomOutTranslation('translateY', -60);

var zoomOutLeft = exports.zoomOutLeft = makeZoomOutTranslation('translateX', 10);

var zoomOutRight = exports.zoomOutRight = makeZoomOutTranslation('translateX', -10);
}, 2483, null, "react-native-animatable/definitions/zooming-exits.js");
__d(/* UI/ignite/Examples/Components/i18nExample.js */function(global, require, module, exports) {var _jsxFileName = '/home/chris/Desktop/UI/ignite/Examples/Components/i18nExample.js';

var _react = require(604    ); // 604 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(334           ); // 334 = react-native

var _ExamplesRegistry = require(1982                                    ); // 1982 = ../../../App/Services/ExamplesRegistry

var _ExamplesRegistry2 = babelHelpers.interopRequireDefault(_ExamplesRegistry);

var _reactNativeI18n = require(1814               ); // 1814 = react-native-i18n

var _reactNativeI18n2 = babelHelpers.interopRequireDefault(_reactNativeI18n);

_ExamplesRegistry2.default.addPluginExample('I18n', function () {
  return _react2.default.createElement(
    _reactNative.View,
    {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 10
      }
    },
    _react2.default.createElement(
      _reactNative.Text,
      { style: { color: '#ffffff' }, __source: {
          fileName: _jsxFileName,
          lineNumber: 11
        }
      },
      'Locale: ',
      _reactNativeI18n2.default.defaultLocale
    )
  );
});
}, 2484, null, "UI/ignite/Examples/Components/i18nExample.js");
__d(/* UI/ignite/Examples/Components/vectorExample.js */function(global, require, module, exports) {var _jsxFileName = '/home/chris/Desktop/UI/ignite/Examples/Components/vectorExample.js';

var _react = require(604    ); // 604 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(334           ); // 334 = react-native

var _ExamplesRegistry = require(1982                                    ); // 1982 = ../../../App/Services/ExamplesRegistry

var _ExamplesRegistry2 = babelHelpers.interopRequireDefault(_ExamplesRegistry);

var _FontAwesome = require(2486                                   ); // 2486 = react-native-vector-icons/FontAwesome

var _FontAwesome2 = babelHelpers.interopRequireDefault(_FontAwesome);

_ExamplesRegistry2.default.addPluginExample('Vector Icons', function () {
  return _react2.default.createElement(
    _reactNative.View,
    { style: { flexDirection: 'row', justifyContent: 'space-around' }, __source: {
        fileName: _jsxFileName,
        lineNumber: 10
      }
    },
    _react2.default.createElement(_FontAwesome2.default, { name: 'rocket', size: 40, color: 'white', __source: {
        fileName: _jsxFileName,
        lineNumber: 11
      }
    }),
    _react2.default.createElement(_FontAwesome2.default, { name: 'send', size: 40, color: 'white', __source: {
        fileName: _jsxFileName,
        lineNumber: 12
      }
    }),
    _react2.default.createElement(_FontAwesome2.default, { name: 'star', size: 40, color: 'white', __source: {
        fileName: _jsxFileName,
        lineNumber: 13
      }
    }),
    _react2.default.createElement(_FontAwesome2.default, { name: 'trophy', size: 40, color: 'white', __source: {
        fileName: _jsxFileName,
        lineNumber: 14
      }
    }),
    _react2.default.createElement(_FontAwesome2.default, { name: 'warning', size: 40, color: 'white', __source: {
        fileName: _jsxFileName,
        lineNumber: 15
      }
    })
  );
});
}, 2485, null, "UI/ignite/Examples/Components/vectorExample.js");
__d(/* react-native-vector-icons/FontAwesome.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getImageSource = exports.ToolbarAndroid = exports.TabBarItemIOS = exports.TabBarItem = exports.Button = undefined;

var _createIconSet = require(2487                   ); // 2487 = ./lib/create-icon-set

var _createIconSet2 = babelHelpers.interopRequireDefault(_createIconSet);

var _FontAwesome = require(2644                          ); // 2644 = ./glyphmaps/FontAwesome.json

var _FontAwesome2 = babelHelpers.interopRequireDefault(_FontAwesome);

var iconSet = (0, _createIconSet2.default)(_FontAwesome2.default, 'FontAwesome', 'FontAwesome.ttf');

exports.default = iconSet;
var Button = exports.Button = iconSet.Button;
var TabBarItem = exports.TabBarItem = iconSet.TabBarItem;
var TabBarItemIOS = exports.TabBarItemIOS = iconSet.TabBarItemIOS;
var ToolbarAndroid = exports.ToolbarAndroid = iconSet.ToolbarAndroid;
var getImageSource = exports.getImageSource = iconSet.getImageSource;
}, 2486, null, "react-native-vector-icons/FontAwesome.js");
__d(/* react-native-vector-icons/lib/create-icon-set.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native-vector-icons/lib/create-icon-set.js';
exports.default = createIconSet;

var _react = require(604    ); // 604 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(2488        ); // 2488 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactNative = require(2493            ); // 2493 = ./react-native

var _iconButton = require(2494           ); // 2494 = ./icon-button

var _iconButton2 = babelHelpers.interopRequireDefault(_iconButton);

var _tabBarItemIos = require(2629                ); // 2629 = ./tab-bar-item-ios

var _tabBarItemIos2 = babelHelpers.interopRequireDefault(_tabBarItemIos);

var _toolbarAndroid = require(2643               ); // 2643 = ./toolbar-android

var _toolbarAndroid2 = babelHelpers.interopRequireDefault(_toolbarAndroid);

var NativeIconAPI = _reactNative.NativeModules.RNVectorIconsManager || _reactNative.NativeModules.RNVectorIconsModule;

var DEFAULT_ICON_SIZE = 12;
var DEFAULT_ICON_COLOR = 'black';

function createIconSet(glyphMap, fontFamily, fontFile) {
  var fontReference = fontFamily;

  if (_reactNative.Platform.OS === 'android' && fontFile) {
    fontReference = fontFile.replace(/\.(otf|ttf)$/, '');
  }

  if (_reactNative.Platform.OS === 'windows' && fontFile) {
    fontReference = 'Assets/' + fontFile + '#' + fontFamily;
  }

  var IconNamePropType = _propTypes2.default.oneOf(Object.keys(glyphMap));

  var Icon = function (_Component) {
    babelHelpers.inherits(Icon, _Component);

    function Icon() {
      var _ref;

      var _temp, _this, _ret;

      babelHelpers.classCallCheck(this, Icon);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = Icon.__proto__ || Object.getPrototypeOf(Icon)).call.apply(_ref, [this].concat(args))), _this), _this.root = null, _this.handleRef = function (ref) {
        _this.root = ref;
      }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
    }

    babelHelpers.createClass(Icon, [{
      key: 'setNativeProps',
      value: function setNativeProps(nativeProps) {
        if (this.root) {
          this.root.setNativeProps(nativeProps);
        }
      }
    }, {
      key: 'render',
      value: function render() {
        var _props = this.props,
            name = _props.name,
            size = _props.size,
            color = _props.color,
            style = _props.style,
            props = babelHelpers.objectWithoutProperties(_props, ['name', 'size', 'color', 'style']);


        var glyph = name ? glyphMap[name] || '?' : '';
        if (typeof glyph === 'number') {
          glyph = String.fromCharCode(glyph);
        }

        var styleDefaults = {
          fontSize: size,
          color: color
        };

        var styleOverrides = {
          fontFamily: fontReference,
          fontWeight: 'normal',
          fontStyle: 'normal'
        };

        props.style = [styleDefaults, style, styleOverrides];
        props.ref = this.handleRef;

        return _react2.default.createElement(
          _reactNative.Text,
          babelHelpers.extends({}, props, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 82
            }
          }),
          glyph,
          this.props.children
        );
      }
    }]);
    return Icon;
  }(_react.Component);

  Icon.propTypes = {
    name: IconNamePropType,
    size: _propTypes2.default.number,
    color: _propTypes2.default.string,
    children: _propTypes2.default.node,
    style: _propTypes2.default.any };
  Icon.defaultProps = {
    size: DEFAULT_ICON_SIZE,
    allowFontScaling: false
  };


  var imageSourceCache = {};

  function ensureNativeModuleAvailable() {
    if (!NativeIconAPI) {
      if (_reactNative.Platform.OS === 'android') {
        throw new Error('RNVectorIconsModule not available, did you properly integrate the module? Try running `react-native link react-native-vector-icons` and recompiling.');
      }
      throw new Error('RNVectorIconsManager not available, did you add the library to your project and link with libRNVectorIcons.a? Try running `react-native link react-native-vector-icons` and recompiling.');
    }
  }

  function getImageSource(name) {
    var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_ICON_SIZE;
    var color = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_ICON_COLOR;

    ensureNativeModuleAvailable();

    var glyph = glyphMap[name] || '?';
    if (typeof glyph === 'number') {
      glyph = String.fromCharCode(glyph);
    }

    var processedColor = (0, _reactNative.processColor)(color);
    var cacheKey = glyph + ':' + size + ':' + processedColor;
    var scale = _reactNative.PixelRatio.get();

    return new Promise(function (resolve, reject) {
      var cached = imageSourceCache[cacheKey];
      if (typeof cached !== 'undefined') {
        if (!cached || cached instanceof Error) {
          reject(cached);
        } else {
          resolve({ uri: cached, scale: scale });
        }
      } else {
        NativeIconAPI.getImageForFont(fontReference, glyph, size, processedColor, function (err, image) {
          var error = typeof err === 'string' ? new Error(err) : err;
          imageSourceCache[cacheKey] = image || error || false;
          if (!error && image) {
            resolve({ uri: image, scale: scale });
          } else {
            reject(error);
          }
        });
      }
    });
  }

  function loadFont() {
    var file = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : fontFile;

    if (_reactNative.Platform.OS === 'ios') {
      ensureNativeModuleAvailable();
      if (!file) {
        return Promise.reject(new Error('Unable to load font, because no file was specified. '));
      }
      return NativeIconAPI.loadFontWithFileName.apply(NativeIconAPI, babelHelpers.toConsumableArray(file.split('.')));
    }
    return Promise.resolve();
  }

  Icon.Button = (0, _iconButton2.default)(Icon);
  Icon.TabBarItem = (0, _tabBarItemIos2.default)(IconNamePropType, getImageSource);
  Icon.TabBarItemIOS = Icon.TabBarItem;
  Icon.ToolbarAndroid = (0, _toolbarAndroid2.default)(IconNamePropType, getImageSource);
  Icon.getImageSource = getImageSource;
  Icon.loadFont = loadFont;

  return Icon;
}
}, 2487, null, "react-native-vector-icons/lib/create-icon-set.js");
__d(/* prop-types/index.js */function(global, require, module, exports) {

if (process.env.NODE_ENV !== 'production') {
  var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && (typeof Symbol === 'function' ? Symbol.for : '@@for') && (typeof Symbol === 'function' ? Symbol.for : '@@for')('react.element') || 0xeac7;

  var isValidElement = function isValidElement(object) {
    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
  };

  var throwOnDirectAccess = true;
  module.exports = require(2489                       )(isValidElement, throwOnDirectAccess); // 2489 = ./factoryWithTypeCheckers
} else {
  module.exports = require(2492                        )(); // 2492 = ./factoryWithThrowingShims
}
}, 2488, null, "prop-types/index.js");
__d(/* prop-types/factoryWithTypeCheckers.js */function(global, require, module, exports) {

'use strict';

var emptyFunction = require(336                     ); // 336 = fbjs/lib/emptyFunction
var invariant = require(346                 ); // 346 = fbjs/lib/invariant
var warning = require(335               ); // 335 = fbjs/lib/warning
var assign = require(400            ); // 400 = object-assign

var ReactPropTypesSecret = require(2490                        ); // 2490 = ./lib/ReactPropTypesSecret
var checkPropTypes = require(2491              ); // 2491 = ./checkPropTypes

module.exports = function (isValidElement, throwOnDirectAccess) {
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && (typeof Symbol === 'function' ? Symbol.iterator : '@@iterator');
  var FAUX_ITERATOR_SYMBOL = '@@iterator';
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  var ANONYMOUS = '<<anonymous>>';

  var ReactPropTypes = {
    array: createPrimitiveTypeChecker('array'),
    bool: createPrimitiveTypeChecker('boolean'),
    func: createPrimitiveTypeChecker('function'),
    number: createPrimitiveTypeChecker('number'),
    object: createPrimitiveTypeChecker('object'),
    string: createPrimitiveTypeChecker('string'),
    symbol: createPrimitiveTypeChecker('symbol'),

    any: createAnyTypeChecker(),
    arrayOf: createArrayOfTypeChecker,
    element: createElementTypeChecker(),
    instanceOf: createInstanceTypeChecker,
    node: createNodeChecker(),
    objectOf: createObjectOfTypeChecker,
    oneOf: createEnumTypeChecker,
    oneOfType: createUnionTypeChecker,
    shape: createShapeTypeChecker,
    exact: createStrictShapeTypeChecker
  };

  function is(x, y) {
    if (x === y) {
      return x !== 0 || 1 / x === 1 / y;
    } else {
      return x !== x && y !== y;
    }
  }

  function PropTypeError(message) {
    this.message = message;
    this.stack = '';
  }

  PropTypeError.prototype = Error.prototype;

  function createChainableTypeChecker(validate) {
    if (process.env.NODE_ENV !== 'production') {
      var manualPropTypeCallCache = {};
      var manualPropTypeWarningCount = 0;
    }
    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
      componentName = componentName || ANONYMOUS;
      propFullName = propFullName || propName;

      if (secret !== ReactPropTypesSecret) {
        if (throwOnDirectAccess) {
          invariant(false, 'Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use `PropTypes.checkPropTypes()` to call them. ' + 'Read more at http://fb.me/use-check-prop-types');
        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {
          var cacheKey = componentName + ':' + propName;
          if (!manualPropTypeCallCache[cacheKey] && manualPropTypeWarningCount < 3) {
            warning(false, 'You are manually calling a React.PropTypes validation ' + 'function for the `%s` prop on `%s`. This is deprecated ' + 'and will throw in the standalone `prop-types` package. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.', propFullName, componentName);
            manualPropTypeCallCache[cacheKey] = true;
            manualPropTypeWarningCount++;
          }
        }
      }
      if (props[propName] == null) {
        if (isRequired) {
          if (props[propName] === null) {
            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
          }
          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
        }
        return null;
      } else {
        return validate(props, propName, componentName, location, propFullName);
      }
    }

    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);

    return chainedCheckType;
  }

  function createPrimitiveTypeChecker(expectedType) {
    function validate(props, propName, componentName, location, propFullName, secret) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== expectedType) {
        var preciseType = getPreciseType(propValue);

        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createAnyTypeChecker() {
    return createChainableTypeChecker(emptyFunction.thatReturnsNull);
  }

  function createArrayOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
      }
      var propValue = props[propName];
      if (!Array.isArray(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
      }
      for (var i = 0; i < propValue.length; i++) {
        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
        if (error instanceof Error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!isValidElement(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createInstanceTypeChecker(expectedClass) {
    function validate(props, propName, componentName, location, propFullName) {
      if (!(props[propName] instanceof expectedClass)) {
        var expectedClassName = expectedClass.name || ANONYMOUS;
        var actualClassName = getClassName(props[propName]);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createEnumTypeChecker(expectedValues) {
    if (!Array.isArray(expectedValues)) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;
      return emptyFunction.thatReturnsNull;
    }

    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      for (var i = 0; i < expectedValues.length; i++) {
        if (is(propValue, expectedValues[i])) {
          return null;
        }
      }

      var valuesString = JSON.stringify(expectedValues);
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createObjectOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
      }
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
      }
      for (var key in propValue) {
        if (propValue.hasOwnProperty(key)) {
          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
          if (error instanceof Error) {
            return error;
          }
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createUnionTypeChecker(arrayOfTypeCheckers) {
    if (!Array.isArray(arrayOfTypeCheckers)) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
      return emptyFunction.thatReturnsNull;
    }

    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (typeof checker !== 'function') {
        warning(false, 'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' + 'received %s at index %s.', getPostfixForTypeWarning(checker), i);
        return emptyFunction.thatReturnsNull;
      }
    }

    function validate(props, propName, componentName, location, propFullName) {
      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];
        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
          return null;
        }
      }

      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createNodeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!isNode(props[propName])) {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      for (var key in shapeTypes) {
        var checker = shapeTypes[key];
        if (!checker) {
          continue;
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createStrictShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }

      var allKeys = assign({}, props[propName], shapeTypes);
      for (var key in allKeys) {
        var checker = shapeTypes[key];
        if (!checker) {
          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' + '\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function isNode(propValue) {
    switch (typeof propValue) {
      case 'number':
      case 'string':
      case 'undefined':
        return true;
      case 'boolean':
        return !propValue;
      case 'object':
        if (Array.isArray(propValue)) {
          return propValue.every(isNode);
        }
        if (propValue === null || isValidElement(propValue)) {
          return true;
        }

        var iteratorFn = getIteratorFn(propValue);
        if (iteratorFn) {
          var iterator = iteratorFn.call(propValue);
          var step;
          if (iteratorFn !== propValue.entries) {
            while (!(step = iterator.next()).done) {
              if (!isNode(step.value)) {
                return false;
              }
            }
          } else {
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                if (!isNode(entry[1])) {
                  return false;
                }
              }
            }
          }
        } else {
          return false;
        }

        return true;
      default:
        return false;
    }
  }

  function isSymbol(propType, propValue) {
    if (propType === 'symbol') {
      return true;
    }

    if (propValue['@@toStringTag'] === 'Symbol') {
      return true;
    }

    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
      return true;
    }

    return false;
  }

  function getPropType(propValue) {
    var propType = typeof propValue;
    if (Array.isArray(propValue)) {
      return 'array';
    }
    if (propValue instanceof RegExp) {
      return 'object';
    }
    if (isSymbol(propType, propValue)) {
      return 'symbol';
    }
    return propType;
  }

  function getPreciseType(propValue) {
    if (typeof propValue === 'undefined' || propValue === null) {
      return '' + propValue;
    }
    var propType = getPropType(propValue);
    if (propType === 'object') {
      if (propValue instanceof Date) {
        return 'date';
      } else if (propValue instanceof RegExp) {
        return 'regexp';
      }
    }
    return propType;
  }

  function getPostfixForTypeWarning(value) {
    var type = getPreciseType(value);
    switch (type) {
      case 'array':
      case 'object':
        return 'an ' + type;
      case 'boolean':
      case 'date':
      case 'regexp':
        return 'a ' + type;
      default:
        return type;
    }
  }

  function getClassName(propValue) {
    if (!propValue.constructor || !propValue.constructor.name) {
      return ANONYMOUS;
    }
    return propValue.constructor.name;
  }

  ReactPropTypes.checkPropTypes = checkPropTypes;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};
}, 2489, null, "prop-types/factoryWithTypeCheckers.js");
__d(/* prop-types/lib/ReactPropTypesSecret.js */function(global, require, module, exports) {

'use strict';

var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;
}, 2490, null, "prop-types/lib/ReactPropTypesSecret.js");
__d(/* prop-types/checkPropTypes.js */function(global, require, module, exports) {

'use strict';

if (process.env.NODE_ENV !== 'production') {
  var invariant = require(346                 ); // 346 = fbjs/lib/invariant
  var warning = require(335               ); // 335 = fbjs/lib/warning
  var ReactPropTypesSecret = require(2490                        ); // 2490 = ./lib/ReactPropTypesSecret
  var loggedTypeFailures = {};
}

function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
  if (process.env.NODE_ENV !== 'production') {
    for (var typeSpecName in typeSpecs) {
      if (typeSpecs.hasOwnProperty(typeSpecName)) {
        var error;

        try {
          invariant(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'the `prop-types` package, but received `%s`.', componentName || 'React class', location, typeSpecName, typeof typeSpecs[typeSpecName]);
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
          error = ex;
        }
        warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error);
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          loggedTypeFailures[error.message] = true;

          var stack = getStack ? getStack() : '';

          warning(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');
        }
      }
    }
  }
}

module.exports = checkPropTypes;
}, 2491, null, "prop-types/checkPropTypes.js");
__d(/* prop-types/factoryWithThrowingShims.js */function(global, require, module, exports) {

'use strict';

var emptyFunction = require(336                     ); // 336 = fbjs/lib/emptyFunction
var invariant = require(346                 ); // 346 = fbjs/lib/invariant
var ReactPropTypesSecret = require(2490                        ); // 2490 = ./lib/ReactPropTypesSecret

module.exports = function () {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret) {
      return;
    }
    invariant(false, 'Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use PropTypes.checkPropTypes() to call them. ' + 'Read more at http://fb.me/use-check-prop-types');
  };
  shim.isRequired = shim;
  function getShim() {
    return shim;
  };

  var ReactPropTypes = {
    array: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,

    any: shim,
    arrayOf: getShim,
    element: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim,
    exact: getShim
  };

  ReactPropTypes.checkPropTypes = emptyFunction;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};
}, 2492, null, "prop-types/factoryWithThrowingShims.js");
__d(/* react-native-vector-icons/lib/react-native.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _reactNative = require(334           ); // 334 = react-native

Object.keys(_reactNative).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _reactNative[key];
    }
  });
});
}, 2493, null, "react-native-vector-icons/lib/react-native.js");
__d(/* react-native-vector-icons/lib/icon-button.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native-vector-icons/lib/icon-button.js';
exports.default = createIconButtonComponent;

var _isString = require(2495             ); // 2495 = lodash/isString

var _isString2 = babelHelpers.interopRequireDefault(_isString);

var _omit = require(2497         ); // 2497 = lodash/omit

var _omit2 = babelHelpers.interopRequireDefault(_omit);

var _pick = require(2622         ); // 2622 = lodash/pick

var _pick2 = babelHelpers.interopRequireDefault(_pick);

var _react = require(604    ); // 604 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(2488        ); // 2488 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactNative = require(2493            ); // 2493 = ./react-native

var styles = _reactNative.StyleSheet.create({
  container: {
    flexDirection: 'row',
    justifyContent: 'flex-start',
    alignItems: 'center',
    padding: 8
  },
  touchable: {
    overflow: 'hidden'
  },
  icon: {
    marginRight: 10
  },
  text: {
    fontWeight: '600',
    backgroundColor: 'transparent'
  }
});

var IOS7_BLUE = '#007AFF';

function createIconButtonComponent(Icon) {
  var _class, _temp;

  return _temp = _class = function (_Component) {
    babelHelpers.inherits(IconButton, _Component);

    function IconButton() {
      babelHelpers.classCallCheck(this, IconButton);
      return babelHelpers.possibleConstructorReturn(this, (IconButton.__proto__ || Object.getPrototypeOf(IconButton)).apply(this, arguments));
    }

    babelHelpers.createClass(IconButton, [{
      key: 'render',
      value: function render() {
        var _props = this.props,
            style = _props.style,
            iconStyle = _props.iconStyle,
            children = _props.children,
            restProps = babelHelpers.objectWithoutProperties(_props, ['style', 'iconStyle', 'children']);


        var iconProps = (0, _pick2.default)(restProps, Object.keys(_reactNative.Text.propTypes), 'style', 'name', 'size', 'color');
        var touchableProps = (0, _pick2.default)(restProps, Object.keys(_reactNative.TouchableHighlight.propTypes));
        var props = (0, _omit2.default)(restProps, Object.keys(iconProps), Object.keys(touchableProps), 'iconStyle', 'borderRadius', 'backgroundColor');
        iconProps.style = iconStyle ? [styles.icon, iconStyle] : styles.icon;

        var colorStyle = (0, _pick2.default)(this.props, 'color');
        var blockStyle = (0, _pick2.default)(this.props, 'backgroundColor', 'borderRadius');

        return _react2.default.createElement(
          _reactNative.TouchableHighlight,
          babelHelpers.extends({
            style: [styles.touchable, blockStyle]
          }, touchableProps, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 77
            }
          }),
          _react2.default.createElement(
            _reactNative.View,
            babelHelpers.extends({ style: [styles.container, blockStyle, style] }, props, {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 81
              }
            }),
            _react2.default.createElement(Icon, babelHelpers.extends({}, iconProps, {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 82
              }
            })),
            (0, _isString2.default)(children) ? _react2.default.createElement(
              _reactNative.Text,
              { style: [styles.text, colorStyle], __source: {
                  fileName: _jsxFileName,
                  lineNumber: 84
                }
              },
              children
            ) : children
          )
        );
      }
    }]);
    return IconButton;
  }(_react.Component), _class.propTypes = {
    backgroundColor: _propTypes2.default.string,
    borderRadius: _propTypes2.default.number,
    color: _propTypes2.default.string,
    size: _propTypes2.default.number,
    iconStyle: _propTypes2.default.any,
    style: _propTypes2.default.any,
    children: _propTypes2.default.node
  }, _class.defaultProps = {
    backgroundColor: IOS7_BLUE,
    borderRadius: 5,
    color: 'white',
    size: 20
  }, _temp;
}
}, 2494, null, "react-native-vector-icons/lib/icon-button.js");
__d(/* lodash/isString.js */function(global, require, module, exports) {var baseGetTag = require(1463           ), // 1463 = ./_baseGetTag
    isArray = require(2496       ), // 2496 = ./isArray
    isObjectLike = require(1471            ); // 1471 = ./isObjectLike

var stringTag = '[object String]';

function isString(value) {
    return typeof value == 'string' || !isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag;
}

module.exports = isString;
}, 2495, null, "lodash/isString.js");
__d(/* lodash/isArray.js */function(global, require, module, exports) {
var isArray = Array.isArray;

module.exports = isArray;
}, 2496, null, "lodash/isArray.js");
__d(/* lodash/omit.js */function(global, require, module, exports) {var arrayMap = require(2498         ), // 2498 = ./_arrayMap
    baseClone = require(2499          ), // 2499 = ./_baseClone
    baseUnset = require(2596          ), // 2596 = ./_baseUnset
    castPath = require(2597         ), // 2597 = ./_castPath
    copyObject = require(2543           ), // 2543 = ./_copyObject
    customOmitClone = require(2610                ), // 2610 = ./_customOmitClone
    flatRest = require(2611         ), // 2611 = ./_flatRest
    getAllKeysIn = require(2576             ); // 2576 = ./_getAllKeysIn

var CLONE_DEEP_FLAG = 1,
    CLONE_FLAT_FLAG = 2,
    CLONE_SYMBOLS_FLAG = 4;

var omit = flatRest(function (object, paths) {
  var result = {};
  if (object == null) {
    return result;
  }
  var isDeep = false;
  paths = arrayMap(paths, function (path) {
    path = castPath(path, object);
    isDeep || (isDeep = path.length > 1);
    return path;
  });
  copyObject(object, getAllKeysIn(object), result);
  if (isDeep) {
    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
  }
  var length = paths.length;
  while (length--) {
    baseUnset(result, paths[length]);
  }
  return result;
});

module.exports = omit;
}, 2497, null, "lodash/omit.js");
__d(/* lodash/_arrayMap.js */function(global, require, module, exports) {
function arrayMap(array, iteratee) {
  var index = -1,
      length = array == null ? 0 : array.length,
      result = Array(length);

  while (++index < length) {
    result[index] = iteratee(array[index], index, array);
  }
  return result;
}

module.exports = arrayMap;
}, 2498, null, "lodash/_arrayMap.js");
__d(/* lodash/_baseClone.js */function(global, require, module, exports) {var Stack = require(2500      ), // 2500 = ./_Stack
    arrayEach = require(2538          ), // 2538 = ./_arrayEach
    assignValue = require(2539            ), // 2539 = ./_assignValue
    baseAssign = require(2542           ), // 2542 = ./_baseAssign
    baseAssignIn = require(2561             ), // 2561 = ./_baseAssignIn
    cloneBuffer = require(2565            ), // 2565 = ./_cloneBuffer
    copyArray = require(2566          ), // 2566 = ./_copyArray
    copySymbols = require(2567            ), // 2567 = ./_copySymbols
    copySymbolsIn = require(2571              ), // 2571 = ./_copySymbolsIn
    getAllKeys = require(2574           ), // 2574 = ./_getAllKeys
    getAllKeysIn = require(2576             ), // 2576 = ./_getAllKeysIn
    getTag = require(2577       ), // 2577 = ./_getTag
    initCloneArray = require(2582               ), // 2582 = ./_initCloneArray
    initCloneByTag = require(2583               ), // 2583 = ./_initCloneByTag
    initCloneObject = require(2590                ), // 2590 = ./_initCloneObject
    isArray = require(2496       ), // 2496 = ./isArray
    isBuffer = require(2549        ), // 2549 = ./isBuffer
    isMap = require(2592     ), // 2592 = ./isMap
    isObject = require(2518        ), // 2518 = ./isObject
    isSet = require(2594     ), // 2594 = ./isSet
    keys = require(2544    ); // 2544 = ./keys

var CLONE_DEEP_FLAG = 1,
    CLONE_FLAT_FLAG = 2,
    CLONE_SYMBOLS_FLAG = 4;

var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    objectTag = '[object Object]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]',
    weakMapTag = '[object WeakMap]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

var cloneableTags = {};
cloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[setTag] = cloneableTags[stringTag] = cloneableTags[symbolTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
cloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;

function baseClone(value, bitmask, customizer, key, object, stack) {
  var result,
      isDeep = bitmask & CLONE_DEEP_FLAG,
      isFlat = bitmask & CLONE_FLAT_FLAG,
      isFull = bitmask & CLONE_SYMBOLS_FLAG;

  if (customizer) {
    result = object ? customizer(value, key, object, stack) : customizer(value);
  }
  if (result !== undefined) {
    return result;
  }
  if (!isObject(value)) {
    return value;
  }
  var isArr = isArray(value);
  if (isArr) {
    result = initCloneArray(value);
    if (!isDeep) {
      return copyArray(value, result);
    }
  } else {
    var tag = getTag(value),
        isFunc = tag == funcTag || tag == genTag;

    if (isBuffer(value)) {
      return cloneBuffer(value, isDeep);
    }
    if (tag == objectTag || tag == argsTag || isFunc && !object) {
      result = isFlat || isFunc ? {} : initCloneObject(value);
      if (!isDeep) {
        return isFlat ? copySymbolsIn(value, baseAssignIn(result, value)) : copySymbols(value, baseAssign(result, value));
      }
    } else {
      if (!cloneableTags[tag]) {
        return object ? value : {};
      }
      result = initCloneByTag(value, tag, isDeep);
    }
  }

  stack || (stack = new Stack());
  var stacked = stack.get(value);
  if (stacked) {
    return stacked;
  }
  stack.set(value, result);

  if (isSet(value)) {
    value.forEach(function (subValue) {
      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
    });

    return result;
  }

  if (isMap(value)) {
    value.forEach(function (subValue, key) {
      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));
    });

    return result;
  }

  var keysFunc = isFull ? isFlat ? getAllKeysIn : getAllKeys : isFlat ? keysIn : keys;

  var props = isArr ? undefined : keysFunc(value);
  arrayEach(props || value, function (subValue, key) {
    if (props) {
      key = subValue;
      subValue = value[key];
    }

    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
  });
  return result;
}

module.exports = baseClone;
}, 2499, null, "lodash/_baseClone.js");
__d(/* lodash/_Stack.js */function(global, require, module, exports) {var ListCache = require(2501          ), // 2501 = ./_ListCache
    stackClear = require(2509           ), // 2509 = ./_stackClear
    stackDelete = require(2510            ), // 2510 = ./_stackDelete
    stackGet = require(2511         ), // 2511 = ./_stackGet
    stackHas = require(2512         ), // 2512 = ./_stackHas
    stackSet = require(2513         ); // 2513 = ./_stackSet

function Stack(entries) {
  var data = this.__data__ = new ListCache(entries);
  this.size = data.size;
}

Stack.prototype.clear = stackClear;
Stack.prototype['delete'] = stackDelete;
Stack.prototype.get = stackGet;
Stack.prototype.has = stackHas;
Stack.prototype.set = stackSet;

module.exports = Stack;
}, 2500, null, "lodash/_Stack.js");
__d(/* lodash/_ListCache.js */function(global, require, module, exports) {var listCacheClear = require(2502               ), // 2502 = ./_listCacheClear
    listCacheDelete = require(2503                ), // 2503 = ./_listCacheDelete
    listCacheGet = require(2506             ), // 2506 = ./_listCacheGet
    listCacheHas = require(2507             ), // 2507 = ./_listCacheHas
    listCacheSet = require(2508             ); // 2508 = ./_listCacheSet

function ListCache(entries) {
    var index = -1,
        length = entries == null ? 0 : entries.length;

    this.clear();
    while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
    }
}

ListCache.prototype.clear = listCacheClear;
ListCache.prototype['delete'] = listCacheDelete;
ListCache.prototype.get = listCacheGet;
ListCache.prototype.has = listCacheHas;
ListCache.prototype.set = listCacheSet;

module.exports = ListCache;
}, 2501, null, "lodash/_ListCache.js");
__d(/* lodash/_listCacheClear.js */function(global, require, module, exports) {
function listCacheClear() {
  this.__data__ = [];
  this.size = 0;
}

module.exports = listCacheClear;
}, 2502, null, "lodash/_listCacheClear.js");
__d(/* lodash/_listCacheDelete.js */function(global, require, module, exports) {var assocIndexOf = require(2504             ); // 2504 = ./_assocIndexOf

var arrayProto = Array.prototype;

var splice = arrayProto.splice;

function listCacheDelete(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  --this.size;
  return true;
}

module.exports = listCacheDelete;
}, 2503, null, "lodash/_listCacheDelete.js");
__d(/* lodash/_assocIndexOf.js */function(global, require, module, exports) {var eq = require(2505  ); // 2505 = ./eq

function assocIndexOf(array, key) {
  var length = array.length;
  while (length--) {
    if (eq(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}

module.exports = assocIndexOf;
}, 2504, null, "lodash/_assocIndexOf.js");
__d(/* lodash/eq.js */function(global, require, module, exports) {
function eq(value, other) {
  return value === other || value !== value && other !== other;
}

module.exports = eq;
}, 2505, null, "lodash/eq.js");
__d(/* lodash/_listCacheGet.js */function(global, require, module, exports) {var assocIndexOf = require(2504             ); // 2504 = ./_assocIndexOf

function listCacheGet(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  return index < 0 ? undefined : data[index][1];
}

module.exports = listCacheGet;
}, 2506, null, "lodash/_listCacheGet.js");
__d(/* lodash/_listCacheHas.js */function(global, require, module, exports) {var assocIndexOf = require(2504             ); // 2504 = ./_assocIndexOf

function listCacheHas(key) {
  return assocIndexOf(this.__data__, key) > -1;
}

module.exports = listCacheHas;
}, 2507, null, "lodash/_listCacheHas.js");
__d(/* lodash/_listCacheSet.js */function(global, require, module, exports) {var assocIndexOf = require(2504             ); // 2504 = ./_assocIndexOf

function listCacheSet(key, value) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    ++this.size;
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}

module.exports = listCacheSet;
}, 2508, null, "lodash/_listCacheSet.js");
__d(/* lodash/_stackClear.js */function(global, require, module, exports) {var ListCache = require(2501          ); // 2501 = ./_ListCache

function stackClear() {
  this.__data__ = new ListCache();
  this.size = 0;
}

module.exports = stackClear;
}, 2509, null, "lodash/_stackClear.js");
__d(/* lodash/_stackDelete.js */function(global, require, module, exports) {
function stackDelete(key) {
  var data = this.__data__,
      result = data['delete'](key);

  this.size = data.size;
  return result;
}

module.exports = stackDelete;
}, 2510, null, "lodash/_stackDelete.js");
__d(/* lodash/_stackGet.js */function(global, require, module, exports) {
function stackGet(key) {
  return this.__data__.get(key);
}

module.exports = stackGet;
}, 2511, null, "lodash/_stackGet.js");
__d(/* lodash/_stackHas.js */function(global, require, module, exports) {
function stackHas(key) {
  return this.__data__.has(key);
}

module.exports = stackHas;
}, 2512, null, "lodash/_stackHas.js");
__d(/* lodash/_stackSet.js */function(global, require, module, exports) {var ListCache = require(2501          ), // 2501 = ./_ListCache
    Map = require(2514    ), // 2514 = ./_Map
    MapCache = require(2523         ); // 2523 = ./_MapCache

var LARGE_ARRAY_SIZE = 200;

function stackSet(key, value) {
  var data = this.__data__;
  if (data instanceof ListCache) {
    var pairs = data.__data__;
    if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {
      pairs.push([key, value]);
      this.size = ++data.size;
      return this;
    }
    data = this.__data__ = new MapCache(pairs);
  }
  data.set(key, value);
  this.size = data.size;
  return this;
}

module.exports = stackSet;
}, 2513, null, "lodash/_stackSet.js");
__d(/* lodash/_Map.js */function(global, require, module, exports) {var getNative = require(2515          ), // 2515 = ./_getNative
    root = require(1465     ); // 1465 = ./_root

var Map = getNative(root, 'Map');

module.exports = Map;
}, 2514, null, "lodash/_Map.js");
__d(/* lodash/_getNative.js */function(global, require, module, exports) {var baseIsNative = require(2516             ), // 2516 = ./_baseIsNative
    getValue = require(2522         ); // 2522 = ./_getValue

function getNative(object, key) {
  var value = getValue(object, key);
  return baseIsNative(value) ? value : undefined;
}

module.exports = getNative;
}, 2515, null, "lodash/_getNative.js");
__d(/* lodash/_baseIsNative.js */function(global, require, module, exports) {var isFunction = require(2517          ), // 2517 = ./isFunction
    isMasked = require(2519         ), // 2519 = ./_isMasked
    isObject = require(2518        ), // 2518 = ./isObject
    toSource = require(2521         ); // 2521 = ./_toSource

var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

var reIsHostCtor = /^\[object .+?Constructor\]$/;

var funcProto = Function.prototype,
    objectProto = Object.prototype;

var funcToString = funcProto.toString;

var hasOwnProperty = objectProto.hasOwnProperty;

var reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&').replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');

function baseIsNative(value) {
  if (!isObject(value) || isMasked(value)) {
    return false;
  }
  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
  return pattern.test(toSource(value));
}

module.exports = baseIsNative;
}, 2516, null, "lodash/_baseIsNative.js");
__d(/* lodash/isFunction.js */function(global, require, module, exports) {var baseGetTag = require(1463           ), // 1463 = ./_baseGetTag
    isObject = require(2518        ); // 2518 = ./isObject

var asyncTag = '[object AsyncFunction]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    proxyTag = '[object Proxy]';

function isFunction(value) {
    if (!isObject(value)) {
        return false;
    }

    var tag = baseGetTag(value);
    return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
}

module.exports = isFunction;
}, 2517, null, "lodash/isFunction.js");
__d(/* lodash/isObject.js */function(global, require, module, exports) {
function isObject(value) {
  var type = typeof value;
  return value != null && (type == 'object' || type == 'function');
}

module.exports = isObject;
}, 2518, null, "lodash/isObject.js");
__d(/* lodash/_isMasked.js */function(global, require, module, exports) {var coreJsData = require(2520           ); // 2520 = ./_coreJsData

var maskSrcKey = function () {
  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
  return uid ? 'Symbol(src)_1.' + uid : '';
}();

function isMasked(func) {
  return !!maskSrcKey && maskSrcKey in func;
}

module.exports = isMasked;
}, 2519, null, "lodash/_isMasked.js");
__d(/* lodash/_coreJsData.js */function(global, require, module, exports) {var root = require(1465     ); // 1465 = ./_root

var coreJsData = root['__core-js_shared__'];

module.exports = coreJsData;
}, 2520, null, "lodash/_coreJsData.js");
__d(/* lodash/_toSource.js */function(global, require, module, exports) {
var funcProto = Function.prototype;

var funcToString = funcProto.toString;

function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e) {}
    try {
      return func + '';
    } catch (e) {}
  }
  return '';
}

module.exports = toSource;
}, 2521, null, "lodash/_toSource.js");
__d(/* lodash/_getValue.js */function(global, require, module, exports) {
function getValue(object, key) {
  return object == null ? undefined : object[key];
}

module.exports = getValue;
}, 2522, null, "lodash/_getValue.js");
__d(/* lodash/_MapCache.js */function(global, require, module, exports) {var mapCacheClear = require(2524              ), // 2524 = ./_mapCacheClear
    mapCacheDelete = require(2532               ), // 2532 = ./_mapCacheDelete
    mapCacheGet = require(2535            ), // 2535 = ./_mapCacheGet
    mapCacheHas = require(2536            ), // 2536 = ./_mapCacheHas
    mapCacheSet = require(2537            ); // 2537 = ./_mapCacheSet

function MapCache(entries) {
    var index = -1,
        length = entries == null ? 0 : entries.length;

    this.clear();
    while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
    }
}

MapCache.prototype.clear = mapCacheClear;
MapCache.prototype['delete'] = mapCacheDelete;
MapCache.prototype.get = mapCacheGet;
MapCache.prototype.has = mapCacheHas;
MapCache.prototype.set = mapCacheSet;

module.exports = MapCache;
}, 2523, null, "lodash/_MapCache.js");
__d(/* lodash/_mapCacheClear.js */function(global, require, module, exports) {var Hash = require(2525     ), // 2525 = ./_Hash
    ListCache = require(2501          ), // 2501 = ./_ListCache
    Map = require(2514    ); // 2514 = ./_Map

function mapCacheClear() {
  this.size = 0;
  this.__data__ = {
    'hash': new Hash(),
    'map': new (Map || ListCache)(),
    'string': new Hash()
  };
}

module.exports = mapCacheClear;
}, 2524, null, "lodash/_mapCacheClear.js");
__d(/* lodash/_Hash.js */function(global, require, module, exports) {var hashClear = require(2526          ), // 2526 = ./_hashClear
    hashDelete = require(2528           ), // 2528 = ./_hashDelete
    hashGet = require(2529        ), // 2529 = ./_hashGet
    hashHas = require(2530        ), // 2530 = ./_hashHas
    hashSet = require(2531        ); // 2531 = ./_hashSet

function Hash(entries) {
    var index = -1,
        length = entries == null ? 0 : entries.length;

    this.clear();
    while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
    }
}

Hash.prototype.clear = hashClear;
Hash.prototype['delete'] = hashDelete;
Hash.prototype.get = hashGet;
Hash.prototype.has = hashHas;
Hash.prototype.set = hashSet;

module.exports = Hash;
}, 2525, null, "lodash/_Hash.js");
__d(/* lodash/_hashClear.js */function(global, require, module, exports) {var nativeCreate = require(2527             ); // 2527 = ./_nativeCreate

function hashClear() {
  this.__data__ = nativeCreate ? nativeCreate(null) : {};
  this.size = 0;
}

module.exports = hashClear;
}, 2526, null, "lodash/_hashClear.js");
__d(/* lodash/_nativeCreate.js */function(global, require, module, exports) {var getNative = require(2515          ); // 2515 = ./_getNative

var nativeCreate = getNative(Object, 'create');

module.exports = nativeCreate;
}, 2527, null, "lodash/_nativeCreate.js");
__d(/* lodash/_hashDelete.js */function(global, require, module, exports) {
function hashDelete(key) {
  var result = this.has(key) && delete this.__data__[key];
  this.size -= result ? 1 : 0;
  return result;
}

module.exports = hashDelete;
}, 2528, null, "lodash/_hashDelete.js");
__d(/* lodash/_hashGet.js */function(global, require, module, exports) {var nativeCreate = require(2527             ); // 2527 = ./_nativeCreate

var HASH_UNDEFINED = '__lodash_hash_undefined__';

var objectProto = Object.prototype;

var hasOwnProperty = objectProto.hasOwnProperty;

function hashGet(key) {
  var data = this.__data__;
  if (nativeCreate) {
    var result = data[key];
    return result === HASH_UNDEFINED ? undefined : result;
  }
  return hasOwnProperty.call(data, key) ? data[key] : undefined;
}

module.exports = hashGet;
}, 2529, null, "lodash/_hashGet.js");
__d(/* lodash/_hashHas.js */function(global, require, module, exports) {var nativeCreate = require(2527             ); // 2527 = ./_nativeCreate

var objectProto = Object.prototype;

var hasOwnProperty = objectProto.hasOwnProperty;

function hashHas(key) {
  var data = this.__data__;
  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
}

module.exports = hashHas;
}, 2530, null, "lodash/_hashHas.js");
__d(/* lodash/_hashSet.js */function(global, require, module, exports) {var nativeCreate = require(2527             ); // 2527 = ./_nativeCreate

var HASH_UNDEFINED = '__lodash_hash_undefined__';

function hashSet(key, value) {
  var data = this.__data__;
  this.size += this.has(key) ? 0 : 1;
  data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;
  return this;
}

module.exports = hashSet;
}, 2531, null, "lodash/_hashSet.js");
__d(/* lodash/_mapCacheDelete.js */function(global, require, module, exports) {var getMapData = require(2533           ); // 2533 = ./_getMapData

function mapCacheDelete(key) {
  var result = getMapData(this, key)['delete'](key);
  this.size -= result ? 1 : 0;
  return result;
}

module.exports = mapCacheDelete;
}, 2532, null, "lodash/_mapCacheDelete.js");
__d(/* lodash/_getMapData.js */function(global, require, module, exports) {var isKeyable = require(2534          ); // 2534 = ./_isKeyable

function getMapData(map, key) {
  var data = map.__data__;
  return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;
}

module.exports = getMapData;
}, 2533, null, "lodash/_getMapData.js");
__d(/* lodash/_isKeyable.js */function(global, require, module, exports) {
function isKeyable(value) {
  var type = typeof value;
  return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;
}

module.exports = isKeyable;
}, 2534, null, "lodash/_isKeyable.js");
__d(/* lodash/_mapCacheGet.js */function(global, require, module, exports) {var getMapData = require(2533           ); // 2533 = ./_getMapData

function mapCacheGet(key) {
  return getMapData(this, key).get(key);
}

module.exports = mapCacheGet;
}, 2535, null, "lodash/_mapCacheGet.js");
__d(/* lodash/_mapCacheHas.js */function(global, require, module, exports) {var getMapData = require(2533           ); // 2533 = ./_getMapData

function mapCacheHas(key) {
  return getMapData(this, key).has(key);
}

module.exports = mapCacheHas;
}, 2536, null, "lodash/_mapCacheHas.js");
__d(/* lodash/_mapCacheSet.js */function(global, require, module, exports) {var getMapData = require(2533           ); // 2533 = ./_getMapData

function mapCacheSet(key, value) {
  var data = getMapData(this, key),
      size = data.size;

  data.set(key, value);
  this.size += data.size == size ? 0 : 1;
  return this;
}

module.exports = mapCacheSet;
}, 2537, null, "lodash/_mapCacheSet.js");
__d(/* lodash/_arrayEach.js */function(global, require, module, exports) {
function arrayEach(array, iteratee) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (iteratee(array[index], index, array) === false) {
      break;
    }
  }
  return array;
}

module.exports = arrayEach;
}, 2538, null, "lodash/_arrayEach.js");
__d(/* lodash/_assignValue.js */function(global, require, module, exports) {var baseAssignValue = require(2540                ), // 2540 = ./_baseAssignValue
    eq = require(2505  ); // 2505 = ./eq

var objectProto = Object.prototype;

var hasOwnProperty = objectProto.hasOwnProperty;

function assignValue(object, key, value) {
  var objValue = object[key];
  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) || value === undefined && !(key in object)) {
    baseAssignValue(object, key, value);
  }
}

module.exports = assignValue;
}, 2539, null, "lodash/_assignValue.js");
__d(/* lodash/_baseAssignValue.js */function(global, require, module, exports) {var defineProperty = require(2541               ); // 2541 = ./_defineProperty

function baseAssignValue(object, key, value) {
  if (key == '__proto__' && defineProperty) {
    defineProperty(object, key, {
      'configurable': true,
      'enumerable': true,
      'value': value,
      'writable': true
    });
  } else {
    object[key] = value;
  }
}

module.exports = baseAssignValue;
}, 2540, null, "lodash/_baseAssignValue.js");
__d(/* lodash/_defineProperty.js */function(global, require, module, exports) {var getNative = require(2515          ); // 2515 = ./_getNative

var defineProperty = function () {
  try {
    var func = getNative(Object, 'defineProperty');
    func({}, '', {});
    return func;
  } catch (e) {}
}();

module.exports = defineProperty;
}, 2541, null, "lodash/_defineProperty.js");
__d(/* lodash/_baseAssign.js */function(global, require, module, exports) {var copyObject = require(2543           ), // 2543 = ./_copyObject
    keys = require(2544    ); // 2544 = ./keys

function baseAssign(object, source) {
  return object && copyObject(source, keys(source), object);
}

module.exports = baseAssign;
}, 2542, null, "lodash/_baseAssign.js");
__d(/* lodash/_copyObject.js */function(global, require, module, exports) {var assignValue = require(2539            ), // 2539 = ./_assignValue
    baseAssignValue = require(2540                ); // 2540 = ./_baseAssignValue

function copyObject(source, props, object, customizer) {
  var isNew = !object;
  object || (object = {});

  var index = -1,
      length = props.length;

  while (++index < length) {
    var key = props[index];

    var newValue = customizer ? customizer(object[key], source[key], key, object, source) : undefined;

    if (newValue === undefined) {
      newValue = source[key];
    }
    if (isNew) {
      baseAssignValue(object, key, newValue);
    } else {
      assignValue(object, key, newValue);
    }
  }
  return object;
}

module.exports = copyObject;
}, 2543, null, "lodash/_copyObject.js");
__d(/* lodash/keys.js */function(global, require, module, exports) {var arrayLikeKeys = require(2545              ), // 2545 = ./_arrayLikeKeys
    baseKeys = require(2557         ), // 2557 = ./_baseKeys
    isArrayLike = require(2560           ); // 2560 = ./isArrayLike

function keys(object) {
  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
}

module.exports = keys;
}, 2544, null, "lodash/keys.js");
__d(/* lodash/_arrayLikeKeys.js */function(global, require, module, exports) {var baseTimes = require(2546          ), // 2546 = ./_baseTimes
    isArguments = require(2547           ), // 2547 = ./isArguments
    isArray = require(2496       ), // 2496 = ./isArray
    isBuffer = require(2549        ), // 2549 = ./isBuffer
    isIndex = require(2551        ), // 2551 = ./_isIndex
    isTypedArray = require(2552            ); // 2552 = ./isTypedArray

var objectProto = Object.prototype;

var hasOwnProperty = objectProto.hasOwnProperty;

function arrayLikeKeys(value, inherited) {
  var isArr = isArray(value),
      isArg = !isArr && isArguments(value),
      isBuff = !isArr && !isArg && isBuffer(value),
      isType = !isArr && !isArg && !isBuff && isTypedArray(value),
      skipIndexes = isArr || isArg || isBuff || isType,
      result = skipIndexes ? baseTimes(value.length, String) : [],
      length = result.length;

  for (var key in value) {
    if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && (key == 'length' || isBuff && (key == 'offset' || key == 'parent') || isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || isIndex(key, length)))) {
      result.push(key);
    }
  }
  return result;
}

module.exports = arrayLikeKeys;
}, 2545, null, "lodash/_arrayLikeKeys.js");
__d(/* lodash/_baseTimes.js */function(global, require, module, exports) {
function baseTimes(n, iteratee) {
  var index = -1,
      result = Array(n);

  while (++index < n) {
    result[index] = iteratee(index);
  }
  return result;
}

module.exports = baseTimes;
}, 2546, null, "lodash/_baseTimes.js");
__d(/* lodash/isArguments.js */function(global, require, module, exports) {var baseIsArguments = require(2548                ), // 2548 = ./_baseIsArguments
    isObjectLike = require(1471            ); // 1471 = ./isObjectLike

var objectProto = Object.prototype;

var hasOwnProperty = objectProto.hasOwnProperty;

var propertyIsEnumerable = objectProto.propertyIsEnumerable;

var isArguments = baseIsArguments(function () {
    return arguments;
}()) ? baseIsArguments : function (value) {
    return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');
};

module.exports = isArguments;
}, 2547, null, "lodash/isArguments.js");
__d(/* lodash/_baseIsArguments.js */function(global, require, module, exports) {var baseGetTag = require(1463           ), // 1463 = ./_baseGetTag
    isObjectLike = require(1471            ); // 1471 = ./isObjectLike

var argsTag = '[object Arguments]';

function baseIsArguments(value) {
  return isObjectLike(value) && baseGetTag(value) == argsTag;
}

module.exports = baseIsArguments;
}, 2548, null, "lodash/_baseIsArguments.js");
__d(/* lodash/isBuffer.js */function(global, require, module, exports) {var root = require(1465     ), // 1465 = ./_root
    stubFalse = require(2550         ); // 2550 = ./stubFalse

var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

var moduleExports = freeModule && freeModule.exports === freeExports;

var Buffer = moduleExports ? root.Buffer : undefined;

var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;

var isBuffer = nativeIsBuffer || stubFalse;

module.exports = isBuffer;
}, 2549, null, "lodash/isBuffer.js");
__d(/* lodash/stubFalse.js */function(global, require, module, exports) {
function stubFalse() {
  return false;
}

module.exports = stubFalse;
}, 2550, null, "lodash/stubFalse.js");
__d(/* lodash/_isIndex.js */function(global, require, module, exports) {
var MAX_SAFE_INTEGER = 9007199254740991;

var reIsUint = /^(?:0|[1-9]\d*)$/;

function isIndex(value, length) {
  var type = typeof value;
  length = length == null ? MAX_SAFE_INTEGER : length;

  return !!length && (type == 'number' || type != 'symbol' && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;
}

module.exports = isIndex;
}, 2551, null, "lodash/_isIndex.js");
__d(/* lodash/isTypedArray.js */function(global, require, module, exports) {var baseIsTypedArray = require(2553                 ), // 2553 = ./_baseIsTypedArray
    baseUnary = require(2555          ), // 2555 = ./_baseUnary
    nodeUtil = require(2556         ); // 2556 = ./_nodeUtil

var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

module.exports = isTypedArray;
}, 2552, null, "lodash/isTypedArray.js");
__d(/* lodash/_baseIsTypedArray.js */function(global, require, module, exports) {var baseGetTag = require(1463           ), // 1463 = ./_baseGetTag
    isLength = require(2554        ), // 2554 = ./isLength
    isObjectLike = require(1471            ); // 1471 = ./isObjectLike

var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    objectTag = '[object Object]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    weakMapTag = '[object WeakMap]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

var typedArrayTags = {};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;

function baseIsTypedArray(value) {
    return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
}

module.exports = baseIsTypedArray;
}, 2553, null, "lodash/_baseIsTypedArray.js");
__d(/* lodash/isLength.js */function(global, require, module, exports) {
var MAX_SAFE_INTEGER = 9007199254740991;

function isLength(value) {
  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}

module.exports = isLength;
}, 2554, null, "lodash/isLength.js");
__d(/* lodash/_baseUnary.js */function(global, require, module, exports) {
function baseUnary(func) {
  return function (value) {
    return func(value);
  };
}

module.exports = baseUnary;
}, 2555, null, "lodash/_baseUnary.js");
__d(/* lodash/_nodeUtil.js */function(global, require, module, exports) {var freeGlobal = require(1466           ); // 1466 = ./_freeGlobal

var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

var moduleExports = freeModule && freeModule.exports === freeExports;

var freeProcess = moduleExports && freeGlobal.process;

var nodeUtil = function () {
  try {
    var types = freeModule && freeModule.require && freeModule.require('util').types;

    if (types) {
      return types;
    }

    return freeProcess && freeProcess.binding && freeProcess.binding('util');
  } catch (e) {}
}();

module.exports = nodeUtil;
}, 2556, null, "lodash/_nodeUtil.js");
__d(/* lodash/_baseKeys.js */function(global, require, module, exports) {var isPrototype = require(2558            ), // 2558 = ./_isPrototype
    nativeKeys = require(2559           ); // 2559 = ./_nativeKeys

var objectProto = Object.prototype;

var hasOwnProperty = objectProto.hasOwnProperty;

function baseKeys(object) {
  if (!isPrototype(object)) {
    return nativeKeys(object);
  }
  var result = [];
  for (var key in Object(object)) {
    if (hasOwnProperty.call(object, key) && key != 'constructor') {
      result.push(key);
    }
  }
  return result;
}

module.exports = baseKeys;
}, 2557, null, "lodash/_baseKeys.js");
__d(/* lodash/_isPrototype.js */function(global, require, module, exports) {
var objectProto = Object.prototype;

function isPrototype(value) {
  var Ctor = value && value.constructor,
      proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;

  return value === proto;
}

module.exports = isPrototype;
}, 2558, null, "lodash/_isPrototype.js");
__d(/* lodash/_nativeKeys.js */function(global, require, module, exports) {var overArg = require(1470        ); // 1470 = ./_overArg

var nativeKeys = overArg(Object.keys, Object);

module.exports = nativeKeys;
}, 2559, null, "lodash/_nativeKeys.js");
__d(/* lodash/isArrayLike.js */function(global, require, module, exports) {var isFunction = require(2517          ), // 2517 = ./isFunction
    isLength = require(2554        ); // 2554 = ./isLength

function isArrayLike(value) {
  return value != null && isLength(value.length) && !isFunction(value);
}

module.exports = isArrayLike;
}, 2560, null, "lodash/isArrayLike.js");
__d(/* lodash/_baseAssignIn.js */function(global, require, module, exports) {var copyObject = require(2543           ), // 2543 = ./_copyObject
    keysIn = require(2562      ); // 2562 = ./keysIn

function baseAssignIn(object, source) {
  return object && copyObject(source, keysIn(source), object);
}

module.exports = baseAssignIn;
}, 2561, null, "lodash/_baseAssignIn.js");
__d(/* lodash/keysIn.js */function(global, require, module, exports) {var arrayLikeKeys = require(2545              ), // 2545 = ./_arrayLikeKeys
    baseKeysIn = require(2563           ), // 2563 = ./_baseKeysIn
    isArrayLike = require(2560           ); // 2560 = ./isArrayLike

function keysIn(object) {
  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
}

module.exports = keysIn;
}, 2562, null, "lodash/keysIn.js");
__d(/* lodash/_baseKeysIn.js */function(global, require, module, exports) {var isObject = require(2518        ), // 2518 = ./isObject
    isPrototype = require(2558            ), // 2558 = ./_isPrototype
    nativeKeysIn = require(2564             ); // 2564 = ./_nativeKeysIn

var objectProto = Object.prototype;

var hasOwnProperty = objectProto.hasOwnProperty;

function baseKeysIn(object) {
  if (!isObject(object)) {
    return nativeKeysIn(object);
  }
  var isProto = isPrototype(object),
      result = [];

  for (var key in object) {
    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
      result.push(key);
    }
  }
  return result;
}

module.exports = baseKeysIn;
}, 2563, null, "lodash/_baseKeysIn.js");
__d(/* lodash/_nativeKeysIn.js */function(global, require, module, exports) {
function nativeKeysIn(object) {
  var result = [];
  if (object != null) {
    for (var key in Object(object)) {
      result.push(key);
    }
  }
  return result;
}

module.exports = nativeKeysIn;
}, 2564, null, "lodash/_nativeKeysIn.js");
__d(/* lodash/_cloneBuffer.js */function(global, require, module, exports) {var root = require(1465     ); // 1465 = ./_root

var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

var moduleExports = freeModule && freeModule.exports === freeExports;

var Buffer = moduleExports ? root.Buffer : undefined,
    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;

function cloneBuffer(buffer, isDeep) {
  if (isDeep) {
    return buffer.slice();
  }
  var length = buffer.length,
      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

  buffer.copy(result);
  return result;
}

module.exports = cloneBuffer;
}, 2565, null, "lodash/_cloneBuffer.js");
__d(/* lodash/_copyArray.js */function(global, require, module, exports) {
function copyArray(source, array) {
  var index = -1,
      length = source.length;

  array || (array = Array(length));
  while (++index < length) {
    array[index] = source[index];
  }
  return array;
}

module.exports = copyArray;
}, 2566, null, "lodash/_copyArray.js");
__d(/* lodash/_copySymbols.js */function(global, require, module, exports) {var copyObject = require(2543           ), // 2543 = ./_copyObject
    getSymbols = require(2568           ); // 2568 = ./_getSymbols

function copySymbols(source, object) {
  return copyObject(source, getSymbols(source), object);
}

module.exports = copySymbols;
}, 2567, null, "lodash/_copySymbols.js");
__d(/* lodash/_getSymbols.js */function(global, require, module, exports) {var arrayFilter = require(2569            ), // 2569 = ./_arrayFilter
    stubArray = require(2570         ); // 2570 = ./stubArray

var objectProto = Object.prototype;

var propertyIsEnumerable = objectProto.propertyIsEnumerable;

var nativeGetSymbols = Object.getOwnPropertySymbols;

var getSymbols = !nativeGetSymbols ? stubArray : function (object) {
  if (object == null) {
    return [];
  }
  object = Object(object);
  return arrayFilter(nativeGetSymbols(object), function (symbol) {
    return propertyIsEnumerable.call(object, symbol);
  });
};

module.exports = getSymbols;
}, 2568, null, "lodash/_getSymbols.js");
__d(/* lodash/_arrayFilter.js */function(global, require, module, exports) {
function arrayFilter(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length,
      resIndex = 0,
      result = [];

  while (++index < length) {
    var value = array[index];
    if (predicate(value, index, array)) {
      result[resIndex++] = value;
    }
  }
  return result;
}

module.exports = arrayFilter;
}, 2569, null, "lodash/_arrayFilter.js");
__d(/* lodash/stubArray.js */function(global, require, module, exports) {
function stubArray() {
  return [];
}

module.exports = stubArray;
}, 2570, null, "lodash/stubArray.js");
__d(/* lodash/_copySymbolsIn.js */function(global, require, module, exports) {var copyObject = require(2543           ), // 2543 = ./_copyObject
    getSymbolsIn = require(2572             ); // 2572 = ./_getSymbolsIn

function copySymbolsIn(source, object) {
  return copyObject(source, getSymbolsIn(source), object);
}

module.exports = copySymbolsIn;
}, 2571, null, "lodash/_copySymbolsIn.js");
__d(/* lodash/_getSymbolsIn.js */function(global, require, module, exports) {var arrayPush = require(2573          ), // 2573 = ./_arrayPush
    getPrototype = require(1469             ), // 1469 = ./_getPrototype
    getSymbols = require(2568           ), // 2568 = ./_getSymbols
    stubArray = require(2570         ); // 2570 = ./stubArray

var nativeGetSymbols = Object.getOwnPropertySymbols;

var getSymbolsIn = !nativeGetSymbols ? stubArray : function (object) {
  var result = [];
  while (object) {
    arrayPush(result, getSymbols(object));
    object = getPrototype(object);
  }
  return result;
};

module.exports = getSymbolsIn;
}, 2572, null, "lodash/_getSymbolsIn.js");
__d(/* lodash/_arrayPush.js */function(global, require, module, exports) {
function arrayPush(array, values) {
  var index = -1,
      length = values.length,
      offset = array.length;

  while (++index < length) {
    array[offset + index] = values[index];
  }
  return array;
}

module.exports = arrayPush;
}, 2573, null, "lodash/_arrayPush.js");
__d(/* lodash/_getAllKeys.js */function(global, require, module, exports) {var baseGetAllKeys = require(2575               ), // 2575 = ./_baseGetAllKeys
    getSymbols = require(2568           ), // 2568 = ./_getSymbols
    keys = require(2544    ); // 2544 = ./keys

function getAllKeys(object) {
  return baseGetAllKeys(object, keys, getSymbols);
}

module.exports = getAllKeys;
}, 2574, null, "lodash/_getAllKeys.js");
__d(/* lodash/_baseGetAllKeys.js */function(global, require, module, exports) {var arrayPush = require(2573          ), // 2573 = ./_arrayPush
    isArray = require(2496       ); // 2496 = ./isArray

function baseGetAllKeys(object, keysFunc, symbolsFunc) {
  var result = keysFunc(object);
  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
}

module.exports = baseGetAllKeys;
}, 2575, null, "lodash/_baseGetAllKeys.js");
__d(/* lodash/_getAllKeysIn.js */function(global, require, module, exports) {var baseGetAllKeys = require(2575               ), // 2575 = ./_baseGetAllKeys
    getSymbolsIn = require(2572             ), // 2572 = ./_getSymbolsIn
    keysIn = require(2562      ); // 2562 = ./keysIn

function getAllKeysIn(object) {
  return baseGetAllKeys(object, keysIn, getSymbolsIn);
}

module.exports = getAllKeysIn;
}, 2576, null, "lodash/_getAllKeysIn.js");
__d(/* lodash/_getTag.js */function(global, require, module, exports) {var DataView = require(2578         ), // 2578 = ./_DataView
    Map = require(2514    ), // 2514 = ./_Map
    Promise = require(2579        ), // 2579 = ./_Promise
    Set = require(2580    ), // 2580 = ./_Set
    WeakMap = require(2581        ), // 2581 = ./_WeakMap
    baseGetTag = require(1463           ), // 1463 = ./_baseGetTag
    toSource = require(2521         ); // 2521 = ./_toSource

var mapTag = '[object Map]',
    objectTag = '[object Object]',
    promiseTag = '[object Promise]',
    setTag = '[object Set]',
    weakMapTag = '[object WeakMap]';

var dataViewTag = '[object DataView]';

var dataViewCtorString = toSource(DataView),
    mapCtorString = toSource(Map),
    promiseCtorString = toSource(Promise),
    setCtorString = toSource(Set),
    weakMapCtorString = toSource(WeakMap);

var getTag = baseGetTag;

if (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {
    getTag = function getTag(value) {
        var result = baseGetTag(value),
            Ctor = result == objectTag ? value.constructor : undefined,
            ctorString = Ctor ? toSource(Ctor) : '';

        if (ctorString) {
            switch (ctorString) {
                case dataViewCtorString:
                    return dataViewTag;
                case mapCtorString:
                    return mapTag;
                case promiseCtorString:
                    return promiseTag;
                case setCtorString:
                    return setTag;
                case weakMapCtorString:
                    return weakMapTag;
            }
        }
        return result;
    };
}

module.exports = getTag;
}, 2577, null, "lodash/_getTag.js");
__d(/* lodash/_DataView.js */function(global, require, module, exports) {var getNative = require(2515          ), // 2515 = ./_getNative
    root = require(1465     ); // 1465 = ./_root

var DataView = getNative(root, 'DataView');

module.exports = DataView;
}, 2578, null, "lodash/_DataView.js");
__d(/* lodash/_Promise.js */function(global, require, module, exports) {var getNative = require(2515          ), // 2515 = ./_getNative
    root = require(1465     ); // 1465 = ./_root

var Promise = getNative(root, 'Promise');

module.exports = Promise;
}, 2579, null, "lodash/_Promise.js");
__d(/* lodash/_Set.js */function(global, require, module, exports) {var getNative = require(2515          ), // 2515 = ./_getNative
    root = require(1465     ); // 1465 = ./_root

var Set = getNative(root, 'Set');

module.exports = Set;
}, 2580, null, "lodash/_Set.js");
__d(/* lodash/_WeakMap.js */function(global, require, module, exports) {var getNative = require(2515          ), // 2515 = ./_getNative
    root = require(1465     ); // 1465 = ./_root

var WeakMap = getNative(root, 'WeakMap');

module.exports = WeakMap;
}, 2581, null, "lodash/_WeakMap.js");
__d(/* lodash/_initCloneArray.js */function(global, require, module, exports) {
var objectProto = Object.prototype;

var hasOwnProperty = objectProto.hasOwnProperty;

function initCloneArray(array) {
  var length = array.length,
      result = new array.constructor(length);

  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
    result.index = array.index;
    result.input = array.input;
  }
  return result;
}

module.exports = initCloneArray;
}, 2582, null, "lodash/_initCloneArray.js");
__d(/* lodash/_initCloneByTag.js */function(global, require, module, exports) {var cloneArrayBuffer = require(2584                 ), // 2584 = ./_cloneArrayBuffer
    cloneDataView = require(2586              ), // 2586 = ./_cloneDataView
    cloneRegExp = require(2587            ), // 2587 = ./_cloneRegExp
    cloneSymbol = require(2588            ), // 2588 = ./_cloneSymbol
    cloneTypedArray = require(2589                ); // 2589 = ./_cloneTypedArray

var boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

function initCloneByTag(object, tag, isDeep) {
  var Ctor = object.constructor;
  switch (tag) {
    case arrayBufferTag:
      return cloneArrayBuffer(object);

    case boolTag:
    case dateTag:
      return new Ctor(+object);

    case dataViewTag:
      return cloneDataView(object, isDeep);

    case float32Tag:case float64Tag:
    case int8Tag:case int16Tag:case int32Tag:
    case uint8Tag:case uint8ClampedTag:case uint16Tag:case uint32Tag:
      return cloneTypedArray(object, isDeep);

    case mapTag:
      return new Ctor();

    case numberTag:
    case stringTag:
      return new Ctor(object);

    case regexpTag:
      return cloneRegExp(object);

    case setTag:
      return new Ctor();

    case symbolTag:
      return cloneSymbol(object);
  }
}

module.exports = initCloneByTag;
}, 2583, null, "lodash/_initCloneByTag.js");
__d(/* lodash/_cloneArrayBuffer.js */function(global, require, module, exports) {var Uint8Array = require(2585           ); // 2585 = ./_Uint8Array

function cloneArrayBuffer(arrayBuffer) {
  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
  new Uint8Array(result).set(new Uint8Array(arrayBuffer));
  return result;
}

module.exports = cloneArrayBuffer;
}, 2584, null, "lodash/_cloneArrayBuffer.js");
__d(/* lodash/_Uint8Array.js */function(global, require, module, exports) {var root = require(1465     ); // 1465 = ./_root

var Uint8Array = root.Uint8Array;

module.exports = Uint8Array;
}, 2585, null, "lodash/_Uint8Array.js");
__d(/* lodash/_cloneDataView.js */function(global, require, module, exports) {var cloneArrayBuffer = require(2584                 ); // 2584 = ./_cloneArrayBuffer

function cloneDataView(dataView, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
}

module.exports = cloneDataView;
}, 2586, null, "lodash/_cloneDataView.js");
__d(/* lodash/_cloneRegExp.js */function(global, require, module, exports) {
var reFlags = /\w*$/;

function cloneRegExp(regexp) {
  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
  result.lastIndex = regexp.lastIndex;
  return result;
}

module.exports = cloneRegExp;
}, 2587, null, "lodash/_cloneRegExp.js");
__d(/* lodash/_cloneSymbol.js */function(global, require, module, exports) {var Symbol = require(1464       ); // 1464 = ./_Symbol

var symbolProto = Symbol ? typeof Symbol === 'function' ? Symbol.prototype : '@@prototype' : undefined,
    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

function cloneSymbol(symbol) {
  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
}

module.exports = cloneSymbol;
}, 2588, null, "lodash/_cloneSymbol.js");
__d(/* lodash/_cloneTypedArray.js */function(global, require, module, exports) {var cloneArrayBuffer = require(2584                 ); // 2584 = ./_cloneArrayBuffer

function cloneTypedArray(typedArray, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
}

module.exports = cloneTypedArray;
}, 2589, null, "lodash/_cloneTypedArray.js");
__d(/* lodash/_initCloneObject.js */function(global, require, module, exports) {var baseCreate = require(2591           ), // 2591 = ./_baseCreate
    getPrototype = require(1469             ), // 1469 = ./_getPrototype
    isPrototype = require(2558            ); // 2558 = ./_isPrototype

function initCloneObject(object) {
    return typeof object.constructor == 'function' && !isPrototype(object) ? baseCreate(getPrototype(object)) : {};
}

module.exports = initCloneObject;
}, 2590, null, "lodash/_initCloneObject.js");
__d(/* lodash/_baseCreate.js */function(global, require, module, exports) {var isObject = require(2518        ); // 2518 = ./isObject

var objectCreate = Object.create;

var baseCreate = function () {
  function object() {}
  return function (proto) {
    if (!isObject(proto)) {
      return {};
    }
    if (objectCreate) {
      return objectCreate(proto);
    }
    object.prototype = proto;
    var result = new object();
    object.prototype = undefined;
    return result;
  };
}();

module.exports = baseCreate;
}, 2591, null, "lodash/_baseCreate.js");
__d(/* lodash/isMap.js */function(global, require, module, exports) {var baseIsMap = require(2593          ), // 2593 = ./_baseIsMap
    baseUnary = require(2555          ), // 2555 = ./_baseUnary
    nodeUtil = require(2556         ); // 2556 = ./_nodeUtil

var nodeIsMap = nodeUtil && nodeUtil.isMap;

var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;

module.exports = isMap;
}, 2592, null, "lodash/isMap.js");
__d(/* lodash/_baseIsMap.js */function(global, require, module, exports) {var getTag = require(2577       ), // 2577 = ./_getTag
    isObjectLike = require(1471            ); // 1471 = ./isObjectLike

var mapTag = '[object Map]';

function baseIsMap(value) {
  return isObjectLike(value) && getTag(value) == mapTag;
}

module.exports = baseIsMap;
}, 2593, null, "lodash/_baseIsMap.js");
__d(/* lodash/isSet.js */function(global, require, module, exports) {var baseIsSet = require(2595          ), // 2595 = ./_baseIsSet
    baseUnary = require(2555          ), // 2555 = ./_baseUnary
    nodeUtil = require(2556         ); // 2556 = ./_nodeUtil

var nodeIsSet = nodeUtil && nodeUtil.isSet;

var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;

module.exports = isSet;
}, 2594, null, "lodash/isSet.js");
__d(/* lodash/_baseIsSet.js */function(global, require, module, exports) {var getTag = require(2577       ), // 2577 = ./_getTag
    isObjectLike = require(1471            ); // 1471 = ./isObjectLike

var setTag = '[object Set]';

function baseIsSet(value) {
  return isObjectLike(value) && getTag(value) == setTag;
}

module.exports = baseIsSet;
}, 2595, null, "lodash/_baseIsSet.js");
__d(/* lodash/_baseUnset.js */function(global, require, module, exports) {var castPath = require(2597         ), // 2597 = ./_castPath
    last = require(2605    ), // 2605 = ./last
    parent = require(2606       ), // 2606 = ./_parent
    toKey = require(2608      ); // 2608 = ./_toKey

function baseUnset(object, path) {
  path = castPath(path, object);
  object = parent(object, path);
  return object == null || delete object[toKey(last(path))];
}

module.exports = baseUnset;
}, 2596, null, "lodash/_baseUnset.js");
__d(/* lodash/_castPath.js */function(global, require, module, exports) {var isArray = require(2496       ), // 2496 = ./isArray
    isKey = require(2598      ), // 2598 = ./_isKey
    stringToPath = require(2600             ), // 2600 = ./_stringToPath
    toString = require(2603        ); // 2603 = ./toString

function castPath(value, object) {
  if (isArray(value)) {
    return value;
  }
  return isKey(value, object) ? [value] : stringToPath(toString(value));
}

module.exports = castPath;
}, 2597, null, "lodash/_castPath.js");
__d(/* lodash/_isKey.js */function(global, require, module, exports) {var isArray = require(2496       ), // 2496 = ./isArray
    isSymbol = require(2599        ); // 2599 = ./isSymbol

var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
    reIsPlainProp = /^\w*$/;

function isKey(value, object) {
  if (isArray(value)) {
    return false;
  }
  var type = typeof value;
  if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) {
    return true;
  }
  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);
}

module.exports = isKey;
}, 2598, null, "lodash/_isKey.js");
__d(/* lodash/isSymbol.js */function(global, require, module, exports) {var baseGetTag = require(1463           ), // 1463 = ./_baseGetTag
    isObjectLike = require(1471            ); // 1471 = ./isObjectLike

var symbolTag = '[object Symbol]';

function isSymbol(value) {
    return typeof value == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;
}

module.exports = isSymbol;
}, 2599, null, "lodash/isSymbol.js");
__d(/* lodash/_stringToPath.js */function(global, require, module, exports) {var memoizeCapped = require(2601              ); // 2601 = ./_memoizeCapped

var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

var reEscapeChar = /\\(\\)?/g;

var stringToPath = memoizeCapped(function (string) {
  var result = [];
  if (string.charCodeAt(0) === 46) {
      result.push('');
    }
  string.replace(rePropName, function (match, number, quote, subString) {
    result.push(quote ? subString.replace(reEscapeChar, '$1') : number || match);
  });
  return result;
});

module.exports = stringToPath;
}, 2600, null, "lodash/_stringToPath.js");
__d(/* lodash/_memoizeCapped.js */function(global, require, module, exports) {var memoize = require(2602       ); // 2602 = ./memoize

var MAX_MEMOIZE_SIZE = 500;

function memoizeCapped(func) {
  var result = memoize(func, function (key) {
    if (cache.size === MAX_MEMOIZE_SIZE) {
      cache.clear();
    }
    return key;
  });

  var cache = result.cache;
  return result;
}

module.exports = memoizeCapped;
}, 2601, null, "lodash/_memoizeCapped.js");
__d(/* lodash/memoize.js */function(global, require, module, exports) {var MapCache = require(2523         ); // 2523 = ./_MapCache

var FUNC_ERROR_TEXT = 'Expected a function';

function memoize(func, resolver) {
  if (typeof func != 'function' || resolver != null && typeof resolver != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  var memoized = function memoized() {
    var args = arguments,
        key = resolver ? resolver.apply(this, args) : args[0],
        cache = memoized.cache;

    if (cache.has(key)) {
      return cache.get(key);
    }
    var result = func.apply(this, args);
    memoized.cache = cache.set(key, result) || cache;
    return result;
  };
  memoized.cache = new (memoize.Cache || MapCache)();
  return memoized;
}

memoize.Cache = MapCache;

module.exports = memoize;
}, 2602, null, "lodash/memoize.js");
__d(/* lodash/toString.js */function(global, require, module, exports) {var baseToString = require(2604             ); // 2604 = ./_baseToString

function toString(value) {
  return value == null ? '' : baseToString(value);
}

module.exports = toString;
}, 2603, null, "lodash/toString.js");
__d(/* lodash/_baseToString.js */function(global, require, module, exports) {var Symbol = require(1464       ), // 1464 = ./_Symbol
    arrayMap = require(2498         ), // 2498 = ./_arrayMap
    isArray = require(2496       ), // 2496 = ./isArray
    isSymbol = require(2599        ); // 2599 = ./isSymbol

var INFINITY = 1 / 0;

var symbolProto = Symbol ? typeof Symbol === 'function' ? Symbol.prototype : '@@prototype' : undefined,
    symbolToString = symbolProto ? symbolProto.toString : undefined;

function baseToString(value) {
  if (typeof value == 'string') {
    return value;
  }
  if (isArray(value)) {
    return arrayMap(value, baseToString) + '';
  }
  if (isSymbol(value)) {
    return symbolToString ? symbolToString.call(value) : '';
  }
  var result = value + '';
  return result == '0' && 1 / value == -INFINITY ? '-0' : result;
}

module.exports = baseToString;
}, 2604, null, "lodash/_baseToString.js");
__d(/* lodash/last.js */function(global, require, module, exports) {
function last(array) {
  var length = array == null ? 0 : array.length;
  return length ? array[length - 1] : undefined;
}

module.exports = last;
}, 2605, null, "lodash/last.js");
__d(/* lodash/_parent.js */function(global, require, module, exports) {var baseGet = require(2607        ), // 2607 = ./_baseGet
    baseSlice = require(2609          ); // 2609 = ./_baseSlice

function parent(object, path) {
  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
}

module.exports = parent;
}, 2606, null, "lodash/_parent.js");
__d(/* lodash/_baseGet.js */function(global, require, module, exports) {var castPath = require(2597         ), // 2597 = ./_castPath
    toKey = require(2608      ); // 2608 = ./_toKey

function baseGet(object, path) {
  path = castPath(path, object);

  var index = 0,
      length = path.length;

  while (object != null && index < length) {
    object = object[toKey(path[index++])];
  }
  return index && index == length ? object : undefined;
}

module.exports = baseGet;
}, 2607, null, "lodash/_baseGet.js");
__d(/* lodash/_toKey.js */function(global, require, module, exports) {var isSymbol = require(2599        ); // 2599 = ./isSymbol

var INFINITY = 1 / 0;

function toKey(value) {
  if (typeof value == 'string' || isSymbol(value)) {
    return value;
  }
  var result = value + '';
  return result == '0' && 1 / value == -INFINITY ? '-0' : result;
}

module.exports = toKey;
}, 2608, null, "lodash/_toKey.js");
__d(/* lodash/_baseSlice.js */function(global, require, module, exports) {
function baseSlice(array, start, end) {
  var index = -1,
      length = array.length;

  if (start < 0) {
    start = -start > length ? 0 : length + start;
  }
  end = end > length ? length : end;
  if (end < 0) {
    end += length;
  }
  length = start > end ? 0 : end - start >>> 0;
  start >>>= 0;

  var result = Array(length);
  while (++index < length) {
    result[index] = array[index + start];
  }
  return result;
}

module.exports = baseSlice;
}, 2609, null, "lodash/_baseSlice.js");
__d(/* lodash/_customOmitClone.js */function(global, require, module, exports) {var isPlainObject = require(1462             ); // 1462 = ./isPlainObject

function customOmitClone(value) {
  return isPlainObject(value) ? undefined : value;
}

module.exports = customOmitClone;
}, 2610, null, "lodash/_customOmitClone.js");
__d(/* lodash/_flatRest.js */function(global, require, module, exports) {var flatten = require(2612       ), // 2612 = ./flatten
    overRest = require(2615         ), // 2615 = ./_overRest
    setToString = require(2617            ); // 2617 = ./_setToString

function flatRest(func) {
  return setToString(overRest(func, undefined, flatten), func + '');
}

module.exports = flatRest;
}, 2611, null, "lodash/_flatRest.js");
__d(/* lodash/flatten.js */function(global, require, module, exports) {var baseFlatten = require(2613            ); // 2613 = ./_baseFlatten

function flatten(array) {
  var length = array == null ? 0 : array.length;
  return length ? baseFlatten(array, 1) : [];
}

module.exports = flatten;
}, 2612, null, "lodash/flatten.js");
__d(/* lodash/_baseFlatten.js */function(global, require, module, exports) {var arrayPush = require(2573          ), // 2573 = ./_arrayPush
    isFlattenable = require(2614              ); // 2614 = ./_isFlattenable

function baseFlatten(array, depth, predicate, isStrict, result) {
  var index = -1,
      length = array.length;

  predicate || (predicate = isFlattenable);
  result || (result = []);

  while (++index < length) {
    var value = array[index];
    if (depth > 0 && predicate(value)) {
      if (depth > 1) {
        baseFlatten(value, depth - 1, predicate, isStrict, result);
      } else {
        arrayPush(result, value);
      }
    } else if (!isStrict) {
      result[result.length] = value;
    }
  }
  return result;
}

module.exports = baseFlatten;
}, 2613, null, "lodash/_baseFlatten.js");
__d(/* lodash/_isFlattenable.js */function(global, require, module, exports) {var Symbol = require(1464       ), // 1464 = ./_Symbol
    isArguments = require(2547           ), // 2547 = ./isArguments
    isArray = require(2496       ); // 2496 = ./isArray

var spreadableSymbol = Symbol ? typeof Symbol === 'function' ? Symbol.isConcatSpreadable : '@@isConcatSpreadable' : undefined;

function isFlattenable(value) {
    return isArray(value) || isArguments(value) || !!(spreadableSymbol && value && value[spreadableSymbol]);
}

module.exports = isFlattenable;
}, 2614, null, "lodash/_isFlattenable.js");
__d(/* lodash/_overRest.js */function(global, require, module, exports) {var apply = require(2616      ); // 2616 = ./_apply

var nativeMax = Math.max;

function overRest(func, start, transform) {
  start = nativeMax(start === undefined ? func.length - 1 : start, 0);
  return function () {
    var args = arguments,
        index = -1,
        length = nativeMax(args.length - start, 0),
        array = Array(length);

    while (++index < length) {
      array[index] = args[start + index];
    }
    index = -1;
    var otherArgs = Array(start + 1);
    while (++index < start) {
      otherArgs[index] = args[index];
    }
    otherArgs[start] = transform(array);
    return apply(func, this, otherArgs);
  };
}

module.exports = overRest;
}, 2615, null, "lodash/_overRest.js");
__d(/* lodash/_apply.js */function(global, require, module, exports) {
function apply(func, thisArg, args) {
  switch (args.length) {
    case 0:
      return func.call(thisArg);
    case 1:
      return func.call(thisArg, args[0]);
    case 2:
      return func.call(thisArg, args[0], args[1]);
    case 3:
      return func.call(thisArg, args[0], args[1], args[2]);
  }
  return func.apply(thisArg, args);
}

module.exports = apply;
}, 2616, null, "lodash/_apply.js");
__d(/* lodash/_setToString.js */function(global, require, module, exports) {var baseSetToString = require(2618                ), // 2618 = ./_baseSetToString
    shortOut = require(2621         ); // 2621 = ./_shortOut

var setToString = shortOut(baseSetToString);

module.exports = setToString;
}, 2617, null, "lodash/_setToString.js");
__d(/* lodash/_baseSetToString.js */function(global, require, module, exports) {var constant = require(2619        ), // 2619 = ./constant
    defineProperty = require(2541               ), // 2541 = ./_defineProperty
    identity = require(2620        ); // 2620 = ./identity

var baseSetToString = !defineProperty ? identity : function (func, string) {
  return defineProperty(func, 'toString', {
    'configurable': true,
    'enumerable': false,
    'value': constant(string),
    'writable': true
  });
};

module.exports = baseSetToString;
}, 2618, null, "lodash/_baseSetToString.js");
__d(/* lodash/constant.js */function(global, require, module, exports) {
function constant(value) {
  return function () {
    return value;
  };
}

module.exports = constant;
}, 2619, null, "lodash/constant.js");
__d(/* lodash/identity.js */function(global, require, module, exports) {
function identity(value) {
  return value;
}

module.exports = identity;
}, 2620, null, "lodash/identity.js");
__d(/* lodash/_shortOut.js */function(global, require, module, exports) {
var HOT_COUNT = 800,
    HOT_SPAN = 16;

var nativeNow = Date.now;

function shortOut(func) {
  var count = 0,
      lastCalled = 0;

  return function () {
    var stamp = nativeNow(),
        remaining = HOT_SPAN - (stamp - lastCalled);

    lastCalled = stamp;
    if (remaining > 0) {
      if (++count >= HOT_COUNT) {
        return arguments[0];
      }
    } else {
      count = 0;
    }
    return func.apply(undefined, arguments);
  };
}

module.exports = shortOut;
}, 2621, null, "lodash/_shortOut.js");
__d(/* lodash/pick.js */function(global, require, module, exports) {var basePick = require(2623         ), // 2623 = ./_basePick
    flatRest = require(2611         ); // 2611 = ./_flatRest

var pick = flatRest(function (object, paths) {
  return object == null ? {} : basePick(object, paths);
});

module.exports = pick;
}, 2622, null, "lodash/pick.js");
__d(/* lodash/_basePick.js */function(global, require, module, exports) {var basePickBy = require(2624           ), // 2624 = ./_basePickBy
    hasIn = require(2626     ); // 2626 = ./hasIn

function basePick(object, paths) {
  return basePickBy(object, paths, function (value, path) {
    return hasIn(object, path);
  });
}

module.exports = basePick;
}, 2623, null, "lodash/_basePick.js");
__d(/* lodash/_basePickBy.js */function(global, require, module, exports) {var baseGet = require(2607        ), // 2607 = ./_baseGet
    baseSet = require(2625        ), // 2625 = ./_baseSet
    castPath = require(2597         ); // 2597 = ./_castPath

function basePickBy(object, paths, predicate) {
    var index = -1,
        length = paths.length,
        result = {};

    while (++index < length) {
        var path = paths[index],
            value = baseGet(object, path);

        if (predicate(value, path)) {
            baseSet(result, castPath(path, object), value);
        }
    }
    return result;
}

module.exports = basePickBy;
}, 2624, null, "lodash/_basePickBy.js");
__d(/* lodash/_baseSet.js */function(global, require, module, exports) {var assignValue = require(2539            ), // 2539 = ./_assignValue
    castPath = require(2597         ), // 2597 = ./_castPath
    isIndex = require(2551        ), // 2551 = ./_isIndex
    isObject = require(2518        ), // 2518 = ./isObject
    toKey = require(2608      ); // 2608 = ./_toKey

function baseSet(object, path, value, customizer) {
  if (!isObject(object)) {
    return object;
  }
  path = castPath(path, object);

  var index = -1,
      length = path.length,
      lastIndex = length - 1,
      nested = object;

  while (nested != null && ++index < length) {
    var key = toKey(path[index]),
        newValue = value;

    if (index != lastIndex) {
      var objValue = nested[key];
      newValue = customizer ? customizer(objValue, key, nested) : undefined;
      if (newValue === undefined) {
        newValue = isObject(objValue) ? objValue : isIndex(path[index + 1]) ? [] : {};
      }
    }
    assignValue(nested, key, newValue);
    nested = nested[key];
  }
  return object;
}

module.exports = baseSet;
}, 2625, null, "lodash/_baseSet.js");
__d(/* lodash/hasIn.js */function(global, require, module, exports) {var baseHasIn = require(2627          ), // 2627 = ./_baseHasIn
    hasPath = require(2628        ); // 2628 = ./_hasPath

function hasIn(object, path) {
  return object != null && hasPath(object, path, baseHasIn);
}

module.exports = hasIn;
}, 2626, null, "lodash/hasIn.js");
__d(/* lodash/_baseHasIn.js */function(global, require, module, exports) {
function baseHasIn(object, key) {
  return object != null && key in Object(object);
}

module.exports = baseHasIn;
}, 2627, null, "lodash/_baseHasIn.js");
__d(/* lodash/_hasPath.js */function(global, require, module, exports) {var castPath = require(2597         ), // 2597 = ./_castPath
    isArguments = require(2547           ), // 2547 = ./isArguments
    isArray = require(2496       ), // 2496 = ./isArray
    isIndex = require(2551        ), // 2551 = ./_isIndex
    isLength = require(2554        ), // 2554 = ./isLength
    toKey = require(2608      ); // 2608 = ./_toKey

function hasPath(object, path, hasFunc) {
  path = castPath(path, object);

  var index = -1,
      length = path.length,
      result = false;

  while (++index < length) {
    var key = toKey(path[index]);
    if (!(result = object != null && hasFunc(object, key))) {
      break;
    }
    object = object[key];
  }
  if (result || ++index != length) {
    return result;
  }
  length = object == null ? 0 : object.length;
  return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));
}

module.exports = hasPath;
}, 2628, null, "lodash/_hasPath.js");
__d(/* react-native-vector-icons/lib/tab-bar-item-ios.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native-vector-icons/lib/tab-bar-item-ios.js';
exports.default = createTabBarItemIOSComponent;

var _isEqual = require(2630            ); // 2630 = lodash/isEqual

var _isEqual2 = babelHelpers.interopRequireDefault(_isEqual);

var _pick = require(2622         ); // 2622 = lodash/pick

var _pick2 = babelHelpers.interopRequireDefault(_pick);

var _react = require(604    ); // 604 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(2488        ); // 2488 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactNative = require(2493            ); // 2493 = ./react-native

function createTabBarItemIOSComponent(IconNamePropType, getImageSource) {
  var _class, _temp;

  return _temp = _class = function (_Component) {
    babelHelpers.inherits(TabBarItemIOS, _Component);

    function TabBarItemIOS() {
      babelHelpers.classCallCheck(this, TabBarItemIOS);
      return babelHelpers.possibleConstructorReturn(this, (TabBarItemIOS.__proto__ || Object.getPrototypeOf(TabBarItemIOS)).apply(this, arguments));
    }

    babelHelpers.createClass(TabBarItemIOS, [{
      key: 'updateIconSources',
      value: function updateIconSources(props) {
        var _this2 = this;

        if (props.iconName) {
          getImageSource(props.iconName, props.iconSize, props.iconColor).then(function (icon) {
            return _this2.setState({ icon: icon });
          });
        }
        if (props.selectedIconName || props.selectedIconColor) {
          var selectedIconName = props.selectedIconName || props.iconName;
          var selectedIconColor = props.selectedIconColor || props.iconColor;
          getImageSource(selectedIconName, props.iconSize, selectedIconColor).then(function (selectedIcon) {
            return _this2.setState({ selectedIcon: selectedIcon });
          });
        }
      }
    }, {
      key: 'componentWillMount',
      value: function componentWillMount() {
        this.updateIconSources(this.props);
      }
    }, {
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(nextProps) {
        var keys = Object.keys(TabBarItemIOS.propTypes);
        if (!(0, _isEqual2.default)((0, _pick2.default)(nextProps, keys), (0, _pick2.default)(this.props, keys))) {
          this.updateIconSources(nextProps);
        }
      }
    }, {
      key: 'render',
      value: function render() {
        return _react2.default.createElement(_reactNative.TabBarIOS.Item, babelHelpers.extends({}, this.props, this.state, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 56
          }
        }));
      }
    }]);
    return TabBarItemIOS;
  }(_react.Component), _class.propTypes = {
    iconName: IconNamePropType.isRequired,
    selectedIconName: IconNamePropType,
    iconSize: _propTypes2.default.number,
    iconColor: _propTypes2.default.string,
    selectedIconColor: _propTypes2.default.string
  }, _class.defaultProps = {
    iconSize: 30
  }, _temp;
}
}, 2629, null, "react-native-vector-icons/lib/tab-bar-item-ios.js");
__d(/* lodash/isEqual.js */function(global, require, module, exports) {var baseIsEqual = require(2631            ); // 2631 = ./_baseIsEqual

function isEqual(value, other) {
  return baseIsEqual(value, other);
}

module.exports = isEqual;
}, 2630, null, "lodash/isEqual.js");
__d(/* lodash/_baseIsEqual.js */function(global, require, module, exports) {var baseIsEqualDeep = require(2632                ), // 2632 = ./_baseIsEqualDeep
    isObjectLike = require(1471            ); // 1471 = ./isObjectLike

function baseIsEqual(value, other, bitmask, customizer, stack) {
  if (value === other) {
    return true;
  }
  if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {
    return value !== value && other !== other;
  }
  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
}

module.exports = baseIsEqual;
}, 2631, null, "lodash/_baseIsEqual.js");
__d(/* lodash/_baseIsEqualDeep.js */function(global, require, module, exports) {var Stack = require(2500      ), // 2500 = ./_Stack
    equalArrays = require(2633            ), // 2633 = ./_equalArrays
    equalByTag = require(2639           ), // 2639 = ./_equalByTag
    equalObjects = require(2642             ), // 2642 = ./_equalObjects
    getTag = require(2577       ), // 2577 = ./_getTag
    isArray = require(2496       ), // 2496 = ./isArray
    isBuffer = require(2549        ), // 2549 = ./isBuffer
    isTypedArray = require(2552            ); // 2552 = ./isTypedArray

var COMPARE_PARTIAL_FLAG = 1;

var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    objectTag = '[object Object]';

var objectProto = Object.prototype;

var hasOwnProperty = objectProto.hasOwnProperty;

function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
  var objIsArr = isArray(object),
      othIsArr = isArray(other),
      objTag = objIsArr ? arrayTag : getTag(object),
      othTag = othIsArr ? arrayTag : getTag(other);

  objTag = objTag == argsTag ? objectTag : objTag;
  othTag = othTag == argsTag ? objectTag : othTag;

  var objIsObj = objTag == objectTag,
      othIsObj = othTag == objectTag,
      isSameTag = objTag == othTag;

  if (isSameTag && isBuffer(object)) {
    if (!isBuffer(other)) {
      return false;
    }
    objIsArr = true;
    objIsObj = false;
  }
  if (isSameTag && !objIsObj) {
    stack || (stack = new Stack());
    return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
  }
  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

    if (objIsWrapped || othIsWrapped) {
      var objUnwrapped = objIsWrapped ? object.value() : object,
          othUnwrapped = othIsWrapped ? other.value() : other;

      stack || (stack = new Stack());
      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
    }
  }
  if (!isSameTag) {
    return false;
  }
  stack || (stack = new Stack());
  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
}

module.exports = baseIsEqualDeep;
}, 2632, null, "lodash/_baseIsEqualDeep.js");
__d(/* lodash/_equalArrays.js */function(global, require, module, exports) {var SetCache = require(2634         ), // 2634 = ./_SetCache
    arraySome = require(2637          ), // 2637 = ./_arraySome
    cacheHas = require(2638         ); // 2638 = ./_cacheHas

var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
      arrLength = array.length,
      othLength = other.length;

  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
    return false;
  }

  var stacked = stack.get(array);
  if (stacked && stack.get(other)) {
    return stacked == other;
  }
  var index = -1,
      result = true,
      seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined;

  stack.set(array, other);
  stack.set(other, array);

  while (++index < arrLength) {
    var arrValue = array[index],
        othValue = other[index];

    if (customizer) {
      var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
    }
    if (compared !== undefined) {
      if (compared) {
        continue;
      }
      result = false;
      break;
    }

    if (seen) {
      if (!arraySome(other, function (othValue, othIndex) {
        if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
          return seen.push(othIndex);
        }
      })) {
        result = false;
        break;
      }
    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
      result = false;
      break;
    }
  }
  stack['delete'](array);
  stack['delete'](other);
  return result;
}

module.exports = equalArrays;
}, 2633, null, "lodash/_equalArrays.js");
__d(/* lodash/_SetCache.js */function(global, require, module, exports) {var MapCache = require(2523         ), // 2523 = ./_MapCache
    setCacheAdd = require(2635            ), // 2635 = ./_setCacheAdd
    setCacheHas = require(2636            ); // 2636 = ./_setCacheHas

function SetCache(values) {
    var index = -1,
        length = values == null ? 0 : values.length;

    this.__data__ = new MapCache();
    while (++index < length) {
        this.add(values[index]);
    }
}

SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
SetCache.prototype.has = setCacheHas;

module.exports = SetCache;
}, 2634, null, "lodash/_SetCache.js");
__d(/* lodash/_setCacheAdd.js */function(global, require, module, exports) {
var HASH_UNDEFINED = '__lodash_hash_undefined__';

function setCacheAdd(value) {
  this.__data__.set(value, HASH_UNDEFINED);
  return this;
}

module.exports = setCacheAdd;
}, 2635, null, "lodash/_setCacheAdd.js");
__d(/* lodash/_setCacheHas.js */function(global, require, module, exports) {
function setCacheHas(value) {
  return this.__data__.has(value);
}

module.exports = setCacheHas;
}, 2636, null, "lodash/_setCacheHas.js");
__d(/* lodash/_arraySome.js */function(global, require, module, exports) {
function arraySome(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (predicate(array[index], index, array)) {
      return true;
    }
  }
  return false;
}

module.exports = arraySome;
}, 2637, null, "lodash/_arraySome.js");
__d(/* lodash/_cacheHas.js */function(global, require, module, exports) {
function cacheHas(cache, key) {
  return cache.has(key);
}

module.exports = cacheHas;
}, 2638, null, "lodash/_cacheHas.js");
__d(/* lodash/_equalByTag.js */function(global, require, module, exports) {var Symbol = require(1464       ), // 1464 = ./_Symbol
    Uint8Array = require(2585           ), // 2585 = ./_Uint8Array
    eq = require(2505  ), // 2505 = ./eq
    equalArrays = require(2633            ), // 2633 = ./_equalArrays
    mapToArray = require(2640           ), // 2640 = ./_mapToArray
    setToArray = require(2641           ); // 2641 = ./_setToArray

var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

var boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]';

var symbolProto = Symbol ? typeof Symbol === 'function' ? Symbol.prototype : '@@prototype' : undefined,
    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
  switch (tag) {
    case dataViewTag:
      if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
        return false;
      }
      object = object.buffer;
      other = other.buffer;

    case arrayBufferTag:
      if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
        return false;
      }
      return true;

    case boolTag:
    case dateTag:
    case numberTag:
      return eq(+object, +other);

    case errorTag:
      return object.name == other.name && object.message == other.message;

    case regexpTag:
    case stringTag:
      return object == other + '';

    case mapTag:
      var convert = mapToArray;

    case setTag:
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
      convert || (convert = setToArray);

      if (object.size != other.size && !isPartial) {
        return false;
      }

      var stacked = stack.get(object);
      if (stacked) {
        return stacked == other;
      }
      bitmask |= COMPARE_UNORDERED_FLAG;

      stack.set(object, other);
      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
      stack['delete'](object);
      return result;

    case symbolTag:
      if (symbolValueOf) {
        return symbolValueOf.call(object) == symbolValueOf.call(other);
      }
  }
  return false;
}

module.exports = equalByTag;
}, 2639, null, "lodash/_equalByTag.js");
__d(/* lodash/_mapToArray.js */function(global, require, module, exports) {
function mapToArray(map) {
  var index = -1,
      result = Array(map.size);

  map.forEach(function (value, key) {
    result[++index] = [key, value];
  });
  return result;
}

module.exports = mapToArray;
}, 2640, null, "lodash/_mapToArray.js");
__d(/* lodash/_setToArray.js */function(global, require, module, exports) {
function setToArray(set) {
  var index = -1,
      result = Array(set.size);

  set.forEach(function (value) {
    result[++index] = value;
  });
  return result;
}

module.exports = setToArray;
}, 2641, null, "lodash/_setToArray.js");
__d(/* lodash/_equalObjects.js */function(global, require, module, exports) {var getAllKeys = require(2574           ); // 2574 = ./_getAllKeys

var COMPARE_PARTIAL_FLAG = 1;

var objectProto = Object.prototype;

var hasOwnProperty = objectProto.hasOwnProperty;

function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
      objProps = getAllKeys(object),
      objLength = objProps.length,
      othProps = getAllKeys(other),
      othLength = othProps.length;

  if (objLength != othLength && !isPartial) {
    return false;
  }
  var index = objLength;
  while (index--) {
    var key = objProps[index];
    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
      return false;
    }
  }

  var stacked = stack.get(object);
  if (stacked && stack.get(other)) {
    return stacked == other;
  }
  var result = true;
  stack.set(object, other);
  stack.set(other, object);

  var skipCtor = isPartial;
  while (++index < objLength) {
    key = objProps[index];
    var objValue = object[key],
        othValue = other[key];

    if (customizer) {
      var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
    }

    if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
      result = false;
      break;
    }
    skipCtor || (skipCtor = key == 'constructor');
  }
  if (result && !skipCtor) {
    var objCtor = object.constructor,
        othCtor = other.constructor;

    if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {
      result = false;
    }
  }
  stack['delete'](object);
  stack['delete'](other);
  return result;
}

module.exports = equalObjects;
}, 2642, null, "lodash/_equalObjects.js");
__d(/* react-native-vector-icons/lib/toolbar-android.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/home/chris/Desktop/UI/node_modules/react-native-vector-icons/lib/toolbar-android.js';
exports.default = createToolbarAndroidComponent;

var _isEqual = require(2630            ); // 2630 = lodash/isEqual

var _isEqual2 = babelHelpers.interopRequireDefault(_isEqual);

var _pick = require(2622         ); // 2622 = lodash/pick

var _pick2 = babelHelpers.interopRequireDefault(_pick);

var _react = require(604    ); // 604 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(2488        ); // 2488 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactNative = require(2493            ); // 2493 = ./react-native

function createToolbarAndroidComponent(IconNamePropType, getImageSource) {
  var _class, _temp;

  return _temp = _class = function (_Component) {
    babelHelpers.inherits(IconToolbarAndroid, _Component);

    function IconToolbarAndroid() {
      babelHelpers.classCallCheck(this, IconToolbarAndroid);
      return babelHelpers.possibleConstructorReturn(this, (IconToolbarAndroid.__proto__ || Object.getPrototypeOf(IconToolbarAndroid)).apply(this, arguments));
    }

    babelHelpers.createClass(IconToolbarAndroid, [{
      key: 'updateIconSources',
      value: function updateIconSources(props) {
        var _this2 = this;

        var size = props.iconSize;
        var color = props.iconColor || props.titleColor;
        if (props.logoName) {
          getImageSource(props.logoName, size, color).then(function (logo) {
            return _this2.setState({ logo: logo });
          });
        }
        if (props.navIconName) {
          getImageSource(props.navIconName, size, color).then(function (navIcon) {
            return _this2.setState({ navIcon: navIcon });
          });
        }
        if (props.overflowIconName) {
          getImageSource(props.overflowIconName, size, color).then(function (overflowIcon) {
            return _this2.setState({ overflowIcon: overflowIcon });
          });
        }

        Promise.all((props.actions || []).map(function (action) {
          if (action.iconName) {
            return getImageSource(action.iconName, action.iconSize || size, action.iconColor || color).then(function (icon) {
              return babelHelpers.extends({}, action, { icon: icon });
            });
          }
          return Promise.resolve(action);
        })).then(function (actions) {
          return _this2.setState({ actions: actions });
        });
      }
    }, {
      key: 'componentWillMount',
      value: function componentWillMount() {
        this.updateIconSources(this.props);
      }
    }, {
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(nextProps) {
        var _this3 = this;

        var keys = Object.keys(IconToolbarAndroid.propTypes);
        if (!(0, _isEqual2.default)((0, _pick2.default)(nextProps, keys), (0, _pick2.default)(this.props, keys))) {
          var stateToEvict = {};
          if (!nextProps.logoName) {
            stateToEvict.logo = undefined;
          }
          if (!nextProps.navIconName) {
            stateToEvict.navIcon = undefined;
          }
          if (!nextProps.overflowIconName) {
            stateToEvict.overflowIcon = undefined;
          }
          if (this.state && Object.keys(stateToEvict).length) {
            this.setState(stateToEvict, function () {
              return _this3.updateIconSources(nextProps);
            });
          } else {
            this.updateIconSources(nextProps);
          }
        }
      }
    }, {
      key: 'render',
      value: function render() {
        return _react2.default.createElement(_reactNative.ToolbarAndroid, babelHelpers.extends({}, this.props, this.state, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 94
          }
        }));
      }
    }]);
    return IconToolbarAndroid;
  }(_react.Component), _class.propTypes = {
    logoIconName: IconNamePropType,
    navIconName: IconNamePropType,
    overflowIconName: IconNamePropType,
    actions: _propTypes2.default.arrayOf(_propTypes2.default.shape({
      title: _propTypes2.default.string.isRequired,
      iconName: IconNamePropType,
      iconSize: _propTypes2.default.number,
      iconColor: _propTypes2.default.string,
      show: _propTypes2.default.oneOf(['always', 'ifRoom', 'never']),
      showWithText: _propTypes2.default.bool
    })),
    iconSize: _propTypes2.default.number,
    iconColor: _propTypes2.default.string
  }, _class.defaultProps = {
    iconSize: 24
  }, _temp;
}
}, 2643, null, "react-native-vector-icons/lib/toolbar-android.js");
__d(/* react-native-vector-icons/glyphmaps/FontAwesome.json */function(global, require, module, exports) {module.exports = module.exports = {
  "glass": 61440,
  "music": 61441,
  "search": 61442,
  "envelope-o": 61443,
  "heart": 61444,
  "star": 61445,
  "star-o": 61446,
  "user": 61447,
  "film": 61448,
  "th-large": 61449,
  "th": 61450,
  "th-list": 61451,
  "check": 61452,
  "remove": 61453,
  "close": 61453,
  "times": 61453,
  "search-plus": 61454,
  "search-minus": 61456,
  "power-off": 61457,
  "signal": 61458,
  "gear": 61459,
  "cog": 61459,
  "trash-o": 61460,
  "home": 61461,
  "file-o": 61462,
  "clock-o": 61463,
  "road": 61464,
  "download": 61465,
  "arrow-circle-o-down": 61466,
  "arrow-circle-o-up": 61467,
  "inbox": 61468,
  "play-circle-o": 61469,
  "rotate-right": 61470,
  "repeat": 61470,
  "refresh": 61473,
  "list-alt": 61474,
  "lock": 61475,
  "flag": 61476,
  "headphones": 61477,
  "volume-off": 61478,
  "volume-down": 61479,
  "volume-up": 61480,
  "qrcode": 61481,
  "barcode": 61482,
  "tag": 61483,
  "tags": 61484,
  "book": 61485,
  "bookmark": 61486,
  "print": 61487,
  "camera": 61488,
  "font": 61489,
  "bold": 61490,
  "italic": 61491,
  "text-height": 61492,
  "text-width": 61493,
  "align-left": 61494,
  "align-center": 61495,
  "align-right": 61496,
  "align-justify": 61497,
  "list": 61498,
  "dedent": 61499,
  "outdent": 61499,
  "indent": 61500,
  "video-camera": 61501,
  "photo": 61502,
  "image": 61502,
  "picture-o": 61502,
  "pencil": 61504,
  "map-marker": 61505,
  "adjust": 61506,
  "tint": 61507,
  "edit": 61508,
  "pencil-square-o": 61508,
  "share-square-o": 61509,
  "check-square-o": 61510,
  "arrows": 61511,
  "step-backward": 61512,
  "fast-backward": 61513,
  "backward": 61514,
  "play": 61515,
  "pause": 61516,
  "stop": 61517,
  "forward": 61518,
  "fast-forward": 61520,
  "step-forward": 61521,
  "eject": 61522,
  "chevron-left": 61523,
  "chevron-right": 61524,
  "plus-circle": 61525,
  "minus-circle": 61526,
  "times-circle": 61527,
  "check-circle": 61528,
  "question-circle": 61529,
  "info-circle": 61530,
  "crosshairs": 61531,
  "times-circle-o": 61532,
  "check-circle-o": 61533,
  "ban": 61534,
  "arrow-left": 61536,
  "arrow-right": 61537,
  "arrow-up": 61538,
  "arrow-down": 61539,
  "mail-forward": 61540,
  "share": 61540,
  "expand": 61541,
  "compress": 61542,
  "plus": 61543,
  "minus": 61544,
  "asterisk": 61545,
  "exclamation-circle": 61546,
  "gift": 61547,
  "leaf": 61548,
  "fire": 61549,
  "eye": 61550,
  "eye-slash": 61552,
  "warning": 61553,
  "exclamation-triangle": 61553,
  "plane": 61554,
  "calendar": 61555,
  "random": 61556,
  "comment": 61557,
  "magnet": 61558,
  "chevron-up": 61559,
  "chevron-down": 61560,
  "retweet": 61561,
  "shopping-cart": 61562,
  "folder": 61563,
  "folder-open": 61564,
  "arrows-v": 61565,
  "arrows-h": 61566,
  "bar-chart-o": 61568,
  "bar-chart": 61568,
  "twitter-square": 61569,
  "facebook-square": 61570,
  "camera-retro": 61571,
  "key": 61572,
  "gears": 61573,
  "cogs": 61573,
  "comments": 61574,
  "thumbs-o-up": 61575,
  "thumbs-o-down": 61576,
  "star-half": 61577,
  "heart-o": 61578,
  "sign-out": 61579,
  "linkedin-square": 61580,
  "thumb-tack": 61581,
  "external-link": 61582,
  "sign-in": 61584,
  "trophy": 61585,
  "github-square": 61586,
  "upload": 61587,
  "lemon-o": 61588,
  "phone": 61589,
  "square-o": 61590,
  "bookmark-o": 61591,
  "phone-square": 61592,
  "twitter": 61593,
  "facebook-f": 61594,
  "facebook": 61594,
  "github": 61595,
  "unlock": 61596,
  "credit-card": 61597,
  "feed": 61598,
  "rss": 61598,
  "hdd-o": 61600,
  "bullhorn": 61601,
  "bell": 61683,
  "certificate": 61603,
  "hand-o-right": 61604,
  "hand-o-left": 61605,
  "hand-o-up": 61606,
  "hand-o-down": 61607,
  "arrow-circle-left": 61608,
  "arrow-circle-right": 61609,
  "arrow-circle-up": 61610,
  "arrow-circle-down": 61611,
  "globe": 61612,
  "wrench": 61613,
  "tasks": 61614,
  "filter": 61616,
  "briefcase": 61617,
  "arrows-alt": 61618,
  "group": 61632,
  "users": 61632,
  "chain": 61633,
  "link": 61633,
  "cloud": 61634,
  "flask": 61635,
  "cut": 61636,
  "scissors": 61636,
  "copy": 61637,
  "files-o": 61637,
  "paperclip": 61638,
  "save": 61639,
  "floppy-o": 61639,
  "square": 61640,
  "navicon": 61641,
  "reorder": 61641,
  "bars": 61641,
  "list-ul": 61642,
  "list-ol": 61643,
  "strikethrough": 61644,
  "underline": 61645,
  "table": 61646,
  "magic": 61648,
  "truck": 61649,
  "pinterest": 61650,
  "pinterest-square": 61651,
  "google-plus-square": 61652,
  "google-plus": 61653,
  "money": 61654,
  "caret-down": 61655,
  "caret-up": 61656,
  "caret-left": 61657,
  "caret-right": 61658,
  "columns": 61659,
  "unsorted": 61660,
  "sort": 61660,
  "sort-down": 61661,
  "sort-desc": 61661,
  "sort-up": 61662,
  "sort-asc": 61662,
  "envelope": 61664,
  "linkedin": 61665,
  "rotate-left": 61666,
  "undo": 61666,
  "legal": 61667,
  "gavel": 61667,
  "dashboard": 61668,
  "tachometer": 61668,
  "comment-o": 61669,
  "comments-o": 61670,
  "flash": 61671,
  "bolt": 61671,
  "sitemap": 61672,
  "umbrella": 61673,
  "paste": 61674,
  "clipboard": 61674,
  "lightbulb-o": 61675,
  "exchange": 61676,
  "cloud-download": 61677,
  "cloud-upload": 61678,
  "user-md": 61680,
  "stethoscope": 61681,
  "suitcase": 61682,
  "bell-o": 61602,
  "coffee": 61684,
  "cutlery": 61685,
  "file-text-o": 61686,
  "building-o": 61687,
  "hospital-o": 61688,
  "ambulance": 61689,
  "medkit": 61690,
  "fighter-jet": 61691,
  "beer": 61692,
  "h-square": 61693,
  "plus-square": 61694,
  "angle-double-left": 61696,
  "angle-double-right": 61697,
  "angle-double-up": 61698,
  "angle-double-down": 61699,
  "angle-left": 61700,
  "angle-right": 61701,
  "angle-up": 61702,
  "angle-down": 61703,
  "desktop": 61704,
  "laptop": 61705,
  "tablet": 61706,
  "mobile-phone": 61707,
  "mobile": 61707,
  "circle-o": 61708,
  "quote-left": 61709,
  "quote-right": 61710,
  "spinner": 61712,
  "circle": 61713,
  "mail-reply": 61714,
  "reply": 61714,
  "github-alt": 61715,
  "folder-o": 61716,
  "folder-open-o": 61717,
  "smile-o": 61720,
  "frown-o": 61721,
  "meh-o": 61722,
  "gamepad": 61723,
  "keyboard-o": 61724,
  "flag-o": 61725,
  "flag-checkered": 61726,
  "terminal": 61728,
  "code": 61729,
  "mail-reply-all": 61730,
  "reply-all": 61730,
  "star-half-empty": 61731,
  "star-half-full": 61731,
  "star-half-o": 61731,
  "location-arrow": 61732,
  "crop": 61733,
  "code-fork": 61734,
  "unlink": 61735,
  "chain-broken": 61735,
  "question": 61736,
  "info": 61737,
  "exclamation": 61738,
  "superscript": 61739,
  "subscript": 61740,
  "eraser": 61741,
  "puzzle-piece": 61742,
  "microphone": 61744,
  "microphone-slash": 61745,
  "shield": 61746,
  "calendar-o": 61747,
  "fire-extinguisher": 61748,
  "rocket": 61749,
  "maxcdn": 61750,
  "chevron-circle-left": 61751,
  "chevron-circle-right": 61752,
  "chevron-circle-up": 61753,
  "chevron-circle-down": 61754,
  "html5": 61755,
  "css3": 61756,
  "anchor": 61757,
  "unlock-alt": 61758,
  "bullseye": 61760,
  "ellipsis-h": 61761,
  "ellipsis-v": 61762,
  "rss-square": 61763,
  "play-circle": 61764,
  "ticket": 61765,
  "minus-square": 61766,
  "minus-square-o": 61767,
  "level-up": 61768,
  "level-down": 61769,
  "check-square": 61770,
  "pencil-square": 61771,
  "external-link-square": 61772,
  "share-square": 61773,
  "compass": 61774,
  "toggle-down": 61776,
  "caret-square-o-down": 61776,
  "toggle-up": 61777,
  "caret-square-o-up": 61777,
  "toggle-right": 61778,
  "caret-square-o-right": 61778,
  "euro": 61779,
  "eur": 61779,
  "gbp": 61780,
  "dollar": 61781,
  "usd": 61781,
  "rupee": 61782,
  "inr": 61782,
  "cny": 61783,
  "rmb": 61783,
  "yen": 61783,
  "jpy": 61783,
  "ruble": 61784,
  "rouble": 61784,
  "rub": 61784,
  "won": 61785,
  "krw": 61785,
  "bitcoin": 61786,
  "btc": 61786,
  "file": 61787,
  "file-text": 61788,
  "sort-alpha-asc": 61789,
  "sort-alpha-desc": 61790,
  "sort-amount-asc": 61792,
  "sort-amount-desc": 61793,
  "sort-numeric-asc": 61794,
  "sort-numeric-desc": 61795,
  "thumbs-up": 61796,
  "thumbs-down": 61797,
  "youtube-square": 61798,
  "youtube": 61799,
  "xing": 61800,
  "xing-square": 61801,
  "youtube-play": 61802,
  "dropbox": 61803,
  "stack-overflow": 61804,
  "instagram": 61805,
  "flickr": 61806,
  "adn": 61808,
  "bitbucket": 61809,
  "bitbucket-square": 61810,
  "tumblr": 61811,
  "tumblr-square": 61812,
  "long-arrow-down": 61813,
  "long-arrow-up": 61814,
  "long-arrow-left": 61815,
  "long-arrow-right": 61816,
  "apple": 61817,
  "windows": 61818,
  "android": 61819,
  "linux": 61820,
  "dribbble": 61821,
  "skype": 61822,
  "foursquare": 61824,
  "trello": 61825,
  "female": 61826,
  "male": 61827,
  "gittip": 61828,
  "gratipay": 61828,
  "sun-o": 61829,
  "moon-o": 61830,
  "archive": 61831,
  "bug": 61832,
  "vk": 61833,
  "weibo": 61834,
  "renren": 61835,
  "pagelines": 61836,
  "stack-exchange": 61837,
  "arrow-circle-o-right": 61838,
  "arrow-circle-o-left": 61840,
  "toggle-left": 61841,
  "caret-square-o-left": 61841,
  "dot-circle-o": 61842,
  "wheelchair": 61843,
  "vimeo-square": 61844,
  "turkish-lira": 61845,
  "try": 61845,
  "plus-square-o": 61846,
  "space-shuttle": 61847,
  "slack": 61848,
  "envelope-square": 61849,
  "wordpress": 61850,
  "openid": 61851,
  "institution": 61852,
  "bank": 61852,
  "university": 61852,
  "mortar-board": 61853,
  "graduation-cap": 61853,
  "yahoo": 61854,
  "google": 61856,
  "reddit": 61857,
  "reddit-square": 61858,
  "stumbleupon-circle": 61859,
  "stumbleupon": 61860,
  "delicious": 61861,
  "digg": 61862,
  "pied-piper-pp": 61863,
  "pied-piper-alt": 61864,
  "drupal": 61865,
  "joomla": 61866,
  "language": 61867,
  "fax": 61868,
  "building": 61869,
  "child": 61870,
  "paw": 61872,
  "spoon": 61873,
  "cube": 61874,
  "cubes": 61875,
  "behance": 61876,
  "behance-square": 61877,
  "steam": 61878,
  "steam-square": 61879,
  "recycle": 61880,
  "automobile": 61881,
  "car": 61881,
  "cab": 61882,
  "taxi": 61882,
  "tree": 61883,
  "spotify": 61884,
  "deviantart": 61885,
  "soundcloud": 61886,
  "database": 61888,
  "file-pdf-o": 61889,
  "file-word-o": 61890,
  "file-excel-o": 61891,
  "file-powerpoint-o": 61892,
  "file-photo-o": 61893,
  "file-picture-o": 61893,
  "file-image-o": 61893,
  "file-zip-o": 61894,
  "file-archive-o": 61894,
  "file-sound-o": 61895,
  "file-audio-o": 61895,
  "file-movie-o": 61896,
  "file-video-o": 61896,
  "file-code-o": 61897,
  "vine": 61898,
  "codepen": 61899,
  "jsfiddle": 61900,
  "life-bouy": 61901,
  "life-buoy": 61901,
  "life-saver": 61901,
  "support": 61901,
  "life-ring": 61901,
  "circle-o-notch": 61902,
  "ra": 61904,
  "resistance": 61904,
  "rebel": 61904,
  "ge": 61905,
  "empire": 61905,
  "git-square": 61906,
  "git": 61907,
  "y-combinator-square": 61908,
  "yc-square": 61908,
  "hacker-news": 61908,
  "tencent-weibo": 61909,
  "qq": 61910,
  "wechat": 61911,
  "weixin": 61911,
  "send": 61912,
  "paper-plane": 61912,
  "send-o": 61913,
  "paper-plane-o": 61913,
  "history": 61914,
  "circle-thin": 61915,
  "header": 61916,
  "paragraph": 61917,
  "sliders": 61918,
  "share-alt": 61920,
  "share-alt-square": 61921,
  "bomb": 61922,
  "soccer-ball-o": 61923,
  "futbol-o": 61923,
  "tty": 61924,
  "binoculars": 61925,
  "plug": 61926,
  "slideshare": 61927,
  "twitch": 61928,
  "yelp": 61929,
  "newspaper-o": 61930,
  "wifi": 61931,
  "calculator": 61932,
  "paypal": 61933,
  "google-wallet": 61934,
  "cc-visa": 61936,
  "cc-mastercard": 61937,
  "cc-discover": 61938,
  "cc-amex": 61939,
  "cc-paypal": 61940,
  "cc-stripe": 61941,
  "bell-slash": 61942,
  "bell-slash-o": 61943,
  "trash": 61944,
  "copyright": 61945,
  "at": 61946,
  "eyedropper": 61947,
  "paint-brush": 61948,
  "birthday-cake": 61949,
  "area-chart": 61950,
  "pie-chart": 61952,
  "line-chart": 61953,
  "lastfm": 61954,
  "lastfm-square": 61955,
  "toggle-off": 61956,
  "toggle-on": 61957,
  "bicycle": 61958,
  "bus": 61959,
  "ioxhost": 61960,
  "angellist": 61961,
  "cc": 61962,
  "shekel": 61963,
  "sheqel": 61963,
  "ils": 61963,
  "meanpath": 61964,
  "buysellads": 61965,
  "connectdevelop": 61966,
  "dashcube": 61968,
  "forumbee": 61969,
  "leanpub": 61970,
  "sellsy": 61971,
  "shirtsinbulk": 61972,
  "simplybuilt": 61973,
  "skyatlas": 61974,
  "cart-plus": 61975,
  "cart-arrow-down": 61976,
  "diamond": 61977,
  "ship": 61978,
  "user-secret": 61979,
  "motorcycle": 61980,
  "street-view": 61981,
  "heartbeat": 61982,
  "venus": 61985,
  "mars": 61986,
  "mercury": 61987,
  "intersex": 61988,
  "transgender": 61988,
  "transgender-alt": 61989,
  "venus-double": 61990,
  "mars-double": 61991,
  "venus-mars": 61992,
  "mars-stroke": 61993,
  "mars-stroke-v": 61994,
  "mars-stroke-h": 61995,
  "neuter": 61996,
  "genderless": 61997,
  "facebook-official": 62000,
  "pinterest-p": 62001,
  "whatsapp": 62002,
  "server": 62003,
  "user-plus": 62004,
  "user-times": 62005,
  "hotel": 62006,
  "bed": 62006,
  "viacoin": 62007,
  "train": 62008,
  "subway": 62009,
  "medium": 62010,
  "yc": 62011,
  "y-combinator": 62011,
  "optin-monster": 62012,
  "opencart": 62013,
  "expeditedssl": 62014,
  "battery-4": 62016,
  "battery": 62016,
  "battery-full": 62016,
  "battery-3": 62017,
  "battery-three-quarters": 62017,
  "battery-2": 62018,
  "battery-half": 62018,
  "battery-1": 62019,
  "battery-quarter": 62019,
  "battery-0": 62020,
  "battery-empty": 62020,
  "mouse-pointer": 62021,
  "i-cursor": 62022,
  "object-group": 62023,
  "object-ungroup": 62024,
  "sticky-note": 62025,
  "sticky-note-o": 62026,
  "cc-jcb": 62027,
  "cc-diners-club": 62028,
  "clone": 62029,
  "balance-scale": 62030,
  "hourglass-o": 62032,
  "hourglass-1": 62033,
  "hourglass-start": 62033,
  "hourglass-2": 62034,
  "hourglass-half": 62034,
  "hourglass-3": 62035,
  "hourglass-end": 62035,
  "hourglass": 62036,
  "hand-grab-o": 62037,
  "hand-rock-o": 62037,
  "hand-stop-o": 62038,
  "hand-paper-o": 62038,
  "hand-scissors-o": 62039,
  "hand-lizard-o": 62040,
  "hand-spock-o": 62041,
  "hand-pointer-o": 62042,
  "hand-peace-o": 62043,
  "trademark": 62044,
  "registered": 62045,
  "creative-commons": 62046,
  "gg": 62048,
  "gg-circle": 62049,
  "tripadvisor": 62050,
  "odnoklassniki": 62051,
  "odnoklassniki-square": 62052,
  "get-pocket": 62053,
  "wikipedia-w": 62054,
  "safari": 62055,
  "chrome": 62056,
  "firefox": 62057,
  "opera": 62058,
  "internet-explorer": 62059,
  "tv": 62060,
  "television": 62060,
  "contao": 62061,
  "500px": 62062,
  "amazon": 62064,
  "calendar-plus-o": 62065,
  "calendar-minus-o": 62066,
  "calendar-times-o": 62067,
  "calendar-check-o": 62068,
  "industry": 62069,
  "map-pin": 62070,
  "map-signs": 62071,
  "map-o": 62072,
  "map": 62073,
  "commenting": 62074,
  "commenting-o": 62075,
  "houzz": 62076,
  "vimeo": 62077,
  "black-tie": 62078,
  "fonticons": 62080,
  "reddit-alien": 62081,
  "edge": 62082,
  "credit-card-alt": 62083,
  "codiepie": 62084,
  "modx": 62085,
  "fort-awesome": 62086,
  "usb": 62087,
  "product-hunt": 62088,
  "mixcloud": 62089,
  "scribd": 62090,
  "pause-circle": 62091,
  "pause-circle-o": 62092,
  "stop-circle": 62093,
  "stop-circle-o": 62094,
  "shopping-bag": 62096,
  "shopping-basket": 62097,
  "hashtag": 62098,
  "bluetooth": 62099,
  "bluetooth-b": 62100,
  "percent": 62101,
  "gitlab": 62102,
  "wpbeginner": 62103,
  "wpforms": 62104,
  "envira": 62105,
  "universal-access": 62106,
  "wheelchair-alt": 62107,
  "question-circle-o": 62108,
  "blind": 62109,
  "audio-description": 62110,
  "volume-control-phone": 62112,
  "braille": 62113,
  "assistive-listening-systems": 62114,
  "asl-interpreting": 62115,
  "american-sign-language-interpreting": 62115,
  "deafness": 62116,
  "hard-of-hearing": 62116,
  "deaf": 62116,
  "glide": 62117,
  "glide-g": 62118,
  "signing": 62119,
  "sign-language": 62119,
  "low-vision": 62120,
  "viadeo": 62121,
  "viadeo-square": 62122,
  "snapchat": 62123,
  "snapchat-ghost": 62124,
  "snapchat-square": 62125,
  "pied-piper": 62126,
  "first-order": 62128,
  "yoast": 62129,
  "themeisle": 62130,
  "google-plus-circle": 62131,
  "google-plus-official": 62131,
  "fa": 62132,
  "font-awesome": 62132,
  "handshake-o": 62133,
  "envelope-open": 62134,
  "envelope-open-o": 62135,
  "linode": 62136,
  "address-book": 62137,
  "address-book-o": 62138,
  "vcard": 62139,
  "address-card": 62139,
  "vcard-o": 62140,
  "address-card-o": 62140,
  "user-circle": 62141,
  "user-circle-o": 62142,
  "user-o": 62144,
  "id-badge": 62145,
  "drivers-license": 62146,
  "id-card": 62146,
  "drivers-license-o": 62147,
  "id-card-o": 62147,
  "quora": 62148,
  "free-code-camp": 62149,
  "telegram": 62150,
  "thermometer-4": 62151,
  "thermometer": 62151,
  "thermometer-full": 62151,
  "thermometer-3": 62152,
  "thermometer-three-quarters": 62152,
  "thermometer-2": 62153,
  "thermometer-half": 62153,
  "thermometer-1": 62154,
  "thermometer-quarter": 62154,
  "thermometer-0": 62155,
  "thermometer-empty": 62155,
  "shower": 62156,
  "bathtub": 62157,
  "s15": 62157,
  "bath": 62157,
  "podcast": 62158,
  "window-maximize": 62160,
  "window-minimize": 62161,
  "window-restore": 62162,
  "times-rectangle": 62163,
  "window-close": 62163,
  "times-rectangle-o": 62164,
  "window-close-o": 62164,
  "bandcamp": 62165,
  "grav": 62166,
  "etsy": 62167,
  "imdb": 62168,
  "ravelry": 62169,
  "eercast": 62170,
  "microchip": 62171,
  "snowflake-o": 62172,
  "superpowers": 62173,
  "wpexplorer": 62174,
  "meetup": 62176
};
}, 2644, null, "react-native-vector-icons/glyphmaps/FontAwesome.json");
__d(/* UI/ignite/DevScreens/Styles/PluginExamplesScreenStyles.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _reactNative = require(334           ); // 334 = react-native

var _DevTheme = require(2293          ); // 2293 = ../DevTheme/

exports.default = _reactNative.StyleSheet.create(babelHelpers.extends({}, _DevTheme.ApplicationStyles.screen));
}, 2645, null, "UI/ignite/DevScreens/Styles/PluginExamplesScreenStyles.js");
__d(/* UI/ignite/DevScreens/ThemeScreen.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/home/chris/Desktop/UI/ignite/DevScreens/ThemeScreen.js';

var _react = require(604    ); // 604 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(334           ); // 334 = react-native

var _DevTheme = require(2293        ); // 2293 = ./DevTheme

var _ramda = require(1983   ); // 1983 = ramda

var _ramda2 = babelHelpers.interopRequireDefault(_ramda);

var _ThemeScreenStyles = require(2647                        ); // 2647 = ./Styles/ThemeScreenStyles

var _ThemeScreenStyles2 = babelHelpers.interopRequireDefault(_ThemeScreenStyles);

var colors = _ramda2.default.keys(_DevTheme.Colors);

var types = _ramda2.default.keys(_DevTheme.Fonts.type);

var fontStyles = _ramda2.default.keys(_DevTheme.Fonts.style);

var ThemeScreen = function (_React$Component) {
  babelHelpers.inherits(ThemeScreen, _React$Component);

  function ThemeScreen() {
    babelHelpers.classCallCheck(this, ThemeScreen);
    return babelHelpers.possibleConstructorReturn(this, (ThemeScreen.__proto__ || Object.getPrototypeOf(ThemeScreen)).apply(this, arguments));
  }

  babelHelpers.createClass(ThemeScreen, [{
    key: 'renderColor',
    value: function renderColor(color) {
      return _react2.default.createElement(
        _reactNative.View,
        { style: _ThemeScreenStyles2.default.colorContainer, key: color + 'Container', __source: {
            fileName: _jsxFileName,
            lineNumber: 19
          }
        },
        _react2.default.createElement(
          _reactNative.View,
          { style: _ThemeScreenStyles2.default.backgroundContainer, key: color + 'BackgroundContainer', __source: {
              fileName: _jsxFileName,
              lineNumber: 20
            }
          },
          _react2.default.createElement(_reactNative.Image, { style: _ThemeScreenStyles2.default.backerImage, source: _DevTheme.Images.tileBg, key: color + 'BackgroundImage', __source: {
              fileName: _jsxFileName,
              lineNumber: 21
            }
          }),
          _react2.default.createElement(_reactNative.View, { style: [_ThemeScreenStyles2.default.colorSquare, { backgroundColor: _DevTheme.Colors[color] }], key: color + 'Square', __source: {
              fileName: _jsxFileName,
              lineNumber: 22
            }
          })
        ),
        _react2.default.createElement(
          _reactNative.Text,
          { style: _ThemeScreenStyles2.default.colorName, key: color + 'Text', __source: {
              fileName: _jsxFileName,
              lineNumber: 24
            }
          },
          color
        )
      );
    }
  }, {
    key: 'renderColors',
    value: function renderColors() {
      var _this2 = this;

      return colors.map(function (color) {
        return _this2.renderColor(color);
      });
    }
  }, {
    key: 'renderFont',
    value: function renderFont(font) {
      return _react2.default.createElement(
        _reactNative.Text,
        { style: [_ThemeScreenStyles2.default.fontRow, { fontFamily: _DevTheme.Fonts.type[font] }], key: font, __source: {
            fileName: _jsxFileName,
            lineNumber: 35
          }
        },
        font + ': ' + _DevTheme.Fonts.type[font]
      );
    }
  }, {
    key: 'renderFonts',
    value: function renderFonts() {
      var _this3 = this;

      return types.map(function (font) {
        return _this3.renderFont(font);
      });
    }
  }, {
    key: 'renderStyle',
    value: function renderStyle(fontStyle) {
      return _react2.default.createElement(
        _reactNative.Text,
        { style: [_ThemeScreenStyles2.default.fontRow, babelHelpers.extends({}, _DevTheme.Fonts.style[fontStyle])], key: fontStyle, __source: {
            fileName: _jsxFileName,
            lineNumber: 46
          }
        },
        'This is ' + fontStyle + ' style'
      );
    }
  }, {
    key: 'renderStyles',
    value: function renderStyles() {
      var _this4 = this;

      return fontStyles.map(function (fontStyle) {
        return _this4.renderStyle(fontStyle);
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _this5 = this;

      return _react2.default.createElement(
        _reactNative.View,
        { style: _ThemeScreenStyles2.default.mainContainer, __source: {
            fileName: _jsxFileName,
            lineNumber: 55
          }
        },
        _react2.default.createElement(_reactNative.Image, { source: _DevTheme.Images.background, style: _ThemeScreenStyles2.default.backgroundImage, resizeMode: 'stretch', __source: {
            fileName: _jsxFileName,
            lineNumber: 56
          }
        }),
        _react2.default.createElement(
          _reactNative.TouchableOpacity,
          { onPress: function onPress() {
              return _this5.props.navigation.goBack();
            }, style: {
              position: 'absolute',
              paddingTop: 30,
              paddingHorizontal: 5,
              zIndex: 10
            }, __source: {
              fileName: _jsxFileName,
              lineNumber: 57
            }
          },
          _react2.default.createElement(_reactNative.Image, { source: _DevTheme.Images.backButton, __source: {
              fileName: _jsxFileName,
              lineNumber: 63
            }
          })
        ),
        _react2.default.createElement(
          _reactNative.ScrollView,
          { style: _ThemeScreenStyles2.default.container, __source: {
              fileName: _jsxFileName,
              lineNumber: 65
            }
          },
          _react2.default.createElement(
            _reactNative.View,
            { style: { alignItems: 'center', paddingTop: 60 }, __source: {
                fileName: _jsxFileName,
                lineNumber: 66
              }
            },
            _react2.default.createElement(_reactNative.Image, { source: _DevTheme.Images.theme, style: _ThemeScreenStyles2.default.logo, __source: {
                fileName: _jsxFileName,
                lineNumber: 67
              }
            }),
            _react2.default.createElement(
              _reactNative.Text,
              { style: _ThemeScreenStyles2.default.titleText, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 68
                }
              },
              'Themes'
            )
          ),
          _react2.default.createElement(
            _reactNative.View,
            { style: _ThemeScreenStyles2.default.section, key: 'colors-header', __source: {
                fileName: _jsxFileName,
                lineNumber: 70
              }
            },
            _react2.default.createElement(
              _reactNative.Text,
              { style: _ThemeScreenStyles2.default.sectionText, key: 'colors', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 71
                }
              },
              'List of Theme specific settings.  Auto-generated from Themes folder.'
            )
          ),
          _react2.default.createElement(
            _reactNative.View,
            { style: _ThemeScreenStyles2.default.sectionHeaderContainer, __source: {
                fileName: _jsxFileName,
                lineNumber: 73
              }
            },
            _react2.default.createElement(
              _reactNative.Text,
              { style: _ThemeScreenStyles2.default.sectionHeader, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 74
                }
              },
              'Colors'
            )
          ),
          _react2.default.createElement(
            _reactNative.View,
            { style: _ThemeScreenStyles2.default.colorsContainer, __source: {
                fileName: _jsxFileName,
                lineNumber: 76
              }
            },
            this.renderColors()
          ),
          _react2.default.createElement(
            _reactNative.View,
            { style: _ThemeScreenStyles2.default.sectionHeaderContainer, __source: {
                fileName: _jsxFileName,
                lineNumber: 80
              }
            },
            _react2.default.createElement(
              _reactNative.Text,
              { style: _ThemeScreenStyles2.default.sectionHeader, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 81
                }
              },
              'Fonts'
            )
          ),
          this.renderFonts(),
          _react2.default.createElement(
            _reactNative.View,
            { style: _ThemeScreenStyles2.default.sectionHeaderContainer, __source: {
                fileName: _jsxFileName,
                lineNumber: 85
              }
            },
            _react2.default.createElement(
              _reactNative.Text,
              { style: _ThemeScreenStyles2.default.sectionHeader, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 86
                }
              },
              'Styles'
            )
          ),
          this.renderStyles()
        )
      );
    }
  }]);
  return ThemeScreen;
}(_react2.default.Component);

exports.default = ThemeScreen;
}, 2646, null, "UI/ignite/DevScreens/ThemeScreen.js");
__d(/* UI/ignite/DevScreens/Styles/ThemeScreenStyles.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _reactNative = require(334           ); // 334 = react-native

var _DevTheme = require(2293          ); // 2293 = ../DevTheme/

exports.default = _reactNative.StyleSheet.create(babelHelpers.extends({}, _DevTheme.ApplicationStyles.screen, {
  groupContainer: babelHelpers.extends({}, _DevTheme.ApplicationStyles.groupContainer),
  sectionHeaderContainer: babelHelpers.extends({}, _DevTheme.ApplicationStyles.darkLabelContainer),
  sectionHeader: babelHelpers.extends({}, _DevTheme.ApplicationStyles.darkLabel),
  colorsContainer: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    justifyContent: 'center'
  },
  backgroundContainer: {
    position: 'relative',
    width: 102,
    height: 102,
    borderWidth: 1,
    borderColor: _DevTheme.Colors.frost
  },
  backerImage: {
    top: 0,
    bottom: 0,
    left: 0,
    right: 0,
    position: 'absolute',
    resizeMode: 'stretch'
  },
  colorContainer: {
    height: 130,
    padding: _DevTheme.Metrics.smallMargin,
    marginBottom: _DevTheme.Metrics.smallMargin
  },
  colorSquare: {
    width: 100,
    height: 100
  },
  colorName: {
    width: 100,
    height: _DevTheme.Metrics.doubleBaseMargin,
    lineHeight: _DevTheme.Metrics.doubleBaseMargin,
    color: _DevTheme.Colors.charcoal,
    textAlign: 'center'
  },
  fontRow: {
    padding: _DevTheme.Metrics.smallMargin,
    marginHorizontal: _DevTheme.Metrics.smallMargin,
    color: _DevTheme.Colors.snow
  }
}));
}, 2647, null, "UI/ignite/DevScreens/Styles/ThemeScreenStyles.js");
__d(/* UI/ignite/DevScreens/FaqScreen.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/home/chris/Desktop/UI/ignite/DevScreens/FaqScreen.js';

var _react = require(604    ); // 604 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(334           ); // 334 = react-native

var _DevTheme = require(2293        ); // 2293 = ./DevTheme

var _FaqScreenStyles = require(2649                      ); // 2649 = ./Styles/FaqScreenStyles

var _FaqScreenStyles2 = babelHelpers.interopRequireDefault(_FaqScreenStyles);

var FaqScreen = function (_React$Component) {
  babelHelpers.inherits(FaqScreen, _React$Component);

  function FaqScreen() {
    babelHelpers.classCallCheck(this, FaqScreen);
    return babelHelpers.possibleConstructorReturn(this, (FaqScreen.__proto__ || Object.getPrototypeOf(FaqScreen)).apply(this, arguments));
  }

  babelHelpers.createClass(FaqScreen, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      return _react2.default.createElement(
        _reactNative.View,
        { style: [_FaqScreenStyles2.default.container, _FaqScreenStyles2.default.mainContainer], __source: {
            fileName: _jsxFileName,
            lineNumber: 10
          }
        },
        _react2.default.createElement(_reactNative.Image, { source: _DevTheme.Images.background, style: _FaqScreenStyles2.default.backgroundImage, resizeMode: 'stretch', __source: {
            fileName: _jsxFileName,
            lineNumber: 11
          }
        }),
        _react2.default.createElement(
          _reactNative.TouchableOpacity,
          { onPress: function onPress() {
              return _this2.props.navigation.goBack();
            }, style: {
              position: 'absolute',
              paddingTop: 30,
              paddingHorizontal: 5,
              zIndex: 10
            }, __source: {
              fileName: _jsxFileName,
              lineNumber: 12
            }
          },
          _react2.default.createElement(_reactNative.Image, { source: _DevTheme.Images.backButton, __source: {
              fileName: _jsxFileName,
              lineNumber: 18
            }
          })
        ),
        _react2.default.createElement(
          _reactNative.ScrollView,
          { showsVerticalScrollIndicator: false, style: _FaqScreenStyles2.default.container, __source: {
              fileName: _jsxFileName,
              lineNumber: 20
            }
          },
          _react2.default.createElement(
            _reactNative.View,
            { style: { alignItems: 'center', paddingTop: 60 }, __source: {
                fileName: _jsxFileName,
                lineNumber: 21
              }
            },
            _react2.default.createElement(_reactNative.Image, { source: _DevTheme.Images.faq, style: _FaqScreenStyles2.default.logo, __source: {
                fileName: _jsxFileName,
                lineNumber: 22
              }
            }),
            _react2.default.createElement(
              _reactNative.Text,
              { style: _FaqScreenStyles2.default.titleText, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 23
                }
              },
              'FAQ'
            )
          ),
          _react2.default.createElement(
            _reactNative.View,
            { style: _FaqScreenStyles2.default.description, __source: {
                fileName: _jsxFileName,
                lineNumber: 25
              }
            },
            _react2.default.createElement(
              _reactNative.Text,
              { style: _FaqScreenStyles2.default.sectionText, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 26
                }
              },
              'Have questions? We direct you to answers.  This is a small taste of where to get more information depending on what it is that you want to know.'
            )
          ),
          _react2.default.createElement(
            _reactNative.View,
            { style: _FaqScreenStyles2.default.sectionHeaderContainer, __source: {
                fileName: _jsxFileName,
                lineNumber: 30
              }
            },
            _react2.default.createElement(
              _reactNative.Text,
              { style: _FaqScreenStyles2.default.sectionHeader, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 31
                }
              },
              'What are these screens?'
            ),
            _react2.default.createElement(
              _reactNative.Text,
              { style: _FaqScreenStyles2.default.sectionText, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 32
                }
              },
              'We like to use these screens when we develop apps. They are optional and out of the way to help you along your app creation process.  Each screen has an explanation of what it provides.  More info can be found on our website http://infinite.red/ignite'
            )
          ),
          _react2.default.createElement(
            _reactNative.View,
            { style: _FaqScreenStyles2.default.sectionHeaderContainer, __source: {
                fileName: _jsxFileName,
                lineNumber: 34
              }
            },
            _react2.default.createElement(
              _reactNative.Text,
              { style: _FaqScreenStyles2.default.sectionHeader, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 35
                }
              },
              'Got Docs?'
            ),
            _react2.default.createElement(
              _reactNative.Text,
              { style: _FaqScreenStyles2.default.sectionText, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 36
                }
              },
              'The GitHub page has a docs folder that can help you from beginner to expert!  We\'ll be working to release some instructional video docs as well.'
            )
          ),
          _react2.default.createElement(
            _reactNative.View,
            { style: _FaqScreenStyles2.default.sectionHeaderContainer, __source: {
                fileName: _jsxFileName,
                lineNumber: 38
              }
            },
            _react2.default.createElement(
              _reactNative.Text,
              { style: _FaqScreenStyles2.default.sectionHeader, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 39
                }
              },
              'I don\'t see the answer to my question in docs'
            ),
            _react2.default.createElement(
              _reactNative.Text,
              { style: _FaqScreenStyles2.default.sectionText, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 40
                }
              },
              'Besides our docs, we have a friendly community Slack.  Get an invite from http://community.infinite.red and you\'ll find a community of people in the #ignite channel ready to help!'
            )
          ),
          _react2.default.createElement(
            _reactNative.View,
            { style: _FaqScreenStyles2.default.sectionHeaderContainer, __source: {
                fileName: _jsxFileName,
                lineNumber: 42
              }
            },
            _react2.default.createElement(
              _reactNative.Text,
              { style: _FaqScreenStyles2.default.sectionHeader, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 43
                }
              },
              'What can I customize?'
            ),
            _react2.default.createElement(
              _reactNative.Text,
              { style: _FaqScreenStyles2.default.sectionText, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 44
                }
              },
              'Everything!  We\'re open source with MIT license.  We also make it easy to change whatever you like.  Check on our guides for making your very own plugins and boilerplates with Ignite.'
            )
          ),
          _react2.default.createElement(
            _reactNative.View,
            { style: _FaqScreenStyles2.default.sectionHeaderContainer, __source: {
                fileName: _jsxFileName,
                lineNumber: 46
              }
            },
            _react2.default.createElement(
              _reactNative.Text,
              { style: _FaqScreenStyles2.default.sectionHeader, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 47
                }
              },
              'I love you'
            ),
            _react2.default.createElement(
              _reactNative.Text,
              { style: _FaqScreenStyles2.default.sectionText, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 48
                }
              },
              'We love you, too.  Don\'t forget to tweet us \uD83D\uDE18 @infinite_red OR @ir_ignite'
            )
          )
        )
      );
    }
  }]);
  return FaqScreen;
}(_react2.default.Component);

exports.default = FaqScreen;
}, 2648, null, "UI/ignite/DevScreens/FaqScreen.js");
__d(/* UI/ignite/DevScreens/Styles/FaqScreenStyles.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _reactNative = require(334           ); // 334 = react-native

var _DevTheme = require(2293          ); // 2293 = ../DevTheme/

exports.default = _reactNative.StyleSheet.create(babelHelpers.extends({}, _DevTheme.ApplicationStyles.screen, {
  sectionText: babelHelpers.extends({}, _DevTheme.Fonts.base, {
    color: _DevTheme.Colors.text,
    fontSize: 12,
    lineHeight: _DevTheme.Metrics.doubleBaseMargin + 5
  }),
  mainContainer: {
    paddingHorizontal: _DevTheme.Metrics.doubleBaseMargin
  },
  description: {
    marginVertical: _DevTheme.Metrics.doubleSection
  },
  sectionHeader: babelHelpers.extends({}, _DevTheme.Fonts.style.h5, {
    color: _DevTheme.Colors.fire
  }),
  sectionHeaderContainer: {
    borderWidth: 1,
    borderColor: _DevTheme.Colors.border,
    padding: _DevTheme.Metrics.baseMargin,
    marginVertical: 20
  }
}));
}, 2649, null, "UI/ignite/DevScreens/Styles/FaqScreenStyles.js");
__d(/* UI/ignite/DevScreens/Styles/PresentationScreenStyles.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _reactNative = require(334           ); // 334 = react-native

var _DevTheme = require(2293          ); // 2293 = ../DevTheme/

exports.default = _reactNative.StyleSheet.create(babelHelpers.extends({}, _DevTheme.ApplicationStyles.screen, {
  container: {
    marginBottom: 36,
    paddingTop: _DevTheme.Metrics.section
  },
  logo: {
    height: _DevTheme.Metrics.images.logo,
    width: _DevTheme.Metrics.images.logo,
    resizeMode: 'contain',
    marginTop: _DevTheme.Metrics.doubleBaseMargin
  },
  buttonsContainer: {
    flexDirection: 'row',
    flex: 1
  },
  centered: {
    alignItems: 'center'
  },
  componentButton: {
    borderColor: _DevTheme.Colors.border,
    borderTopWidth: 1,
    borderRightWidth: 1,
    borderBottomWidth: 1
  },
  apiButton: {
    borderColor: _DevTheme.Colors.border,
    borderRightWidth: 1,
    borderBottomWidth: 1
  },
  usageButton: {
    borderColor: _DevTheme.Colors.border,
    borderTopWidth: 1,
    borderBottomWidth: 1
  },
  deviceButton: {
    borderColor: _DevTheme.Colors.border,
    borderRightWidth: 1,
    borderTopWidth: 1
  },
  sectionText: {
    textAlign: 'center',
    fontFamily: _DevTheme.Fonts.base,
    fontSize: 14,
    marginHorizontal: _DevTheme.Metrics.baseMargin,
    lineHeight: 30,
    marginVertical: _DevTheme.Metrics.doubleBaseMargin,
    color: _DevTheme.Colors.text
  },
  banner: {
    position: 'absolute',
    width: _DevTheme.Metrics.screenWidth,
    backgroundColor: _DevTheme.Colors.banner,
    justifyContent: 'center',
    alignItems: 'center',
    bottom: 0,
    left: 0,
    right: 0,
    height: 36
  },
  bannerLabel: babelHelpers.extends({}, _DevTheme.Fonts.style.h5, {
    fontSize: 12,
    color: _DevTheme.Colors.snow
  })
}));
}, 2650, null, "UI/ignite/DevScreens/Styles/PresentationScreenStyles.js");
__d(/* UI/App/Containers/Styles/LaunchScreenStyles.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _reactNative = require(334           ); // 334 = react-native

var _Themes = require(1956           ); // 1956 = ../../Themes/

exports.default = _reactNative.StyleSheet.create(babelHelpers.extends({}, _Themes.ApplicationStyles.screen, {
  container: {
    paddingBottom: _Themes.Metrics.baseMargin
  },
  logo: {
    marginTop: _Themes.Metrics.doubleSection,
    height: _Themes.Metrics.images.logo,
    width: _Themes.Metrics.images.logo,
    resizeMode: 'contain'
  },
  centered: {
    alignItems: 'center'
  }
}));
}, 2651, null, "UI/App/Containers/Styles/LaunchScreenStyles.js");
__d(/* UI/App/Containers/LoginScreen.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/home/chris/Desktop/UI/App/Containers/LoginScreen.js';

var _react = require(604    ); // 604 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(334           ); // 334 = react-native

var _reactRedux = require(1860         ); // 1860 = react-redux

var _LoginScreenStyles = require(2653                        ); // 2653 = ./Styles/LoginScreenStyles

var _LoginScreenStyles2 = babelHelpers.interopRequireDefault(_LoginScreenStyles);

var _Themes = require(1956       ); // 1956 = ../Themes

var _LoginRedux = require(2654                 ); // 2654 = ../Redux/LoginRedux

var _LoginRedux2 = babelHelpers.interopRequireDefault(_LoginRedux);

var LoginScreen = function (_React$Component) {
  babelHelpers.inherits(LoginScreen, _React$Component);

  function LoginScreen(props) {
    babelHelpers.classCallCheck(this, LoginScreen);

    var _this = babelHelpers.possibleConstructorReturn(this, (LoginScreen.__proto__ || Object.getPrototypeOf(LoginScreen)).call(this, props));

    _this.isAttempting = false;
    _this.keyboardDidShowListener = {};
    _this.keyboardDidHideListener = {};

    _this.keyboardDidShow = function (e) {
      _reactNative.LayoutAnimation.configureNext(_reactNative.LayoutAnimation.Presets.easeInEaseOut);
      var newSize = _Themes.Metrics.screenHeight - e.endCoordinates.height;
      _this.setState({
        visibleHeight: newSize,
        topLogo: { width: 100, height: 70 }
      });
    };

    _this.keyboardDidHide = function (e) {
      _reactNative.LayoutAnimation.configureNext(_reactNative.LayoutAnimation.Presets.easeInEaseOut);
      _this.setState({
        visibleHeight: _Themes.Metrics.screenHeight,
        topLogo: { width: _Themes.Metrics.screenWidth }
      });
    };

    _this.handlePressLogin = function () {
      var _this$state = _this.state,
          username = _this$state.username,
          password = _this$state.password;

      _this.isAttempting = true;

      _this.props.attemptLogin(username, password);
    };

    _this.handleChangeUsername = function (text) {
      _this.setState({ username: text });
    };

    _this.handleChangePassword = function (text) {
      _this.setState({ password: text });
    };

    _this.state = {
      username: 'reactnative@infinite.red',
      password: 'password',
      visibleHeight: _Themes.Metrics.screenHeight,
      topLogo: { width: _Themes.Metrics.screenWidth }
    };
    _this.isAttempting = false;
    return _this;
  }

  babelHelpers.createClass(LoginScreen, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(newProps) {
      this.forceUpdate();

      if (this.isAttempting && !newProps.fetching) {
        this.props.navigation.goBack();
      }
    }
  }, {
    key: 'componentWillMount',
    value: function componentWillMount() {
      this.keyboardDidShowListener = _reactNative.Keyboard.addListener('keyboardDidShow', this.keyboardDidShow);
      this.keyboardDidHideListener = _reactNative.Keyboard.addListener('keyboardDidHide', this.keyboardDidHide);
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.keyboardDidShowListener.remove();
      this.keyboardDidHideListener.remove();
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _state = this.state,
          username = _state.username,
          password = _state.password;
      var fetching = this.props.fetching;

      var editable = !fetching;
      var textInputStyle = editable ? _LoginScreenStyles2.default.textInput : _LoginScreenStyles2.default.textInputReadonly;
      return _react2.default.createElement(
        _reactNative.ScrollView,
        { contentContainerStyle: { justifyContent: 'center' }, style: [_LoginScreenStyles2.default.container, { height: this.state.visibleHeight }], keyboardShouldPersistTaps: 'always', __source: {
            fileName: _jsxFileName,
            lineNumber: 99
          }
        },
        _react2.default.createElement(_reactNative.Image, { source: _Themes.Images.logo, style: [_LoginScreenStyles2.default.topLogo, this.state.topLogo], __source: {
            fileName: _jsxFileName,
            lineNumber: 100
          }
        }),
        _react2.default.createElement(
          _reactNative.View,
          { style: _LoginScreenStyles2.default.form, __source: {
              fileName: _jsxFileName,
              lineNumber: 101
            }
          },
          _react2.default.createElement(
            _reactNative.View,
            { style: _LoginScreenStyles2.default.row, __source: {
                fileName: _jsxFileName,
                lineNumber: 102
              }
            },
            _react2.default.createElement(
              _reactNative.Text,
              { style: _LoginScreenStyles2.default.rowLabel, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 103
                }
              },
              'Username'
            ),
            _react2.default.createElement(_reactNative.TextInput, {
              ref: 'username',
              style: textInputStyle,
              value: username,
              editable: editable,
              keyboardType: 'default',
              returnKeyType: 'next',
              autoCapitalize: 'none',
              autoCorrect: false,
              onChangeText: this.handleChangeUsername,
              underlineColorAndroid: 'transparent',
              onSubmitEditing: function onSubmitEditing() {
                return _this2.refs.password.focus();
              },
              placeholder: 'Username', __source: {
                fileName: _jsxFileName,
                lineNumber: 104
              }
            })
          ),
          _react2.default.createElement(
            _reactNative.View,
            { style: _LoginScreenStyles2.default.row, __source: {
                fileName: _jsxFileName,
                lineNumber: 119
              }
            },
            _react2.default.createElement(
              _reactNative.Text,
              { style: _LoginScreenStyles2.default.rowLabel, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 120
                }
              },
              'Password'
            ),
            _react2.default.createElement(_reactNative.TextInput, {
              ref: 'password',
              style: textInputStyle,
              value: password,
              editable: editable,
              keyboardType: 'default',
              returnKeyType: 'go',
              autoCapitalize: 'none',
              autoCorrect: false,
              secureTextEntry: true,
              onChangeText: this.handleChangePassword,
              underlineColorAndroid: 'transparent',
              onSubmitEditing: this.handlePressLogin,
              placeholder: 'Password', __source: {
                fileName: _jsxFileName,
                lineNumber: 121
              }
            })
          ),
          _react2.default.createElement(
            _reactNative.View,
            { style: [_LoginScreenStyles2.default.loginRow], __source: {
                fileName: _jsxFileName,
                lineNumber: 137
              }
            },
            _react2.default.createElement(
              _reactNative.TouchableOpacity,
              { style: _LoginScreenStyles2.default.loginButtonWrapper, onPress: this.handlePressLogin, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 138
                }
              },
              _react2.default.createElement(
                _reactNative.View,
                { style: _LoginScreenStyles2.default.loginButton, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 139
                  }
                },
                _react2.default.createElement(
                  _reactNative.Text,
                  { style: _LoginScreenStyles2.default.loginText, __source: {
                      fileName: _jsxFileName,
                      lineNumber: 140
                    }
                  },
                  'Sign In'
                )
              )
            ),
            _react2.default.createElement(
              _reactNative.TouchableOpacity,
              { style: _LoginScreenStyles2.default.loginButtonWrapper, onPress: function onPress() {
                  return _this2.props.navigation.goBack();
                }, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 143
                }
              },
              _react2.default.createElement(
                _reactNative.View,
                { style: _LoginScreenStyles2.default.loginButton, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 144
                  }
                },
                _react2.default.createElement(
                  _reactNative.Text,
                  { style: _LoginScreenStyles2.default.loginText, __source: {
                      fileName: _jsxFileName,
                      lineNumber: 145
                    }
                  },
                  'Cancel'
                )
              )
            )
          )
        )
      );
    }
  }]);
  return LoginScreen;
}(_react2.default.Component);

LoginScreen.propTypes = {
  dispatch: _react.PropTypes.func,
  fetching: _react.PropTypes.bool,
  attemptLogin: _react.PropTypes.func
};


var mapStateToProps = function mapStateToProps(state) {
  return {
    fetching: state.login.fetching
  };
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
  return {
    attemptLogin: function attemptLogin(username, password) {
      return dispatch(_LoginRedux2.default.loginRequest(username, password));
    }
  };
};

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(LoginScreen);
}, 2652, null, "UI/App/Containers/LoginScreen.js");
__d(/* UI/App/Containers/Styles/LoginScreenStyles.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _reactNative = require(334           ); // 334 = react-native

var _Themes = require(1956          ); // 1956 = ../../Themes

exports.default = _reactNative.StyleSheet.create({
  container: {
    paddingTop: 70,
    backgroundColor: _Themes.Colors.background
  },
  form: {
    backgroundColor: _Themes.Colors.snow,
    margin: _Themes.Metrics.baseMargin,
    borderRadius: 4
  },
  row: {
    paddingVertical: _Themes.Metrics.doubleBaseMargin,
    paddingHorizontal: _Themes.Metrics.doubleBaseMargin
  },
  rowLabel: {
    color: _Themes.Colors.charcoal
  },
  textInput: {
    height: 40,
    color: _Themes.Colors.coal
  },
  textInputReadonly: {
    height: 40,
    color: _Themes.Colors.steel
  },
  loginRow: {
    paddingBottom: _Themes.Metrics.doubleBaseMargin,
    paddingHorizontal: _Themes.Metrics.doubleBaseMargin,
    flexDirection: 'row'
  },
  loginButtonWrapper: {
    flex: 1
  },
  loginButton: {
    flex: 1,
    borderWidth: 1,
    borderColor: _Themes.Colors.charcoal,
    backgroundColor: _Themes.Colors.panther,
    padding: 6
  },
  loginText: {
    textAlign: 'center',
    color: _Themes.Colors.silver
  },
  topLogo: {
    alignSelf: 'center',
    resizeMode: 'contain'
  }
});
}, 2653, null, "UI/App/Containers/Styles/LoginScreenStyles.js");
__d(/* UI/App/Redux/LoginRedux.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isLoggedIn = exports.reducer = exports.logout = exports.failure = exports.success = exports.request = exports.INITIAL_STATE = exports.LoginTypes = undefined;

var _createReducer;

var _reduxsauce = require(2655        ); // 2655 = reduxsauce

var _seamlessImmutable = require(14                  ); // 14 = seamless-immutable

var _seamlessImmutable2 = babelHelpers.interopRequireDefault(_seamlessImmutable);

var _createActions = (0, _reduxsauce.createActions)({
  loginRequest: ['username', 'password'],
  loginSuccess: ['username'],
  loginFailure: ['error'],
  logout: null
}),
    Types = _createActions.Types,
    Creators = _createActions.Creators;

var LoginTypes = exports.LoginTypes = Types;
exports.default = Creators;
var INITIAL_STATE = exports.INITIAL_STATE = (0, _seamlessImmutable2.default)({
  username: null,
  error: null,
  fetching: false
});

var request = exports.request = function request(state) {
  return state.merge({ fetching: true });
};

var success = exports.success = function success(state, _ref) {
  var username = _ref.username;
  return state.merge({ fetching: false, error: null, username: username });
};

var failure = exports.failure = function failure(state, _ref2) {
  var error = _ref2.error;
  return state.merge({ fetching: false, error: error });
};

var logout = exports.logout = function logout(state) {
  return INITIAL_STATE;
};

var reducer = exports.reducer = (0, _reduxsauce.createReducer)(INITIAL_STATE, (_createReducer = {}, babelHelpers.defineProperty(_createReducer, Types.LOGIN_REQUEST, request), babelHelpers.defineProperty(_createReducer, Types.LOGIN_SUCCESS, success), babelHelpers.defineProperty(_createReducer, Types.LOGIN_FAILURE, failure), babelHelpers.defineProperty(_createReducer, Types.LOGOUT, logout), _createReducer));

var isLoggedIn = exports.isLoggedIn = function isLoggedIn(loginState) {
  return loginState.username !== null;
};
}, 2654, null, "UI/App/Redux/LoginRedux.js");
__d(/* reduxsauce/dist/reduxsauce.js */function(global, require, module, exports) {'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault(ex) {
  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;
}

var R = require(2656   ); // 2656 = ramda
var R__default = _interopDefault(R);
var RS = _interopDefault(require(2657        )); // 2657 = ramdasauce

var cr = function cr(initialState, handlers) {
  if (R__default.isNil(initialState)) {
    throw new Error('initial state is required');
  }

  if (R__default.isNil(handlers) || !R__default.is(Object, handlers)) {
    throw new Error('handlers must be an object');
  }

  return function () {
    var state = arguments.length <= 0 || arguments[0] === undefined ? initialState : arguments[0];
    var action = arguments[1];

    if (R__default.isNil(action)) return state;
    if (!R__default.has('type', action)) return state;

    var handler = handlers[action.type];

    if (R__default.isNil(handler)) return state;

    return handler(state, action);
  };
};

var defaultOptions = {
  prefix: ''
};

var createTypes$1 = function createTypes$1(types, options) {
  if (RS.isNilOrEmpty(types)) throw new Error('valid types are required');

  var _R$merge = R__default.merge(defaultOptions, options);

  var prefix = _R$merge.prefix;

  return R__default.pipe(R__default.trim, R__default.split(/\s/), R__default.map(R__default.pipe(R__default.trim)), R__default.without([null, '']), R__default.map(function (x) {
    return [x, prefix + x];
  }), R__default.fromPairs)(types);
};

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

var defaultOptions$1 = {
  prefix: ''
};

var RX_CAPS = /(?!^)([A-Z])/g;

var camelToScreamingSnake = R.pipe(R.replace(RX_CAPS, '_$1'), R.toUpper);

var convertToTypes = function convertToTypes(config, options) {
  var typesCreator = R.curry(createTypes$1)(R.__, options);

  return R.pipe(R.keys, R.map(camelToScreamingSnake), R.join(' '), typesCreator)(config);
};

var createActionCreator = function createActionCreator(name, extraPropNames, options) {
  var _merge = R.merge(defaultOptions$1, options);

  var prefix = _merge.prefix;

  var type = prefix + camelToScreamingSnake(name);

  var noKeys = R.isNil(extraPropNames) || R.isEmpty(extraPropNames);

  if (noKeys) return function () {
    return { type: type };
  };

  return function () {
    for (var _len = arguments.length, values = Array(_len), _key = 0; _key < _len; _key++) {
      values[_key] = arguments[_key];
    }

    var extraProps = R.zipObj(extraPropNames, values);
    return _extends({ type: type }, extraProps);
  };
};

var convertToCreators = function convertToCreators(config, options) {
  return R.mapObjIndexed(function (num, key, value) {
    if (typeof value[key] === 'function') {
      return value[key];
    } else {
      return createActionCreator(key, value[key], options);
    }
  })(config);
};

var ca = function ca(config, options) {
  if (R.isNil(config)) {
    throw new Error('an object is required to setup types and creators');
  }
  if (R.isEmpty(config)) {
    throw new Error('empty objects are not supported');
  }

  return {
    Types: convertToTypes(config, options),
    Creators: convertToCreators(config, options)
  };
};

var createReducer = cr;
var createTypes = createTypes$1;
var createActions = ca;

exports.createReducer = createReducer;
exports.createTypes = createTypes;
exports.createActions = createActions;
}, 2655, null, "reduxsauce/dist/reduxsauce.js");
__d(/* ramda/dist/ramda.js */function(global, require, module, exports) {

;(function () {

    'use strict';

    var __ = { '@@functional/placeholder': true };

    var _arity = function _arity(n, fn) {
        switch (n) {
            case 0:
                return function () {
                    return fn.apply(this, arguments);
                };
            case 1:
                return function (a0) {
                    return fn.apply(this, arguments);
                };
            case 2:
                return function (a0, a1) {
                    return fn.apply(this, arguments);
                };
            case 3:
                return function (a0, a1, a2) {
                    return fn.apply(this, arguments);
                };
            case 4:
                return function (a0, a1, a2, a3) {
                    return fn.apply(this, arguments);
                };
            case 5:
                return function (a0, a1, a2, a3, a4) {
                    return fn.apply(this, arguments);
                };
            case 6:
                return function (a0, a1, a2, a3, a4, a5) {
                    return fn.apply(this, arguments);
                };
            case 7:
                return function (a0, a1, a2, a3, a4, a5, a6) {
                    return fn.apply(this, arguments);
                };
            case 8:
                return function (a0, a1, a2, a3, a4, a5, a6, a7) {
                    return fn.apply(this, arguments);
                };
            case 9:
                return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {
                    return fn.apply(this, arguments);
                };
            case 10:
                return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {
                    return fn.apply(this, arguments);
                };
            default:
                throw new Error('First argument to _arity must be a non-negative integer no greater than ten');
        }
    };

    var _arrayFromIterator = function _arrayFromIterator(iter) {
        var list = [];
        var next;
        while (!(next = iter.next()).done) {
            list.push(next.value);
        }
        return list;
    };

    var _arrayOf = function _arrayOf() {
        return Array.prototype.slice.call(arguments);
    };

    var _cloneRegExp = function _cloneRegExp(pattern) {
        return new RegExp(pattern.source, (pattern.global ? 'g' : '') + (pattern.ignoreCase ? 'i' : '') + (pattern.multiline ? 'm' : '') + (pattern.sticky ? 'y' : '') + (pattern.unicode ? 'u' : ''));
    };

    var _complement = function _complement(f) {
        return function () {
            return !f.apply(this, arguments);
        };
    };

    var _concat = function _concat(set1, set2) {
        set1 = set1 || [];
        set2 = set2 || [];
        var idx;
        var len1 = set1.length;
        var len2 = set2.length;
        var result = [];
        idx = 0;
        while (idx < len1) {
            result[result.length] = set1[idx];
            idx += 1;
        }
        idx = 0;
        while (idx < len2) {
            result[result.length] = set2[idx];
            idx += 1;
        }
        return result;
    };

    var _containsWith = function _containsWith(pred, x, list) {
        var idx = 0;
        var len = list.length;
        while (idx < len) {
            if (pred(x, list[idx])) {
                return true;
            }
            idx += 1;
        }
        return false;
    };

    var _filter = function _filter(fn, list) {
        var idx = 0;
        var len = list.length;
        var result = [];
        while (idx < len) {
            if (fn(list[idx])) {
                result[result.length] = list[idx];
            }
            idx += 1;
        }
        return result;
    };

    var _forceReduced = function _forceReduced(x) {
        return {
            '@@transducer/value': x,
            '@@transducer/reduced': true
        };
    };

    var _functionName = function _functionName(f) {
        var match = String(f).match(/^function (\w*)/);
        return match == null ? '' : match[1];
    };

    var _has = function _has(prop, obj) {
        return Object.prototype.hasOwnProperty.call(obj, prop);
    };

    var _identity = function _identity(x) {
        return x;
    };

    var _isArguments = function () {
        var toString = Object.prototype.toString;
        return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {
            return toString.call(x) === '[object Arguments]';
        } : function _isArguments(x) {
            return _has('callee', x);
        };
    }();

    var _isArray = Array.isArray || function _isArray(val) {
        return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';
    };

    var _isFunction = function _isFunction(x) {
        return Object.prototype.toString.call(x) === '[object Function]';
    };

    var _isInteger = Number.isInteger || function _isInteger(n) {
        return n << 0 === n;
    };

    var _isNumber = function _isNumber(x) {
        return Object.prototype.toString.call(x) === '[object Number]';
    };

    var _isObject = function _isObject(x) {
        return Object.prototype.toString.call(x) === '[object Object]';
    };

    var _isPlaceholder = function _isPlaceholder(a) {
        return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;
    };

    var _isRegExp = function _isRegExp(x) {
        return Object.prototype.toString.call(x) === '[object RegExp]';
    };

    var _isString = function _isString(x) {
        return Object.prototype.toString.call(x) === '[object String]';
    };

    var _isTransformer = function _isTransformer(obj) {
        return typeof obj['@@transducer/step'] === 'function';
    };

    var _map = function _map(fn, functor) {
        var idx = 0;
        var len = functor.length;
        var result = Array(len);
        while (idx < len) {
            result[idx] = fn(functor[idx]);
            idx += 1;
        }
        return result;
    };

    var _objectAssign = function _objectAssign(target) {
        if (target == null) {
            throw new TypeError('Cannot convert undefined or null to object');
        }
        var output = Object(target);
        var idx = 1;
        var length = arguments.length;
        while (idx < length) {
            var source = arguments[idx];
            if (source != null) {
                for (var nextKey in source) {
                    if (_has(nextKey, source)) {
                        output[nextKey] = source[nextKey];
                    }
                }
            }
            idx += 1;
        }
        return output;
    };

    var _of = function _of(x) {
        return [x];
    };

    var _pipe = function _pipe(f, g) {
        return function () {
            return g.call(this, f.apply(this, arguments));
        };
    };

    var _pipeP = function _pipeP(f, g) {
        return function () {
            var ctx = this;
            return f.apply(ctx, arguments).then(function (x) {
                return g.call(ctx, x);
            });
        };
    };

    var _quote = function _quote(s) {
        var escaped = s.replace(/\\/g, '\\\\').replace(/[\b]/g, '\\b').replace(/\f/g, '\\f').replace(/\n/g, '\\n').replace(/\r/g, '\\r').replace(/\t/g, '\\t').replace(/\v/g, '\\v').replace(/\0/g, '\\0');
        return '"' + escaped.replace(/"/g, '\\"') + '"';
    };

    var _reduced = function _reduced(x) {
        return x && x['@@transducer/reduced'] ? x : {
            '@@transducer/value': x,
            '@@transducer/reduced': true
        };
    };

    var _slice = function _slice(args, from, to) {
        switch (arguments.length) {
            case 1:
                return _slice(args, 0, args.length);
            case 2:
                return _slice(args, from, args.length);
            default:
                var list = [];
                var idx = 0;
                var len = Math.max(0, Math.min(args.length, to) - from);
                while (idx < len) {
                    list[idx] = args[from + idx];
                    idx += 1;
                }
                return list;
        }
    };

    var _toISOString = function () {
        var pad = function pad(n) {
            return (n < 10 ? '0' : '') + n;
        };
        return typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {
            return d.toISOString();
        } : function _toISOString(d) {
            return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';
        };
    }();

    var _xfBase = {
        init: function init() {
            return this.xf['@@transducer/init']();
        },
        result: function result(_result) {
            return this.xf['@@transducer/result'](_result);
        }
    };

    var _xwrap = function () {
        function XWrap(fn) {
            this.f = fn;
        }
        XWrap.prototype['@@transducer/init'] = function () {
            throw new Error('init not implemented on XWrap');
        };
        XWrap.prototype['@@transducer/result'] = function (acc) {
            return acc;
        };
        XWrap.prototype['@@transducer/step'] = function (acc, x) {
            return this.f(acc, x);
        };
        return function _xwrap(fn) {
            return new XWrap(fn);
        };
    }();

    var _aperture = function _aperture(n, list) {
        var idx = 0;
        var limit = list.length - (n - 1);
        var acc = new Array(limit >= 0 ? limit : 0);
        while (idx < limit) {
            acc[idx] = _slice(list, idx, idx + n);
            idx += 1;
        }
        return acc;
    };

    var _assign = typeof Object.assign === 'function' ? Object.assign : _objectAssign;

    var _checkForMethod = function _checkForMethod(methodname, fn) {
        return function () {
            var length = arguments.length;
            if (length === 0) {
                return fn();
            }
            var obj = arguments[length - 1];
            return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, _slice(arguments, 0, length - 1));
        };
    };

    var _curry1 = function _curry1(fn) {
        return function f1(a) {
            if (arguments.length === 0 || _isPlaceholder(a)) {
                return f1;
            } else {
                return fn.apply(this, arguments);
            }
        };
    };

    var _curry2 = function _curry2(fn) {
        return function f2(a, b) {
            switch (arguments.length) {
                case 0:
                    return f2;
                case 1:
                    return _isPlaceholder(a) ? f2 : _curry1(function (_b) {
                        return fn(a, _b);
                    });
                default:
                    return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {
                        return fn(_a, b);
                    }) : _isPlaceholder(b) ? _curry1(function (_b) {
                        return fn(a, _b);
                    }) : fn(a, b);
            }
        };
    };

    var _curry3 = function _curry3(fn) {
        return function f3(a, b, c) {
            switch (arguments.length) {
                case 0:
                    return f3;
                case 1:
                    return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {
                        return fn(a, _b, _c);
                    });
                case 2:
                    return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {
                        return fn(_a, b, _c);
                    }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {
                        return fn(a, _b, _c);
                    }) : _curry1(function (_c) {
                        return fn(a, b, _c);
                    });
                default:
                    return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {
                        return fn(_a, _b, c);
                    }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {
                        return fn(_a, b, _c);
                    }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {
                        return fn(a, _b, _c);
                    }) : _isPlaceholder(a) ? _curry1(function (_a) {
                        return fn(_a, b, c);
                    }) : _isPlaceholder(b) ? _curry1(function (_b) {
                        return fn(a, _b, c);
                    }) : _isPlaceholder(c) ? _curry1(function (_c) {
                        return fn(a, b, _c);
                    }) : fn(a, b, c);
            }
        };
    };

    var _curryN = function _curryN(length, received, fn) {
        return function () {
            var combined = [];
            var argsIdx = 0;
            var left = length;
            var combinedIdx = 0;
            while (combinedIdx < received.length || argsIdx < arguments.length) {
                var result;
                if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {
                    result = received[combinedIdx];
                } else {
                    result = arguments[argsIdx];
                    argsIdx += 1;
                }
                combined[combinedIdx] = result;
                if (!_isPlaceholder(result)) {
                    left -= 1;
                }
                combinedIdx += 1;
            }
            return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));
        };
    };

    var _dispatchable = function _dispatchable(methodname, xf, fn) {
        return function () {
            var length = arguments.length;
            if (length === 0) {
                return fn();
            }
            var obj = arguments[length - 1];
            if (!_isArray(obj)) {
                var args = _slice(arguments, 0, length - 1);
                if (typeof obj[methodname] === 'function') {
                    return obj[methodname].apply(obj, args);
                }
                if (_isTransformer(obj)) {
                    var transducer = xf.apply(null, args);
                    return transducer(obj);
                }
            }
            return fn.apply(this, arguments);
        };
    };

    var _dropLastWhile = function dropLastWhile(pred, list) {
        var idx = list.length - 1;
        while (idx >= 0 && pred(list[idx])) {
            idx -= 1;
        }
        return _slice(list, 0, idx + 1);
    };

    var _xall = function () {
        function XAll(f, xf) {
            this.xf = xf;
            this.f = f;
            this.all = true;
        }
        XAll.prototype['@@transducer/init'] = _xfBase.init;
        XAll.prototype['@@transducer/result'] = function (result) {
            if (this.all) {
                result = this.xf['@@transducer/step'](result, true);
            }
            return this.xf['@@transducer/result'](result);
        };
        XAll.prototype['@@transducer/step'] = function (result, input) {
            if (!this.f(input)) {
                this.all = false;
                result = _reduced(this.xf['@@transducer/step'](result, false));
            }
            return result;
        };
        return _curry2(function _xall(f, xf) {
            return new XAll(f, xf);
        });
    }();

    var _xany = function () {
        function XAny(f, xf) {
            this.xf = xf;
            this.f = f;
            this.any = false;
        }
        XAny.prototype['@@transducer/init'] = _xfBase.init;
        XAny.prototype['@@transducer/result'] = function (result) {
            if (!this.any) {
                result = this.xf['@@transducer/step'](result, false);
            }
            return this.xf['@@transducer/result'](result);
        };
        XAny.prototype['@@transducer/step'] = function (result, input) {
            if (this.f(input)) {
                this.any = true;
                result = _reduced(this.xf['@@transducer/step'](result, true));
            }
            return result;
        };
        return _curry2(function _xany(f, xf) {
            return new XAny(f, xf);
        });
    }();

    var _xaperture = function () {
        function XAperture(n, xf) {
            this.xf = xf;
            this.pos = 0;
            this.full = false;
            this.acc = new Array(n);
        }
        XAperture.prototype['@@transducer/init'] = _xfBase.init;
        XAperture.prototype['@@transducer/result'] = function (result) {
            this.acc = null;
            return this.xf['@@transducer/result'](result);
        };
        XAperture.prototype['@@transducer/step'] = function (result, input) {
            this.store(input);
            return this.full ? this.xf['@@transducer/step'](result, this.getCopy()) : result;
        };
        XAperture.prototype.store = function (input) {
            this.acc[this.pos] = input;
            this.pos += 1;
            if (this.pos === this.acc.length) {
                this.pos = 0;
                this.full = true;
            }
        };
        XAperture.prototype.getCopy = function () {
            return _concat(_slice(this.acc, this.pos), _slice(this.acc, 0, this.pos));
        };
        return _curry2(function _xaperture(n, xf) {
            return new XAperture(n, xf);
        });
    }();

    var _xdrop = function () {
        function XDrop(n, xf) {
            this.xf = xf;
            this.n = n;
        }
        XDrop.prototype['@@transducer/init'] = _xfBase.init;
        XDrop.prototype['@@transducer/result'] = _xfBase.result;
        XDrop.prototype['@@transducer/step'] = function (result, input) {
            if (this.n > 0) {
                this.n -= 1;
                return result;
            }
            return this.xf['@@transducer/step'](result, input);
        };
        return _curry2(function _xdrop(n, xf) {
            return new XDrop(n, xf);
        });
    }();

    var _xdropLast = function () {
        function XDropLast(n, xf) {
            this.xf = xf;
            this.pos = 0;
            this.full = false;
            this.acc = new Array(n);
        }
        XDropLast.prototype['@@transducer/init'] = _xfBase.init;
        XDropLast.prototype['@@transducer/result'] = function (result) {
            this.acc = null;
            return this.xf['@@transducer/result'](result);
        };
        XDropLast.prototype['@@transducer/step'] = function (result, input) {
            if (this.full) {
                result = this.xf['@@transducer/step'](result, this.acc[this.pos]);
            }
            this.store(input);
            return result;
        };
        XDropLast.prototype.store = function (input) {
            this.acc[this.pos] = input;
            this.pos += 1;
            if (this.pos === this.acc.length) {
                this.pos = 0;
                this.full = true;
            }
        };
        return _curry2(function _xdropLast(n, xf) {
            return new XDropLast(n, xf);
        });
    }();

    var _xdropRepeatsWith = function () {
        function XDropRepeatsWith(pred, xf) {
            this.xf = xf;
            this.pred = pred;
            this.lastValue = undefined;
            this.seenFirstValue = false;
        }
        XDropRepeatsWith.prototype['@@transducer/init'] = function () {
            return this.xf['@@transducer/init']();
        };
        XDropRepeatsWith.prototype['@@transducer/result'] = function (result) {
            return this.xf['@@transducer/result'](result);
        };
        XDropRepeatsWith.prototype['@@transducer/step'] = function (result, input) {
            var sameAsLast = false;
            if (!this.seenFirstValue) {
                this.seenFirstValue = true;
            } else if (this.pred(this.lastValue, input)) {
                sameAsLast = true;
            }
            this.lastValue = input;
            return sameAsLast ? result : this.xf['@@transducer/step'](result, input);
        };
        return _curry2(function _xdropRepeatsWith(pred, xf) {
            return new XDropRepeatsWith(pred, xf);
        });
    }();

    var _xdropWhile = function () {
        function XDropWhile(f, xf) {
            this.xf = xf;
            this.f = f;
        }
        XDropWhile.prototype['@@transducer/init'] = _xfBase.init;
        XDropWhile.prototype['@@transducer/result'] = _xfBase.result;
        XDropWhile.prototype['@@transducer/step'] = function (result, input) {
            if (this.f) {
                if (this.f(input)) {
                    return result;
                }
                this.f = null;
            }
            return this.xf['@@transducer/step'](result, input);
        };
        return _curry2(function _xdropWhile(f, xf) {
            return new XDropWhile(f, xf);
        });
    }();

    var _xfilter = function () {
        function XFilter(f, xf) {
            this.xf = xf;
            this.f = f;
        }
        XFilter.prototype['@@transducer/init'] = _xfBase.init;
        XFilter.prototype['@@transducer/result'] = _xfBase.result;
        XFilter.prototype['@@transducer/step'] = function (result, input) {
            return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;
        };
        return _curry2(function _xfilter(f, xf) {
            return new XFilter(f, xf);
        });
    }();

    var _xfind = function () {
        function XFind(f, xf) {
            this.xf = xf;
            this.f = f;
            this.found = false;
        }
        XFind.prototype['@@transducer/init'] = _xfBase.init;
        XFind.prototype['@@transducer/result'] = function (result) {
            if (!this.found) {
                result = this.xf['@@transducer/step'](result, void 0);
            }
            return this.xf['@@transducer/result'](result);
        };
        XFind.prototype['@@transducer/step'] = function (result, input) {
            if (this.f(input)) {
                this.found = true;
                result = _reduced(this.xf['@@transducer/step'](result, input));
            }
            return result;
        };
        return _curry2(function _xfind(f, xf) {
            return new XFind(f, xf);
        });
    }();

    var _xfindIndex = function () {
        function XFindIndex(f, xf) {
            this.xf = xf;
            this.f = f;
            this.idx = -1;
            this.found = false;
        }
        XFindIndex.prototype['@@transducer/init'] = _xfBase.init;
        XFindIndex.prototype['@@transducer/result'] = function (result) {
            if (!this.found) {
                result = this.xf['@@transducer/step'](result, -1);
            }
            return this.xf['@@transducer/result'](result);
        };
        XFindIndex.prototype['@@transducer/step'] = function (result, input) {
            this.idx += 1;
            if (this.f(input)) {
                this.found = true;
                result = _reduced(this.xf['@@transducer/step'](result, this.idx));
            }
            return result;
        };
        return _curry2(function _xfindIndex(f, xf) {
            return new XFindIndex(f, xf);
        });
    }();

    var _xfindLast = function () {
        function XFindLast(f, xf) {
            this.xf = xf;
            this.f = f;
        }
        XFindLast.prototype['@@transducer/init'] = _xfBase.init;
        XFindLast.prototype['@@transducer/result'] = function (result) {
            return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.last));
        };
        XFindLast.prototype['@@transducer/step'] = function (result, input) {
            if (this.f(input)) {
                this.last = input;
            }
            return result;
        };
        return _curry2(function _xfindLast(f, xf) {
            return new XFindLast(f, xf);
        });
    }();

    var _xfindLastIndex = function () {
        function XFindLastIndex(f, xf) {
            this.xf = xf;
            this.f = f;
            this.idx = -1;
            this.lastIdx = -1;
        }
        XFindLastIndex.prototype['@@transducer/init'] = _xfBase.init;
        XFindLastIndex.prototype['@@transducer/result'] = function (result) {
            return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.lastIdx));
        };
        XFindLastIndex.prototype['@@transducer/step'] = function (result, input) {
            this.idx += 1;
            if (this.f(input)) {
                this.lastIdx = this.idx;
            }
            return result;
        };
        return _curry2(function _xfindLastIndex(f, xf) {
            return new XFindLastIndex(f, xf);
        });
    }();

    var _xmap = function () {
        function XMap(f, xf) {
            this.xf = xf;
            this.f = f;
        }
        XMap.prototype['@@transducer/init'] = _xfBase.init;
        XMap.prototype['@@transducer/result'] = _xfBase.result;
        XMap.prototype['@@transducer/step'] = function (result, input) {
            return this.xf['@@transducer/step'](result, this.f(input));
        };
        return _curry2(function _xmap(f, xf) {
            return new XMap(f, xf);
        });
    }();

    var _xreduceBy = function () {
        function XReduceBy(valueFn, valueAcc, keyFn, xf) {
            this.valueFn = valueFn;
            this.valueAcc = valueAcc;
            this.keyFn = keyFn;
            this.xf = xf;
            this.inputs = {};
        }
        XReduceBy.prototype['@@transducer/init'] = _xfBase.init;
        XReduceBy.prototype['@@transducer/result'] = function (result) {
            var key;
            for (key in this.inputs) {
                if (_has(key, this.inputs)) {
                    result = this.xf['@@transducer/step'](result, this.inputs[key]);
                    if (result['@@transducer/reduced']) {
                        result = result['@@transducer/value'];
                        break;
                    }
                }
            }
            this.inputs = null;
            return this.xf['@@transducer/result'](result);
        };
        XReduceBy.prototype['@@transducer/step'] = function (result, input) {
            var key = this.keyFn(input);
            this.inputs[key] = this.inputs[key] || [key, this.valueAcc];
            this.inputs[key][1] = this.valueFn(this.inputs[key][1], input);
            return result;
        };
        return _curryN(4, [], function _xreduceBy(valueFn, valueAcc, keyFn, xf) {
            return new XReduceBy(valueFn, valueAcc, keyFn, xf);
        });
    }();

    var _xtake = function () {
        function XTake(n, xf) {
            this.xf = xf;
            this.n = n;
            this.i = 0;
        }
        XTake.prototype['@@transducer/init'] = _xfBase.init;
        XTake.prototype['@@transducer/result'] = _xfBase.result;
        XTake.prototype['@@transducer/step'] = function (result, input) {
            this.i += 1;
            var ret = this.n === 0 ? result : this.xf['@@transducer/step'](result, input);
            return this.i >= this.n ? _reduced(ret) : ret;
        };
        return _curry2(function _xtake(n, xf) {
            return new XTake(n, xf);
        });
    }();

    var _xtakeWhile = function () {
        function XTakeWhile(f, xf) {
            this.xf = xf;
            this.f = f;
        }
        XTakeWhile.prototype['@@transducer/init'] = _xfBase.init;
        XTakeWhile.prototype['@@transducer/result'] = _xfBase.result;
        XTakeWhile.prototype['@@transducer/step'] = function (result, input) {
            return this.f(input) ? this.xf['@@transducer/step'](result, input) : _reduced(result);
        };
        return _curry2(function _xtakeWhile(f, xf) {
            return new XTakeWhile(f, xf);
        });
    }();

    var add = _curry2(function add(a, b) {
        return Number(a) + Number(b);
    });

    var adjust = _curry3(function adjust(fn, idx, list) {
        if (idx >= list.length || idx < -list.length) {
            return list;
        }
        var start = idx < 0 ? list.length : 0;
        var _idx = start + idx;
        var _list = _concat(list);
        _list[_idx] = fn(list[_idx]);
        return _list;
    });

    var all = _curry2(_dispatchable('all', _xall, function all(fn, list) {
        var idx = 0;
        while (idx < list.length) {
            if (!fn(list[idx])) {
                return false;
            }
            idx += 1;
        }
        return true;
    }));

    var always = _curry1(function always(val) {
        return function () {
            return val;
        };
    });

    var and = _curry2(function and(a, b) {
        return a && b;
    });

    var any = _curry2(_dispatchable('any', _xany, function any(fn, list) {
        var idx = 0;
        while (idx < list.length) {
            if (fn(list[idx])) {
                return true;
            }
            idx += 1;
        }
        return false;
    }));

    var aperture = _curry2(_dispatchable('aperture', _xaperture, _aperture));

    var append = _curry2(function append(el, list) {
        return _concat(list, [el]);
    });

    var apply = _curry2(function apply(fn, args) {
        return fn.apply(this, args);
    });

    var assoc = _curry3(function assoc(prop, val, obj) {
        var result = {};
        for (var p in obj) {
            result[p] = obj[p];
        }
        result[prop] = val;
        return result;
    });

    var assocPath = _curry3(function assocPath(path, val, obj) {
        switch (path.length) {
            case 0:
                return val;
            case 1:
                return assoc(path[0], val, obj);
            default:
                return assoc(path[0], assocPath(_slice(path, 1), val, Object(obj[path[0]])), obj);
        }
    });

    var bind = _curry2(function bind(fn, thisObj) {
        return _arity(fn.length, function () {
            return fn.apply(thisObj, arguments);
        });
    });

    var clamp = _curry3(function clamp(min, max, value) {
        if (min > max) {
            throw new Error('min must not be greater than max in clamp(min, max, value)');
        }
        return value < min ? min : value > max ? max : value;
    });

    var comparator = _curry1(function comparator(pred) {
        return function (a, b) {
            return pred(a, b) ? -1 : pred(b, a) ? 1 : 0;
        };
    });

    var curryN = _curry2(function curryN(length, fn) {
        if (length === 1) {
            return _curry1(fn);
        }
        return _arity(length, _curryN(length, [], fn));
    });

    var dec = add(-1);

    var defaultTo = _curry2(function defaultTo(d, v) {
        return v == null || v !== v ? d : v;
    });

    var differenceWith = _curry3(function differenceWith(pred, first, second) {
        var out = [];
        var idx = 0;
        var firstLen = first.length;
        while (idx < firstLen) {
            if (!_containsWith(pred, first[idx], second) && !_containsWith(pred, first[idx], out)) {
                out.push(first[idx]);
            }
            idx += 1;
        }
        return out;
    });

    var dissoc = _curry2(function dissoc(prop, obj) {
        var result = {};
        for (var p in obj) {
            if (p !== prop) {
                result[p] = obj[p];
            }
        }
        return result;
    });

    var dissocPath = _curry2(function dissocPath(path, obj) {
        switch (path.length) {
            case 0:
                return obj;
            case 1:
                return dissoc(path[0], obj);
            default:
                var head = path[0];
                var tail = _slice(path, 1);
                return obj[head] == null ? obj : assoc(head, dissocPath(tail, obj[head]), obj);
        }
    });

    var divide = _curry2(function divide(a, b) {
        return a / b;
    });

    var dropWhile = _curry2(_dispatchable('dropWhile', _xdropWhile, function dropWhile(pred, list) {
        var idx = 0;
        var len = list.length;
        while (idx < len && pred(list[idx])) {
            idx += 1;
        }
        return _slice(list, idx);
    }));

    var empty = _curry1(function empty(x) {
        return x != null && typeof x.empty === 'function' ? x.empty() : x != null && x.constructor != null && typeof x.constructor.empty === 'function' ? x.constructor.empty() : _isArray(x) ? [] : _isString(x) ? '' : _isObject(x) ? {} : _isArguments(x) ? function () {
            return arguments;
        }() : void 0;
    });

    var evolve = _curry2(function evolve(transformations, object) {
        var result = {};
        var transformation, key, type;
        for (key in object) {
            transformation = transformations[key];
            type = typeof transformation;
            result[key] = type === 'function' ? transformation(object[key]) : type === 'object' ? evolve(transformations[key], object[key]) : object[key];
        }
        return result;
    });

    var find = _curry2(_dispatchable('find', _xfind, function find(fn, list) {
        var idx = 0;
        var len = list.length;
        while (idx < len) {
            if (fn(list[idx])) {
                return list[idx];
            }
            idx += 1;
        }
    }));

    var findIndex = _curry2(_dispatchable('findIndex', _xfindIndex, function findIndex(fn, list) {
        var idx = 0;
        var len = list.length;
        while (idx < len) {
            if (fn(list[idx])) {
                return idx;
            }
            idx += 1;
        }
        return -1;
    }));

    var findLast = _curry2(_dispatchable('findLast', _xfindLast, function findLast(fn, list) {
        var idx = list.length - 1;
        while (idx >= 0) {
            if (fn(list[idx])) {
                return list[idx];
            }
            idx -= 1;
        }
    }));

    var findLastIndex = _curry2(_dispatchable('findLastIndex', _xfindLastIndex, function findLastIndex(fn, list) {
        var idx = list.length - 1;
        while (idx >= 0) {
            if (fn(list[idx])) {
                return idx;
            }
            idx -= 1;
        }
        return -1;
    }));

    var forEach = _curry2(_checkForMethod('forEach', function forEach(fn, list) {
        var len = list.length;
        var idx = 0;
        while (idx < len) {
            fn(list[idx]);
            idx += 1;
        }
        return list;
    }));

    var fromPairs = _curry1(function fromPairs(pairs) {
        var result = {};
        var idx = 0;
        while (idx < pairs.length) {
            result[pairs[idx][0]] = pairs[idx][1];
            idx += 1;
        }
        return result;
    });

    var groupWith = _curry2(function (fn, list) {
        var res = [];
        var idx = 0;
        var len = list.length;
        while (idx < len) {
            var nextidx = idx + 1;
            while (nextidx < len && fn(list[idx], list[nextidx])) {
                nextidx += 1;
            }
            res.push(list.slice(idx, nextidx));
            idx = nextidx;
        }
        return res;
    });

    var gt = _curry2(function gt(a, b) {
        return a > b;
    });

    var gte = _curry2(function gte(a, b) {
        return a >= b;
    });

    var has = _curry2(_has);

    var hasIn = _curry2(function hasIn(prop, obj) {
        return prop in obj;
    });

    var identical = _curry2(function identical(a, b) {
        if (a === b) {
            return a !== 0 || 1 / a === 1 / b;
        } else {
            return a !== a && b !== b;
        }
    });

    var identity = _curry1(_identity);

    var ifElse = _curry3(function ifElse(condition, onTrue, onFalse) {
        return curryN(Math.max(condition.length, onTrue.length, onFalse.length), function _ifElse() {
            return condition.apply(this, arguments) ? onTrue.apply(this, arguments) : onFalse.apply(this, arguments);
        });
    });

    var inc = add(1);

    var insert = _curry3(function insert(idx, elt, list) {
        idx = idx < list.length && idx >= 0 ? idx : list.length;
        var result = _slice(list);
        result.splice(idx, 0, elt);
        return result;
    });

    var insertAll = _curry3(function insertAll(idx, elts, list) {
        idx = idx < list.length && idx >= 0 ? idx : list.length;
        return _concat(_concat(_slice(list, 0, idx), elts), _slice(list, idx));
    });

    var intersperse = _curry2(_checkForMethod('intersperse', function intersperse(separator, list) {
        var out = [];
        var idx = 0;
        var length = list.length;
        while (idx < length) {
            if (idx === length - 1) {
                out.push(list[idx]);
            } else {
                out.push(list[idx], separator);
            }
            idx += 1;
        }
        return out;
    }));

    var is = _curry2(function is(Ctor, val) {
        return val != null && val.constructor === Ctor || val instanceof Ctor;
    });

    var isArrayLike = _curry1(function isArrayLike(x) {
        if (_isArray(x)) {
            return true;
        }
        if (!x) {
            return false;
        }
        if (typeof x !== 'object') {
            return false;
        }
        if (_isString(x)) {
            return false;
        }
        if (x.nodeType === 1) {
            return !!x.length;
        }
        if (x.length === 0) {
            return true;
        }
        if (x.length > 0) {
            return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);
        }
        return false;
    });

    var isNil = _curry1(function isNil(x) {
        return x == null;
    });

    var keys = function () {
        var hasEnumBug = !{ toString: null }.propertyIsEnumerable('toString');
        var nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];

        var hasArgsEnumBug = function () {
            'use strict';

            return arguments.propertyIsEnumerable('length');
        }();
        var contains = function contains(list, item) {
            var idx = 0;
            while (idx < list.length) {
                if (list[idx] === item) {
                    return true;
                }
                idx += 1;
            }
            return false;
        };
        return typeof Object.keys === 'function' && !hasArgsEnumBug ? _curry1(function keys(obj) {
            return Object(obj) !== obj ? [] : Object.keys(obj);
        }) : _curry1(function keys(obj) {
            if (Object(obj) !== obj) {
                return [];
            }
            var prop, nIdx;
            var ks = [];
            var checkArgsLength = hasArgsEnumBug && _isArguments(obj);
            for (prop in obj) {
                if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {
                    ks[ks.length] = prop;
                }
            }
            if (hasEnumBug) {
                nIdx = nonEnumerableProps.length - 1;
                while (nIdx >= 0) {
                    prop = nonEnumerableProps[nIdx];
                    if (_has(prop, obj) && !contains(ks, prop)) {
                        ks[ks.length] = prop;
                    }
                    nIdx -= 1;
                }
            }
            return ks;
        });
    }();

    var keysIn = _curry1(function keysIn(obj) {
        var prop;
        var ks = [];
        for (prop in obj) {
            ks[ks.length] = prop;
        }
        return ks;
    });

    var length = _curry1(function length(list) {
        return list != null && _isNumber(list.length) ? list.length : NaN;
    });

    var lt = _curry2(function lt(a, b) {
        return a < b;
    });

    var lte = _curry2(function lte(a, b) {
        return a <= b;
    });

    var mapAccum = _curry3(function mapAccum(fn, acc, list) {
        var idx = 0;
        var len = list.length;
        var result = [];
        var tuple = [acc];
        while (idx < len) {
            tuple = fn(tuple[0], list[idx]);
            result[idx] = tuple[1];
            idx += 1;
        }
        return [tuple[0], result];
    });

    var mapAccumRight = _curry3(function mapAccumRight(fn, acc, list) {
        var idx = list.length - 1;
        var result = [];
        var tuple = [acc];
        while (idx >= 0) {
            tuple = fn(tuple[0], list[idx]);
            result[idx] = tuple[1];
            idx -= 1;
        }
        return [tuple[0], result];
    });

    var match = _curry2(function match(rx, str) {
        return str.match(rx) || [];
    });

    var mathMod = _curry2(function mathMod(m, p) {
        if (!_isInteger(m)) {
            return NaN;
        }
        if (!_isInteger(p) || p < 1) {
            return NaN;
        }
        return (m % p + p) % p;
    });

    var max = _curry2(function max(a, b) {
        return b > a ? b : a;
    });

    var maxBy = _curry3(function maxBy(f, a, b) {
        return f(b) > f(a) ? b : a;
    });

    var merge = _curry2(function merge(l, r) {
        return _assign({}, l, r);
    });

    var mergeAll = _curry1(function mergeAll(list) {
        return _assign.apply(null, [{}].concat(list));
    });

    var mergeWithKey = _curry3(function mergeWithKey(fn, l, r) {
        var result = {};
        var k;
        for (k in l) {
            if (_has(k, l)) {
                result[k] = _has(k, r) ? fn(k, l[k], r[k]) : l[k];
            }
        }
        for (k in r) {
            if (_has(k, r) && !_has(k, result)) {
                result[k] = r[k];
            }
        }
        return result;
    });

    var min = _curry2(function min(a, b) {
        return b < a ? b : a;
    });

    var minBy = _curry3(function minBy(f, a, b) {
        return f(b) < f(a) ? b : a;
    });

    var modulo = _curry2(function modulo(a, b) {
        return a % b;
    });

    var multiply = _curry2(function multiply(a, b) {
        return a * b;
    });

    var nAry = _curry2(function nAry(n, fn) {
        switch (n) {
            case 0:
                return function () {
                    return fn.call(this);
                };
            case 1:
                return function (a0) {
                    return fn.call(this, a0);
                };
            case 2:
                return function (a0, a1) {
                    return fn.call(this, a0, a1);
                };
            case 3:
                return function (a0, a1, a2) {
                    return fn.call(this, a0, a1, a2);
                };
            case 4:
                return function (a0, a1, a2, a3) {
                    return fn.call(this, a0, a1, a2, a3);
                };
            case 5:
                return function (a0, a1, a2, a3, a4) {
                    return fn.call(this, a0, a1, a2, a3, a4);
                };
            case 6:
                return function (a0, a1, a2, a3, a4, a5) {
                    return fn.call(this, a0, a1, a2, a3, a4, a5);
                };
            case 7:
                return function (a0, a1, a2, a3, a4, a5, a6) {
                    return fn.call(this, a0, a1, a2, a3, a4, a5, a6);
                };
            case 8:
                return function (a0, a1, a2, a3, a4, a5, a6, a7) {
                    return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7);
                };
            case 9:
                return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {
                    return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8);
                };
            case 10:
                return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {
                    return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);
                };
            default:
                throw new Error('First argument to nAry must be a non-negative integer no greater than ten');
        }
    });

    var negate = _curry1(function negate(n) {
        return -n;
    });

    var none = _curry2(_complement(_dispatchable('any', _xany, any)));

    var not = _curry1(function not(a) {
        return !a;
    });

    var nth = _curry2(function nth(offset, list) {
        var idx = offset < 0 ? list.length + offset : offset;
        return _isString(list) ? list.charAt(idx) : list[idx];
    });

    var nthArg = _curry1(function nthArg(n) {
        var arity = n < 0 ? 1 : n + 1;
        return curryN(arity, function () {
            return nth(n, arguments);
        });
    });

    var objOf = _curry2(function objOf(key, val) {
        var obj = {};
        obj[key] = val;
        return obj;
    });

    var of = _curry1(_of);

    var once = _curry1(function once(fn) {
        var called = false;
        var result;
        return _arity(fn.length, function () {
            if (called) {
                return result;
            }
            called = true;
            result = fn.apply(this, arguments);
            return result;
        });
    });

    var or = _curry2(function or(a, b) {
        return a || b;
    });

    var over = function () {
        var Identity = function Identity(x) {
            return {
                value: x,
                map: function map(f) {
                    return Identity(f(x));
                }
            };
        };
        return _curry3(function over(lens, f, x) {
            return lens(function (y) {
                return Identity(f(y));
            })(x).value;
        });
    }();

    var pair = _curry2(function pair(fst, snd) {
        return [fst, snd];
    });

    var path = _curry2(function path(paths, obj) {
        var val = obj;
        var idx = 0;
        while (idx < paths.length) {
            if (val == null) {
                return;
            }
            val = val[paths[idx]];
            idx += 1;
        }
        return val;
    });

    var pathOr = _curry3(function pathOr(d, p, obj) {
        return defaultTo(d, path(p, obj));
    });

    var pathSatisfies = _curry3(function pathSatisfies(pred, propPath, obj) {
        return propPath.length > 0 && pred(path(propPath, obj));
    });

    var pick = _curry2(function pick(names, obj) {
        var result = {};
        var idx = 0;
        while (idx < names.length) {
            if (names[idx] in obj) {
                result[names[idx]] = obj[names[idx]];
            }
            idx += 1;
        }
        return result;
    });

    var pickAll = _curry2(function pickAll(names, obj) {
        var result = {};
        var idx = 0;
        var len = names.length;
        while (idx < len) {
            var name = names[idx];
            result[name] = obj[name];
            idx += 1;
        }
        return result;
    });

    var pickBy = _curry2(function pickBy(test, obj) {
        var result = {};
        for (var prop in obj) {
            if (test(obj[prop], prop, obj)) {
                result[prop] = obj[prop];
            }
        }
        return result;
    });

    var prepend = _curry2(function prepend(el, list) {
        return _concat([el], list);
    });

    var prop = _curry2(function prop(p, obj) {
        return obj[p];
    });

    var propIs = _curry3(function propIs(type, name, obj) {
        return is(type, obj[name]);
    });

    var propOr = _curry3(function propOr(val, p, obj) {
        return obj != null && _has(p, obj) ? obj[p] : val;
    });

    var propSatisfies = _curry3(function propSatisfies(pred, name, obj) {
        return pred(obj[name]);
    });

    var props = _curry2(function props(ps, obj) {
        var len = ps.length;
        var out = [];
        var idx = 0;
        while (idx < len) {
            out[idx] = obj[ps[idx]];
            idx += 1;
        }
        return out;
    });

    var range = _curry2(function range(from, to) {
        if (!(_isNumber(from) && _isNumber(to))) {
            throw new TypeError('Both arguments to range must be numbers');
        }
        var result = [];
        var n = from;
        while (n < to) {
            result.push(n);
            n += 1;
        }
        return result;
    });

    var reduceRight = _curry3(function reduceRight(fn, acc, list) {
        var idx = list.length - 1;
        while (idx >= 0) {
            acc = fn(acc, list[idx]);
            idx -= 1;
        }
        return acc;
    });

    var reduced = _curry1(_reduced);

    var remove = _curry3(function remove(start, count, list) {
        return _concat(_slice(list, 0, Math.min(start, list.length)), _slice(list, Math.min(list.length, start + count)));
    });

    var replace = _curry3(function replace(regex, replacement, str) {
        return str.replace(regex, replacement);
    });

    var reverse = _curry1(function reverse(list) {
        return _isString(list) ? list.split('').reverse().join('') : _slice(list).reverse();
    });

    var scan = _curry3(function scan(fn, acc, list) {
        var idx = 0;
        var len = list.length;
        var result = [acc];
        while (idx < len) {
            acc = fn(acc, list[idx]);
            result[idx + 1] = acc;
            idx += 1;
        }
        return result;
    });

    var set = _curry3(function set(lens, v, x) {
        return over(lens, always(v), x);
    });

    var slice = _curry3(_checkForMethod('slice', function slice(fromIndex, toIndex, list) {
        return Array.prototype.slice.call(list, fromIndex, toIndex);
    }));

    var sort = _curry2(function sort(comparator, list) {
        return _slice(list).sort(comparator);
    });

    var sortBy = _curry2(function sortBy(fn, list) {
        return _slice(list).sort(function (a, b) {
            var aa = fn(a);
            var bb = fn(b);
            return aa < bb ? -1 : aa > bb ? 1 : 0;
        });
    });

    var splitAt = _curry2(function splitAt(index, array) {
        return [slice(0, index, array), slice(index, length(array), array)];
    });

    var splitEvery = _curry2(function splitEvery(n, list) {
        if (n <= 0) {
            throw new Error('First argument to splitEvery must be a positive integer');
        }
        var result = [];
        var idx = 0;
        while (idx < list.length) {
            result.push(slice(idx, idx += n, list));
        }
        return result;
    });

    var splitWhen = _curry2(function splitWhen(pred, list) {
        var idx = 0;
        var len = list.length;
        var prefix = [];
        while (idx < len && !pred(list[idx])) {
            prefix.push(list[idx]);
            idx += 1;
        }
        return [prefix, _slice(list, idx)];
    });

    var subtract = _curry2(function subtract(a, b) {
        return Number(a) - Number(b);
    });

    var tail = _checkForMethod('tail', slice(1, Infinity));

    var take = _curry2(_dispatchable('take', _xtake, function take(n, xs) {
        return slice(0, n < 0 ? Infinity : n, xs);
    }));

    var takeLastWhile = _curry2(function takeLastWhile(fn, list) {
        var idx = list.length - 1;
        while (idx >= 0 && fn(list[idx])) {
            idx -= 1;
        }
        return _slice(list, idx + 1, Infinity);
    });

    var takeWhile = _curry2(_dispatchable('takeWhile', _xtakeWhile, function takeWhile(fn, list) {
        var idx = 0;
        var len = list.length;
        while (idx < len && fn(list[idx])) {
            idx += 1;
        }
        return _slice(list, 0, idx);
    }));

    var tap = _curry2(function tap(fn, x) {
        fn(x);
        return x;
    });

    var times = _curry2(function times(fn, n) {
        var len = Number(n);
        var idx = 0;
        var list;
        if (len < 0 || isNaN(len)) {
            throw new RangeError('n must be a non-negative number');
        }
        list = new Array(len);
        while (idx < len) {
            list[idx] = fn(idx);
            idx += 1;
        }
        return list;
    });

    var toPairs = _curry1(function toPairs(obj) {
        var pairs = [];
        for (var prop in obj) {
            if (_has(prop, obj)) {
                pairs[pairs.length] = [prop, obj[prop]];
            }
        }
        return pairs;
    });

    var toPairsIn = _curry1(function toPairsIn(obj) {
        var pairs = [];
        for (var prop in obj) {
            pairs[pairs.length] = [prop, obj[prop]];
        }
        return pairs;
    });

    var transpose = _curry1(function transpose(outerlist) {
        var i = 0;
        var result = [];
        while (i < outerlist.length) {
            var innerlist = outerlist[i];
            var j = 0;
            while (j < innerlist.length) {
                if (typeof result[j] === 'undefined') {
                    result[j] = [];
                }
                result[j].push(innerlist[j]);
                j += 1;
            }
            i += 1;
        }
        return result;
    });

    var trim = function () {
        var ws = '\t\n\x0B\f\r \xA0\u1680\u180E\u2000\u2001\u2002\u2003' + '\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028' + '\u2029\uFEFF';
        var zeroWidth = '\u200B';
        var hasProtoTrim = typeof String.prototype.trim === 'function';
        if (!hasProtoTrim || ws.trim() || !zeroWidth.trim()) {
            return _curry1(function trim(str) {
                var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');
                var endRx = new RegExp('[' + ws + '][' + ws + ']*$');
                return str.replace(beginRx, '').replace(endRx, '');
            });
        } else {
            return _curry1(function trim(str) {
                return str.trim();
            });
        }
    }();

    var tryCatch = _curry2(function _tryCatch(tryer, catcher) {
        return _arity(tryer.length, function () {
            try {
                return tryer.apply(this, arguments);
            } catch (e) {
                return catcher.apply(this, _concat([e], arguments));
            }
        });
    });

    var type = _curry1(function type(val) {
        return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);
    });

    var unapply = _curry1(function unapply(fn) {
        return function () {
            return fn(_slice(arguments));
        };
    });

    var unary = _curry1(function unary(fn) {
        return nAry(1, fn);
    });

    var uncurryN = _curry2(function uncurryN(depth, fn) {
        return curryN(depth, function () {
            var currentDepth = 1;
            var value = fn;
            var idx = 0;
            var endIdx;
            while (currentDepth <= depth && typeof value === 'function') {
                endIdx = currentDepth === depth ? arguments.length : idx + value.length;
                value = value.apply(this, _slice(arguments, idx, endIdx));
                currentDepth += 1;
                idx = endIdx;
            }
            return value;
        });
    });

    var unfold = _curry2(function unfold(fn, seed) {
        var pair = fn(seed);
        var result = [];
        while (pair && pair.length) {
            result[result.length] = pair[0];
            pair = fn(pair[1]);
        }
        return result;
    });

    var uniqWith = _curry2(function uniqWith(pred, list) {
        var idx = 0;
        var len = list.length;
        var result = [];
        var item;
        while (idx < len) {
            item = list[idx];
            if (!_containsWith(pred, item, result)) {
                result[result.length] = item;
            }
            idx += 1;
        }
        return result;
    });

    var unless = _curry3(function unless(pred, whenFalseFn, x) {
        return pred(x) ? x : whenFalseFn(x);
    });

    var until = _curry3(function until(pred, fn, init) {
        var val = init;
        while (!pred(val)) {
            val = fn(val);
        }
        return val;
    });

    var update = _curry3(function update(idx, x, list) {
        return adjust(always(x), idx, list);
    });

    var useWith = _curry2(function useWith(fn, transformers) {
        return curryN(transformers.length, function () {
            var args = [];
            var idx = 0;
            while (idx < transformers.length) {
                args.push(transformers[idx].call(this, arguments[idx]));
                idx += 1;
            }
            return fn.apply(this, args.concat(_slice(arguments, transformers.length)));
        });
    });

    var values = _curry1(function values(obj) {
        var props = keys(obj);
        var len = props.length;
        var vals = [];
        var idx = 0;
        while (idx < len) {
            vals[idx] = obj[props[idx]];
            idx += 1;
        }
        return vals;
    });

    var valuesIn = _curry1(function valuesIn(obj) {
        var prop;
        var vs = [];
        for (prop in obj) {
            vs[vs.length] = obj[prop];
        }
        return vs;
    });

    var view = function () {
        var Const = function Const(x) {
            return {
                value: x,
                map: function map() {
                    return this;
                }
            };
        };
        return _curry2(function view(lens, x) {
            return lens(Const)(x).value;
        });
    }();

    var when = _curry3(function when(pred, whenTrueFn, x) {
        return pred(x) ? whenTrueFn(x) : x;
    });

    var where = _curry2(function where(spec, testObj) {
        for (var prop in spec) {
            if (_has(prop, spec) && !spec[prop](testObj[prop])) {
                return false;
            }
        }
        return true;
    });

    var wrap = _curry2(function wrap(fn, wrapper) {
        return curryN(fn.length, function () {
            return wrapper.apply(this, _concat([fn], arguments));
        });
    });

    var xprod = _curry2(function xprod(a, b) {
        var idx = 0;
        var ilen = a.length;
        var j;
        var jlen = b.length;
        var result = [];
        while (idx < ilen) {
            j = 0;
            while (j < jlen) {
                result[result.length] = [a[idx], b[j]];
                j += 1;
            }
            idx += 1;
        }
        return result;
    });

    var zip = _curry2(function zip(a, b) {
        var rv = [];
        var idx = 0;
        var len = Math.min(a.length, b.length);
        while (idx < len) {
            rv[idx] = [a[idx], b[idx]];
            idx += 1;
        }
        return rv;
    });

    var zipObj = _curry2(function zipObj(keys, values) {
        var idx = 0;
        var len = Math.min(keys.length, values.length);
        var out = {};
        while (idx < len) {
            out[keys[idx]] = values[idx];
            idx += 1;
        }
        return out;
    });

    var zipWith = _curry3(function zipWith(fn, a, b) {
        var rv = [];
        var idx = 0;
        var len = Math.min(a.length, b.length);
        while (idx < len) {
            rv[idx] = fn(a[idx], b[idx]);
            idx += 1;
        }
        return rv;
    });

    var F = always(false);

    var T = always(true);

    var _clone = function _clone(value, refFrom, refTo, deep) {
        var copy = function copy(copiedValue) {
            var len = refFrom.length;
            var idx = 0;
            while (idx < len) {
                if (value === refFrom[idx]) {
                    return refTo[idx];
                }
                idx += 1;
            }
            refFrom[idx + 1] = value;
            refTo[idx + 1] = copiedValue;
            for (var key in value) {
                copiedValue[key] = deep ? _clone(value[key], refFrom, refTo, true) : value[key];
            }
            return copiedValue;
        };
        switch (type(value)) {
            case 'Object':
                return copy({});
            case 'Array':
                return copy([]);
            case 'Date':
                return new Date(value.valueOf());
            case 'RegExp':
                return _cloneRegExp(value);
            default:
                return value;
        }
    };

    var _createPartialApplicator = function _createPartialApplicator(concat) {
        return _curry2(function (fn, args) {
            return _arity(Math.max(0, fn.length - args.length), function () {
                return fn.apply(this, concat(args, arguments));
            });
        });
    };

    var _dropLast = function dropLast(n, xs) {
        return take(n < xs.length ? xs.length - n : 0, xs);
    };

    var _equals = function _equals(a, b, stackA, stackB) {
        if (identical(a, b)) {
            return true;
        }
        if (type(a) !== type(b)) {
            return false;
        }
        if (a == null || b == null) {
            return false;
        }
        if (typeof a.equals === 'function' || typeof b.equals === 'function') {
            return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);
        }
        switch (type(a)) {
            case 'Arguments':
            case 'Array':
            case 'Object':
                if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {
                    return a === b;
                }
                break;
            case 'Boolean':
            case 'Number':
            case 'String':
                if (!(typeof a === typeof b && identical(a.valueOf(), b.valueOf()))) {
                    return false;
                }
                break;
            case 'Date':
                if (!identical(a.valueOf(), b.valueOf())) {
                    return false;
                }
                break;
            case 'Error':
                return a.name === b.name && a.message === b.message;
            case 'RegExp':
                if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {
                    return false;
                }
                break;
            case 'Map':
            case 'Set':
                if (!_equals(_arrayFromIterator(a.entries()), _arrayFromIterator(b.entries()), stackA, stackB)) {
                    return false;
                }
                break;
            case 'Int8Array':
            case 'Uint8Array':
            case 'Uint8ClampedArray':
            case 'Int16Array':
            case 'Uint16Array':
            case 'Int32Array':
            case 'Uint32Array':
            case 'Float32Array':
            case 'Float64Array':
                break;
            case 'ArrayBuffer':
                break;
            default:
                return false;
        }
        var keysA = keys(a);
        if (keysA.length !== keys(b).length) {
            return false;
        }
        var idx = stackA.length - 1;
        while (idx >= 0) {
            if (stackA[idx] === a) {
                return stackB[idx] === b;
            }
            idx -= 1;
        }
        stackA.push(a);
        stackB.push(b);
        idx = keysA.length - 1;
        while (idx >= 0) {
            var key = keysA[idx];
            if (!(_has(key, b) && _equals(b[key], a[key], stackA, stackB))) {
                return false;
            }
            idx -= 1;
        }
        stackA.pop();
        stackB.pop();
        return true;
    };

    var _makeFlat = function _makeFlat(recursive) {
        return function flatt(list) {
            var value, jlen, j;
            var result = [];
            var idx = 0;
            var ilen = list.length;
            while (idx < ilen) {
                if (isArrayLike(list[idx])) {
                    value = recursive ? flatt(list[idx]) : list[idx];
                    j = 0;
                    jlen = value.length;
                    while (j < jlen) {
                        result[result.length] = value[j];
                        j += 1;
                    }
                } else {
                    result[result.length] = list[idx];
                }
                idx += 1;
            }
            return result;
        };
    };

    var _reduce = function () {
        function _arrayReduce(xf, acc, list) {
            var idx = 0;
            var len = list.length;
            while (idx < len) {
                acc = xf['@@transducer/step'](acc, list[idx]);
                if (acc && acc['@@transducer/reduced']) {
                    acc = acc['@@transducer/value'];
                    break;
                }
                idx += 1;
            }
            return xf['@@transducer/result'](acc);
        }
        function _iterableReduce(xf, acc, iter) {
            var step = iter.next();
            while (!step.done) {
                acc = xf['@@transducer/step'](acc, step.value);
                if (acc && acc['@@transducer/reduced']) {
                    acc = acc['@@transducer/value'];
                    break;
                }
                step = iter.next();
            }
            return xf['@@transducer/result'](acc);
        }
        function _methodReduce(xf, acc, obj) {
            return xf['@@transducer/result'](obj.reduce(bind(xf['@@transducer/step'], xf), acc));
        }
        var symIterator = typeof Symbol !== 'undefined' ? typeof Symbol === 'function' ? Symbol.iterator : '@@iterator' : '@@iterator';
        return function _reduce(fn, acc, list) {
            if (typeof fn === 'function') {
                fn = _xwrap(fn);
            }
            if (isArrayLike(list)) {
                return _arrayReduce(fn, acc, list);
            }
            if (typeof list.reduce === 'function') {
                return _methodReduce(fn, acc, list);
            }
            if (list[symIterator] != null) {
                return _iterableReduce(fn, acc, list[symIterator]());
            }
            if (typeof list.next === 'function') {
                return _iterableReduce(fn, acc, list);
            }
            throw new TypeError('reduce: list must be array or iterable');
        };
    }();

    var _stepCat = function () {
        var _stepCatArray = {
            '@@transducer/init': Array,
            '@@transducer/step': function transducerStep(xs, x) {
                xs.push(x);
                return xs;
            },
            '@@transducer/result': _identity
        };
        var _stepCatString = {
            '@@transducer/init': String,
            '@@transducer/step': function transducerStep(a, b) {
                return a + b;
            },
            '@@transducer/result': _identity
        };
        var _stepCatObject = {
            '@@transducer/init': Object,
            '@@transducer/step': function transducerStep(result, input) {
                return _assign(result, isArrayLike(input) ? objOf(input[0], input[1]) : input);
            },
            '@@transducer/result': _identity
        };
        return function _stepCat(obj) {
            if (_isTransformer(obj)) {
                return obj;
            }
            if (isArrayLike(obj)) {
                return _stepCatArray;
            }
            if (typeof obj === 'string') {
                return _stepCatString;
            }
            if (typeof obj === 'object') {
                return _stepCatObject;
            }
            throw new Error('Cannot create transformer for ' + obj);
        };
    }();

    var _xdropLastWhile = function () {
        function XDropLastWhile(fn, xf) {
            this.f = fn;
            this.retained = [];
            this.xf = xf;
        }
        XDropLastWhile.prototype['@@transducer/init'] = _xfBase.init;
        XDropLastWhile.prototype['@@transducer/result'] = function (result) {
            this.retained = null;
            return this.xf['@@transducer/result'](result);
        };
        XDropLastWhile.prototype['@@transducer/step'] = function (result, input) {
            return this.f(input) ? this.retain(result, input) : this.flush(result, input);
        };
        XDropLastWhile.prototype.flush = function (result, input) {
            result = _reduce(this.xf['@@transducer/step'], result, this.retained);
            this.retained = [];
            return this.xf['@@transducer/step'](result, input);
        };
        XDropLastWhile.prototype.retain = function (result, input) {
            this.retained.push(input);
            return result;
        };
        return _curry2(function _xdropLastWhile(fn, xf) {
            return new XDropLastWhile(fn, xf);
        });
    }();

    var addIndex = _curry1(function addIndex(fn) {
        return curryN(fn.length, function () {
            var idx = 0;
            var origFn = arguments[0];
            var list = arguments[arguments.length - 1];
            var args = _slice(arguments);
            args[0] = function () {
                var result = origFn.apply(this, _concat(arguments, [idx, list]));
                idx += 1;
                return result;
            };
            return fn.apply(this, args);
        });
    });

    var binary = _curry1(function binary(fn) {
        return nAry(2, fn);
    });

    var clone = _curry1(function clone(value) {
        return value != null && typeof value.clone === 'function' ? value.clone() : _clone(value, [], [], true);
    });

    var curry = _curry1(function curry(fn) {
        return curryN(fn.length, fn);
    });

    var drop = _curry2(_dispatchable('drop', _xdrop, function drop(n, xs) {
        return slice(Math.max(0, n), Infinity, xs);
    }));

    var dropLast = _curry2(_dispatchable('dropLast', _xdropLast, _dropLast));

    var dropLastWhile = _curry2(_dispatchable('dropLastWhile', _xdropLastWhile, _dropLastWhile));

    var equals = _curry2(function equals(a, b) {
        return _equals(a, b, [], []);
    });

    var filter = _curry2(_dispatchable('filter', _xfilter, function (pred, filterable) {
        return _isObject(filterable) ? _reduce(function (acc, key) {
            if (pred(filterable[key])) {
                acc[key] = filterable[key];
            }
            return acc;
        }, {}, keys(filterable)) : _filter(pred, filterable);
    }));

    var flatten = _curry1(_makeFlat(true));

    var flip = _curry1(function flip(fn) {
        return curry(function (a, b) {
            var args = _slice(arguments);
            args[0] = b;
            args[1] = a;
            return fn.apply(this, args);
        });
    });

    var head = nth(0);

    var init = slice(0, -1);

    var intersectionWith = _curry3(function intersectionWith(pred, list1, list2) {
        var lookupList, filteredList;
        if (list1.length > list2.length) {
            lookupList = list1;
            filteredList = list2;
        } else {
            lookupList = list2;
            filteredList = list1;
        }
        var results = [];
        var idx = 0;
        while (idx < filteredList.length) {
            if (_containsWith(pred, filteredList[idx], lookupList)) {
                results[results.length] = filteredList[idx];
            }
            idx += 1;
        }
        return uniqWith(pred, results);
    });

    var into = _curry3(function into(acc, xf, list) {
        return _isTransformer(acc) ? _reduce(xf(acc), acc['@@transducer/init'](), list) : _reduce(xf(_stepCat(acc)), _clone(acc, [], [], false), list);
    });

    var invert = _curry1(function invert(obj) {
        var props = keys(obj);
        var len = props.length;
        var idx = 0;
        var out = {};
        while (idx < len) {
            var key = props[idx];
            var val = obj[key];
            var list = _has(val, out) ? out[val] : out[val] = [];
            list[list.length] = key;
            idx += 1;
        }
        return out;
    });

    var invertObj = _curry1(function invertObj(obj) {
        var props = keys(obj);
        var len = props.length;
        var idx = 0;
        var out = {};
        while (idx < len) {
            var key = props[idx];
            out[obj[key]] = key;
            idx += 1;
        }
        return out;
    });

    var isEmpty = _curry1(function isEmpty(x) {
        return x != null && equals(x, empty(x));
    });

    var last = nth(-1);

    var lastIndexOf = _curry2(function lastIndexOf(target, xs) {
        if (typeof xs.lastIndexOf === 'function' && !_isArray(xs)) {
            return xs.lastIndexOf(target);
        } else {
            var idx = xs.length - 1;
            while (idx >= 0) {
                if (equals(xs[idx], target)) {
                    return idx;
                }
                idx -= 1;
            }
            return -1;
        }
    });

    var map = _curry2(_dispatchable('map', _xmap, function map(fn, functor) {
        switch (Object.prototype.toString.call(functor)) {
            case '[object Function]':
                return curryN(functor.length, function () {
                    return fn.call(this, functor.apply(this, arguments));
                });
            case '[object Object]':
                return _reduce(function (acc, key) {
                    acc[key] = fn(functor[key]);
                    return acc;
                }, {}, keys(functor));
            default:
                return _map(fn, functor);
        }
    }));

    var mapObjIndexed = _curry2(function mapObjIndexed(fn, obj) {
        return _reduce(function (acc, key) {
            acc[key] = fn(obj[key], key, obj);
            return acc;
        }, {}, keys(obj));
    });

    var mergeWith = _curry3(function mergeWith(fn, l, r) {
        return mergeWithKey(function (_, _l, _r) {
            return fn(_l, _r);
        }, l, r);
    });

    var partial = _createPartialApplicator(_concat);

    var partialRight = _createPartialApplicator(flip(_concat));

    var pathEq = _curry3(function pathEq(_path, val, obj) {
        return equals(path(_path, obj), val);
    });

    var pluck = _curry2(function pluck(p, list) {
        return map(prop(p), list);
    });

    var project = useWith(_map, [pickAll, identity]);

    var propEq = _curry3(function propEq(name, val, obj) {
        return equals(val, obj[name]);
    });

    var reduce = _curry3(_reduce);

    var reduceBy = _curryN(4, [], _dispatchable('reduceBy', _xreduceBy, function reduceBy(valueFn, valueAcc, keyFn, list) {
        return _reduce(function (acc, elt) {
            var key = keyFn(elt);
            acc[key] = valueFn(_has(key, acc) ? acc[key] : valueAcc, elt);
            return acc;
        }, {}, list);
    }));

    var reduceWhile = _curryN(4, [], function _reduceWhile(pred, fn, a, list) {
        return _reduce(function (acc, x) {
            return pred(acc, x) ? fn(acc, x) : _reduced(acc);
        }, a, list);
    });

    var reject = _curry2(function reject(pred, filterable) {
        return filter(_complement(pred), filterable);
    });

    var repeat = _curry2(function repeat(value, n) {
        return times(always(value), n);
    });

    var sum = reduce(add, 0);

    var takeLast = _curry2(function takeLast(n, xs) {
        return drop(n >= 0 ? xs.length - n : 0, xs);
    });

    var transduce = curryN(4, function transduce(xf, fn, acc, list) {
        return _reduce(xf(typeof fn === 'function' ? _xwrap(fn) : fn), acc, list);
    });

    var unionWith = _curry3(function unionWith(pred, list1, list2) {
        return uniqWith(pred, _concat(list1, list2));
    });

    var whereEq = _curry2(function whereEq(spec, testObj) {
        return where(map(equals, spec), testObj);
    });

    var _flatCat = function () {
        var preservingReduced = function preservingReduced(xf) {
            return {
                '@@transducer/init': _xfBase.init,
                '@@transducer/result': function transducerResult(result) {
                    return xf['@@transducer/result'](result);
                },
                '@@transducer/step': function transducerStep(result, input) {
                    var ret = xf['@@transducer/step'](result, input);
                    return ret['@@transducer/reduced'] ? _forceReduced(ret) : ret;
                }
            };
        };
        return function _xcat(xf) {
            var rxf = preservingReduced(xf);
            return {
                '@@transducer/init': _xfBase.init,
                '@@transducer/result': function transducerResult(result) {
                    return rxf['@@transducer/result'](result);
                },
                '@@transducer/step': function transducerStep(result, input) {
                    return !isArrayLike(input) ? _reduce(rxf, result, [input]) : _reduce(rxf, result, input);
                }
            };
        };
    }();

    var _indexOf = function _indexOf(list, a, idx) {
        var inf, item;

        if (typeof list.indexOf === 'function') {
            switch (typeof a) {
                case 'number':
                    if (a === 0) {
                        inf = 1 / a;
                        while (idx < list.length) {
                            item = list[idx];
                            if (item === 0 && 1 / item === inf) {
                                return idx;
                            }
                            idx += 1;
                        }
                        return -1;
                    } else if (a !== a) {
                        while (idx < list.length) {
                            item = list[idx];
                            if (typeof item === 'number' && item !== item) {
                                return idx;
                            }
                            idx += 1;
                        }
                        return -1;
                    }

                    return list.indexOf(a, idx);

                case 'string':
                case 'boolean':
                case 'function':
                case 'undefined':
                    return list.indexOf(a, idx);
                case 'object':
                    if (a === null) {
                        return list.indexOf(a, idx);
                    }
            }
        }

        while (idx < list.length) {
            if (equals(list[idx], a)) {
                return idx;
            }
            idx += 1;
        }
        return -1;
    };

    var _xchain = _curry2(function _xchain(f, xf) {
        return map(f, _flatCat(xf));
    });

    var allPass = _curry1(function allPass(preds) {
        return curryN(reduce(max, 0, pluck('length', preds)), function () {
            var idx = 0;
            var len = preds.length;
            while (idx < len) {
                if (!preds[idx].apply(this, arguments)) {
                    return false;
                }
                idx += 1;
            }
            return true;
        });
    });

    var anyPass = _curry1(function anyPass(preds) {
        return curryN(reduce(max, 0, pluck('length', preds)), function () {
            var idx = 0;
            var len = preds.length;
            while (idx < len) {
                if (preds[idx].apply(this, arguments)) {
                    return true;
                }
                idx += 1;
            }
            return false;
        });
    });

    var ap = _curry2(function ap(applicative, fn) {
        return typeof applicative.ap === 'function' ? applicative.ap(fn) : typeof applicative === 'function' ? function (x) {
            return applicative(x)(fn(x));
        } : _reduce(function (acc, f) {
            return _concat(acc, map(f, fn));
        }, [], applicative);
    });

    var applySpec = _curry1(function applySpec(spec) {
        spec = map(function (v) {
            return typeof v == 'function' ? v : applySpec(v);
        }, spec);
        return curryN(reduce(max, 0, pluck('length', values(spec))), function () {
            var args = arguments;
            return map(function (f) {
                return apply(f, args);
            }, spec);
        });
    });

    var call = curry(function call(fn) {
        return fn.apply(this, _slice(arguments, 1));
    });

    var chain = _curry2(_dispatchable('chain', _xchain, function chain(fn, monad) {
        if (typeof monad === 'function') {
            return function () {
                return monad.call(this, fn.apply(this, arguments)).apply(this, arguments);
            };
        }
        return _makeFlat(false)(map(fn, monad));
    }));

    var cond = _curry1(function cond(pairs) {
        var arity = reduce(max, 0, map(function (pair) {
            return pair[0].length;
        }, pairs));
        return _arity(arity, function () {
            var idx = 0;
            while (idx < pairs.length) {
                if (pairs[idx][0].apply(this, arguments)) {
                    return pairs[idx][1].apply(this, arguments);
                }
                idx += 1;
            }
        });
    });

    var constructN = _curry2(function constructN(n, Fn) {
        if (n > 10) {
            throw new Error('Constructor with greater than ten arguments');
        }
        if (n === 0) {
            return function () {
                return new Fn();
            };
        }
        return curry(nAry(n, function ($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {
            switch (arguments.length) {
                case 1:
                    return new Fn($0);
                case 2:
                    return new Fn($0, $1);
                case 3:
                    return new Fn($0, $1, $2);
                case 4:
                    return new Fn($0, $1, $2, $3);
                case 5:
                    return new Fn($0, $1, $2, $3, $4);
                case 6:
                    return new Fn($0, $1, $2, $3, $4, $5);
                case 7:
                    return new Fn($0, $1, $2, $3, $4, $5, $6);
                case 8:
                    return new Fn($0, $1, $2, $3, $4, $5, $6, $7);
                case 9:
                    return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8);
                case 10:
                    return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8, $9);
            }
        }));
    });

    var converge = _curry2(function converge(after, fns) {
        return curryN(reduce(max, 0, pluck('length', fns)), function () {
            var args = arguments;
            var context = this;
            return after.apply(context, _map(function (fn) {
                return fn.apply(context, args);
            }, fns));
        });
    });

    var countBy = reduceBy(function (acc, elem) {
        return acc + 1;
    }, 0);

    var dropRepeatsWith = _curry2(_dispatchable('dropRepeatsWith', _xdropRepeatsWith, function dropRepeatsWith(pred, list) {
        var result = [];
        var idx = 1;
        var len = list.length;
        if (len !== 0) {
            result[0] = list[0];
            while (idx < len) {
                if (!pred(last(result), list[idx])) {
                    result[result.length] = list[idx];
                }
                idx += 1;
            }
        }
        return result;
    }));

    var eqBy = _curry3(function eqBy(f, x, y) {
        return equals(f(x), f(y));
    });

    var eqProps = _curry3(function eqProps(prop, obj1, obj2) {
        return equals(obj1[prop], obj2[prop]);
    });

    var groupBy = _curry2(_checkForMethod('groupBy', reduceBy(function (acc, item) {
        if (acc == null) {
            acc = [];
        }
        acc.push(item);
        return acc;
    }, null)));

    var indexBy = reduceBy(function (acc, elem) {
        return elem;
    }, null);

    var indexOf = _curry2(function indexOf(target, xs) {
        return typeof xs.indexOf === 'function' && !_isArray(xs) ? xs.indexOf(target) : _indexOf(xs, target, 0);
    });

    var juxt = _curry1(function juxt(fns) {
        return converge(_arrayOf, fns);
    });

    var lens = _curry2(function lens(getter, setter) {
        return function (toFunctorFn) {
            return function (target) {
                return map(function (focus) {
                    return setter(focus, target);
                }, toFunctorFn(getter(target)));
            };
        };
    });

    var lensIndex = _curry1(function lensIndex(n) {
        return lens(nth(n), update(n));
    });

    var lensPath = _curry1(function lensPath(p) {
        return lens(path(p), assocPath(p));
    });

    var lensProp = _curry1(function lensProp(k) {
        return lens(prop(k), assoc(k));
    });

    var liftN = _curry2(function liftN(arity, fn) {
        var lifted = curryN(arity, fn);
        return curryN(arity, function () {
            return _reduce(ap, map(lifted, arguments[0]), _slice(arguments, 1));
        });
    });

    var mean = _curry1(function mean(list) {
        return sum(list) / list.length;
    });

    var median = _curry1(function median(list) {
        var len = list.length;
        if (len === 0) {
            return NaN;
        }
        var width = 2 - len % 2;
        var idx = (len - width) / 2;
        return mean(_slice(list).sort(function (a, b) {
            return a < b ? -1 : a > b ? 1 : 0;
        }).slice(idx, idx + width));
    });

    var partition = juxt([filter, reject]);

    var pipe = function pipe() {
        if (arguments.length === 0) {
            throw new Error('pipe requires at least one argument');
        }
        return _arity(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));
    };

    var pipeP = function pipeP() {
        if (arguments.length === 0) {
            throw new Error('pipeP requires at least one argument');
        }
        return _arity(arguments[0].length, reduce(_pipeP, arguments[0], tail(arguments)));
    };

    var product = reduce(multiply, 1);

    var sequence = _curry2(function sequence(of, traversable) {
        return typeof traversable.sequence === 'function' ? traversable.sequence(of) : reduceRight(function (acc, x) {
            return ap(map(prepend, x), acc);
        }, of([]), traversable);
    });

    var traverse = _curry3(function traverse(of, f, traversable) {
        return sequence(of, map(f, traversable));
    });

    var unnest = chain(_identity);

    var _contains = function _contains(a, list) {
        return _indexOf(list, a, 0) >= 0;
    };

    var _toString = function _toString(x, seen) {
        var recur = function recur(y) {
            var xs = seen.concat([x]);
            return _contains(y, xs) ? '<Circular>' : _toString(y, xs);
        };

        var mapPairs = function mapPairs(obj, keys) {
            return _map(function (k) {
                return _quote(k) + ': ' + recur(obj[k]);
            }, keys.slice().sort());
        };
        switch (Object.prototype.toString.call(x)) {
            case '[object Arguments]':
                return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';
            case '[object Array]':
                return '[' + _map(recur, x).concat(mapPairs(x, reject(function (k) {
                    return (/^\d+$/.test(k)
                    );
                }, keys(x)))).join(', ') + ']';
            case '[object Boolean]':
                return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();
            case '[object Date]':
                return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';
            case '[object Null]':
                return 'null';
            case '[object Number]':
                return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);
            case '[object String]':
                return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);
            case '[object Undefined]':
                return 'undefined';
            default:
                if (typeof x.toString === 'function') {
                    var repr = x.toString();
                    if (repr !== '[object Object]') {
                        return repr;
                    }
                }
                return '{' + mapPairs(x, keys(x)).join(', ') + '}';
        }
    };

    var compose = function compose() {
        if (arguments.length === 0) {
            throw new Error('compose requires at least one argument');
        }
        return pipe.apply(this, reverse(arguments));
    };

    var composeK = function composeK() {
        return compose.apply(this, prepend(identity, map(chain, arguments)));
    };

    var composeP = function composeP() {
        if (arguments.length === 0) {
            throw new Error('composeP requires at least one argument');
        }
        return pipeP.apply(this, reverse(arguments));
    };

    var construct = _curry1(function construct(Fn) {
        return constructN(Fn.length, Fn);
    });

    var contains = _curry2(_contains);

    var difference = _curry2(function difference(first, second) {
        var out = [];
        var idx = 0;
        var firstLen = first.length;
        while (idx < firstLen) {
            if (!_contains(first[idx], second) && !_contains(first[idx], out)) {
                out[out.length] = first[idx];
            }
            idx += 1;
        }
        return out;
    });

    var dropRepeats = _curry1(_dispatchable('dropRepeats', _xdropRepeatsWith(equals), dropRepeatsWith(equals)));

    var lift = _curry1(function lift(fn) {
        return liftN(fn.length, fn);
    });

    var omit = _curry2(function omit(names, obj) {
        var result = {};
        for (var prop in obj) {
            if (!_contains(prop, names)) {
                result[prop] = obj[prop];
            }
        }
        return result;
    });

    var pipeK = function pipeK() {
        return composeK.apply(this, reverse(arguments));
    };

    var toString = _curry1(function toString(val) {
        return _toString(val, []);
    });

    var without = _curry2(function (xs, list) {
        return reject(flip(_contains)(xs), list);
    });

    var _Set = function () {
        function _Set() {
            this._nativeSet = typeof Set === 'function' ? new Set() : null;
            this._items = {};
        }

        _Set.prototype.add = function (item) {
            return !hasOrAdd(item, true, this);
        };

        _Set.prototype.has = function (item) {
            return hasOrAdd(item, false, this);
        };

        function hasOrAdd(item, shouldAdd, set) {
            var type = typeof item;
            var prevSize, newSize;
            switch (type) {
                case 'string':
                case 'number':
                    if (item === 0 && 1 / item === -Infinity) {
                        if (set._items['-0']) {
                            return true;
                        } else {
                            if (shouldAdd) {
                                set._items['-0'] = true;
                            }
                            return false;
                        }
                    }

                    if (set._nativeSet !== null) {
                        if (shouldAdd) {
                            prevSize = set._nativeSet.size;
                            set._nativeSet.add(item);
                            newSize = set._nativeSet.size;
                            return newSize === prevSize;
                        } else {
                            return set._nativeSet.has(item);
                        }
                    } else {
                        if (!(type in set._items)) {
                            if (shouldAdd) {
                                set._items[type] = {};
                                set._items[type][item] = true;
                            }
                            return false;
                        } else if (item in set._items[type]) {
                            return true;
                        } else {
                            if (shouldAdd) {
                                set._items[type][item] = true;
                            }
                            return false;
                        }
                    }
                case 'boolean':
                    if (type in set._items) {
                        var bIdx = item ? 1 : 0;
                        if (set._items[type][bIdx]) {
                            return true;
                        } else {
                            if (shouldAdd) {
                                set._items[type][bIdx] = true;
                            }
                            return false;
                        }
                    } else {
                        if (shouldAdd) {
                            set._items[type] = item ? [false, true] : [true, false];
                        }
                        return false;
                    }
                case 'function':
                    if (set._nativeSet !== null) {
                        if (shouldAdd) {
                            prevSize = set._nativeSet.size;
                            set._nativeSet.add(item);
                            newSize = set._nativeSet.size;
                            return newSize > prevSize;
                        } else {
                            return set._nativeSet.has(item);
                        }
                    } else {
                        if (!(type in set._items)) {
                            if (shouldAdd) {
                                set._items[type] = [item];
                            }
                            return false;
                        }
                        if (!_contains(item, set._items[type])) {
                            if (shouldAdd) {
                                set._items[type].push(item);
                            }
                            return false;
                        }
                        return true;
                    }
                case 'undefined':
                    if (set._items[type]) {
                        return true;
                    } else {
                        if (shouldAdd) {
                            set._items[type] = true;
                        }
                        return false;
                    }
                case 'object':
                    if (item === null) {
                        if (!set._items['null']) {
                            if (shouldAdd) {
                                set._items['null'] = true;
                            }
                            return false;
                        }
                        return true;
                    }

                default:
                    type = Object.prototype.toString.call(item);
                    if (!(type in set._items)) {
                        if (shouldAdd) {
                            set._items[type] = [item];
                        }
                        return false;
                    }

                    if (!_contains(item, set._items[type])) {
                        if (shouldAdd) {
                            set._items[type].push(item);
                        }
                        return false;
                    }
                    return true;
            }
        }
        return _Set;
    }();

    var both = _curry2(function both(f, g) {
        return _isFunction(f) ? function _both() {
            return f.apply(this, arguments) && g.apply(this, arguments);
        } : lift(and)(f, g);
    });

    var complement = lift(not);

    var concat = _curry2(function concat(a, b) {
        if (a == null || !_isFunction(a.concat)) {
            throw new TypeError(toString(a) + ' does not have a method named "concat"');
        }
        if (_isArray(a) && !_isArray(b)) {
            throw new TypeError(toString(b) + ' is not an array');
        }
        return a.concat(b);
    });

    var either = _curry2(function either(f, g) {
        return _isFunction(f) ? function _either() {
            return f.apply(this, arguments) || g.apply(this, arguments);
        } : lift(or)(f, g);
    });

    var invoker = _curry2(function invoker(arity, method) {
        return curryN(arity + 1, function () {
            var target = arguments[arity];
            if (target != null && _isFunction(target[method])) {
                return target[method].apply(target, _slice(arguments, 0, arity));
            }
            throw new TypeError(toString(target) + ' does not have a method named "' + method + '"');
        });
    });

    var join = invoker(1, 'join');

    var memoize = _curry1(function memoize(fn) {
        var cache = {};
        return _arity(fn.length, function () {
            var key = toString(arguments);
            if (!_has(key, cache)) {
                cache[key] = fn.apply(this, arguments);
            }
            return cache[key];
        });
    });

    var split = invoker(1, 'split');

    var symmetricDifference = _curry2(function symmetricDifference(list1, list2) {
        return concat(difference(list1, list2), difference(list2, list1));
    });

    var symmetricDifferenceWith = _curry3(function symmetricDifferenceWith(pred, list1, list2) {
        return concat(differenceWith(pred, list1, list2), differenceWith(pred, list2, list1));
    });

    var test = _curry2(function test(pattern, str) {
        if (!_isRegExp(pattern)) {
            throw new TypeError('\u2018test\u2019 requires a value of type RegExp as its first argument; received ' + toString(pattern));
        }
        return _cloneRegExp(pattern).test(str);
    });

    var toLower = invoker(0, 'toLowerCase');

    var toUpper = invoker(0, 'toUpperCase');

    var uniqBy = _curry2(function uniqBy(fn, list) {
        var set = new _Set();
        var result = [];
        var idx = 0;
        var appliedItem, item;
        while (idx < list.length) {
            item = list[idx];
            appliedItem = fn(item);
            if (set.add(appliedItem)) {
                result.push(item);
            }
            idx += 1;
        }
        return result;
    });

    var uniq = uniqBy(identity);

    var intersection = _curry2(function intersection(list1, list2) {
        var lookupList, filteredList;
        if (list1.length > list2.length) {
            lookupList = list1;
            filteredList = list2;
        } else {
            lookupList = list2;
            filteredList = list1;
        }
        return uniq(_filter(flip(_contains)(lookupList), filteredList));
    });

    var union = _curry2(compose(uniq, _concat));

    var R = {
        F: F,
        T: T,
        __: __,
        add: add,
        addIndex: addIndex,
        adjust: adjust,
        all: all,
        allPass: allPass,
        always: always,
        and: and,
        any: any,
        anyPass: anyPass,
        ap: ap,
        aperture: aperture,
        append: append,
        apply: apply,
        applySpec: applySpec,
        assoc: assoc,
        assocPath: assocPath,
        binary: binary,
        bind: bind,
        both: both,
        call: call,
        chain: chain,
        clamp: clamp,
        clone: clone,
        comparator: comparator,
        complement: complement,
        compose: compose,
        composeK: composeK,
        composeP: composeP,
        concat: concat,
        cond: cond,
        construct: construct,
        constructN: constructN,
        contains: contains,
        converge: converge,
        countBy: countBy,
        curry: curry,
        curryN: curryN,
        dec: dec,
        defaultTo: defaultTo,
        difference: difference,
        differenceWith: differenceWith,
        dissoc: dissoc,
        dissocPath: dissocPath,
        divide: divide,
        drop: drop,
        dropLast: dropLast,
        dropLastWhile: dropLastWhile,
        dropRepeats: dropRepeats,
        dropRepeatsWith: dropRepeatsWith,
        dropWhile: dropWhile,
        either: either,
        empty: empty,
        eqBy: eqBy,
        eqProps: eqProps,
        equals: equals,
        evolve: evolve,
        filter: filter,
        find: find,
        findIndex: findIndex,
        findLast: findLast,
        findLastIndex: findLastIndex,
        flatten: flatten,
        flip: flip,
        forEach: forEach,
        fromPairs: fromPairs,
        groupBy: groupBy,
        groupWith: groupWith,
        gt: gt,
        gte: gte,
        has: has,
        hasIn: hasIn,
        head: head,
        identical: identical,
        identity: identity,
        ifElse: ifElse,
        inc: inc,
        indexBy: indexBy,
        indexOf: indexOf,
        init: init,
        insert: insert,
        insertAll: insertAll,
        intersection: intersection,
        intersectionWith: intersectionWith,
        intersperse: intersperse,
        into: into,
        invert: invert,
        invertObj: invertObj,
        invoker: invoker,
        is: is,
        isArrayLike: isArrayLike,
        isEmpty: isEmpty,
        isNil: isNil,
        join: join,
        juxt: juxt,
        keys: keys,
        keysIn: keysIn,
        last: last,
        lastIndexOf: lastIndexOf,
        length: length,
        lens: lens,
        lensIndex: lensIndex,
        lensPath: lensPath,
        lensProp: lensProp,
        lift: lift,
        liftN: liftN,
        lt: lt,
        lte: lte,
        map: map,
        mapAccum: mapAccum,
        mapAccumRight: mapAccumRight,
        mapObjIndexed: mapObjIndexed,
        match: match,
        mathMod: mathMod,
        max: max,
        maxBy: maxBy,
        mean: mean,
        median: median,
        memoize: memoize,
        merge: merge,
        mergeAll: mergeAll,
        mergeWith: mergeWith,
        mergeWithKey: mergeWithKey,
        min: min,
        minBy: minBy,
        modulo: modulo,
        multiply: multiply,
        nAry: nAry,
        negate: negate,
        none: none,
        not: not,
        nth: nth,
        nthArg: nthArg,
        objOf: objOf,
        of: of,
        omit: omit,
        once: once,
        or: or,
        over: over,
        pair: pair,
        partial: partial,
        partialRight: partialRight,
        partition: partition,
        path: path,
        pathEq: pathEq,
        pathOr: pathOr,
        pathSatisfies: pathSatisfies,
        pick: pick,
        pickAll: pickAll,
        pickBy: pickBy,
        pipe: pipe,
        pipeK: pipeK,
        pipeP: pipeP,
        pluck: pluck,
        prepend: prepend,
        product: product,
        project: project,
        prop: prop,
        propEq: propEq,
        propIs: propIs,
        propOr: propOr,
        propSatisfies: propSatisfies,
        props: props,
        range: range,
        reduce: reduce,
        reduceBy: reduceBy,
        reduceRight: reduceRight,
        reduceWhile: reduceWhile,
        reduced: reduced,
        reject: reject,
        remove: remove,
        repeat: repeat,
        replace: replace,
        reverse: reverse,
        scan: scan,
        sequence: sequence,
        set: set,
        slice: slice,
        sort: sort,
        sortBy: sortBy,
        split: split,
        splitAt: splitAt,
        splitEvery: splitEvery,
        splitWhen: splitWhen,
        subtract: subtract,
        sum: sum,
        symmetricDifference: symmetricDifference,
        symmetricDifferenceWith: symmetricDifferenceWith,
        tail: tail,
        take: take,
        takeLast: takeLast,
        takeLastWhile: takeLastWhile,
        takeWhile: takeWhile,
        tap: tap,
        test: test,
        times: times,
        toLower: toLower,
        toPairs: toPairs,
        toPairsIn: toPairsIn,
        toString: toString,
        toUpper: toUpper,
        transduce: transduce,
        transpose: transpose,
        traverse: traverse,
        trim: trim,
        tryCatch: tryCatch,
        type: type,
        unapply: unapply,
        unary: unary,
        uncurryN: uncurryN,
        unfold: unfold,
        union: union,
        unionWith: unionWith,
        uniq: uniq,
        uniqBy: uniqBy,
        uniqWith: uniqWith,
        unless: unless,
        unnest: unnest,
        until: until,
        update: update,
        useWith: useWith,
        values: values,
        valuesIn: valuesIn,
        view: view,
        when: when,
        where: where,
        whereEq: whereEq,
        without: without,
        wrap: wrap,
        xprod: xprod,
        zip: zip,
        zipObj: zipObj,
        zipWith: zipWith
    };


    if (typeof exports === 'object') {
        module.exports = R;
    } else if (typeof define === 'function' && define.amd) {
        define(function () {
            return R;
        });
    } else {
        this.R = R;
    }
}).call(this);
}, 2656, null, "ramda/dist/ramda.js");
__d(/* ramdasauce/dist/ramdasauce.js */function(global, require, module, exports) {'use strict';

function _interopDefault(ex) {
  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;
}

var R = _interopDefault(require(2658   )); // 2658 = ramda

var log = function log(x) {
  console.log(x);
  return x;
};

var trace = R.curry(function (message, x) {
  console.log(message);
  return x;
});

var toNumber = R.cond([[R.isNil, R.identity], [R.is(Number), R.identity], [R.T, function (x) {
  return Number(x);
}]]);

var toDate = function toDate(number) {
  return R.cond([[R.isNil, R.identity], [R.is(Object), R.identity], [R.T, function (x) {
    return new Date(x);
  }]])(number);
};

var isWithin = R.curry(function (min, max, value) {
  var isNumber = R.is(Number);
  return isNumber(min) && isNumber(max) && isNumber(value) && R.gte(value, min) && R.gte(max, value);
});

var isNotWithin = R.complement(isWithin);

var eqLength = R.eqProps('length');

var random = function random(min, max) {
  return Math.floor(Math.random() * (max - min + 1)) + min;
};

var sample = function sample(list) {
  if (R.isNil(list) || R.isEmpty(list)) {
    return null;
  }
  var min = 0;
  var max = list.length - 1;
  return list[random(min, max)];
};

var isNilOrEmpty = R.anyPass([R.isNil, R.isEmpty]);

var isNotNil = R.complement(R.isNil);

var isUndefined = function isUndefined(x) {
  return typeof x === 'undefined';
};

var mapKeys = R.curry(function (fn, obj) {
  return R.pipe(R.toPairs, R.map(R.adjust(fn, 0)), R.fromPairs)(obj);
});

var rangeStep = R.curry(function (step, start, stop) {
  if (step === 0) return null;
  if (step > 0 && stop < start) return null;
  if (step < 0 && stop > start) return null;
  return R.map(function (n) {
    return start + step * n;
  }, R.range(0, 1 + (stop - start) / step >>> 0));
});

var dotPath = R.curry(function (stringPath, obj) {
  var path = R.split('.', stringPath);
  return R.path(path, obj);
});

var startsWith = R.curry(function (subString, fullString) {
  return R.equals(subString, R.take(R.length(subString), fullString));
});

var endsWith = R.curry(function (subString, fullString) {
  return R.equals(subString, R.takeLast(R.length(subString), fullString));
});

var findByProp = R.curry(function (prop, value, source) {
  return R.find(R.propEq(prop, value))(source);
});

var findIndexByProp = R.curry(function (prop, value, source) {
  return R.findIndex(R.propEq(prop, value))(source);
});

var Ramdasauce = {
  log: log,
  trace: trace,
  toNumber: toNumber,
  toDate: toDate,
  isWithin: isWithin,
  isNotWithin: isNotWithin,
  eqLength: eqLength,
  random: random,
  sample: sample,
  isNilOrEmpty: isNilOrEmpty,
  isNotNil: isNotNil,
  isUndefined: isUndefined,
  mapKeys: mapKeys,
  rangeStep: rangeStep,
  dotPath: dotPath,
  startsWith: startsWith,
  endsWith: endsWith,
  findByProp: findByProp,
  findIndexByProp: findIndexByProp
};

module.exports = Ramdasauce;

module.exports = Ramdasauce;
}, 2657, null, "ramdasauce/dist/ramdasauce.js");
__d(/* ramda/index.js */function(global, require, module, exports) {module.exports = {
  F: require(2659     ), // 2659 = ./src/F
  T: require(2663     ), // 2663 = ./src/T
  __: require(2664      ), // 2664 = ./src/__
  add: require(2665       ), // 2665 = ./src/add
  addIndex: require(2667            ), // 2667 = ./src/addIndex
  adjust: require(2672          ), // 2672 = ./src/adjust
  all: require(2674       ), // 2674 = ./src/all
  allPass: require(2681           ), // 2681 = ./src/allPass
  always: require(2660          ), // 2660 = ./src/always
  and: require(2697       ), // 2697 = ./src/and
  any: require(2698       ), // 2698 = ./src/any
  anyPass: require(2700           ), // 2700 = ./src/anyPass
  ap: require(2701      ), // 2701 = ./src/ap
  aperture: require(2702            ), // 2702 = ./src/aperture
  append: require(2705          ), // 2705 = ./src/append
  apply: require(2706         ), // 2706 = ./src/apply
  applySpec: require(2707             ), // 2707 = ./src/applySpec
  ascend: require(2709          ), // 2709 = ./src/ascend
  assoc: require(2710         ), // 2710 = ./src/assoc
  assocPath: require(2711             ), // 2711 = ./src/assocPath
  binary: require(2713          ), // 2713 = ./src/binary
  bind: require(2688        ), // 2688 = ./src/bind
  both: require(2715        ), // 2715 = ./src/both
  call: require(2719        ), // 2719 = ./src/call
  chain: require(2721         ), // 2721 = ./src/chain
  clamp: require(2726         ), // 2726 = ./src/clamp
  clone: require(2727         ), // 2727 = ./src/clone
  comparator: require(2731              ), // 2731 = ./src/comparator
  complement: require(2732              ), // 2732 = ./src/complement
  compose: require(2734           ), // 2734 = ./src/compose
  composeK: require(2741            ), // 2741 = ./src/composeK
  composeP: require(2742            ), // 2742 = ./src/composeP
  concat: require(2745          ), // 2745 = ./src/concat
  cond: require(2763        ), // 2763 = ./src/cond
  construct: require(2764             ), // 2764 = ./src/construct
  constructN: require(2765              ), // 2765 = ./src/constructN
  contains: require(2766            ), // 2766 = ./src/contains
  converge: require(2767            ), // 2767 = ./src/converge
  countBy: require(2768           ), // 2768 = ./src/countBy
  curry: require(2720         ), // 2720 = ./src/curry
  curryN: require(2669          ), // 2669 = ./src/curryN
  dec: require(2771       ), // 2771 = ./src/dec
  descend: require(2772           ), // 2772 = ./src/descend
  defaultTo: require(2773             ), // 2773 = ./src/defaultTo
  difference: require(2774              ), // 2774 = ./src/difference
  differenceWith: require(2775                  ), // 2775 = ./src/differenceWith
  dissoc: require(2777          ), // 2777 = ./src/dissoc
  dissocPath: require(2778              ), // 2778 = ./src/dissocPath
  divide: require(2779          ), // 2779 = ./src/divide
  drop: require(2780        ), // 2780 = ./src/drop
  dropLast: require(2782            ), // 2782 = ./src/dropLast
  dropLastWhile: require(2787                 ), // 2787 = ./src/dropLastWhile
  dropRepeats: require(2790               ), // 2790 = ./src/dropRepeats
  dropRepeatsWith: require(2792                   ), // 2792 = ./src/dropRepeatsWith
  dropWhile: require(2795             ), // 2795 = ./src/dropWhile
  either: require(2797          ), // 2797 = ./src/either
  empty: require(2799         ), // 2799 = ./src/empty
  eqBy: require(2800        ), // 2800 = ./src/eqBy
  eqProps: require(2801           ), // 2801 = ./src/eqProps
  equals: require(2750          ), // 2750 = ./src/equals
  evolve: require(2802          ), // 2802 = ./src/evolve
  filter: require(2759          ), // 2759 = ./src/filter
  find: require(2803        ), // 2803 = ./src/find
  findIndex: require(2805             ), // 2805 = ./src/findIndex
  findLast: require(2807            ), // 2807 = ./src/findLast
  findLastIndex: require(2809                 ), // 2809 = ./src/findLastIndex
  flatten: require(2811           ), // 2811 = ./src/flatten
  flip: require(2812        ), // 2812 = ./src/flip
  forEach: require(2813           ), // 2813 = ./src/forEach
  forEachObjIndexed: require(2814                     ), // 2814 = ./src/forEachObjIndexed
  fromPairs: require(2815             ), // 2815 = ./src/fromPairs
  groupBy: require(2816           ), // 2816 = ./src/groupBy
  groupWith: require(2817             ), // 2817 = ./src/groupWith
  gt: require(2818      ), // 2818 = ./src/gt
  gte: require(2819       ), // 2819 = ./src/gte
  has: require(2820       ), // 2820 = ./src/has
  hasIn: require(2821         ), // 2821 = ./src/hasIn
  head: require(2822        ), // 2822 = ./src/head
  identical: require(2754             ), // 2754 = ./src/identical
  identity: require(2823            ), // 2823 = ./src/identity
  ifElse: require(2825          ), // 2825 = ./src/ifElse
  inc: require(2826       ), // 2826 = ./src/inc
  indexBy: require(2827           ), // 2827 = ./src/indexBy
  indexOf: require(2828           ), // 2828 = ./src/indexOf
  init: require(2829        ), // 2829 = ./src/init
  insert: require(2830          ), // 2830 = ./src/insert
  insertAll: require(2831             ), // 2831 = ./src/insertAll
  intersection: require(2832                ), // 2832 = ./src/intersection
  intersectionWith: require(2836                    ), // 2836 = ./src/intersectionWith
  intersperse: require(2838               ), // 2838 = ./src/intersperse
  into: require(2839        ), // 2839 = ./src/into
  invert: require(2844          ), // 2844 = ./src/invert
  invertObj: require(2845             ), // 2845 = ./src/invertObj
  invoker: require(2846           ), // 2846 = ./src/invoker
  is: require(2847      ), // 2847 = ./src/is
  isArrayLike: require(2689               ), // 2689 = ./src/isArrayLike
  isEmpty: require(2848           ), // 2848 = ./src/isEmpty
  isNil: require(2849         ), // 2849 = ./src/isNil
  join: require(2850        ), // 2850 = ./src/join
  juxt: require(2851        ), // 2851 = ./src/juxt
  keys: require(2692        ), // 2692 = ./src/keys
  keysIn: require(2852          ), // 2852 = ./src/keysIn
  last: require(2793        ), // 2793 = ./src/last
  lastIndexOf: require(2853               ), // 2853 = ./src/lastIndexOf
  length: require(2854          ), // 2854 = ./src/length
  lens: require(2856        ), // 2856 = ./src/lens
  lensIndex: require(2857             ), // 2857 = ./src/lensIndex
  lensPath: require(2859            ), // 2859 = ./src/lensPath
  lensProp: require(2861            ), // 2861 = ./src/lensProp
  lift: require(2717        ), // 2717 = ./src/lift
  liftN: require(2718         ), // 2718 = ./src/liftN
  lt: require(2862      ), // 2862 = ./src/lt
  lte: require(2863       ), // 2863 = ./src/lte
  map: require(2684       ), // 2684 = ./src/map
  mapAccum: require(2864            ), // 2864 = ./src/mapAccum
  mapAccumRight: require(2865                 ), // 2865 = ./src/mapAccumRight
  mapObjIndexed: require(2866                 ), // 2866 = ./src/mapObjIndexed
  match: require(2867         ), // 2867 = ./src/match
  mathMod: require(2868           ), // 2868 = ./src/mathMod
  max: require(2682       ), // 2682 = ./src/max
  maxBy: require(2869         ), // 2869 = ./src/maxBy
  mean: require(2870        ), // 2870 = ./src/mean
  median: require(2872          ), // 2872 = ./src/median
  memoize: require(2873           ), // 2873 = ./src/memoize
  merge: require(2874         ), // 2874 = ./src/merge
  mergeAll: require(2875            ), // 2875 = ./src/mergeAll
  mergeWith: require(2876             ), // 2876 = ./src/mergeWith
  mergeWithKey: require(2877                ), // 2877 = ./src/mergeWithKey
  min: require(2878       ), // 2878 = ./src/min
  minBy: require(2879         ), // 2879 = ./src/minBy
  modulo: require(2880          ), // 2880 = ./src/modulo
  multiply: require(2881            ), // 2881 = ./src/multiply
  nAry: require(2714        ), // 2714 = ./src/nAry
  negate: require(2882          ), // 2882 = ./src/negate
  none: require(2883        ), // 2883 = ./src/none
  not: require(2733       ), // 2733 = ./src/not
  nth: require(2794       ), // 2794 = ./src/nth
  nthArg: require(2884          ), // 2884 = ./src/nthArg
  objOf: require(2843         ), // 2843 = ./src/objOf
  of: require(2885      ), // 2885 = ./src/of
  omit: require(2887        ), // 2887 = ./src/omit
  once: require(2888        ), // 2888 = ./src/once
  or: require(2798      ), // 2798 = ./src/or
  over: require(2889        ), // 2889 = ./src/over
  pair: require(2890        ), // 2890 = ./src/pair
  partial: require(2891           ), // 2891 = ./src/partial
  partialRight: require(2893                ), // 2893 = ./src/partialRight
  partition: require(2894             ), // 2894 = ./src/partition
  path: require(2860        ), // 2860 = ./src/path
  pathEq: require(2895          ), // 2895 = ./src/pathEq
  pathOr: require(2896          ), // 2896 = ./src/pathOr
  pathSatisfies: require(2897                 ), // 2897 = ./src/pathSatisfies
  pick: require(2898        ), // 2898 = ./src/pick
  pickAll: require(2899           ), // 2899 = ./src/pickAll
  pickBy: require(2900          ), // 2900 = ./src/pickBy
  pipe: require(2735        ), // 2735 = ./src/pipe
  pipeK: require(2901         ), // 2901 = ./src/pipeK
  pipeP: require(2743         ), // 2743 = ./src/pipeP
  pluck: require(2683         ), // 2683 = ./src/pluck
  prepend: require(2902           ), // 2902 = ./src/prepend
  product: require(2903           ), // 2903 = ./src/product
  project: require(2904           ), // 2904 = ./src/project
  prop: require(2695        ), // 2695 = ./src/prop
  propEq: require(2906          ), // 2906 = ./src/propEq
  propIs: require(2907          ), // 2907 = ./src/propIs
  propOr: require(2908          ), // 2908 = ./src/propOr
  propSatisfies: require(2909                 ), // 2909 = ./src/propSatisfies
  props: require(2910         ), // 2910 = ./src/props
  range: require(2911         ), // 2911 = ./src/range
  reduce: require(2696          ), // 2696 = ./src/reduce
  reduceBy: require(2769            ), // 2769 = ./src/reduceBy
  reduceRight: require(2912               ), // 2912 = ./src/reduceRight
  reduceWhile: require(2913               ), // 2913 = ./src/reduceWhile
  reduced: require(2914           ), // 2914 = ./src/reduced
  reject: require(2757          ), // 2757 = ./src/reject
  remove: require(2915          ), // 2915 = ./src/remove
  repeat: require(2916          ), // 2916 = ./src/repeat
  replace: require(2918           ), // 2918 = ./src/replace
  reverse: require(2740           ), // 2740 = ./src/reverse
  scan: require(2919        ), // 2919 = ./src/scan
  sequence: require(2920            ), // 2920 = ./src/sequence
  set: require(2921       ), // 2921 = ./src/set
  slice: require(2739         ), // 2739 = ./src/slice
  sort: require(2922        ), // 2922 = ./src/sort
  sortBy: require(2923          ), // 2923 = ./src/sortBy
  sortWith: require(2924            ), // 2924 = ./src/sortWith
  split: require(2925         ), // 2925 = ./src/split
  splitAt: require(2926           ), // 2926 = ./src/splitAt
  splitEvery: require(2927              ), // 2927 = ./src/splitEvery
  splitWhen: require(2928             ), // 2928 = ./src/splitWhen
  subtract: require(2929            ), // 2929 = ./src/subtract
  sum: require(2871       ), // 2871 = ./src/sum
  symmetricDifference: require(2930                       ), // 2930 = ./src/symmetricDifference
  symmetricDifferenceWith: require(2931                           ), // 2931 = ./src/symmetricDifferenceWith
  tail: require(2737        ), // 2737 = ./src/tail
  take: require(2784        ), // 2784 = ./src/take
  takeLast: require(2932            ), // 2932 = ./src/takeLast
  takeLastWhile: require(2933                 ), // 2933 = ./src/takeLastWhile
  takeWhile: require(2934             ), // 2934 = ./src/takeWhile
  tap: require(2936       ), // 2936 = ./src/tap
  test: require(2937        ), // 2937 = ./src/test
  times: require(2917         ), // 2917 = ./src/times
  toLower: require(2939           ), // 2939 = ./src/toLower
  toPairs: require(2940           ), // 2940 = ./src/toPairs
  toPairsIn: require(2941             ), // 2941 = ./src/toPairsIn
  toString: require(2746            ), // 2746 = ./src/toString
  toUpper: require(2942           ), // 2942 = ./src/toUpper
  transduce: require(2943             ), // 2943 = ./src/transduce
  transpose: require(2944             ), // 2944 = ./src/transpose
  traverse: require(2945            ), // 2945 = ./src/traverse
  trim: require(2946        ), // 2946 = ./src/trim
  tryCatch: require(2947            ), // 2947 = ./src/tryCatch
  type: require(2730        ), // 2730 = ./src/type
  unapply: require(2948           ), // 2948 = ./src/unapply
  unary: require(2949         ), // 2949 = ./src/unary
  uncurryN: require(2950            ), // 2950 = ./src/uncurryN
  unfold: require(2951          ), // 2951 = ./src/unfold
  union: require(2952         ), // 2952 = ./src/union
  unionWith: require(2953             ), // 2953 = ./src/unionWith
  uniq: require(2833        ), // 2833 = ./src/uniq
  uniqBy: require(2834          ), // 2834 = ./src/uniqBy
  uniqWith: require(2837            ), // 2837 = ./src/uniqWith
  unless: require(2954          ), // 2954 = ./src/unless
  unnest: require(2955          ), // 2955 = ./src/unnest
  until: require(2956         ), // 2956 = ./src/until
  update: require(2858          ), // 2858 = ./src/update
  useWith: require(2905           ), // 2905 = ./src/useWith
  values: require(2708          ), // 2708 = ./src/values
  valuesIn: require(2957            ), // 2957 = ./src/valuesIn
  view: require(2958        ), // 2958 = ./src/view
  when: require(2959        ), // 2959 = ./src/when
  where: require(2960         ), // 2960 = ./src/where
  whereEq: require(2961           ), // 2961 = ./src/whereEq
  without: require(2962           ), // 2962 = ./src/without
  xprod: require(2963         ), // 2963 = ./src/xprod
  zip: require(2964       ), // 2964 = ./src/zip
  zipObj: require(2965          ), // 2965 = ./src/zipObj
  zipWith: require(2966           ) // 2966 = ./src/zipWith
};
}, 2658, null, "ramda/index.js");
__d(/* ramda/src/F.js */function(global, require, module, exports) {var always = require(2660      ); // 2660 = ./always

module.exports = always(false);
}, 2659, null, "ramda/src/F.js");
__d(/* ramda/src/always.js */function(global, require, module, exports) {var _curry1 = require(2661                ); // 2661 = ./internal/_curry1

module.exports = _curry1(function always(val) {
  return function () {
    return val;
  };
});
}, 2660, null, "ramda/src/always.js");
__d(/* ramda/src/internal/_curry1.js */function(global, require, module, exports) {var _isPlaceholder = require(2662              ); // 2662 = ./_isPlaceholder

module.exports = function _curry1(fn) {
  return function f1(a) {
    if (arguments.length === 0 || _isPlaceholder(a)) {
      return f1;
    } else {
      return fn.apply(this, arguments);
    }
  };
};
}, 2661, null, "ramda/src/internal/_curry1.js");
__d(/* ramda/src/internal/_isPlaceholder.js */function(global, require, module, exports) {module.exports = function _isPlaceholder(a) {
       return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;
};
}, 2662, null, "ramda/src/internal/_isPlaceholder.js");
__d(/* ramda/src/T.js */function(global, require, module, exports) {var always = require(2660      ); // 2660 = ./always

module.exports = always(true);
}, 2663, null, "ramda/src/T.js");
__d(/* ramda/src/__.js */function(global, require, module, exports) {
module.exports = { '@@functional/placeholder': true };
}, 2664, null, "ramda/src/__.js");
__d(/* ramda/src/add.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2

module.exports = _curry2(function add(a, b) {
  return Number(a) + Number(b);
});
}, 2665, null, "ramda/src/add.js");
__d(/* ramda/src/internal/_curry2.js */function(global, require, module, exports) {var _curry1 = require(2661       ); // 2661 = ./_curry1
var _isPlaceholder = require(2662              ); // 2662 = ./_isPlaceholder

module.exports = function _curry2(fn) {
  return function f2(a, b) {
    switch (arguments.length) {
      case 0:
        return f2;
      case 1:
        return _isPlaceholder(a) ? f2 : _curry1(function (_b) {
          return fn(a, _b);
        });
      default:
        return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {
          return fn(_a, b);
        }) : _isPlaceholder(b) ? _curry1(function (_b) {
          return fn(a, _b);
        }) : fn(a, b);
    }
  };
};
}, 2666, null, "ramda/src/internal/_curry2.js");
__d(/* ramda/src/addIndex.js */function(global, require, module, exports) {var _concat = require(2668                ); // 2668 = ./internal/_concat
var _curry1 = require(2661                ); // 2661 = ./internal/_curry1
var curryN = require(2669      ); // 2669 = ./curryN

module.exports = _curry1(function addIndex(fn) {
  return curryN(fn.length, function () {
    var idx = 0;
    var origFn = arguments[0];
    var list = arguments[arguments.length - 1];
    var args = Array.prototype.slice.call(arguments, 0);
    args[0] = function () {
      var result = origFn.apply(this, _concat(arguments, [idx, list]));
      idx += 1;
      return result;
    };
    return fn.apply(this, args);
  });
});
}, 2667, null, "ramda/src/addIndex.js");
__d(/* ramda/src/internal/_concat.js */function(global, require, module, exports) {
module.exports = function _concat(set1, set2) {
  set1 = set1 || [];
  set2 = set2 || [];
  var idx;
  var len1 = set1.length;
  var len2 = set2.length;
  var result = [];

  idx = 0;
  while (idx < len1) {
    result[result.length] = set1[idx];
    idx += 1;
  }
  idx = 0;
  while (idx < len2) {
    result[result.length] = set2[idx];
    idx += 1;
  }
  return result;
};
}, 2668, null, "ramda/src/internal/_concat.js");
__d(/* ramda/src/curryN.js */function(global, require, module, exports) {var _arity = require(2670               ); // 2670 = ./internal/_arity
var _curry1 = require(2661                ); // 2661 = ./internal/_curry1
var _curry2 = require(2666                ); // 2666 = ./internal/_curry2
var _curryN = require(2671                ); // 2671 = ./internal/_curryN

module.exports = _curry2(function curryN(length, fn) {
  if (length === 1) {
    return _curry1(fn);
  }
  return _arity(length, _curryN(length, [], fn));
});
}, 2669, null, "ramda/src/curryN.js");
__d(/* ramda/src/internal/_arity.js */function(global, require, module, exports) {module.exports = function _arity(n, fn) {
  switch (n) {
    case 0:
      return function () {
        return fn.apply(this, arguments);
      };
    case 1:
      return function (a0) {
        return fn.apply(this, arguments);
      };
    case 2:
      return function (a0, a1) {
        return fn.apply(this, arguments);
      };
    case 3:
      return function (a0, a1, a2) {
        return fn.apply(this, arguments);
      };
    case 4:
      return function (a0, a1, a2, a3) {
        return fn.apply(this, arguments);
      };
    case 5:
      return function (a0, a1, a2, a3, a4) {
        return fn.apply(this, arguments);
      };
    case 6:
      return function (a0, a1, a2, a3, a4, a5) {
        return fn.apply(this, arguments);
      };
    case 7:
      return function (a0, a1, a2, a3, a4, a5, a6) {
        return fn.apply(this, arguments);
      };
    case 8:
      return function (a0, a1, a2, a3, a4, a5, a6, a7) {
        return fn.apply(this, arguments);
      };
    case 9:
      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {
        return fn.apply(this, arguments);
      };
    case 10:
      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {
        return fn.apply(this, arguments);
      };
    default:
      throw new Error('First argument to _arity must be a non-negative integer no greater than ten');
  }
};
}, 2670, null, "ramda/src/internal/_arity.js");
__d(/* ramda/src/internal/_curryN.js */function(global, require, module, exports) {var _arity = require(2670      ); // 2670 = ./_arity
var _isPlaceholder = require(2662              ); // 2662 = ./_isPlaceholder

module.exports = function _curryN(length, received, fn) {
  return function () {
    var combined = [];
    var argsIdx = 0;
    var left = length;
    var combinedIdx = 0;
    while (combinedIdx < received.length || argsIdx < arguments.length) {
      var result;
      if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {
        result = received[combinedIdx];
      } else {
        result = arguments[argsIdx];
        argsIdx += 1;
      }
      combined[combinedIdx] = result;
      if (!_isPlaceholder(result)) {
        left -= 1;
      }
      combinedIdx += 1;
    }
    return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));
  };
};
}, 2671, null, "ramda/src/internal/_curryN.js");
__d(/* ramda/src/adjust.js */function(global, require, module, exports) {var _concat = require(2668                ); // 2668 = ./internal/_concat
var _curry3 = require(2673                ); // 2673 = ./internal/_curry3

module.exports = _curry3(function adjust(fn, idx, list) {
  if (idx >= list.length || idx < -list.length) {
    return list;
  }
  var start = idx < 0 ? list.length : 0;
  var _idx = start + idx;
  var _list = _concat(list);
  _list[_idx] = fn(list[_idx]);
  return _list;
});
}, 2672, null, "ramda/src/adjust.js");
__d(/* ramda/src/internal/_curry3.js */function(global, require, module, exports) {var _curry1 = require(2661       ); // 2661 = ./_curry1
var _curry2 = require(2666       ); // 2666 = ./_curry2
var _isPlaceholder = require(2662              ); // 2662 = ./_isPlaceholder

module.exports = function _curry3(fn) {
  return function f3(a, b, c) {
    switch (arguments.length) {
      case 0:
        return f3;
      case 1:
        return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {
          return fn(a, _b, _c);
        });
      case 2:
        return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {
          return fn(_a, b, _c);
        }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {
          return fn(a, _b, _c);
        }) : _curry1(function (_c) {
          return fn(a, b, _c);
        });
      default:
        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {
          return fn(_a, _b, c);
        }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {
          return fn(_a, b, _c);
        }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {
          return fn(a, _b, _c);
        }) : _isPlaceholder(a) ? _curry1(function (_a) {
          return fn(_a, b, c);
        }) : _isPlaceholder(b) ? _curry1(function (_b) {
          return fn(a, _b, c);
        }) : _isPlaceholder(c) ? _curry1(function (_c) {
          return fn(a, b, _c);
        }) : fn(a, b, c);
    }
  };
};
}, 2673, null, "ramda/src/internal/_curry3.js");
__d(/* ramda/src/all.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2
var _dispatchable = require(2675                      ); // 2675 = ./internal/_dispatchable
var _xall = require(2678              ); // 2678 = ./internal/_xall

module.exports = _curry2(_dispatchable(['all'], _xall, function all(fn, list) {
  var idx = 0;
  while (idx < list.length) {
    if (!fn(list[idx])) {
      return false;
    }
    idx += 1;
  }
  return true;
}));
}, 2674, null, "ramda/src/all.js");
__d(/* ramda/src/internal/_dispatchable.js */function(global, require, module, exports) {var _isArray = require(2676        ); // 2676 = ./_isArray
var _isTransformer = require(2677              ); // 2677 = ./_isTransformer

module.exports = function _dispatchable(methodNames, xf, fn) {
  return function () {
    if (arguments.length === 0) {
      return fn();
    }
    var args = Array.prototype.slice.call(arguments, 0);
    var obj = args.pop();
    if (!_isArray(obj)) {
      var idx = 0;
      while (idx < methodNames.length) {
        if (typeof obj[methodNames[idx]] === 'function') {
          return obj[methodNames[idx]].apply(obj, args);
        }
        idx += 1;
      }
      if (_isTransformer(obj)) {
        var transducer = xf.apply(null, args);
        return transducer(obj);
      }
    }
    return fn.apply(this, arguments);
  };
};
}, 2675, null, "ramda/src/internal/_dispatchable.js");
__d(/* ramda/src/internal/_isArray.js */function(global, require, module, exports) {
module.exports = Array.isArray || function _isArray(val) {
  return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';
};
}, 2676, null, "ramda/src/internal/_isArray.js");
__d(/* ramda/src/internal/_isTransformer.js */function(global, require, module, exports) {module.exports = function _isTransformer(obj) {
  return typeof obj['@@transducer/step'] === 'function';
};
}, 2677, null, "ramda/src/internal/_isTransformer.js");
__d(/* ramda/src/internal/_xall.js */function(global, require, module, exports) {var _curry2 = require(2666       ); // 2666 = ./_curry2
var _reduced = require(2679        ); // 2679 = ./_reduced
var _xfBase = require(2680       ); // 2680 = ./_xfBase

module.exports = function () {
  function XAll(f, xf) {
    this.xf = xf;
    this.f = f;
    this.all = true;
  }
  XAll.prototype['@@transducer/init'] = _xfBase.init;
  XAll.prototype['@@transducer/result'] = function (result) {
    if (this.all) {
      result = this.xf['@@transducer/step'](result, true);
    }
    return this.xf['@@transducer/result'](result);
  };
  XAll.prototype['@@transducer/step'] = function (result, input) {
    if (!this.f(input)) {
      this.all = false;
      result = _reduced(this.xf['@@transducer/step'](result, false));
    }
    return result;
  };

  return _curry2(function _xall(f, xf) {
    return new XAll(f, xf);
  });
}();
}, 2678, null, "ramda/src/internal/_xall.js");
__d(/* ramda/src/internal/_reduced.js */function(global, require, module, exports) {module.exports = function _reduced(x) {
  return x && x['@@transducer/reduced'] ? x : {
    '@@transducer/value': x,
    '@@transducer/reduced': true
  };
};
}, 2679, null, "ramda/src/internal/_reduced.js");
__d(/* ramda/src/internal/_xfBase.js */function(global, require, module, exports) {module.exports = {
  init: function init() {
    return this.xf['@@transducer/init']();
  },
  result: function result(_result) {
    return this.xf['@@transducer/result'](_result);
  }
};
}, 2680, null, "ramda/src/internal/_xfBase.js");
__d(/* ramda/src/allPass.js */function(global, require, module, exports) {var _curry1 = require(2661                ); // 2661 = ./internal/_curry1
var curryN = require(2669      ); // 2669 = ./curryN
var max = require(2682   ); // 2682 = ./max
var pluck = require(2683     ); // 2683 = ./pluck
var reduce = require(2696      ); // 2696 = ./reduce

module.exports = _curry1(function allPass(preds) {
  return curryN(reduce(max, 0, pluck('length', preds)), function () {
    var idx = 0;
    var len = preds.length;
    while (idx < len) {
      if (!preds[idx].apply(this, arguments)) {
        return false;
      }
      idx += 1;
    }
    return true;
  });
});
}, 2681, null, "ramda/src/allPass.js");
__d(/* ramda/src/max.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2

module.exports = _curry2(function max(a, b) {
  return b > a ? b : a;
});
}, 2682, null, "ramda/src/max.js");
__d(/* ramda/src/pluck.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2
var map = require(2684   ); // 2684 = ./map
var prop = require(2695    ); // 2695 = ./prop

module.exports = _curry2(function pluck(p, list) {
  return map(prop(p), list);
});
}, 2683, null, "ramda/src/pluck.js");
__d(/* ramda/src/map.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2
var _dispatchable = require(2675                      ); // 2675 = ./internal/_dispatchable
var _map = require(2685             ); // 2685 = ./internal/_map
var _reduce = require(2686                ); // 2686 = ./internal/_reduce
var _xmap = require(2691              ); // 2691 = ./internal/_xmap
var curryN = require(2669      ); // 2669 = ./curryN
var keys = require(2692    ); // 2692 = ./keys

module.exports = _curry2(_dispatchable(['map'], _xmap, function map(fn, functor) {
  switch (Object.prototype.toString.call(functor)) {
    case '[object Function]':
      return curryN(functor.length, function () {
        return fn.call(this, functor.apply(this, arguments));
      });
    case '[object Object]':
      return _reduce(function (acc, key) {
        acc[key] = fn(functor[key]);
        return acc;
      }, {}, keys(functor));
    default:
      return _map(fn, functor);
  }
}));
}, 2684, null, "ramda/src/map.js");
__d(/* ramda/src/internal/_map.js */function(global, require, module, exports) {module.exports = function _map(fn, functor) {
  var idx = 0;
  var len = functor.length;
  var result = Array(len);
  while (idx < len) {
    result[idx] = fn(functor[idx]);
    idx += 1;
  }
  return result;
};
}, 2685, null, "ramda/src/internal/_map.js");
__d(/* ramda/src/internal/_reduce.js */function(global, require, module, exports) {var _xwrap = require(2687      ); // 2687 = ./_xwrap
var bind = require(2688     ); // 2688 = ../bind
var isArrayLike = require(2689            ); // 2689 = ../isArrayLike

module.exports = function () {
  function _arrayReduce(xf, acc, list) {
    var idx = 0;
    var len = list.length;
    while (idx < len) {
      acc = xf['@@transducer/step'](acc, list[idx]);
      if (acc && acc['@@transducer/reduced']) {
        acc = acc['@@transducer/value'];
        break;
      }
      idx += 1;
    }
    return xf['@@transducer/result'](acc);
  }

  function _iterableReduce(xf, acc, iter) {
    var step = iter.next();
    while (!step.done) {
      acc = xf['@@transducer/step'](acc, step.value);
      if (acc && acc['@@transducer/reduced']) {
        acc = acc['@@transducer/value'];
        break;
      }
      step = iter.next();
    }
    return xf['@@transducer/result'](acc);
  }

  function _methodReduce(xf, acc, obj) {
    return xf['@@transducer/result'](obj.reduce(bind(xf['@@transducer/step'], xf), acc));
  }

  var symIterator = typeof Symbol !== 'undefined' ? typeof Symbol === 'function' ? Symbol.iterator : '@@iterator' : '@@iterator';
  return function _reduce(fn, acc, list) {
    if (typeof fn === 'function') {
      fn = _xwrap(fn);
    }
    if (isArrayLike(list)) {
      return _arrayReduce(fn, acc, list);
    }
    if (typeof list.reduce === 'function') {
      return _methodReduce(fn, acc, list);
    }
    if (list[symIterator] != null) {
      return _iterableReduce(fn, acc, list[symIterator]());
    }
    if (typeof list.next === 'function') {
      return _iterableReduce(fn, acc, list);
    }
    throw new TypeError('reduce: list must be array or iterable');
  };
}();
}, 2686, null, "ramda/src/internal/_reduce.js");
__d(/* ramda/src/internal/_xwrap.js */function(global, require, module, exports) {module.exports = function () {
  function XWrap(fn) {
    this.f = fn;
  }
  XWrap.prototype['@@transducer/init'] = function () {
    throw new Error('init not implemented on XWrap');
  };
  XWrap.prototype['@@transducer/result'] = function (acc) {
    return acc;
  };
  XWrap.prototype['@@transducer/step'] = function (acc, x) {
    return this.f(acc, x);
  };

  return function _xwrap(fn) {
    return new XWrap(fn);
  };
}();
}, 2687, null, "ramda/src/internal/_xwrap.js");
__d(/* ramda/src/bind.js */function(global, require, module, exports) {var _arity = require(2670               ); // 2670 = ./internal/_arity
var _curry2 = require(2666                ); // 2666 = ./internal/_curry2

module.exports = _curry2(function bind(fn, thisObj) {
  return _arity(fn.length, function () {
    return fn.apply(thisObj, arguments);
  });
});
}, 2688, null, "ramda/src/bind.js");
__d(/* ramda/src/isArrayLike.js */function(global, require, module, exports) {var _curry1 = require(2661                ); // 2661 = ./internal/_curry1
var _isArray = require(2676                 ); // 2676 = ./internal/_isArray
var _isString = require(2690                  ); // 2690 = ./internal/_isString

module.exports = _curry1(function isArrayLike(x) {
  if (_isArray(x)) {
    return true;
  }
  if (!x) {
    return false;
  }
  if (typeof x !== 'object') {
    return false;
  }
  if (_isString(x)) {
    return false;
  }
  if (x.nodeType === 1) {
    return !!x.length;
  }
  if (x.length === 0) {
    return true;
  }
  if (x.length > 0) {
    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);
  }
  return false;
});
}, 2689, null, "ramda/src/isArrayLike.js");
__d(/* ramda/src/internal/_isString.js */function(global, require, module, exports) {module.exports = function _isString(x) {
  return Object.prototype.toString.call(x) === '[object String]';
};
}, 2690, null, "ramda/src/internal/_isString.js");
__d(/* ramda/src/internal/_xmap.js */function(global, require, module, exports) {var _curry2 = require(2666       ); // 2666 = ./_curry2
var _xfBase = require(2680       ); // 2680 = ./_xfBase

module.exports = function () {
  function XMap(f, xf) {
    this.xf = xf;
    this.f = f;
  }
  XMap.prototype['@@transducer/init'] = _xfBase.init;
  XMap.prototype['@@transducer/result'] = _xfBase.result;
  XMap.prototype['@@transducer/step'] = function (result, input) {
    return this.xf['@@transducer/step'](result, this.f(input));
  };

  return _curry2(function _xmap(f, xf) {
    return new XMap(f, xf);
  });
}();
}, 2691, null, "ramda/src/internal/_xmap.js");
__d(/* ramda/src/keys.js */function(global, require, module, exports) {var _curry1 = require(2661                ); // 2661 = ./internal/_curry1
var _has = require(2693             ); // 2693 = ./internal/_has
var _isArguments = require(2694                     ); // 2694 = ./internal/_isArguments

module.exports = function () {
  var hasEnumBug = !{ toString: null }.propertyIsEnumerable('toString');
  var nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];

  var hasArgsEnumBug = function () {
    'use strict';

    return arguments.propertyIsEnumerable('length');
  }();

  var contains = function contains(list, item) {
    var idx = 0;
    while (idx < list.length) {
      if (list[idx] === item) {
        return true;
      }
      idx += 1;
    }
    return false;
  };

  return typeof Object.keys === 'function' && !hasArgsEnumBug ? _curry1(function keys(obj) {
    return Object(obj) !== obj ? [] : Object.keys(obj);
  }) : _curry1(function keys(obj) {
    if (Object(obj) !== obj) {
      return [];
    }
    var prop, nIdx;
    var ks = [];
    var checkArgsLength = hasArgsEnumBug && _isArguments(obj);
    for (prop in obj) {
      if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {
        ks[ks.length] = prop;
      }
    }
    if (hasEnumBug) {
      nIdx = nonEnumerableProps.length - 1;
      while (nIdx >= 0) {
        prop = nonEnumerableProps[nIdx];
        if (_has(prop, obj) && !contains(ks, prop)) {
          ks[ks.length] = prop;
        }
        nIdx -= 1;
      }
    }
    return ks;
  });
}();
}, 2692, null, "ramda/src/keys.js");
__d(/* ramda/src/internal/_has.js */function(global, require, module, exports) {module.exports = function _has(prop, obj) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
};
}, 2693, null, "ramda/src/internal/_has.js");
__d(/* ramda/src/internal/_isArguments.js */function(global, require, module, exports) {var _has = require(2693    ); // 2693 = ./_has

module.exports = function () {
  var toString = Object.prototype.toString;
  return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {
    return toString.call(x) === '[object Arguments]';
  } : function _isArguments(x) {
    return _has('callee', x);
  };
}();
}, 2694, null, "ramda/src/internal/_isArguments.js");
__d(/* ramda/src/prop.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2

module.exports = _curry2(function prop(p, obj) {
  return obj[p];
});
}, 2695, null, "ramda/src/prop.js");
__d(/* ramda/src/reduce.js */function(global, require, module, exports) {var _curry3 = require(2673                ); // 2673 = ./internal/_curry3
var _reduce = require(2686                ); // 2686 = ./internal/_reduce

module.exports = _curry3(_reduce);
}, 2696, null, "ramda/src/reduce.js");
__d(/* ramda/src/and.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2

module.exports = _curry2(function and(a, b) {
  return a && b;
});
}, 2697, null, "ramda/src/and.js");
__d(/* ramda/src/any.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2
var _dispatchable = require(2675                      ); // 2675 = ./internal/_dispatchable
var _xany = require(2699              ); // 2699 = ./internal/_xany

module.exports = _curry2(_dispatchable(['any'], _xany, function any(fn, list) {
  var idx = 0;
  while (idx < list.length) {
    if (fn(list[idx])) {
      return true;
    }
    idx += 1;
  }
  return false;
}));
}, 2698, null, "ramda/src/any.js");
__d(/* ramda/src/internal/_xany.js */function(global, require, module, exports) {var _curry2 = require(2666       ); // 2666 = ./_curry2
var _reduced = require(2679        ); // 2679 = ./_reduced
var _xfBase = require(2680       ); // 2680 = ./_xfBase

module.exports = function () {
  function XAny(f, xf) {
    this.xf = xf;
    this.f = f;
    this.any = false;
  }
  XAny.prototype['@@transducer/init'] = _xfBase.init;
  XAny.prototype['@@transducer/result'] = function (result) {
    if (!this.any) {
      result = this.xf['@@transducer/step'](result, false);
    }
    return this.xf['@@transducer/result'](result);
  };
  XAny.prototype['@@transducer/step'] = function (result, input) {
    if (this.f(input)) {
      this.any = true;
      result = _reduced(this.xf['@@transducer/step'](result, true));
    }
    return result;
  };

  return _curry2(function _xany(f, xf) {
    return new XAny(f, xf);
  });
}();
}, 2699, null, "ramda/src/internal/_xany.js");
__d(/* ramda/src/anyPass.js */function(global, require, module, exports) {var _curry1 = require(2661                ); // 2661 = ./internal/_curry1
var curryN = require(2669      ); // 2669 = ./curryN
var max = require(2682   ); // 2682 = ./max
var pluck = require(2683     ); // 2683 = ./pluck
var reduce = require(2696      ); // 2696 = ./reduce

module.exports = _curry1(function anyPass(preds) {
  return curryN(reduce(max, 0, pluck('length', preds)), function () {
    var idx = 0;
    var len = preds.length;
    while (idx < len) {
      if (preds[idx].apply(this, arguments)) {
        return true;
      }
      idx += 1;
    }
    return false;
  });
});
}, 2700, null, "ramda/src/anyPass.js");
__d(/* ramda/src/ap.js */function(global, require, module, exports) {var _concat = require(2668                ); // 2668 = ./internal/_concat
var _curry2 = require(2666                ); // 2666 = ./internal/_curry2
var _reduce = require(2686                ); // 2686 = ./internal/_reduce
var map = require(2684   ); // 2684 = ./map

module.exports = _curry2(function ap(applicative, fn) {
  return typeof applicative.ap === 'function' ? applicative.ap(fn) : typeof applicative === 'function' ? function (x) {
    return applicative(x)(fn(x));
  } : _reduce(function (acc, f) {
    return _concat(acc, map(f, fn));
  }, [], applicative);
});
}, 2701, null, "ramda/src/ap.js");
__d(/* ramda/src/aperture.js */function(global, require, module, exports) {var _aperture = require(2703                  ); // 2703 = ./internal/_aperture
var _curry2 = require(2666                ); // 2666 = ./internal/_curry2
var _dispatchable = require(2675                      ); // 2675 = ./internal/_dispatchable
var _xaperture = require(2704                   ); // 2704 = ./internal/_xaperture

module.exports = _curry2(_dispatchable([], _xaperture, _aperture));
}, 2702, null, "ramda/src/aperture.js");
__d(/* ramda/src/internal/_aperture.js */function(global, require, module, exports) {module.exports = function _aperture(n, list) {
  var idx = 0;
  var limit = list.length - (n - 1);
  var acc = new Array(limit >= 0 ? limit : 0);
  while (idx < limit) {
    acc[idx] = Array.prototype.slice.call(list, idx, idx + n);
    idx += 1;
  }
  return acc;
};
}, 2703, null, "ramda/src/internal/_aperture.js");
__d(/* ramda/src/internal/_xaperture.js */function(global, require, module, exports) {var _concat = require(2668       ); // 2668 = ./_concat
var _curry2 = require(2666       ); // 2666 = ./_curry2
var _xfBase = require(2680       ); // 2680 = ./_xfBase

module.exports = function () {
  function XAperture(n, xf) {
    this.xf = xf;
    this.pos = 0;
    this.full = false;
    this.acc = new Array(n);
  }
  XAperture.prototype['@@transducer/init'] = _xfBase.init;
  XAperture.prototype['@@transducer/result'] = function (result) {
    this.acc = null;
    return this.xf['@@transducer/result'](result);
  };
  XAperture.prototype['@@transducer/step'] = function (result, input) {
    this.store(input);
    return this.full ? this.xf['@@transducer/step'](result, this.getCopy()) : result;
  };
  XAperture.prototype.store = function (input) {
    this.acc[this.pos] = input;
    this.pos += 1;
    if (this.pos === this.acc.length) {
      this.pos = 0;
      this.full = true;
    }
  };
  XAperture.prototype.getCopy = function () {
    return _concat(Array.prototype.slice.call(this.acc, this.pos), Array.prototype.slice.call(this.acc, 0, this.pos));
  };

  return _curry2(function _xaperture(n, xf) {
    return new XAperture(n, xf);
  });
}();
}, 2704, null, "ramda/src/internal/_xaperture.js");
__d(/* ramda/src/append.js */function(global, require, module, exports) {var _concat = require(2668                ); // 2668 = ./internal/_concat
var _curry2 = require(2666                ); // 2666 = ./internal/_curry2

module.exports = _curry2(function append(el, list) {
  return _concat(list, [el]);
});
}, 2705, null, "ramda/src/append.js");
__d(/* ramda/src/apply.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2

module.exports = _curry2(function apply(fn, args) {
  return fn.apply(this, args);
});
}, 2706, null, "ramda/src/apply.js");
__d(/* ramda/src/applySpec.js */function(global, require, module, exports) {var _curry1 = require(2661                ); // 2661 = ./internal/_curry1
var apply = require(2706     ); // 2706 = ./apply
var curryN = require(2669      ); // 2669 = ./curryN
var map = require(2684   ); // 2684 = ./map
var max = require(2682   ); // 2682 = ./max
var pluck = require(2683     ); // 2683 = ./pluck
var reduce = require(2696      ); // 2696 = ./reduce
var values = require(2708      ); // 2708 = ./values

module.exports = _curry1(function applySpec(spec) {
  spec = map(function (v) {
    return typeof v == 'function' ? v : applySpec(v);
  }, spec);
  return curryN(reduce(max, 0, pluck('length', values(spec))), function () {
    var args = arguments;
    return map(function (f) {
      return apply(f, args);
    }, spec);
  });
});
}, 2707, null, "ramda/src/applySpec.js");
__d(/* ramda/src/values.js */function(global, require, module, exports) {var _curry1 = require(2661                ); // 2661 = ./internal/_curry1
var keys = require(2692    ); // 2692 = ./keys

module.exports = _curry1(function values(obj) {
  var props = keys(obj);
  var len = props.length;
  var vals = [];
  var idx = 0;
  while (idx < len) {
    vals[idx] = obj[props[idx]];
    idx += 1;
  }
  return vals;
});
}, 2708, null, "ramda/src/values.js");
__d(/* ramda/src/ascend.js */function(global, require, module, exports) {var _curry3 = require(2673                ); // 2673 = ./internal/_curry3

module.exports = _curry3(function ascend(fn, a, b) {
  var aa = fn(a);
  var bb = fn(b);
  return aa < bb ? -1 : aa > bb ? 1 : 0;
});
}, 2709, null, "ramda/src/ascend.js");
__d(/* ramda/src/assoc.js */function(global, require, module, exports) {var _curry3 = require(2673                ); // 2673 = ./internal/_curry3

module.exports = _curry3(function assoc(prop, val, obj) {
  var result = {};
  for (var p in obj) {
    result[p] = obj[p];
  }
  result[prop] = val;
  return result;
});
}, 2710, null, "ramda/src/assoc.js");
__d(/* ramda/src/assocPath.js */function(global, require, module, exports) {var _curry3 = require(2673                ); // 2673 = ./internal/_curry3
var _has = require(2693             ); // 2693 = ./internal/_has
var _isArray = require(2676                 ); // 2676 = ./internal/_isArray
var _isInteger = require(2712                   ); // 2712 = ./internal/_isInteger
var assoc = require(2710     ); // 2710 = ./assoc

module.exports = _curry3(function assocPath(path, val, obj) {
  if (path.length === 0) {
    return val;
  }
  var idx = path[0];
  if (path.length > 1) {
    var nextObj = _has(idx, obj) ? obj[idx] : _isInteger(path[1]) ? [] : {};
    val = assocPath(Array.prototype.slice.call(path, 1), val, nextObj);
  }
  if (_isInteger(idx) && _isArray(obj)) {
    var arr = [].concat(obj);
    arr[idx] = val;
    return arr;
  } else {
    return assoc(idx, val, obj);
  }
});
}, 2711, null, "ramda/src/assocPath.js");
__d(/* ramda/src/internal/_isInteger.js */function(global, require, module, exports) {
module.exports = Number.isInteger || function _isInteger(n) {
  return n << 0 === n;
};
}, 2712, null, "ramda/src/internal/_isInteger.js");
__d(/* ramda/src/binary.js */function(global, require, module, exports) {var _curry1 = require(2661                ); // 2661 = ./internal/_curry1
var nAry = require(2714    ); // 2714 = ./nAry

module.exports = _curry1(function binary(fn) {
  return nAry(2, fn);
});
}, 2713, null, "ramda/src/binary.js");
__d(/* ramda/src/nAry.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2

module.exports = _curry2(function nAry(n, fn) {
  switch (n) {
    case 0:
      return function () {
        return fn.call(this);
      };
    case 1:
      return function (a0) {
        return fn.call(this, a0);
      };
    case 2:
      return function (a0, a1) {
        return fn.call(this, a0, a1);
      };
    case 3:
      return function (a0, a1, a2) {
        return fn.call(this, a0, a1, a2);
      };
    case 4:
      return function (a0, a1, a2, a3) {
        return fn.call(this, a0, a1, a2, a3);
      };
    case 5:
      return function (a0, a1, a2, a3, a4) {
        return fn.call(this, a0, a1, a2, a3, a4);
      };
    case 6:
      return function (a0, a1, a2, a3, a4, a5) {
        return fn.call(this, a0, a1, a2, a3, a4, a5);
      };
    case 7:
      return function (a0, a1, a2, a3, a4, a5, a6) {
        return fn.call(this, a0, a1, a2, a3, a4, a5, a6);
      };
    case 8:
      return function (a0, a1, a2, a3, a4, a5, a6, a7) {
        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7);
      };
    case 9:
      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {
        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8);
      };
    case 10:
      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {
        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);
      };
    default:
      throw new Error('First argument to nAry must be a non-negative integer no greater than ten');
  }
});
}, 2714, null, "ramda/src/nAry.js");
__d(/* ramda/src/both.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2
var _isFunction = require(2716                    ); // 2716 = ./internal/_isFunction
var and = require(2697   ); // 2697 = ./and
var lift = require(2717    ); // 2717 = ./lift

module.exports = _curry2(function both(f, g) {
  return _isFunction(f) ? function _both() {
    return f.apply(this, arguments) && g.apply(this, arguments);
  } : lift(and)(f, g);
});
}, 2715, null, "ramda/src/both.js");
__d(/* ramda/src/internal/_isFunction.js */function(global, require, module, exports) {module.exports = function _isFunction(x) {
  return Object.prototype.toString.call(x) === '[object Function]';
};
}, 2716, null, "ramda/src/internal/_isFunction.js");
__d(/* ramda/src/lift.js */function(global, require, module, exports) {var _curry1 = require(2661                ); // 2661 = ./internal/_curry1
var liftN = require(2718     ); // 2718 = ./liftN

module.exports = _curry1(function lift(fn) {
  return liftN(fn.length, fn);
});
}, 2717, null, "ramda/src/lift.js");
__d(/* ramda/src/liftN.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2
var _reduce = require(2686                ); // 2686 = ./internal/_reduce
var ap = require(2701  ); // 2701 = ./ap
var curryN = require(2669      ); // 2669 = ./curryN
var map = require(2684   ); // 2684 = ./map

module.exports = _curry2(function liftN(arity, fn) {
  var lifted = curryN(arity, fn);
  return curryN(arity, function () {
    return _reduce(ap, map(lifted, arguments[0]), Array.prototype.slice.call(arguments, 1));
  });
});
}, 2718, null, "ramda/src/liftN.js");
__d(/* ramda/src/call.js */function(global, require, module, exports) {var curry = require(2720     ); // 2720 = ./curry

module.exports = curry(function call(fn) {
  return fn.apply(this, Array.prototype.slice.call(arguments, 1));
});
}, 2719, null, "ramda/src/call.js");
__d(/* ramda/src/curry.js */function(global, require, module, exports) {var _curry1 = require(2661                ); // 2661 = ./internal/_curry1
var curryN = require(2669      ); // 2669 = ./curryN

module.exports = _curry1(function curry(fn) {
  return curryN(fn.length, fn);
});
}, 2720, null, "ramda/src/curry.js");
__d(/* ramda/src/chain.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2
var _dispatchable = require(2675                      ); // 2675 = ./internal/_dispatchable
var _makeFlat = require(2722                  ); // 2722 = ./internal/_makeFlat
var _xchain = require(2723                ); // 2723 = ./internal/_xchain
var map = require(2684   ); // 2684 = ./map

module.exports = _curry2(_dispatchable(['chain'], _xchain, function chain(fn, monad) {
  if (typeof monad === 'function') {
    return function (x) {
      return fn(monad(x))(x);
    };
  }
  return _makeFlat(false)(map(fn, monad));
}));
}, 2721, null, "ramda/src/chain.js");
__d(/* ramda/src/internal/_makeFlat.js */function(global, require, module, exports) {var isArrayLike = require(2689            ); // 2689 = ../isArrayLike

module.exports = function _makeFlat(recursive) {
  return function flatt(list) {
    var value, jlen, j;
    var result = [];
    var idx = 0;
    var ilen = list.length;

    while (idx < ilen) {
      if (isArrayLike(list[idx])) {
        value = recursive ? flatt(list[idx]) : list[idx];
        j = 0;
        jlen = value.length;
        while (j < jlen) {
          result[result.length] = value[j];
          j += 1;
        }
      } else {
        result[result.length] = list[idx];
      }
      idx += 1;
    }
    return result;
  };
};
}, 2722, null, "ramda/src/internal/_makeFlat.js");
__d(/* ramda/src/internal/_xchain.js */function(global, require, module, exports) {var _curry2 = require(2666       ); // 2666 = ./_curry2
var _flatCat = require(2724        ); // 2724 = ./_flatCat
var map = require(2684    ); // 2684 = ../map

module.exports = _curry2(function _xchain(f, xf) {
  return map(f, _flatCat(xf));
});
}, 2723, null, "ramda/src/internal/_xchain.js");
__d(/* ramda/src/internal/_flatCat.js */function(global, require, module, exports) {var _forceReduced = require(2725             ); // 2725 = ./_forceReduced
var _reduce = require(2686       ); // 2686 = ./_reduce
var _xfBase = require(2680       ); // 2680 = ./_xfBase
var isArrayLike = require(2689            ); // 2689 = ../isArrayLike

module.exports = function () {
  var preservingReduced = function preservingReduced(xf) {
    return {
      '@@transducer/init': _xfBase.init,
      '@@transducer/result': function transducerResult(result) {
        return xf['@@transducer/result'](result);
      },
      '@@transducer/step': function transducerStep(result, input) {
        var ret = xf['@@transducer/step'](result, input);
        return ret['@@transducer/reduced'] ? _forceReduced(ret) : ret;
      }
    };
  };

  return function _xcat(xf) {
    var rxf = preservingReduced(xf);
    return {
      '@@transducer/init': _xfBase.init,
      '@@transducer/result': function transducerResult(result) {
        return rxf['@@transducer/result'](result);
      },
      '@@transducer/step': function transducerStep(result, input) {
        return !isArrayLike(input) ? _reduce(rxf, result, [input]) : _reduce(rxf, result, input);
      }
    };
  };
}();
}, 2724, null, "ramda/src/internal/_flatCat.js");
__d(/* ramda/src/internal/_forceReduced.js */function(global, require, module, exports) {module.exports = function _forceReduced(x) {
  return {
    '@@transducer/value': x,
    '@@transducer/reduced': true
  };
};
}, 2725, null, "ramda/src/internal/_forceReduced.js");
__d(/* ramda/src/clamp.js */function(global, require, module, exports) {var _curry3 = require(2673                ); // 2673 = ./internal/_curry3

module.exports = _curry3(function clamp(min, max, value) {
  if (min > max) {
    throw new Error('min must not be greater than max in clamp(min, max, value)');
  }
  return value < min ? min : value > max ? max : value;
});
}, 2726, null, "ramda/src/clamp.js");
__d(/* ramda/src/clone.js */function(global, require, module, exports) {var _clone = require(2728               ); // 2728 = ./internal/_clone
var _curry1 = require(2661                ); // 2661 = ./internal/_curry1

module.exports = _curry1(function clone(value) {
  return value != null && typeof value.clone === 'function' ? value.clone() : _clone(value, [], [], true);
});
}, 2727, null, "ramda/src/clone.js");
__d(/* ramda/src/internal/_clone.js */function(global, require, module, exports) {var _cloneRegExp = require(2729            ); // 2729 = ./_cloneRegExp
var type = require(2730     ); // 2730 = ../type

module.exports = function _clone(value, refFrom, refTo, deep) {
  var copy = function copy(copiedValue) {
    var len = refFrom.length;
    var idx = 0;
    while (idx < len) {
      if (value === refFrom[idx]) {
        return refTo[idx];
      }
      idx += 1;
    }
    refFrom[idx + 1] = value;
    refTo[idx + 1] = copiedValue;
    for (var key in value) {
      copiedValue[key] = deep ? _clone(value[key], refFrom, refTo, true) : value[key];
    }
    return copiedValue;
  };
  switch (type(value)) {
    case 'Object':
      return copy({});
    case 'Array':
      return copy([]);
    case 'Date':
      return new Date(value.valueOf());
    case 'RegExp':
      return _cloneRegExp(value);
    default:
      return value;
  }
};
}, 2728, null, "ramda/src/internal/_clone.js");
__d(/* ramda/src/internal/_cloneRegExp.js */function(global, require, module, exports) {module.exports = function _cloneRegExp(pattern) {
                                  return new RegExp(pattern.source, (pattern.global ? 'g' : '') + (pattern.ignoreCase ? 'i' : '') + (pattern.multiline ? 'm' : '') + (pattern.sticky ? 'y' : '') + (pattern.unicode ? 'u' : ''));
};
}, 2729, null, "ramda/src/internal/_cloneRegExp.js");
__d(/* ramda/src/type.js */function(global, require, module, exports) {var _curry1 = require(2661                ); // 2661 = ./internal/_curry1

module.exports = _curry1(function type(val) {
  return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);
});
}, 2730, null, "ramda/src/type.js");
__d(/* ramda/src/comparator.js */function(global, require, module, exports) {var _curry1 = require(2661                ); // 2661 = ./internal/_curry1

module.exports = _curry1(function comparator(pred) {
  return function (a, b) {
    return pred(a, b) ? -1 : pred(b, a) ? 1 : 0;
  };
});
}, 2731, null, "ramda/src/comparator.js");
__d(/* ramda/src/complement.js */function(global, require, module, exports) {var lift = require(2717    ); // 2717 = ./lift
var not = require(2733   ); // 2733 = ./not

module.exports = lift(not);
}, 2732, null, "ramda/src/complement.js");
__d(/* ramda/src/not.js */function(global, require, module, exports) {var _curry1 = require(2661                ); // 2661 = ./internal/_curry1

module.exports = _curry1(function not(a) {
  return !a;
});
}, 2733, null, "ramda/src/not.js");
__d(/* ramda/src/compose.js */function(global, require, module, exports) {var pipe = require(2735    ); // 2735 = ./pipe
var reverse = require(2740       ); // 2740 = ./reverse

module.exports = function compose() {
  if (arguments.length === 0) {
    throw new Error('compose requires at least one argument');
  }
  return pipe.apply(this, reverse(arguments));
};
}, 2734, null, "ramda/src/compose.js");
__d(/* ramda/src/pipe.js */function(global, require, module, exports) {var _arity = require(2670               ); // 2670 = ./internal/_arity
var _pipe = require(2736              ); // 2736 = ./internal/_pipe
var reduce = require(2696      ); // 2696 = ./reduce
var tail = require(2737    ); // 2737 = ./tail

module.exports = function pipe() {
  if (arguments.length === 0) {
    throw new Error('pipe requires at least one argument');
  }
  return _arity(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));
};
}, 2735, null, "ramda/src/pipe.js");
__d(/* ramda/src/internal/_pipe.js */function(global, require, module, exports) {module.exports = function _pipe(f, g) {
  return function () {
    return g.call(this, f.apply(this, arguments));
  };
};
}, 2736, null, "ramda/src/internal/_pipe.js");
__d(/* ramda/src/tail.js */function(global, require, module, exports) {var _checkForMethod = require(2738                        ); // 2738 = ./internal/_checkForMethod
var _curry1 = require(2661                ); // 2661 = ./internal/_curry1
var slice = require(2739     ); // 2739 = ./slice

module.exports = _curry1(_checkForMethod('tail', slice(1, Infinity)));
}, 2737, null, "ramda/src/tail.js");
__d(/* ramda/src/internal/_checkForMethod.js */function(global, require, module, exports) {var _isArray = require(2676        ); // 2676 = ./_isArray

module.exports = function _checkForMethod(methodname, fn) {
  return function () {
    var length = arguments.length;
    if (length === 0) {
      return fn();
    }
    var obj = arguments[length - 1];
    return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));
  };
};
}, 2738, null, "ramda/src/internal/_checkForMethod.js");
__d(/* ramda/src/slice.js */function(global, require, module, exports) {var _checkForMethod = require(2738                        ); // 2738 = ./internal/_checkForMethod
var _curry3 = require(2673                ); // 2673 = ./internal/_curry3

module.exports = _curry3(_checkForMethod('slice', function slice(fromIndex, toIndex, list) {
  return Array.prototype.slice.call(list, fromIndex, toIndex);
}));
}, 2739, null, "ramda/src/slice.js");
__d(/* ramda/src/reverse.js */function(global, require, module, exports) {var _curry1 = require(2661                ); // 2661 = ./internal/_curry1
var _isString = require(2690                  ); // 2690 = ./internal/_isString

module.exports = _curry1(function reverse(list) {
  return _isString(list) ? list.split('').reverse().join('') : Array.prototype.slice.call(list, 0).reverse();
});
}, 2740, null, "ramda/src/reverse.js");
__d(/* ramda/src/composeK.js */function(global, require, module, exports) {var chain = require(2721     ); // 2721 = ./chain
var compose = require(2734       ); // 2734 = ./compose
var map = require(2684   ); // 2684 = ./map

module.exports = function composeK() {
  if (arguments.length === 0) {
    throw new Error('composeK requires at least one argument');
  }
  var init = Array.prototype.slice.call(arguments);
  var last = init.pop();
  return compose(compose.apply(this, map(chain, init)), last);
};
}, 2741, null, "ramda/src/composeK.js");
__d(/* ramda/src/composeP.js */function(global, require, module, exports) {var pipeP = require(2743     ); // 2743 = ./pipeP
var reverse = require(2740       ); // 2740 = ./reverse

module.exports = function composeP() {
  if (arguments.length === 0) {
    throw new Error('composeP requires at least one argument');
  }
  return pipeP.apply(this, reverse(arguments));
};
}, 2742, null, "ramda/src/composeP.js");
__d(/* ramda/src/pipeP.js */function(global, require, module, exports) {var _arity = require(2670               ); // 2670 = ./internal/_arity
var _pipeP = require(2744               ); // 2744 = ./internal/_pipeP
var reduce = require(2696      ); // 2696 = ./reduce
var tail = require(2737    ); // 2737 = ./tail

module.exports = function pipeP() {
  if (arguments.length === 0) {
    throw new Error('pipeP requires at least one argument');
  }
  return _arity(arguments[0].length, reduce(_pipeP, arguments[0], tail(arguments)));
};
}, 2743, null, "ramda/src/pipeP.js");
__d(/* ramda/src/internal/_pipeP.js */function(global, require, module, exports) {module.exports = function _pipeP(f, g) {
  return function () {
    var ctx = this;
    return f.apply(ctx, arguments).then(function (x) {
      return g.call(ctx, x);
    });
  };
};
}, 2744, null, "ramda/src/internal/_pipeP.js");
__d(/* ramda/src/concat.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2
var _isArray = require(2676                 ); // 2676 = ./internal/_isArray
var _isFunction = require(2716                    ); // 2716 = ./internal/_isFunction
var toString = require(2746        ); // 2746 = ./toString

module.exports = _curry2(function concat(a, b) {
  if (a == null || !_isFunction(a.concat)) {
    throw new TypeError(toString(a) + ' does not have a method named "concat"');
  }
  if (_isArray(a) && !_isArray(b)) {
    throw new TypeError(toString(b) + ' is not an array');
  }
  return a.concat(b);
});
}, 2745, null, "ramda/src/concat.js");
__d(/* ramda/src/toString.js */function(global, require, module, exports) {var _curry1 = require(2661                ); // 2661 = ./internal/_curry1
var _toString = require(2747                  ); // 2747 = ./internal/_toString

module.exports = _curry1(function toString(val) {
  return _toString(val, []);
});
}, 2746, null, "ramda/src/toString.js");
__d(/* ramda/src/internal/_toString.js */function(global, require, module, exports) {var _contains = require(2748         ); // 2748 = ./_contains
var _map = require(2685    ); // 2685 = ./_map
var _quote = require(2755      ); // 2755 = ./_quote
var _toISOString = require(2756            ); // 2756 = ./_toISOString
var keys = require(2692     ); // 2692 = ../keys
var reject = require(2757       ); // 2757 = ../reject

module.exports = function _toString(x, seen) {
  var recur = function recur(y) {
    var xs = seen.concat([x]);
    return _contains(y, xs) ? '<Circular>' : _toString(y, xs);
  };

  var mapPairs = function mapPairs(obj, keys) {
    return _map(function (k) {
      return _quote(k) + ': ' + recur(obj[k]);
    }, keys.slice().sort());
  };

  switch (Object.prototype.toString.call(x)) {
    case '[object Arguments]':
      return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';
    case '[object Array]':
      return '[' + _map(recur, x).concat(mapPairs(x, reject(function (k) {
        return (/^\d+$/.test(k)
        );
      }, keys(x)))).join(', ') + ']';
    case '[object Boolean]':
      return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();
    case '[object Date]':
      return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';
    case '[object Null]':
      return 'null';
    case '[object Number]':
      return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);
    case '[object String]':
      return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);
    case '[object Undefined]':
      return 'undefined';
    default:
      if (typeof x.toString === 'function') {
        var repr = x.toString();
        if (repr !== '[object Object]') {
          return repr;
        }
      }
      return '{' + mapPairs(x, keys(x)).join(', ') + '}';
  }
};
}, 2747, null, "ramda/src/internal/_toString.js");
__d(/* ramda/src/internal/_contains.js */function(global, require, module, exports) {var _indexOf = require(2749        ); // 2749 = ./_indexOf

module.exports = function _contains(a, list) {
  return _indexOf(list, a, 0) >= 0;
};
}, 2748, null, "ramda/src/internal/_contains.js");
__d(/* ramda/src/internal/_indexOf.js */function(global, require, module, exports) {var equals = require(2750       ); // 2750 = ../equals

module.exports = function _indexOf(list, a, idx) {
  var inf, item;

  if (typeof list.indexOf === 'function') {
    switch (typeof a) {
      case 'number':
        if (a === 0) {
          inf = 1 / a;
          while (idx < list.length) {
            item = list[idx];
            if (item === 0 && 1 / item === inf) {
              return idx;
            }
            idx += 1;
          }
          return -1;
        } else if (a !== a) {
          while (idx < list.length) {
            item = list[idx];
            if (typeof item === 'number' && item !== item) {
              return idx;
            }
            idx += 1;
          }
          return -1;
        }

        return list.indexOf(a, idx);

      case 'string':
      case 'boolean':
      case 'function':
      case 'undefined':
        return list.indexOf(a, idx);

      case 'object':
        if (a === null) {
          return list.indexOf(a, idx);
        }
    }
  }

  while (idx < list.length) {
    if (equals(list[idx], a)) {
      return idx;
    }
    idx += 1;
  }
  return -1;
};
}, 2749, null, "ramda/src/internal/_indexOf.js");
__d(/* ramda/src/equals.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2
var _equals = require(2751                ); // 2751 = ./internal/_equals

module.exports = _curry2(function equals(a, b) {
  return _equals(a, b, [], []);
});
}, 2750, null, "ramda/src/equals.js");
__d(/* ramda/src/internal/_equals.js */function(global, require, module, exports) {var _arrayFromIterator = require(2752                  ); // 2752 = ./_arrayFromIterator
var _functionName = require(2753             ); // 2753 = ./_functionName
var _has = require(2693    ); // 2693 = ./_has
var identical = require(2754          ); // 2754 = ../identical
var keys = require(2692     ); // 2692 = ../keys
var type = require(2730     ); // 2730 = ../type

module.exports = function _equals(a, b, stackA, stackB) {
  if (identical(a, b)) {
    return true;
  }

  if (type(a) !== type(b)) {
    return false;
  }

  if (a == null || b == null) {
    return false;
  }

  if (typeof a.equals === 'function' || typeof b.equals === 'function') {
    return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);
  }

  switch (type(a)) {
    case 'Arguments':
    case 'Array':
    case 'Object':
      if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {
        return a === b;
      }
      break;
    case 'Boolean':
    case 'Number':
    case 'String':
      if (!(typeof a === typeof b && identical(a.valueOf(), b.valueOf()))) {
        return false;
      }
      break;
    case 'Date':
      if (!identical(a.valueOf(), b.valueOf())) {
        return false;
      }
      break;
    case 'Error':
      return a.name === b.name && a.message === b.message;
    case 'RegExp':
      if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {
        return false;
      }
      break;
    case 'Map':
    case 'Set':
      if (!_equals(_arrayFromIterator(a.entries()), _arrayFromIterator(b.entries()), stackA, stackB)) {
        return false;
      }
      break;
    case 'Int8Array':
    case 'Uint8Array':
    case 'Uint8ClampedArray':
    case 'Int16Array':
    case 'Uint16Array':
    case 'Int32Array':
    case 'Uint32Array':
    case 'Float32Array':
    case 'Float64Array':
      break;
    case 'ArrayBuffer':
      break;
    default:
      return false;
  }

  var keysA = keys(a);
  if (keysA.length !== keys(b).length) {
    return false;
  }

  var idx = stackA.length - 1;
  while (idx >= 0) {
    if (stackA[idx] === a) {
      return stackB[idx] === b;
    }
    idx -= 1;
  }

  stackA.push(a);
  stackB.push(b);
  idx = keysA.length - 1;
  while (idx >= 0) {
    var key = keysA[idx];
    if (!(_has(key, b) && _equals(b[key], a[key], stackA, stackB))) {
      return false;
    }
    idx -= 1;
  }
  stackA.pop();
  stackB.pop();
  return true;
};
}, 2751, null, "ramda/src/internal/_equals.js");
__d(/* ramda/src/internal/_arrayFromIterator.js */function(global, require, module, exports) {module.exports = function _arrayFromIterator(iter) {
  var list = [];
  var next;
  while (!(next = iter.next()).done) {
    list.push(next.value);
  }
  return list;
};
}, 2752, null, "ramda/src/internal/_arrayFromIterator.js");
__d(/* ramda/src/internal/_functionName.js */function(global, require, module, exports) {module.exports = function _functionName(f) {
  var match = String(f).match(/^function (\w*)/);
  return match == null ? '' : match[1];
};
}, 2753, null, "ramda/src/internal/_functionName.js");
__d(/* ramda/src/identical.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2

module.exports = _curry2(function identical(a, b) {
  if (a === b) {
    return a !== 0 || 1 / a === 1 / b;
  } else {
    return a !== a && b !== b;
  }
});
}, 2754, null, "ramda/src/identical.js");
__d(/* ramda/src/internal/_quote.js */function(global, require, module, exports) {module.exports = function _quote(s) {
  var escaped = s.replace(/\\/g, '\\\\').replace(/[\b]/g, '\\b').replace(/\f/g, '\\f').replace(/\n/g, '\\n').replace(/\r/g, '\\r').replace(/\t/g, '\\t').replace(/\v/g, '\\v').replace(/\0/g, '\\0');

  return '"' + escaped.replace(/"/g, '\\"') + '"';
};
}, 2755, null, "ramda/src/internal/_quote.js");
__d(/* ramda/src/internal/_toISOString.js */function(global, require, module, exports) {
module.exports = function () {
  var pad = function pad(n) {
    return (n < 10 ? '0' : '') + n;
  };

  return typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {
    return d.toISOString();
  } : function _toISOString(d) {
    return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';
  };
}();
}, 2756, null, "ramda/src/internal/_toISOString.js");
__d(/* ramda/src/reject.js */function(global, require, module, exports) {var _complement = require(2758                    ); // 2758 = ./internal/_complement
var _curry2 = require(2666                ); // 2666 = ./internal/_curry2
var filter = require(2759      ); // 2759 = ./filter

module.exports = _curry2(function reject(pred, filterable) {
  return filter(_complement(pred), filterable);
});
}, 2757, null, "ramda/src/reject.js");
__d(/* ramda/src/internal/_complement.js */function(global, require, module, exports) {module.exports = function _complement(f) {
  return function () {
    return !f.apply(this, arguments);
  };
};
}, 2758, null, "ramda/src/internal/_complement.js");
__d(/* ramda/src/filter.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2
var _dispatchable = require(2675                      ); // 2675 = ./internal/_dispatchable
var _filter = require(2760                ); // 2760 = ./internal/_filter
var _isObject = require(2761                  ); // 2761 = ./internal/_isObject
var _reduce = require(2686                ); // 2686 = ./internal/_reduce
var _xfilter = require(2762                 ); // 2762 = ./internal/_xfilter
var keys = require(2692    ); // 2692 = ./keys

module.exports = _curry2(_dispatchable(['filter'], _xfilter, function (pred, filterable) {
  return _isObject(filterable) ? _reduce(function (acc, key) {
    if (pred(filterable[key])) {
      acc[key] = filterable[key];
    }
    return acc;
  }, {}, keys(filterable)) : _filter(pred, filterable);
}));
}, 2759, null, "ramda/src/filter.js");
__d(/* ramda/src/internal/_filter.js */function(global, require, module, exports) {module.exports = function _filter(fn, list) {
  var idx = 0;
  var len = list.length;
  var result = [];

  while (idx < len) {
    if (fn(list[idx])) {
      result[result.length] = list[idx];
    }
    idx += 1;
  }
  return result;
};
}, 2760, null, "ramda/src/internal/_filter.js");
__d(/* ramda/src/internal/_isObject.js */function(global, require, module, exports) {module.exports = function _isObject(x) {
  return Object.prototype.toString.call(x) === '[object Object]';
};
}, 2761, null, "ramda/src/internal/_isObject.js");
__d(/* ramda/src/internal/_xfilter.js */function(global, require, module, exports) {var _curry2 = require(2666       ); // 2666 = ./_curry2
var _xfBase = require(2680       ); // 2680 = ./_xfBase

module.exports = function () {
  function XFilter(f, xf) {
    this.xf = xf;
    this.f = f;
  }
  XFilter.prototype['@@transducer/init'] = _xfBase.init;
  XFilter.prototype['@@transducer/result'] = _xfBase.result;
  XFilter.prototype['@@transducer/step'] = function (result, input) {
    return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;
  };

  return _curry2(function _xfilter(f, xf) {
    return new XFilter(f, xf);
  });
}();
}, 2762, null, "ramda/src/internal/_xfilter.js");
__d(/* ramda/src/cond.js */function(global, require, module, exports) {var _arity = require(2670               ); // 2670 = ./internal/_arity
var _curry1 = require(2661                ); // 2661 = ./internal/_curry1
var map = require(2684   ); // 2684 = ./map
var max = require(2682   ); // 2682 = ./max
var reduce = require(2696      ); // 2696 = ./reduce

module.exports = _curry1(function cond(pairs) {
  var arity = reduce(max, 0, map(function (pair) {
    return pair[0].length;
  }, pairs));
  return _arity(arity, function () {
    var idx = 0;
    while (idx < pairs.length) {
      if (pairs[idx][0].apply(this, arguments)) {
        return pairs[idx][1].apply(this, arguments);
      }
      idx += 1;
    }
  });
});
}, 2763, null, "ramda/src/cond.js");
__d(/* ramda/src/construct.js */function(global, require, module, exports) {var _curry1 = require(2661                ); // 2661 = ./internal/_curry1
var constructN = require(2765          ); // 2765 = ./constructN

module.exports = _curry1(function construct(Fn) {
  return constructN(Fn.length, Fn);
});
}, 2764, null, "ramda/src/construct.js");
__d(/* ramda/src/constructN.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2
var curry = require(2720     ); // 2720 = ./curry
var nAry = require(2714    ); // 2714 = ./nAry

module.exports = _curry2(function constructN(n, Fn) {
  if (n > 10) {
    throw new Error('Constructor with greater than ten arguments');
  }
  if (n === 0) {
    return function () {
      return new Fn();
    };
  }
  return curry(nAry(n, function ($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {
    switch (arguments.length) {
      case 1:
        return new Fn($0);
      case 2:
        return new Fn($0, $1);
      case 3:
        return new Fn($0, $1, $2);
      case 4:
        return new Fn($0, $1, $2, $3);
      case 5:
        return new Fn($0, $1, $2, $3, $4);
      case 6:
        return new Fn($0, $1, $2, $3, $4, $5);
      case 7:
        return new Fn($0, $1, $2, $3, $4, $5, $6);
      case 8:
        return new Fn($0, $1, $2, $3, $4, $5, $6, $7);
      case 9:
        return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8);
      case 10:
        return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8, $9);
    }
  }));
});
}, 2765, null, "ramda/src/constructN.js");
__d(/* ramda/src/contains.js */function(global, require, module, exports) {var _contains = require(2748                  ); // 2748 = ./internal/_contains
var _curry2 = require(2666                ); // 2666 = ./internal/_curry2

module.exports = _curry2(_contains);
}, 2766, null, "ramda/src/contains.js");
__d(/* ramda/src/converge.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2
var _map = require(2685             ); // 2685 = ./internal/_map
var curryN = require(2669      ); // 2669 = ./curryN
var max = require(2682   ); // 2682 = ./max
var pluck = require(2683     ); // 2683 = ./pluck
var reduce = require(2696      ); // 2696 = ./reduce

module.exports = _curry2(function converge(after, fns) {
  return curryN(reduce(max, 0, pluck('length', fns)), function () {
    var args = arguments;
    var context = this;
    return after.apply(context, _map(function (fn) {
      return fn.apply(context, args);
    }, fns));
  });
});
}, 2767, null, "ramda/src/converge.js");
__d(/* ramda/src/countBy.js */function(global, require, module, exports) {var reduceBy = require(2769        ); // 2769 = ./reduceBy

module.exports = reduceBy(function (acc, elem) {
  return acc + 1;
}, 0);
}, 2768, null, "ramda/src/countBy.js");
__d(/* ramda/src/reduceBy.js */function(global, require, module, exports) {var _curryN = require(2671                ); // 2671 = ./internal/_curryN
var _dispatchable = require(2675                      ); // 2675 = ./internal/_dispatchable
var _has = require(2693             ); // 2693 = ./internal/_has
var _reduce = require(2686                ); // 2686 = ./internal/_reduce
var _xreduceBy = require(2770                   ); // 2770 = ./internal/_xreduceBy

module.exports = _curryN(4, [], _dispatchable([], _xreduceBy, function reduceBy(valueFn, valueAcc, keyFn, list) {
  return _reduce(function (acc, elt) {
    var key = keyFn(elt);
    acc[key] = valueFn(_has(key, acc) ? acc[key] : valueAcc, elt);
    return acc;
  }, {}, list);
}));
}, 2769, null, "ramda/src/reduceBy.js");
__d(/* ramda/src/internal/_xreduceBy.js */function(global, require, module, exports) {var _curryN = require(2671       ); // 2671 = ./_curryN
var _has = require(2693    ); // 2693 = ./_has
var _xfBase = require(2680       ); // 2680 = ./_xfBase

module.exports = function () {
  function XReduceBy(valueFn, valueAcc, keyFn, xf) {
    this.valueFn = valueFn;
    this.valueAcc = valueAcc;
    this.keyFn = keyFn;
    this.xf = xf;
    this.inputs = {};
  }
  XReduceBy.prototype['@@transducer/init'] = _xfBase.init;
  XReduceBy.prototype['@@transducer/result'] = function (result) {
    var key;
    for (key in this.inputs) {
      if (_has(key, this.inputs)) {
        result = this.xf['@@transducer/step'](result, this.inputs[key]);
        if (result['@@transducer/reduced']) {
          result = result['@@transducer/value'];
          break;
        }
      }
    }
    this.inputs = null;
    return this.xf['@@transducer/result'](result);
  };
  XReduceBy.prototype['@@transducer/step'] = function (result, input) {
    var key = this.keyFn(input);
    this.inputs[key] = this.inputs[key] || [key, this.valueAcc];
    this.inputs[key][1] = this.valueFn(this.inputs[key][1], input);
    return result;
  };

  return _curryN(4, [], function _xreduceBy(valueFn, valueAcc, keyFn, xf) {
    return new XReduceBy(valueFn, valueAcc, keyFn, xf);
  });
}();
}, 2770, null, "ramda/src/internal/_xreduceBy.js");
__d(/* ramda/src/dec.js */function(global, require, module, exports) {var add = require(2665   ); // 2665 = ./add

module.exports = add(-1);
}, 2771, null, "ramda/src/dec.js");
__d(/* ramda/src/descend.js */function(global, require, module, exports) {var _curry3 = require(2673                ); // 2673 = ./internal/_curry3

module.exports = _curry3(function descend(fn, a, b) {
  var aa = fn(a);
  var bb = fn(b);
  return aa > bb ? -1 : aa < bb ? 1 : 0;
});
}, 2772, null, "ramda/src/descend.js");
__d(/* ramda/src/defaultTo.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2

module.exports = _curry2(function defaultTo(d, v) {
  return v == null || v !== v ? d : v;
});
}, 2773, null, "ramda/src/defaultTo.js");
__d(/* ramda/src/difference.js */function(global, require, module, exports) {var _contains = require(2748                  ); // 2748 = ./internal/_contains
var _curry2 = require(2666                ); // 2666 = ./internal/_curry2

module.exports = _curry2(function difference(first, second) {
  var out = [];
  var idx = 0;
  var firstLen = first.length;
  while (idx < firstLen) {
    if (!_contains(first[idx], second) && !_contains(first[idx], out)) {
      out[out.length] = first[idx];
    }
    idx += 1;
  }
  return out;
});
}, 2774, null, "ramda/src/difference.js");
__d(/* ramda/src/differenceWith.js */function(global, require, module, exports) {var _containsWith = require(2776                      ); // 2776 = ./internal/_containsWith
var _curry3 = require(2673                ); // 2673 = ./internal/_curry3

module.exports = _curry3(function differenceWith(pred, first, second) {
  var out = [];
  var idx = 0;
  var firstLen = first.length;
  while (idx < firstLen) {
    if (!_containsWith(pred, first[idx], second) && !_containsWith(pred, first[idx], out)) {
      out.push(first[idx]);
    }
    idx += 1;
  }
  return out;
});
}, 2775, null, "ramda/src/differenceWith.js");
__d(/* ramda/src/internal/_containsWith.js */function(global, require, module, exports) {module.exports = function _containsWith(pred, x, list) {
  var idx = 0;
  var len = list.length;

  while (idx < len) {
    if (pred(x, list[idx])) {
      return true;
    }
    idx += 1;
  }
  return false;
};
}, 2776, null, "ramda/src/internal/_containsWith.js");
__d(/* ramda/src/dissoc.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2

module.exports = _curry2(function dissoc(prop, obj) {
  var result = {};
  for (var p in obj) {
    result[p] = obj[p];
  }
  delete result[prop];
  return result;
});
}, 2777, null, "ramda/src/dissoc.js");
__d(/* ramda/src/dissocPath.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2
var assoc = require(2710     ); // 2710 = ./assoc
var dissoc = require(2777      ); // 2777 = ./dissoc

module.exports = _curry2(function dissocPath(path, obj) {
  switch (path.length) {
    case 0:
      return obj;
    case 1:
      return dissoc(path[0], obj);
    default:
      var head = path[0];
      var tail = Array.prototype.slice.call(path, 1);
      return obj[head] == null ? obj : assoc(head, dissocPath(tail, obj[head]), obj);
  }
});
}, 2778, null, "ramda/src/dissocPath.js");
__d(/* ramda/src/divide.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2

module.exports = _curry2(function divide(a, b) {
  return a / b;
});
}, 2779, null, "ramda/src/divide.js");
__d(/* ramda/src/drop.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2
var _dispatchable = require(2675                      ); // 2675 = ./internal/_dispatchable
var _xdrop = require(2781               ); // 2781 = ./internal/_xdrop
var slice = require(2739     ); // 2739 = ./slice

module.exports = _curry2(_dispatchable(['drop'], _xdrop, function drop(n, xs) {
  return slice(Math.max(0, n), Infinity, xs);
}));
}, 2780, null, "ramda/src/drop.js");
__d(/* ramda/src/internal/_xdrop.js */function(global, require, module, exports) {var _curry2 = require(2666       ); // 2666 = ./_curry2
var _xfBase = require(2680       ); // 2680 = ./_xfBase

module.exports = function () {
  function XDrop(n, xf) {
    this.xf = xf;
    this.n = n;
  }
  XDrop.prototype['@@transducer/init'] = _xfBase.init;
  XDrop.prototype['@@transducer/result'] = _xfBase.result;
  XDrop.prototype['@@transducer/step'] = function (result, input) {
    if (this.n > 0) {
      this.n -= 1;
      return result;
    }
    return this.xf['@@transducer/step'](result, input);
  };

  return _curry2(function _xdrop(n, xf) {
    return new XDrop(n, xf);
  });
}();
}, 2781, null, "ramda/src/internal/_xdrop.js");
__d(/* ramda/src/dropLast.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2
var _dispatchable = require(2675                      ); // 2675 = ./internal/_dispatchable
var _dropLast = require(2783                  ); // 2783 = ./internal/_dropLast
var _xdropLast = require(2786                   ); // 2786 = ./internal/_xdropLast

module.exports = _curry2(_dispatchable([], _xdropLast, _dropLast));
}, 2782, null, "ramda/src/dropLast.js");
__d(/* ramda/src/internal/_dropLast.js */function(global, require, module, exports) {var take = require(2784     ); // 2784 = ../take

module.exports = function dropLast(n, xs) {
  return take(n < xs.length ? xs.length - n : 0, xs);
};
}, 2783, null, "ramda/src/internal/_dropLast.js");
__d(/* ramda/src/take.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2
var _dispatchable = require(2675                      ); // 2675 = ./internal/_dispatchable
var _xtake = require(2785               ); // 2785 = ./internal/_xtake
var slice = require(2739     ); // 2739 = ./slice

module.exports = _curry2(_dispatchable(['take'], _xtake, function take(n, xs) {
  return slice(0, n < 0 ? Infinity : n, xs);
}));
}, 2784, null, "ramda/src/take.js");
__d(/* ramda/src/internal/_xtake.js */function(global, require, module, exports) {var _curry2 = require(2666       ); // 2666 = ./_curry2
var _reduced = require(2679        ); // 2679 = ./_reduced
var _xfBase = require(2680       ); // 2680 = ./_xfBase

module.exports = function () {
  function XTake(n, xf) {
    this.xf = xf;
    this.n = n;
    this.i = 0;
  }
  XTake.prototype['@@transducer/init'] = _xfBase.init;
  XTake.prototype['@@transducer/result'] = _xfBase.result;
  XTake.prototype['@@transducer/step'] = function (result, input) {
    this.i += 1;
    var ret = this.n === 0 ? result : this.xf['@@transducer/step'](result, input);
    return this.i >= this.n ? _reduced(ret) : ret;
  };

  return _curry2(function _xtake(n, xf) {
    return new XTake(n, xf);
  });
}();
}, 2785, null, "ramda/src/internal/_xtake.js");
__d(/* ramda/src/internal/_xdropLast.js */function(global, require, module, exports) {var _curry2 = require(2666       ); // 2666 = ./_curry2
var _xfBase = require(2680       ); // 2680 = ./_xfBase

module.exports = function () {
  function XDropLast(n, xf) {
    this.xf = xf;
    this.pos = 0;
    this.full = false;
    this.acc = new Array(n);
  }
  XDropLast.prototype['@@transducer/init'] = _xfBase.init;
  XDropLast.prototype['@@transducer/result'] = function (result) {
    this.acc = null;
    return this.xf['@@transducer/result'](result);
  };
  XDropLast.prototype['@@transducer/step'] = function (result, input) {
    if (this.full) {
      result = this.xf['@@transducer/step'](result, this.acc[this.pos]);
    }
    this.store(input);
    return result;
  };
  XDropLast.prototype.store = function (input) {
    this.acc[this.pos] = input;
    this.pos += 1;
    if (this.pos === this.acc.length) {
      this.pos = 0;
      this.full = true;
    }
  };

  return _curry2(function _xdropLast(n, xf) {
    return new XDropLast(n, xf);
  });
}();
}, 2786, null, "ramda/src/internal/_xdropLast.js");
__d(/* ramda/src/dropLastWhile.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2
var _dispatchable = require(2675                      ); // 2675 = ./internal/_dispatchable
var _dropLastWhile = require(2788                       ); // 2788 = ./internal/_dropLastWhile
var _xdropLastWhile = require(2789                        ); // 2789 = ./internal/_xdropLastWhile

module.exports = _curry2(_dispatchable([], _xdropLastWhile, _dropLastWhile));
}, 2787, null, "ramda/src/dropLastWhile.js");
__d(/* ramda/src/internal/_dropLastWhile.js */function(global, require, module, exports) {module.exports = function dropLastWhile(pred, list) {
  var idx = list.length - 1;
  while (idx >= 0 && pred(list[idx])) {
    idx -= 1;
  }
  return Array.prototype.slice.call(list, 0, idx + 1);
};
}, 2788, null, "ramda/src/internal/_dropLastWhile.js");
__d(/* ramda/src/internal/_xdropLastWhile.js */function(global, require, module, exports) {var _curry2 = require(2666       ); // 2666 = ./_curry2
var _reduce = require(2686       ); // 2686 = ./_reduce
var _xfBase = require(2680       ); // 2680 = ./_xfBase

module.exports = function () {
  function XDropLastWhile(fn, xf) {
    this.f = fn;
    this.retained = [];
    this.xf = xf;
  }
  XDropLastWhile.prototype['@@transducer/init'] = _xfBase.init;
  XDropLastWhile.prototype['@@transducer/result'] = function (result) {
    this.retained = null;
    return this.xf['@@transducer/result'](result);
  };
  XDropLastWhile.prototype['@@transducer/step'] = function (result, input) {
    return this.f(input) ? this.retain(result, input) : this.flush(result, input);
  };
  XDropLastWhile.prototype.flush = function (result, input) {
    result = _reduce(this.xf['@@transducer/step'], result, this.retained);
    this.retained = [];
    return this.xf['@@transducer/step'](result, input);
  };
  XDropLastWhile.prototype.retain = function (result, input) {
    this.retained.push(input);
    return result;
  };

  return _curry2(function _xdropLastWhile(fn, xf) {
    return new XDropLastWhile(fn, xf);
  });
}();
}, 2789, null, "ramda/src/internal/_xdropLastWhile.js");
__d(/* ramda/src/dropRepeats.js */function(global, require, module, exports) {var _curry1 = require(2661                ); // 2661 = ./internal/_curry1
var _dispatchable = require(2675                      ); // 2675 = ./internal/_dispatchable
var _xdropRepeatsWith = require(2791                          ); // 2791 = ./internal/_xdropRepeatsWith
var dropRepeatsWith = require(2792               ); // 2792 = ./dropRepeatsWith
var equals = require(2750      ); // 2750 = ./equals

module.exports = _curry1(_dispatchable([], _xdropRepeatsWith(equals), dropRepeatsWith(equals)));
}, 2790, null, "ramda/src/dropRepeats.js");
__d(/* ramda/src/internal/_xdropRepeatsWith.js */function(global, require, module, exports) {var _curry2 = require(2666       ); // 2666 = ./_curry2
var _xfBase = require(2680       ); // 2680 = ./_xfBase

module.exports = function () {
  function XDropRepeatsWith(pred, xf) {
    this.xf = xf;
    this.pred = pred;
    this.lastValue = undefined;
    this.seenFirstValue = false;
  }

  XDropRepeatsWith.prototype['@@transducer/init'] = _xfBase.init;
  XDropRepeatsWith.prototype['@@transducer/result'] = _xfBase.result;
  XDropRepeatsWith.prototype['@@transducer/step'] = function (result, input) {
    var sameAsLast = false;
    if (!this.seenFirstValue) {
      this.seenFirstValue = true;
    } else if (this.pred(this.lastValue, input)) {
      sameAsLast = true;
    }
    this.lastValue = input;
    return sameAsLast ? result : this.xf['@@transducer/step'](result, input);
  };

  return _curry2(function _xdropRepeatsWith(pred, xf) {
    return new XDropRepeatsWith(pred, xf);
  });
}();
}, 2791, null, "ramda/src/internal/_xdropRepeatsWith.js");
__d(/* ramda/src/dropRepeatsWith.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2
var _dispatchable = require(2675                      ); // 2675 = ./internal/_dispatchable
var _xdropRepeatsWith = require(2791                          ); // 2791 = ./internal/_xdropRepeatsWith
var last = require(2793    ); // 2793 = ./last

module.exports = _curry2(_dispatchable([], _xdropRepeatsWith, function dropRepeatsWith(pred, list) {
  var result = [];
  var idx = 1;
  var len = list.length;
  if (len !== 0) {
    result[0] = list[0];
    while (idx < len) {
      if (!pred(last(result), list[idx])) {
        result[result.length] = list[idx];
      }
      idx += 1;
    }
  }
  return result;
}));
}, 2792, null, "ramda/src/dropRepeatsWith.js");
__d(/* ramda/src/last.js */function(global, require, module, exports) {var nth = require(2794   ); // 2794 = ./nth

module.exports = nth(-1);
}, 2793, null, "ramda/src/last.js");
__d(/* ramda/src/nth.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2
var _isString = require(2690                  ); // 2690 = ./internal/_isString

module.exports = _curry2(function nth(offset, list) {
  var idx = offset < 0 ? list.length + offset : offset;
  return _isString(list) ? list.charAt(idx) : list[idx];
});
}, 2794, null, "ramda/src/nth.js");
__d(/* ramda/src/dropWhile.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2
var _dispatchable = require(2675                      ); // 2675 = ./internal/_dispatchable
var _xdropWhile = require(2796                    ); // 2796 = ./internal/_xdropWhile

module.exports = _curry2(_dispatchable(['dropWhile'], _xdropWhile, function dropWhile(pred, list) {
  var idx = 0;
  var len = list.length;
  while (idx < len && pred(list[idx])) {
    idx += 1;
  }
  return Array.prototype.slice.call(list, idx);
}));
}, 2795, null, "ramda/src/dropWhile.js");
__d(/* ramda/src/internal/_xdropWhile.js */function(global, require, module, exports) {var _curry2 = require(2666       ); // 2666 = ./_curry2
var _xfBase = require(2680       ); // 2680 = ./_xfBase

module.exports = function () {
  function XDropWhile(f, xf) {
    this.xf = xf;
    this.f = f;
  }
  XDropWhile.prototype['@@transducer/init'] = _xfBase.init;
  XDropWhile.prototype['@@transducer/result'] = _xfBase.result;
  XDropWhile.prototype['@@transducer/step'] = function (result, input) {
    if (this.f) {
      if (this.f(input)) {
        return result;
      }
      this.f = null;
    }
    return this.xf['@@transducer/step'](result, input);
  };

  return _curry2(function _xdropWhile(f, xf) {
    return new XDropWhile(f, xf);
  });
}();
}, 2796, null, "ramda/src/internal/_xdropWhile.js");
__d(/* ramda/src/either.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2
var _isFunction = require(2716                    ); // 2716 = ./internal/_isFunction
var lift = require(2717    ); // 2717 = ./lift
var or = require(2798  ); // 2798 = ./or

module.exports = _curry2(function either(f, g) {
  return _isFunction(f) ? function _either() {
    return f.apply(this, arguments) || g.apply(this, arguments);
  } : lift(or)(f, g);
});
}, 2797, null, "ramda/src/either.js");
__d(/* ramda/src/or.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2

module.exports = _curry2(function or(a, b) {
  return a || b;
});
}, 2798, null, "ramda/src/or.js");
__d(/* ramda/src/empty.js */function(global, require, module, exports) {var _curry1 = require(2661                ); // 2661 = ./internal/_curry1
var _isArguments = require(2694                     ); // 2694 = ./internal/_isArguments
var _isArray = require(2676                 ); // 2676 = ./internal/_isArray
var _isObject = require(2761                  ); // 2761 = ./internal/_isObject
var _isString = require(2690                  ); // 2690 = ./internal/_isString

module.exports = _curry1(function empty(x) {
  return x != null && typeof x.empty === 'function' ? x.empty() : x != null && x.constructor != null && typeof x.constructor.empty === 'function' ? x.constructor.empty() : _isArray(x) ? [] : _isString(x) ? '' : _isObject(x) ? {} : _isArguments(x) ? function () {
    return arguments;
  }() : void 0;
});
}, 2799, null, "ramda/src/empty.js");
__d(/* ramda/src/eqBy.js */function(global, require, module, exports) {var _curry3 = require(2673                ); // 2673 = ./internal/_curry3
var equals = require(2750      ); // 2750 = ./equals

module.exports = _curry3(function eqBy(f, x, y) {
  return equals(f(x), f(y));
});
}, 2800, null, "ramda/src/eqBy.js");
__d(/* ramda/src/eqProps.js */function(global, require, module, exports) {var _curry3 = require(2673                ); // 2673 = ./internal/_curry3
var equals = require(2750      ); // 2750 = ./equals

module.exports = _curry3(function eqProps(prop, obj1, obj2) {
  return equals(obj1[prop], obj2[prop]);
});
}, 2801, null, "ramda/src/eqProps.js");
__d(/* ramda/src/evolve.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2

module.exports = _curry2(function evolve(transformations, object) {
  var result = {};
  var transformation, key, type;
  for (key in object) {
    transformation = transformations[key];
    type = typeof transformation;
    result[key] = type === 'function' ? transformation(object[key]) : transformation && type === 'object' ? evolve(transformation, object[key]) : object[key];
  }
  return result;
});
}, 2802, null, "ramda/src/evolve.js");
__d(/* ramda/src/find.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2
var _dispatchable = require(2675                      ); // 2675 = ./internal/_dispatchable
var _xfind = require(2804               ); // 2804 = ./internal/_xfind

module.exports = _curry2(_dispatchable(['find'], _xfind, function find(fn, list) {
  var idx = 0;
  var len = list.length;
  while (idx < len) {
    if (fn(list[idx])) {
      return list[idx];
    }
    idx += 1;
  }
}));
}, 2803, null, "ramda/src/find.js");
__d(/* ramda/src/internal/_xfind.js */function(global, require, module, exports) {var _curry2 = require(2666       ); // 2666 = ./_curry2
var _reduced = require(2679        ); // 2679 = ./_reduced
var _xfBase = require(2680       ); // 2680 = ./_xfBase

module.exports = function () {
  function XFind(f, xf) {
    this.xf = xf;
    this.f = f;
    this.found = false;
  }
  XFind.prototype['@@transducer/init'] = _xfBase.init;
  XFind.prototype['@@transducer/result'] = function (result) {
    if (!this.found) {
      result = this.xf['@@transducer/step'](result, void 0);
    }
    return this.xf['@@transducer/result'](result);
  };
  XFind.prototype['@@transducer/step'] = function (result, input) {
    if (this.f(input)) {
      this.found = true;
      result = _reduced(this.xf['@@transducer/step'](result, input));
    }
    return result;
  };

  return _curry2(function _xfind(f, xf) {
    return new XFind(f, xf);
  });
}();
}, 2804, null, "ramda/src/internal/_xfind.js");
__d(/* ramda/src/findIndex.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2
var _dispatchable = require(2675                      ); // 2675 = ./internal/_dispatchable
var _xfindIndex = require(2806                    ); // 2806 = ./internal/_xfindIndex

module.exports = _curry2(_dispatchable([], _xfindIndex, function findIndex(fn, list) {
  var idx = 0;
  var len = list.length;
  while (idx < len) {
    if (fn(list[idx])) {
      return idx;
    }
    idx += 1;
  }
  return -1;
}));
}, 2805, null, "ramda/src/findIndex.js");
__d(/* ramda/src/internal/_xfindIndex.js */function(global, require, module, exports) {var _curry2 = require(2666       ); // 2666 = ./_curry2
var _reduced = require(2679        ); // 2679 = ./_reduced
var _xfBase = require(2680       ); // 2680 = ./_xfBase

module.exports = function () {
  function XFindIndex(f, xf) {
    this.xf = xf;
    this.f = f;
    this.idx = -1;
    this.found = false;
  }
  XFindIndex.prototype['@@transducer/init'] = _xfBase.init;
  XFindIndex.prototype['@@transducer/result'] = function (result) {
    if (!this.found) {
      result = this.xf['@@transducer/step'](result, -1);
    }
    return this.xf['@@transducer/result'](result);
  };
  XFindIndex.prototype['@@transducer/step'] = function (result, input) {
    this.idx += 1;
    if (this.f(input)) {
      this.found = true;
      result = _reduced(this.xf['@@transducer/step'](result, this.idx));
    }
    return result;
  };

  return _curry2(function _xfindIndex(f, xf) {
    return new XFindIndex(f, xf);
  });
}();
}, 2806, null, "ramda/src/internal/_xfindIndex.js");
__d(/* ramda/src/findLast.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2
var _dispatchable = require(2675                      ); // 2675 = ./internal/_dispatchable
var _xfindLast = require(2808                   ); // 2808 = ./internal/_xfindLast

module.exports = _curry2(_dispatchable([], _xfindLast, function findLast(fn, list) {
  var idx = list.length - 1;
  while (idx >= 0) {
    if (fn(list[idx])) {
      return list[idx];
    }
    idx -= 1;
  }
}));
}, 2807, null, "ramda/src/findLast.js");
__d(/* ramda/src/internal/_xfindLast.js */function(global, require, module, exports) {var _curry2 = require(2666       ); // 2666 = ./_curry2
var _xfBase = require(2680       ); // 2680 = ./_xfBase

module.exports = function () {
  function XFindLast(f, xf) {
    this.xf = xf;
    this.f = f;
  }
  XFindLast.prototype['@@transducer/init'] = _xfBase.init;
  XFindLast.prototype['@@transducer/result'] = function (result) {
    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.last));
  };
  XFindLast.prototype['@@transducer/step'] = function (result, input) {
    if (this.f(input)) {
      this.last = input;
    }
    return result;
  };

  return _curry2(function _xfindLast(f, xf) {
    return new XFindLast(f, xf);
  });
}();
}, 2808, null, "ramda/src/internal/_xfindLast.js");
__d(/* ramda/src/findLastIndex.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2
var _dispatchable = require(2675                      ); // 2675 = ./internal/_dispatchable
var _xfindLastIndex = require(2810                        ); // 2810 = ./internal/_xfindLastIndex

module.exports = _curry2(_dispatchable([], _xfindLastIndex, function findLastIndex(fn, list) {
  var idx = list.length - 1;
  while (idx >= 0) {
    if (fn(list[idx])) {
      return idx;
    }
    idx -= 1;
  }
  return -1;
}));
}, 2809, null, "ramda/src/findLastIndex.js");
__d(/* ramda/src/internal/_xfindLastIndex.js */function(global, require, module, exports) {var _curry2 = require(2666       ); // 2666 = ./_curry2
var _xfBase = require(2680       ); // 2680 = ./_xfBase

module.exports = function () {
  function XFindLastIndex(f, xf) {
    this.xf = xf;
    this.f = f;
    this.idx = -1;
    this.lastIdx = -1;
  }
  XFindLastIndex.prototype['@@transducer/init'] = _xfBase.init;
  XFindLastIndex.prototype['@@transducer/result'] = function (result) {
    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.lastIdx));
  };
  XFindLastIndex.prototype['@@transducer/step'] = function (result, input) {
    this.idx += 1;
    if (this.f(input)) {
      this.lastIdx = this.idx;
    }
    return result;
  };

  return _curry2(function _xfindLastIndex(f, xf) {
    return new XFindLastIndex(f, xf);
  });
}();
}, 2810, null, "ramda/src/internal/_xfindLastIndex.js");
__d(/* ramda/src/flatten.js */function(global, require, module, exports) {var _curry1 = require(2661                ); // 2661 = ./internal/_curry1
var _makeFlat = require(2722                  ); // 2722 = ./internal/_makeFlat

module.exports = _curry1(_makeFlat(true));
}, 2811, null, "ramda/src/flatten.js");
__d(/* ramda/src/flip.js */function(global, require, module, exports) {var _curry1 = require(2661                ); // 2661 = ./internal/_curry1
var curry = require(2720     ); // 2720 = ./curry

module.exports = _curry1(function flip(fn) {
  return curry(function (a, b) {
    var args = Array.prototype.slice.call(arguments, 0);
    args[0] = b;
    args[1] = a;
    return fn.apply(this, args);
  });
});
}, 2812, null, "ramda/src/flip.js");
__d(/* ramda/src/forEach.js */function(global, require, module, exports) {var _checkForMethod = require(2738                        ); // 2738 = ./internal/_checkForMethod
var _curry2 = require(2666                ); // 2666 = ./internal/_curry2

module.exports = _curry2(_checkForMethod('forEach', function forEach(fn, list) {
  var len = list.length;
  var idx = 0;
  while (idx < len) {
    fn(list[idx]);
    idx += 1;
  }
  return list;
}));
}, 2813, null, "ramda/src/forEach.js");
__d(/* ramda/src/forEachObjIndexed.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2
var keys = require(2692    ); // 2692 = ./keys

module.exports = _curry2(function forEachObjIndexed(fn, obj) {
  var keyList = keys(obj);
  var idx = 0;
  while (idx < keyList.length) {
    var key = keyList[idx];
    fn(obj[key], key, obj);
    idx += 1;
  }
  return obj;
});
}, 2814, null, "ramda/src/forEachObjIndexed.js");
__d(/* ramda/src/fromPairs.js */function(global, require, module, exports) {var _curry1 = require(2661                ); // 2661 = ./internal/_curry1

module.exports = _curry1(function fromPairs(pairs) {
  var result = {};
  var idx = 0;
  while (idx < pairs.length) {
    result[pairs[idx][0]] = pairs[idx][1];
    idx += 1;
  }
  return result;
});
}, 2815, null, "ramda/src/fromPairs.js");
__d(/* ramda/src/groupBy.js */function(global, require, module, exports) {var _checkForMethod = require(2738                        ); // 2738 = ./internal/_checkForMethod
var _curry2 = require(2666                ); // 2666 = ./internal/_curry2
var reduceBy = require(2769        ); // 2769 = ./reduceBy

module.exports = _curry2(_checkForMethod('groupBy', reduceBy(function (acc, item) {
  if (acc == null) {
    acc = [];
  }
  acc.push(item);
  return acc;
}, null)));
}, 2816, null, "ramda/src/groupBy.js");
__d(/* ramda/src/groupWith.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2

module.exports = _curry2(function (fn, list) {
  var res = [];
  var idx = 0;
  var len = list.length;
  while (idx < len) {
    var nextidx = idx + 1;
    while (nextidx < len && fn(list[idx], list[nextidx])) {
      nextidx += 1;
    }
    res.push(list.slice(idx, nextidx));
    idx = nextidx;
  }
  return res;
});
}, 2817, null, "ramda/src/groupWith.js");
__d(/* ramda/src/gt.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2

module.exports = _curry2(function gt(a, b) {
  return a > b;
});
}, 2818, null, "ramda/src/gt.js");
__d(/* ramda/src/gte.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2

module.exports = _curry2(function gte(a, b) {
  return a >= b;
});
}, 2819, null, "ramda/src/gte.js");
__d(/* ramda/src/has.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2
var _has = require(2693             ); // 2693 = ./internal/_has

module.exports = _curry2(_has);
}, 2820, null, "ramda/src/has.js");
__d(/* ramda/src/hasIn.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2

module.exports = _curry2(function hasIn(prop, obj) {
  return prop in obj;
});
}, 2821, null, "ramda/src/hasIn.js");
__d(/* ramda/src/head.js */function(global, require, module, exports) {var nth = require(2794   ); // 2794 = ./nth

module.exports = nth(0);
}, 2822, null, "ramda/src/head.js");
__d(/* ramda/src/identity.js */function(global, require, module, exports) {var _curry1 = require(2661                ); // 2661 = ./internal/_curry1
var _identity = require(2824                  ); // 2824 = ./internal/_identity

module.exports = _curry1(_identity);
}, 2823, null, "ramda/src/identity.js");
__d(/* ramda/src/internal/_identity.js */function(global, require, module, exports) {module.exports = function _identity(x) {
  return x;
};
}, 2824, null, "ramda/src/internal/_identity.js");
__d(/* ramda/src/ifElse.js */function(global, require, module, exports) {var _curry3 = require(2673                ); // 2673 = ./internal/_curry3
var curryN = require(2669      ); // 2669 = ./curryN

module.exports = _curry3(function ifElse(condition, onTrue, onFalse) {
  return curryN(Math.max(condition.length, onTrue.length, onFalse.length), function _ifElse() {
    return condition.apply(this, arguments) ? onTrue.apply(this, arguments) : onFalse.apply(this, arguments);
  });
});
}, 2825, null, "ramda/src/ifElse.js");
__d(/* ramda/src/inc.js */function(global, require, module, exports) {var add = require(2665   ); // 2665 = ./add

module.exports = add(1);
}, 2826, null, "ramda/src/inc.js");
__d(/* ramda/src/indexBy.js */function(global, require, module, exports) {var reduceBy = require(2769        ); // 2769 = ./reduceBy

module.exports = reduceBy(function (acc, elem) {
  return elem;
}, null);
}, 2827, null, "ramda/src/indexBy.js");
__d(/* ramda/src/indexOf.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2
var _indexOf = require(2749                 ); // 2749 = ./internal/_indexOf
var _isArray = require(2676                 ); // 2676 = ./internal/_isArray

module.exports = _curry2(function indexOf(target, xs) {
  return typeof xs.indexOf === 'function' && !_isArray(xs) ? xs.indexOf(target) : _indexOf(xs, target, 0);
});
}, 2828, null, "ramda/src/indexOf.js");
__d(/* ramda/src/init.js */function(global, require, module, exports) {var slice = require(2739     ); // 2739 = ./slice

module.exports = slice(0, -1);
}, 2829, null, "ramda/src/init.js");
__d(/* ramda/src/insert.js */function(global, require, module, exports) {var _curry3 = require(2673                ); // 2673 = ./internal/_curry3

module.exports = _curry3(function insert(idx, elt, list) {
  idx = idx < list.length && idx >= 0 ? idx : list.length;
  var result = Array.prototype.slice.call(list, 0);
  result.splice(idx, 0, elt);
  return result;
});
}, 2830, null, "ramda/src/insert.js");
__d(/* ramda/src/insertAll.js */function(global, require, module, exports) {var _curry3 = require(2673                ); // 2673 = ./internal/_curry3

module.exports = _curry3(function insertAll(idx, elts, list) {
  idx = idx < list.length && idx >= 0 ? idx : list.length;
  return [].concat(Array.prototype.slice.call(list, 0, idx), elts, Array.prototype.slice.call(list, idx));
});
}, 2831, null, "ramda/src/insertAll.js");
__d(/* ramda/src/intersection.js */function(global, require, module, exports) {var _contains = require(2748                  ); // 2748 = ./internal/_contains
var _curry2 = require(2666                ); // 2666 = ./internal/_curry2
var _filter = require(2760                ); // 2760 = ./internal/_filter
var flip = require(2812    ); // 2812 = ./flip
var uniq = require(2833    ); // 2833 = ./uniq

module.exports = _curry2(function intersection(list1, list2) {
  var lookupList, filteredList;
  if (list1.length > list2.length) {
    lookupList = list1;
    filteredList = list2;
  } else {
    lookupList = list2;
    filteredList = list1;
  }
  return uniq(_filter(flip(_contains)(lookupList), filteredList));
});
}, 2832, null, "ramda/src/intersection.js");
__d(/* ramda/src/uniq.js */function(global, require, module, exports) {var identity = require(2823        ); // 2823 = ./identity
var uniqBy = require(2834      ); // 2834 = ./uniqBy

module.exports = uniqBy(identity);
}, 2833, null, "ramda/src/uniq.js");
__d(/* ramda/src/uniqBy.js */function(global, require, module, exports) {var _Set = require(2835             ); // 2835 = ./internal/_Set
var _curry2 = require(2666                ); // 2666 = ./internal/_curry2

module.exports = _curry2(function uniqBy(fn, list) {
  var set = new _Set();
  var result = [];
  var idx = 0;
  var appliedItem, item;

  while (idx < list.length) {
    item = list[idx];
    appliedItem = fn(item);
    if (set.add(appliedItem)) {
      result.push(item);
    }
    idx += 1;
  }
  return result;
});
}, 2834, null, "ramda/src/uniqBy.js");
__d(/* ramda/src/internal/_Set.js */function(global, require, module, exports) {var _contains = require(2748         ); // 2748 = ./_contains

module.exports = function () {
  function _Set() {
    this._nativeSet = typeof Set === 'function' ? new Set() : null;
    this._items = {};
  }

  _Set.prototype.add = function (item) {
    return !hasOrAdd(item, true, this);
  };

  _Set.prototype.has = function (item) {
    return hasOrAdd(item, false, this);
  };

  function hasOrAdd(item, shouldAdd, set) {
    var type = typeof item;
    var prevSize, newSize;
    switch (type) {
      case 'string':
      case 'number':
        if (item === 0 && 1 / item === -Infinity) {
          if (set._items['-0']) {
            return true;
          } else {
            if (shouldAdd) {
              set._items['-0'] = true;
            }
            return false;
          }
        }

        if (set._nativeSet !== null) {
          if (shouldAdd) {
            prevSize = set._nativeSet.size;
            set._nativeSet.add(item);
            newSize = set._nativeSet.size;
            return newSize === prevSize;
          } else {
            return set._nativeSet.has(item);
          }
        } else {
          if (!(type in set._items)) {
            if (shouldAdd) {
              set._items[type] = {};
              set._items[type][item] = true;
            }
            return false;
          } else if (item in set._items[type]) {
            return true;
          } else {
            if (shouldAdd) {
              set._items[type][item] = true;
            }
            return false;
          }
        }

      case 'boolean':
        if (type in set._items) {
          var bIdx = item ? 1 : 0;
          if (set._items[type][bIdx]) {
            return true;
          } else {
            if (shouldAdd) {
              set._items[type][bIdx] = true;
            }
            return false;
          }
        } else {
          if (shouldAdd) {
            set._items[type] = item ? [false, true] : [true, false];
          }
          return false;
        }

      case 'function':
        if (set._nativeSet !== null) {
          if (shouldAdd) {
            prevSize = set._nativeSet.size;
            set._nativeSet.add(item);
            newSize = set._nativeSet.size;
            return newSize === prevSize;
          } else {
            return set._nativeSet.has(item);
          }
        } else {
          if (!(type in set._items)) {
            if (shouldAdd) {
              set._items[type] = [item];
            }
            return false;
          }
          if (!_contains(item, set._items[type])) {
            if (shouldAdd) {
              set._items[type].push(item);
            }
            return false;
          }
          return true;
        }

      case 'undefined':
        if (set._items[type]) {
          return true;
        } else {
          if (shouldAdd) {
            set._items[type] = true;
          }
          return false;
        }

      case 'object':
        if (item === null) {
          if (!set._items['null']) {
            if (shouldAdd) {
              set._items['null'] = true;
            }
            return false;
          }
          return true;
        }

      default:
        type = Object.prototype.toString.call(item);
        if (!(type in set._items)) {
          if (shouldAdd) {
            set._items[type] = [item];
          }
          return false;
        }

        if (!_contains(item, set._items[type])) {
          if (shouldAdd) {
            set._items[type].push(item);
          }
          return false;
        }
        return true;
    }
  }
  return _Set;
}();
}, 2835, null, "ramda/src/internal/_Set.js");
__d(/* ramda/src/intersectionWith.js */function(global, require, module, exports) {var _containsWith = require(2776                      ); // 2776 = ./internal/_containsWith
var _curry3 = require(2673                ); // 2673 = ./internal/_curry3
var uniqWith = require(2837        ); // 2837 = ./uniqWith

module.exports = _curry3(function intersectionWith(pred, list1, list2) {
  var lookupList, filteredList;
  if (list1.length > list2.length) {
    lookupList = list1;
    filteredList = list2;
  } else {
    lookupList = list2;
    filteredList = list1;
  }
  var results = [];
  var idx = 0;
  while (idx < filteredList.length) {
    if (_containsWith(pred, filteredList[idx], lookupList)) {
      results[results.length] = filteredList[idx];
    }
    idx += 1;
  }
  return uniqWith(pred, results);
});
}, 2836, null, "ramda/src/intersectionWith.js");
__d(/* ramda/src/uniqWith.js */function(global, require, module, exports) {var _containsWith = require(2776                      ); // 2776 = ./internal/_containsWith
var _curry2 = require(2666                ); // 2666 = ./internal/_curry2

module.exports = _curry2(function uniqWith(pred, list) {
  var idx = 0;
  var len = list.length;
  var result = [];
  var item;
  while (idx < len) {
    item = list[idx];
    if (!_containsWith(pred, item, result)) {
      result[result.length] = item;
    }
    idx += 1;
  }
  return result;
});
}, 2837, null, "ramda/src/uniqWith.js");
__d(/* ramda/src/intersperse.js */function(global, require, module, exports) {var _checkForMethod = require(2738                        ); // 2738 = ./internal/_checkForMethod
var _curry2 = require(2666                ); // 2666 = ./internal/_curry2

module.exports = _curry2(_checkForMethod('intersperse', function intersperse(separator, list) {
  var out = [];
  var idx = 0;
  var length = list.length;
  while (idx < length) {
    if (idx === length - 1) {
      out.push(list[idx]);
    } else {
      out.push(list[idx], separator);
    }
    idx += 1;
  }
  return out;
}));
}, 2838, null, "ramda/src/intersperse.js");
__d(/* ramda/src/into.js */function(global, require, module, exports) {var _clone = require(2728               ); // 2728 = ./internal/_clone
var _curry3 = require(2673                ); // 2673 = ./internal/_curry3
var _isTransformer = require(2677                       ); // 2677 = ./internal/_isTransformer
var _reduce = require(2686                ); // 2686 = ./internal/_reduce
var _stepCat = require(2840                 ); // 2840 = ./internal/_stepCat

module.exports = _curry3(function into(acc, xf, list) {
  return _isTransformer(acc) ? _reduce(xf(acc), acc['@@transducer/init'](), list) : _reduce(xf(_stepCat(acc)), _clone(acc, [], [], false), list);
});
}, 2839, null, "ramda/src/into.js");
__d(/* ramda/src/internal/_stepCat.js */function(global, require, module, exports) {var _assign = require(2841       ); // 2841 = ./_assign
var _identity = require(2824         ); // 2824 = ./_identity
var _isTransformer = require(2677              ); // 2677 = ./_isTransformer
var isArrayLike = require(2689            ); // 2689 = ../isArrayLike
var objOf = require(2843      ); // 2843 = ../objOf

module.exports = function () {
  var _stepCatArray = {
    '@@transducer/init': Array,
    '@@transducer/step': function transducerStep(xs, x) {
      xs.push(x);
      return xs;
    },
    '@@transducer/result': _identity
  };
  var _stepCatString = {
    '@@transducer/init': String,
    '@@transducer/step': function transducerStep(a, b) {
      return a + b;
    },
    '@@transducer/result': _identity
  };
  var _stepCatObject = {
    '@@transducer/init': Object,
    '@@transducer/step': function transducerStep(result, input) {
      return _assign(result, isArrayLike(input) ? objOf(input[0], input[1]) : input);
    },
    '@@transducer/result': _identity
  };

  return function _stepCat(obj) {
    if (_isTransformer(obj)) {
      return obj;
    }
    if (isArrayLike(obj)) {
      return _stepCatArray;
    }
    if (typeof obj === 'string') {
      return _stepCatString;
    }
    if (typeof obj === 'object') {
      return _stepCatObject;
    }
    throw new Error('Cannot create transformer for ' + obj);
  };
}();
}, 2840, null, "ramda/src/internal/_stepCat.js");
__d(/* ramda/src/internal/_assign.js */function(global, require, module, exports) {var _objectAssign = require(2842             ); // 2842 = ./_objectAssign

module.exports = typeof Object.assign === 'function' ? Object.assign : _objectAssign;
}, 2841, null, "ramda/src/internal/_assign.js");
__d(/* ramda/src/internal/_objectAssign.js */function(global, require, module, exports) {var _has = require(2693    ); // 2693 = ./_has

module.exports = function _objectAssign(target) {
  if (target == null) {
    throw new TypeError('Cannot convert undefined or null to object');
  }

  var output = Object(target);
  var idx = 1;
  var length = arguments.length;
  while (idx < length) {
    var source = arguments[idx];
    if (source != null) {
      for (var nextKey in source) {
        if (_has(nextKey, source)) {
          output[nextKey] = source[nextKey];
        }
      }
    }
    idx += 1;
  }
  return output;
};
}, 2842, null, "ramda/src/internal/_objectAssign.js");
__d(/* ramda/src/objOf.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2

module.exports = _curry2(function objOf(key, val) {
  var obj = {};
  obj[key] = val;
  return obj;
});
}, 2843, null, "ramda/src/objOf.js");
__d(/* ramda/src/invert.js */function(global, require, module, exports) {var _curry1 = require(2661                ); // 2661 = ./internal/_curry1
var _has = require(2693             ); // 2693 = ./internal/_has
var keys = require(2692    ); // 2692 = ./keys

module.exports = _curry1(function invert(obj) {
  var props = keys(obj);
  var len = props.length;
  var idx = 0;
  var out = {};

  while (idx < len) {
    var key = props[idx];
    var val = obj[key];
    var list = _has(val, out) ? out[val] : out[val] = [];
    list[list.length] = key;
    idx += 1;
  }
  return out;
});
}, 2844, null, "ramda/src/invert.js");
__d(/* ramda/src/invertObj.js */function(global, require, module, exports) {var _curry1 = require(2661                ); // 2661 = ./internal/_curry1
var keys = require(2692    ); // 2692 = ./keys

module.exports = _curry1(function invertObj(obj) {
  var props = keys(obj);
  var len = props.length;
  var idx = 0;
  var out = {};

  while (idx < len) {
    var key = props[idx];
    out[obj[key]] = key;
    idx += 1;
  }
  return out;
});
}, 2845, null, "ramda/src/invertObj.js");
__d(/* ramda/src/invoker.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2
var _isFunction = require(2716                    ); // 2716 = ./internal/_isFunction
var curryN = require(2669      ); // 2669 = ./curryN
var toString = require(2746        ); // 2746 = ./toString

module.exports = _curry2(function invoker(arity, method) {
  return curryN(arity + 1, function () {
    var target = arguments[arity];
    if (target != null && _isFunction(target[method])) {
      return target[method].apply(target, Array.prototype.slice.call(arguments, 0, arity));
    }
    throw new TypeError(toString(target) + ' does not have a method named "' + method + '"');
  });
});
}, 2846, null, "ramda/src/invoker.js");
__d(/* ramda/src/is.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2

module.exports = _curry2(function is(Ctor, val) {
  return val != null && val.constructor === Ctor || val instanceof Ctor;
});
}, 2847, null, "ramda/src/is.js");
__d(/* ramda/src/isEmpty.js */function(global, require, module, exports) {var _curry1 = require(2661                ); // 2661 = ./internal/_curry1
var empty = require(2799     ); // 2799 = ./empty
var equals = require(2750      ); // 2750 = ./equals

module.exports = _curry1(function isEmpty(x) {
  return x != null && equals(x, empty(x));
});
}, 2848, null, "ramda/src/isEmpty.js");
__d(/* ramda/src/isNil.js */function(global, require, module, exports) {var _curry1 = require(2661                ); // 2661 = ./internal/_curry1

module.exports = _curry1(function isNil(x) {
  return x == null;
});
}, 2849, null, "ramda/src/isNil.js");
__d(/* ramda/src/join.js */function(global, require, module, exports) {var invoker = require(2846       ); // 2846 = ./invoker

module.exports = invoker(1, 'join');
}, 2850, null, "ramda/src/join.js");
__d(/* ramda/src/juxt.js */function(global, require, module, exports) {var _curry1 = require(2661                ); // 2661 = ./internal/_curry1
var converge = require(2767        ); // 2767 = ./converge

module.exports = _curry1(function juxt(fns) {
  return converge(function () {
    return Array.prototype.slice.call(arguments, 0);
  }, fns);
});
}, 2851, null, "ramda/src/juxt.js");
__d(/* ramda/src/keysIn.js */function(global, require, module, exports) {var _curry1 = require(2661                ); // 2661 = ./internal/_curry1

module.exports = _curry1(function keysIn(obj) {
  var prop;
  var ks = [];
  for (prop in obj) {
    ks[ks.length] = prop;
  }
  return ks;
});
}, 2852, null, "ramda/src/keysIn.js");
__d(/* ramda/src/lastIndexOf.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2
var _isArray = require(2676                 ); // 2676 = ./internal/_isArray
var equals = require(2750      ); // 2750 = ./equals

module.exports = _curry2(function lastIndexOf(target, xs) {
  if (typeof xs.lastIndexOf === 'function' && !_isArray(xs)) {
    return xs.lastIndexOf(target);
  } else {
    var idx = xs.length - 1;
    while (idx >= 0) {
      if (equals(xs[idx], target)) {
        return idx;
      }
      idx -= 1;
    }
    return -1;
  }
});
}, 2853, null, "ramda/src/lastIndexOf.js");
__d(/* ramda/src/length.js */function(global, require, module, exports) {var _curry1 = require(2661                ); // 2661 = ./internal/_curry1
var _isNumber = require(2855                  ); // 2855 = ./internal/_isNumber

module.exports = _curry1(function length(list) {
  return list != null && _isNumber(list.length) ? list.length : NaN;
});
}, 2854, null, "ramda/src/length.js");
__d(/* ramda/src/internal/_isNumber.js */function(global, require, module, exports) {module.exports = function _isNumber(x) {
  return Object.prototype.toString.call(x) === '[object Number]';
};
}, 2855, null, "ramda/src/internal/_isNumber.js");
__d(/* ramda/src/lens.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2
var map = require(2684   ); // 2684 = ./map

module.exports = _curry2(function lens(getter, setter) {
  return function (toFunctorFn) {
    return function (target) {
      return map(function (focus) {
        return setter(focus, target);
      }, toFunctorFn(getter(target)));
    };
  };
});
}, 2856, null, "ramda/src/lens.js");
__d(/* ramda/src/lensIndex.js */function(global, require, module, exports) {var _curry1 = require(2661                ); // 2661 = ./internal/_curry1
var lens = require(2856    ); // 2856 = ./lens
var nth = require(2794   ); // 2794 = ./nth
var update = require(2858      ); // 2858 = ./update

module.exports = _curry1(function lensIndex(n) {
  return lens(nth(n), update(n));
});
}, 2857, null, "ramda/src/lensIndex.js");
__d(/* ramda/src/update.js */function(global, require, module, exports) {var _curry3 = require(2673                ); // 2673 = ./internal/_curry3
var adjust = require(2672      ); // 2672 = ./adjust
var always = require(2660      ); // 2660 = ./always

module.exports = _curry3(function update(idx, x, list) {
  return adjust(always(x), idx, list);
});
}, 2858, null, "ramda/src/update.js");
__d(/* ramda/src/lensPath.js */function(global, require, module, exports) {var _curry1 = require(2661                ); // 2661 = ./internal/_curry1
var assocPath = require(2711         ); // 2711 = ./assocPath
var lens = require(2856    ); // 2856 = ./lens
var path = require(2860    ); // 2860 = ./path

module.exports = _curry1(function lensPath(p) {
  return lens(path(p), assocPath(p));
});
}, 2859, null, "ramda/src/lensPath.js");
__d(/* ramda/src/path.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2

module.exports = _curry2(function path(paths, obj) {
  var val = obj;
  var idx = 0;
  while (idx < paths.length) {
    if (val == null) {
      return;
    }
    val = val[paths[idx]];
    idx += 1;
  }
  return val;
});
}, 2860, null, "ramda/src/path.js");
__d(/* ramda/src/lensProp.js */function(global, require, module, exports) {var _curry1 = require(2661                ); // 2661 = ./internal/_curry1
var assoc = require(2710     ); // 2710 = ./assoc
var lens = require(2856    ); // 2856 = ./lens
var prop = require(2695    ); // 2695 = ./prop

module.exports = _curry1(function lensProp(k) {
  return lens(prop(k), assoc(k));
});
}, 2861, null, "ramda/src/lensProp.js");
__d(/* ramda/src/lt.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2

module.exports = _curry2(function lt(a, b) {
  return a < b;
});
}, 2862, null, "ramda/src/lt.js");
__d(/* ramda/src/lte.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2

module.exports = _curry2(function lte(a, b) {
  return a <= b;
});
}, 2863, null, "ramda/src/lte.js");
__d(/* ramda/src/mapAccum.js */function(global, require, module, exports) {var _curry3 = require(2673                ); // 2673 = ./internal/_curry3

module.exports = _curry3(function mapAccum(fn, acc, list) {
  var idx = 0;
  var len = list.length;
  var result = [];
  var tuple = [acc];
  while (idx < len) {
    tuple = fn(tuple[0], list[idx]);
    result[idx] = tuple[1];
    idx += 1;
  }
  return [tuple[0], result];
});
}, 2864, null, "ramda/src/mapAccum.js");
__d(/* ramda/src/mapAccumRight.js */function(global, require, module, exports) {var _curry3 = require(2673                ); // 2673 = ./internal/_curry3

module.exports = _curry3(function mapAccumRight(fn, acc, list) {
  var idx = list.length - 1;
  var result = [];
  var tuple = [acc];
  while (idx >= 0) {
    tuple = fn(list[idx], tuple[0]);
    result[idx] = tuple[1];
    idx -= 1;
  }
  return [result, tuple[0]];
});
}, 2865, null, "ramda/src/mapAccumRight.js");
__d(/* ramda/src/mapObjIndexed.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2
var _reduce = require(2686                ); // 2686 = ./internal/_reduce
var keys = require(2692    ); // 2692 = ./keys

module.exports = _curry2(function mapObjIndexed(fn, obj) {
  return _reduce(function (acc, key) {
    acc[key] = fn(obj[key], key, obj);
    return acc;
  }, {}, keys(obj));
});
}, 2866, null, "ramda/src/mapObjIndexed.js");
__d(/* ramda/src/match.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2

module.exports = _curry2(function match(rx, str) {
  return str.match(rx) || [];
});
}, 2867, null, "ramda/src/match.js");
__d(/* ramda/src/mathMod.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2
var _isInteger = require(2712                   ); // 2712 = ./internal/_isInteger

module.exports = _curry2(function mathMod(m, p) {
  if (!_isInteger(m)) {
    return NaN;
  }
  if (!_isInteger(p) || p < 1) {
    return NaN;
  }
  return (m % p + p) % p;
});
}, 2868, null, "ramda/src/mathMod.js");
__d(/* ramda/src/maxBy.js */function(global, require, module, exports) {var _curry3 = require(2673                ); // 2673 = ./internal/_curry3

module.exports = _curry3(function maxBy(f, a, b) {
  return f(b) > f(a) ? b : a;
});
}, 2869, null, "ramda/src/maxBy.js");
__d(/* ramda/src/mean.js */function(global, require, module, exports) {var _curry1 = require(2661                ); // 2661 = ./internal/_curry1
var sum = require(2871   ); // 2871 = ./sum

module.exports = _curry1(function mean(list) {
  return sum(list) / list.length;
});
}, 2870, null, "ramda/src/mean.js");
__d(/* ramda/src/sum.js */function(global, require, module, exports) {var add = require(2665   ); // 2665 = ./add
var reduce = require(2696      ); // 2696 = ./reduce

module.exports = reduce(add, 0);
}, 2871, null, "ramda/src/sum.js");
__d(/* ramda/src/median.js */function(global, require, module, exports) {var _curry1 = require(2661                ); // 2661 = ./internal/_curry1
var mean = require(2870    ); // 2870 = ./mean

module.exports = _curry1(function median(list) {
  var len = list.length;
  if (len === 0) {
    return NaN;
  }
  var width = 2 - len % 2;
  var idx = (len - width) / 2;
  return mean(Array.prototype.slice.call(list, 0).sort(function (a, b) {
    return a < b ? -1 : a > b ? 1 : 0;
  }).slice(idx, idx + width));
});
}, 2872, null, "ramda/src/median.js");
__d(/* ramda/src/memoize.js */function(global, require, module, exports) {var _arity = require(2670               ); // 2670 = ./internal/_arity
var _curry1 = require(2661                ); // 2661 = ./internal/_curry1
var _has = require(2693             ); // 2693 = ./internal/_has
var toString = require(2746        ); // 2746 = ./toString

module.exports = _curry1(function memoize(fn) {
  var cache = {};
  return _arity(fn.length, function () {
    var key = toString(arguments);
    if (!_has(key, cache)) {
      cache[key] = fn.apply(this, arguments);
    }
    return cache[key];
  });
});
}, 2873, null, "ramda/src/memoize.js");
__d(/* ramda/src/merge.js */function(global, require, module, exports) {var _assign = require(2841                ); // 2841 = ./internal/_assign
var _curry2 = require(2666                ); // 2666 = ./internal/_curry2

module.exports = _curry2(function merge(l, r) {
  return _assign({}, l, r);
});
}, 2874, null, "ramda/src/merge.js");
__d(/* ramda/src/mergeAll.js */function(global, require, module, exports) {var _assign = require(2841                ); // 2841 = ./internal/_assign
var _curry1 = require(2661                ); // 2661 = ./internal/_curry1

module.exports = _curry1(function mergeAll(list) {
  return _assign.apply(null, [{}].concat(list));
});
}, 2875, null, "ramda/src/mergeAll.js");
__d(/* ramda/src/mergeWith.js */function(global, require, module, exports) {var _curry3 = require(2673                ); // 2673 = ./internal/_curry3
var mergeWithKey = require(2877            ); // 2877 = ./mergeWithKey

module.exports = _curry3(function mergeWith(fn, l, r) {
  return mergeWithKey(function (_, _l, _r) {
    return fn(_l, _r);
  }, l, r);
});
}, 2876, null, "ramda/src/mergeWith.js");
__d(/* ramda/src/mergeWithKey.js */function(global, require, module, exports) {var _curry3 = require(2673                ); // 2673 = ./internal/_curry3
var _has = require(2693             ); // 2693 = ./internal/_has

module.exports = _curry3(function mergeWithKey(fn, l, r) {
  var result = {};
  var k;

  for (k in l) {
    if (_has(k, l)) {
      result[k] = _has(k, r) ? fn(k, l[k], r[k]) : l[k];
    }
  }

  for (k in r) {
    if (_has(k, r) && !_has(k, result)) {
      result[k] = r[k];
    }
  }

  return result;
});
}, 2877, null, "ramda/src/mergeWithKey.js");
__d(/* ramda/src/min.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2

module.exports = _curry2(function min(a, b) {
  return b < a ? b : a;
});
}, 2878, null, "ramda/src/min.js");
__d(/* ramda/src/minBy.js */function(global, require, module, exports) {var _curry3 = require(2673                ); // 2673 = ./internal/_curry3

module.exports = _curry3(function minBy(f, a, b) {
  return f(b) < f(a) ? b : a;
});
}, 2879, null, "ramda/src/minBy.js");
__d(/* ramda/src/modulo.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2

module.exports = _curry2(function modulo(a, b) {
  return a % b;
});
}, 2880, null, "ramda/src/modulo.js");
__d(/* ramda/src/multiply.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2

module.exports = _curry2(function multiply(a, b) {
  return a * b;
});
}, 2881, null, "ramda/src/multiply.js");
__d(/* ramda/src/negate.js */function(global, require, module, exports) {var _curry1 = require(2661                ); // 2661 = ./internal/_curry1

module.exports = _curry1(function negate(n) {
  return -n;
});
}, 2882, null, "ramda/src/negate.js");
__d(/* ramda/src/none.js */function(global, require, module, exports) {var _complement = require(2758                    ); // 2758 = ./internal/_complement
var _curry2 = require(2666                ); // 2666 = ./internal/_curry2
var _dispatchable = require(2675                      ); // 2675 = ./internal/_dispatchable
var _xany = require(2699              ); // 2699 = ./internal/_xany
var any = require(2698   ); // 2698 = ./any

module.exports = _curry2(_complement(_dispatchable(['any'], _xany, any)));
}, 2883, null, "ramda/src/none.js");
__d(/* ramda/src/nthArg.js */function(global, require, module, exports) {var _curry1 = require(2661                ); // 2661 = ./internal/_curry1
var curryN = require(2669      ); // 2669 = ./curryN
var nth = require(2794   ); // 2794 = ./nth

module.exports = _curry1(function nthArg(n) {
  var arity = n < 0 ? 1 : n + 1;
  return curryN(arity, function () {
    return nth(n, arguments);
  });
});
}, 2884, null, "ramda/src/nthArg.js");
__d(/* ramda/src/of.js */function(global, require, module, exports) {var _curry1 = require(2661                ); // 2661 = ./internal/_curry1
var _of = require(2886            ); // 2886 = ./internal/_of

module.exports = _curry1(_of);
}, 2885, null, "ramda/src/of.js");
__d(/* ramda/src/internal/_of.js */function(global, require, module, exports) {module.exports = function _of(x) {
  return [x];
};
}, 2886, null, "ramda/src/internal/_of.js");
__d(/* ramda/src/omit.js */function(global, require, module, exports) {var _contains = require(2748                  ); // 2748 = ./internal/_contains
var _curry2 = require(2666                ); // 2666 = ./internal/_curry2

module.exports = _curry2(function omit(names, obj) {
  var result = {};
  for (var prop in obj) {
    if (!_contains(prop, names)) {
      result[prop] = obj[prop];
    }
  }
  return result;
});
}, 2887, null, "ramda/src/omit.js");
__d(/* ramda/src/once.js */function(global, require, module, exports) {var _arity = require(2670               ); // 2670 = ./internal/_arity
var _curry1 = require(2661                ); // 2661 = ./internal/_curry1

module.exports = _curry1(function once(fn) {
  var called = false;
  var result;
  return _arity(fn.length, function () {
    if (called) {
      return result;
    }
    called = true;
    result = fn.apply(this, arguments);
    return result;
  });
});
}, 2888, null, "ramda/src/once.js");
__d(/* ramda/src/over.js */function(global, require, module, exports) {var _curry3 = require(2673                ); // 2673 = ./internal/_curry3

module.exports = function () {
  var Identity = function Identity(x) {
    return { value: x, map: function map(f) {
        return Identity(f(x));
      } };
  };

  return _curry3(function over(lens, f, x) {
    return lens(function (y) {
      return Identity(f(y));
    })(x).value;
  });
}();
}, 2889, null, "ramda/src/over.js");
__d(/* ramda/src/pair.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2

module.exports = _curry2(function pair(fst, snd) {
  return [fst, snd];
});
}, 2890, null, "ramda/src/pair.js");
__d(/* ramda/src/partial.js */function(global, require, module, exports) {var _concat = require(2668                ); // 2668 = ./internal/_concat
var _createPartialApplicator = require(2892                                 ); // 2892 = ./internal/_createPartialApplicator

module.exports = _createPartialApplicator(_concat);
}, 2891, null, "ramda/src/partial.js");
__d(/* ramda/src/internal/_createPartialApplicator.js */function(global, require, module, exports) {var _arity = require(2670      ); // 2670 = ./_arity
var _curry2 = require(2666       ); // 2666 = ./_curry2

module.exports = function _createPartialApplicator(concat) {
  return _curry2(function (fn, args) {
    return _arity(Math.max(0, fn.length - args.length), function () {
      return fn.apply(this, concat(args, arguments));
    });
  });
};
}, 2892, null, "ramda/src/internal/_createPartialApplicator.js");
__d(/* ramda/src/partialRight.js */function(global, require, module, exports) {var _concat = require(2668                ); // 2668 = ./internal/_concat
var _createPartialApplicator = require(2892                                 ); // 2892 = ./internal/_createPartialApplicator
var flip = require(2812    ); // 2812 = ./flip

module.exports = _createPartialApplicator(flip(_concat));
}, 2893, null, "ramda/src/partialRight.js");
__d(/* ramda/src/partition.js */function(global, require, module, exports) {var filter = require(2759      ); // 2759 = ./filter
var juxt = require(2851    ); // 2851 = ./juxt
var reject = require(2757      ); // 2757 = ./reject

module.exports = juxt([filter, reject]);
}, 2894, null, "ramda/src/partition.js");
__d(/* ramda/src/pathEq.js */function(global, require, module, exports) {var _curry3 = require(2673                ); // 2673 = ./internal/_curry3
var equals = require(2750      ); // 2750 = ./equals
var path = require(2860    ); // 2860 = ./path

module.exports = _curry3(function pathEq(_path, val, obj) {
  return equals(path(_path, obj), val);
});
}, 2895, null, "ramda/src/pathEq.js");
__d(/* ramda/src/pathOr.js */function(global, require, module, exports) {var _curry3 = require(2673                ); // 2673 = ./internal/_curry3
var defaultTo = require(2773         ); // 2773 = ./defaultTo
var path = require(2860    ); // 2860 = ./path

module.exports = _curry3(function pathOr(d, p, obj) {
  return defaultTo(d, path(p, obj));
});
}, 2896, null, "ramda/src/pathOr.js");
__d(/* ramda/src/pathSatisfies.js */function(global, require, module, exports) {var _curry3 = require(2673                ); // 2673 = ./internal/_curry3
var path = require(2860    ); // 2860 = ./path

module.exports = _curry3(function pathSatisfies(pred, propPath, obj) {
  return propPath.length > 0 && pred(path(propPath, obj));
});
}, 2897, null, "ramda/src/pathSatisfies.js");
__d(/* ramda/src/pick.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2

module.exports = _curry2(function pick(names, obj) {
  var result = {};
  var idx = 0;
  while (idx < names.length) {
    if (names[idx] in obj) {
      result[names[idx]] = obj[names[idx]];
    }
    idx += 1;
  }
  return result;
});
}, 2898, null, "ramda/src/pick.js");
__d(/* ramda/src/pickAll.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2

module.exports = _curry2(function pickAll(names, obj) {
  var result = {};
  var idx = 0;
  var len = names.length;
  while (idx < len) {
    var name = names[idx];
    result[name] = obj[name];
    idx += 1;
  }
  return result;
});
}, 2899, null, "ramda/src/pickAll.js");
__d(/* ramda/src/pickBy.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2

module.exports = _curry2(function pickBy(test, obj) {
  var result = {};
  for (var prop in obj) {
    if (test(obj[prop], prop, obj)) {
      result[prop] = obj[prop];
    }
  }
  return result;
});
}, 2900, null, "ramda/src/pickBy.js");
__d(/* ramda/src/pipeK.js */function(global, require, module, exports) {var composeK = require(2741        ); // 2741 = ./composeK
var reverse = require(2740       ); // 2740 = ./reverse

module.exports = function pipeK() {
  if (arguments.length === 0) {
    throw new Error('pipeK requires at least one argument');
  }
  return composeK.apply(this, reverse(arguments));
};
}, 2901, null, "ramda/src/pipeK.js");
__d(/* ramda/src/prepend.js */function(global, require, module, exports) {var _concat = require(2668                ); // 2668 = ./internal/_concat
var _curry2 = require(2666                ); // 2666 = ./internal/_curry2

module.exports = _curry2(function prepend(el, list) {
  return _concat([el], list);
});
}, 2902, null, "ramda/src/prepend.js");
__d(/* ramda/src/product.js */function(global, require, module, exports) {var multiply = require(2881        ); // 2881 = ./multiply
var reduce = require(2696      ); // 2696 = ./reduce

module.exports = reduce(multiply, 1);
}, 2903, null, "ramda/src/product.js");
__d(/* ramda/src/project.js */function(global, require, module, exports) {var _map = require(2685             ); // 2685 = ./internal/_map
var identity = require(2823        ); // 2823 = ./identity
var pickAll = require(2899       ); // 2899 = ./pickAll
var useWith = require(2905       ); // 2905 = ./useWith

module.exports = useWith(_map, [pickAll, identity]);
}, 2904, null, "ramda/src/project.js");
__d(/* ramda/src/useWith.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2
var curryN = require(2669      ); // 2669 = ./curryN

module.exports = _curry2(function useWith(fn, transformers) {
  return curryN(transformers.length, function () {
    var args = [];
    var idx = 0;
    while (idx < transformers.length) {
      args.push(transformers[idx].call(this, arguments[idx]));
      idx += 1;
    }
    return fn.apply(this, args.concat(Array.prototype.slice.call(arguments, transformers.length)));
  });
});
}, 2905, null, "ramda/src/useWith.js");
__d(/* ramda/src/propEq.js */function(global, require, module, exports) {var _curry3 = require(2673                ); // 2673 = ./internal/_curry3
var equals = require(2750      ); // 2750 = ./equals

module.exports = _curry3(function propEq(name, val, obj) {
  return equals(val, obj[name]);
});
}, 2906, null, "ramda/src/propEq.js");
__d(/* ramda/src/propIs.js */function(global, require, module, exports) {var _curry3 = require(2673                ); // 2673 = ./internal/_curry3
var is = require(2847  ); // 2847 = ./is

module.exports = _curry3(function propIs(type, name, obj) {
  return is(type, obj[name]);
});
}, 2907, null, "ramda/src/propIs.js");
__d(/* ramda/src/propOr.js */function(global, require, module, exports) {var _curry3 = require(2673                ); // 2673 = ./internal/_curry3
var _has = require(2693             ); // 2693 = ./internal/_has

module.exports = _curry3(function propOr(val, p, obj) {
  return obj != null && _has(p, obj) ? obj[p] : val;
});
}, 2908, null, "ramda/src/propOr.js");
__d(/* ramda/src/propSatisfies.js */function(global, require, module, exports) {var _curry3 = require(2673                ); // 2673 = ./internal/_curry3

module.exports = _curry3(function propSatisfies(pred, name, obj) {
  return pred(obj[name]);
});
}, 2909, null, "ramda/src/propSatisfies.js");
__d(/* ramda/src/props.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2

module.exports = _curry2(function props(ps, obj) {
  var len = ps.length;
  var out = [];
  var idx = 0;

  while (idx < len) {
    out[idx] = obj[ps[idx]];
    idx += 1;
  }

  return out;
});
}, 2910, null, "ramda/src/props.js");
__d(/* ramda/src/range.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2
var _isNumber = require(2855                  ); // 2855 = ./internal/_isNumber

module.exports = _curry2(function range(from, to) {
  if (!(_isNumber(from) && _isNumber(to))) {
    throw new TypeError('Both arguments to range must be numbers');
  }
  var result = [];
  var n = from;
  while (n < to) {
    result.push(n);
    n += 1;
  }
  return result;
});
}, 2911, null, "ramda/src/range.js");
__d(/* ramda/src/reduceRight.js */function(global, require, module, exports) {var _curry3 = require(2673                ); // 2673 = ./internal/_curry3

module.exports = _curry3(function reduceRight(fn, acc, list) {
  var idx = list.length - 1;
  while (idx >= 0) {
    acc = fn(list[idx], acc);
    idx -= 1;
  }
  return acc;
});
}, 2912, null, "ramda/src/reduceRight.js");
__d(/* ramda/src/reduceWhile.js */function(global, require, module, exports) {var _curryN = require(2671                ); // 2671 = ./internal/_curryN
var _reduce = require(2686                ); // 2686 = ./internal/_reduce
var _reduced = require(2679                 ); // 2679 = ./internal/_reduced

module.exports = _curryN(4, [], function _reduceWhile(pred, fn, a, list) {
  return _reduce(function (acc, x) {
    return pred(acc, x) ? fn(acc, x) : _reduced(acc);
  }, a, list);
});
}, 2913, null, "ramda/src/reduceWhile.js");
__d(/* ramda/src/reduced.js */function(global, require, module, exports) {var _curry1 = require(2661                ); // 2661 = ./internal/_curry1
var _reduced = require(2679                 ); // 2679 = ./internal/_reduced

module.exports = _curry1(_reduced);
}, 2914, null, "ramda/src/reduced.js");
__d(/* ramda/src/remove.js */function(global, require, module, exports) {var _curry3 = require(2673                ); // 2673 = ./internal/_curry3

module.exports = _curry3(function remove(start, count, list) {
  var result = Array.prototype.slice.call(list, 0);
  result.splice(start, count);
  return result;
});
}, 2915, null, "ramda/src/remove.js");
__d(/* ramda/src/repeat.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2
var always = require(2660      ); // 2660 = ./always
var times = require(2917     ); // 2917 = ./times

module.exports = _curry2(function repeat(value, n) {
  return times(always(value), n);
});
}, 2916, null, "ramda/src/repeat.js");
__d(/* ramda/src/times.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2

module.exports = _curry2(function times(fn, n) {
  var len = Number(n);
  var idx = 0;
  var list;

  if (len < 0 || isNaN(len)) {
    throw new RangeError('n must be a non-negative number');
  }
  list = new Array(len);
  while (idx < len) {
    list[idx] = fn(idx);
    idx += 1;
  }
  return list;
});
}, 2917, null, "ramda/src/times.js");
__d(/* ramda/src/replace.js */function(global, require, module, exports) {var _curry3 = require(2673                ); // 2673 = ./internal/_curry3

module.exports = _curry3(function replace(regex, replacement, str) {
  return str.replace(regex, replacement);
});
}, 2918, null, "ramda/src/replace.js");
__d(/* ramda/src/scan.js */function(global, require, module, exports) {var _curry3 = require(2673                ); // 2673 = ./internal/_curry3

module.exports = _curry3(function scan(fn, acc, list) {
  var idx = 0;
  var len = list.length;
  var result = [acc];
  while (idx < len) {
    acc = fn(acc, list[idx]);
    result[idx + 1] = acc;
    idx += 1;
  }
  return result;
});
}, 2919, null, "ramda/src/scan.js");
__d(/* ramda/src/sequence.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2
var ap = require(2701  ); // 2701 = ./ap
var map = require(2684   ); // 2684 = ./map
var prepend = require(2902       ); // 2902 = ./prepend
var reduceRight = require(2912           ); // 2912 = ./reduceRight

module.exports = _curry2(function sequence(of, traversable) {
  return typeof traversable.sequence === 'function' ? traversable.sequence(of) : reduceRight(function (x, acc) {
    return ap(map(prepend, x), acc);
  }, of([]), traversable);
});
}, 2920, null, "ramda/src/sequence.js");
__d(/* ramda/src/set.js */function(global, require, module, exports) {var _curry3 = require(2673                ); // 2673 = ./internal/_curry3
var always = require(2660      ); // 2660 = ./always
var over = require(2889    ); // 2889 = ./over

module.exports = _curry3(function set(lens, v, x) {
  return over(lens, always(v), x);
});
}, 2921, null, "ramda/src/set.js");
__d(/* ramda/src/sort.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2

module.exports = _curry2(function sort(comparator, list) {
  return Array.prototype.slice.call(list, 0).sort(comparator);
});
}, 2922, null, "ramda/src/sort.js");
__d(/* ramda/src/sortBy.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2

module.exports = _curry2(function sortBy(fn, list) {
  return Array.prototype.slice.call(list, 0).sort(function (a, b) {
    var aa = fn(a);
    var bb = fn(b);
    return aa < bb ? -1 : aa > bb ? 1 : 0;
  });
});
}, 2923, null, "ramda/src/sortBy.js");
__d(/* ramda/src/sortWith.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2

module.exports = _curry2(function sortWith(fns, list) {
  return Array.prototype.slice.call(list, 0).sort(function (a, b) {
    var result = 0;
    var i = 0;
    while (result === 0 && i < fns.length) {
      result = fns[i](a, b);
      i += 1;
    }
    return result;
  });
});
}, 2924, null, "ramda/src/sortWith.js");
__d(/* ramda/src/split.js */function(global, require, module, exports) {var invoker = require(2846       ); // 2846 = ./invoker

module.exports = invoker(1, 'split');
}, 2925, null, "ramda/src/split.js");
__d(/* ramda/src/splitAt.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2
var length = require(2854      ); // 2854 = ./length
var slice = require(2739     ); // 2739 = ./slice

module.exports = _curry2(function splitAt(index, array) {
  return [slice(0, index, array), slice(index, length(array), array)];
});
}, 2926, null, "ramda/src/splitAt.js");
__d(/* ramda/src/splitEvery.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2
var slice = require(2739     ); // 2739 = ./slice

module.exports = _curry2(function splitEvery(n, list) {
  if (n <= 0) {
    throw new Error('First argument to splitEvery must be a positive integer');
  }
  var result = [];
  var idx = 0;
  while (idx < list.length) {
    result.push(slice(idx, idx += n, list));
  }
  return result;
});
}, 2927, null, "ramda/src/splitEvery.js");
__d(/* ramda/src/splitWhen.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2

module.exports = _curry2(function splitWhen(pred, list) {
  var idx = 0;
  var len = list.length;
  var prefix = [];

  while (idx < len && !pred(list[idx])) {
    prefix.push(list[idx]);
    idx += 1;
  }

  return [prefix, Array.prototype.slice.call(list, idx)];
});
}, 2928, null, "ramda/src/splitWhen.js");
__d(/* ramda/src/subtract.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2

module.exports = _curry2(function subtract(a, b) {
  return Number(a) - Number(b);
});
}, 2929, null, "ramda/src/subtract.js");
__d(/* ramda/src/symmetricDifference.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2
var concat = require(2745      ); // 2745 = ./concat
var difference = require(2774          ); // 2774 = ./difference

module.exports = _curry2(function symmetricDifference(list1, list2) {
  return concat(difference(list1, list2), difference(list2, list1));
});
}, 2930, null, "ramda/src/symmetricDifference.js");
__d(/* ramda/src/symmetricDifferenceWith.js */function(global, require, module, exports) {var _curry3 = require(2673                ); // 2673 = ./internal/_curry3
var concat = require(2745      ); // 2745 = ./concat
var differenceWith = require(2775              ); // 2775 = ./differenceWith

module.exports = _curry3(function symmetricDifferenceWith(pred, list1, list2) {
  return concat(differenceWith(pred, list1, list2), differenceWith(pred, list2, list1));
});
}, 2931, null, "ramda/src/symmetricDifferenceWith.js");
__d(/* ramda/src/takeLast.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2
var drop = require(2780    ); // 2780 = ./drop

module.exports = _curry2(function takeLast(n, xs) {
  return drop(n >= 0 ? xs.length - n : 0, xs);
});
}, 2932, null, "ramda/src/takeLast.js");
__d(/* ramda/src/takeLastWhile.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2

module.exports = _curry2(function takeLastWhile(fn, list) {
  var idx = list.length - 1;
  while (idx >= 0 && fn(list[idx])) {
    idx -= 1;
  }
  return Array.prototype.slice.call(list, idx + 1);
});
}, 2933, null, "ramda/src/takeLastWhile.js");
__d(/* ramda/src/takeWhile.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2
var _dispatchable = require(2675                      ); // 2675 = ./internal/_dispatchable
var _xtakeWhile = require(2935                    ); // 2935 = ./internal/_xtakeWhile

module.exports = _curry2(_dispatchable(['takeWhile'], _xtakeWhile, function takeWhile(fn, list) {
  var idx = 0;
  var len = list.length;
  while (idx < len && fn(list[idx])) {
    idx += 1;
  }
  return Array.prototype.slice.call(list, 0, idx);
}));
}, 2934, null, "ramda/src/takeWhile.js");
__d(/* ramda/src/internal/_xtakeWhile.js */function(global, require, module, exports) {var _curry2 = require(2666       ); // 2666 = ./_curry2
var _reduced = require(2679        ); // 2679 = ./_reduced
var _xfBase = require(2680       ); // 2680 = ./_xfBase

module.exports = function () {
  function XTakeWhile(f, xf) {
    this.xf = xf;
    this.f = f;
  }
  XTakeWhile.prototype['@@transducer/init'] = _xfBase.init;
  XTakeWhile.prototype['@@transducer/result'] = _xfBase.result;
  XTakeWhile.prototype['@@transducer/step'] = function (result, input) {
    return this.f(input) ? this.xf['@@transducer/step'](result, input) : _reduced(result);
  };

  return _curry2(function _xtakeWhile(f, xf) {
    return new XTakeWhile(f, xf);
  });
}();
}, 2935, null, "ramda/src/internal/_xtakeWhile.js");
__d(/* ramda/src/tap.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2

module.exports = _curry2(function tap(fn, x) {
  fn(x);
  return x;
});
}, 2936, null, "ramda/src/tap.js");
__d(/* ramda/src/test.js */function(global, require, module, exports) {var _cloneRegExp = require(2729                     ); // 2729 = ./internal/_cloneRegExp
var _curry2 = require(2666                ); // 2666 = ./internal/_curry2
var _isRegExp = require(2938                  ); // 2938 = ./internal/_isRegExp
var toString = require(2746        ); // 2746 = ./toString

module.exports = _curry2(function test(pattern, str) {
  if (!_isRegExp(pattern)) {
    throw new TypeError('‘test’ requires a value of type RegExp as its first argument; received ' + toString(pattern));
  }
  return _cloneRegExp(pattern).test(str);
});
}, 2937, null, "ramda/src/test.js");
__d(/* ramda/src/internal/_isRegExp.js */function(global, require, module, exports) {module.exports = function _isRegExp(x) {
  return Object.prototype.toString.call(x) === '[object RegExp]';
};
}, 2938, null, "ramda/src/internal/_isRegExp.js");
__d(/* ramda/src/toLower.js */function(global, require, module, exports) {var invoker = require(2846       ); // 2846 = ./invoker

module.exports = invoker(0, 'toLowerCase');
}, 2939, null, "ramda/src/toLower.js");
__d(/* ramda/src/toPairs.js */function(global, require, module, exports) {var _curry1 = require(2661                ); // 2661 = ./internal/_curry1
var _has = require(2693             ); // 2693 = ./internal/_has

module.exports = _curry1(function toPairs(obj) {
  var pairs = [];
  for (var prop in obj) {
    if (_has(prop, obj)) {
      pairs[pairs.length] = [prop, obj[prop]];
    }
  }
  return pairs;
});
}, 2940, null, "ramda/src/toPairs.js");
__d(/* ramda/src/toPairsIn.js */function(global, require, module, exports) {var _curry1 = require(2661                ); // 2661 = ./internal/_curry1

module.exports = _curry1(function toPairsIn(obj) {
  var pairs = [];
  for (var prop in obj) {
    pairs[pairs.length] = [prop, obj[prop]];
  }
  return pairs;
});
}, 2941, null, "ramda/src/toPairsIn.js");
__d(/* ramda/src/toUpper.js */function(global, require, module, exports) {var invoker = require(2846       ); // 2846 = ./invoker

module.exports = invoker(0, 'toUpperCase');
}, 2942, null, "ramda/src/toUpper.js");
__d(/* ramda/src/transduce.js */function(global, require, module, exports) {var _reduce = require(2686                ); // 2686 = ./internal/_reduce
var _xwrap = require(2687               ); // 2687 = ./internal/_xwrap
var curryN = require(2669      ); // 2669 = ./curryN

module.exports = curryN(4, function transduce(xf, fn, acc, list) {
  return _reduce(xf(typeof fn === 'function' ? _xwrap(fn) : fn), acc, list);
});
}, 2943, null, "ramda/src/transduce.js");
__d(/* ramda/src/transpose.js */function(global, require, module, exports) {var _curry1 = require(2661                ); // 2661 = ./internal/_curry1

module.exports = _curry1(function transpose(outerlist) {
  var i = 0;
  var result = [];
  while (i < outerlist.length) {
    var innerlist = outerlist[i];
    var j = 0;
    while (j < innerlist.length) {
      if (typeof result[j] === 'undefined') {
        result[j] = [];
      }
      result[j].push(innerlist[j]);
      j += 1;
    }
    i += 1;
  }
  return result;
});
}, 2944, null, "ramda/src/transpose.js");
__d(/* ramda/src/traverse.js */function(global, require, module, exports) {var _curry3 = require(2673                ); // 2673 = ./internal/_curry3
var map = require(2684   ); // 2684 = ./map
var sequence = require(2920        ); // 2920 = ./sequence

module.exports = _curry3(function traverse(of, f, traversable) {
  return sequence(of, map(f, traversable));
});
}, 2945, null, "ramda/src/traverse.js");
__d(/* ramda/src/trim.js */function(global, require, module, exports) {var _curry1 = require(2661                ); // 2661 = ./internal/_curry1

module.exports = function () {
  var ws = '\t\n\x0B\f\r \xA0\u1680\u180E\u2000\u2001\u2002\u2003' + '\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028' + '\u2029\uFEFF';
  var zeroWidth = '\u200B';
  var hasProtoTrim = typeof String.prototype.trim === 'function';
  if (!hasProtoTrim || ws.trim() || !zeroWidth.trim()) {
    return _curry1(function trim(str) {
      var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');
      var endRx = new RegExp('[' + ws + '][' + ws + ']*$');
      return str.replace(beginRx, '').replace(endRx, '');
    });
  } else {
    return _curry1(function trim(str) {
      return str.trim();
    });
  }
}();
}, 2946, null, "ramda/src/trim.js");
__d(/* ramda/src/tryCatch.js */function(global, require, module, exports) {var _arity = require(2670               ); // 2670 = ./internal/_arity
var _concat = require(2668                ); // 2668 = ./internal/_concat
var _curry2 = require(2666                ); // 2666 = ./internal/_curry2

module.exports = _curry2(function _tryCatch(tryer, catcher) {
  return _arity(tryer.length, function () {
    try {
      return tryer.apply(this, arguments);
    } catch (e) {
      return catcher.apply(this, _concat([e], arguments));
    }
  });
});
}, 2947, null, "ramda/src/tryCatch.js");
__d(/* ramda/src/unapply.js */function(global, require, module, exports) {var _curry1 = require(2661                ); // 2661 = ./internal/_curry1

module.exports = _curry1(function unapply(fn) {
  return function () {
    return fn(Array.prototype.slice.call(arguments, 0));
  };
});
}, 2948, null, "ramda/src/unapply.js");
__d(/* ramda/src/unary.js */function(global, require, module, exports) {var _curry1 = require(2661                ); // 2661 = ./internal/_curry1
var nAry = require(2714    ); // 2714 = ./nAry

module.exports = _curry1(function unary(fn) {
  return nAry(1, fn);
});
}, 2949, null, "ramda/src/unary.js");
__d(/* ramda/src/uncurryN.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2
var curryN = require(2669      ); // 2669 = ./curryN

module.exports = _curry2(function uncurryN(depth, fn) {
  return curryN(depth, function () {
    var currentDepth = 1;
    var value = fn;
    var idx = 0;
    var endIdx;
    while (currentDepth <= depth && typeof value === 'function') {
      endIdx = currentDepth === depth ? arguments.length : idx + value.length;
      value = value.apply(this, Array.prototype.slice.call(arguments, idx, endIdx));
      currentDepth += 1;
      idx = endIdx;
    }
    return value;
  });
});
}, 2950, null, "ramda/src/uncurryN.js");
__d(/* ramda/src/unfold.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2

module.exports = _curry2(function unfold(fn, seed) {
  var pair = fn(seed);
  var result = [];
  while (pair && pair.length) {
    result[result.length] = pair[0];
    pair = fn(pair[1]);
  }
  return result;
});
}, 2951, null, "ramda/src/unfold.js");
__d(/* ramda/src/union.js */function(global, require, module, exports) {var _concat = require(2668                ); // 2668 = ./internal/_concat
var _curry2 = require(2666                ); // 2666 = ./internal/_curry2
var compose = require(2734       ); // 2734 = ./compose
var uniq = require(2833    ); // 2833 = ./uniq

module.exports = _curry2(compose(uniq, _concat));
}, 2952, null, "ramda/src/union.js");
__d(/* ramda/src/unionWith.js */function(global, require, module, exports) {var _concat = require(2668                ); // 2668 = ./internal/_concat
var _curry3 = require(2673                ); // 2673 = ./internal/_curry3
var uniqWith = require(2837        ); // 2837 = ./uniqWith

module.exports = _curry3(function unionWith(pred, list1, list2) {
  return uniqWith(pred, _concat(list1, list2));
});
}, 2953, null, "ramda/src/unionWith.js");
__d(/* ramda/src/unless.js */function(global, require, module, exports) {var _curry3 = require(2673                ); // 2673 = ./internal/_curry3

module.exports = _curry3(function unless(pred, whenFalseFn, x) {
  return pred(x) ? x : whenFalseFn(x);
});
}, 2954, null, "ramda/src/unless.js");
__d(/* ramda/src/unnest.js */function(global, require, module, exports) {var _identity = require(2824                  ); // 2824 = ./internal/_identity
var chain = require(2721     ); // 2721 = ./chain

module.exports = chain(_identity);
}, 2955, null, "ramda/src/unnest.js");
__d(/* ramda/src/until.js */function(global, require, module, exports) {var _curry3 = require(2673                ); // 2673 = ./internal/_curry3

module.exports = _curry3(function until(pred, fn, init) {
  var val = init;
  while (!pred(val)) {
    val = fn(val);
  }
  return val;
});
}, 2956, null, "ramda/src/until.js");
__d(/* ramda/src/valuesIn.js */function(global, require, module, exports) {var _curry1 = require(2661                ); // 2661 = ./internal/_curry1

module.exports = _curry1(function valuesIn(obj) {
  var prop;
  var vs = [];
  for (prop in obj) {
    vs[vs.length] = obj[prop];
  }
  return vs;
});
}, 2957, null, "ramda/src/valuesIn.js");
__d(/* ramda/src/view.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2

module.exports = function () {
  var Const = function Const(x) {
    return { value: x, map: function map() {
        return this;
      } };
  };

  return _curry2(function view(lens, x) {
    return lens(Const)(x).value;
  });
}();
}, 2958, null, "ramda/src/view.js");
__d(/* ramda/src/when.js */function(global, require, module, exports) {var _curry3 = require(2673                ); // 2673 = ./internal/_curry3

module.exports = _curry3(function when(pred, whenTrueFn, x) {
  return pred(x) ? whenTrueFn(x) : x;
});
}, 2959, null, "ramda/src/when.js");
__d(/* ramda/src/where.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2
var _has = require(2693             ); // 2693 = ./internal/_has

module.exports = _curry2(function where(spec, testObj) {
  for (var prop in spec) {
    if (_has(prop, spec) && !spec[prop](testObj[prop])) {
      return false;
    }
  }
  return true;
});
}, 2960, null, "ramda/src/where.js");
__d(/* ramda/src/whereEq.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2
var equals = require(2750      ); // 2750 = ./equals
var map = require(2684   ); // 2684 = ./map
var where = require(2960     ); // 2960 = ./where

module.exports = _curry2(function whereEq(spec, testObj) {
  return where(map(equals, spec), testObj);
});
}, 2961, null, "ramda/src/whereEq.js");
__d(/* ramda/src/without.js */function(global, require, module, exports) {var _contains = require(2748                  ); // 2748 = ./internal/_contains
var _curry2 = require(2666                ); // 2666 = ./internal/_curry2
var flip = require(2812    ); // 2812 = ./flip
var reject = require(2757      ); // 2757 = ./reject

module.exports = _curry2(function (xs, list) {
  return reject(flip(_contains)(xs), list);
});
}, 2962, null, "ramda/src/without.js");
__d(/* ramda/src/xprod.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2

module.exports = _curry2(function xprod(a, b) {
  var idx = 0;
  var ilen = a.length;
  var j;
  var jlen = b.length;
  var result = [];
  while (idx < ilen) {
    j = 0;
    while (j < jlen) {
      result[result.length] = [a[idx], b[j]];
      j += 1;
    }
    idx += 1;
  }
  return result;
});
}, 2963, null, "ramda/src/xprod.js");
__d(/* ramda/src/zip.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2

module.exports = _curry2(function zip(a, b) {
  var rv = [];
  var idx = 0;
  var len = Math.min(a.length, b.length);
  while (idx < len) {
    rv[idx] = [a[idx], b[idx]];
    idx += 1;
  }
  return rv;
});
}, 2964, null, "ramda/src/zip.js");
__d(/* ramda/src/zipObj.js */function(global, require, module, exports) {var _curry2 = require(2666                ); // 2666 = ./internal/_curry2

module.exports = _curry2(function zipObj(keys, values) {
  var idx = 0;
  var len = Math.min(keys.length, values.length);
  var out = {};
  while (idx < len) {
    out[keys[idx]] = values[idx];
    idx += 1;
  }
  return out;
});
}, 2965, null, "ramda/src/zipObj.js");
__d(/* ramda/src/zipWith.js */function(global, require, module, exports) {var _curry3 = require(2673                ); // 2673 = ./internal/_curry3

module.exports = _curry3(function zipWith(fn, a, b) {
  var rv = [];
  var idx = 0;
  var len = Math.min(a.length, b.length);
  while (idx < len) {
    rv[idx] = fn(a[idx], b[idx]);
    idx += 1;
  }
  return rv;
});
}, 2966, null, "ramda/src/zipWith.js");
__d(/* UI/App/Navigation/Styles/NavigationStyles.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _reactNative = require(334           ); // 334 = react-native

var _Themes = require(1956           ); // 1956 = ../../Themes/

exports.default = _reactNative.StyleSheet.create({
  header: {
    backgroundColor: _Themes.Colors.backgroundColor
  }
});
}, 2967, null, "UI/App/Navigation/Styles/NavigationStyles.js");
__d(/* UI/App/Redux/StartupRedux.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.StartupTypes = undefined;

var _reduxsauce = require(2655        ); // 2655 = reduxsauce

var _createActions = (0, _reduxsauce.createActions)({
  startup: null
}),
    Types = _createActions.Types,
    Creators = _createActions.Creators;

var StartupTypes = exports.StartupTypes = Types;
exports.default = Creators;
}, 2968, null, "UI/App/Redux/StartupRedux.js");
__d(/* UI/App/Config/ReduxPersist.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _ImmutablePersistenceTransform = require(2970                                       ); // 2970 = ../Services/ImmutablePersistenceTransform

var _ImmutablePersistenceTransform2 = babelHelpers.interopRequireDefault(_ImmutablePersistenceTransform);

var _reactNative = require(334           ); // 334 = react-native

var REDUX_PERSIST = {
  active: false,
  reducerVersion: '1.0',
  storeConfig: {
    storage: _reactNative.AsyncStorage,
    blacklist: ['login', 'search'],
    transforms: [_ImmutablePersistenceTransform2.default]
  }
};

exports.default = REDUX_PERSIST;
}, 2969, null, "UI/App/Config/ReduxPersist.js");
__d(/* UI/App/Services/ImmutablePersistenceTransform.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _ramda = require(1983   ); // 1983 = ramda

var _ramda2 = babelHelpers.interopRequireDefault(_ramda);

var _seamlessImmutable = require(14                  ); // 14 = seamless-immutable

var _seamlessImmutable2 = babelHelpers.interopRequireDefault(_seamlessImmutable);

var isImmutable = _ramda2.default.has('asMutable');

var convertToJs = function convertToJs(state) {
  return state.asMutable({ deep: true });
};

var fromImmutable = _ramda2.default.when(isImmutable, convertToJs);

var toImmutable = function toImmutable(raw) {
  return (0, _seamlessImmutable2.default)(raw);
};

exports.default = {
  out: function out(state) {
    state.mergeDeep = _ramda2.default.identity;
    return toImmutable(state);
  },
  in: function _in(raw) {
    return fromImmutable(raw);
  }
};
}, 2970, null, "UI/App/Services/ImmutablePersistenceTransform.js");
__d(/* UI/App/Containers/Styles/RootContainerStyles.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _reactNative = require(334           ); // 334 = react-native

var _Themes = require(1956           ); // 1956 = ../../Themes/

exports.default = _reactNative.StyleSheet.create({
  applicationView: {
    flex: 1
  },
  container: {
    flex: 1,
    justifyContent: 'center',
    backgroundColor: _Themes.Colors.background
  },
  welcome: {
    fontSize: 20,
    textAlign: 'center',
    fontFamily: _Themes.Fonts.type.base,
    margin: _Themes.Metrics.baseMargin
  },
  myImage: {
    width: 200,
    height: 200,
    alignSelf: 'center'
  }
});
}, 2971, null, "UI/App/Containers/Styles/RootContainerStyles.js");
__d(/* UI/App/Redux/index.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _redux = require(1460   ); // 1460 = redux

var _CreateStore = require(2973           ); // 2973 = ./CreateStore

var _CreateStore2 = babelHelpers.interopRequireDefault(_CreateStore);

var _Sagas = require(2999       ); // 2999 = ../Sagas/

var _Sagas2 = babelHelpers.interopRequireDefault(_Sagas);

exports.default = function () {
  var rootReducer = (0, _redux.combineReducers)({
    github: require(3005           ).reducer, // 3005 = ./GithubRedux
    login: require(2654          ).reducer, // 2654 = ./LoginRedux
    search: require(3009           ).reducer // 3009 = ./SearchRedux
  });

  return (0, _CreateStore2.default)(rootReducer, _Sagas2.default);
};
}, 2972, null, "UI/App/Redux/index.js");
__d(/* UI/App/Redux/CreateStore.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _redux = require(1460   ); // 1460 = redux

var _reduxPersist = require(2974           ); // 2974 = redux-persist

var _DebugConfig = require(13                     ); // 13 = ../Config/DebugConfig

var _DebugConfig2 = babelHelpers.interopRequireDefault(_DebugConfig);

var _reduxSaga = require(2986        ); // 2986 = redux-saga

var _reduxSaga2 = babelHelpers.interopRequireDefault(_reduxSaga);

var _RehydrationServices = require(2998                             ); // 2998 = ../Services/RehydrationServices

var _RehydrationServices2 = babelHelpers.interopRequireDefault(_RehydrationServices);

var _ReduxPersist = require(2969                    ); // 2969 = ../Config/ReduxPersist

var _ReduxPersist2 = babelHelpers.interopRequireDefault(_ReduxPersist);

exports.default = function (rootReducer, rootSaga) {

  var middleware = [];
  var enhancers = [];

  var sagaMonitor = _DebugConfig2.default.useReactotron ? console.tron.createSagaMonitor() : null;
  var sagaMiddleware = (0, _reduxSaga2.default)({ sagaMonitor: sagaMonitor });
  middleware.push(sagaMiddleware);

  enhancers.push(_redux.applyMiddleware.apply(undefined, middleware));

  if (_ReduxPersist2.default.active) {
    enhancers.push((0, _reduxPersist.autoRehydrate)());
  }

  var createAppropriateStore = _DebugConfig2.default.useReactotron ? console.tron.createStore : _redux.createStore;
  var store = createAppropriateStore(rootReducer, _redux.compose.apply(undefined, enhancers));

  if (_ReduxPersist2.default.active) {
    _RehydrationServices2.default.updateReducers(store);
  }

  sagaMiddleware.run(rootSaga);

  return store;
};
}, 2973, null, "UI/App/Redux/CreateStore.js");
__d(/* redux-persist/lib/index.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.storages = exports.purgeStoredState = exports.persistStore = exports.getStoredState = exports.createTransform = exports.createPersistor = exports.autoRehydrate = undefined;

var _autoRehydrate = require(2975             ); // 2975 = ./autoRehydrate

var _autoRehydrate2 = _interopRequireDefault(_autoRehydrate);

var _createPersistor = require(2978               ); // 2978 = ./createPersistor

var _createPersistor2 = _interopRequireDefault(_createPersistor);

var _createTransform = require(2983               ); // 2983 = ./createTransform

var _createTransform2 = _interopRequireDefault(_createTransform);

var _getStoredState = require(2984              ); // 2984 = ./getStoredState

var _getStoredState2 = _interopRequireDefault(_getStoredState);

var _persistStore = require(2985            ); // 2985 = ./persistStore

var _persistStore2 = _interopRequireDefault(_persistStore);

var _purgeStoredState = require(2981                ); // 2981 = ./purgeStoredState

var _purgeStoredState2 = _interopRequireDefault(_purgeStoredState);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

var deprecated = function deprecated(cb, cb2, cb3) {
  console.error('redux-persist: this method of importing storages has been removed. instead use `import { asyncLocalStorage } from "redux-persist/storages"`');
  if (typeof cb === 'function') cb();
  if (typeof cb2 === 'function') cb2();
  if (typeof cb3 === 'function') cb3();
};
var deprecatedStorage = { getAllKeys: deprecated, getItem: deprecated, setItem: deprecated, removeItem: deprecated };
var storages = {
  asyncLocalStorage: deprecatedStorage,
  asyncSessionStorage: deprecatedStorage
};

exports.autoRehydrate = _autoRehydrate2.default;
exports.createPersistor = _createPersistor2.default;
exports.createTransform = _createTransform2.default;
exports.getStoredState = _getStoredState2.default;
exports.persistStore = _persistStore2.default;
exports.purgeStoredState = _purgeStoredState2.default;
exports.storages = storages;
}, 2974, null, "redux-persist/lib/index.js");
__d(/* redux-persist/lib/autoRehydrate.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;

var _typeof = typeof Symbol === "function" && typeof (typeof Symbol === "function" ? Symbol.iterator : "@@iterator") === "symbol" ? function (obj) {
  return typeof obj;
} : function (obj) {
  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== (typeof Symbol === "function" ? Symbol.prototype : "@@prototype") ? "symbol" : typeof obj;
};

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }return target;
};

exports.default = autoRehydrate;

var _constants = require(2976         ); // 2976 = ./constants

var _isStatePlainEnough = require(2977                        ); // 2977 = ./utils/isStatePlainEnough

var _isStatePlainEnough2 = _interopRequireDefault(_isStatePlainEnough);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

function autoRehydrate() {
  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  var stateReconciler = config.stateReconciler || defaultStateReconciler;

  return function (next) {
    return function (reducer, initialState, enhancer) {
      var store = next(liftReducer(reducer), initialState, enhancer);
      return _extends({}, store, {
        replaceReducer: function replaceReducer(reducer) {
          return store.replaceReducer(liftReducer(reducer));
        }
      });
    };
  };

  function liftReducer(reducer) {
    var rehydrated = false;
    var preRehydrateActions = [];
    return function (state, action) {
      if (action.type !== _constants.REHYDRATE) {
        if (config.log && !rehydrated) preRehydrateActions.push(action);
        return reducer(state, action);
      } else {
        if (config.log && !rehydrated) logPreRehydrate(preRehydrateActions);
        rehydrated = true;

        var inboundState = action.payload;
        var reducedState = reducer(state, action);

        return stateReconciler(state, inboundState, reducedState, config.log);
      }
    };
  }
}

function logPreRehydrate(preRehydrateActions) {
  var concernedActions = preRehydrateActions.slice(1);
  if (concernedActions.length > 0) {
    console.log('\n      redux-persist/autoRehydrate: %d actions were fired before rehydration completed. This can be a symptom of a race\n      condition where the rehydrate action may overwrite the previously affected state. Consider running these actions\n      after rehydration:\n    ', concernedActions.length, concernedActions);
  }
}

function defaultStateReconciler(state, inboundState, reducedState, log) {
  var newState = _extends({}, reducedState);

  Object.keys(inboundState).forEach(function (key) {
    if (!state.hasOwnProperty(key)) return;

    if (_typeof(state[key]) === 'object' && !inboundState[key]) {
      if (log) console.log('redux-persist/autoRehydrate: sub state for key `%s` is falsy but initial state is an object, skipping autoRehydrate.', key);
      return;
    }

    if (state[key] !== reducedState[key]) {
      if (log) console.log('redux-persist/autoRehydrate: sub state for key `%s` modified, skipping autoRehydrate.', key);
      newState[key] = reducedState[key];
      return;
    }

    if ((0, _isStatePlainEnough2.default)(inboundState[key]) && (0, _isStatePlainEnough2.default)(state[key])) newState[key] = _extends({}, state[key], inboundState[key]);else newState[key] = inboundState[key];

    if (log) console.log('redux-persist/autoRehydrate: key `%s`, rehydrated to ', key, newState[key]);
  });
  return newState;
}
}, 2975, null, "redux-persist/lib/autoRehydrate.js");
__d(/* redux-persist/lib/constants.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
var KEY_PREFIX = exports.KEY_PREFIX = 'reduxPersist:';
var REHYDRATE = exports.REHYDRATE = 'persist/REHYDRATE';
}, 2976, null, "redux-persist/lib/constants.js");
__d(/* redux-persist/lib/utils/isStatePlainEnough.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;

var _typeof = typeof Symbol === "function" && typeof (typeof Symbol === "function" ? Symbol.iterator : "@@iterator") === "symbol" ? function (obj) {
  return typeof obj;
} : function (obj) {
  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== (typeof Symbol === "function" ? Symbol.prototype : "@@prototype") ? "symbol" : typeof obj;
};

exports.default = isStatePlainEnough;

var _isPlainObject = require(1462                  ); // 1462 = lodash/isPlainObject

var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

function isStatePlainEnough(a) {
  if (!a) return false;
  if ((typeof a === 'undefined' ? 'undefined' : _typeof(a)) !== 'object') return false;
  if (typeof a.asMutable === 'function') return false;
  if (!(0, _isPlainObject2.default)(a)) return false;
  return true;
}
}, 2977, null, "redux-persist/lib/utils/isStatePlainEnough.js");
__d(/* redux-persist/lib/createPersistor.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.default = createPersistor;

var _constants = require(2976         ); // 2976 = ./constants

var _asyncLocalStorage = require(2979                          ); // 2979 = ./defaults/asyncLocalStorage

var _asyncLocalStorage2 = _interopRequireDefault(_asyncLocalStorage);

var _purgeStoredState = require(2981                ); // 2981 = ./purgeStoredState

var _purgeStoredState2 = _interopRequireDefault(_purgeStoredState);

var _jsonStringifySafe = require(2982                 ); // 2982 = json-stringify-safe

var _jsonStringifySafe2 = _interopRequireDefault(_jsonStringifySafe);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

function createPersistor(store, config) {
  var serializer = config.serialize === false ? function (data) {
    return data;
  } : defaultSerializer;
  var deserializer = config.serialize === false ? function (data) {
    return data;
  } : defaultDeserializer;
  var blacklist = config.blacklist || [];
  var whitelist = config.whitelist || false;
  var transforms = config.transforms || [];
  var debounce = config.debounce || false;
  var keyPrefix = config.keyPrefix !== undefined ? config.keyPrefix : _constants.KEY_PREFIX;

  var stateInit = config._stateInit || {};
  var stateIterator = config._stateIterator || defaultStateIterator;
  var stateGetter = config._stateGetter || defaultStateGetter;
  var stateSetter = config._stateSetter || defaultStateSetter;

  var storage = config.storage || (0, _asyncLocalStorage2.default)('local');
  if (storage.keys && !storage.getAllKeys) {
    storage.getAllKeys = storage.keys;
  }

  var lastState = stateInit;
  var paused = false;
  var storesToProcess = [];
  var timeIterator = null;

  store.subscribe(function () {
    if (paused) return;

    var state = store.getState();

    stateIterator(state, function (subState, key) {
      if (!passWhitelistBlacklist(key)) return;
      if (stateGetter(lastState, key) === stateGetter(state, key)) return;
      if (storesToProcess.indexOf(key) !== -1) return;
      storesToProcess.push(key);
    });

    var len = storesToProcess.length;

    if (timeIterator === null) {
      timeIterator = setInterval(function () {
        if (paused && len === storesToProcess.length || storesToProcess.length === 0) {
          clearInterval(timeIterator);
          timeIterator = null;
          return;
        }

        var key = storesToProcess.shift();
        var storageKey = createStorageKey(key);
        var endState = transforms.reduce(function (subState, transformer) {
          return transformer.in(subState, key);
        }, stateGetter(store.getState(), key));
        if (typeof endState !== 'undefined') storage.setItem(storageKey, serializer(endState), warnIfSetError(key));
      }, debounce);
    }

    lastState = state;
  });

  function passWhitelistBlacklist(key) {
    if (whitelist && whitelist.indexOf(key) === -1) return false;
    if (blacklist.indexOf(key) !== -1) return false;
    return true;
  }

  function adhocRehydrate(incoming) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    var state = {};
    if (options.serial) {
      stateIterator(incoming, function (subState, key) {
        try {
          var data = deserializer(subState);
          var value = transforms.reduceRight(function (interState, transformer) {
            return transformer.out(interState, key);
          }, data);
          state = stateSetter(state, key, value);
        } catch (err) {
          if (process.env.NODE_ENV !== 'production') console.warn('Error rehydrating data for key "' + key + '"', subState, err);
        }
      });
    } else state = incoming;

    store.dispatch(rehydrateAction(state));
    return state;
  }

  function createStorageKey(key) {
    return '' + keyPrefix + key;
  }

  return {
    rehydrate: adhocRehydrate,
    pause: function pause() {
      paused = true;
    },
    resume: function resume() {
      paused = false;
    },
    purge: function purge(keys) {
      return (0, _purgeStoredState2.default)({ storage: storage, keyPrefix: keyPrefix }, keys);
    }
  };
}

function warnIfSetError(key) {
  return function setError(err) {
    if (err && process.env.NODE_ENV !== 'production') {
      console.warn('Error storing data for key:', key, err);
    }
  };
}

function defaultSerializer(data) {
  return (0, _jsonStringifySafe2.default)(data, null, null, function (k, v) {
    if (process.env.NODE_ENV !== 'production') return null;
    throw new Error('\n      redux-persist: cannot process cyclical state.\n      Consider changing your state structure to have no cycles.\n      Alternatively blacklist the corresponding reducer key.\n      Cycle encounted at key "' + k + '" with value "' + v + '".\n    ');
  });
}

function defaultDeserializer(serial) {
  return JSON.parse(serial);
}

function rehydrateAction(data) {
  return {
    type: _constants.REHYDRATE,
    payload: data
  };
}

function defaultStateIterator(collection, callback) {
  return Object.keys(collection).forEach(function (key) {
    return callback(collection[key], key);
  });
}

function defaultStateGetter(state, key) {
  return state[key];
}

function defaultStateSetter(state, key, value) {
  state[key] = value;
  return state;
}
}, 2978, null, "redux-persist/lib/createPersistor.js");
__d(/* redux-persist/lib/defaults/asyncLocalStorage.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;

var _typeof = typeof Symbol === "function" && typeof (typeof Symbol === "function" ? Symbol.iterator : "@@iterator") === "symbol" ? function (obj) {
  return typeof obj;
} : function (obj) {
  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== (typeof Symbol === "function" ? Symbol.prototype : "@@prototype") ? "symbol" : typeof obj;
};

exports.default = function (type, config) {
  var storage = getStorage(type);
  return {
    getAllKeys: function getAllKeys(cb) {
      return new Promise(function (resolve, reject) {
        try {
          var keys = [];
          for (var i = 0; i < storage.length; i++) {
            keys.push(storage.key(i));
          }
          (0, _setImmediate2.default)(function () {
            cb && cb(null, keys);
            resolve(keys);
          });
        } catch (e) {
          cb && cb(e);
          reject(e);
        }
      });
    },
    getItem: function getItem(key, cb) {
      return new Promise(function (resolve, reject) {
        try {
          var s = storage.getItem(key);
          (0, _setImmediate2.default)(function () {
            cb && cb(null, s);
            resolve(s);
          });
        } catch (e) {
          cb && cb(e);
          reject(e);
        }
      });
    },
    setItem: function setItem(key, string, cb) {
      return new Promise(function (resolve, reject) {
        try {
          storage.setItem(key, string);
          (0, _setImmediate2.default)(function () {
            cb && cb(null);
            resolve();
          });
        } catch (e) {
          cb && cb(e);
          reject(e);
        }
      });
    },
    removeItem: function removeItem(key, cb) {
      return new Promise(function (resolve, reject) {
        try {
          storage.removeItem(key);
          (0, _setImmediate2.default)(function () {
            cb && cb(null);
            resolve();
          });
        } catch (e) {
          cb && cb(e);
          reject(e);
        }
      });
    }
  };
};

var _setImmediate = require(2980                   ); // 2980 = ../utils/setImmediate

var _setImmediate2 = _interopRequireDefault(_setImmediate);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

var noStorage = function noStorage() {
  return null;
};
if (process.env.NODE_ENV !== 'production') {
  noStorage = function noStorage() {
    console.error('redux-persist asyncLocalStorage requires a global localStorage object. Either use a different storage backend or if this is a universal redux application you probably should conditionally persist like so: https://gist.github.com/rt2zz/ac9eb396793f95ff3c3b');
    return null;
  };
}

function _hasStorage(storageType) {
  if ((typeof window === 'undefined' ? 'undefined' : _typeof(window)) !== 'object' || !(storageType in window)) {
    return false;
  }

  try {
    var storage = window[storageType];
    var testKey = 'redux-persist ' + storageType + ' test';
    storage.setItem(testKey, 'test');
    storage.getItem(testKey);
    storage.removeItem(testKey);
  } catch (e) {
    if (process.env.NODE_ENV !== 'production') console.warn('redux-persist ' + storageType + ' test failed, persistence will be disabled.');
    return false;
  }
  return true;
}

function hasLocalStorage() {
  return _hasStorage('localStorage');
}

function hasSessionStorage() {
  return _hasStorage('sessionStorage');
}

function getStorage(type) {
  if (type === 'local') {
    return hasLocalStorage() ? window.localStorage : { getItem: noStorage, setItem: noStorage, removeItem: noStorage, getAllKeys: noStorage };
  }
  if (type === 'session') {
    return hasSessionStorage() ? window.sessionStorage : { getItem: noStorage, setItem: noStorage, removeItem: noStorage, getAllKeys: noStorage };
  }
}
}, 2979, null, "redux-persist/lib/defaults/asyncLocalStorage.js");
__d(/* redux-persist/lib/utils/setImmediate.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
var hasNativeSupport = typeof global !== 'undefined' && typeof global.setImmediate !== 'undefined';
var setImmediate = hasNativeSupport ? function (fn, ms) {
  return global.setImmediate(fn, ms);
} : function (fn, ms) {
  return setTimeout(fn, ms);
};

exports.default = setImmediate;
}, 2980, null, "redux-persist/lib/utils/setImmediate.js");
__d(/* redux-persist/lib/purgeStoredState.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.default = purgeStoredState;

var _constants = require(2976         ); // 2976 = ./constants

function purgeStoredState(config, keys) {
  var storage = config.storage;
  var keyPrefix = config.keyPrefix !== undefined ? config.keyPrefix : _constants.KEY_PREFIX;

  if (Array.isArray(config)) throw new Error('redux-persist: purgeStoredState requires config as a first argument (found array). An array of keys is the optional second argument.');
  if (!storage) throw new Error('redux-persist: config.storage required in purgeStoredState');

  if (typeof keys === 'undefined') {
    return new Promise(function (resolve, reject) {
      storage.getAllKeys(function (err, allKeys) {
        if (err) {
          if (process.env.NODE_ENV !== 'production') console.warn('redux-persist: error during purgeStoredState in storage.getAllKeys');
          reject(err);
        } else {
          resolve(purgeStoredState(config, allKeys.filter(function (key) {
            return key.indexOf(keyPrefix) === 0;
          }).map(function (key) {
            return key.slice(keyPrefix.length);
          })));
        }
      });
    });
  } else {
    return Promise.all(keys.map(function (key) {
      return storage.removeItem('' + keyPrefix + key, warnIfRemoveError(key));
    }));
  }
}

function warnIfRemoveError(key) {
  return function removeError(err) {
    if (err && process.env.NODE_ENV !== 'production') {
      console.warn('Error storing data for key:', key, err);
    }
  };
}
}, 2981, null, "redux-persist/lib/purgeStoredState.js");
__d(/* json-stringify-safe/stringify.js */function(global, require, module, exports) {exports = module.exports = stringify;
exports.getSerialize = serializer;

function stringify(obj, replacer, spaces, cycleReplacer) {
  return JSON.stringify(obj, serializer(replacer, cycleReplacer), spaces);
}

function serializer(replacer, cycleReplacer) {
  var stack = [],
      keys = [];

  if (cycleReplacer == null) cycleReplacer = function cycleReplacer(key, value) {
    if (stack[0] === value) return "[Circular ~]";
    return "[Circular ~." + keys.slice(0, stack.indexOf(value)).join(".") + "]";
  };

  return function (key, value) {
    if (stack.length > 0) {
      var thisPos = stack.indexOf(this);
      ~thisPos ? stack.splice(thisPos + 1) : stack.push(this);
      ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key);
      if (~stack.indexOf(value)) value = cycleReplacer.call(this, key, value);
    } else stack.push(value);

    return replacer == null ? value : replacer.call(this, key, value);
  };
}
}, 2982, null, "json-stringify-safe/stringify.js");
__d(/* redux-persist/lib/createTransform.js */function(global, require, module, exports) {"use strict";

exports.__esModule = true;
function createTransform(inbound, outbound) {
  var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

  var whitelist = config.whitelist || null;
  var blacklist = config.blacklist || null;

  function whitelistBlacklistCheck(key) {
    if (whitelist && whitelist.indexOf(key) === -1) return true;
    if (blacklist && blacklist.indexOf(key) !== -1) return true;
    return false;
  }

  return {
    in: function _in(state, key) {
      return !whitelistBlacklistCheck(key) && inbound ? inbound(state, key) : state;
    },
    out: function out(state, key) {
      return !whitelistBlacklistCheck(key) && outbound ? outbound(state, key) : state;
    }
  };
}

exports.default = createTransform;
}, 2983, null, "redux-persist/lib/createTransform.js");
__d(/* redux-persist/lib/getStoredState.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }return target;
};

exports.default = getStoredState;

var _constants = require(2976         ); // 2976 = ./constants

var _asyncLocalStorage = require(2979                          ); // 2979 = ./defaults/asyncLocalStorage

var _asyncLocalStorage2 = _interopRequireDefault(_asyncLocalStorage);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

function getStoredState(config, onComplete) {
  var storage = config.storage || (0, _asyncLocalStorage2.default)('local');
  var deserializer = config.serialize === false ? function (data) {
    return data;
  } : defaultDeserializer;
  var blacklist = config.blacklist || [];
  var whitelist = config.whitelist || false;
  var transforms = config.transforms || [];
  var keyPrefix = config.keyPrefix !== undefined ? config.keyPrefix : _constants.KEY_PREFIX;

  if (storage.keys && !storage.getAllKeys) storage = _extends({}, storage, { getAllKeys: storage.keys });

  var restoredState = {};
  var completionCount = 0;

  storage.getAllKeys(function (err, allKeys) {
    if (err) {
      if (process.env.NODE_ENV !== 'production') console.warn('redux-persist/getStoredState: Error in storage.getAllKeys');
      complete(err);
    }

    var persistKeys = allKeys.filter(function (key) {
      return key.indexOf(keyPrefix) === 0;
    }).map(function (key) {
      return key.slice(keyPrefix.length);
    });
    var keysToRestore = persistKeys.filter(passWhitelistBlacklist);

    var restoreCount = keysToRestore.length;
    if (restoreCount === 0) complete(null, restoredState);
    keysToRestore.forEach(function (key) {
      storage.getItem(createStorageKey(key), function (err, serialized) {
        if (err && process.env.NODE_ENV !== 'production') console.warn('redux-persist/getStoredState: Error restoring data for key:', key, err);else restoredState[key] = rehydrate(key, serialized);
        completionCount += 1;
        if (completionCount === restoreCount) complete(null, restoredState);
      });
    });
  });

  function rehydrate(key, serialized) {
    var state = null;

    try {
      var data = deserializer(serialized);
      state = transforms.reduceRight(function (subState, transformer) {
        return transformer.out(subState, key);
      }, data);
    } catch (err) {
      if (process.env.NODE_ENV !== 'production') console.warn('redux-persist/getStoredState: Error restoring data for key:', key, err);
    }

    return state;
  }

  function complete(err, restoredState) {
    onComplete(err, restoredState);
  }

  function passWhitelistBlacklist(key) {
    if (whitelist && whitelist.indexOf(key) === -1) return false;
    if (blacklist.indexOf(key) !== -1) return false;
    return true;
  }

  function createStorageKey(key) {
    return '' + keyPrefix + key;
  }

  if (typeof onComplete !== 'function' && !!Promise) {
    return new Promise(function (resolve, reject) {
      onComplete = function onComplete(err, restoredState) {
        if (err) reject(err);else resolve(restoredState);
      };
    });
  }
}

function defaultDeserializer(serial) {
  return JSON.parse(serial);
}
}, 2984, null, "redux-persist/lib/getStoredState.js");
__d(/* redux-persist/lib/persistStore.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }return target;
};

exports.default = persistStore;

var _constants = require(2976         ); // 2976 = ./constants

var _getStoredState = require(2984              ); // 2984 = ./getStoredState

var _getStoredState2 = _interopRequireDefault(_getStoredState);

var _createPersistor = require(2978               ); // 2978 = ./createPersistor

var _createPersistor2 = _interopRequireDefault(_createPersistor);

var _setImmediate = require(2980                  ); // 2980 = ./utils/setImmediate

var _setImmediate2 = _interopRequireDefault(_setImmediate);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

function persistStore(store) {
  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var onComplete = arguments[2];

  var shouldRestore = !config.skipRestore;
  if (process.env.NODE_ENV !== 'production' && config.skipRestore) console.warn('redux-persist: config.skipRestore has been deprecated. If you want to skip restoration use `createPersistor` instead');

  var purgeKeys = null;

  var persistor = (0, _createPersistor2.default)(store, config);
  persistor.pause();

  if (shouldRestore) {
    (0, _setImmediate2.default)(function () {
      (0, _getStoredState2.default)(config, function (err, restoredState) {
        if (err) {
          complete(err);
          return;
        }

        if (purgeKeys) {
          if (purgeKeys === '*') restoredState = {};else purgeKeys.forEach(function (key) {
            return delete restoredState[key];
          });
        }
        try {
          store.dispatch(rehydrateAction(restoredState, err));
        } finally {
          complete(err, restoredState);
        }
      });
    });
  } else (0, _setImmediate2.default)(complete);

  function complete(err, restoredState) {
    persistor.resume();
    onComplete && onComplete(err, restoredState);
  }

  return _extends({}, persistor, {
    purge: function purge(keys) {
      purgeKeys = keys || '*';
      return persistor.purge(keys);
    }
  });
}

function rehydrateAction(payload) {
  var error = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

  return {
    type: _constants.REHYDRATE,
    payload: payload,
    error: error
  };
}
}, 2985, null, "redux-persist/lib/persistStore.js");
__d(/* redux-saga/lib/index.js */function(global, require, module, exports) {'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.utils = exports.effects = exports.CANCEL = exports.delay = exports.throttle = exports.takeLatest = exports.takeEvery = exports.buffers = exports.channel = exports.eventChannel = exports.END = exports.runSaga = undefined;

var _runSaga = require(2987                ); // 2987 = ./internal/runSaga

Object.defineProperty(exports, 'runSaga', {
  enumerable: true,
  get: function get() {
    return _runSaga.runSaga;
  }
});

var _channel = require(2993                ); // 2993 = ./internal/channel

Object.defineProperty(exports, 'END', {
  enumerable: true,
  get: function get() {
    return _channel.END;
  }
});
Object.defineProperty(exports, 'eventChannel', {
  enumerable: true,
  get: function get() {
    return _channel.eventChannel;
  }
});
Object.defineProperty(exports, 'channel', {
  enumerable: true,
  get: function get() {
    return _channel.channel;
  }
});

var _buffers = require(2994                ); // 2994 = ./internal/buffers

Object.defineProperty(exports, 'buffers', {
  enumerable: true,
  get: function get() {
    return _buffers.buffers;
  }
});

var _sagaHelpers = require(2992                    ); // 2992 = ./internal/sagaHelpers

Object.defineProperty(exports, 'takeEvery', {
  enumerable: true,
  get: function get() {
    return _sagaHelpers.takeEvery;
  }
});
Object.defineProperty(exports, 'takeLatest', {
  enumerable: true,
  get: function get() {
    return _sagaHelpers.takeLatest;
  }
});
Object.defineProperty(exports, 'throttle', {
  enumerable: true,
  get: function get() {
    return _sagaHelpers.throttle;
  }
});

var _utils = require(2988              ); // 2988 = ./internal/utils

Object.defineProperty(exports, 'delay', {
  enumerable: true,
  get: function get() {
    return _utils.delay;
  }
});
Object.defineProperty(exports, 'CANCEL', {
  enumerable: true,
  get: function get() {
    return _utils.CANCEL;
  }
});

var _middleware = require(2995                   ); // 2995 = ./internal/middleware

var _middleware2 = _interopRequireDefault(_middleware);

var _effects = require(2996       ); // 2996 = ./effects

var effects = _interopRequireWildcard(_effects);

var _utils2 = require(2997     ); // 2997 = ./utils

var utils = _interopRequireWildcard(_utils2);

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  } else {
    var newObj = {};if (obj != null) {
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
      }
    }newObj.default = obj;return newObj;
  }
}

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

exports.default = _middleware2.default;
exports.effects = effects;
exports.utils = utils;
}, 2986, null, "redux-saga/lib/index.js");
__d(/* redux-saga/lib/internal/runSaga.js */function(global, require, module, exports) {'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.runSaga = runSaga;

var _utils = require(2988     ); // 2988 = ./utils

var _proc = require(2989    ); // 2989 = ./proc

var _proc2 = _interopRequireDefault(_proc);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

function runSaga(iterator, _ref) {
  var subscribe = _ref.subscribe,
      dispatch = _ref.dispatch,
      getState = _ref.getState,
      context = _ref.context,
      sagaMonitor = _ref.sagaMonitor,
      logger = _ref.logger,
      onError = _ref.onError;

  (0, _utils.check)(iterator, _utils.is.iterator, "runSaga must be called on an iterator");

  var effectId = (0, _utils.uid)();
  if (sagaMonitor) {
    sagaMonitor.effectTriggered({ effectId: effectId, root: true, parentEffectId: 0, effect: { root: true, saga: iterator, args: [] } });
  }
  var task = (0, _proc2.default)(iterator, subscribe, (0, _utils.wrapSagaDispatch)(dispatch), getState, context, { sagaMonitor: sagaMonitor, logger: logger, onError: onError }, effectId, iterator.name);

  if (sagaMonitor) {
    sagaMonitor.effectResolved(effectId, task);
  }

  return task;
}
}, 2987, null, "redux-saga/lib/internal/runSaga.js");
__d(/* redux-saga/lib/internal/utils.js */function(global, require, module, exports) {'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }return target;
};

var _typeof = typeof Symbol === "function" && typeof (typeof Symbol === "function" ? Symbol.iterator : "@@iterator") === "symbol" ? function (obj) {
  return typeof obj;
} : function (obj) {
  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== (typeof Symbol === "function" ? Symbol.prototype : "@@prototype") ? "symbol" : typeof obj;
};

exports.check = check;
exports.hasOwn = hasOwn;
exports.remove = remove;
exports.deferred = deferred;
exports.arrayOfDeffered = arrayOfDeffered;
exports.delay = delay;
exports.createMockTask = createMockTask;
exports.autoInc = autoInc;
exports.makeIterator = makeIterator;
exports.log = log;
exports.deprecate = deprecate;
exports.wrapSagaDispatch = wrapSagaDispatch;

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }return obj;
}

var sym = exports.sym = function sym(id) {
  return '@@redux-saga/' + id;
};
var TASK = exports.TASK = sym('TASK');
var HELPER = exports.HELPER = sym('HELPER');
var MATCH = exports.MATCH = sym('MATCH');
var CANCEL = exports.CANCEL = sym('cancelPromise');
var SAGA_ACTION = exports.SAGA_ACTION = sym('SAGA_ACTION');
var SELF_CANCELLATION = exports.SELF_CANCELLATION = sym('SELF_CANCELLATION');
var konst = exports.konst = function konst(v) {
  return function () {
    return v;
  };
};
var kTrue = exports.kTrue = konst(true);
var kFalse = exports.kFalse = konst(false);
var noop = exports.noop = function noop() {};
var ident = exports.ident = function ident(v) {
  return v;
};

var isDev = exports.isDev = process.env.NODE_ENV === 'development';

function check(value, predicate, error) {
  if (!predicate(value)) {
    log('error', 'uncaught at check', error);
    throw new Error(error);
  }
}

var hasOwnProperty = Object.prototype.hasOwnProperty;
function hasOwn(object, property) {
  return is.notUndef(object) && hasOwnProperty.call(object, property);
}

var is = exports.is = {
  undef: function undef(v) {
    return v === null || v === undefined;
  },
  notUndef: function notUndef(v) {
    return v !== null && v !== undefined;
  },
  func: function func(f) {
    return typeof f === 'function';
  },
  number: function number(n) {
    return typeof n === 'number';
  },
  string: function string(s) {
    return typeof s === 'string';
  },
  array: Array.isArray,
  object: function object(obj) {
    return obj && !is.array(obj) && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object';
  },
  promise: function promise(p) {
    return p && is.func(p.then);
  },
  iterator: function iterator(it) {
    return it && is.func(it.next) && is.func(it.throw);
  },
  iterable: function iterable(it) {
    return it && is.func(Symbol) ? is.func(it[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"]) : is.array(it);
  },
  task: function task(t) {
    return t && t[TASK];
  },
  observable: function observable(ob) {
    return ob && is.func(ob.subscribe);
  },
  buffer: function buffer(buf) {
    return buf && is.func(buf.isEmpty) && is.func(buf.take) && is.func(buf.put);
  },
  pattern: function pattern(pat) {
    return pat && (is.string(pat) || (typeof pat === 'undefined' ? 'undefined' : _typeof(pat)) === 'symbol' || is.func(pat) || is.array(pat));
  },
  channel: function channel(ch) {
    return ch && is.func(ch.take) && is.func(ch.close);
  },
  helper: function helper(it) {
    return it && it[HELPER];
  },
  stringableFunc: function stringableFunc(f) {
    return is.func(f) && hasOwn(f, 'toString');
  }
};

var object = exports.object = {
  assign: function assign(target, source) {
    for (var i in source) {
      if (hasOwn(source, i)) {
        target[i] = source[i];
      }
    }
  }
};

function remove(array, item) {
  var index = array.indexOf(item);
  if (index >= 0) {
    array.splice(index, 1);
  }
}

function deferred() {
  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  var def = _extends({}, props);
  var promise = new Promise(function (resolve, reject) {
    def.resolve = resolve;
    def.reject = reject;
  });
  def.promise = promise;
  return def;
}

function arrayOfDeffered(length) {
  var arr = [];
  for (var i = 0; i < length; i++) {
    arr.push(deferred());
  }
  return arr;
}

function delay(ms) {
  var val = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

  var timeoutId = void 0;
  var promise = new Promise(function (resolve) {
    timeoutId = setTimeout(function () {
      return resolve(val);
    }, ms);
  });

  promise[CANCEL] = function () {
    return clearTimeout(timeoutId);
  };

  return promise;
}

function createMockTask() {
  var _ref;

  var running = true;
  var _result = void 0,
      _error = void 0;

  return _ref = {}, _defineProperty(_ref, TASK, true), _defineProperty(_ref, 'isRunning', function isRunning() {
    return running;
  }), _defineProperty(_ref, 'result', function result() {
    return _result;
  }), _defineProperty(_ref, 'error', function error() {
    return _error;
  }), _defineProperty(_ref, 'setRunning', function setRunning(b) {
    return running = b;
  }), _defineProperty(_ref, 'setResult', function setResult(r) {
    return _result = r;
  }), _defineProperty(_ref, 'setError', function setError(e) {
    return _error = e;
  }), _ref;
}

function autoInc() {
  var seed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;

  return function () {
    return ++seed;
  };
}

var uid = exports.uid = autoInc();

var kThrow = function kThrow(err) {
  throw err;
};
var kReturn = function kReturn(value) {
  return { value: value, done: true };
};
function makeIterator(next) {
  var thro = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : kThrow;
  var name = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
  var isHelper = arguments[3];

  var iterator = { name: name, next: next, throw: thro, return: kReturn };

  if (isHelper) {
    iterator[HELPER] = true;
  }
  if (typeof Symbol !== 'undefined') {
    iterator[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"] = function () {
      return iterator;
    };
  }
  return iterator;
}

function log(level, message) {
  var error = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';

  if (typeof window === 'undefined') {
    console.log('redux-saga ' + level + ': ' + message + '\n' + (error && error.stack || error));
  } else {
    console[level](message, error);
  }
}

function deprecate(fn, deprecationWarning) {
  return function () {
    if (isDev) log('warn', deprecationWarning);
    return fn.apply(undefined, arguments);
  };
}

var internalErr = exports.internalErr = function internalErr(err) {
  return new Error('\n  redux-saga: Error checking hooks detected an inconsistent state. This is likely a bug\n  in redux-saga code and not yours. Thanks for reporting this in the project\'s github repo.\n  Error: ' + err + '\n');
};

var createSetContextWarning = exports.createSetContextWarning = function createSetContextWarning(ctx, props) {
  return (ctx ? ctx + '.' : '') + 'setContext(props): argument ' + props + ' is not a plain object';
};

function wrapSagaDispatch(dispatch) {
  return function sagaDispatch(action) {
    var wrappedAction = Object.defineProperty(action, SAGA_ACTION, { value: true });
    return dispatch(wrappedAction);
  };
}
}, 2988, null, "redux-saga/lib/internal/utils.js");
__d(/* redux-saga/lib/internal/proc.js */function(global, require, module, exports) {'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TASK_CANCEL = exports.CHANNEL_END = exports.NOT_ITERATOR_ERROR = undefined;

var _typeof = typeof Symbol === "function" && typeof (typeof Symbol === "function" ? Symbol.iterator : "@@iterator") === "symbol" ? function (obj) {
  return typeof obj;
} : function (obj) {
  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== (typeof Symbol === "function" ? Symbol.prototype : "@@prototype") ? "symbol" : typeof obj;
};

exports.default = proc;

var _utils = require(2988     ); // 2988 = ./utils

var _scheduler = require(2990         ); // 2990 = ./scheduler

var _io = require(2991  ); // 2991 = ./io

var _channel = require(2993       ); // 2993 = ./channel

var _buffers = require(2994       ); // 2994 = ./buffers

function _defineEnumerableProperties(obj, descs) {
  for (var key in descs) {
    var desc = descs[key];desc.configurable = desc.enumerable = true;if ("value" in desc) desc.writable = true;Object.defineProperty(obj, key, desc);
  }return obj;
}

function _toConsumableArray(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }return arr2;
  } else {
    return Array.from(arr);
  }
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }return obj;
}

var NOT_ITERATOR_ERROR = exports.NOT_ITERATOR_ERROR = 'proc first argument (Saga function result) must be an iterator';

var CHANNEL_END = exports.CHANNEL_END = {
  toString: function toString() {
    return '@@redux-saga/CHANNEL_END';
  }
};
var TASK_CANCEL = exports.TASK_CANCEL = {
  toString: function toString() {
    return '@@redux-saga/TASK_CANCEL';
  }
};

var matchers = {
  wildcard: function wildcard() {
    return _utils.kTrue;
  },
  default: function _default(pattern) {
    return function (input) {
      return input.type === ((typeof pattern === 'undefined' ? 'undefined' : _typeof(pattern)) === 'symbol' ? pattern : String(pattern));
    };
  },
  array: function array(patterns) {
    return function (input) {
      return patterns.some(function (p) {
        return matcher(p)(input);
      });
    };
  },
  predicate: function predicate(_predicate) {
    return function (input) {
      return _predicate(input);
    };
  }
};

function matcher(pattern) {
  return (pattern === '*' ? matchers.wildcard : _utils.is.array(pattern) ? matchers.array : _utils.is.stringableFunc(pattern) ? matchers.default : _utils.is.func(pattern) ? matchers.predicate : matchers.default)(pattern);
}

function forkQueue(name, mainTask, cb) {
  var tasks = [],
      result = void 0,
      completed = false;
  addTask(mainTask);

  function abort(err) {
    cancelAll();
    cb(err, true);
  }

  function addTask(task) {
    tasks.push(task);
    task.cont = function (res, isErr) {
      if (completed) {
        return;
      }

      (0, _utils.remove)(tasks, task);
      task.cont = _utils.noop;
      if (isErr) {
        abort(res);
      } else {
        if (task === mainTask) {
          result = res;
        }
        if (!tasks.length) {
          completed = true;
          cb(result);
        }
      }
    };
  }

  function cancelAll() {
    if (completed) {
      return;
    }
    completed = true;
    tasks.forEach(function (t) {
      t.cont = _utils.noop;
      t.cancel();
    });
    tasks = [];
  }

  return {
    addTask: addTask,
    cancelAll: cancelAll,
    abort: abort,
    getTasks: function getTasks() {
      return tasks;
    },
    taskNames: function taskNames() {
      return tasks.map(function (t) {
        return t.name;
      });
    }
  };
}

function createTaskIterator(_ref) {
  var context = _ref.context,
      fn = _ref.fn,
      args = _ref.args;

  if (_utils.is.iterator(fn)) {
    return fn;
  }

  var result = void 0,
      error = void 0;
  try {
    result = fn.apply(context, args);
  } catch (err) {
    error = err;
  }

  if (_utils.is.iterator(result)) {
    return result;
  }

  return error ? (0, _utils.makeIterator)(function () {
    throw error;
  }) : (0, _utils.makeIterator)(function () {
    var pc = void 0;
    var eff = { done: false, value: result };
    var ret = function ret(value) {
      return { done: true, value: value };
    };
    return function (arg) {
      if (!pc) {
        pc = true;
        return eff;
      } else {
        return ret(arg);
      }
    };
  }());
}

var wrapHelper = function wrapHelper(helper) {
  return { fn: helper };
};

function proc(iterator) {
  var subscribe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {
    return _utils.noop;
  };
  var dispatch = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _utils.noop;
  var getState = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : _utils.noop;
  var parentContext = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};
  var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};
  var parentEffectId = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 0;
  var name = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 'anonymous';
  var cont = arguments[8];

  (0, _utils.check)(iterator, _utils.is.iterator, NOT_ITERATOR_ERROR);

  var sagaMonitor = options.sagaMonitor,
      logger = options.logger,
      onError = options.onError;

  var log = logger || _utils.log;
  var stdChannel = (0, _channel.stdChannel)(subscribe);
  var taskContext = Object.create(parentContext);

  next.cancel = _utils.noop;

  var task = newTask(parentEffectId, name, iterator, cont);
  var mainTask = { name: name, cancel: cancelMain, isRunning: true };
  var taskQueue = forkQueue(name, mainTask, end);

  function cancelMain() {
    if (mainTask.isRunning && !mainTask.isCancelled) {
      mainTask.isCancelled = true;
      next(TASK_CANCEL);
    }
  }

  function cancel() {
    if (iterator._isRunning && !iterator._isCancelled) {
      iterator._isCancelled = true;
      taskQueue.cancelAll();

      end(TASK_CANCEL);
    }
  }

  cont && (cont.cancel = cancel);

  iterator._isRunning = true;

  next();

  return task;

  function next(arg, isErr) {
    if (!mainTask.isRunning) {
      throw new Error('Trying to resume an already finished generator');
    }

    try {
      var result = void 0;
      if (isErr) {
        result = iterator.throw(arg);
      } else if (arg === TASK_CANCEL) {
        mainTask.isCancelled = true;

        next.cancel();

        result = _utils.is.func(iterator.return) ? iterator.return(TASK_CANCEL) : { done: true, value: TASK_CANCEL };
      } else if (arg === CHANNEL_END) {
        result = _utils.is.func(iterator.return) ? iterator.return() : { done: true };
      } else {
        result = iterator.next(arg);
      }

      if (!result.done) {
        runEffect(result.value, parentEffectId, '', next);
      } else {
        mainTask.isMainRunning = false;
        mainTask.cont && mainTask.cont(result.value);
      }
    } catch (error) {
      if (mainTask.isCancelled) {
        log('error', 'uncaught at ' + name, error.message);
      }
      mainTask.isMainRunning = false;
      mainTask.cont(error, true);
    }
  }

  function end(result, isErr) {
    iterator._isRunning = false;
    stdChannel.close();
    if (!isErr) {
      if (result === TASK_CANCEL && _utils.isDev) {
        log('info', name + ' has been cancelled', '');
      }
      iterator._result = result;
      iterator._deferredEnd && iterator._deferredEnd.resolve(result);
    } else {
      if (result instanceof Error) {
        result.sagaStack = 'at ' + name + ' \n ' + (result.sagaStack || result.stack);
      }
      if (!task.cont) {
        log('error', 'uncaught', result.sagaStack || result.stack);
        if (result instanceof Error && onError) {
          onError(result);
        }
      }
      iterator._error = result;
      iterator._isAborted = true;
      iterator._deferredEnd && iterator._deferredEnd.reject(result);
    }
    task.cont && task.cont(result, isErr);
    task.joiners.forEach(function (j) {
      return j.cb(result, isErr);
    });
    task.joiners = null;
  }

  function runEffect(effect, parentEffectId) {
    var label = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
    var cb = arguments[3];

    var effectId = (0, _utils.uid)();
    sagaMonitor && sagaMonitor.effectTriggered({ effectId: effectId, parentEffectId: parentEffectId, label: label, effect: effect });

    var effectSettled = void 0;

    function currCb(res, isErr) {
      if (effectSettled) {
        return;
      }

      effectSettled = true;
      cb.cancel = _utils.noop;
      if (sagaMonitor) {
        isErr ? sagaMonitor.effectRejected(effectId, res) : sagaMonitor.effectResolved(effectId, res);
      }

      cb(res, isErr);
    }

    currCb.cancel = _utils.noop;

    cb.cancel = function () {
      if (effectSettled) {
        return;
      }

      effectSettled = true;

      try {
        currCb.cancel();
      } catch (err) {
        log('error', 'uncaught at ' + name, err.message);
      }
      currCb.cancel = _utils.noop;

      sagaMonitor && sagaMonitor.effectCancelled(effectId);
    };

    var data = void 0;
    return _utils.is.promise(effect) ? resolvePromise(effect, currCb) : _utils.is.helper(effect) ? runForkEffect(wrapHelper(effect), effectId, currCb) : _utils.is.iterator(effect) ? resolveIterator(effect, effectId, name, currCb) : _utils.is.array(effect) ? runParallelEffect(effect, effectId, currCb) : _utils.is.notUndef(data = _io.asEffect.take(effect)) ? runTakeEffect(data, currCb) : _utils.is.notUndef(data = _io.asEffect.put(effect)) ? runPutEffect(data, currCb) : _utils.is.notUndef(data = _io.asEffect.race(effect)) ? runRaceEffect(data, effectId, currCb) : _utils.is.notUndef(data = _io.asEffect.call(effect)) ? runCallEffect(data, effectId, currCb) : _utils.is.notUndef(data = _io.asEffect.cps(effect)) ? runCPSEffect(data, currCb) : _utils.is.notUndef(data = _io.asEffect.fork(effect)) ? runForkEffect(data, effectId, currCb) : _utils.is.notUndef(data = _io.asEffect.join(effect)) ? runJoinEffect(data, currCb) : _utils.is.notUndef(data = _io.asEffect.cancel(effect)) ? runCancelEffect(data, currCb) : _utils.is.notUndef(data = _io.asEffect.select(effect)) ? runSelectEffect(data, currCb) : _utils.is.notUndef(data = _io.asEffect.actionChannel(effect)) ? runChannelEffect(data, currCb) : _utils.is.notUndef(data = _io.asEffect.flush(effect)) ? runFlushEffect(data, currCb) : _utils.is.notUndef(data = _io.asEffect.cancelled(effect)) ? runCancelledEffect(data, currCb) : _utils.is.notUndef(data = _io.asEffect.getContext(effect)) ? runGetContextEffect(data, currCb) : _utils.is.notUndef(data = _io.asEffect.setContext(effect)) ? runSetContextEffect(data, currCb) : currCb(effect);
  }

  function resolvePromise(promise, cb) {
    var cancelPromise = promise[_utils.CANCEL];
    if (typeof cancelPromise === 'function') {
      cb.cancel = cancelPromise;
    }
    promise.then(cb, function (error) {
      return cb(error, true);
    });
  }

  function resolveIterator(iterator, effectId, name, cb) {
    proc(iterator, subscribe, dispatch, getState, taskContext, options, effectId, name, cb);
  }

  function runTakeEffect(_ref2, cb) {
    var channel = _ref2.channel,
        pattern = _ref2.pattern,
        maybe = _ref2.maybe;

    channel = channel || stdChannel;
    var takeCb = function takeCb(inp) {
      return inp instanceof Error ? cb(inp, true) : (0, _channel.isEnd)(inp) && !maybe ? cb(CHANNEL_END) : cb(inp);
    };
    try {
      channel.take(takeCb, matcher(pattern));
    } catch (err) {
      return cb(err, true);
    }
    cb.cancel = takeCb.cancel;
  }

  function runPutEffect(_ref3, cb) {
    var channel = _ref3.channel,
        action = _ref3.action,
        resolve = _ref3.resolve;

    (0, _scheduler.asap)(function () {
      var result = void 0;
      try {
        result = (channel ? channel.put : dispatch)(action);
      } catch (error) {
        if (channel || resolve) return cb(error, true);
        log('error', 'uncaught at ' + name, error.stack || error.message || error);
      }

      if (resolve && _utils.is.promise(result)) {
        resolvePromise(result, cb);
      } else {
        return cb(result);
      }
    });
  }

  function runCallEffect(_ref4, effectId, cb) {
    var context = _ref4.context,
        fn = _ref4.fn,
        args = _ref4.args;

    var result = void 0;

    try {
      result = fn.apply(context, args);
    } catch (error) {
      return cb(error, true);
    }
    return _utils.is.promise(result) ? resolvePromise(result, cb) : _utils.is.iterator(result) ? resolveIterator(result, effectId, fn.name, cb) : cb(result);
  }

  function runCPSEffect(_ref5, cb) {
    var context = _ref5.context,
        fn = _ref5.fn,
        args = _ref5.args;

    try {
      var cpsCb = function cpsCb(err, res) {
        return _utils.is.undef(err) ? cb(res) : cb(err, true);
      };
      fn.apply(context, args.concat(cpsCb));
      if (cpsCb.cancel) {
        cb.cancel = function () {
          return cpsCb.cancel();
        };
      }
    } catch (error) {
      return cb(error, true);
    }
  }

  function runForkEffect(_ref6, effectId, cb) {
    var context = _ref6.context,
        fn = _ref6.fn,
        args = _ref6.args,
        detached = _ref6.detached;

    var taskIterator = createTaskIterator({ context: context, fn: fn, args: args });

    try {
      (0, _scheduler.suspend)();
      var _task = proc(taskIterator, subscribe, dispatch, getState, taskContext, options, effectId, fn.name, detached ? null : _utils.noop);

      if (detached) {
        cb(_task);
      } else {
        if (taskIterator._isRunning) {
          taskQueue.addTask(_task);
          cb(_task);
        } else if (taskIterator._error) {
          taskQueue.abort(taskIterator._error);
        } else {
          cb(_task);
        }
      }
    } finally {
      (0, _scheduler.flush)();
    }
  }

  function runJoinEffect(t, cb) {
    if (t.isRunning()) {
      var joiner = { task: task, cb: cb };
      cb.cancel = function () {
        return (0, _utils.remove)(t.joiners, joiner);
      };
      t.joiners.push(joiner);
    } else {
      t.isAborted() ? cb(t.error(), true) : cb(t.result());
    }
  }

  function runCancelEffect(taskToCancel, cb) {
    if (taskToCancel === _utils.SELF_CANCELLATION) {
      taskToCancel = task;
    }
    if (taskToCancel.isRunning()) {
      taskToCancel.cancel();
    }
    cb();
  }

  function runParallelEffect(effects, effectId, cb) {
    if (!effects.length) {
      return cb([]);
    }

    var completedCount = 0;
    var completed = void 0;
    var results = Array(effects.length);

    function checkEffectEnd() {
      if (completedCount === results.length) {
        completed = true;
        cb(results);
      }
    }

    var childCbs = effects.map(function (eff, idx) {
      var chCbAtIdx = function chCbAtIdx(res, isErr) {
        if (completed) {
          return;
        }
        if (isErr || (0, _channel.isEnd)(res) || res === CHANNEL_END || res === TASK_CANCEL) {
          cb.cancel();
          cb(res, isErr);
        } else {
          results[idx] = res;
          completedCount++;
          checkEffectEnd();
        }
      };
      chCbAtIdx.cancel = _utils.noop;
      return chCbAtIdx;
    });

    cb.cancel = function () {
      if (!completed) {
        completed = true;
        childCbs.forEach(function (chCb) {
          return chCb.cancel();
        });
      }
    };

    effects.forEach(function (eff, idx) {
      return runEffect(eff, effectId, idx, childCbs[idx]);
    });
  }

  function runRaceEffect(effects, effectId, cb) {
    var completed = void 0;
    var keys = Object.keys(effects);
    var childCbs = {};

    keys.forEach(function (key) {
      var chCbAtKey = function chCbAtKey(res, isErr) {
        if (completed) {
          return;
        }

        if (isErr) {
          cb.cancel();
          cb(res, true);
        } else if (!(0, _channel.isEnd)(res) && res !== CHANNEL_END && res !== TASK_CANCEL) {
          cb.cancel();
          completed = true;
          cb(_defineProperty({}, key, res));
        }
      };
      chCbAtKey.cancel = _utils.noop;
      childCbs[key] = chCbAtKey;
    });

    cb.cancel = function () {
      if (!completed) {
        completed = true;
        keys.forEach(function (key) {
          return childCbs[key].cancel();
        });
      }
    };
    keys.forEach(function (key) {
      if (completed) {
        return;
      }
      runEffect(effects[key], effectId, key, childCbs[key]);
    });
  }

  function runSelectEffect(_ref7, cb) {
    var selector = _ref7.selector,
        args = _ref7.args;

    try {
      var state = selector.apply(undefined, [getState()].concat(_toConsumableArray(args)));
      cb(state);
    } catch (error) {
      cb(error, true);
    }
  }

  function runChannelEffect(_ref8, cb) {
    var pattern = _ref8.pattern,
        buffer = _ref8.buffer;

    var match = matcher(pattern);
    match.pattern = pattern;
    cb((0, _channel.eventChannel)(subscribe, buffer || _buffers.buffers.fixed(), match));
  }

  function runCancelledEffect(data, cb) {
    cb(!!mainTask.isCancelled);
  }

  function runFlushEffect(channel, cb) {
    channel.flush(cb);
  }

  function runGetContextEffect(prop, cb) {
    cb(taskContext[prop]);
  }

  function runSetContextEffect(props, cb) {
    _utils.object.assign(taskContext, props);
    cb();
  }

  function newTask(id, name, iterator, cont) {
    var _done, _ref9, _mutatorMap;

    iterator._deferredEnd = null;
    return _ref9 = {}, _defineProperty(_ref9, _utils.TASK, true), _defineProperty(_ref9, 'id', id), _defineProperty(_ref9, 'name', name), _done = 'done', _mutatorMap = {}, _mutatorMap[_done] = _mutatorMap[_done] || {}, _mutatorMap[_done].get = function () {
      if (iterator._deferredEnd) {
        return iterator._deferredEnd.promise;
      } else {
        var def = (0, _utils.deferred)();
        iterator._deferredEnd = def;
        if (!iterator._isRunning) {
          iterator._error ? def.reject(iterator._error) : def.resolve(iterator._result);
        }
        return def.promise;
      }
    }, _defineProperty(_ref9, 'cont', cont), _defineProperty(_ref9, 'joiners', []), _defineProperty(_ref9, 'cancel', cancel), _defineProperty(_ref9, 'isRunning', function isRunning() {
      return iterator._isRunning;
    }), _defineProperty(_ref9, 'isCancelled', function isCancelled() {
      return iterator._isCancelled;
    }), _defineProperty(_ref9, 'isAborted', function isAborted() {
      return iterator._isAborted;
    }), _defineProperty(_ref9, 'result', function result() {
      return iterator._result;
    }), _defineProperty(_ref9, 'error', function error() {
      return iterator._error;
    }), _defineProperty(_ref9, 'setContext', function setContext(props) {
      (0, _utils.check)(props, _utils.is.object, (0, _utils.createSetContextWarning)('task', props));
      _utils.object.assign(taskContext, props);
    }), _defineEnumerableProperties(_ref9, _mutatorMap), _ref9;
  }
}
}, 2989, null, "redux-saga/lib/internal/proc.js");
__d(/* redux-saga/lib/internal/scheduler.js */function(global, require, module, exports) {"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.asap = asap;
exports.suspend = suspend;
exports.flush = flush;

var queue = [];

var semaphore = 0;

function exec(task) {
  try {
    suspend();
    task();
  } finally {
    release();
  }
}

function asap(task) {
  queue.push(task);

  if (!semaphore) {
    suspend();
    flush();
  }
}

function suspend() {
  semaphore++;
}

function release() {
  semaphore--;
}

function flush() {
  release();

  var task = void 0;
  while (!semaphore && (task = queue.shift()) !== undefined) {
    exec(task);
  }
}
}, 2990, null, "redux-saga/lib/internal/scheduler.js");
__d(/* redux-saga/lib/internal/io.js */function(global, require, module, exports) {'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.asEffect = exports.takem = undefined;

var _slicedToArray = function () {
  function sliceIterator(arr, i) {
    var _arr = [];var _n = true;var _d = false;var _e = undefined;try {
      for (var _i = arr[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"](), _s; !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);if (i && _arr.length === i) break;
      }
    } catch (err) {
      _d = true;_e = err;
    } finally {
      try {
        if (!_n && _i["return"]) _i["return"]();
      } finally {
        if (_d) throw _e;
      }
    }return _arr;
  }return function (arr, i) {
    if (Array.isArray(arr)) {
      return arr;
    } else if ((typeof Symbol === "function" ? Symbol.iterator : "@@iterator") in Object(arr)) {
      return sliceIterator(arr, i);
    } else {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    }
  };
}();

exports.take = take;
exports.put = put;
exports.race = race;
exports.call = call;
exports.apply = apply;
exports.cps = cps;
exports.fork = fork;
exports.spawn = spawn;
exports.join = join;
exports.cancel = cancel;
exports.select = select;
exports.actionChannel = actionChannel;
exports.cancelled = cancelled;
exports.flush = flush;
exports.getContext = getContext;
exports.setContext = setContext;
exports.takeEvery = takeEvery;
exports.takeLatest = takeLatest;
exports.throttle = throttle;

var _utils = require(2988     ); // 2988 = ./utils

var _sagaHelpers = require(2992           ); // 2992 = ./sagaHelpers

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }return obj;
}

var IO = (0, _utils.sym)('IO');
var TAKE = 'TAKE';
var PUT = 'PUT';
var RACE = 'RACE';
var CALL = 'CALL';
var CPS = 'CPS';
var FORK = 'FORK';
var JOIN = 'JOIN';
var CANCEL = 'CANCEL';
var SELECT = 'SELECT';
var ACTION_CHANNEL = 'ACTION_CHANNEL';
var CANCELLED = 'CANCELLED';
var FLUSH = 'FLUSH';
var GET_CONTEXT = 'GET_CONTEXT';
var SET_CONTEXT = 'SET_CONTEXT';

var TEST_HINT = '\n(HINT: if you are getting this errors in tests, consider using createMockTask from redux-saga/utils)';

var deprecationWarning = function deprecationWarning(deprecated, preferred) {
  return deprecated + ' has been deprecated in favor of ' + preferred + ', please update your code';
};

var effect = function effect(type, payload) {
  var _ref;

  return _ref = {}, _defineProperty(_ref, IO, true), _defineProperty(_ref, type, payload), _ref;
};

function take() {
  var patternOrChannel = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '*';

  if (arguments.length) {
    (0, _utils.check)(arguments[0], _utils.is.notUndef, 'take(patternOrChannel): patternOrChannel is undefined');
  }
  if (_utils.is.pattern(patternOrChannel)) {
    return effect(TAKE, { pattern: patternOrChannel });
  }
  if (_utils.is.channel(patternOrChannel)) {
    return effect(TAKE, { channel: patternOrChannel });
  }
  throw new Error('take(patternOrChannel): argument ' + String(patternOrChannel) + ' is not valid channel or a valid pattern');
}

take.maybe = function () {
  var eff = take.apply(undefined, arguments);
  eff[TAKE].maybe = true;
  return eff;
};

var takem = exports.takem = (0, _utils.deprecate)(take.maybe, deprecationWarning('takem', 'take.maybe'));

function put(channel, action) {
  if (arguments.length > 1) {
    (0, _utils.check)(channel, _utils.is.notUndef, 'put(channel, action): argument channel is undefined');
    (0, _utils.check)(channel, _utils.is.channel, 'put(channel, action): argument ' + channel + ' is not a valid channel');
    (0, _utils.check)(action, _utils.is.notUndef, 'put(channel, action): argument action is undefined');
  } else {
    (0, _utils.check)(channel, _utils.is.notUndef, 'put(action): argument action is undefined');
    action = channel;
    channel = null;
  }
  return effect(PUT, { channel: channel, action: action });
}

put.resolve = function () {
  var eff = put.apply(undefined, arguments);
  eff[PUT].resolve = true;
  return eff;
};

put.sync = (0, _utils.deprecate)(put.resolve, deprecationWarning('put.sync', 'put.resolve'));

function race(effects) {
  return effect(RACE, effects);
}

function getFnCallDesc(meth, fn, args) {
  (0, _utils.check)(fn, _utils.is.notUndef, meth + ': argument fn is undefined');

  var context = null;
  if (_utils.is.array(fn)) {
    var _fn = fn;

    var _fn2 = _slicedToArray(_fn, 2);

    context = _fn2[0];
    fn = _fn2[1];
  } else if (fn.fn) {
    var _fn3 = fn;
    context = _fn3.context;
    fn = _fn3.fn;
  }
  (0, _utils.check)(fn, _utils.is.func, meth + ': argument ' + fn + ' is not a function');

  return { context: context, fn: fn, args: args };
}

function call(fn) {
  for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    args[_key - 1] = arguments[_key];
  }

  return effect(CALL, getFnCallDesc('call', fn, args));
}

function apply(context, fn) {
  var args = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];

  return effect(CALL, getFnCallDesc('apply', { context: context, fn: fn }, args));
}

function cps(fn) {
  for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
    args[_key2 - 1] = arguments[_key2];
  }

  return effect(CPS, getFnCallDesc('cps', fn, args));
}

function fork(fn) {
  for (var _len3 = arguments.length, args = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
    args[_key3 - 1] = arguments[_key3];
  }

  return effect(FORK, getFnCallDesc('fork', fn, args));
}

function spawn(fn) {
  for (var _len4 = arguments.length, args = Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {
    args[_key4 - 1] = arguments[_key4];
  }

  var eff = fork.apply(undefined, [fn].concat(args));
  eff[FORK].detached = true;
  return eff;
}

function join() {
  for (var _len5 = arguments.length, tasks = Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
    tasks[_key5] = arguments[_key5];
  }

  if (tasks.length > 1) {
    return tasks.map(function (t) {
      return join(t);
    });
  }
  var task = tasks[0];
  (0, _utils.check)(task, _utils.is.notUndef, 'join(task): argument task is undefined');
  (0, _utils.check)(task, _utils.is.task, 'join(task): argument ' + task + ' is not a valid Task object ' + TEST_HINT);
  return effect(JOIN, task);
}

function cancel() {
  for (var _len6 = arguments.length, tasks = Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
    tasks[_key6] = arguments[_key6];
  }

  if (tasks.length > 1) {
    return tasks.map(function (t) {
      return cancel(t);
    });
  }
  var task = tasks[0];
  if (tasks.length === 1) {
    (0, _utils.check)(task, _utils.is.notUndef, 'cancel(task): argument task is undefined');
    (0, _utils.check)(task, _utils.is.task, 'cancel(task): argument ' + task + ' is not a valid Task object ' + TEST_HINT);
  }
  return effect(CANCEL, task || _utils.SELF_CANCELLATION);
}

function select(selector) {
  for (var _len7 = arguments.length, args = Array(_len7 > 1 ? _len7 - 1 : 0), _key7 = 1; _key7 < _len7; _key7++) {
    args[_key7 - 1] = arguments[_key7];
  }

  if (arguments.length === 0) {
    selector = _utils.ident;
  } else {
    (0, _utils.check)(selector, _utils.is.notUndef, 'select(selector,[...]): argument selector is undefined');
    (0, _utils.check)(selector, _utils.is.func, 'select(selector,[...]): argument ' + selector + ' is not a function');
  }
  return effect(SELECT, { selector: selector, args: args });
}

function actionChannel(pattern, buffer) {
  (0, _utils.check)(pattern, _utils.is.notUndef, 'actionChannel(pattern,...): argument pattern is undefined');
  if (arguments.length > 1) {
    (0, _utils.check)(buffer, _utils.is.notUndef, 'actionChannel(pattern, buffer): argument buffer is undefined');
    (0, _utils.check)(buffer, _utils.is.buffer, 'actionChannel(pattern, buffer): argument ' + buffer + ' is not a valid buffer');
  }
  return effect(ACTION_CHANNEL, { pattern: pattern, buffer: buffer });
}

function cancelled() {
  return effect(CANCELLED, {});
}

function flush(channel) {
  (0, _utils.check)(channel, _utils.is.channel, 'flush(channel): argument ' + channel + ' is not valid channel');
  return effect(FLUSH, channel);
}

function getContext(prop) {
  (0, _utils.check)(prop, _utils.is.string, 'getContext(prop): argument ' + prop + ' is not a string');
  return effect(GET_CONTEXT, prop);
}

function setContext(props) {
  (0, _utils.check)(props, _utils.is.object, (0, _utils.createSetContextWarning)(null, props));
  return effect(SET_CONTEXT, props);
}

function takeEvery(patternOrChannel, worker) {
  for (var _len8 = arguments.length, args = Array(_len8 > 2 ? _len8 - 2 : 0), _key8 = 2; _key8 < _len8; _key8++) {
    args[_key8 - 2] = arguments[_key8];
  }

  return fork.apply(undefined, [_sagaHelpers.takeEveryHelper, patternOrChannel, worker].concat(args));
}

function takeLatest(patternOrChannel, worker) {
  for (var _len9 = arguments.length, args = Array(_len9 > 2 ? _len9 - 2 : 0), _key9 = 2; _key9 < _len9; _key9++) {
    args[_key9 - 2] = arguments[_key9];
  }

  return fork.apply(undefined, [_sagaHelpers.takeLatestHelper, patternOrChannel, worker].concat(args));
}

function throttle(ms, pattern, worker) {
  for (var _len10 = arguments.length, args = Array(_len10 > 3 ? _len10 - 3 : 0), _key10 = 3; _key10 < _len10; _key10++) {
    args[_key10 - 3] = arguments[_key10];
  }

  return fork.apply(undefined, [_sagaHelpers.throttleHelper, ms, pattern, worker].concat(args));
}

var createAsEffectType = function createAsEffectType(type) {
  return function (effect) {
    return effect && effect[IO] && effect[type];
  };
};

var asEffect = exports.asEffect = {
  take: createAsEffectType(TAKE),
  put: createAsEffectType(PUT),
  race: createAsEffectType(RACE),
  call: createAsEffectType(CALL),
  cps: createAsEffectType(CPS),
  fork: createAsEffectType(FORK),
  join: createAsEffectType(JOIN),
  cancel: createAsEffectType(CANCEL),
  select: createAsEffectType(SELECT),
  actionChannel: createAsEffectType(ACTION_CHANNEL),
  cancelled: createAsEffectType(CANCELLED),
  flush: createAsEffectType(FLUSH),
  getContext: createAsEffectType(GET_CONTEXT),
  setContext: createAsEffectType(SET_CONTEXT)
};
}, 2991, null, "redux-saga/lib/internal/io.js");
__d(/* redux-saga/lib/internal/sagaHelpers.js */function(global, require, module, exports) {'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.throttle = exports.takeLatest = exports.takeEvery = undefined;

var _slicedToArray = function () {
  function sliceIterator(arr, i) {
    var _arr = [];var _n = true;var _d = false;var _e = undefined;try {
      for (var _i = arr[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"](), _s; !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);if (i && _arr.length === i) break;
      }
    } catch (err) {
      _d = true;_e = err;
    } finally {
      try {
        if (!_n && _i["return"]) _i["return"]();
      } finally {
        if (_d) throw _e;
      }
    }return _arr;
  }return function (arr, i) {
    if (Array.isArray(arr)) {
      return arr;
    } else if ((typeof Symbol === "function" ? Symbol.iterator : "@@iterator") in Object(arr)) {
      return sliceIterator(arr, i);
    } else {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    }
  };
}();

exports.takeEveryHelper = takeEveryHelper;
exports.takeLatestHelper = takeLatestHelper;
exports.throttleHelper = throttleHelper;

var _channel = require(2993       ); // 2993 = ./channel

var _utils = require(2988     ); // 2988 = ./utils

var _io = require(2991  ); // 2991 = ./io

var _buffers = require(2994       ); // 2994 = ./buffers

var done = { done: true, value: undefined };
var qEnd = {};

function fsmIterator(fsm, q0) {
  var name = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'iterator';

  var updateState = void 0,
      qNext = q0;

  function next(arg, error) {
    if (qNext === qEnd) {
      return done;
    }

    if (error) {
      qNext = qEnd;
      throw error;
    } else {
      updateState && updateState(arg);

      var _fsm$qNext = fsm[qNext](),
          _fsm$qNext2 = _slicedToArray(_fsm$qNext, 3),
          q = _fsm$qNext2[0],
          output = _fsm$qNext2[1],
          _updateState = _fsm$qNext2[2];

      qNext = q;
      updateState = _updateState;
      return qNext === qEnd ? done : output;
    }
  }

  return (0, _utils.makeIterator)(next, function (error) {
    return next(null, error);
  }, name, true);
}

function safeName(patternOrChannel) {
  if (_utils.is.channel(patternOrChannel)) {
    return 'channel';
  } else if (Array.isArray(patternOrChannel)) {
    return String(patternOrChannel.map(function (entry) {
      return String(entry);
    }));
  } else {
    return String(patternOrChannel);
  }
}

function takeEveryHelper(patternOrChannel, worker) {
  for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
    args[_key - 2] = arguments[_key];
  }

  var yTake = { done: false, value: (0, _io.take)(patternOrChannel) };
  var yFork = function yFork(ac) {
    return { done: false, value: _io.fork.apply(undefined, [worker].concat(args, [ac])) };
  };

  var action = void 0,
      setAction = function setAction(ac) {
    return action = ac;
  };

  return fsmIterator({
    q1: function q1() {
      return ['q2', yTake, setAction];
    },
    q2: function q2() {
      return action === _channel.END ? [qEnd] : ['q1', yFork(action)];
    }
  }, 'q1', 'takeEvery(' + safeName(patternOrChannel) + ', ' + worker.name + ')');
}

function takeLatestHelper(patternOrChannel, worker) {
  for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
    args[_key2 - 2] = arguments[_key2];
  }

  var yTake = { done: false, value: (0, _io.take)(patternOrChannel) };
  var yFork = function yFork(ac) {
    return { done: false, value: _io.fork.apply(undefined, [worker].concat(args, [ac])) };
  };
  var yCancel = function yCancel(task) {
    return { done: false, value: (0, _io.cancel)(task) };
  };

  var task = void 0,
      action = void 0;
  var setTask = function setTask(t) {
    return task = t;
  };
  var setAction = function setAction(ac) {
    return action = ac;
  };

  return fsmIterator({
    q1: function q1() {
      return ['q2', yTake, setAction];
    },
    q2: function q2() {
      return action === _channel.END ? [qEnd] : task ? ['q3', yCancel(task)] : ['q1', yFork(action), setTask];
    },
    q3: function q3() {
      return ['q1', yFork(action), setTask];
    }
  }, 'q1', 'takeLatest(' + safeName(patternOrChannel) + ', ' + worker.name + ')');
}

function throttleHelper(delayLength, pattern, worker) {
  for (var _len3 = arguments.length, args = Array(_len3 > 3 ? _len3 - 3 : 0), _key3 = 3; _key3 < _len3; _key3++) {
    args[_key3 - 3] = arguments[_key3];
  }

  var action = void 0,
      channel = void 0;

  var yActionChannel = { done: false, value: (0, _io.actionChannel)(pattern, _buffers.buffers.sliding(1)) };
  var yTake = function yTake() {
    return { done: false, value: (0, _io.take)(channel) };
  };
  var yFork = function yFork(ac) {
    return { done: false, value: _io.fork.apply(undefined, [worker].concat(args, [ac])) };
  };
  var yDelay = { done: false, value: (0, _io.call)(_utils.delay, delayLength) };

  var setAction = function setAction(ac) {
    return action = ac;
  };
  var setChannel = function setChannel(ch) {
    return channel = ch;
  };

  return fsmIterator({
    q1: function q1() {
      return ['q2', yActionChannel, setChannel];
    },
    q2: function q2() {
      return ['q3', yTake(), setAction];
    },
    q3: function q3() {
      return action === _channel.END ? [qEnd] : ['q4', yFork(action)];
    },
    q4: function q4() {
      return ['q2', yDelay];
    }
  }, 'q1', 'throttle(' + safeName(pattern) + ', ' + worker.name + ')');
}

var deprecationWarning = function deprecationWarning(helperName) {
  return 'import ' + helperName + ' from \'redux-saga\' has been deprecated in favor of import ' + helperName + ' from \'redux-saga/effects\'.\nThe latter will not work with yield*, as helper effects are wrapped automatically for you in fork effect.\nTherefore yield ' + helperName + ' will return task descriptor to your saga and execute next lines of code.';
};
var takeEvery = exports.takeEvery = (0, _utils.deprecate)(takeEveryHelper, deprecationWarning('takeEvery'));
var takeLatest = exports.takeLatest = (0, _utils.deprecate)(takeLatestHelper, deprecationWarning('takeLatest'));
var throttle = exports.throttle = (0, _utils.deprecate)(throttleHelper, deprecationWarning('throttle'));
}, 2992, null, "redux-saga/lib/internal/sagaHelpers.js");
__d(/* redux-saga/lib/internal/channel.js */function(global, require, module, exports) {'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.UNDEFINED_INPUT_ERROR = exports.INVALID_BUFFER = exports.isEnd = exports.END = undefined;

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }return target;
};

exports.emitter = emitter;
exports.channel = channel;
exports.eventChannel = eventChannel;
exports.stdChannel = stdChannel;

var _utils = require(2988     ); // 2988 = ./utils

var _buffers = require(2994       ); // 2994 = ./buffers

var _scheduler = require(2990         ); // 2990 = ./scheduler

var CHANNEL_END_TYPE = '@@redux-saga/CHANNEL_END';
var END = exports.END = { type: CHANNEL_END_TYPE };
var isEnd = exports.isEnd = function isEnd(a) {
  return a && a.type === CHANNEL_END_TYPE;
};

function emitter() {
  var subscribers = [];

  function subscribe(sub) {
    subscribers.push(sub);
    return function () {
      return (0, _utils.remove)(subscribers, sub);
    };
  }

  function emit(item) {
    var arr = subscribers.slice();
    for (var i = 0, len = arr.length; i < len; i++) {
      arr[i](item);
    }
  }

  return {
    subscribe: subscribe,
    emit: emit
  };
}

var INVALID_BUFFER = exports.INVALID_BUFFER = 'invalid buffer passed to channel factory function';
var UNDEFINED_INPUT_ERROR = exports.UNDEFINED_INPUT_ERROR = 'Saga was provided with an undefined action';

if (process.env.NODE_ENV !== 'production') {
  exports.UNDEFINED_INPUT_ERROR = UNDEFINED_INPUT_ERROR += '\nHints:\n    - check that your Action Creator returns a non-undefined value\n    - if the Saga was started using runSaga, check that your subscribe source provides the action to its listeners\n  ';
}

function channel() {
  var buffer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _buffers.buffers.fixed();

  var closed = false;
  var takers = [];

  (0, _utils.check)(buffer, _utils.is.buffer, INVALID_BUFFER);

  function checkForbiddenStates() {
    if (closed && takers.length) {
      throw (0, _utils.internalErr)('Cannot have a closed channel with pending takers');
    }
    if (takers.length && !buffer.isEmpty()) {
      throw (0, _utils.internalErr)('Cannot have pending takers with non empty buffer');
    }
  }

  function put(input) {
    checkForbiddenStates();
    (0, _utils.check)(input, _utils.is.notUndef, UNDEFINED_INPUT_ERROR);
    if (closed) {
      return;
    }
    if (!takers.length) {
      return buffer.put(input);
    }
    for (var i = 0; i < takers.length; i++) {
      var cb = takers[i];
      if (!cb[_utils.MATCH] || cb[_utils.MATCH](input)) {
        takers.splice(i, 1);
        return cb(input);
      }
    }
  }

  function take(cb) {
    checkForbiddenStates();
    (0, _utils.check)(cb, _utils.is.func, 'channel.take\'s callback must be a function');

    if (closed && buffer.isEmpty()) {
      cb(END);
    } else if (!buffer.isEmpty()) {
      cb(buffer.take());
    } else {
      takers.push(cb);
      cb.cancel = function () {
        return (0, _utils.remove)(takers, cb);
      };
    }
  }

  function flush(cb) {
    checkForbiddenStates();
    (0, _utils.check)(cb, _utils.is.func, 'channel.flush\' callback must be a function');
    if (closed && buffer.isEmpty()) {
      cb(END);
      return;
    }
    cb(buffer.flush());
  }

  function close() {
    checkForbiddenStates();
    if (!closed) {
      closed = true;
      if (takers.length) {
        var arr = takers;
        takers = [];
        for (var i = 0, len = arr.length; i < len; i++) {
          arr[i](END);
        }
      }
    }
  }

  return { take: take, put: put, flush: flush, close: close,
    get __takers__() {
      return takers;
    },
    get __closed__() {
      return closed;
    }
  };
}

function eventChannel(subscribe) {
  var buffer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _buffers.buffers.none();
  var matcher = arguments[2];

  if (arguments.length > 2) {
    (0, _utils.check)(matcher, _utils.is.func, 'Invalid match function passed to eventChannel');
  }

  var chan = channel(buffer);
  var unsubscribe = subscribe(function (input) {
    if (isEnd(input)) {
      chan.close();
      return;
    }
    if (matcher && !matcher(input)) {
      return;
    }
    chan.put(input);
  });

  if (!_utils.is.func(unsubscribe)) {
    throw new Error('in eventChannel: subscribe should return a function to unsubscribe');
  }

  return {
    take: chan.take,
    flush: chan.flush,
    close: function close() {
      if (!chan.__closed__) {
        chan.close();
        unsubscribe();
      }
    }
  };
}

function stdChannel(subscribe) {
  var chan = eventChannel(function (cb) {
    return subscribe(function (input) {
      if (input[_utils.SAGA_ACTION]) {
        cb(input);
        return;
      }
      (0, _scheduler.asap)(function () {
        return cb(input);
      });
    });
  });

  return _extends({}, chan, {
    take: function take(cb, matcher) {
      if (arguments.length > 1) {
        (0, _utils.check)(matcher, _utils.is.func, 'channel.take\'s matcher argument must be a function');
        cb[_utils.MATCH] = matcher;
      }
      chan.take(cb);
    }
  });
}
}, 2993, null, "redux-saga/lib/internal/channel.js");
__d(/* redux-saga/lib/internal/buffers.js */function(global, require, module, exports) {'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.buffers = exports.BUFFER_OVERFLOW = undefined;

var _utils = require(2988     ); // 2988 = ./utils

var BUFFER_OVERFLOW = exports.BUFFER_OVERFLOW = 'Channel\'s Buffer overflow!';

var ON_OVERFLOW_THROW = 1;
var ON_OVERFLOW_DROP = 2;
var ON_OVERFLOW_SLIDE = 3;
var ON_OVERFLOW_EXPAND = 4;

var zeroBuffer = { isEmpty: _utils.kTrue, put: _utils.noop, take: _utils.noop };

function ringBuffer() {
  var limit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;
  var overflowAction = arguments[1];

  var arr = new Array(limit);
  var length = 0;
  var pushIndex = 0;
  var popIndex = 0;

  var push = function push(it) {
    arr[pushIndex] = it;
    pushIndex = (pushIndex + 1) % limit;
    length++;
  };

  var take = function take() {
    if (length != 0) {
      var it = arr[popIndex];
      arr[popIndex] = null;
      length--;
      popIndex = (popIndex + 1) % limit;
      return it;
    }
  };

  var flush = function flush() {
    var items = [];
    while (length) {
      items.push(take());
    }
    return items;
  };

  return {
    isEmpty: function isEmpty() {
      return length == 0;
    },
    put: function put(it) {
      if (length < limit) {
        push(it);
      } else {
        var doubledLimit = void 0;
        switch (overflowAction) {
          case ON_OVERFLOW_THROW:
            throw new Error(BUFFER_OVERFLOW);
          case ON_OVERFLOW_SLIDE:
            arr[pushIndex] = it;
            pushIndex = (pushIndex + 1) % limit;
            popIndex = pushIndex;
            break;
          case ON_OVERFLOW_EXPAND:
            doubledLimit = 2 * limit;

            arr = flush();

            length = arr.length;
            pushIndex = arr.length;
            popIndex = 0;

            arr.length = doubledLimit;
            limit = doubledLimit;

            push(it);
            break;
          default:
        }
      }
    },
    take: take, flush: flush
  };
}

var buffers = exports.buffers = {
  none: function none() {
    return zeroBuffer;
  },
  fixed: function fixed(limit) {
    return ringBuffer(limit, ON_OVERFLOW_THROW);
  },
  dropping: function dropping(limit) {
    return ringBuffer(limit, ON_OVERFLOW_DROP);
  },
  sliding: function sliding(limit) {
    return ringBuffer(limit, ON_OVERFLOW_SLIDE);
  },
  expanding: function expanding(initialSize) {
    return ringBuffer(initialSize, ON_OVERFLOW_EXPAND);
  }
};
}, 2994, null, "redux-saga/lib/internal/buffers.js");
__d(/* redux-saga/lib/internal/middleware.js */function(global, require, module, exports) {'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = sagaMiddlewareFactory;

var _utils = require(2988     ); // 2988 = ./utils

var _proc = require(2989    ); // 2989 = ./proc

var _proc2 = _interopRequireDefault(_proc);

var _channel = require(2993       ); // 2993 = ./channel

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

function _toConsumableArray(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }return arr2;
  } else {
    return Array.from(arr);
  }
}

function _objectWithoutProperties(obj, keys) {
  var target = {};for (var i in obj) {
    if (keys.indexOf(i) >= 0) continue;if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;target[i] = obj[i];
  }return target;
}

function sagaMiddlewareFactory() {
  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  var _ref$context = _ref.context,
      context = _ref$context === undefined ? {} : _ref$context,
      options = _objectWithoutProperties(_ref, ['context']);

  var runSagaDynamically = void 0;
  var sagaMonitor = options.sagaMonitor;

  if (sagaMonitor) {
    sagaMonitor.effectTriggered = sagaMonitor.effectTriggered || _utils.noop;
    sagaMonitor.effectResolved = sagaMonitor.effectResolved || _utils.noop;
    sagaMonitor.effectRejected = sagaMonitor.effectRejected || _utils.noop;
    sagaMonitor.effectCancelled = sagaMonitor.effectCancelled || _utils.noop;
    sagaMonitor.actionDispatched = sagaMonitor.actionDispatched || _utils.noop;
  }

  if (_utils.is.func(options)) {
    if (process.env.NODE_ENV === 'production') {
      throw new Error('Saga middleware no longer accept Generator functions. Use sagaMiddleware.run instead');
    } else {
      throw new Error('You passed a function to the Saga middleware. You are likely trying to start a        Saga by directly passing it to the middleware. This is no longer possible starting from 0.10.0.        To run a Saga, you must do it dynamically AFTER mounting the middleware into the store.\n        Example:\n          import createSagaMiddleware from \'redux-saga\'\n          ... other imports\n\n          const sagaMiddleware = createSagaMiddleware()\n          const store = createStore(reducer, applyMiddleware(sagaMiddleware))\n          sagaMiddleware.run(saga, ...args)\n      ');
    }
  }

  if (options.logger && !_utils.is.func(options.logger)) {
    throw new Error('`options.logger` passed to the Saga middleware is not a function!');
  }

  if (options.onerror) {
    if (_utils.isDev) (0, _utils.log)('warn', '`options.onerror` is deprecated. Use `options.onError` instead.');
    options.onError = options.onerror;
    delete options.onerror;
  }

  if (options.onError && !_utils.is.func(options.onError)) {
    throw new Error('`options.onError` passed to the Saga middleware is not a function!');
  }

  if (options.emitter && !_utils.is.func(options.emitter)) {
    throw new Error('`options.emitter` passed to the Saga middleware is not a function!');
  }

  function sagaMiddleware(_ref2) {
    var getState = _ref2.getState,
        dispatch = _ref2.dispatch;

    runSagaDynamically = runSaga;
    var sagaEmitter = (0, _channel.emitter)();
    sagaEmitter.emit = (options.emitter || _utils.ident)(sagaEmitter.emit);
    var sagaDispatch = (0, _utils.wrapSagaDispatch)(dispatch);

    function runSaga(saga, args, sagaId) {
      return (0, _proc2.default)(saga.apply(undefined, _toConsumableArray(args)), sagaEmitter.subscribe, sagaDispatch, getState, context, options, sagaId, saga.name);
    }

    return function (next) {
      return function (action) {
        if (sagaMonitor) {
          sagaMonitor.actionDispatched(action);
        }
        var result = next(action);
        sagaEmitter.emit(action);
        return result;
      };
    };
  }

  sagaMiddleware.run = function (saga) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    (0, _utils.check)(runSagaDynamically, _utils.is.notUndef, 'Before running a Saga, you must mount the Saga middleware on the Store using applyMiddleware');
    (0, _utils.check)(saga, _utils.is.func, 'sagaMiddleware.run(saga, ...args): saga argument must be a Generator function!');

    var effectId = (0, _utils.uid)();
    if (sagaMonitor) {
      sagaMonitor.effectTriggered({ effectId: effectId, root: true, parentEffectId: 0, effect: { root: true, saga: saga, args: args } });
    }
    var task = runSagaDynamically(saga, args, effectId);
    if (sagaMonitor) {
      sagaMonitor.effectResolved(effectId, task);
    }
    return task;
  };

  sagaMiddleware.setContext = function (props) {
    (0, _utils.check)(props, _utils.is.object, (0, _utils.createSetContextWarning)('sagaMiddleware', props));
    _utils.object.assign(context, props);
  };

  return sagaMiddleware;
}
}, 2995, null, "redux-saga/lib/internal/middleware.js");
__d(/* redux-saga/lib/effects.js */function(global, require, module, exports) {'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _io = require(2991           ); // 2991 = ./internal/io

Object.defineProperty(exports, 'take', {
  enumerable: true,
  get: function get() {
    return _io.take;
  }
});
Object.defineProperty(exports, 'takem', {
  enumerable: true,
  get: function get() {
    return _io.takem;
  }
});
Object.defineProperty(exports, 'put', {
  enumerable: true,
  get: function get() {
    return _io.put;
  }
});
Object.defineProperty(exports, 'race', {
  enumerable: true,
  get: function get() {
    return _io.race;
  }
});
Object.defineProperty(exports, 'call', {
  enumerable: true,
  get: function get() {
    return _io.call;
  }
});
Object.defineProperty(exports, 'apply', {
  enumerable: true,
  get: function get() {
    return _io.apply;
  }
});
Object.defineProperty(exports, 'cps', {
  enumerable: true,
  get: function get() {
    return _io.cps;
  }
});
Object.defineProperty(exports, 'fork', {
  enumerable: true,
  get: function get() {
    return _io.fork;
  }
});
Object.defineProperty(exports, 'spawn', {
  enumerable: true,
  get: function get() {
    return _io.spawn;
  }
});
Object.defineProperty(exports, 'join', {
  enumerable: true,
  get: function get() {
    return _io.join;
  }
});
Object.defineProperty(exports, 'cancel', {
  enumerable: true,
  get: function get() {
    return _io.cancel;
  }
});
Object.defineProperty(exports, 'select', {
  enumerable: true,
  get: function get() {
    return _io.select;
  }
});
Object.defineProperty(exports, 'actionChannel', {
  enumerable: true,
  get: function get() {
    return _io.actionChannel;
  }
});
Object.defineProperty(exports, 'cancelled', {
  enumerable: true,
  get: function get() {
    return _io.cancelled;
  }
});
Object.defineProperty(exports, 'flush', {
  enumerable: true,
  get: function get() {
    return _io.flush;
  }
});
Object.defineProperty(exports, 'getContext', {
  enumerable: true,
  get: function get() {
    return _io.getContext;
  }
});
Object.defineProperty(exports, 'setContext', {
  enumerable: true,
  get: function get() {
    return _io.setContext;
  }
});
Object.defineProperty(exports, 'takeEvery', {
  enumerable: true,
  get: function get() {
    return _io.takeEvery;
  }
});
Object.defineProperty(exports, 'takeLatest', {
  enumerable: true,
  get: function get() {
    return _io.takeLatest;
  }
});
Object.defineProperty(exports, 'throttle', {
  enumerable: true,
  get: function get() {
    return _io.throttle;
  }
});
}, 2996, null, "redux-saga/lib/effects.js");
__d(/* redux-saga/lib/utils.js */function(global, require, module, exports) {'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _utils = require(2988              ); // 2988 = ./internal/utils

Object.defineProperty(exports, 'TASK', {
  enumerable: true,
  get: function get() {
    return _utils.TASK;
  }
});
Object.defineProperty(exports, 'SAGA_ACTION', {
  enumerable: true,
  get: function get() {
    return _utils.SAGA_ACTION;
  }
});
Object.defineProperty(exports, 'noop', {
  enumerable: true,
  get: function get() {
    return _utils.noop;
  }
});
Object.defineProperty(exports, 'is', {
  enumerable: true,
  get: function get() {
    return _utils.is;
  }
});
Object.defineProperty(exports, 'deferred', {
  enumerable: true,
  get: function get() {
    return _utils.deferred;
  }
});
Object.defineProperty(exports, 'arrayOfDeffered', {
  enumerable: true,
  get: function get() {
    return _utils.arrayOfDeffered;
  }
});
Object.defineProperty(exports, 'createMockTask', {
  enumerable: true,
  get: function get() {
    return _utils.createMockTask;
  }
});

var _io = require(2991           ); // 2991 = ./internal/io

Object.defineProperty(exports, 'asEffect', {
  enumerable: true,
  get: function get() {
    return _io.asEffect;
  }
});

var _proc = require(2989             ); // 2989 = ./internal/proc

Object.defineProperty(exports, 'CHANNEL_END', {
  enumerable: true,
  get: function get() {
    return _proc.CHANNEL_END;
  }
});
}, 2997, null, "redux-saga/lib/utils.js");
__d(/* UI/App/Services/RehydrationServices.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _ReduxPersist = require(2969                    ); // 2969 = ../Config/ReduxPersist

var _ReduxPersist2 = babelHelpers.interopRequireDefault(_ReduxPersist);

var _reactNative = require(334           ); // 334 = react-native

var _reduxPersist = require(2974           ); // 2974 = redux-persist

var _StartupRedux = require(2968                   ); // 2968 = ../Redux/StartupRedux

var _StartupRedux2 = babelHelpers.interopRequireDefault(_StartupRedux);

var _DebugConfig = require(13                     ); // 13 = ../Config/DebugConfig

var _DebugConfig2 = babelHelpers.interopRequireDefault(_DebugConfig);

var updateReducers = function updateReducers(store) {
  var reducerVersion = _ReduxPersist2.default.reducerVersion;
  var config = _ReduxPersist2.default.storeConfig;
  var startup = function startup() {
    return store.dispatch(_StartupRedux2.default.startup());
  };

  _reactNative.AsyncStorage.getItem('reducerVersion').then(function (localVersion) {
    if (localVersion !== reducerVersion) {
      if (_DebugConfig2.default.useReactotron) {
        console.tron.display({
          name: 'PURGE',
          value: {
            'Old Version:': localVersion,
            'New Version:': reducerVersion
          },
          preview: 'Reducer Version Change Detected',
          important: true
        });
      }

      (0, _reduxPersist.persistStore)(store, config, startup).purge();
      _reactNative.AsyncStorage.setItem('reducerVersion', reducerVersion);
    } else {
      (0, _reduxPersist.persistStore)(store, config, startup);
    }
  }).catch(function () {
    (0, _reduxPersist.persistStore)(store, config, startup);
    _reactNative.AsyncStorage.setItem('reducerVersion', reducerVersion);
  });
};

exports.default = { updateReducers: updateReducers };
}, 2998, null, "UI/App/Services/RehydrationServices.js");
__d(/* UI/App/Sagas/index.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = root;

var _effects = require(2996                ); // 2996 = redux-saga/effects

var _Api = require(2323             ); // 2323 = ../Services/Api

var _Api2 = babelHelpers.interopRequireDefault(_Api);

var _FixtureApi = require(3000                    ); // 3000 = ../Services/FixtureApi

var _FixtureApi2 = babelHelpers.interopRequireDefault(_FixtureApi);

var _DebugConfig = require(13                     ); // 13 = ../Config/DebugConfig

var _DebugConfig2 = babelHelpers.interopRequireDefault(_DebugConfig);

var _StartupRedux = require(2968                   ); // 2968 = ../Redux/StartupRedux

var _GithubRedux = require(3005                  ); // 3005 = ../Redux/GithubRedux

var _LoginRedux = require(2654                 ); // 2654 = ../Redux/LoginRedux

var _StartupSagas = require(3006            ); // 3006 = ./StartupSagas

var _LoginSagas = require(3007          ); // 3007 = ./LoginSagas

var _GithubSagas = require(3008           ); // 3008 = ./GithubSagas

var _marked = regeneratorRuntime.mark(root);

var api = _DebugConfig2.default.useFixtures ? _FixtureApi2.default : _Api2.default.create();

function root() {
  return regeneratorRuntime.wrap(function root$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return [(0, _effects.takeLatest)(_StartupRedux.StartupTypes.STARTUP, _StartupSagas.startup), (0, _effects.takeLatest)(_LoginRedux.LoginTypes.LOGIN_REQUEST, _LoginSagas.login), (0, _effects.takeLatest)(_GithubRedux.GithubTypes.USER_REQUEST, _GithubSagas.getUserAvatar, api)];

        case 2:
        case 'end':
          return _context.stop();
      }
    }
  }, _marked, this);
}
}, 2999, null, "UI/App/Sagas/index.js");
__d(/* UI/App/Services/FixtureApi.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  getRoot: function getRoot() {
    return {
      ok: true,
      data: require(3001                   ) // 3001 = ../Fixtures/root.json
    };
  },
  getRate: function getRate() {
    return {
      ok: true,
      data: require(3002                        ) // 3002 = ../Fixtures/rateLimit.json
    };
  },
  getUser: function getUser(username) {
    var gantmanData = require(3003                      ); // 3003 = ../Fixtures/gantman.json
    var skellockData = require(3004                       ); // 3004 = ../Fixtures/skellock.json
    return {
      ok: true,
      data: username.toLowerCase() === 'gantman' ? gantmanData : skellockData
    };
  }
};
}, 3000, null, "UI/App/Services/FixtureApi.js");
__d(/* UI/App/Fixtures/root.json */function(global, require, module, exports) {module.exports = module.exports = {
  "current_user_url": "https://api.github.com/user",
  "current_user_authorizations_html_url": "https://github.com/settings/connections/applications{/client_id}",
  "authorizations_url": "https://api.github.com/authorizations",
  "code_search_url": "https://api.github.com/search/code?q={query}{&page,per_page,sort,order}",
  "commit_search_url": "https://api.github.com/search/commits?q={query}{&page,per_page,sort,order}",
  "emails_url": "https://api.github.com/user/emails",
  "emojis_url": "https://api.github.com/emojis",
  "events_url": "https://api.github.com/events",
  "feeds_url": "https://api.github.com/feeds",
  "followers_url": "https://api.github.com/user/followers",
  "following_url": "https://api.github.com/user/following{/target}",
  "gists_url": "https://api.github.com/gists{/gist_id}",
  "hub_url": "https://api.github.com/hub",
  "issue_search_url": "https://api.github.com/search/issues?q={query}{&page,per_page,sort,order}",
  "issues_url": "https://api.github.com/issues",
  "keys_url": "https://api.github.com/user/keys",
  "notifications_url": "https://api.github.com/notifications",
  "organization_repositories_url": "https://api.github.com/orgs/{org}/repos{?type,page,per_page,sort}",
  "organization_url": "https://api.github.com/orgs/{org}",
  "public_gists_url": "https://api.github.com/gists/public",
  "rate_limit_url": "https://api.github.com/rate_limit",
  "repository_url": "https://api.github.com/repos/{owner}/{repo}",
  "repository_search_url": "https://api.github.com/search/repositories?q={query}{&page,per_page,sort,order}",
  "current_user_repositories_url": "https://api.github.com/user/repos{?type,page,per_page,sort}",
  "starred_url": "https://api.github.com/user/starred{/owner}{/repo}",
  "starred_gists_url": "https://api.github.com/gists/starred",
  "team_url": "https://api.github.com/teams",
  "user_url": "https://api.github.com/users/{user}",
  "user_organizations_url": "https://api.github.com/user/orgs",
  "user_repositories_url": "https://api.github.com/users/{user}/repos{?type,page,per_page,sort}",
  "user_search_url": "https://api.github.com/search/users?q={query}{&page,per_page,sort,order}"
};
}, 3001, null, "UI/App/Fixtures/root.json");
__d(/* UI/App/Fixtures/rateLimit.json */function(global, require, module, exports) {module.exports = module.exports = {
  "resources": {
    "core": {
      "limit": 60,
      "remaining": 42,
      "reset": 1488126913
    },
    "search": {
      "limit": 10,
      "remaining": 9,
      "reset": 1488126003
    }
  },
  "rate": {
    "limit": 60,
    "remaining": 42,
    "reset": 1488126913
  }
};
}, 3002, null, "UI/App/Fixtures/rateLimit.json");
__d(/* UI/App/Fixtures/gantman.json */function(global, require, module, exports) {module.exports = module.exports = {
  "total_count": 7,
  "incomplete_results": false,
  "items": [{
    "login": "GantMan",
    "id": 997157,
    "avatar_url": "https://avatars.githubusercontent.com/u/997157?v=3",
    "gravatar_id": "",
    "url": "https://api.github.com/users/GantMan",
    "html_url": "https://github.com/GantMan",
    "followers_url": "https://api.github.com/users/GantMan/followers",
    "following_url": "https://api.github.com/users/GantMan/following{/other_user}",
    "gists_url": "https://api.github.com/users/GantMan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/GantMan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/GantMan/subscriptions",
    "organizations_url": "https://api.github.com/users/GantMan/orgs",
    "repos_url": "https://api.github.com/users/GantMan/repos",
    "events_url": "https://api.github.com/users/GantMan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/GantMan/received_events",
    "type": "User",
    "site_admin": false,
    "score": 122.12115
  }, {
    "login": "vlad-G",
    "id": 13520880,
    "avatar_url": "https://avatars.githubusercontent.com/u/13520880?v=3",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vlad-G",
    "html_url": "https://github.com/vlad-G",
    "followers_url": "https://api.github.com/users/vlad-G/followers",
    "following_url": "https://api.github.com/users/vlad-G/following{/other_user}",
    "gists_url": "https://api.github.com/users/vlad-G/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vlad-G/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vlad-G/subscriptions",
    "organizations_url": "https://api.github.com/users/vlad-G/orgs",
    "repos_url": "https://api.github.com/users/vlad-G/repos",
    "events_url": "https://api.github.com/users/vlad-G/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vlad-G/received_events",
    "type": "User",
    "site_admin": false,
    "score": 12.69848
  }, {
    "login": "gantmani",
    "id": 3034094,
    "avatar_url": "https://avatars.githubusercontent.com/u/3034094?v=3",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gantmani",
    "html_url": "https://github.com/gantmani",
    "followers_url": "https://api.github.com/users/gantmani/followers",
    "following_url": "https://api.github.com/users/gantmani/following{/other_user}",
    "gists_url": "https://api.github.com/users/gantmani/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gantmani/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gantmani/subscriptions",
    "organizations_url": "https://api.github.com/users/gantmani/orgs",
    "repos_url": "https://api.github.com/users/gantmani/repos",
    "events_url": "https://api.github.com/users/gantmani/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gantmani/received_events",
    "type": "User",
    "site_admin": false,
    "score": 11.641713
  }, {
    "login": "sgantman",
    "id": 5911526,
    "avatar_url": "https://avatars.githubusercontent.com/u/5911526?v=3",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sgantman",
    "html_url": "https://github.com/sgantman",
    "followers_url": "https://api.github.com/users/sgantman/followers",
    "following_url": "https://api.github.com/users/sgantman/following{/other_user}",
    "gists_url": "https://api.github.com/users/sgantman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sgantman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sgantman/subscriptions",
    "organizations_url": "https://api.github.com/users/sgantman/orgs",
    "repos_url": "https://api.github.com/users/sgantman/repos",
    "events_url": "https://api.github.com/users/sgantman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sgantman/received_events",
    "type": "User",
    "site_admin": false,
    "score": 7.926345
  }, {
    "login": "michaelgantman",
    "id": 16693070,
    "avatar_url": "https://avatars.githubusercontent.com/u/16693070?v=3",
    "gravatar_id": "",
    "url": "https://api.github.com/users/michaelgantman",
    "html_url": "https://github.com/michaelgantman",
    "followers_url": "https://api.github.com/users/michaelgantman/followers",
    "following_url": "https://api.github.com/users/michaelgantman/following{/other_user}",
    "gists_url": "https://api.github.com/users/michaelgantman/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/michaelgantman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/michaelgantman/subscriptions",
    "organizations_url": "https://api.github.com/users/michaelgantman/orgs",
    "repos_url": "https://api.github.com/users/michaelgantman/repos",
    "events_url": "https://api.github.com/users/michaelgantman/events{/privacy}",
    "received_events_url": "https://api.github.com/users/michaelgantman/received_events",
    "type": "User",
    "site_admin": false,
    "score": 7.926345
  }, {
    "login": "gantmanis",
    "id": 19141249,
    "avatar_url": "https://avatars.githubusercontent.com/u/19141249?v=3",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gantmanis",
    "html_url": "https://github.com/gantmanis",
    "followers_url": "https://api.github.com/users/gantmanis/followers",
    "following_url": "https://api.github.com/users/gantmanis/following{/other_user}",
    "gists_url": "https://api.github.com/users/gantmanis/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gantmanis/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gantmanis/subscriptions",
    "organizations_url": "https://api.github.com/users/gantmanis/orgs",
    "repos_url": "https://api.github.com/users/gantmanis/repos",
    "events_url": "https://api.github.com/users/gantmanis/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gantmanis/received_events",
    "type": "User",
    "site_admin": false,
    "score": 7.8813524
  }, {
    "login": "Gantman2014",
    "id": 7669410,
    "avatar_url": "https://avatars.githubusercontent.com/u/7669410?v=3",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Gantman2014",
    "html_url": "https://github.com/Gantman2014",
    "followers_url": "https://api.github.com/users/Gantman2014/followers",
    "following_url": "https://api.github.com/users/Gantman2014/following{/other_user}",
    "gists_url": "https://api.github.com/users/Gantman2014/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Gantman2014/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Gantman2014/subscriptions",
    "organizations_url": "https://api.github.com/users/Gantman2014/orgs",
    "repos_url": "https://api.github.com/users/Gantman2014/repos",
    "events_url": "https://api.github.com/users/Gantman2014/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Gantman2014/received_events",
    "type": "User",
    "site_admin": false,
    "score": 7.8813524
  }]
};
}, 3003, null, "UI/App/Fixtures/gantman.json");
__d(/* UI/App/Fixtures/skellock.json */function(global, require, module, exports) {module.exports = module.exports = {
  "total_count": 1,
  "incomplete_results": false,
  "items": [{
    "login": "skellock",
    "id": 68273,
    "avatar_url": "https://avatars.githubusercontent.com/u/68273?v=3",
    "gravatar_id": "",
    "url": "https://api.github.com/users/skellock",
    "html_url": "https://github.com/skellock",
    "followers_url": "https://api.github.com/users/skellock/followers",
    "following_url": "https://api.github.com/users/skellock/following{/other_user}",
    "gists_url": "https://api.github.com/users/skellock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/skellock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/skellock/subscriptions",
    "organizations_url": "https://api.github.com/users/skellock/orgs",
    "repos_url": "https://api.github.com/users/skellock/repos",
    "events_url": "https://api.github.com/users/skellock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/skellock/received_events",
    "type": "User",
    "site_admin": false,
    "score": 107.22611
  }]
};
}, 3004, null, "UI/App/Fixtures/skellock.json");
__d(/* UI/App/Redux/GithubRedux.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.reducer = exports.failure = exports.success = exports.request = exports.INITIAL_STATE = exports.GithubTypes = undefined;

var _createReducer;

var _reduxsauce = require(2655        ); // 2655 = reduxsauce

var _seamlessImmutable = require(14                  ); // 14 = seamless-immutable

var _seamlessImmutable2 = babelHelpers.interopRequireDefault(_seamlessImmutable);

var _createActions = (0, _reduxsauce.createActions)({
  userRequest: ['username'],
  userSuccess: ['avatar'],
  userFailure: null
}),
    Types = _createActions.Types,
    Creators = _createActions.Creators;

var GithubTypes = exports.GithubTypes = Types;
exports.default = Creators;
var INITIAL_STATE = exports.INITIAL_STATE = (0, _seamlessImmutable2.default)({
  avatar: null,
  fetching: null,
  error: null,
  username: null
});

var request = exports.request = function request(state, _ref) {
  var username = _ref.username;
  return state.merge({ fetching: true, username: username, avatar: null });
};

var success = exports.success = function success(state, action) {
  var avatar = action.avatar;

  return state.merge({ fetching: false, error: null, avatar: avatar });
};

var failure = exports.failure = function failure(state) {
  return state.merge({ fetching: false, error: true, avatar: null });
};

var reducer = exports.reducer = (0, _reduxsauce.createReducer)(INITIAL_STATE, (_createReducer = {}, babelHelpers.defineProperty(_createReducer, Types.USER_REQUEST, request), babelHelpers.defineProperty(_createReducer, Types.USER_SUCCESS, success), babelHelpers.defineProperty(_createReducer, Types.USER_FAILURE, failure), _createReducer));
}, 3005, null, "UI/App/Redux/GithubRedux.js");
__d(/* UI/App/Sagas/StartupSagas.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.selectAvatar = undefined;
exports.startup = startup;

var _effects = require(2996                ); // 2996 = redux-saga/effects

var _GithubRedux = require(3005                  ); // 3005 = ../Redux/GithubRedux

var _GithubRedux2 = babelHelpers.interopRequireDefault(_GithubRedux);

var _ramda = require(1983   ); // 1983 = ramda

var _marked = regeneratorRuntime.mark(startup);

var selectAvatar = exports.selectAvatar = function selectAvatar(state) {
  return state.github.avatar;
};

function startup(action) {
  var subObject, avatar;
  return regeneratorRuntime.wrap(function startup$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          if (__DEV__ && console.tron) {
            console.tron.log('Hello, I\'m an example of how to log via Reactotron.');

            console.tron.log({
              message: 'pass objects for better logging',
              someGeneratorFunction: selectAvatar
            });

            subObject = { a: 1, b: [1, 2, 3], c: true };

            subObject.circularDependency = subObject;
            console.tron.display({
              name: '🔥 IGNITE 🔥',
              preview: 'You should totally expand this',
              value: {
                '💃': 'Welcome to the future!',
                subObject: subObject,
                someInlineFunction: function someInlineFunction() {
                  return true;
                },
                someGeneratorFunction: startup,
                someNormalFunction: selectAvatar
              }
            });
          }
          _context.next = 3;
          return (0, _effects.select)(selectAvatar);

        case 3:
          avatar = _context.sent;

          if ((0, _ramda.is)(String, avatar)) {
            _context.next = 7;
            break;
          }

          _context.next = 7;
          return (0, _effects.put)(_GithubRedux2.default.userRequest('GantMan'));

        case 7:
        case 'end':
          return _context.stop();
      }
    }
  }, _marked, this);
}
}, 3006, null, "UI/App/Sagas/StartupSagas.js");
__d(/* UI/App/Sagas/LoginSagas.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.login = login;

var _effects = require(2996                ); // 2996 = redux-saga/effects

var _LoginRedux = require(2654                 ); // 2654 = ../Redux/LoginRedux

var _LoginRedux2 = babelHelpers.interopRequireDefault(_LoginRedux);

var _marked = regeneratorRuntime.mark(login);

function login(_ref) {
  var username = _ref.username,
      password = _ref.password;
  return regeneratorRuntime.wrap(function login$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          if (!(password === '')) {
            _context.next = 5;
            break;
          }

          _context.next = 3;
          return (0, _effects.put)(_LoginRedux2.default.loginFailure('WRONG'));

        case 3:
          _context.next = 7;
          break;

        case 5:
          _context.next = 7;
          return (0, _effects.put)(_LoginRedux2.default.loginSuccess(username));

        case 7:
        case 'end':
          return _context.stop();
      }
    }
  }, _marked, this);
}
}, 3007, null, "UI/App/Sagas/LoginSagas.js");
__d(/* UI/App/Sagas/GithubSagas.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getUserAvatar = getUserAvatar;

var _effects = require(2996                ); // 2996 = redux-saga/effects

var _ramda = require(1983   ); // 1983 = ramda

var _GithubRedux = require(3005                  ); // 3005 = ../Redux/GithubRedux

var _GithubRedux2 = babelHelpers.interopRequireDefault(_GithubRedux);

var _marked = regeneratorRuntime.mark(getUserAvatar);

function getUserAvatar(api, action) {
  var username, response, firstUser, avatar;
  return regeneratorRuntime.wrap(function getUserAvatar$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          username = action.username;
          _context.next = 3;
          return (0, _effects.call)(api.getUser, username);

        case 3:
          response = _context.sent;

          if (!response.ok) {
            _context.next = 11;
            break;
          }

          firstUser = (0, _ramda.path)(['data', 'items'], response)[0];
          avatar = firstUser.avatar_url;
          _context.next = 9;
          return (0, _effects.put)(_GithubRedux2.default.userSuccess(avatar));

        case 9:
          _context.next = 13;
          break;

        case 11:
          _context.next = 13;
          return (0, _effects.put)(_GithubRedux2.default.userFailure());

        case 13:
        case 'end':
          return _context.stop();
      }
    }
  }, _marked, this);
}
}, 3008, null, "UI/App/Sagas/GithubSagas.js");
__d(/* UI/App/Redux/SearchRedux.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.reducer = exports.cancelSearch = exports.performSearch = exports.INITIAL_STATE = exports.TemperatureTypes = undefined;

var _createReducer;

var _reduxsauce = require(2655        ); // 2655 = reduxsauce

var _seamlessImmutable = require(14                  ); // 14 = seamless-immutable

var _seamlessImmutable2 = babelHelpers.interopRequireDefault(_seamlessImmutable);

var _ramda = require(1983   ); // 1983 = ramda

var _ramdasauce = require(1048        ); // 1048 = ramdasauce

var LIST_DATA = ['sausage', 'blubber', 'pencil', 'cloud', 'moon', 'water', 'computer', 'school', 'network', 'hammer', 'walking', 'violently', 'mediocre', 'literature', 'chair', 'two', 'window', 'cords', 'musical', 'zebra', 'xylophone', 'penguin', 'home', 'dog', 'final', 'ink', 'teacher', 'fun', 'website', 'banana', 'uncle', 'softly', 'mega', 'ten', 'awesome', 'attatch', 'blue', 'internet', 'bottle', 'tight', 'zone', 'tomato', 'prison', 'hydro', 'cleaning', 'telivision', 'send', 'frog', 'cup', 'book', 'zooming', 'falling', 'evily', 'gamer', 'lid', 'juice', 'moniter', 'captain', 'bonding', 'loudly', 'thudding', 'guitar', 'shaving', 'hair', 'soccer', 'water', 'racket', 'table', 'late', 'media', 'desktop', 'flipper', 'club', 'flying', 'smooth', 'monster', 'purple', 'guardian', 'bold', 'hyperlink', 'presentation', 'world', 'national', 'comment', 'element', 'magic', 'lion', 'sand', 'crust', 'toast', 'jam', 'hunter', 'forest', 'foraging', 'silently', 'tawesomated', 'joshing', 'pong', 'RANDOM', 'WORD'];

var _createActions = (0, _reduxsauce.createActions)({
  search: ['searchTerm'],
  cancelSearch: null
}),
    Types = _createActions.Types,
    Creators = _createActions.Creators;

var TemperatureTypes = exports.TemperatureTypes = Types;
exports.default = Creators;
var INITIAL_STATE = exports.INITIAL_STATE = (0, _seamlessImmutable2.default)({
  searchTerm: '',
  searching: false,
  results: LIST_DATA
});

var performSearch = exports.performSearch = function performSearch(state, _ref) {
  var searchTerm = _ref.searchTerm;

  var results = (0, _ramda.filter)((0, _ramdasauce.startsWith)(searchTerm), LIST_DATA);
  return state.merge({ searching: true, searchTerm: searchTerm, results: results });
};

var cancelSearch = exports.cancelSearch = function cancelSearch(state) {
  return INITIAL_STATE;
};

var reducer = exports.reducer = (0, _reduxsauce.createReducer)(INITIAL_STATE, (_createReducer = {}, babelHelpers.defineProperty(_createReducer, Types.SEARCH, performSearch), babelHelpers.defineProperty(_createReducer, Types.CANCEL_SEARCH, cancelSearch), _createReducer));
}, 3009, null, "UI/App/Redux/SearchRedux.js");
;require(515);
;require(0);
//# sourceMappingURL=/index.android.map?platform=android